<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlReader.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e05b5b2-d481-4262-b7b7-7de7ac2afe07f131342c31849882b2057cbe4dede427764d9b6c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f131342c31849882b2057cbe4dede427764d9b6c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/07/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Represents a reader that provides fast, noncached, forward-only access to XML data.</source>
          <target state="translated">表示提供快速、非快取、順向 (Forward-only) 存取 XML 資料的讀取器 (Reader)。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> provides forward-only, read-only access to XML data in a document or stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 提供順向、 唯讀存取文件或資料流中的 XML 資料。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>This class conforms to the W3C <bpt id="p1">[</bpt>Extensible Markup Language (XML) 1.0 (fourth edition)<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept> and the <bpt id="p2">[</bpt>Namespaces in XML 1.0 (third edition)<ept id="p2">](https://www.w3.org/TR/REC-xml-names/)</ept> recommendations.</source>
          <target state="translated">這個類別符合 W3C<bpt id="p1">[</bpt>可延伸標記語言 (XML) 1.0 （第四版）<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept>和<bpt id="p2">[</bpt>XML 1.0 中的命名空間 （第三個版本）<ept id="p2">](https://www.w3.org/TR/REC-xml-names/)</ept>建議。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> methods let you move through XML data and read the contents of a node.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 方法可讓您的 XML 資料之間移動，然後讀取節點的內容。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The properties of the class reflect the value of the current node, which is where the reader is positioned.The <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadState%2A&gt;</ph> property value indicates the current state of the XML reader.</source>
          <target state="translated">類別的屬性會反映目前的節點是位於讀取器的值。<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadState%2A&gt;</ph>屬性值表示 XML 讀取器的目前狀態。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>For example, the property is set to <ph id="ph1">&lt;xref:System.Xml.ReadState.Initial?displayProperty=nameWithType&gt;</ph> by the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType&gt;</ph> method and <ph id="ph3">&lt;xref:System.Xml.ReadState.Closed?displayProperty=nameWithType&gt;</ph> by the <ph id="ph4">&lt;xref:System.Xml.XmlReader.Close%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">例如，屬性設定為<ph id="ph1">&lt;xref:System.Xml.ReadState.Initial?displayProperty=nameWithType&gt;</ph>由<ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType&gt;</ph>方法和<ph id="ph3">&lt;xref:System.Xml.ReadState.Closed?displayProperty=nameWithType&gt;</ph>由<ph id="ph4">&lt;xref:System.Xml.XmlReader.Close%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> also provides data conformance checks and validation against a DTD or schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 也提供資料一致性檢查，並針對 DTD 或結構描述進行驗證。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> uses a pull model to retrieve data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 使用提取模型擷取資料。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>This model:</source>
          <target state="translated">此模型中：</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Simplifies state management by a natural, top-down procedural refinement.</source>
          <target state="translated">自然、 由上而下的程序細分，藉以簡化狀態管理。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Supports multiple input streams and layering.</source>
          <target state="translated">支援多個輸入資料流和圖層。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Enables the client to give the parser a buffer into which the string is directly written, and thus avoids the necessity of an extra string copy.</source>
          <target state="translated">可讓用戶端提供的緩衝區的字串直接寫入和因此可避免您不再需要額外字串複製到其中的剖析器。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Supports selective processing.</source>
          <target state="translated">支援選擇性處理。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The client can skip items and process those that are of interest to the application.</source>
          <target state="translated">用戶端可以略過的項目，並處理那些感興趣的應用程式。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>You can also set properties in advance to manage how the XML stream is processed (for example, normalization).</source>
          <target state="translated">您也可以設定屬性事先以管理 XML 資料流 （例如，正規化） 的處理方式。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>In this section:</source>
          <target state="translated">本節內容：</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">[</bpt>Creating an XML reader<ept id="p1">](#xmlreader_create)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>建立 XML 讀取器<ept id="p1">](#xmlreader_create)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">[</bpt>Validating XML data<ept id="p1">](#xmlreader_validate)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>驗證 XML 資料<ept id="p1">](#xmlreader_validate)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">[</bpt>Data conformance<ept id="p1">](#xmlreader_data)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>資料一致性<ept id="p1">](#xmlreader_data)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">[</bpt>Navigating through nodes<ept id="p1">](#xmlreader_nodes)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>瀏覽節點<ept id="p1">](#xmlreader_nodes)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">[</bpt>Reading XML elements<ept id="p1">](#xmlreader_elements)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>讀取 XML 項目<ept id="p1">](#xmlreader_elements)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">[</bpt>Reading XML attributes<ept id="p1">](#xmlreader_attributes)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>讀取 XML 屬性<ept id="p1">](#xmlreader_attributes)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">[</bpt>Reading XML content<ept id="p1">](#xmlreader_content)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>讀取 XML 內容<ept id="p1">](#xmlreader_content)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">[</bpt>Converting to CLR types<ept id="p1">](#xmlreader_clr)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>轉換至 CLR 型別<ept id="p1">](#xmlreader_clr)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">[</bpt>Asynchronous programming<ept id="p1">](#xmlreader_async)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>非同步程式設計<ept id="p1">](#xmlreader_async)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">[</bpt>Security considerations<ept id="p1">](#xmlreader_security)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>安全性考量<ept id="p1">](#xmlreader_security)</ept></target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Creating an XML reader</source>
          <target state="translated">建立 XML 讀取器</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method to create an <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instance.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph>方法來建立<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Although the .NET Framework provides concrete implementations of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> class, such as the <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlNodeReader&gt;</ph>, and the <ph id="ph4">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> classes, we recommend that you use the specialized classes only in these scenarios:</source>
          <target state="translated">雖然.NET Framework 提供具象實作<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>類別，例如<ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph>， <ph id="ph3">&lt;xref:System.Xml.XmlNodeReader&gt;</ph>，而<ph id="ph4">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph>類別，建議您只有在這些情況下使用特製化的類別：</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>When you want to read an XML DOM subtree from an <ph id="ph1">&lt;xref:System.Xml.XmlNode&gt;</ph> object, use the <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> class.</source>
          <target state="translated">當您想要讀取從 XML DOM 樹狀子目錄<ph id="ph1">&lt;xref:System.Xml.XmlNode&gt;</ph>物件，請使用<ph id="ph2">&lt;xref:System.Xml.XmlNodeReader&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>(However, this class doesn't support DTD or schema validation.)</source>
          <target state="translated">（不過，此類別不支援 DTD 或結構描述驗證。）</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>If you must expand entities on request, you don't want your text content normalized, or you don't want default attributes returned, use the <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> class.</source>
          <target state="translated">如果您必須展開要求的實體，您不想將文字內容正規化，或您不想預設傳回的屬性，請使用<ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>To specify the set of features you want to enable on the XML reader, pass an <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType&gt;</ph> object to the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">指定您想要的 XML 讀取器上啟用的功能的設定，傳遞<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType&gt;</ph>物件<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>You can use a single <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType&gt;</ph> object to create multiple readers with the same functionality, or modify the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType&gt;</ph> object to create a new reader with a different set of features.</source>
          <target state="translated">您可以使用單一<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType&gt;</ph>物件來建立多個讀取器使用相同的功能，或修改<ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType&gt;</ph>物件以建立新的讀取器具有一組不同的功能。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>You can also easily add features to an existing reader.</source>
          <target state="translated">您也可以輕鬆地可以將功能加入現有的讀取器。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>If you don't use a <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType&gt;</ph> object, default settings are used.</source>
          <target state="translated">如果您不使用<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType&gt;</ph>物件時，會使用預設設定。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>See the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> reference page for details.</source>
          <target state="translated">請參閱<ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph>參考頁面的詳細資料。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> throws an <ph id="ph2">&lt;xref:System.Xml.XmlException&gt;</ph> on XML parse errors.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 擲回<ph id="ph2">&lt;xref:System.Xml.XmlException&gt;</ph>xml 剖析錯誤。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>After an exception is thrown, the state of the reader is not predictable.</source>
          <target state="translated">擲回例外狀況之後，讀取器的狀態不是可預測的。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>For example, the reported node type may be different from the actual node type of the current node.</source>
          <target state="translated">比方說，報告的節點類型可能不同於目前節點的實際節點類型。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadState%2A&gt;</ph> property to check whether the reader is in error state.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadState%2A&gt;</ph>屬性來檢查讀取器是否處於錯誤狀態。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Validating XML data</source>
          <target state="translated">驗證 XML 資料</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>To define the structure of an XML document and its element relationships, data types, and content constraints, you use a document type definition (DTD) or XML Schema definition language (XSD) schema.</source>
          <target state="translated">若要定義的 XML 文件和其項目關聯性、 資料類型和內容的條件約束的結構，您可以使用文件類型定義 (DTD) 或 XML 結構描述定義語言 (XSD) 結構描述。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>An XML document is considered to be well formed if it meets all the syntactical requirements defined by the <bpt id="p1">[</bpt>W3C XML 1.0 Recommendation<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept>.</source>
          <target state="translated">格式正確符合所定義的所有語法要求時，才會被視為 XML 文件<bpt id="p1">[</bpt>W3C XML 1.0 版建議事項<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>It's considered valid if it's well formed and also conforms to the constraints defined by its DTD or schema.</source>
          <target state="translated">如果它的格式正確，而且符合由其 DTD 或結構描述定義的條件約束，則會視為有效。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>(See the <bpt id="p1">[</bpt>W3C XML Schema Part 1: Structures<ept id="p1">](https://www.w3.org/TR/xmlschema-1/)</ept> and the <bpt id="p2">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p2">](https://www.w3.org/TR/xmlschema-2/)</ept>recommendations.) Therefore, although all valid XML documents are well formed, not all well-formed XML documents are valid.</source>
          <target state="translated">(請參閱<bpt id="p1">[</bpt>W3C XML 結構描述第 1 部分： 結構<ept id="p1">](https://www.w3.org/TR/xmlschema-1/)</ept>和<bpt id="p2">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p2">](https://www.w3.org/TR/xmlschema-2/)</ept>建議。)因此，雖然所有有效 XML 文件的格式都正確，但是並非所有格式正確的 XML 文件都有效。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>You can validate the data against a DTD, an inline XSD Schema, or an XSD Schema stored in an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object (a cache); these scenarios are described on the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> reference page.</source>
          <target state="translated">您可以驗證 DTD 中，內嵌 XSD 結構描述的資料或 XSD 結構描述儲存在<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>物件 （快取）; 在將說明這些情況<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph>參考頁面。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> doesn't support XML-Data Reduced (XDR) schema validation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 不支援 XML 資料精簡 (XDR) 結構描述驗證。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>You use the following settings on the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class to specify what type of validation, if any, the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instance supports.</source>
          <target state="translated">您可以使用下列設定上<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>類別，以指定哪一種驗證，如果有的話，<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>執行個體可支援。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Use this <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> member</source>
          <target state="translated">使用此<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>成員</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>To specify</source>
          <target state="translated">若要指定</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.DtdProcessing%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.DtdProcessing%2A&gt;</ph> 屬性</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Whether to allow DTD processing.</source>
          <target state="translated">是否允許 DTD 處理。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The default is to disallow DTD processing.</source>
          <target state="translated">預設不允許 DTD 處理。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationType%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationType%2A&gt;</ph> 屬性</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Whether the reader should validate data, and what type of validation to perform (DTD or schema).</source>
          <target state="translated">讀取器是否應該驗證資料，以及要執行 （DTD 或結構描述） 的驗證型別。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The default is no data validation.</source>
          <target state="translated">預設不進行資料驗證。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationEventHandler&gt;</ph> event</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationEventHandler&gt;</ph> 事件</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>An event handler for receiving information about validation events.</source>
          <target state="translated">事件處理常式以接收驗證事件的相關資訊。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>If an event handler is not provided, an <ph id="ph1">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown on the first validation error.</source>
          <target state="translated">如果未提供事件處理常式，會在第一次發生驗證錯誤時擲回 <ph id="ph1">&lt;xref:System.Xml.XmlException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationFlags%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationFlags%2A&gt;</ph> 屬性</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Additional validation options through the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;</ph> enumeration members:</source>
          <target state="translated">其他驗證選項透過<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;</ph>列舉成員：</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">-   </ph><ph id="ph2">`AllowXmlAttributes`</ph>-- Allow XML attributes (<ph id="ph3">`xml:*`</ph>) in instance documents even when they're not defined in the schema.</source>
          <target state="translated"><ph id="ph1">-   </ph><ph id="ph2">`AllowXmlAttributes`</ph>-允許 XML 屬性 (<ph id="ph3">`xml:*`</ph>) 中執行個體文件，即使它們不結構描述中定義。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The attributes are validated based on their data type.</source>
          <target state="translated">會根據屬性的資料型別來驗證該屬性。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>See the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;</ph> reference page for  the setting to use in specific scenarios.</source>
          <target state="translated">請參閱<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;</ph>，設定在特定案例中使用的參考頁面。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>(Disabled by default.)</source>
          <target state="translated">（預設為停用。）</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">-   </ph><ph id="ph2">`ProcessIdentityConstraints`</ph> --Process identity constraints (<ph id="ph3">`xs:ID`</ph>, <ph id="ph4">`xs:IDREF`</ph>, <ph id="ph5">`xs:key`</ph>, <ph id="ph6">`xs:keyref`</ph>, <ph id="ph7">`xs:unique`</ph>) encountered during validation.</source>
          <target state="translated"><ph id="ph1">-   </ph><ph id="ph2">`ProcessIdentityConstraints`</ph> -處理識別條件約束 (<ph id="ph3">`xs:ID`</ph>， <ph id="ph4">`xs:IDREF`</ph>， <ph id="ph5">`xs:key`</ph>， <ph id="ph6">`xs:keyref`</ph>， <ph id="ph7">`xs:unique`</ph>) 在驗證期間發生。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>(Enabled by default.)</source>
          <target state="translated">（依預設啟用）。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">-   </ph><ph id="ph2">`ProcessSchemaLocation`</ph> --Process schemas specified by the <ph id="ph3">`xsi:schemaLocation`</ph> or <ph id="ph4">`xsi:noNamespaceSchemaLocation`</ph> attribute.</source>
          <target state="translated"><ph id="ph1">-   </ph><ph id="ph2">`ProcessSchemaLocation`</ph> -處理所指定的結構描述<ph id="ph3">`xsi:schemaLocation`</ph>或<ph id="ph4">`xsi:noNamespaceSchemaLocation`</ph>屬性。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>(Enabled by default.)</source>
          <target state="translated">（依預設啟用）。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">-   </ph><ph id="ph2">`ProcessInlineSchema`</ph>-- Process inline XML Schemas during validation.</source>
          <target state="translated"><ph id="ph1">-   </ph><ph id="ph2">`ProcessInlineSchema`</ph>-在驗證期間處理內嵌 XML 結構描述。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>(Disabled by default.)</source>
          <target state="translated">（預設為停用。）</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">-   </ph><ph id="ph2">`ReportValidationWarnings`</ph>--Report events if a validation warning occurs.</source>
          <target state="translated"><ph id="ph1">-   </ph><ph id="ph2">`ReportValidationWarnings`</ph>-如果發生驗證警告報告事件。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>A warning is typically issued when there is no DTD or XML Schema to validate a particular element or attribute against.</source>
          <target state="translated">在沒有可以用於驗證特定項目或屬性的 DTD 或 XML 結構描述時，通常會發出警告。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationEventHandler&gt;</ph> is used for notification.</source>
          <target state="translated">會使用 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationEventHandler&gt;</ph> 來進行通知。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>(Disabled by default.)</source>
          <target state="translated">（預設為停用。）</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to use for validation.</source>
          <target state="translated">用來驗證的 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> 屬性</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> for resolving and accessing external resources.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>解析和存取外部資源。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>This can include external entities such as DTD and schemas, and any <ph id="ph1">`xs:include`</ph> or <ph id="ph2">`xs:import`</ph> elements contained in the XML Schema.</source>
          <target state="translated">這可以包括外部實體，例如 DTD 和結構描述，以及任何<ph id="ph1">`xs:include`</ph>或<ph id="ph2">`xs:import`</ph>XML 結構描述中包含的項目。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>If you don't specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>, the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> uses a default <ph id="ph3">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no user credentials.</source>
          <target state="translated">如果您未指定<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>、<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>會使用預設<ph id="ph3">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>不具使用者認證。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Data conformance</source>
          <target state="translated">資料一致性</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>XML readers that are created by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method meet the following compliance requirements by default:</source>
          <target state="translated">所建立的 XML 讀取器<ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph>方法預設符合下列相容性需求：</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>New lines and attribute value are normalized according to the W3C <bpt id="p1">[</bpt>XML 1.0 Recommendation<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept>.</source>
          <target state="translated">新行和屬性值會根據 W3C 正規化<bpt id="p1">[</bpt>XML 1.0 版建議事項<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept>。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>All entities are automatically expanded.</source>
          <target state="translated">所有實體會自動都展開。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Default attributes declared in the document type definition are always added even when the reader doesn't validate.</source>
          <target state="translated">即使在不會驗證讀取器時，會固定加入文件類型定義中宣告預設屬性。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Declaration of XML prefix mapped to the correct XML namespace URI is allowed.</source>
          <target state="translated">允許宣告的 XML 前置詞對應至正確的 XML 命名空間 URI。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The notation names in a single <ph id="ph1">`NotationType`</ph> attribute declaration and <ph id="ph2">`NmTokens`</ph> in a single <ph id="ph3">`Enumeration`</ph> attribute declaration are distinct.</source>
          <target state="translated">在單一標記法名稱<ph id="ph1">`NotationType`</ph>屬性宣告和<ph id="ph2">`NmTokens`</ph>在單一<ph id="ph3">`Enumeration`</ph>屬性宣告各有不同。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Use these <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> properties to specify the type of conformance checks you want to enable:</source>
          <target state="translated">使用這些<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>屬性，以指定類型的一致性檢查是否有您想要啟用：</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Use this <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> property</source>
          <target state="translated">使用此<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>屬性</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>To</source>
          <target state="translated">以</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Default</source>
          <target state="translated">預設</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.CheckCharacters%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.CheckCharacters%2A&gt;</ph> 屬性</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Enable or disable checks for the following:</source>
          <target state="translated">啟用或停用檢查下列項目：</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>-   Characters are within the range of legal XML characters, as defined by the <bpt id="p1">[</bpt>2.2 Characters<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/#charsets)</ept> section of the W3C XML 1.0 Recommendation.</source>
          <target state="translated">的所定義字元都是合法的 XML 字元的範圍內<bpt id="p1">[</bpt>2.2 字元<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/#charsets)</ept>的 W3C XML 1.0 版建議事項 &gt; 一節。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>-   All XML names are valid, as defined by the <bpt id="p1">[</bpt>2.3 Common Syntactic Constructs<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/#NT-Name)</ept> section of the W3C XML 1.0 Recommendation.</source>
          <target state="translated">的所定義所有的 XML 名稱都是有效， <bpt id="p1">[</bpt>2.3 Common Syntactic Constructs<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/#NT-Name)</ept>的 W3C XML 1.0 版建議事項 &gt; 一節。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>When this property is set to <ph id="ph1">`true`</ph> (default), an <ph id="ph2">&lt;xref:System.Xml.XmlException&gt;</ph> exception is thrown if the XML file contains illegal characters or invalid XML names (for example, an element name starts with a number).</source>
          <target state="translated">當這個屬性設定為<ph id="ph1">`true`</ph>（預設）、<ph id="ph2">&lt;xref:System.Xml.XmlException&gt;</ph>如果 XML 檔案包含不合法的字元或無效的 XML 名稱，會擲回例外狀況 （例如，項目名稱以數字開頭）。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Character and name checking is enabled.</source>
          <target state="translated">字元，且名稱檢查已啟用。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Setting <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.CheckCharacters%2A&gt;</ph> to <ph id="ph2">`false`</ph> turns off character checking for character entity references.</source>
          <target state="translated">將 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.CheckCharacters%2A&gt;</ph> 設為 <ph id="ph2">`false`</ph> 會關閉字元實體參考的字元檢查。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>If the reader is processing text data, it always checks that XML names are valid, regardless of this setting.</source>
          <target state="translated">如果讀取器正在處理文字資料時，它一定會檢查 XML 名稱是有效的不論此設定為何。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">**</bpt>Note:<ept id="p1">**</ept>  The XML 1.0 recommendation requires document-level conformance when a DTD is present.</source>
          <target state="translated"><bpt id="p1">**</bpt>注意：<ept id="p1">**</ept>存在 DTD 時，XML 1.0 建議事項會要求文件層級的一致性。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Therefore, if the reader is configured to support <ph id="ph1">&lt;xref:System.Xml.ConformanceLevel.Fragment?displayProperty=nameWithType&gt;</ph>, but the XML data contains a document type definition (DTD), an <ph id="ph2">&lt;xref:System.Xml.XmlException&gt;</ph> is thrown.</source>
          <target state="translated">因此，如果讀取器已設定為支援<ph id="ph1">&lt;xref:System.Xml.ConformanceLevel.Fragment?displayProperty=nameWithType&gt;</ph>，XML 資料包含文件類型定義 (DTD)，但<ph id="ph2">&lt;xref:System.Xml.XmlException&gt;</ph>就會擲回。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A&gt;</ph> 屬性</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Choose the level of conformance to enforce:</source>
          <target state="translated">選擇強制執行的一致性層級：</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Xml.ConformanceLevel.Document&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Xml.ConformanceLevel.Document&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Conforms to the rules for a <bpt id="p1">[</bpt>well-formed XML 1.0 document<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-well-formed)</ept>.</source>
          <target state="translated">符合的規則<bpt id="p1">[</bpt>語式正確的 XML 1.0 文件<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-well-formed)</ept>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Xml.ConformanceLevel.Fragment&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Xml.ConformanceLevel.Fragment&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Conforms to the rules for a well-formed document fragment that can be consumed as an <bpt id="p1">[</bpt>external parsed entity<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/#wf-entities)</ept>.</source>
          <target state="translated">符合的規則，可做為格式正確的文件片段<bpt id="p1">[</bpt>外部剖析實體<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/#wf-entities)</ept>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Xml.ConformanceLevel.Auto&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">-   </ph><ph id="ph2">&lt;xref:System.Xml.ConformanceLevel.Auto&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Conforms to the level decided by the reader.</source>
          <target state="translated">符合層級讀取器所決定。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>If the data isn't in conformance, an <ph id="ph1">&lt;xref:System.Xml.XmlException&gt;</ph> exception is thrown.</source>
          <target state="translated">如果資料不一致，在<ph id="ph1">&lt;xref:System.Xml.XmlException&gt;</ph>擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Navigating through nodes</source>
          <target state="translated">瀏覽節點</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The current node is the XML node on which the XML reader is currently positioned.</source>
          <target state="translated">目前的節點是 XML 讀取器目前所在的 XML 節點。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>All <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> methods perform operations in relation to this node, and all <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> properties reflect the value of the current node.</source>
          <target state="translated">所有<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>方法執行相對於這個節點及其所有的作業<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>屬性會反映目前節點的值。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The following methods make it easy to navigate through nodes and parse data.</source>
          <target state="translated">下列方法讓您輕鬆瀏覽節點及剖析資料。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Use this <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> method</source>
          <target state="translated">使用此<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>方法</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>To</source>
          <target state="translated">以</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Read the first node, and advance through the stream one node at a time.</source>
          <target state="translated">讀取的第一個節點，並一次前進到資料流的一個節點。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Such calls are typically performed inside a <ph id="ph1">`while`</ph> loop.</source>
          <target state="translated">這類呼叫通常會執行內部<ph id="ph1">`while`</ph>迴圈。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlReader.NodeType%2A&gt;</ph> property to get the type (for example, attribute, comment, element, and so on) of the current node.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Xml.XmlReader.NodeType%2A&gt;</ph>屬性來取得目前節點的類型 （例如屬性、 註解、 項目，等等）。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Skip the children of the current node and move to the next node.</source>
          <target state="translated">略過目前節點的子節點，然後移至下一個節點。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToContent%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlReader.MoveToContentAsync%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToContent%2A&gt;</ph> 和 <ph id="ph2">&lt;xref:System.Xml.XmlReader.MoveToContentAsync%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Skip non-content nodes and move to the next content node or to the end of the file.</source>
          <target state="translated">略過非內容節點，並移至下一個內容節點或檔案的結尾。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Non-content nodes include <ph id="ph1">&lt;xref:System.Xml.XmlNodeType.ProcessingInstruction&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlNodeType.DocumentType&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlNodeType.Comment&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.XmlNodeType.Whitespace&gt;</ph>, and <ph id="ph5">&lt;xref:System.Xml.XmlNodeType.SignificantWhitespace&gt;</ph>.</source>
          <target state="translated">非內容節點包含<ph id="ph1">&lt;xref:System.Xml.XmlNodeType.ProcessingInstruction&gt;</ph>， <ph id="ph2">&lt;xref:System.Xml.XmlNodeType.DocumentType&gt;</ph>， <ph id="ph3">&lt;xref:System.Xml.XmlNodeType.Comment&gt;</ph>， <ph id="ph4">&lt;xref:System.Xml.XmlNodeType.Whitespace&gt;</ph>，和<ph id="ph5">&lt;xref:System.Xml.XmlNodeType.SignificantWhitespace&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Content nodes include non-white space text, <ph id="ph1">&lt;xref:System.Xml.XmlNodeType.CDATA&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlNodeType.EntityReference&gt;</ph> , and <ph id="ph3">&lt;xref:System.Xml.XmlNodeType.EndEntity&gt;</ph>.</source>
          <target state="translated">內容節點包含非空白字元的文字， <ph id="ph1">&lt;xref:System.Xml.XmlNodeType.CDATA&gt;</ph>， <ph id="ph2">&lt;xref:System.Xml.XmlNodeType.EntityReference&gt;</ph> ，和<ph id="ph3">&lt;xref:System.Xml.XmlNodeType.EndEntity&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Read an element and all its children, and return a new <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance set to <ph id="ph2">&lt;xref:System.Xml.ReadState.Initial?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">讀取項目和其所有子系，並傳回新的<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>設執行個體<ph id="ph2">&lt;xref:System.Xml.ReadState.Initial?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>This method is useful for creating boundaries around XML elements; for example, if you want to pass data to another component for processing and you want to limit how much of your data the component can access.</source>
          <target state="translated">這個方法可用於建立 XML 項目; 周圍的界限例如，如果您想要將資料傳遞至另一個元件進行處理，而且您想要限制資料中有多少元件可以存取。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>See the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType&gt;</ph> reference page for an example of navigating through a text stream one node at a time and displaying the type of each node.</source>
          <target state="translated">請參閱<ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType&gt;</ph>參考頁面的範例，一次瀏覽的文字資料流的一個節點，並顯示每個節點的類型。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The following sections describe how you can read specific types of data, such as elements, attributes, and typed data.</source>
          <target state="translated">下列各節描述您可以讀取特定類型的資料，例如元素、 屬性的方式，並具類型的資料。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Reading XML elements</source>
          <target state="translated">讀取 XML 項目</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The following table lists the methods and properties that the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> class provides for processing elements.</source>
          <target state="translated">下表列出的方法和屬性，<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>類別所提供可處理的項目。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>After the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> is positioned on an element, the node properties, such as <ph id="ph2">&lt;xref:System.Xml.XmlReader.Name%2A&gt;</ph>, reflect the element values.</source>
          <target state="translated">將 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 定位於項目上後，節點屬性 (如 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Name%2A&gt;</ph>) 就會反映項目值。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>In addition to the members described below, any of the general methods and properties of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> class can also be used to process elements.</source>
          <target state="translated">除了下面說明的成員之外，還可以使用 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 類別的任意一般方法及屬性來處理項目。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>For example, you can use the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadInnerXml%2A&gt;</ph> method to read the contents of an element.</source>
          <target state="translated">例如，您可以使用 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadInnerXml%2A&gt;</ph> 方法讀取項目的內容。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>See section 3.1 of the <bpt id="p1">[</bpt>W3C XML 1.0 Recommendation<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-starttags)</ept> for definitions of start tags, end tags, and empty element tags.</source>
          <target state="translated">請參閱第 3.1 節<bpt id="p1">[</bpt>W3C XML 1.0 版建議事項<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-starttags)</ept>定義的開始標記、 結束標記及空白項目標記。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Use this <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> member</source>
          <target state="translated">使用此<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>成員</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>To</source>
          <target state="translated">以</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;</ph> method</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;</ph> 方法</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Check if the current node is a start tag or an empty element tag.</source>
          <target state="translated">檢查目前節點是否為開始標記或空白項目標記。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadStartElement%2A&gt;</ph> method</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadStartElement%2A&gt;</ph> 方法</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Check that the current node is an element and advance the reader to the next node (calls <ph id="ph1">&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;</ph> followed by <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>).</source>
          <target state="translated">檢查目前節點是項目，並使讀取器前進至下一個節點 (呼叫<ph id="ph1">&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;</ph>後面<ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadEndElement%2A&gt;</ph> method</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadEndElement%2A&gt;</ph> 方法</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Check that the current node is an end tag and advance the reader to the next node.</source>
          <target state="translated">檢查目前節點為結尾標記，並使讀取器前進至下一個節點。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementString%2A&gt;</ph> method</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementString%2A&gt;</ph> 方法</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Read a text-only element.</source>
          <target state="translated">讀取純文字的項目。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadToDescendant%2A&gt;</ph> method</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadToDescendant%2A&gt;</ph> 方法</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Advance the XML reader to the next descendant (child) element that has the specified name.</source>
          <target state="translated">使 XML 讀取器前進至下的下階 （子系） 項目具有指定的名稱。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadToNextSibling%2A&gt;</ph> method</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadToNextSibling%2A&gt;</ph> 方法</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Advance the XML reader to the next sibling element that has the specified name.</source>
          <target state="translated">前往下一個同層級元素具有指定的名稱的 XML 讀取器。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.IsEmptyElement%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.IsEmptyElement%2A&gt;</ph> 屬性</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Check if the current element has an end element tag.</source>
          <target state="translated">檢查目前的項目是否有結尾項目標記。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>For example:</source>
          <target state="translated">例如: </target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">-   </ph><ph id="ph2">`&lt;item num="123"/&gt;`</ph> (<ph id="ph3">&lt;xref:System.Xml.XmlReader.IsEmptyElement%2A&gt;</ph> is <ph id="ph4">`true`</ph>.)</source>
          <target state="translated"><ph id="ph1">-   </ph><ph id="ph2">`&lt;item num="123"/&gt;`</ph> (<ph id="ph3">&lt;xref:System.Xml.XmlReader.IsEmptyElement%2A&gt;</ph>是<ph id="ph4">`true`</ph>。)</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">-   </ph><ph id="ph2">`&lt;item num="123"&gt; &lt;/item&gt;`</ph> (<ph id="ph3">&lt;xref:System.Xml.XmlReader.IsEmptyElement%2A&gt;</ph> is <ph id="ph4">`false`</ph>, although the element's content is empty.)</source>
          <target state="translated"><ph id="ph1">-   </ph><ph id="ph2">`&lt;item num="123"&gt; &lt;/item&gt;`</ph> (<ph id="ph3">&lt;xref:System.Xml.XmlReader.IsEmptyElement%2A&gt;</ph>是<ph id="ph4">`false`</ph>，不過項目的內容是空的。)</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>For an example of reading the text content of elements, see the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadString%2A&gt;</ph> method.</source>
          <target state="translated">讀取項目的文字內容的範例，請參閱<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadString%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The following example processes elements by using a <ph id="ph1">`while`</ph> loop.</source>
          <target state="translated">下列範例會處理項目使用<ph id="ph1">`while`</ph>迴圈。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Reading XML attributes</source>
          <target state="translated">讀取 XML 屬性</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>XML attributes are most commonly found on elements, but they're also allowed on XML declaration and document type nodes.</source>
          <target state="translated">XML 最常找不到屬性項目，但它們也允許在 XML 宣告與文件類型節點上。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>When positioned on an element node, the <ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToAttribute%2A&gt;</ph> method lets you go through the attribute list of the element.</source>
          <target state="translated">當定位項目節點上，<ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToAttribute%2A&gt;</ph>方法可讓您瀏覽屬性清單的項目。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Note that after <ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToAttribute%2A&gt;</ph> has been called, node properties such as <ph id="ph2">&lt;xref:System.Xml.XmlReader.Name%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlReader.NamespaceURI%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Xml.XmlReader.Prefix%2A&gt;</ph> reflect the properties of that attribute, not the properties of the element the attribute belongs to.</source>
          <target state="translated">請注意，之後<ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToAttribute%2A&gt;</ph>已經呼叫，節點屬性例如<ph id="ph2">&lt;xref:System.Xml.XmlReader.Name%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Xml.XmlReader.NamespaceURI%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Xml.XmlReader.Prefix%2A&gt;</ph>反映該屬性的屬性、 不包含屬性之項目的屬性所屬。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> class provides these methods and properties to read and process attributes on elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>類別會提供這些方法和屬性來讀取和處理項目的屬性。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Use this <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> member</source>
          <target state="translated">使用此<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>成員</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>To</source>
          <target state="translated">以</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.HasAttributes%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.HasAttributes%2A&gt;</ph> 屬性</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Check whether the current node has any attributes.</source>
          <target state="translated">請檢查目前節點是否具有任何屬性。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.AttributeCount%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.AttributeCount%2A&gt;</ph> 屬性</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Get the number of attributes on the current element.</source>
          <target state="translated">取得目前的項目上的屬性數目。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToFirstAttribute%2A&gt;</ph> method</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToFirstAttribute%2A&gt;</ph> 方法</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Move to the first attribute in an element.</source>
          <target state="translated">移至項目中的第一個屬性。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToNextAttribute%2A&gt;</ph> method</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToNextAttribute%2A&gt;</ph> 方法</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Move to the next attribute in an element.</source>
          <target state="translated">移至下一個屬性項目中。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToAttribute%2A&gt;</ph> method</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToAttribute%2A&gt;</ph> 方法</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Move to a specified attribute.</source>
          <target state="translated">移至指定的屬性。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.GetAttribute%2A&gt;</ph> method or <ph id="ph2">&lt;xref:System.Xml.XmlReader.Item%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.GetAttribute%2A&gt;</ph> 方法或<ph id="ph2">&lt;xref:System.Xml.XmlReader.Item%2A&gt;</ph>屬性</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Get the value of a specified attribute.</source>
          <target state="translated">取得指定之屬性的值。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.IsDefault%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.IsDefault%2A&gt;</ph> 屬性</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Check whether the current node is an attribute that was generated from the default value defined in the DTD or schema.</source>
          <target state="translated">請檢查目前節點是否是產生自 DTD 或結構描述中定義的預設值的屬性。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToElement%2A&gt;</ph> method</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToElement%2A&gt;</ph> 方法</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Move to the element that owns the current attribute.</source>
          <target state="translated">移至擁有目前屬性的項目。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Use this method to return to an element after navigating through its attributes.</source>
          <target state="translated">使用此方法傳回的項目之後瀏覽它的屬性。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadAttributeValue%2A&gt;</ph> method</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadAttributeValue%2A&gt;</ph> 方法</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Parse the attribute value into one or more <ph id="ph1">`Text`</ph>, <ph id="ph2">`EntityReference`</ph>, or <ph id="ph3">`EndEntity`</ph> nodes.</source>
          <target state="translated">屬性值剖析成一或多個<ph id="ph1">`Text`</ph>， <ph id="ph2">`EntityReference`</ph>，或<ph id="ph3">`EndEntity`</ph>節點。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Any of the general <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> methods and properties can also be used to process attributes.</source>
          <target state="translated">任何一般 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 方法和屬性都可用於處理屬性 (Attribute)。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>For example, after the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> is positioned on an attribute, the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Name%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> properties reflect the values of the attribute.</source>
          <target state="translated">例如，將 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 置於屬性 (Attribute) 上之後，<ph id="ph2">&lt;xref:System.Xml.XmlReader.Name%2A&gt;</ph> 及 <ph id="ph3">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> 屬性會反映屬性 (Attribute) 的值。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>You can also use any of the content <ph id="ph1">`Read`</ph> methods to get the value of the attribute.</source>
          <target state="translated">您還可使用任何內容 <ph id="ph1">`Read`</ph> 方法，以取得屬性的值。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Xml.XmlReader.AttributeCount%2A&gt;</ph> property to navigate through all the attributes on an element.</source>
          <target state="translated">這個範例會使用<ph id="ph1">&lt;xref:System.Xml.XmlReader.AttributeCount%2A&gt;</ph>來瀏覽項目上的所有屬性的屬性。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToNextAttribute%2A&gt;</ph> method in a <ph id="ph2">`while`</ph> loop to navigate through the attributes.</source>
          <target state="translated">這個範例會使用<ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToNextAttribute%2A&gt;</ph>方法中的<ph id="ph2">`while`</ph>迴圈來瀏覽屬性。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">**</bpt>Reading attributes on XML declaration nodes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>讀取 XML 宣告節點上的屬性<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>When the XML reader is positioned on an XML declaration node, the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> property returns the version, standalone, and encoding information as a single string.</source>
          <target state="translated">XML 讀取器定位於 XML 宣告節點上，當<ph id="ph1">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph>屬性會傳回版本、 獨立以及以單一字串形式編碼資訊。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> objects created by the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.Xml.XmlTextReader&gt;</ph> class, and the <ph id="ph4">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> class expose the version, standalone, and encoding items as attributes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 所建立的物件<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph>方法，<ph id="ph3">&lt;xref:System.Xml.XmlTextReader&gt;</ph>類別，而<ph id="ph4">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph>類別公開的版本、 獨立以及做為屬性的編碼項目。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">**</bpt>Reading attributes on document type nodes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>讀取文件類型節點上的屬性<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>When the XML reader is positioned on a document type node, the <ph id="ph1">&lt;xref:System.Xml.XmlReader.GetAttribute%2A&gt;</ph> method and <ph id="ph2">&lt;xref:System.Xml.XmlReader.Item%2A&gt;</ph> property can be used to return the values for the SYSTEM and PUBLIC literals.</source>
          <target state="translated">XML 讀取器定位於文件類型節點上，當<ph id="ph1">&lt;xref:System.Xml.XmlReader.GetAttribute%2A&gt;</ph>方法和<ph id="ph2">&lt;xref:System.Xml.XmlReader.Item%2A&gt;</ph>屬性可以用來傳回系統和公用的常值的值。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>For example, calling <ph id="ph1">`reader.GetAttribute("PUBLIC")`</ph> returns the PUBLIC value.</source>
          <target state="translated">例如，呼叫 <ph id="ph1">`reader.GetAttribute("PUBLIC")`</ph> 會傳回 PUBLIC 值。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">**</bpt>Reading attributes on processing instruction nodes<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>正在讀取處理指示節點的屬性<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> is positioned on a processing instruction node, the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> property returns the entire text content.</source>
          <target state="translated">將 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 置於處理指示節點時，<ph id="ph2">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> 屬性會傳回全部文字內容。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Items in the processing instruction node aren't treated as attributes.</source>
          <target state="translated">處理指示節點中的項目不被視為屬性。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>They can't be read with the <ph id="ph1">&lt;xref:System.Xml.XmlReader.GetAttribute%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlReader.MoveToAttribute%2A&gt;</ph> method.</source>
          <target state="translated">無法與閱讀<ph id="ph1">&lt;xref:System.Xml.XmlReader.GetAttribute%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Xml.XmlReader.MoveToAttribute%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Reading XML content</source>
          <target state="translated">讀取 XML 內容</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The XMLReader class includes the following members that read content from an XML file and return the content as string values.</source>
          <target state="translated">XMLReader 類別包含下列成員，可從 XML 檔案讀取內容，並將內容傳回為字串值。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>(To return CLR types, see the <bpt id="p1">[</bpt>next section<ept id="p1">](#xmlreader_clr)</ept>.)</source>
          <target state="translated">(若要傳回的 CLR 型別，請參閱<bpt id="p1">[</bpt>下一節<ept id="p1">](#xmlreader_clr)</ept>。)</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Use this <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> member</source>
          <target state="translated">使用此<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>成員</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>To</source>
          <target state="translated">以</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> property</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> 屬性</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Get the text content of the current node.</source>
          <target state="translated">取得目前節點的文字內容。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The value returned depends on the node type; see the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> reference page for details.</source>
          <target state="translated">傳回的值取決於節點類型。請參閱<ph id="ph1">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph>參考頁面的詳細資料。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadString%2A&gt;</ph> method</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadString%2A&gt;</ph> 方法</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Get the content of an element or text node as a string.</source>
          <target state="translated">取得項目或文字節點的內容做為字串。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>This method stops on processing instructions and comments.</source>
          <target state="translated">這個方法會停止的處理指示與註解。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>For details on how this method handles specific node types, see the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadString%2A&gt;</ph> reference page.</source>
          <target state="translated">如需有關這個方法會如何處理特定的節點類型的詳細資訊，請參閱<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadString%2A&gt;</ph>參考頁面。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadInnerXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadInnerXmlAsync%2A&gt;</ph> methods</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadInnerXml%2A&gt;</ph> 和 <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadInnerXmlAsync%2A&gt;</ph> 方法</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Get all the content of the current node, including the markup, but excluding start and end tags.</source>
          <target state="translated">取得目前的節點，包括標記，但不包括開始和結束標記的所有內容。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>For example, for:</source>
          <target state="translated">例如：</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadInnerXml%2A&gt;</ph> returns:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadInnerXml%2A&gt;</ph> 會傳回：</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadOuterXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadOuterXmlAsync%2A&gt;</ph> methods</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadOuterXml%2A&gt;</ph> 和 <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadOuterXmlAsync%2A&gt;</ph> 方法</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Get all the content of the current node and its children, including markup and start/end tags.</source>
          <target state="translated">取得目前節點及其子系，包括標記和開始/結束標記的所有內容。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>For example, for:</source>
          <target state="translated">例如：</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadOuterXml%2A&gt;</ph> returns:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadOuterXml%2A&gt;</ph> 會傳回：</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Converting to CLR types</source>
          <target state="translated">轉換至 CLR 型別</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>You can use the members of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> class (listed in the following table) to read XML data and return values as common language runtime (CLR) types instead of strings.</source>
          <target state="translated">您可以使用的成員<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>（列於下表） 的類別讀取 XML 資料和傳回值，做為通用語言執行平台 (CLR) 型別，而不是字串。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>These members enable you to get values in the representation that is most appropriate for your coding task without having to manually parse or convert string values.</source>
          <target state="translated">這些成員可讓您取得值，而不需要以手動方式剖析或轉換的字串值是最適合您的程式碼撰寫工作的表示法。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The <bpt id="p1">**</bpt>ReadElementContentAs<ept id="p1">**</ept> methods can only be called on element node types.</source>
          <target state="translated"><bpt id="p1">**</bpt>ReadElementContentAs<ept id="p1">**</ept>只有項目節點型別上呼叫方法。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>These methods cannot be used on elements that contain child elements or mixed content.</source>
          <target state="translated">這些方法無法用於包含項目子系或混合內容的項目。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>When called, the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object reads the start tag, reads the element content, and then moves past the end element tag.</source>
          <target state="translated">呼叫後，<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 物件會讀取開始標記、讀取項目內容，然後移動到超過結尾項目標記以後的部分。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Processing instructions and comments are ignored and entities are expanded.</source>
          <target state="translated">處理指示及註解會略過，並且實體會展開。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The <bpt id="p1">**</bpt>ReadContentAs<ept id="p1">**</ept> methods read the text content at the current reader position, and if the XML data doesn't have any schema or data type information associated with it, convert the text content to the requested return type.</source>
          <target state="translated"><bpt id="p1">**</bpt>ReadContentAs<ept id="p1">**</ept>方法讀取的文字內容，讀取器目前的位置，和 XML 資料不需要任何結構描述或資料類型與它相關聯的資訊時，將文字內容轉換成要求的傳回型別。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Text, white space, significant white space and CDATA sections are concatenated.</source>
          <target state="translated">文字、泛空白字元、顯著泛空白字元及 CDATA 區段都是串連的。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Comments and processing instructions are skipped, and entity references are automatically resolved.</source>
          <target state="translated">註解和處理指示會略過，並會自動解析實體參考。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> class uses the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](https://www.w3.org/TR/xmlschema-2/)</ept>recommendation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>類別會使用所定義的規則<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](https://www.w3.org/TR/xmlschema-2/)</ept>建議。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Use this <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> method</source>
          <target state="translated">使用此<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>方法</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>To return this CLR type</source>
          <target state="translated">傳回這個 CLR 類型</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBoolean%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBoolean%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBoolean%2A&gt;</ph> 和 <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBoolean%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsDateTime%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsDateTime%2A&gt;</ph> 和 <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsDouble%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAsDouble%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsDouble%2A&gt;</ph> 和 <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAsDouble%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsLong%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAsLong%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsLong%2A&gt;</ph> 和 <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAsLong%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsInt%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAsInt%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsInt%2A&gt;</ph> 和 <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAsInt%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsString%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAsString%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsString%2A&gt;</ph> 和 <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAsString%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAs%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph> 和 <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAs%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The type you specify with the <ph id="ph1">`returnType`</ph> parameter</source>
          <target state="translated">您指定的型別<ph id="ph1">`returnType`</ph>參數</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsObject%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAsObject%2A&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsObject%2A&gt;</ph> 和 <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadElementContentAsObject%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The most appropriate type, as specified by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ValueType%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">所指定的最適當類型<ph id="ph1">&lt;xref:System.Xml.XmlReader.ValueType%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>See <bpt id="p1">[</bpt>Type Support in the System.Xml Classes<ept id="p1">](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)</ept> for mapping information.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>System.Xml 類別中的型別支援<ept id="p1">](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)</ept>對應資訊。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>If an element can't easily be converted to a CLR type because of its format, you can use a schema mapping to ensure a successful conversion.</source>
          <target state="translated">如果項目輕鬆地無法轉換成 CLR 型別中，但會因為其格式，所以，您可以使用結構描述對應，以確保成功的轉換。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The following example uses an .xsd file to convert the <ph id="ph1">`hire-date`</ph> element to the <ph id="ph2">`xs:date`</ph> type, and then uses the <ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A&gt;</ph> method to return the element as a <ph id="ph4">&lt;xref:System.DateTime&gt;</ph> object.</source>
          <target state="translated">下列範例會使用.xsd 檔案轉換<ph id="ph1">`hire-date`</ph>元素<ph id="ph2">`xs:date`</ph>類型，然後使用<ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A&gt;</ph>方法來傳回項目，做為<ph id="ph4">&lt;xref:System.DateTime&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">**</bpt>Input (hireDate.xml):<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>輸入 (hireDate.xml):<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">**</bpt>Schema (hireDate.xsd):<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>結構描述 (hireDate.xsd):<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">**</bpt>Code:<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>程式碼：<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">**</bpt>Output:<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>輸出：<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Asynchronous programming</source>
          <target state="translated">非同步程式設計</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Most of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> methods have asynchronous counterparts that have "Async" at the end of their method names.</source>
          <target state="translated">大部分的<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>方法都有非同步的對應具有"Async"結尾的方法名稱。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>For example, the asynchronous equivalent of <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsObject%2A&gt;</ph> is <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadContentAsObjectAsync%2A&gt;</ph>.</source>
          <target state="translated">例如，非同步的對等<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsObject%2A&gt;</ph>是<ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadContentAsObjectAsync%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The following methods can be used with asynchronous method calls:</source>
          <target state="translated">下列方法可以搭配非同步方法呼叫：</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The following sections describe asynchronous usage for methods that don't have asynchronous counterparts.</source>
          <target state="translated">下列章節說明非同步方法沒有非同步對應項目使用方式。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">**</bpt>ReadStartElement method<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>ReadStartElement 方法<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">**</bpt>ReadEndElement method<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>ReadEndElement 方法<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">**</bpt>ReadToNextSibling method<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>ReadToNextSibling 方法<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">**</bpt>ReadToFollowing method<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>ReadToFollowing 方法<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><bpt id="p1">**</bpt>ReadToDescendant method<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>ReadToDescendant 方法<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Security considerations</source>
          <target state="translated">安全性考量</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Consider the following when working with the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> class:</source>
          <target state="translated">使用時，請考慮下列<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>類別：</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Exceptions thrown from the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can disclose path information that you might not want bubbled up to your app.</source>
          <target state="translated">從擲回的例外狀況<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>可以揭露路徑資訊，您可能不想反昇至您的應用程式。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Your app must catch exceptions and process them appropriately.</source>
          <target state="translated">您的應用程式必須捕捉例外狀況，並予以適當處理。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Do not enable DTD processing if you're concerned about denial of service issues or if you're dealing with untrusted sources.</source>
          <target state="translated">請勿啟用 DTD 處理，如果您擔心阻絕服務問題，或如果您正在處理不受信任的來源。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>DTD processing is disabled by default for <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> objects created by the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">預設為停用 DTD 處理<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>所建立的物件<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>If you have DTD processing enabled, you can use the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> to restrict the resources that the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> can access.</source>
          <target state="translated">如果已啟用 DTD 處理，則可使用 <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> 限制 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 可存取的資源。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>You can also design your app so that the XML processing is memory and time constrained.</source>
          <target state="translated">您也可以設計您的應用程式，讓 XML 處理具有記憶體和時間限制。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>For example, you can configure time-out limits in your ASP.NET app.</source>
          <target state="translated">例如，您可以設定逾時限制在 ASP.NET 應用程式中。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>XML data can include references to external resources such as a schema file.</source>
          <target state="translated">XML 資料可以包括外部資源的參考，如結構描述檔案。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>By default, external resources are resolved by using an <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> object with no user credentials.</source>
          <target state="translated">根據預設，使用來解析外部資源<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>不具使用者認證物件。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>You can secure this further by doing one of the following:</source>
          <target state="translated">您可以透過執行下列其中一項作業，進一步保護它：</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Restrict the resources that the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property to an <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object.</source>
          <target state="translated">藉由將 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 屬性設為 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> 物件，限制 <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> 可以存取的資源。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Do not allow the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to open any external resources by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">藉由將 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 屬性設為 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph>，來禁止 <ph id="ph3">`null`</ph> 開啟外部資源。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> validation flags of an <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object aren't set by default.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph>和<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph>驗證旗標<ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>物件不預設設定。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>This helps to protect the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> against schema-based attacks when it is processing XML data from an untrusted source.</source>
          <target state="translated">在處理來自不受信任來源的 XML 資料時，這有助於保護 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>，防止其遭受以結構描述為基礎的攻擊。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>When these flags are set, the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object is used to resolve schema locations encountered in the instance document in the <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">當設定這些旗標時，<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> 物件的 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 可用於解析在 <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> 的執行個體文件中發現的結構描述位置。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property is set to <ph id="ph2">`null`</ph>, schema locations aren't resolved even if the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> and <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph> validation flags are set.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph>屬性設定為<ph id="ph2">`null`</ph>，結構描述位置不是解析即使<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph>和<ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation&gt;</ph>設定驗證旗標。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Schemas added during validation add new types and can change the validation outcome of the document being validated.</source>
          <target state="translated">驗證期間加入的結構描述會加入新型別，並可變更要驗證之物件的驗證結果。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>As a result, external schemas should only be resolved from trusted sources.</source>
          <target state="translated">因此，外部結構描述應僅從受信任的來源解析。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>We recommend disabling the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> flag when validating untrusted, large XML documents in high availability scenarios against a schema that has identity constraints over a large part of the document.</source>
          <target state="translated">我們建議您停用<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph>時驗證未受信任、 大型 XML 文件中針對高於大部分文件的識別條件約束的結構描述的高可用性案例的旗標。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>This flag is enabled by default.</source>
          <target state="translated">預設會啟用這個旗標。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>XML data can contain a large number of attributes, namespace declarations, nested elements and so on that require a substantial amount of time to process.</source>
          <target state="translated">XML 資料可以包含需要相當長時間來處理的大量屬性、命名空間宣告、巢狀項目等。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>To limit the size of the input that is sent to the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>, you can:</source>
          <target state="translated">若要限制的輸入會傳送至大小<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>，您可以：</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Limit the size of the document by setting the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A&gt;</ph> property.</source>
          <target state="translated">藉由設定限制的文件大小<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Limit the number of characters that result from expanding entities by setting the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A&gt;</ph> property.</source>
          <target state="translated">產生自展開實體所設定的字元數目限制<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Create a custom <ph id="ph1">`IStream`</ph> implementation for the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">建立自訂<ph id="ph1">`IStream`</ph>實作<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph> method can be used to handle large streams of data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph>方法可以用來處理資料的大量資料流。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>This method reads a small number of characters at a time instead of allocating a single string for the whole value.</source>
          <target state="translated">此方法每次會讀取較少數量的字元，而不是為整個值配置單一字串。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>When reading an XML document with a large number of unique local names, namespaces, or prefixes, a problem can occur.</source>
          <target state="translated">當讀取具有大量唯一本機名稱、 命名空間或前置詞的 XML 文件，可能會發生問題。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>If you are using a class that derives from <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>, and you call the <ph id="ph2">&lt;xref:System.Xml.XmlReader.LocalName%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlReader.Prefix%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Xml.XmlReader.NamespaceURI%2A&gt;</ph> property for each item, the returned string is added to a <ph id="ph5">&lt;xref:System.Xml.NameTable&gt;</ph>.</source>
          <target state="translated">如果您使用的類別，衍生自<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>，而且您呼叫<ph id="ph2">&lt;xref:System.Xml.XmlReader.LocalName%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Xml.XmlReader.Prefix%2A&gt;</ph>，或<ph id="ph4">&lt;xref:System.Xml.XmlReader.NamespaceURI%2A&gt;</ph>每個項目的屬性，傳回的字串加入至<ph id="ph5">&lt;xref:System.Xml.NameTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The collection held by the <ph id="ph1">&lt;xref:System.Xml.NameTable&gt;</ph> never decreases in size, creating a virtual memory leak of the string handles.</source>
          <target state="translated">所持有的集合<ph id="ph1">&lt;xref:System.Xml.NameTable&gt;</ph>永遠不會減少的大小，建立字串控制代碼的虛擬記憶體遺漏。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>One mitigation for this is to derive from the <ph id="ph1">&lt;xref:System.Xml.NameTable&gt;</ph> class and enforce a maximum size quota.</source>
          <target state="translated">一個緩和措施，這是衍生自<ph id="ph1">&lt;xref:System.Xml.NameTable&gt;</ph>類別並強制執行最大大小配額。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>(There is no way to prevent the use of a <ph id="ph1">&lt;xref:System.Xml.NameTable&gt;</ph>, or to switch the <ph id="ph2">&lt;xref:System.Xml.NameTable&gt;</ph> when it is full).</source>
          <target state="translated">(沒有任何方法，以避免使用<ph id="ph1">&lt;xref:System.Xml.NameTable&gt;</ph>，或切換<ph id="ph2">&lt;xref:System.Xml.NameTable&gt;</ph>配額已滿時)。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Another mitigation is to avoid using the properties mentioned and instead use the <ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToAttribute%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;</ph> method where possible; those methods don't return strings and thus avoid the problem of overfilling the <ph id="ph3">&lt;xref:System.Xml.NameTable&gt;</ph> collection.</source>
          <target state="translated">另一個風險降低措施是避免使用提到的屬性，並改用<ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToAttribute%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;</ph>方法請盡可能; 這些方法不傳回的字串，並進而避免造成量問題<ph id="ph3">&lt;xref:System.Xml.NameTable&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> objects can contain sensitive information such as user credentials.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 物件可以包含機密資訊 (如使用者認證)。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>An untrusted component could use the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object and its user credentials to create <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> objects to read data.</source>
          <target state="translated">不受信任的元件可能會使用 <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> 物件及其使用者認證，建立 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 物件來讀取資料。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Be careful when caching <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> objects, or when passing the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object from one component to another.</source>
          <target state="translated">快取時要小心<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>物件，或傳遞時<ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>物件到另一個元件。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Do not accept supporting components, such as <ph id="ph1">&lt;xref:System.Xml.NameTable&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph>, and <ph id="ph3">&lt;xref:System.Xml.XmlResolver&gt;</ph> objects, from an untrusted source.</source>
          <target state="translated">請不要接受來自不受信任來源的支援元件，如 <ph id="ph1">&lt;xref:System.Xml.NameTable&gt;</ph>、<ph id="ph2">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> 及 <ph id="ph3">&lt;xref:System.Xml.XmlResolver&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The following example code shows how to use the asynchronous API to parse XML.</source>
          <target state="translated">下列程式碼範例示範如何使用非同步 API 來剖析 XML。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.#ctor">
          <source>This constructor is called by derived class constructors to initialize state in this type.</source>
          <target state="translated">在衍生的類別建構函式來初始化此類型中的狀態會呼叫這個建構函式。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.AttributeCount">
          <source>When overridden in a derived class, gets the number of attributes on the current node.</source>
          <target state="translated">在衍生類別中覆寫時，取得目前節點上的屬性數目。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.AttributeCount">
          <source>The number of attributes on the current node.</source>
          <target state="translated">目前節點的屬性數目。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.AttributeCount">
          <source>This property is relevant to <ph id="ph1">`Element`</ph>, <ph id="ph2">`DocumentType`</ph> and <ph id="ph3">`XmlDeclaration`</ph> nodes only.</source>
          <target state="translated">這個屬性是適用於<ph id="ph1">`Element`</ph>，<ph id="ph2">`DocumentType`</ph>和<ph id="ph3">`XmlDeclaration`</ph>只節點。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.AttributeCount">
          <source>(Other node types do not have attributes.)</source>
          <target state="translated">（其他節點型別沒有屬性。）</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.AttributeCount">
          <source>The following example displays all attributes on the current node.</source>
          <target state="translated">下列範例顯示目前的節點上的所有屬性。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.AttributeCount">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.AttributeCount">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.BaseURI">
          <source>When overridden in a derived class, gets the base URI of the current node.</source>
          <target state="translated">在衍生類別中覆寫時，取得目前節點的基底 URI。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.BaseURI">
          <source>The base URI of the current node.</source>
          <target state="translated">目前節點的基底 URI。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.BaseURI">
          <source>A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</source>
          <target state="translated">網路的 XML 文件由使用各種 W3C 標準包含機制彙總的資料區塊組成，因此包含來自不同位置的節點。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.BaseURI">
          <source>DTD entities are an example of this, but this is not limited to DTDs.</source>
          <target state="translated">DTD 實體就是一個範例，但這並不限於使用 Dtd。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.BaseURI">
          <source>The base URI tells you where these nodes came from.</source>
          <target state="translated">基底 URI 會告訴您這些節點的來源。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.BaseURI">
          <source>If there is no base URI for the nodes being returned (for example, they were parsed from an in-memory string), <ph id="ph1">`String.Empty`</ph> is returned.</source>
          <target state="translated">如果是要傳回的節點沒有基底 URI （例如，它們從字串中剖析記憶體中），<ph id="ph1">`String.Empty`</ph>傳回。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.BaseURI">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.BaseURI">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.CanReadBinaryContent">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> implements the binary content read methods.</source>
          <target state="translated">取得值，這個值表示 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 是否會實作二進位內容讀取方法。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.CanReadBinaryContent">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the binary content read methods are implemented; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果實作二進位內容讀取方法，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.CanReadBinaryContent">
          <source>The binary content read methods include the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBase64%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadContentAsBinHex%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A&gt;</ph> methods.</source>
          <target state="translated">二進位內容讀取方法包括<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBase64%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadContentAsBinHex%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.CanReadBinaryContent">
          <source>If this property returns <ph id="ph1">`false`</ph> a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is returned when any of the binary read methods is called.</source>
          <target state="translated">如果這個屬性會傳回<ph id="ph1">`false`</ph><ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>任何二進位檔讀取時，會傳回呼叫方法。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.CanReadBinaryContent">
          <source>All Microsoft .NET Framework implementations of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> class return <ph id="ph2">`true`</ph> for this property.</source>
          <target state="translated">所有的 Microsoft.NET Framework 實作<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>類別傳回<ph id="ph2">`true`</ph>這個屬性。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.CanReadBinaryContent">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.CanReadBinaryContent">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.CanReadValueChunk">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> implements the <ph id="ph2">&lt;see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /&gt;</ph> method.</source>
          <target state="translated">取得值，表示 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 是否會實作 <ph id="ph2">&lt;see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.CanReadValueChunk">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> implements the <ph id="ph3">&lt;see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /&gt;</ph> method; otherwise <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 會實作 <ph id="ph3">&lt;see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /&gt;</ph> 方法，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.CanReadValueChunk">
          <source>Text parsing <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> objects that were created from the static <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method always return <ph id="ph3">`true`</ph>.</source>
          <target state="translated">剖析文字<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>靜態所建立的物件<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph>方法一律會傳回<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.CanReadValueChunk">
          <source>All other Microsoft .NET Framework implementations of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> class, including the <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph> class, return <ph id="ph3">`false`</ph>.</source>
          <target state="translated">其他所有的 Microsoft.NET Framework 實作<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>類別，包括<ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph>類別中，傳回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.CanReadValueChunk">
          <source>If this property returns <ph id="ph1">`false`</ph> a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is returned when the <ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph> method is called.</source>
          <target state="translated">如果這個屬性會傳回<ph id="ph1">`false`</ph><ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>時，會傳回<ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph>方法呼叫。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.CanReadValueChunk">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.CanReadValueChunk">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.CanResolveEntity">
          <source>Gets a value indicating whether this reader can parse and resolve entities.</source>
          <target state="translated">取得值，指出這個讀取器是否可以剖析和解析實體。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.CanResolveEntity">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader can parse and resolve entities; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果讀取器可以剖析和解析實體，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.CanResolveEntity">
          <source>This property always returns <ph id="ph1">`false`</ph> for implementations of <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> that do not support DTD information.</source>
          <target state="translated">這個屬性永遠傳回<ph id="ph1">`false`</ph>為實作<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>不支援 DTD 資訊。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.CanResolveEntity">
          <source>In this case, calling <ph id="ph1">&lt;xref:System.Xml.XmlReader.ResolveEntity%2A&gt;</ph> throws an exception.</source>
          <target state="translated">在此情況下，呼叫<ph id="ph1">&lt;xref:System.Xml.XmlReader.ResolveEntity%2A&gt;</ph>擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.CanResolveEntity">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.CanResolveEntity">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Close">
          <source>When overridden in a derived class, changes the <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.ReadState" /&gt;</ph> to <ph id="ph2">&lt;see cref="F:System.Xml.ReadState.Closed" /&gt;</ph>.</source>
          <target state="translated">在衍生類別中覆寫時，將 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.ReadState" /&gt;</ph> 變更為 <ph id="ph2">&lt;see cref="F:System.Xml.ReadState.Closed" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Close">
          <source>This method also releases any resources held during reading.</source>
          <target state="translated">這個方法也會釋放讀取時所持有的任何資源。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Close">
          <source>If <ph id="ph1">&lt;xref:System.Xml.XmlReader.Close%2A&gt;</ph> has already been called, no action is performed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Xml.XmlReader.Close%2A&gt;</ph>已經過呼叫，會執行任何動作。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Close">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Close">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance.</source>
          <target state="translated">建立新的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Most of the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> overloads include a <ph id="ph2">`settings`</ph> parameter that accepts an <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object.</source>
          <target state="translated">大部分的<ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph>多載包括<ph id="ph2">`settings`</ph>參數可接受<ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>You can use this object to:</source>
          <target state="translated">您可以使用此物件來：</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Specify which features you want supported on the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object.</source>
          <target state="translated">指定您想要支援哪些功能<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Reuse the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object to create multiple readers.</source>
          <target state="translated">重複使用<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>物件以建立多個讀取器。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>You can use the same settings to create multiple readers with the same functionality.</source>
          <target state="translated">您可以使用相同設定來建立具有相同功能的多個讀取器。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Or, you can modify the settings on an <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> instance and create a new reader with a different set of features.</source>
          <target state="translated">或者，您可以修改設定上<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>執行個體，並建立新的讀取器具有一組不同的功能。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Add features to an existing XML reader.</source>
          <target state="translated">將功能加入現有的 XML 讀取器。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method can accept another <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> 方法可以接受其他 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The underlying <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object can be a user-defined reader, a <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph> object, or another <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> instance that you want to add additional features to.</source>
          <target state="translated">基礎<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>物件可以是使用者定義的讀取器，<ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph>物件或另一個<ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph>您想要加入其他功能的執行個體。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Take full advantage of features such as better conformance checking and compliance to the <bpt id="p1">[</bpt>XML 1.0 (fourth edition)<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept>recommendation that are available only on <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> objects created by the static <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">充分利用功能較佳的一致性檢查和相容性，例如<bpt id="p1">[</bpt>XML 1.0 （第四版）<ept id="p1">](https://www.w3.org/TR/2006/REC-xml-20060816/)</ept>僅適用的建議<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>建立由靜態物件<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Although the .NET Framework includes concrete implementations of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> class, such as the <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlNodeReader&gt;</ph>, and the <ph id="ph4">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> classes, we recommend that you create <ph id="ph5">&lt;xref:System.Xml.XmlReader&gt;</ph> instances by using the <ph id="ph6">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">雖然.NET Framework 包含具象實作<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>類別，例如<ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph>， <ph id="ph3">&lt;xref:System.Xml.XmlNodeReader&gt;</ph>，而<ph id="ph4">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph>類別，建議您建立<ph id="ph5">&lt;xref:System.Xml.XmlReader&gt;</ph>所使用的執行個體<ph id="ph6">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Default settings</source>
          <target state="translated">預設設定</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>If you use a <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> overload that doesn't accept a <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object, the following default reader settings are used:</source>
          <target state="translated">如果您使用<ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph>不接受的多載<ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>物件時，會使用下列的預設讀取器設定：</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Setting</source>
          <target state="translated">設定</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Default</source>
          <target state="translated">預設</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>An empty <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object</source>
          <target state="translated">空白的 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 物件</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> enabled</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints&gt;</ph> 已啟用</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>A new <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> object.</source>
          <target state="translated">新的 <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Starting with the .NET Framework 4.5.2, this setting has a default value of <ph id="ph1">`null`</ph>.</source>
          <target state="translated">從開始使用.NET Framework 4.5.2，這項設定有預設值是<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Settings for common scenarios</source>
          <target state="translated">常見的案例設定</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Here are the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> properties you should set for some of the typical XML reader scenarios.</source>
          <target state="translated">以下是<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>某些一般的 XML 讀取器案例，您應該設定的屬性。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Requirement</source>
          <target state="translated">需求</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Set</source>
          <target state="translated">設定</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Data must be a well-formed XML document.</source>
          <target state="translated">資料必須是語式正確的 XML 文件。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Xml.ConformanceLevel.Document&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A&gt;</ph> 若要<ph id="ph2">&lt;xref:System.Xml.ConformanceLevel.Document&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Data must be a well-formed XML parsed entity.</source>
          <target state="translated">資料必須是語式正確的 XML 剖析實體。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Xml.ConformanceLevel.Fragment&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A&gt;</ph> 若要<ph id="ph2">&lt;xref:System.Xml.ConformanceLevel.Fragment&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Data must be validated against a DTD.</source>
          <target state="translated">資料必須根據 DTD 進行驗證。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.DtdProcessing%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Xml.DtdProcessing.Parse&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.DtdProcessing%2A&gt;</ph> 至 <ph id="ph2">&lt;xref:System.Xml.DtdProcessing.Parse&gt;</ph></target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationType%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Xml.ValidationType.DTD&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationType%2A&gt;</ph> 若要<ph id="ph2">&lt;xref:System.Xml.ValidationType.DTD&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Data must be validated against an XML schema.</source>
          <target state="translated">資料必須根據 XML 結構描述進行驗證。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationType%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Xml.ValidationType.Schema&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationType%2A&gt;</ph> 至 <ph id="ph2">&lt;xref:System.Xml.ValidationType.Schema&gt;</ph></target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Schemas%2A&gt;</ph> to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to use for validation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Schemas%2A&gt;</ph> 若要<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>用來驗證。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Note that <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> doesn't support XML-Data Reduced (XDR) schema validation.</source>
          <target state="translated">請注意，<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>不支援 XML 資料精簡 (XDR) 結構描述驗證。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Data must be validated against an inline XML schema.</source>
          <target state="translated">資料必須針對內嵌 XML 結構描述進行驗證。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationType%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Xml.ValidationType.Schema&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationType%2A&gt;</ph> 至 <ph id="ph2">&lt;xref:System.Xml.ValidationType.Schema&gt;</ph></target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationFlags%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationFlags%2A&gt;</ph> 若要<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Type support.</source>
          <target state="translated">型別支援。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationType%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Xml.ValidationType.Schema&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationType%2A&gt;</ph> 至 <ph id="ph2">&lt;xref:System.Xml.ValidationType.Schema&gt;</ph></target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Schemas%2A&gt;</ph> to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to use.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Schemas%2A&gt;</ph> 若要<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>使用。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> doesn't support XML-Data Reduced (XDR) schema validation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 不支援 XML 資料精簡 (XDR) 結構描述驗證。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Asynchronous programming</source>
          <target state="translated">非同步程式設計</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>In synchronous mode, the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method reads the first chunk of data from the buffer of the file, stream, or text reader.</source>
          <target state="translated">在同步模式中，<ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph>方法會讀取檔案、 資料流或文字讀取器的緩衝區中的第一個區塊的資料。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>This may throw an exception if an I/O operation fails.</source>
          <target state="translated">這可能會擲回例外狀況，如果 I/O 作業失敗。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>In asynchronous mode, the first I/O operation occurs with a read operation, so exceptions that arise will be thrown when the read operation occurs.</source>
          <target state="translated">在非同步模式中，第一項 I/O 作業發生的讀取作業，因此讀取的作業發生時所引發例外狀況將會擲回。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Security considerations</source>
          <target state="translated">安全性考量</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>By default, the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> uses an <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> object with no user credentials to open resources.</source>
          <target state="translated">根據預設，<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>使用<ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>不具使用者認證來開啟資源的物件。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>This means that, by default, the XML reader can access any location that doesn't require credentials.</source>
          <target state="translated">這表示根據預設，XML 讀取器可以存取不需要認證的任何位置。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to control access to resources:</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph>屬性來控制資源的存取權：</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Set <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> to an <ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object to restrict the resources that the XML reader can access.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph>至<ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>来限制 XML 讀取器可以存取的資源物件。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>Set <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> to <ph id="ph2">`null`</ph> to prevent the XML reader from opening any external resources.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph>至<ph id="ph2">`null`</ph>來防止 XML 讀取器開啟外部資源。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>This example creates an XML reader that strips insignificant white space, strips comments, and performs fragment-level conformance checking.</source>
          <target state="translated">這個範例會建立 XML 讀取器，以去除無意義的空格、 去除註解，並執行片段層級的一致性檢查。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The following example uses an <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with default credentials to access a file.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>與預設的認證來存取的檔案。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>The following code wraps a reader instance within another reader.</source>
          <target state="translated">下列程式碼包裝在另一個讀取器中的讀取器執行個體。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>This example chains readers to add DTD and XML schema validation.</source>
          <target state="translated">這個範例鏈結將 DTD，並將 XML 結構描述驗證讀取器。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>The stream that contains the XML data.</source>
          <target state="translated">包含 XML 資料的資料流。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> scans the first bytes of the stream looking for a byte order mark or other sign of encoding.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 會掃描資料流的前幾個位元組，以尋找位元組順序標記或其他編碼符號。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.</source>
          <target state="translated">決定編碼後，會使用該編碼繼續讀取資料流，處理流程也會繼續將輸入剖析成 (Unicode) 字元的資料流。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance using the specified stream with default settings.</source>
          <target state="translated">使用指定的資料流，以預設設定建立新的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>An object that is used to read the XML data in the stream.</source>
          <target state="translated">用以在資料流中讀取 XML 資料的物件。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>An <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object with default settings is used to create the reader.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>物件以預設設定用來建立讀取器。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>If you wish to specify the features to support on the created reader, use the overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object as one of its arguments, and pass in an <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object with the correct settings.</source>
          <target state="translated">如果您想要指定要在建立讀取器上支援的功能，使用的多載，<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>物件做為其引數，其中，並傳入<ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>物件以正確的設定。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>A default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</source>
          <target state="translated">預設值<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>無認證用來存取任何外部的資源，例如文件類型定義 (DTD)、 實體、 結構描述，等等。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>Starting with the .NET Framework 4.5.2, no default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is provided.</source>
          <target state="translated">從.NET Framework 4.5.2，沒有預設值<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>提供。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>If your solution targets the .NET Framework 4.5.2 or later versions, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">如果您的方案的目標.NET Framework 4.5.2 或更新版本中，指定<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>使用<ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>If the external resource is located on a network resource that requires authentication, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">如果在需要驗證的網路資源位於外部的資源，請指定<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>具有必要認證使用<ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>The created <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object expands entity references and performs XML normalization of new line characters.</source>
          <target state="translated">建立<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>物件擴充實體參考，並執行 XML 正規化的新行字元。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object that reads from a <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph>.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>讀取的物件<ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;paramref name="input" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> 值為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> does not have sufficient permissions to access the location of the XML data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 沒有足夠的權限可以存取 XML 資料的位置。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
          <source>The text reader from which to read the XML data.</source>
          <target state="translated">要從中讀取 XML 資料的文字閱讀器。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
          <source>A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration is not used by the XML reader to decode the data stream.</source>
          <target state="translated">因為文字閱讀器會傳回 Unicode 字元的資料流，所以 XML 讀取器不會使用 XML 宣告中所指定的編碼方式，來解碼資料流。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance by using the specified text reader.</source>
          <target state="translated">使用指定的文字讀取器，建立新的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
          <source>An object that is used to read the XML data in the stream.</source>
          <target state="translated">用以在資料流中讀取 XML 資料的物件。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
          <source>An <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object with default settings is used to create the reader.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>物件以預設設定用來建立讀取器。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
          <source>If you wish to specify the features to support on the created reader, use the overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object as one of its arguments, and pass in an <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object with the correct settings.</source>
          <target state="translated">如果您想要指定要在建立讀取器上支援的功能，使用的多載，<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>物件做為其引數，其中，並傳入<ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>物件以正確的設定。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
          <source>A default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</source>
          <target state="translated">預設值<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>無認證用來存取任何外部的資源，例如文件類型定義 (DTD)、 實體、 結構描述，等等。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
          <source>Starting with the .NET Framework 4.5.2, no default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is provided.</source>
          <target state="translated">從.NET Framework 4.5.2，沒有預設值<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>提供。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
          <source>If your solution targets the .NET Framework 4.5.2 or later versions, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">如果您的方案的目標.NET Framework 4.5.2 或更新版本中，指定<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>使用<ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
          <source>If the external resource is located on a network resource that requires authentication, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">如果在需要驗證的網路資源位於外部的資源，請指定<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>具有必要認證使用<ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
          <source>The created <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object expands entity references and performs XML normalization of new line characters.</source>
          <target state="translated">建立<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>物件擴充實體參考，並執行 XML 正規化的新行字元。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph> class to read an XML string.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph>類別讀取 XML 字串。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;paramref name="input" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> 值為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>The URI for the file that contains the XML data.</source>
          <target state="translated">包含 XML 資料之檔案的 URI。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlUrlResolver" /&gt;</ph> class is used to convert the path to a canonical data representation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlUrlResolver" /&gt;</ph> 類別可用來將路徑轉換成正式的資料代表。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance with specified URI.</source>
          <target state="translated">使用指定的 URI，建立新的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>An object that is used to read the XML data in the stream.</source>
          <target state="translated">用以在資料流中讀取 XML 資料的物件。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>An <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object with default settings is used to create the reader.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>物件以預設設定用來建立讀取器。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>If you wish to specify the features to support on the created reader, use the overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object as one of its arguments, and pass in an <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object with the correct settings.</source>
          <target state="translated">如果您想要指定要在建立讀取器上支援的功能，使用的多載，<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>物件做為其引數，其中，並傳入<ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>物件以正確的設定。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>A default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</source>
          <target state="translated">預設值<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>無認證用來存取任何外部的資源，例如文件類型定義 (DTD)、 實體、 結構描述，等等。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>Starting with the .NET Framework 4.5.2, no default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is provided.</source>
          <target state="translated">從.NET Framework 4.5.2，沒有預設值<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>提供。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>If your solution targets the .NET Framework 4.5.2 or later versions, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">如果您的方案的目標.NET Framework 4.5.2 或更新版本中，指定<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>使用<ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>If the external resource is located on a network resource that requires authentication, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">如果在需要驗證的網路資源位於外部的資源，請指定<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>具有必要認證使用<ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>The created <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object expands entity references and performs XML normalization of new line characters.</source>
          <target state="translated">建立<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>物件擴充實體參考，並執行 XML 正規化的新行字元。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object that reads XML data file specified by the URI.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>讀取 XML 資料檔案 URI 所指定的物件。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="inputUri" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputUri" /&gt;</ph> 值為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> does not have sufficient permissions to access the location of the XML data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 沒有足夠的權限可以存取 XML 資料的位置。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>The file identified by the URI does not exist.</source>
          <target state="translated">URI 所識別的檔案不存在。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>In the <bpt id="p1">[</bpt>.NET for Windows Store apps<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the <bpt id="p2">[</bpt>Portable Class Library<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, catch the base class exception, <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph>, instead.</source>
          <target state="translated">在<bpt id="p1">[</bpt>適用於 Windows 市集應用程式的 .NET<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> 或是<bpt id="p2">[</bpt>可攜式類別庫<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>中，改為攔截基底類別例外狀況 <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String)">
          <source>The URI format is not correct.</source>
          <target state="translated">URI 格式不正確。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>The stream that contains the XML data.</source>
          <target state="translated">包含 XML 資料的資料流。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> scans the first bytes of the stream looking for a byte order mark or other sign of encoding.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 會掃描資料流的前幾個位元組，以尋找位元組順序標記或其他編碼符號。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.</source>
          <target state="translated">決定編碼後，會使用該編碼繼續讀取資料流，處理流程也會繼續將輸入剖析成 (Unicode) 字元的資料流。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>The settings for the new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance.</source>
          <target state="translated">新 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 執行個體的設定。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>This value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個值可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance with the specified stream and settings.</source>
          <target state="translated">使用指定的資料流及設定，建立新的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>An object that is used to read the XML data in the stream.</source>
          <target state="translated">用以在資料流中讀取 XML 資料的物件。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>By default an <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</source>
          <target state="translated">根據預設<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>無認證用來存取任何外部的資源，例如文件類型定義 (DTD)、 實體、 結構描述，等等。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>Starting with the .NET Framework 4.5.2, no default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is provided.</source>
          <target state="translated">從.NET Framework 4.5.2，沒有預設值<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>提供。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>If your solution targets the .NET Framework 4.5.2 or later versions, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">如果您的方案的目標.NET Framework 4.5.2 或更新版本中，指定<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>使用<ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>If the external resource is located on a network resource that requires authentication, use the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property to specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
          <target state="translated">如果在需要驗證的網路資源位於外部的資源，請使用<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph>屬性來指定<ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph>具有必要認證。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>You can use one of the following methods to control which resources the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access:</source>
          <target state="translated">您可以使用下列方法之一來控制哪些資源<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>可以存取：</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>Restrict the resources that the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to an <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object.</source>
          <target state="translated">藉由將 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 屬性設為 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> 物件，限制 <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> 可以存取的資源。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>Do not allow the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to open any external resources by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">藉由將 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 屬性設為 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph>，來禁止 <ph id="ph3">`null`</ph> 開啟外部資源。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>The created <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object expands entity references and performs XML normalization of new line characters.</source>
          <target state="translated">建立<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>物件擴充實體參考，並執行 XML 正規化的新行字元。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
          <source>The <ph id="ph1">&lt;paramref name="input" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> 值為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>The text reader from which to read the XML data.</source>
          <target state="translated">要從中讀取 XML 資料的文字閱讀器。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the XML reader to decode the data stream.</source>
          <target state="translated">因為文字閱讀器會傳回 Unicode 字元的資料流，所以 XML 讀取器不會使用 XML 宣告中所指定的編碼方式，來解碼資料流。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>The settings for the new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">新的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 的設定。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>This value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個值可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance by using the specified text reader and settings.</source>
          <target state="translated">使用指定的文字讀取器及設定，建立新的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>An object that is used to read the XML data in the stream.</source>
          <target state="translated">用以在資料流中讀取 XML 資料的物件。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>By default an <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</source>
          <target state="translated">根據預設<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>無認證用來存取任何外部的資源，例如文件類型定義 (DTD)、 實體、 結構描述，等等。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>Starting with the .NET Framework 4.5.2, no default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is provided.</source>
          <target state="translated">從.NET Framework 4.5.2，沒有預設值<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>提供。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>If your solution targets the .NET Framework 4.5.2 or later versions, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">如果您的方案的目標.NET Framework 4.5.2 或更新版本中，指定<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>使用<ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>If the external resource is located on a network resource that requires authentication, use the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property to specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
          <target state="translated">如果在需要驗證的網路資源位於外部的資源，請使用<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph>屬性來指定<ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph>具有必要認證。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>You can use one of the following methods to control which resources the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access:</source>
          <target state="translated">您可以使用下列方法之一來控制哪些資源<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>可以存取：</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>Restrict the resources that the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to an <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object.</source>
          <target state="translated">藉由將 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 屬性設為 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> 物件，限制 <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> 可以存取的資源。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>Do not allow the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to open any external resources by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">藉由將 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 屬性設為 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph>，來禁止 <ph id="ph3">`null`</ph> 開啟外部資源。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>The created <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object expands entity references and performs XML normalization of new line characters.</source>
          <target state="translated">建立<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>物件擴充實體參考，並執行 XML 正規化的新行字元。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
          <source>The <ph id="ph1">&lt;paramref name="input" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> 值為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>The URI for the file containing the XML data.</source>
          <target state="translated">包含 XML 資料之檔案的 URI。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> object on the <ph id="ph2">&lt;see cref="T:System.Xml.XmlReaderSettings" /&gt;</ph> object is used to convert the path to a canonical data representation.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Xml.XmlReaderSettings" /&gt;</ph> 物件上的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> 物件是用於將路徑轉換成標準資料表示。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>If <ph id="ph1">&lt;see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, a new <ph id="ph3">&lt;see cref="T:System.Xml.XmlUrlResolver" /&gt;</ph> object is used.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>，則會使用新的 <ph id="ph3">&lt;see cref="T:System.Xml.XmlUrlResolver" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>The settings for the new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance.</source>
          <target state="translated">新 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 執行個體的設定。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>This value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個值可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance by using the specified URI and settings.</source>
          <target state="translated">使用指定的 URI 和設定，建立新的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>An object that is used to read the XML data in the stream.</source>
          <target state="translated">用以在資料流中讀取 XML 資料的物件。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>By default an <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</source>
          <target state="translated">根據預設<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>無認證用來存取任何外部的資源，例如文件類型定義 (DTD)、 實體、 結構描述，等等。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>Starting with the .NET Framework 4.5.2, no default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is provided.</source>
          <target state="translated">從.NET Framework 4.5.2，沒有預設值<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>提供。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>If your solution targets the .NET Framework 4.5.2 or later versions, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">如果您的方案的目標.NET Framework 4.5.2 或更新版本中，指定<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>使用<ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>This means that the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access any locations that does not require authentication.</source>
          <target state="translated">這表示<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>可以存取不需要驗證的任何位置。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>If the external resource is located on a network resource that requires authentication, use the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property to specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
          <target state="translated">如果在需要驗證的網路資源位於外部的資源，請使用<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph>屬性來指定<ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph>具有必要認證。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>You can restrict the resources that the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to an <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object.</source>
          <target state="translated">您可以限制的資源，<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>可以藉由設定存取<ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph>屬性<ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>The created <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object expands entity references and performs XML normalization of new line characters.</source>
          <target state="translated">建立<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>物件擴充實體參考，並執行 XML 正規化的新行字元。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object that supports document type definition (DTD) validation.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>支援文件類型定義 (DTD) 驗證的物件。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>The <ph id="ph1">&lt;paramref name="inputUri" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputUri" /&gt;</ph> 值為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>The file specified by the URI cannot be found.</source>
          <target state="translated">找不到由 URI 指定的檔案。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>In the <bpt id="p1">[</bpt>.NET for Windows Store apps<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the <bpt id="p2">[</bpt>Portable Class Library<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, catch the base class exception, <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph>, instead.</source>
          <target state="translated">在<bpt id="p1">[</bpt>適用於 Windows 市集應用程式的 .NET<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> 或是<bpt id="p2">[</bpt>可攜式類別庫<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>中，改為攔截基底類別例外狀況 <ph id="ph1">&lt;see cref="T:System.FormatException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
          <source>The URI format is not correct.</source>
          <target state="translated">URI 格式不正確。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>The object that you want to use as the underlying XML reader.</source>
          <target state="translated">您想要當做基礎 XML 讀取器使用的物件。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>The settings for the new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance.</source>
          <target state="translated">新 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 執行個體的設定。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>The conformance level of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReaderSettings" /&gt;</ph> object must either match the conformance level of the underlying reader, or it must be set to <ph id="ph2">&lt;see cref="F:System.Xml.ConformanceLevel.Auto" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReaderSettings" /&gt;</ph> 物件的一致性層級必須符合基礎讀取器的一致性層級，或是必須設定為 <ph id="ph2">&lt;see cref="F:System.Xml.ConformanceLevel.Auto" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance by using the specified XML reader and settings.</source>
          <target state="translated">使用指定的 XML 讀取器和設定，建立新的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>An object that is wrapped around the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated">包裝在指定 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 物件周圍的物件。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>This method allows you add additional features to an underlying <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object.</source>
          <target state="translated">這個方法可讓您將其他功能加入基礎<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>The underlying <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object can be another <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> object created by the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method, or an <ph id="ph4">&lt;xref:System.Xml.XmlReader&gt;</ph> object created using one of the concrete <ph id="ph5">&lt;xref:System.Xml.XmlReader&gt;</ph> implementations.</source>
          <target state="translated">基礎<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>物件可以是另一個<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>所建立的物件<ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph>方法，或<ph id="ph4">&lt;xref:System.Xml.XmlReader&gt;</ph>建立使用其中一個實體物件<ph id="ph5">&lt;xref:System.Xml.XmlReader&gt;</ph>實作。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>A default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no credentials is used to access any external resources such as a schema.</source>
          <target state="translated">預設值<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>無認證用來存取任何外部的資源，例如結構描述。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>Starting with the .NET Framework 4.5.2, no default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is provided.</source>
          <target state="translated">從.NET Framework 4.5.2，沒有預設值<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>提供。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>If your solution targets the .NET Framework 4.5.2 or later versions, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">如果您的方案的目標.NET Framework 4.5.2 或更新版本中，指定<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>使用<ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>If the external resource is located on a network resource that requires authentication, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">如果在需要驗證的網路資源位於外部的資源，請指定<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>具有必要認證使用<ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>You can use one of the following methods to control which resources the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access:</source>
          <target state="translated">您可以使用下列方法之一來控制哪些資源<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>可以存取：</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>Restrict the resources that the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to an <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object.</source>
          <target state="translated">藉由將 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 屬性設為 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> 物件，限制 <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> 可以存取的資源。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>Do not allow the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to open any external resources by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">藉由將 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 屬性設為 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph>，來禁止 <ph id="ph3">`null`</ph> 開啟外部資源。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>The created <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object expands entity references and performs XML normalization of new line characters.</source>
          <target state="translated">建立<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>物件擴充實體參考，並執行 XML 正規化的新行字元。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>The following example creates a validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object that is wrapped around an <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> object.</source>
          <target state="translated">下列範例會建立驗證<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>要包裝的物件<ph id="ph2">&lt;xref:System.Xml.XmlNodeReader&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>The <ph id="ph1">&lt;paramref name="reader" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> 值為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReaderSettings" /&gt;</ph> object specifies a conformance level that is not consistent with conformance level of the underlying reader.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReaderSettings" /&gt;</ph> 物件所指定的一致性層級與基礎讀取器的一致性層級不一致。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> is in an <ph id="ph2">&lt;see cref="F:System.Xml.ReadState.Error" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Xml.ReadState.Closed" /&gt;</ph> state.</source>
          <target state="translated">基礎 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 處於 <ph id="ph2">&lt;see cref="F:System.Xml.ReadState.Error" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="F:System.Xml.ReadState.Closed" /&gt;</ph> 狀態。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>The stream that contains the XML data.</source>
          <target state="translated">包含 XML 資料的資料流。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> scans the first bytes of the stream looking for a byte order mark or other sign of encoding.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 會掃描資料流的前幾個位元組，以尋找位元組順序標記或其他編碼符號。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.</source>
          <target state="translated">決定編碼後，會使用該編碼繼續讀取資料流，處理流程也會繼續將輸入剖析成 (Unicode) 字元的資料流。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>The settings for the new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance.</source>
          <target state="translated">新 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 執行個體的設定。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>This value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個值可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>The base URI for the entity or document being read.</source>
          <target state="translated">所讀取之實體或文件的基底 URI。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>This value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個值可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source><bpt id="p1">**</bpt>Security Note<ept id="p1">**</ept> The base URI is used to resolve the relative URI of the XML document.</source>
          <target state="translated"><bpt id="p1">**</bpt>安全性提示<ept id="p1">**</ept>：系統會使用基底 URI 來解析 XML 文件的相對 URI。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>Do not use a base URI from an untrusted source.</source>
          <target state="translated">請不要使用來自不受信任來源的基底 URI。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance using the specified stream, base URI, and settings.</source>
          <target state="translated">使用指定的資料流、基底 URI 和設定，建立新的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>An object that is used to read the XML data in the stream.</source>
          <target state="translated">用以在資料流中讀取 XML 資料的物件。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>By default an <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</source>
          <target state="translated">根據預設<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>無認證用來存取任何外部的資源，例如文件類型定義 (DTD)、 實體、 結構描述，等等。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>Starting with the .NET Framework 4.5.2, no default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is provided.</source>
          <target state="translated">從.NET Framework 4.5.2，沒有預設值<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>提供。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>If your solution targets the .NET Framework 4.5.2 or later versions, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">如果您的方案的目標.NET Framework 4.5.2 或更新版本中，指定<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>使用<ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>If the external resource is located on a network resource that requires authentication, use the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property to specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
          <target state="translated">如果在需要驗證的網路資源位於外部的資源，請使用<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph>屬性來指定<ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph>具有必要認證。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>You can use one of the following methods to control which resources the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access:</source>
          <target state="translated">您可以使用下列方法之一來控制哪些資源<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>可以存取：</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>Restrict the resources that the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to an <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object.</source>
          <target state="translated">藉由將 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 屬性設為 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> 物件，限制 <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> 可以存取的資源。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>Do not allow the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to open any external resources by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">藉由將 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 屬性設為 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph>，來禁止 <ph id="ph3">`null`</ph> 開啟外部資源。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>The created <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object expands entity references and performs XML normalization of new line characters.</source>
          <target state="translated">建立<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>物件擴充實體參考，並執行 XML 正規化的新行字元。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="input" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> 值為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The stream that contains the XML data.</source>
          <target state="translated">包含 XML 資料的資料流。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> scans the first bytes of the stream looking for a byte order mark or other sign of encoding.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 會掃描資料流的前幾個位元組，以尋找位元組順序標記或其他編碼符號。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.</source>
          <target state="translated">決定編碼後，會使用該編碼繼續讀取資料流，處理流程也會繼續將輸入剖析成 (Unicode) 字元的資料流。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The settings for the new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance.</source>
          <target state="translated">新 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 執行個體的設定。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>This value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個值可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The context information required to parse the XML fragment.</source>
          <target state="translated">剖析 XML 片段所需的內容資訊。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The context information can include the <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> to use, encoding, namespace scope, the current <bpt id="p1">&lt;c&gt;</bpt>xml:lang<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>xml:space<ept id="p2">&lt;/c&gt;</ept> scope, base URI, and document type definition.</source>
          <target state="translated">內容資訊可包含要使用的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>、編碼方式、命名空間範圍、目前的 <bpt id="p1">&lt;c&gt;</bpt>xml:lang<ept id="p1">&lt;/c&gt;</ept> 和 <bpt id="p2">&lt;c&gt;</bpt>xml:space<ept id="p2">&lt;/c&gt;</ept> 範圍、基底 URI，以及文件類型定義。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>This value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個值可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance using the specified stream, settings, and context information for parsing.</source>
          <target state="translated">使用剖析用的指定資料流、設定和內容資訊，建立新的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>An object that is used to read the XML data in the stream.</source>
          <target state="translated">用以在資料流中讀取 XML 資料的物件。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>By default an <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</source>
          <target state="translated">根據預設<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>無認證用來存取任何外部的資源，例如文件類型定義 (DTD)、 實體、 結構描述，等等。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>Starting with the .NET Framework 4.5.2, no default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is provided.</source>
          <target state="translated">從.NET Framework 4.5.2，沒有預設值<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>提供。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>If your solution targets the .NET Framework 4.5.2 or later versions, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">如果您的方案的目標.NET Framework 4.5.2 或更新版本中，指定<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>使用<ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>If the external resource is located on a network resource that requires authentication, use the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property to specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
          <target state="translated">如果在需要驗證的網路資源位於外部的資源，請使用<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph>屬性來指定<ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph>具有必要認證。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>You can use one of the following methods to control which resources the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access:</source>
          <target state="translated">您可以使用下列方法之一來控制哪些資源<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>可以存取：</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>Restrict the resources that the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to an <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object.</source>
          <target state="translated">藉由將 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 屬性設為 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> 物件，限制 <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> 可以存取的資源。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>Do not allow the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to open any external resources by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">藉由將 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 屬性設為 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph>，來禁止 <ph id="ph3">`null`</ph> 開啟外部資源。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The created <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object expands entity references and performs XML normalization of new line characters.</source>
          <target state="translated">建立<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>物件擴充實體參考，並執行 XML 正規化的新行字元。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The <ph id="ph1">&lt;paramref name="input" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> 值為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>The text reader from which to read the XML data.</source>
          <target state="translated">要從中讀取 XML 資料的文字閱讀器。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to decode the data stream.</source>
          <target state="translated">因為文字閱讀器會傳回 Unicode 字元的資料流，所以 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 不會使用 XML 宣告中所指定的編碼方式將資料流解碼。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>The settings for the new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance.</source>
          <target state="translated">新 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 執行個體的設定。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>This value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個值可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>The base URI for the entity or document being read.</source>
          <target state="translated">所讀取之實體或文件的基底 URI。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>This value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個值可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source><bpt id="p1">**</bpt>Security Note<ept id="p1">**</ept> The base URI is used to resolve the relative URI of the XML document.</source>
          <target state="translated"><bpt id="p1">**</bpt>安全性提示<ept id="p1">**</ept>：系統會使用基底 URI 來解析 XML 文件的相對 URI。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>Do not use a base URI from an untrusted source.</source>
          <target state="translated">請不要使用來自不受信任來源的基底 URI。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance by using the specified text reader, settings, and base URI.</source>
          <target state="translated">使用指定的文字讀取器、設定和基底 URI，建立新的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>An object that is used to read the XML data in the stream.</source>
          <target state="translated">用以在資料流中讀取 XML 資料的物件。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>By default an <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</source>
          <target state="translated">根據預設<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>無認證用來存取任何外部的資源，例如文件類型定義 (DTD)、 實體、 結構描述，等等。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>Starting with the .NET Framework 4.5.2, no default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is provided.</source>
          <target state="translated">從.NET Framework 4.5.2，沒有預設值<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>提供。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>If your solution targets the .NET Framework 4.5.2 or later versions, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">如果您的方案的目標.NET Framework 4.5.2 或更新版本中，指定<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>使用<ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>If the external resource is located on a network resource that requires authentication, use the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property to specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
          <target state="translated">如果在需要驗證的網路資源位於外部的資源，請使用<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph>屬性來指定<ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph>具有必要認證。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>You can use one of the following methods to control which resources the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access:</source>
          <target state="translated">您可以使用下列方法之一來控制哪些資源<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>可以存取：</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>Restrict the resources that the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to an <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object.</source>
          <target state="translated">藉由將 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 屬性設為 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> 物件，限制 <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> 可以存取的資源。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>Do not allow the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to open any external resources by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">藉由將 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 屬性設為 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph>，來禁止 <ph id="ph3">`null`</ph> 開啟外部資源。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>The created <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object expands entity references and performs XML normalization of new line characters.</source>
          <target state="translated">建立<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>物件擴充實體參考，並執行 XML 正規化的新行字元。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="input" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> 值為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The text reader from which to read the XML data.</source>
          <target state="translated">要從中讀取 XML 資料的文字閱讀器。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the XML reader to decode the data stream.</source>
          <target state="translated">因為文字閱讀器會傳回 Unicode 字元的資料流，所以 XML 讀取器不會使用 XML 宣告中所指定的編碼方式，來解碼資料流。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The settings for the new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance.</source>
          <target state="translated">新 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 執行個體的設定。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>This value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個值可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The context information required to parse the XML fragment.</source>
          <target state="translated">剖析 XML 片段所需的內容資訊。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The context information can include the <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> to use, encoding, namespace scope, the current <bpt id="p1">&lt;c&gt;</bpt>xml:lang<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>xml:space<ept id="p2">&lt;/c&gt;</ept> scope, base URI, and document type definition.</source>
          <target state="translated">內容資訊可包含要使用的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>、編碼方式、命名空間範圍、目前的 <bpt id="p1">&lt;c&gt;</bpt>xml:lang<ept id="p1">&lt;/c&gt;</ept> 和 <bpt id="p2">&lt;c&gt;</bpt>xml:space<ept id="p2">&lt;/c&gt;</ept> 範圍、基底 URI，以及文件類型定義。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>This value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個值可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance by using the specified text reader, settings, and context information for parsing.</source>
          <target state="translated">使用指定的文字讀取器、設定和內容資訊進行剖析，建立新的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>An object that is used to read the XML data in the stream.</source>
          <target state="translated">用以在資料流中讀取 XML 資料的物件。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>By default an <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</source>
          <target state="translated">根據預設<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>無認證用來存取任何外部的資源，例如文件類型定義 (DTD)、 實體、 結構描述，等等。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>Starting with the .NET Framework 4.5.2, no default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is provided.</source>
          <target state="translated">從.NET Framework 4.5.2，沒有預設值<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>提供。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>If your solution targets the .NET Framework 4.5.2 or later versions, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">如果您的方案的目標.NET Framework 4.5.2 或更新版本中，指定<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>使用<ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>If the external resource is located on a network resource that requires authentication, use the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property to specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
          <target state="translated">如果在需要驗證的網路資源位於外部的資源，請使用<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph>屬性來指定<ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph>具有必要認證。</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>You can use one of the following methods to control which resources the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access:</source>
          <target state="translated">您可以使用下列方法之一來控制哪些資源<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>可以存取：</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>Restrict the resources that the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to an <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object.</source>
          <target state="translated">藉由將 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 屬性設為 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> 物件，限制 <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> 可以存取的資源。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>Do not allow the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to open any external resources by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">藉由將 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 屬性設為 <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph>，來禁止 <ph id="ph3">`null`</ph> 開啟外部資源。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The created <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object expands entity references and performs XML normalization of new line characters.</source>
          <target state="translated">建立<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>物件擴充實體參考，並執行 XML 正規化的新行字元。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object that reads an XML fragment.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>讀取的 XML 片段的物件。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The <ph id="ph1">&lt;paramref name="input" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="input" /&gt;</ph> 值為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlReaderSettings.NameTable" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Xml.XmlParserContext.NameTable" /&gt;</ph> properties both contain values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Xml.XmlReaderSettings.NameTable" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="P:System.Xml.XmlParserContext.NameTable" /&gt;</ph> 屬性都包含值。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>(Only one of these <ph id="ph1">&lt;see langword="NameTable" /&gt;</ph> properties can be set and used).</source>
          <target state="translated">(只能設定並使用其中一個 <ph id="ph1">&lt;see langword="NameTable" /&gt;</ph> 屬性)。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The URI for the file containing the XML data.</source>
          <target state="translated">包含 XML 資料之檔案的 URI。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> object on the <ph id="ph2">&lt;see cref="T:System.Xml.XmlReaderSettings" /&gt;</ph> object is used to convert the path to a canonical data representation.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Xml.XmlReaderSettings" /&gt;</ph> 物件上的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> 物件是用於將路徑轉換成標準資料表示。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>If <ph id="ph1">&lt;see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, a new <ph id="ph3">&lt;see cref="T:System.Xml.XmlUrlResolver" /&gt;</ph> object is used.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>，則會使用新的 <ph id="ph3">&lt;see cref="T:System.Xml.XmlUrlResolver" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The settings for the new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance.</source>
          <target state="translated">新 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 執行個體的設定。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>This value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個值可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The context information required to parse the XML fragment.</source>
          <target state="translated">剖析 XML 片段所需的內容資訊。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The context information can include the <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> to use, encoding, namespace scope, the current <bpt id="p1">&lt;c&gt;</bpt>xml:lang<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>xml:space<ept id="p2">&lt;/c&gt;</ept> scope, base URI, and document type definition.</source>
          <target state="translated">內容資訊可包含要使用的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>、編碼方式、命名空間範圍、目前的 <bpt id="p1">&lt;c&gt;</bpt>xml:lang<ept id="p1">&lt;/c&gt;</ept> 和 <bpt id="p2">&lt;c&gt;</bpt>xml:space<ept id="p2">&lt;/c&gt;</ept> 範圍、基底 URI，以及文件類型定義。</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>This value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個值可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance by using the specified URI, settings, and context information for parsing.</source>
          <target state="translated">使用剖析用的指定 URI、設定和內容資訊，建立新的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>An object that is used to read the XML data in the stream.</source>
          <target state="translated">用以在資料流中讀取 XML 資料的物件。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>By default an <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</source>
          <target state="translated">根據預設<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>無認證用來存取任何外部的資源，例如文件類型定義 (DTD)、 實體、 結構描述，等等。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>Starting with the .NET Framework 4.5.2, no default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is provided.</source>
          <target state="translated">從.NET Framework 4.5.2，沒有預設值<ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>提供。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>If your solution targets the .NET Framework 4.5.2 or later versions, specify an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">如果您的方案的目標.NET Framework 4.5.2 或更新版本中，指定<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>使用<ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>This means that the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access any locations that does not require authentication.</source>
          <target state="translated">這表示<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>可以存取不需要驗證的任何位置。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>If the external resource is located on a network resource that requires authentication, use the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property to specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
          <target state="translated">如果在需要驗證的網路資源位於外部的資源，請使用<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType&gt;</ph>屬性來指定<ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph>具有必要認證。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>You can restrict the resources that the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> can access by setting the <ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph> property to an <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object.</source>
          <target state="translated">您可以限制的資源，<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>可以藉由設定存取<ph id="ph2">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A&gt;</ph>屬性<ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The created <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object expands entity references and performs XML normalization of new line characters.</source>
          <target state="translated">建立<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>物件擴充實體參考，並執行 XML 正規化的新行字元。</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The <ph id="ph1">&lt;see langword="inputUri" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="inputUri" /&gt;</ph> 值為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> does not have sufficient permissions to access the location of the XML data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 沒有足夠的權限可以存取 XML 資料的位置。</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlReaderSettings.NameTable" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Xml.XmlParserContext.NameTable" /&gt;</ph> properties both contain values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Xml.XmlReaderSettings.NameTable" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="P:System.Xml.XmlParserContext.NameTable" /&gt;</ph> 屬性都包含值。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>(Only one of these <ph id="ph1">&lt;see langword="NameTable" /&gt;</ph> properties can be set and used).</source>
          <target state="translated">(只能設定並使用其中一個 <ph id="ph1">&lt;see langword="NameTable" /&gt;</ph> 屬性)。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The file specified by the URI cannot be found.</source>
          <target state="translated">找不到由 URI 指定的檔案。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
          <source>The URI format is not correct.</source>
          <target state="translated">URI 格式不正確。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Depth">
          <source>When overridden in a derived class, gets the depth of the current node in the XML document.</source>
          <target state="translated">在衍生類別中覆寫時，取得 XML 文件中目前節點的深度。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Depth">
          <source>The depth of the current node in the XML document.</source>
          <target state="translated">XML 文件中目前節點的深度。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Depth">
          <source>See <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.Depth%2A&gt;</ph> (in the <ph id="ph2">`XmlTextReader`</ph> class) for an example using this property.</source>
          <target state="translated">請參閱<ph id="ph1">&lt;xref:System.Xml.XmlTextReader.Depth%2A&gt;</ph>(在<ph id="ph2">`XmlTextReader`</ph>類別) 如需使用這個屬性的範例。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Depth">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Depth">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> class.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 類別所使用的資源。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> class.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 類別目前的執行個體所使用的資源全部釋出。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Dispose">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Dispose">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示釋放 Managed 和 Unmanaged 資源，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 則表示只釋放 Unmanaged 資源。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Dispose(System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Dispose(System.Boolean)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.EOF">
          <source>When overridden in a derived class, gets a value indicating whether the reader is positioned at the end of the stream.</source>
          <target state="translated">在衍生類別中覆寫時，取得指出讀取器是否在資料流結尾的值。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.EOF">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader is positioned at the end of the stream; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果讀取器定位於資料流結尾，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.EOF">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.EOF">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>When overridden in a derived class, gets the value of an attribute.</source>
          <target state="translated">在衍生類別中覆寫時，取得屬性值。</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
          <source>The index of the attribute.</source>
          <target state="translated">屬性的索引。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
          <source>The index is zero-based.</source>
          <target state="translated">索引以零為起始。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
          <source>(The first attribute has index 0.)</source>
          <target state="translated">(第一個屬性的索引為 0。)</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
          <source>When overridden in a derived class, gets the value of the attribute with the specified index.</source>
          <target state="translated">在衍生類別中覆寫時，取得具有指定索引的屬性值。</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
          <source>The value of the specified attribute.</source>
          <target state="translated">指定的屬性值。</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
          <source>This method does not move the reader.</source>
          <target state="translated">這個方法不會移動讀取器。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
          <source>The following example gets the value of the third attribute.</source>
          <target state="translated">下列範例會取得第三個屬性的值。</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="i" /&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="i" /&gt;</ph> 超出範圍。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
          <source>It must be non-negative and less than the size of the attribute collection.</source>
          <target state="translated">它必須是非負值，而且小於屬性集合的大小。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String)">
          <source>The qualified name of the attribute.</source>
          <target state="translated">屬性的限定名稱 (Qualified Name)。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String)">
          <source>When overridden in a derived class, gets the value of the attribute with the specified <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.Name" /&gt;</ph>.</source>
          <target state="translated">在衍生類別中覆寫時，取得具有指定 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.Name" /&gt;</ph> 的屬性值。</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String)">
          <source>The value of the specified attribute.</source>
          <target state="translated">指定的屬性值。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String)">
          <source>If the attribute is not found or the value is <ph id="ph1">&lt;see langword="String.Empty" /&gt;</ph>, <ph id="ph2">&lt;see langword="null" /&gt;</ph> is returned.</source>
          <target state="translated">如果找不到該屬性或其值為 <ph id="ph1">&lt;see langword="String.Empty" /&gt;</ph>，則傳回 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.GetAttribute(System.String)">
          <source>This method does not move the reader.</source>
          <target state="translated">這個方法不會移動讀取器。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.GetAttribute(System.String)">
          <source>If the reader is positioned on a <ph id="ph1">`DocumentType`</ph> node, this method can be used to get the PUBLIC and SYSTEM literals, for example, <ph id="ph2">`reader.GetAttribute("PUBLIC")`</ph></source>
          <target state="translated">如果讀取器位於<ph id="ph1">`DocumentType`</ph> 節點，這個方法可以用來取得的公用和系統常值，例如， <ph id="ph2">`reader.GetAttribute("PUBLIC")`</ph></target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.GetAttribute(System.String)">
          <source>The following example gets the value of the ISBN attribute.</source>
          <target state="translated">下列範例會取得 ISBN 屬性的值。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">屬性的本機名稱。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">屬性的命名空間 URI。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
          <source>When overridden in a derived class, gets the value of the attribute with the specified <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.LocalName" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NamespaceURI" /&gt;</ph>.</source>
          <target state="translated">在衍生類別中覆寫時，取得具有指定 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.LocalName" /&gt;</ph> 與 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NamespaceURI" /&gt;</ph> 的屬性值。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
          <source>The value of the specified attribute.</source>
          <target state="translated">指定的屬性值。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
          <source>If the attribute is not found or the value is <ph id="ph1">&lt;see langword="String.Empty" /&gt;</ph>, <ph id="ph2">&lt;see langword="null" /&gt;</ph> is returned.</source>
          <target state="translated">如果找不到該屬性或其值為 <ph id="ph1">&lt;see langword="String.Empty" /&gt;</ph>，則傳回 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
          <source>This method does not move the reader.</source>
          <target state="translated">這個方法不會移動讀取器。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
          <source>The following XML contains an attribute in a specific namespace:</source>
          <target state="translated">下列 XML 會包含特定的命名空間中的屬性：</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
          <source>You can lookup the <ph id="ph1">`dt:type`</ph> attribute using one argument (prefix and local name) or two arguments (local name and namespace URI):</source>
          <target state="translated">您可以查閱<ph id="ph1">`dt:type`</ph>屬性使用一個引數 （前置詞和本機名稱） 或兩個引數 （區域名稱和命名空間 URI）：</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
          <source>To lookup the <ph id="ph1">`xmlns:dt`</ph> attribute, use one of the following arguments:</source>
          <target state="translated">要查閱<ph id="ph1">`xmlns:dt`</ph>屬性，請使用下列引數的其中一個：</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
          <source>You can also get this information using the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Prefix%2A&gt;</ph> property.</source>
          <target state="translated">您也可以取得此資訊使用<ph id="ph1">&lt;xref:System.Xml.XmlReader.Prefix%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetValueAsync">
          <source>Asynchronously gets the value of the current node.</source>
          <target state="translated">非同步取得目前節點的值。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetValueAsync">
          <source>The value of the current node.</source>
          <target state="translated">目前節點的值。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.GetValueAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">若要使用此方法，您必須設定<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph>旗標設為<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetValueAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">在未將 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 旗標設為 <ph id="ph3">&lt;see langword="true" /&gt;</ph>的情況下呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 非同步方法。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.GetValueAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.HasAttributes">
          <source>Gets a value indicating whether the current node has any attributes.</source>
          <target state="translated">取得值，表示目前節點是否具有任何屬性。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasAttributes">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current node has attributes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果目前節點擁有屬性，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasAttributes">
          <source>The following example displays all attributes on the current node.</source>
          <target state="translated">下列範例顯示目前的節點上的所有屬性。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.HasAttributes">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.HasAttributes">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.HasValue">
          <source>When overridden in a derived class, gets a value indicating whether the current node can have a <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.Value" /&gt;</ph>.</source>
          <target state="translated">在衍生類別中覆寫時，取得指出目前節點是否具有 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.Value" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the node on which the reader is currently positioned can have a <ph id="ph2">&lt;see langword="Value" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果讀取器目前所在節點具有 <ph id="ph2">&lt;see langword="Value" /&gt;</ph>，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the node has a value of <ph id="ph2">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated">如果為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>，則節點的值為 <ph id="ph2">&lt;see langword="String.Empty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source>The following table lists node types that have a value to return.</source>
          <target state="translated">下表列出具有傳回值的節點類型。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source>Node Type</source>
          <target state="translated">節點類型</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source>Value</source>
          <target state="translated">值</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source>The value of the attribute.</source>
          <target state="translated">屬性的值。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source>The content of the CDATA section.</source>
          <target state="translated">CDATA 區段的內容。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source>The content of the comment.</source>
          <target state="translated">註解的內容。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source>The internal subset.</source>
          <target state="translated">內部子集。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source>The entire content, excluding the target.</source>
          <target state="translated">全部內容 (目標除外)。</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source>The white space between markup in a mixed content model.</source>
          <target state="translated">在混合內容模型中標記間的泛空白字元。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source>The content of the text node.</source>
          <target state="translated">文字節點的內容。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source>The white space between markup.</source>
          <target state="translated">標記之間的泛空白字元。</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source>The content of the declaration.</source>
          <target state="translated">宣告的內容。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.HasValue">
          <source>See <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.HasValue%2A&gt;</ph> (in the <ph id="ph2">`XmlTextReader`</ph> class) for a sample using this method.</source>
          <target state="translated">請參閱<ph id="ph1">&lt;xref:System.Xml.XmlTextReader.HasValue%2A&gt;</ph>(在<ph id="ph2">`XmlTextReader`</ph>類別) 如需使用此方法的範例。</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.HasValue">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.HasValue">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.IsDefault">
          <source>When overridden in a derived class, gets a value indicating whether the current node is an attribute that was generated from the default value defined in the DTD or schema.</source>
          <target state="translated">在衍生類別中覆寫時，取得值，指出目前節點是否為從 DTD 或結構描述中定義的預設值產生的屬性。</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsDefault">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current node is an attribute whose value was generated from the default value defined in the DTD or schema; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the attribute value was explicitly set.</source>
          <target state="translated">如果目前節點是 DTD 或結構描述中定義的預設值所產生的屬性，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，如果已經明確設定屬性值，則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsDefault">
          <source><ph id="ph1">`IsDefault`</ph> always returns <ph id="ph2">`false`</ph> for implementations of <ph id="ph3">`XmlReader`</ph> that do not support schema or DTD information.</source>
          <target state="translated"><ph id="ph1">`IsDefault`</ph> 一律傳回<ph id="ph2">`false`</ph>為實作<ph id="ph3">`XmlReader`</ph>不支援結構描述或 DTD 資訊。</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsDefault">
          <source>This property applies only to an attribute node.</source>
          <target state="translated">這個屬性只適用於屬性節點。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsDefault">
          <source>The following example displays all attributes on the root element.</source>
          <target state="translated">下列範例會顯示所有屬性的根項目。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsDefault">
          <source>The example uses the following files as input.</source>
          <target state="translated">此範例會使用下列檔案做為輸入。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.IsDefault">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.IsDefault">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.IsEmptyElement">
          <source>When overridden in a derived class, gets a value indicating whether the current node is an empty element (for example, <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;lt;</ph>MyElement/<ph id="ph2">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>).</source>
          <target state="translated">在衍生類別中覆寫時，取得指出目前節點是否為空項目的值 (例如 <bpt id="p1">&lt;c&gt;</bpt><ph id="ph1">&amp;lt;</ph>MyElement/<ph id="ph2">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>)。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsEmptyElement">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current node is an element (<ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph> equals <ph id="ph3">&lt;see langword="XmlNodeType.Element" /&gt;</ph>) that ends with <bpt id="p1">&lt;c&gt;</bpt><ph id="ph4">/</ph><ph id="ph5">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 如果目前的節點是項目 (<ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph>等於<ph id="ph3">&lt;see langword="XmlNodeType.Element" /&gt;</ph>)，以結束<bpt id="p1">&lt;c&gt;</bpt> <ph id="ph4">/</ph> <ph id="ph5">&amp;gt;</ph> <ept id="p1">&lt;/c&gt;</ept>，否則<ph id="ph6">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsEmptyElement">
          <source>This property enables you to determine the difference between the following:</source>
          <target state="translated">此屬性可讓您判斷下列各項目之間的差異：</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsEmptyElement">
          <source><ph id="ph1">`&lt;item num="123"/&gt;`</ph> (<ph id="ph2">`IsEmptyElement`</ph> is <ph id="ph3">`true`</ph>).</source>
          <target state="translated"><ph id="ph1">`&lt;item num="123"/&gt;`</ph> (<ph id="ph2">`IsEmptyElement`</ph>是<ph id="ph3">`true`</ph>)。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsEmptyElement">
          <source><ph id="ph1">`&lt;item num="123"&gt;&lt;/item&gt;`</ph> (<ph id="ph2">`IsEmptyElement`</ph> is <ph id="ph3">`false`</ph>, although element content is empty).</source>
          <target state="translated"><ph id="ph1">`&lt;item num="123"&gt;&lt;/item&gt;`</ph> (<ph id="ph2">`IsEmptyElement`</ph>是<ph id="ph3">`false`</ph>，不過是空的項目內容)。</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsEmptyElement">
          <source>A corresponding <ph id="ph1">`EndElement`</ph> node is not generated for empty elements.</source>
          <target state="translated">對應<ph id="ph1">`EndElement`</ph>的空白項目不會產生節點。</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsEmptyElement">
          <source>If default content has been added to an element due to schema validation, <ph id="ph1">`IsEmptyElement`</ph> still returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">如果因為結構描述驗證的項目已加入預設內容<ph id="ph1">`IsEmptyElement`</ph>仍會傳回<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsEmptyElement">
          <source>It has no bearing on whether or not the element has a default value.</source>
          <target state="translated">它具有在項目具有預設值並無任何影響。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsEmptyElement">
          <source>In other words, <ph id="ph1">`IsEmptyElement`</ph> simply reports whether or not the element in the source document had an end element tag.</source>
          <target state="translated">換句話說，<ph id="ph1">`IsEmptyElement`</ph>只會報告是否來源文件中的項目有結尾項目標記。</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsEmptyElement">
          <source>The following example displays the text content of each element.</source>
          <target state="translated">下列範例會顯示每個項目的文字內容。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.IsEmptyElement">
          <source>The example uses the file, <ph id="ph1">`elems.xml`</ph>, as input.</source>
          <target state="translated">此範例會使用該檔案，<ph id="ph1">`elems.xml`</ph>作為輸入。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.IsEmptyElement">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.IsEmptyElement">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsName(System.String)">
          <source>The name to validate.</source>
          <target state="translated">要驗證的名稱。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsName(System.String)">
          <source>Returns a value indicating whether the string argument is a valid XML name.</source>
          <target state="translated">傳回值，指出字串引數是否為有效的 XML 名稱。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsName(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the name is valid; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果名稱有效，即為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.IsName(System.String)">
          <source>This method uses the <bpt id="p1">[</bpt>W3C XML 1.0 Recommendation<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=49863)</ept> to determine whether the name is valid.</source>
          <target state="translated">這個方法會使用<bpt id="p1">[</bpt>W3C XML 1.0 版建議事項<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=49863)</ept>判斷名稱是否有效。</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsName(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="str" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="str" /&gt;</ph> 值為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsNameToken(System.String)">
          <source>The name token to validate.</source>
          <target state="translated">要驗證的名稱語彙基元。</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsNameToken(System.String)">
          <source>Returns a value indicating whether or not the string argument is a valid XML name token.</source>
          <target state="translated">傳回值，指出字串引數是否為有效的 XML 名稱語彙基元。</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsNameToken(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if it is a valid name token; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果它是有效的名稱語彙基元，即為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.IsNameToken(System.String)">
          <source>This method uses the <bpt id="p1">[</bpt>W3C XML 1.0 Recommendation<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=49863)</ept> to determine whether the name token is valid.</source>
          <target state="translated">這個方法會使用<bpt id="p1">[</bpt>W3C XML 1.0 版建議事項<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=49863)</ept>判斷名稱語彙基元是否有效。</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsNameToken(System.String)">
          <source>The <ph id="ph1">&lt;paramref name="str" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="str" /&gt;</ph> 值為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Tests if the current content node is a start tag.</source>
          <target state="translated">測試目前的內容節點是否為開頭標記。</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement">
          <source>Calls <ph id="ph1">&lt;see cref="M:System.Xml.XmlReader.MoveToContent" /&gt;</ph> and tests if the current content node is a start tag or empty element tag.</source>
          <target state="translated">呼叫 <ph id="ph1">&lt;see cref="M:System.Xml.XmlReader.MoveToContent" /&gt;</ph> 並測試目前的內容節點為開頭標記或空白項目標記。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="M:System.Xml.XmlReader.MoveToContent" /&gt;</ph> finds a start tag or empty element tag; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if a node type other than <ph id="ph4">&lt;see langword="XmlNodeType.Element" /&gt;</ph> was found.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="M:System.Xml.XmlReader.MoveToContent" /&gt;</ph> 找到開頭標記或空白項目標記，即為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；如果找到的節點類型並非 <ph id="ph3">&lt;see langword="false" /&gt;</ph>，則為 <ph id="ph4">&lt;see langword="XmlNodeType.Element" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.IsStartElement">
          <source>This method skips white space, comments, and processing instructions until the reader is positioned on a content node.</source>
          <target state="translated">這個方法略過泛空白字元、 註解和處理指示，直到讀取器定位於內容節點上。</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.IsStartElement">
          <source>The method then tests if the current node is an element.</source>
          <target state="translated">如果目前的節點是項目，然後測試方法。</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.IsStartElement">
          <source>The following example displays the text content of each element.</source>
          <target state="translated">下列範例會顯示每個項目的文字內容。</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.IsStartElement">
          <source>The example uses the file, <ph id="ph1">`elems.xml`</ph>, as input.</source>
          <target state="translated">此範例會使用該檔案，<ph id="ph1">`elems.xml`</ph>作為輸入。</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement">
          <source>Incorrect XML is encountered in the input stream.</source>
          <target state="translated">在輸入資料流中遇到錯誤的 XML。</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String)">
          <source>The string matched against the <ph id="ph1">&lt;see langword="Name" /&gt;</ph> property of the element found.</source>
          <target state="translated">字串符合所找到項目的 <ph id="ph1">&lt;see langword="Name" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String)">
          <source>Calls <ph id="ph1">&lt;see cref="M:System.Xml.XmlReader.MoveToContent" /&gt;</ph> and tests if the current content node is a start tag or empty element tag and if the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.Name" /&gt;</ph> property of the element found matches the given argument.</source>
          <target state="translated">呼叫 <ph id="ph1">&lt;see cref="M:System.Xml.XmlReader.MoveToContent" /&gt;</ph> 並測試目前的內容節點為開頭標記或空白項目標記，以及所找到項目的 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.Name" /&gt;</ph> 屬性是否符合指定的引數。</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the resulting node is an element and the <ph id="ph2">&lt;see langword="Name" /&gt;</ph> property matches the specified string.</source>
          <target state="translated">如果產生的節點是項目，並且 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 屬性符合指定的字串，即為 <ph id="ph2">&lt;see langword="Name" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String)">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if a node type other than <ph id="ph2">&lt;see langword="XmlNodeType.Element" /&gt;</ph> was found or if the element <ph id="ph3">&lt;see langword="Name" /&gt;</ph> property does not match the specified string.</source>
          <target state="translated">如果找到的節點類型並非 <ph id="ph2">&lt;see langword="XmlNodeType.Element" /&gt;</ph>，或項目 <ph id="ph3">&lt;see langword="Name" /&gt;</ph> 屬性不符合指定字串，即為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.IsStartElement(System.String)">
          <source>This method skips white space, comments, and processing instructions until the reader is positioned on a content node.</source>
          <target state="translated">這個方法略過泛空白字元、 註解和處理指示，直到讀取器定位於內容節點上。</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.IsStartElement(System.String)">
          <source>The method then tests if the current node is an element.</source>
          <target state="translated">如果目前的節點是項目，然後測試方法。</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.IsStartElement(System.String)">
          <source>The following example displays each price element.</source>
          <target state="translated">下列範例會顯示每個價格項目。</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String)">
          <source>Incorrect XML is encountered in the input stream.</source>
          <target state="translated">在輸入資料流中遇到錯誤的 XML。</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
          <source>The string to match against the <ph id="ph1">&lt;see langword="LocalName" /&gt;</ph> property of the element found.</source>
          <target state="translated">要符合所找到項目之 <ph id="ph1">&lt;see langword="LocalName" /&gt;</ph> 屬性的字串。</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
          <source>The string to match against the <ph id="ph1">&lt;see langword="NamespaceURI" /&gt;</ph> property of the element found.</source>
          <target state="translated">要符合所找到項目之 <ph id="ph1">&lt;see langword="NamespaceURI" /&gt;</ph> 屬性的字串。</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
          <source>Calls <ph id="ph1">&lt;see cref="M:System.Xml.XmlReader.MoveToContent" /&gt;</ph> and tests if the current content node is a start tag or empty element tag and if the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.LocalName" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Xml.XmlReader.NamespaceURI" /&gt;</ph> properties of the element found match the given strings.</source>
          <target state="translated">呼叫 <ph id="ph1">&lt;see cref="M:System.Xml.XmlReader.MoveToContent" /&gt;</ph> 並測試目前的內容節點為開頭標記或空白項目標記，以及所找到項目的 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.LocalName" /&gt;</ph> 與 <ph id="ph3">&lt;see cref="P:System.Xml.XmlReader.NamespaceURI" /&gt;</ph> 屬性是否符合指定的字串。</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the resulting node is an element.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>如果產生的節點是項目。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if a node type other than <ph id="ph2">&lt;see langword="XmlNodeType.Element" /&gt;</ph> was found or if the <ph id="ph3">&lt;see langword="LocalName" /&gt;</ph> and <ph id="ph4">&lt;see langword="NamespaceURI" /&gt;</ph> properties of the element do not match the specified strings.</source>
          <target state="translated">如果找到的節點類型並非 <ph id="ph2">&lt;see langword="XmlNodeType.Element" /&gt;</ph>，或項目的 <ph id="ph3">&lt;see langword="LocalName" /&gt;</ph> 和 <ph id="ph4">&lt;see langword="NamespaceURI" /&gt;</ph> 屬性不符合指定字串，即為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
          <source>This method skips white space, comments, and processing instructions until the reader is positioned on a content node.</source>
          <target state="translated">這個方法略過泛空白字元、 註解和處理指示，直到讀取器定位於內容節點上。</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
          <source>The method then tests if the current node is an element.</source>
          <target state="translated">如果目前的節點是項目，然後測試方法。</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
          <source>Incorrect XML is encountered in the input stream.</source>
          <target state="translated">在輸入資料流中遇到錯誤的 XML。</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>When overridden in a derived class, gets the value of the attribute.</source>
          <target state="translated">在衍生類別中覆寫時，取得屬性值。</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Item(System.Int32)">
          <source>The index of the attribute.</source>
          <target state="translated">屬性的索引。</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Item(System.Int32)">
          <source>When overridden in a derived class, gets the value of the attribute with the specified index.</source>
          <target state="translated">在衍生類別中覆寫時，取得具有指定索引的屬性值。</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Item(System.Int32)">
          <source>The value of the specified attribute.</source>
          <target state="translated">指定的屬性值。</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Item(System.Int32)">
          <source>This property does not move the reader.</source>
          <target state="translated">這個屬性不會移動讀取器。</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Item(System.Int32)">
          <source>The following example displays all attributes on the current node.</source>
          <target state="translated">下列範例顯示目前的節點上的所有屬性。</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Item(System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Item(System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Item(System.String)">
          <source>The qualified name of the attribute.</source>
          <target state="translated">屬性的限定名稱 (Qualified Name)。</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Item(System.String)">
          <source>When overridden in a derived class, gets the value of the attribute with the specified <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.Name" /&gt;</ph>.</source>
          <target state="translated">在衍生類別中覆寫時，取得具有指定 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.Name" /&gt;</ph> 的屬性值。</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Item(System.String)">
          <source>The value of the specified attribute.</source>
          <target state="translated">指定的屬性值。</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Item(System.String)">
          <source>If the attribute is not found, <ph id="ph1">&lt;see langword="null" /&gt;</ph> is returned.</source>
          <target state="translated">如果找不到屬性，會傳回 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Item(System.String)">
          <source>This property does not move the reader.</source>
          <target state="translated">這個屬性不會移動讀取器。</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Item(System.String)">
          <source>If the reader is positioned on a <ph id="ph1">`DocumentType`</ph> node, this method can be used to get the PUBLIC and SYSTEM literals, for example, <ph id="ph2">`reader["PUBLIC"]`</ph></source>
          <target state="translated">如果讀取器位於<ph id="ph1">`DocumentType`</ph> 節點，這個方法可以用來取得的公用和系統常值，例如， <ph id="ph2">`reader["PUBLIC"]`</ph></target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Item(System.String)">
          <source>The following example gets the value of the ISBN attribute.</source>
          <target state="translated">下列範例會取得 ISBN 屬性的值。</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Item(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Item(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Item(System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">屬性的本機名稱。</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Item(System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">屬性的命名空間 URI。</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Item(System.String,System.String)">
          <source>When overridden in a derived class, gets the value of the attribute with the specified <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.LocalName" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NamespaceURI" /&gt;</ph>.</source>
          <target state="translated">在衍生類別中覆寫時，取得具有指定 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.LocalName" /&gt;</ph> 與 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NamespaceURI" /&gt;</ph> 的屬性值。</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Item(System.String,System.String)">
          <source>The value of the specified attribute.</source>
          <target state="translated">指定的屬性值。</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Item(System.String,System.String)">
          <source>If the attribute is not found, <ph id="ph1">&lt;see langword="null" /&gt;</ph> is returned.</source>
          <target state="translated">如果找不到屬性，會傳回 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Item(System.String,System.String)">
          <source>This property does not move the reader.</source>
          <target state="translated">這個屬性不會移動讀取器。</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Item(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Item(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.LocalName">
          <source>When overridden in a derived class, gets the local name of the current node.</source>
          <target state="translated">在衍生類別中覆寫時，取得目前節點的區域名稱。</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.LocalName">
          <source>The name of the current node with the prefix removed.</source>
          <target state="translated">目前節點名稱的前置詞被移除。</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.LocalName">
          <source>For example, <ph id="ph1">&lt;see langword="LocalName" /&gt;</ph> is <ph id="ph2">&lt;see langword="book" /&gt;</ph> for the element <bpt id="p1">&lt;c&gt;</bpt><ph id="ph3">&amp;lt;</ph>bk:book<ph id="ph4">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">例如，<ph id="ph1">&lt;see langword="LocalName" /&gt;</ph>是<ph id="ph2">&lt;see langword="book" /&gt;</ph>項目的<bpt id="p1">&lt;c&gt;</bpt> <ph id="ph3">&amp;lt;</ph>bk:book<ph id="ph4">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.LocalName">
          <source>For node types that do not have a name (like <ph id="ph1">&lt;see langword="Text" /&gt;</ph>, <ph id="ph2">&lt;see langword="Comment" /&gt;</ph>, and so on), this property returns <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated">對於沒有名稱的節點類型 (如 <ph id="ph1">&lt;see langword="Text" /&gt;</ph>、<ph id="ph2">&lt;see langword="Comment" /&gt;</ph> 等)，這個屬性會傳回 <ph id="ph3">&lt;see langword="String.Empty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.LocalName">
          <source>The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</source>
          <target state="translated">下列範例會顯示每個節點的本機名稱，如果有的話，前置詞和命名空間 URI。</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.LocalName">
          <source>The example uses the file, book2.xml, as input.</source>
          <target state="translated">此範例會使用該檔案，book2.xml，做為輸入。</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.LocalName">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.LocalName">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.LookupNamespace(System.String)">
          <source>The prefix whose namespace URI you want to resolve.</source>
          <target state="translated">您要解析其命名空間 URI 的前置詞。</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.LookupNamespace(System.String)">
          <source>To match the default namespace, pass an empty string.</source>
          <target state="translated">若要符合預設命名空間，請傳送空字串。</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.LookupNamespace(System.String)">
          <source>When overridden in a derived class, resolves a namespace prefix in the current element's scope.</source>
          <target state="translated">在衍生類別中覆寫時，解析目前項目範圍內的命名空間前置詞。</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.LookupNamespace(System.String)">
          <source>The namespace URI to which the prefix maps or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no matching prefix is found.</source>
          <target state="translated">前置詞對應的命名空間 URI，如果找不到符合的前置詞，則為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.LookupNamespace(System.String)">
          <source>In the following XML string, if the reader is positioned on the <ph id="ph1">`href`</ph> attribute, the prefix <ph id="ph2">`a`</ph> is resolved by calling <ph id="ph3">`reader.LookupNamespace("a")`</ph>.</source>
          <target state="translated">在下列 XML 字串中，如果讀取器位於<ph id="ph1">`href`</ph>屬性，前置詞<ph id="ph2">`a`</ph>解析藉由呼叫<ph id="ph3">`reader.LookupNamespace("a")`</ph>。</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.LookupNamespace(System.String)">
          <source>The returned string is <ph id="ph1">`urn:456`</ph>.</source>
          <target state="translated">傳回的字串是<ph id="ph1">`urn:456`</ph>。</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.LookupNamespace(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.LookupNamespace(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>When overridden in a derived class, moves to the specified attribute.</source>
          <target state="translated">在衍生類別中覆寫時，移至指定的屬性。</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)">
          <source>The index of the attribute.</source>
          <target state="translated">屬性的索引。</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)">
          <source>When overridden in a derived class, moves to the attribute with the specified index.</source>
          <target state="translated">在衍生類別中覆寫時，移至具有指定索引的屬性。</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)">
          <source>The following example displays all attributes on the current node.</source>
          <target state="translated">下列範例顯示目前的節點上的所有屬性。</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)">
          <source>The parameter has a negative value.</source>
          <target state="translated">參數的值是負數。</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
          <source>The qualified name of the attribute.</source>
          <target state="translated">屬性的限定名稱 (Qualified Name)。</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
          <source>When overridden in a derived class, moves to the attribute with the specified <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.Name" /&gt;</ph>.</source>
          <target state="translated">在衍生類別中覆寫時，移至具有指定 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.Name" /&gt;</ph> 的屬性。</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute is found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果找到屬性，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the reader's position does not change.</source>
          <target state="translated">如果為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>，則不會變更讀取器的位置。</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
          <source>After calling <ph id="ph1">`MoveToAttribute`</ph>, the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Name%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlReader.NamespaceURI%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Xml.XmlReader.Prefix%2A&gt;</ph> properties reflect the properties of that attribute.</source>
          <target state="translated">在呼叫<ph id="ph1">`MoveToAttribute`</ph>、 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Name%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Xml.XmlReader.NamespaceURI%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Xml.XmlReader.Prefix%2A&gt;</ph>屬性會反映該屬性的屬性。</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
          <source>The parameter is an empty string.</source>
          <target state="translated">參數為空字串。</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">屬性的本機名稱。</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
          <source>The namespace URI of the attribute.</source>
          <target state="translated">屬性的命名空間 URI。</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
          <source>When overridden in a derived class, moves to the attribute with the specified <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.LocalName" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NamespaceURI" /&gt;</ph>.</source>
          <target state="translated">在衍生類別中覆寫時，移至具有指定 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.LocalName" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NamespaceURI" /&gt;</ph> 的屬性。</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute is found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果找到屬性，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the reader's position does not change.</source>
          <target state="translated">如果為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>，則不會變更讀取器的位置。</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
          <source>After calling <ph id="ph1">`MoveToAttribute`</ph>, the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Name%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlReader.NamespaceURI%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Xml.XmlReader.Prefix%2A&gt;</ph> properties reflect the properties of that attribute.</source>
          <target state="translated">在呼叫<ph id="ph1">`MoveToAttribute`</ph>、 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Name%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Xml.XmlReader.NamespaceURI%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Xml.XmlReader.Prefix%2A&gt;</ph>屬性會反映該屬性的屬性。</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
          <source>Both parameter values are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這兩個參數值為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>Checks whether the current node is a content (non-white space text, <ph id="ph1">&lt;see langword="CDATA" /&gt;</ph>, <ph id="ph2">&lt;see langword="Element" /&gt;</ph>, <ph id="ph3">&lt;see langword="EndElement" /&gt;</ph>, <ph id="ph4">&lt;see langword="EntityReference" /&gt;</ph>, or <ph id="ph5">&lt;see langword="EndEntity" /&gt;</ph>) node.</source>
          <target state="translated">檢查目前節點是否為內容 (非空白字元文字、<ph id="ph1">&lt;see langword="CDATA" /&gt;</ph>、<ph id="ph2">&lt;see langword="Element" /&gt;</ph>、<ph id="ph3">&lt;see langword="EndElement" /&gt;</ph>、<ph id="ph4">&lt;see langword="EntityReference" /&gt;</ph> 或 <ph id="ph5">&lt;see langword="EndEntity" /&gt;</ph>) 節點。</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>If the node is not a content node, the reader skips ahead to the next content node or end of file.</source>
          <target state="translated">如果節點並非內容節點，讀取器會先跳至下一個內容節點或檔案結尾。</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>It skips over nodes of the following type: <ph id="ph1">&lt;see langword="ProcessingInstruction" /&gt;</ph>, <ph id="ph2">&lt;see langword="DocumentType" /&gt;</ph>, <ph id="ph3">&lt;see langword="Comment" /&gt;</ph>, <ph id="ph4">&lt;see langword="Whitespace" /&gt;</ph>, or <ph id="ph5">&lt;see langword="SignificantWhitespace" /&gt;</ph>.</source>
          <target state="translated">它會略過下列型別的節點：<ph id="ph1">&lt;see langword="ProcessingInstruction" /&gt;</ph>、<ph id="ph2">&lt;see langword="DocumentType" /&gt;</ph>、<ph id="ph3">&lt;see langword="Comment" /&gt;</ph>、<ph id="ph4">&lt;see langword="Whitespace" /&gt;</ph> 或 <ph id="ph5">&lt;see langword="SignificantWhitespace" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph> of the current node found by the method or <ph id="ph2">&lt;see langword="XmlNodeType.None" /&gt;</ph> if the reader has reached the end of the input stream.</source>
          <target state="translated">這個方法所找到的目前節點的 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph>，如果讀取器已經到達輸入資料流的結尾，則為 <ph id="ph2">&lt;see langword="XmlNodeType.None" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>If the current node is an attribute node, this method moves the reader back to the element that owns the attribute.</source>
          <target state="translated">如果目前的節點是屬性節點，這個方法回到讀取器擁有屬性的項目。</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToContentAsync%2A&gt;</ph>.</source>
          <target state="translated">這個方法的非同步版本，請參閱<ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToContentAsync%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>This is useful when you want to write code that can skip over random XML markup without breaking.</source>
          <target state="translated">當您想要撰寫程式碼，可以略過隨機的 XML 標記，但不會破壞，這非常有用。</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>For example, suppose you have the following code:</source>
          <target state="translated">例如，假設您有下列的程式碼：</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>This code can handle the following inputs without breaking:</source>
          <target state="translated">此程式碼可以處理但不會破壞下列輸入：</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>and</source>
          <target state="translated">和</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>and</source>
          <target state="translated">和</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>and</source>
          <target state="translated">和</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>Incorrect XML encountered in the input stream.</source>
          <target state="translated">在輸入資料流中發現不正確的 XML。</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToContent">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToContentAsync">
          <source>Asynchronously checks whether the current node is a content node.</source>
          <target state="translated">非同步檢查目前節點是否為內容節點。</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToContentAsync">
          <source>If the node is not a content node, the reader skips ahead to the next content node or end of file.</source>
          <target state="translated">如果節點並非內容節點，讀取器會先跳至下一個內容節點或檔案結尾。</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToContentAsync">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph> of the current node found by the method or <ph id="ph2">&lt;see langword="XmlNodeType.None" /&gt;</ph> if the reader has reached the end of the input stream.</source>
          <target state="translated">這個方法所找到的目前節點的 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph>，如果讀取器已經到達輸入資料流的結尾，則為 <ph id="ph2">&lt;see langword="XmlNodeType.None" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToContentAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToContent%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">這是非同步版本<ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToContent%2A&gt;</ph>，使用相同的功能。</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToContentAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">若要使用此方法，您必須設定<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph>旗標設為<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToContentAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">在未將 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 旗標設為 <ph id="ph3">&lt;see langword="true" /&gt;</ph>的情況下呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 非同步方法。</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToContentAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToElement">
          <source>When overridden in a derived class, moves to the element that contains the current attribute node.</source>
          <target state="translated">在衍生類別中覆寫時，移至包含目前屬性節點的項目上。</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToElement">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the reader is not positioned on an attribute (the position of the reader does not change).</source>
          <target state="translated">如果讀取器位於屬性 (讀取器移至擁有該屬性的項目) 上，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，如果讀取器不在屬性 (不會變更讀取器的位置)，則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToElement">
          <source>Use this method to return to an element after navigating through its attributes.</source>
          <target state="translated">使用此方法傳回的項目之後瀏覽它的屬性。</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToElement">
          <source>This method moves the reader to one of the following node types: <ph id="ph1">`Element`</ph>, <ph id="ph2">`DocumentType`</ph>, or <ph id="ph3">`XmlDeclaration`</ph>.</source>
          <target state="translated">這個方法會將讀取器移至下列節點類型的其中一個： <ph id="ph1">`Element`</ph>， <ph id="ph2">`DocumentType`</ph>，或<ph id="ph3">`XmlDeclaration`</ph>。</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToElement">
          <source>The following example displays all attributes on the current node.</source>
          <target state="translated">下列範例顯示目前的節點上的所有屬性。</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToElement">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToElement">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToFirstAttribute">
          <source>When overridden in a derived class, moves to the first attribute.</source>
          <target state="translated">在衍生類別中覆寫時，移至第一個屬性。</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToFirstAttribute">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an attribute exists (the reader moves to the first attribute); otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph> (the position of the reader does not change).</source>
          <target state="translated">如果屬性存在 (讀取器移至第一個屬性)，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph> (不會變更讀取器的位置)。</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToFirstAttribute">
          <source>The following example gets the value of the first attribute.</source>
          <target state="translated">下列範例會取得第一個屬性的值。</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToFirstAttribute">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToFirstAttribute">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToNextAttribute">
          <source>When overridden in a derived class, moves to the next attribute.</source>
          <target state="translated">在衍生類別中覆寫時，移至下一個屬性。</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToNextAttribute">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if there is a next attribute; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there are no more attributes.</source>
          <target state="translated">如果有下一個屬性，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，如果沒有其他屬性，則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToNextAttribute">
          <source>If the current node is an element node, this method is equivalent to <ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToFirstAttribute%2A&gt;</ph>.</source>
          <target state="translated">如果目前的節點是項目節點，此方法相當於<ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToFirstAttribute%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToNextAttribute">
          <source>If <ph id="ph1">`MoveToNextAttribute`</ph> returns <ph id="ph2">`true`</ph>, the reader moves to the next attribute; otherwise, the position of the reader does not change.</source>
          <target state="translated">如果<ph id="ph1">`MoveToNextAttribute`</ph>傳回<ph id="ph2">`true`</ph>，讀取器移至下一個屬性; 否則讀取器的位置不會變更。</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.MoveToNextAttribute">
          <source>The following example displays all attributes on the current node.</source>
          <target state="translated">下列範例顯示目前的節點上的所有屬性。</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToNextAttribute">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.MoveToNextAttribute">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Name">
          <source>When overridden in a derived class, gets the qualified name of the current node.</source>
          <target state="translated">在衍生類別中覆寫時，取得目前節點的限定名稱。</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source>The qualified name of the current node.</source>
          <target state="translated">目前節點的限定名稱。</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source>For example, <ph id="ph1">&lt;see langword="Name" /&gt;</ph> is <ph id="ph2">&lt;see langword="bk:book" /&gt;</ph> for the element <bpt id="p1">&lt;c&gt;</bpt><ph id="ph3">&amp;lt;</ph>bk:book<ph id="ph4">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">例如，<ph id="ph1">&lt;see langword="Name" /&gt;</ph>是<ph id="ph2">&lt;see langword="bk:book" /&gt;</ph>項目的<bpt id="p1">&lt;c&gt;</bpt> <ph id="ph3">&amp;lt;</ph>bk:book<ph id="ph4">&amp;gt;</ph><ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source>The name returned is dependent on the <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph> of the node.</source>
          <target state="translated">傳回的名稱需視節點的 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph> 而定：</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source>The following node types return the listed values.</source>
          <target state="translated">下列節點類型會傳回所列的值。</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source>All other node types return an empty string.</source>
          <target state="translated">其他所有節點類型都會傳回空字串。</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Node type</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 節點類型</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Name</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 名稱</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Attribute" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The name of the attribute.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Attribute" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 屬性的名稱。</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="DocumentType" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The document type name.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="DocumentType" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 文件型別名稱。</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Element" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The tag name.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Element" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 標記名稱。</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="EntityReference" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The name of the entity referenced.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="EntityReference" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 參考的實體名稱。</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="ProcessingInstruction" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The target of the processing instruction.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="ProcessingInstruction" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 處理指示的目標。</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="XmlDeclaration" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The literal string <ph id="ph6">&lt;see langword="xml" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="XmlDeclaration" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 常值字串<ph id="ph6">&lt;see langword="xml" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source>The following example reads an XML file and displays each of the nodes.</source>
          <target state="translated">下列範例會讀取 XML 檔案，並顯示每個節點。</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Name">
          <source>The sample uses the <ph id="ph1">`items.xml`</ph> file.</source>
          <target state="translated">此範例會使用<ph id="ph1">`items.xml`</ph>檔案。</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Name">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Name">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.NamespaceURI">
          <source>When overridden in a derived class, gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.</source>
          <target state="translated">在衍生類別中覆寫時，取得讀取器所在節點的命名空間 URI (如 W3C 命名空間規格中所定義)。</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.NamespaceURI">
          <source>The namespace URI of the current node; otherwise an empty string.</source>
          <target state="translated">目前節點的命名空間 URI，否則為空字串。</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.NamespaceURI">
          <source>This property is relevant to <ph id="ph1">`Element`</ph> and <ph id="ph2">`Attribute`</ph> nodes only.</source>
          <target state="translated">這個屬性是適用於<ph id="ph1">`Element`</ph>和<ph id="ph2">`Attribute`</ph>只節點。</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.NamespaceURI">
          <source>The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</source>
          <target state="translated">下列範例會顯示每個節點的本機名稱，如果有的話，前置詞和命名空間 URI。</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.NamespaceURI">
          <source>The example uses the file, book2.xml, as input.</source>
          <target state="translated">此範例會使用該檔案，book2.xml，做為輸入。</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.NamespaceURI">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.NamespaceURI">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.NameTable">
          <source>When overridden in a derived class, gets the <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> associated with this implementation.</source>
          <target state="translated">在衍生類別中覆寫時，取得與這個實作相關聯的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.NameTable">
          <source>The <ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph> enabling you to get the atomized version of a string within the node.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlNameTable" /&gt;</ph> 可讓您取得節點中字串的原子化版本。</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.NameTable">
          <source>All node and attribute names returned from <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> are atomized using the <ph id="ph2">`NameTable`</ph>.</source>
          <target state="translated">從傳回的所有節點和屬性名稱<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>使用原子化<ph id="ph2">`NameTable`</ph>。</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.NameTable">
          <source>When the same name is returned multiple times (for example, <ph id="ph1">`Customer`</ph>), then the same <ph id="ph2">`String`</ph> object will be returned for that name.</source>
          <target state="translated">相同的名稱傳回多次時 (例如， <ph id="ph1">`Customer`</ph>)，然後相同<ph id="ph2">`String`</ph>就會傳回物件，該名稱。</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.NameTable">
          <source>This makes it possible for you to write efficient code that does object comparisons on these strings instead of expensive string comparisons.</source>
          <target state="translated">這可讓您撰寫有效率的程式碼，進行物件比較這些字串，而不是高度耗費資源的字串比較。</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.NameTable">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.NameTable">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.NodeType">
          <source>When overridden in a derived class, gets the type of the current node.</source>
          <target state="translated">在衍生類別中覆寫時，取得目前節點的類型。</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.NodeType">
          <source>One of the enumeration values that specify the type of the current node.</source>
          <target state="translated">其中一個列舉值，指定目前節點的類型。</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.NodeType">
          <source>The following example reads an XML file and displays each of the nodes.</source>
          <target state="translated">下列範例會讀取 XML 檔案，並顯示每個節點。</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.NodeType">
          <source>The sample uses the <ph id="ph1">`items.xml`</ph> file.</source>
          <target state="translated">此範例會使用<ph id="ph1">`items.xml`</ph>檔案。</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.NodeType">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.NodeType">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Prefix">
          <source>When overridden in a derived class, gets the namespace prefix associated with the current node.</source>
          <target state="translated">在衍生類別中覆寫時，取得與目前節點相關聯的命名空間前置詞。</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Prefix">
          <source>The namespace prefix associated with the current node.</source>
          <target state="translated">與目前節點相關聯的命名空間前置詞。</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Prefix">
          <source>The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</source>
          <target state="translated">下列範例會顯示每個節點的本機名稱，如果有的話，前置詞和命名空間 URI。</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Prefix">
          <source>The example uses the file, book2.xml, as input.</source>
          <target state="translated">此範例會使用該檔案，book2.xml，做為輸入。</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Prefix">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Prefix">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.QuoteChar">
          <source>When overridden in a derived class, gets the quotation mark character used to enclose the value of an attribute node.</source>
          <target state="translated">在衍生類別中覆寫時，取得用來括住屬性節點值的引號字元。</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.QuoteChar">
          <source>The quotation mark character (" or ') used to enclose the value of an attribute node.</source>
          <target state="translated">用來括住屬性節點值的引號字元 (" 或 ')。</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.QuoteChar">
          <source>This property applies only to an attribute node.</source>
          <target state="translated">這個屬性只適用於屬性節點。</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.QuoteChar">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.QuoteChar">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Read">
          <source>When overridden in a derived class, reads the next node from the stream.</source>
          <target state="translated">在衍生類別中覆寫時，從資料流讀取下一個節點。</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Read">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the next node was read successfully; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果順利讀取下一個節點，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Read">
          <source>When an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> is first created and initialized, there is no information available.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>這是第一次建立並初始化，沒有任何可用的資訊。</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Read">
          <source>You must call <ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> to read the first node.</source>
          <target state="translated">您必須呼叫<ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>讀取的第一個節點。</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Read">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> method sets the state of the XML reader to initiate <ph id="ph2">&lt;xref:System.Xml.ReadState&gt;</ph> and moves through the XML file sequentially until it reaches the end of the file, at which point the method returns a value of <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>方法會設定 XML 讀取器初始化的狀態<ph id="ph2">&lt;xref:System.Xml.ReadState&gt;</ph>與透過 XML 檔依序移動，直到達到的檔案，此時方法會傳回值的結尾<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Read">
          <source>This method requires at least four bytes from the data stream in order to begin parsing.</source>
          <target state="translated">這個方法需要從資料流至少四個位元組，才能開始剖析。</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Read">
          <source>If fewer than four bytes are returned and there is no more data in the stream, the method returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">如果傳回少於四個位元組，而且資料流中沒有詳細資料，方法會傳回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Read">
          <source>If there is more data in the stream, the method will block parsing until receipt of the fourth byte.</source>
          <target state="translated">如果資料流中有更多資料，方法會封鎖直到接收第四個位元組的剖析。</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Read">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadAsync%2A&gt;</ph>.</source>
          <target state="translated">這個方法的非同步版本，請參閱<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadAsync%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Read">
          <source>The following example reads an XML file and displays each of the nodes.</source>
          <target state="translated">下列範例會讀取 XML 檔案，並顯示每個節點。</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Read">
          <source>The sample uses the <ph id="ph1">`items.xml`</ph> file.</source>
          <target state="translated">此範例會使用<ph id="ph1">`items.xml`</ph>檔案。</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Read">
          <source><bpt id="p1">**</bpt>Output:<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>輸出：<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Read">
          <source>An error occurred while parsing the XML.</source>
          <target state="translated">剖析 XML 時發生錯誤。</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Read">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Read">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadAsync">
          <source>Asynchronously reads the next node from the stream.</source>
          <target state="translated">非同步讀取資料流中的下一個節點。</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadAsync">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the next node was read successfully; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there are no more nodes to read.</source>
          <target state="translated">如果成功讀取下一個節點，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，如果沒有其他節點可讀取，則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">這是非同步版本<ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>，使用相同的功能。</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">若要使用此方法，您必須設定<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph>旗標設為<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">在未將 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 旗標設為 <ph id="ph3">&lt;see langword="true" /&gt;</ph>的情況下呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 非同步方法。</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadAttributeValue">
          <source>When overridden in a derived class, parses the attribute value into one or more <ph id="ph1">&lt;see langword="Text" /&gt;</ph>, <ph id="ph2">&lt;see langword="EntityReference" /&gt;</ph>, or <ph id="ph3">&lt;see langword="EndEntity" /&gt;</ph> nodes.</source>
          <target state="translated">在衍生類別中覆寫時，將屬性值剖析成一或多個 <ph id="ph1">&lt;see langword="Text" /&gt;</ph>、<ph id="ph2">&lt;see langword="EntityReference" /&gt;</ph> 或 <ph id="ph3">&lt;see langword="EndEntity" /&gt;</ph> 節點。</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadAttributeValue">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if there are nodes to return.</source>
          <target state="translated">如果傳回的是節點，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadAttributeValue">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.</source>
          <target state="translated">如果在初次呼叫時讀取器不位於屬性節點上，或已讀取所有屬性值，則為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadAttributeValue">
          <source>An empty attribute, such as, <bpt id="p1">&lt;c&gt;</bpt>misc=""<ept id="p1">&lt;/c&gt;</ept>, returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> with a single node with a value of <ph id="ph2">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated">針對含有 <ph id="ph2">&lt;see langword="String.Empty" /&gt;</ph> 值的單一節點，空白的屬性 (例如 <bpt id="p1">&lt;c&gt;</bpt>misc=""<ept id="p1">&lt;/c&gt;</ept>) 會傳回 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadAttributeValue">
          <source>Use this method after calling <ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToAttribute%2A&gt;</ph> to read through the text or entity reference nodes that make up the attribute value.</source>
          <target state="translated">使用這個方法之後呼叫<ph id="ph1">&lt;xref:System.Xml.XmlReader.MoveToAttribute%2A&gt;</ph>閱讀組成屬性值的文字或實體參考節點。</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadAttributeValue">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader.Depth%2A&gt;</ph> of the attribute value nodes is one plus the depth of the attribute node; it increments and decrements by one when you step into and out of general entity references.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.Depth%2A&gt;</ph>的屬性值節點是一個加上該屬性節點的深度，則它會自動遞增和遞減 1 當您逐步執行和跳離一般實體參考。</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadAttributeValue">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadAttributeValue">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The type of the value to be returned.</source>
          <target state="translated">要傳回的值型别。</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> With the release of the .NET Framework 3.5, the value of the <bpt id="p2">&lt;c&gt;</bpt>returnType<ept id="p2">&lt;/c&gt;</ept> parameter can now be the <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> type.</source>
          <target state="translated"><bpt id="p1">**</bpt>注意<ept id="p1">**</ept>：使用 .NET Framework 3.5 的版本時，<bpt id="p2">&lt;c&gt;</bpt>returnType<ept id="p2">&lt;/c&gt;</ept> 參數的值現在可以是 <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> 類型。</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> object that is used to resolve any namespace prefixes related to type conversion.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> 物件，用來解析任何與型別轉換相關的命名空間前置詞。</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>For example, this can be used when converting an <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> object to an <bpt id="p1">&lt;c&gt;</bpt>xs:string<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">例如，將 <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> 物件轉換為 <bpt id="p1">&lt;c&gt;</bpt>xs:string<ept id="p1">&lt;/c&gt;</ept> 時，可以使用它。</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>This value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個值可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Reads the content as an object of the type specified.</source>
          <target state="translated">以指定型别的物件形式讀取內容。</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The concatenated text content or attribute value converted to the requested type.</source>
          <target state="translated">轉換為要求類型的串連文字內容或屬性值。</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>This method reads the text content at the current reader position and converts it to the requested return type.</source>
          <target state="translated">這個方法會在目前的讀取器位置的文字內容，並將它轉換成要求的傳回型別。</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Text, white space, significant white space and CDATA sections are concatenated.</source>
          <target state="translated">文字、泛空白字元、顯著泛空白字元及 CDATA 區段都是串連的。</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Comments and processing instructions are skipped and entity references are automatically resolved.</source>
          <target state="translated">註解和處理指示會略過，並且實體參考會自動進行解析。</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>This method is used to read, convert if necessary, and return atomic value items from the current node content.</source>
          <target state="translated">這個方法用來讀取、 將轉換如有必要，並傳回不可部份完成值的項目從目前的節點內容。</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>If the input type is a valid mappings for the type of the current node then an instance of the target type containing the value of the current node is returned.</source>
          <target state="translated">如果輸入的型別是有效的對應，包含目前節點的值的目標型別執行個體的目前節點的類型，會傳回。</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>See the Remarks section in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> referencepage for a list of the default mappings.</source>
          <target state="translated">請參閱 &lt; 備註 &gt; 一節中的<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>referencepage 如需預設對應的清單。</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>For example, if you had the following XML text:</source>
          <target state="translated">例如，如果您在下列 XML 文字：</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>If the data is typed and a string array is supplied to the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph> method call, then the integer values are converted from strings according to the list of valid CLR type mappings.</source>
          <target state="translated">如果資料型別和字串陣列，提供給<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph>方法呼叫，則整數值會從根據有效的 CLR 型別對應的清單的字串轉換。</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>If the data is untyped and a string array is supplied to the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph> method call, then the content is parsed into separate strings.</source>
          <target state="translated">如果資料不具類型和字串陣列，提供給<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph>方法呼叫，將內容會剖析為個別的字串。</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>An array containing two strings is returned with the values "123" and "456".</source>
          <target state="translated">包含兩個字串的陣列，會傳回與"123"和"456"的值。</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The spaces are not preserved from the content.</source>
          <target state="translated">從內容，不會保留空白。</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>In general when reading untyped data the content is parsed according to the supplied type.</source>
          <target state="translated">通常在讀取不具類型的資料的內容會剖析根據提供的型別。</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>For example, if an integer array is supplied to the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph> method call then the string is parsed into an array of integers <ph id="ph2">{123,456}</ph>.</source>
          <target state="translated">例如，如果整數陣列提供給<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph>方法呼叫，將此字串會剖析為整數的陣列<ph id="ph2">{123,456}</ph>。</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>In the following example the XML text is not separated by spaces</source>
          <target state="translated">在下列範例中的 XML 文字是不以空格分隔</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>If the content is untyped and a string array is supplied to the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph> method call then an array containing one concatenated string is returned with the value "123456789".</source>
          <target state="translated">如果內容是不具型別和字串陣列，提供給<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph>方法然後呼叫其中包含一個 「 123456789"的值會傳回串連的字串陣列。</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The following table describes how this method treats each node type.</source>
          <target state="translated">下表說明這個方法會如何處理每個節點類型。</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>XmlNodeType</source>
          <target state="translated">XmlNodeType</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Return value</source>
          <target state="translated">傳回值</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Reader behavior</source>
          <target state="translated">讀取器行為</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</source>
          <target state="translated">文字、CDATA、泛空白字元及顯著泛空白字元節點的串連內容會轉換為要求的型別。</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">移至下一個開始項目或結尾項目標記。</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">實體參考會自動展開。</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Same as calling <ph id="ph1">`XmlConvert.ToXxx`</ph> on the attribute value.</source>
          <target state="translated">與呼叫相同<ph id="ph1">`XmlConvert.ToXxx`</ph>屬性值。</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The reader remains in the current position.</source>
          <target state="translated">讀取器會保持在目前位置。</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</source>
          <target state="translated">忽略處理指示 (PI) 或註解，並讀取 PI 或註解後面的串連文字內容。</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">移至下一個開始項目或結尾項目標記。</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">實體參考會自動展開。</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>An empty string.</source>
          <target state="translated">空字串。</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The reader remains in the current position.</source>
          <target state="translated">讀取器會保持在目前位置。</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">擲回 <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Undefined, although typically the reader remains in the current position.</source>
          <target state="translated">未定義 (但讀取器通常會保持在目前位置)。</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如需詳細資訊，請參閱 &lt; 備註 &gt; 一節<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>參考頁面和<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsAsync%2A&gt;</ph>.</source>
          <target state="translated">這個方法的非同步版本，請參閱<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsAsync%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph> method to return the contents of the colors element into an array of string objects.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph>方法以傳回色彩項目的內容到字串物件的陣列。</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The example uses the <ph id="ph1">`dataFile_2.xml`</ph> file as input.</source>
          <target state="translated">該範例使用 <ph id="ph1">`dataFile_2.xml`</ph> 檔案做為輸入。</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The content is not in the correct format for the target type.</source>
          <target state="translated">此內容的目標類型格式不正確。</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The attempted cast is not valid.</source>
          <target state="translated">嘗試的轉換無效。</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The <ph id="ph1">&lt;paramref name="returnType" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="returnType" /&gt;</ph> 值為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Read <ph id="ph1">&lt;see langword="Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated">讀取 <ph id="ph1">&lt;see langword="Decimal.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The type of the value to be returned.</source>
          <target state="translated">要傳回的值型别。</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> object that is used to resolve any namespace prefixes related to type conversion.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> 物件，用來解析任何與型別轉換相關的命名空間前置詞。</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Asynchronously reads the content as an object of the type specified.</source>
          <target state="translated">以非同步的方式讀取做為指定型别之物件的內容。</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The concatenated text content or attribute value converted to the requested type.</source>
          <target state="translated">轉換為要求類型的串連文字內容或屬性值。</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">這是非同步版本<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAs%2A&gt;</ph>，使用相同的功能。</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">若要使用此方法，您必須設定<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph>旗標設為<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">在未將 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 旗標設為 <ph id="ph3">&lt;see langword="true" /&gt;</ph>的情況下呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 非同步方法。</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to copy the resulting text.</source>
          <target state="translated">將產生的文字複製到其中的緩衝區。</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個值不能是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the buffer where to start copying the result.</source>
          <target state="translated">緩衝區中開始複製結果的位移。</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to copy into the buffer.</source>
          <target state="translated">要複製至緩衝區中的最大位元組數目。</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes copied is returned from this method.</source>
          <target state="translated">從這個方法傳回所複製的實際位元組數目。</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>Reads the content and returns the Base64 decoded binary bytes.</source>
          <target state="translated">讀取內容，並傳回 Base64 已解碼的二進位位元組。</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">寫入緩衝區的位元組數目。</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This method streams the content, decodes the <ph id="ph1">`Base64`</ph> content, and returns the decoded binary bytes (for example, an inline <ph id="ph2">`Base64`</ph> encoded GIF image) into the buffer.</source>
          <target state="translated">這個方法內容串流、 解碼<ph id="ph1">`Base64`</ph>內容，並傳回解碼的二進位位元組 (例如，內嵌<ph id="ph2">`Base64`</ph>編碼的 GIF 影像) 到緩衝區。</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This method can be called successively to read large streams of embedded text.</source>
          <target state="translated">這個方法可以連續呼叫來讀取內嵌文字的大量資料流。</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</source>
          <target state="translated">如需詳細資訊，請參閱 RFC 1521"MIME （多用途網際網路郵件延伸標準） 部分一個： 機制來指定，並描述網際網路訊息內文的格式 」。</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>You can obtain RFCs from the <bpt id="p1">[</bpt>Request for Comments Web site<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=37119)</ept>.</source>
          <target state="translated">您可以取得從 Rfc<bpt id="p1">[</bpt>註解的網站要求<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=37119)</ept>。</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>You should not access any of the reader properties between calls to the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBase64%2A&gt;</ph> method until the method returns the value <ph id="ph2">`0`</ph>.</source>
          <target state="translated">您不應該存取的任何呼叫之間的讀取器屬性<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBase64%2A&gt;</ph>方法，直到方法會傳回值<ph id="ph2">`0`</ph>。</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This method has the following behavior:</source>
          <target state="translated">此方法具有下列行為：</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBase64%2A&gt;</ph> returns the value <ph id="ph2">`0`</ph> when it has reached the end of the byte stream it was operating on.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBase64%2A&gt;</ph> 傳回值<ph id="ph2">`0`</ph>當它已達到它所操作的位元組資料流的結尾。</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The reader is positioned on the first non-content node.</source>
          <target state="translated">讀取器第一個非內容節點上。</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>If you ask for fewer, or the exact number of, bytes than are left in the stream the reader remains in its current position.</source>
          <target state="translated">如果您尋求更少，或確切的數字的位元組會保留在資料流讀取器會保留在其目前位置。</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBase64%2A&gt;</ph> is not supported on the following XML node types: <ph id="ph2">`Element`</ph>, <ph id="ph3">`XmlDeclaration`</ph>, <ph id="ph4">`None`</ph>, <ph id="ph5">`Document`</ph>, <ph id="ph6">`DocumentType`</ph>, <ph id="ph7">`Notation`</ph>, <ph id="ph8">`Entity`</ph>, <ph id="ph9">`DocumentFragment`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBase64%2A&gt;</ph> 不支援下列的 XML 節點類型： <ph id="ph2">`Element`</ph>， <ph id="ph3">`XmlDeclaration`</ph>， <ph id="ph4">`None`</ph>， <ph id="ph5">`Document`</ph>， <ph id="ph6">`DocumentType`</ph>， <ph id="ph7">`Notation`</ph>， <ph id="ph8">`Entity`</ph>， <ph id="ph9">`DocumentFragment`</ph>。</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBase64Async%2A&gt;</ph>.</source>
          <target state="translated">這個方法的非同步版本，請參閱<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBase64Async%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 值為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The index into the buffer or index + count is larger than the allocated buffer size.</source>
          <target state="translated">緩衝區的索引或是索引 + 計數大於所配置的緩衝區大小。</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> implementation does not support this method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 實作不支援這個方法。</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to copy the resulting text.</source>
          <target state="translated">將產生的文字複製到其中的緩衝區。</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個值不能是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the buffer where to start copying the result.</source>
          <target state="translated">緩衝區中開始複製結果的位移。</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to copy into the buffer.</source>
          <target state="translated">要複製至緩衝區中的最大位元組數目。</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes copied is returned from this method.</source>
          <target state="translated">從這個方法傳回所複製的實際位元組數目。</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>Asynchronously reads the content and returns the Base64 decoded binary bytes.</source>
          <target state="translated">以非同步的方式讀取內容，並傳回 Base64 已解碼的二進位位元組。</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">寫入緩衝區的位元組數目。</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBase64%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">這是非同步版本<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBase64%2A&gt;</ph>，使用相同的功能。</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">若要使用此方法，您必須設定<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph>旗標設為<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">在未將 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 旗標設為 <ph id="ph3">&lt;see langword="true" /&gt;</ph>的情況下呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 非同步方法。</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to copy the resulting text.</source>
          <target state="translated">將產生的文字複製到其中的緩衝區。</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個值不能是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the buffer where to start copying the result.</source>
          <target state="translated">緩衝區中開始複製結果的位移。</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to copy into the buffer.</source>
          <target state="translated">要複製至緩衝區中的最大位元組數目。</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes copied is returned from this method.</source>
          <target state="translated">從這個方法傳回所複製的實際位元組數目。</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>Reads the content and returns the <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> decoded binary bytes.</source>
          <target state="translated">讀取內容，並傳回 <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> 已解碼的二進位位元組。</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">寫入緩衝區的位元組數目。</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method streams the content, decodes the <ph id="ph1">`BinHex`</ph> content, and returns the decoded binary bytes (for example, an inline <ph id="ph2">`BinHex`</ph> encoded GIF image) into the buffer.</source>
          <target state="translated">這個方法內容串流、 解碼<ph id="ph1">`BinHex`</ph>內容，並傳回解碼的二進位位元組 (例如，內嵌<ph id="ph2">`BinHex`</ph>編碼的 GIF 影像) 到緩衝區。</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method can be called successively to read large streams of embedded text.</source>
          <target state="translated">這個方法可以連續呼叫來讀取內嵌文字的大量資料流。</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>You should not access any of the reader properties between calls to the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBinHex%2A&gt;</ph> method until the method returns the value <ph id="ph2">`0`</ph>.</source>
          <target state="translated">您不應該存取的任何呼叫之間的讀取器屬性<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBinHex%2A&gt;</ph>方法，直到方法會傳回值<ph id="ph2">`0`</ph>。</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method has the following behavior:</source>
          <target state="translated">此方法具有下列行為：</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBinHex%2A&gt;</ph> returns the value <ph id="ph2">`0`</ph> when it has reached the end of the byte stream it was operating on.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBinHex%2A&gt;</ph> 傳回值<ph id="ph2">`0`</ph>當它已達到它所操作的位元組資料流的結尾。</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The reader is positioned on the first non-content node.</source>
          <target state="translated">讀取器第一個非內容節點上。</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>If you ask for fewer, or the exact number, of bytes than are left in the stream the reader remains in its current position.</source>
          <target state="translated">如果您尋求更少，或的確實數目，也會保留在資料流讀取位元組會保留在其目前位置。</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBinHex%2A&gt;</ph> is not supported on the following XML node types: <ph id="ph2">`Element`</ph>, <ph id="ph3">`XmlDeclaration`</ph>, <ph id="ph4">`None`</ph>, <ph id="ph5">`Document`</ph>, <ph id="ph6">`DocumentType`</ph>, <ph id="ph7">`Notation, Entity`</ph>, <ph id="ph8">`DocumentFragment`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBinHex%2A&gt;</ph> 不支援下列的 XML 節點類型： <ph id="ph2">`Element`</ph>， <ph id="ph3">`XmlDeclaration`</ph>， <ph id="ph4">`None`</ph>， <ph id="ph5">`Document`</ph>， <ph id="ph6">`DocumentType`</ph>， <ph id="ph7">`Notation, Entity`</ph>， <ph id="ph8">`DocumentFragment`</ph>。</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBinHexAsync%2A&gt;</ph>.</source>
          <target state="translated">這個方法的非同步版本，請參閱<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBinHexAsync%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 值為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The index into the buffer or index + count is larger than the allocated buffer size.</source>
          <target state="translated">緩衝區的索引或是索引 + 計數大於所配置的緩衝區大小。</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> implementation does not support this method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 實作不支援這個方法。</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to copy the resulting text.</source>
          <target state="translated">將產生的文字複製到其中的緩衝區。</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個值不能是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the buffer where to start copying the result.</source>
          <target state="translated">緩衝區中開始複製結果的位移。</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to copy into the buffer.</source>
          <target state="translated">要複製至緩衝區中的最大位元組數目。</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes copied is returned from this method.</source>
          <target state="translated">從這個方法傳回所複製的實際位元組數目。</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>Asynchronously reads the content and returns the <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> decoded binary bytes.</source>
          <target state="translated">以非同步的方式讀取內容，並傳回 <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> 的解碼二進位位元組。</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">寫入緩衝區的位元組數目。</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBinHex%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">這是非同步版本<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBinHex%2A&gt;</ph>，使用相同的功能。</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">若要使用此方法，您必須設定<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph>旗標設為<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">在未將 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 旗標設為 <ph id="ph3">&lt;see langword="true" /&gt;</ph>的情況下呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 非同步方法。</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>Reads the text content at the current position as a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</source>
          <target state="translated">以 <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> 的形式，讀取目前位置的文字內容。</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>The text content as a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 物件形式的文字內容。</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</source>
          <target state="translated">這個方法會串連文字、 泛空白字元、 顯著泛空白字元和 CDATA 區段，並略過任何註解或處理指示。</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>Entity references are automatically resolved.</source>
          <target state="translated">實體參考會自動進行解析。</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>If the content is typed <ph id="ph1">`xsd:boolean`</ph>, the reader returns an unboxed <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> object.</source>
          <target state="translated">如果內容的型別<ph id="ph1">`xsd:boolean`</ph>，讀取器傳回 unboxed<ph id="ph2">&lt;xref:System.Boolean&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>If the content is not typed <ph id="ph1">`xsd:boolean`</ph>, the reader attempts to convert it to a <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> object according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如果內容不具類型<ph id="ph1">`xsd:boolean`</ph>，讀取器會嘗試將它轉換成<ph id="ph2">&lt;xref:System.Boolean&gt;</ph>物件所定義的規則根據<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>The following table describes how this method treats each node type.</source>
          <target state="translated">下表說明這個方法會如何處理每個節點類型。</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>XmlNodeType</source>
          <target state="translated">XmlNodeType</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>Return value</source>
          <target state="translated">傳回值</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>Reader behavior</source>
          <target state="translated">讀取器行為</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</source>
          <target state="translated">文字、CDATA、泛空白字元及顯著泛空白字元節點的串連內容會轉換為要求的型別。</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">移至下一個開始項目或結尾項目標記。</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">實體參考會自動展開。</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>Same as calling <ph id="ph1">`XmlConvert.ToXxx`</ph> on the attribute value.</source>
          <target state="translated">與呼叫相同<ph id="ph1">`XmlConvert.ToXxx`</ph>屬性值。</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>The reader remains in the current position.</source>
          <target state="translated">讀取器會保持在目前位置。</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</source>
          <target state="translated">忽略處理指示 (PI) 或註解，並讀取 PI 或註解後面的串連文字內容。</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">移至下一個開始項目或結尾項目標記。</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">實體參考會自動展開。</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>An empty string.</source>
          <target state="translated">空字串。</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>The reader remains in the current position.</source>
          <target state="translated">讀取器會保持在目前位置。</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">擲回 <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>Undefined, although typically the reader remains in the current position.</source>
          <target state="translated">未定義 (但讀取器通常會保持在目前位置)。</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>參考頁面和<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBoolean%2A&gt;</ph> method to read the attribute as a B<ph id="ph2">`oolean`</ph> value.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBoolean%2A&gt;</ph>方法來讀取當做 B 屬性<ph id="ph2">`oolean`</ph>值。</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>The example uses the <ph id="ph1">`dataFile_2.xml`</ph> file as input.</source>
          <target state="translated">該範例使用 <ph id="ph1">`dataFile_2.xml`</ph> 檔案做為輸入。</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>The attempted cast is not valid.</source>
          <target state="translated">嘗試的轉換無效。</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>The string format is not valid.</source>
          <target state="translated">字串格式無效。</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsBoolean">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>Reads the text content at the current position as a <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> object.</source>
          <target state="translated">以 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 物件的形式，讀取目前位置的文字內容。</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>The text content as a <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 物件形式的文字內容。</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</source>
          <target state="translated">這個方法會串連文字、 泛空白字元、 顯著泛空白字元和 CDATA 區段，並略過任何註解或處理指示。</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>Entity references are automatically resolved.</source>
          <target state="translated">實體參考會自動進行解析。</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>If the content is typed <ph id="ph1">`xsd:dateTime`</ph>, the reader returns an unboxed <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object.</source>
          <target state="translated">如果內容的型別<ph id="ph1">`xsd:dateTime`</ph>，讀取器傳回 unboxed<ph id="ph2">&lt;xref:System.DateTime&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>If the content is not typed <ph id="ph1">`xsd:dateTime`</ph>, the reader attempts to convert it to a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如果內容不具類型<ph id="ph1">`xsd:dateTime`</ph>，讀取器會嘗試將它轉換成<ph id="ph2">&lt;xref:System.DateTime&gt;</ph>物件所定義的規則根據<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>You cannot rely on the <ph id="ph1">&lt;xref:System.DateTime.Year%2A?displayProperty=nameWithType&gt;</ph> value when the content is typed as <ph id="ph2">`xsd:gMonthDay`</ph>.</source>
          <target state="translated">當內容的型別為 <ph id="ph1">&lt;xref:System.DateTime.Year%2A?displayProperty=nameWithType&gt;</ph> 時，無法依賴 <ph id="ph2">`xsd:gMonthDay`</ph> 值。</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> always sets the <ph id="ph2">&lt;xref:System.DateTime.Year%2A?displayProperty=nameWithType&gt;</ph> value to 1904 in this case.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 永遠設定<ph id="ph2">&lt;xref:System.DateTime.Year%2A?displayProperty=nameWithType&gt;</ph>在此情況下為 1904年值。</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>The following table describes how this method treats each node type.</source>
          <target state="translated">下表說明這個方法會如何處理每個節點類型。</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>XmlNodeType</source>
          <target state="translated">XmlNodeType</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>Return value</source>
          <target state="translated">傳回值</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>Reader behavior</source>
          <target state="translated">讀取器行為</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</source>
          <target state="translated">文字、CDATA、泛空白字元及顯著泛空白字元節點的串連內容會轉換為要求的型別。</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">移至下一個開始項目或結尾項目標記。</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">實體參考會自動展開。</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>Same as calling <ph id="ph1">`XmlConvert.ToXxx`</ph> on the attribute value.</source>
          <target state="translated">與呼叫相同<ph id="ph1">`XmlConvert.ToXxx`</ph>屬性值。</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>The reader remains in the current position.</source>
          <target state="translated">讀取器會保持在目前位置。</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</source>
          <target state="translated">忽略處理指示 (PI) 或註解，並讀取 PI 或註解後面的串連文字內容。</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">移至下一個開始項目或結尾項目標記。</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">實體參考會自動展開。</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>An empty string.</source>
          <target state="translated">空字串。</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>The reader remains in the current position.</source>
          <target state="translated">讀取器會保持在目前位置。</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">擲回 <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>Undefined, although typically the reader remains in the current position.</source>
          <target state="translated">未定義 (但讀取器通常會保持在目前位置)。</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>參考頁面和<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>The attempted cast is not valid.</source>
          <target state="translated">嘗試的轉換無效。</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>The string format is not valid.</source>
          <target state="translated">字串格式無效。</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDateTime">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDateTimeOffset">
          <source>Reads the text content at the current position as a <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> object.</source>
          <target state="translated">以 <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> 物件的形式，讀取目前位置的文字內容。</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDateTimeOffset">
          <source>The text content as a <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> 物件形式的文字內容。</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDateTimeOffset">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDateTimeOffset">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>Reads the text content at the current position as a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object.</source>
          <target state="translated">以 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 物件的形式，讀取目前位置的文字內容。</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>The text content at the current position as a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 物件形式的目前位置文字內容。</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</source>
          <target state="translated">這個方法會串連文字、 泛空白字元、 顯著泛空白字元和 CDATA 區段，並略過任何註解或處理指示。</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>Entity references are automatically resolved.</source>
          <target state="translated">實體參考會自動進行解析。</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>If the content is typed <ph id="ph1">`xsd:decimal`</ph>, the reader returns an unboxed <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> object.</source>
          <target state="translated">如果內容的型別<ph id="ph1">`xsd:decimal`</ph>，讀取器傳回 unboxed<ph id="ph2">&lt;xref:System.Decimal&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>If the content is not typed <ph id="ph1">`xsd:decimal`</ph>, the reader attempts to convert it to a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> object according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如果內容不具類型<ph id="ph1">`xsd:decimal`</ph>，讀取器會嘗試將它轉換成<ph id="ph2">&lt;xref:System.Decimal&gt;</ph>物件所定義的規則根據<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>The following table describes how this method treats each node type.</source>
          <target state="translated">下表說明這個方法會如何處理每個節點類型。</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>XmlNodeType</source>
          <target state="translated">XmlNodeType</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>Return value</source>
          <target state="translated">傳回值</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>Reader behavior</source>
          <target state="translated">讀取器行為</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</source>
          <target state="translated">文字、CDATA、泛空白字元及顯著泛空白字元節點的串連內容會轉換為要求的型別。</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">移至下一個開始項目或結尾項目標記。</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">實體參考會自動展開。</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>Same as calling <ph id="ph1">`XmlConvert.ToXxx`</ph> on the attribute value.</source>
          <target state="translated">與呼叫相同<ph id="ph1">`XmlConvert.ToXxx`</ph>屬性值。</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>The reader remains in the current position.</source>
          <target state="translated">讀取器會保持在目前位置。</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</source>
          <target state="translated">忽略處理指示 (PI) 或註解，並讀取 PI 或註解後面的串連文字內容。</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">移至下一個開始項目或結尾項目標記。</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">實體參考會自動展開。</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>An empty string.</source>
          <target state="translated">空字串。</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>The reader remains in the current position.</source>
          <target state="translated">讀取器會保持在目前位置。</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">擲回 <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>Undefined, although typically the reader remains in the current position.</source>
          <target state="translated">未定義 (但讀取器通常會保持在目前位置)。</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>參考頁面和<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>The attempted cast is not valid.</source>
          <target state="translated">嘗試的轉換無效。</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>The string format is not valid.</source>
          <target state="translated">字串格式無效。</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDecimal">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>Reads the text content at the current position as a double-precision floating-point number.</source>
          <target state="translated">以雙精確度浮點數的形式讀取目前位置的文字內容。</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>The text content as a double-precision floating-point number.</source>
          <target state="translated">雙精確度浮點數形式的文字內容。</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</source>
          <target state="translated">這個方法會串連文字、 泛空白字元、 顯著泛空白字元和 CDATA 區段，並略過任何註解或處理指示。</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>Entity references are automatically resolved.</source>
          <target state="translated">實體參考會自動進行解析。</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>If the content is typed <ph id="ph1">`xsd:double`</ph>, the reader returns a double-precision floating-point number.</source>
          <target state="translated">如果內容的型別<ph id="ph1">`xsd:double`</ph>，讀取器傳回的雙精確度浮點數。</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>If the content is not typed <ph id="ph1">`xsd:double`</ph>, the reader attempts to convert it to a double-precision floating-point number according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如果內容不具類型<ph id="ph1">`xsd:double`</ph>，讀取器會嘗試將它轉換為雙精確度浮點數，根據所定義的規則<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>The following table describes how this method treats each node type.</source>
          <target state="translated">下表說明這個方法會如何處理每個節點類型。</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>XmlNodeType</source>
          <target state="translated">XmlNodeType</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>Return value</source>
          <target state="translated">傳回值</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>Reader behavior</source>
          <target state="translated">讀取器行為</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</source>
          <target state="translated">文字、CDATA、泛空白字元及顯著泛空白字元節點的串連內容會轉換為要求的型別。</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">移至下一個開始項目或結尾項目標記。</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">實體參考會自動展開。</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>Same as calling <ph id="ph1">`XmlConvert.ToXxx`</ph> on the attribute value.</source>
          <target state="translated">與呼叫相同<ph id="ph1">`XmlConvert.ToXxx`</ph>屬性值。</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>The reader remains in the current position.</source>
          <target state="translated">讀取器會保持在目前位置。</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</source>
          <target state="translated">忽略處理指示 (PI) 或註解，並讀取 PI 或註解後面的串連文字內容。</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">移至下一個開始項目或結尾項目標記。</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">實體參考會自動展開。</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>An empty string.</source>
          <target state="translated">空字串。</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>The reader remains in the current position.</source>
          <target state="translated">讀取器會保持在目前位置。</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">擲回 <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>Undefined, although typically the reader remains in the current position.</source>
          <target state="translated">未定義 (但讀取器通常會保持在目前位置)。</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>參考頁面和<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>The attempted cast is not valid.</source>
          <target state="translated">嘗試的轉換無效。</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>The string format is not valid.</source>
          <target state="translated">字串格式無效。</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsDouble">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>Reads the text content at the current position as a single-precision floating point number.</source>
          <target state="translated">以單精確度浮點數的形式讀取目前位置的文字內容。</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>The text content at the current position as a single-precision floating point number.</source>
          <target state="translated">單精確度浮點數形式之目前位置的文字內容。</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</source>
          <target state="translated">這個方法會串連文字、 泛空白字元、 顯著泛空白字元和 CDATA 區段，並略過任何註解或處理指示。</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>Entity references are automatically resolved.</source>
          <target state="translated">實體參考會自動進行解析。</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>If the content is typed <ph id="ph1">`xsd:float`</ph>, the reader returns an unboxed a single-precision floating point number.</source>
          <target state="translated">如果內容的型別<ph id="ph1">`xsd:float`</ph>，讀取器傳回 unboxed 單精確度浮點數。</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>If the content is not typed <ph id="ph1">`xsd:float`</ph>, the reader attempts to convert it to a single-precision floating point number according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如果內容不具類型<ph id="ph1">`xsd:float`</ph>，讀取器會嘗試將它轉換成單精確度浮點數所定義的規則根據<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>The following table describes how this method treats each node type.</source>
          <target state="translated">下表說明這個方法會如何處理每個節點類型。</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>XmlNodeType</source>
          <target state="translated">XmlNodeType</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>Return value</source>
          <target state="translated">傳回值</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>Reader behavior</source>
          <target state="translated">讀取器行為</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</source>
          <target state="translated">文字、CDATA、泛空白字元及顯著泛空白字元節點的串連內容會轉換為要求的型別。</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">移至下一個開始項目或結尾項目標記。</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">實體參考會自動展開。</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>Same as calling <ph id="ph1">`XmlConvert.ToXxx`</ph> on the attribute value.</source>
          <target state="translated">與呼叫相同<ph id="ph1">`XmlConvert.ToXxx`</ph>屬性值。</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>The reader remains in the current position.</source>
          <target state="translated">讀取器會保持在目前位置。</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</source>
          <target state="translated">忽略處理指示 (PI) 或註解，並讀取 PI 或註解後面的串連文字內容。</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">移至下一個開始項目或結尾項目標記。</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">實體參考會自動展開。</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>An empty string.</source>
          <target state="translated">空字串。</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>The reader remains in the current position.</source>
          <target state="translated">讀取器會保持在目前位置。</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">擲回 <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>Undefined, although typically the reader remains in the current position.</source>
          <target state="translated">未定義 (但讀取器通常會保持在目前位置)。</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如需詳細資訊，請參閱 &lt; 備註 &gt; 一節<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>參考頁面和<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>The attempted cast is not valid.</source>
          <target state="translated">嘗試的轉換無效。</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>The string format is not valid.</source>
          <target state="translated">字串格式無效。</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsFloat">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>Reads the text content at the current position as a 32-bit signed integer.</source>
          <target state="translated">以 32 位元帶正負號之整數的形式讀取目前位置的文字內容。</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>The text content as a 32-bit signed integer.</source>
          <target state="translated">32 位元帶正負號之整數形式的文字內容。</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</source>
          <target state="translated">這個方法會串連文字、 泛空白字元、 顯著泛空白字元和 CDATA 區段，並略過任何註解或處理指示。</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>Entity references are automatically resolved.</source>
          <target state="translated">實體參考會自動進行解析。</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>If the content is typed <ph id="ph1">`xsd:integer`</ph>, the reader returns an unboxed 32-bit signed integer.</source>
          <target state="translated">如果內容的型別<ph id="ph1">`xsd:integer`</ph>，讀取器傳回的 unboxed 的 32 位元帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>If the content is not typed <ph id="ph1">`xsd:integer`</ph>, the reader attempts to convert it to a 32-bit signed integer according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如果內容不具類型<ph id="ph1">`xsd:integer`</ph>，讀取器會嘗試將它轉換成 32 位元帶正負號的整數，依據所定義的規則<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>The following table describes how this method treats each node type.</source>
          <target state="translated">下表說明這個方法會如何處理每個節點類型。</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>XmlNodeType</source>
          <target state="translated">XmlNodeType</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>Return value</source>
          <target state="translated">傳回值</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>Reader behavior</source>
          <target state="translated">讀取器行為</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</source>
          <target state="translated">文字、CDATA、泛空白字元及顯著泛空白字元節點的串連內容會轉換為要求的型別。</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">移至下一個開始項目或結尾項目標記。</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">實體參考會自動展開。</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>Same as calling <ph id="ph1">`XmlConvert.ToXxx`</ph> on the attribute value.</source>
          <target state="translated">與呼叫相同<ph id="ph1">`XmlConvert.ToXxx`</ph>屬性值。</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>The reader remains in the current position.</source>
          <target state="translated">讀取器會保持在目前位置。</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</source>
          <target state="translated">忽略處理指示 (PI) 或註解，並讀取 PI 或註解後面的串連文字內容。</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">移至下一個開始項目或結尾項目標記。</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">實體參考會自動展開。</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>An empty string.</source>
          <target state="translated">空字串。</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>The reader remains in the current position.</source>
          <target state="translated">讀取器會保持在目前位置。</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">擲回 <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>Undefined, although typically the reader remains in the current position.</source>
          <target state="translated">未定義 (但讀取器通常會保持在目前位置)。</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如需詳細資訊，請參閱 &lt; 備註 &gt; 一節<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>參考頁面和<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>The attempted cast is not valid.</source>
          <target state="translated">嘗試的轉換無效。</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>The string format is not valid.</source>
          <target state="translated">字串格式無效。</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsInt">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>Reads the text content at the current position as a 64-bit signed integer.</source>
          <target state="translated">以 64 位元帶正負號之整數的形式讀取目前位置的文字內容。</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>The text content as a 64-bit signed integer.</source>
          <target state="translated">64 位元帶正負號之整數形式的文字內容。</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</source>
          <target state="translated">這個方法會串連文字、 泛空白字元、 顯著泛空白字元和 CDATA 區段，並略過任何註解或處理指示。</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>Entity references are automatically resolved.</source>
          <target state="translated">實體參考會自動進行解析。</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>If the content is typed <ph id="ph1">`xsd:long`</ph>, the reader returns an unboxed 64-bit signed integer.</source>
          <target state="translated">如果內容的型別<ph id="ph1">`xsd:long`</ph>，讀取器傳回的 unboxed 的 64 位元帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>If the content is not typed <ph id="ph1">`xsd:long`</ph>, the reader attempts to convert it to a 64-bit signed integer according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如果內容不具類型<ph id="ph1">`xsd:long`</ph>，讀取器會嘗試將它轉換成 64 位元帶正負號的整數，依據所定義的規則<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>The following table describes this method treats each node type.</source>
          <target state="translated">下表說明這個方法會將每個節點類型。</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>XmlNodeType</source>
          <target state="translated">XmlNodeType</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>Return value</source>
          <target state="translated">傳回值</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>Reader behavior</source>
          <target state="translated">讀取器行為</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</source>
          <target state="translated">文字、CDATA、泛空白字元及顯著泛空白字元節點的串連內容會轉換為要求的型別。</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">移至下一個開始項目或結尾項目標記。</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">實體參考會自動展開。</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>Same as <ph id="ph1">`XmlConvert.ToXxx`</ph> on attribute value.</source>
          <target state="translated">與相同<ph id="ph1">`XmlConvert.ToXxx`</ph>屬性值。</target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>The reader remains in the current position</source>
          <target state="translated">讀取器會保持在目前的位置</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</source>
          <target state="translated">忽略處理指示 (PI) 或註解，並讀取 PI 或註解後面的串連文字內容。</target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">移至下一個開始項目或結尾項目標記。</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">實體參考會自動展開。</target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>An empty string.</source>
          <target state="translated">空字串。</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>The reader remains in the current position.</source>
          <target state="translated">讀取器會保持在目前位置。</target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">擲回 <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>Undefined, although typically the reader remains in the current position.</source>
          <target state="translated">未定義 (但讀取器通常會保持在目前位置)。</target>       </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">如需詳細資訊，請參閱 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 參考頁面的＜備註＞一節。</target>       </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>The attempted cast is not valid.</source>
          <target state="translated">嘗試的轉換無效。</target>       </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>The string format is not valid.</source>
          <target state="translated">字串格式無效。</target>       </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsLong">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>Reads the text content at the current position as an <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">以 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 的形式，讀取目前位置的文字內容。</target>       </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>The text content as the most appropriate common language runtime (CLR) object.</source>
          <target state="translated">最合適之 Common Language Runtime (CLR) 物件形式的文字內容。</target>       </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</source>
          <target state="translated">這個方法會串連文字、 泛空白字元、 顯著泛空白字元和 CDATA 區段，並略過任何註解或處理指示。</target>       </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>Entity references are automatically resolved.</source>
          <target state="translated">實體參考會自動進行解析。</target>       </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>If the content is typed, the reader returns a boxed CLR of the most appropriate type, specified by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ValueType%2A&gt;</ph> property.</source>
          <target state="translated">如果內容的型別，讀取器會傳回所指定之最適當類型的 boxed 的 CLR<ph id="ph1">&lt;xref:System.Xml.XmlReader.ValueType%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>If the content is a list type, the reader returns an array of boxed objects of the appropriate type.</source>
          <target state="translated">如果內容是清單型別，讀取器會傳回適當類型的 boxed 物件的陣列。</target>       </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>If a validation error occurs while parsing the content and the reader is an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> object created by the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method, the reader returns the content as a string.</source>
          <target state="translated">如果剖析內容時，發生驗證錯誤而讀取器<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>所建立的物件<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph>方法，讀取器會傳回字串形式的內容。</target>       </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>In other words when a validation error or warning occurs, the content is considered to be untyped.</source>
          <target state="translated">換句話說驗證錯誤或警告發生時，內容會被視為不具型別。</target>       </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>If the content is not typed, the reader returns the content as a string.</source>
          <target state="translated">如果內容不具型別，則讀取器會以字串形式傳回內容。</target>       </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>The following table describes how this method treats each node type.</source>
          <target state="translated">下表說明這個方法會如何處理每個節點類型。</target>       </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>XmlNodeType</source>
          <target state="translated">XmlNodeType</target>       </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>Return value</source>
          <target state="translated">傳回值</target>       </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>Reader behavior</source>
          <target state="translated">讀取器行為</target>       </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</source>
          <target state="translated">文字、CDATA、泛空白字元及顯著泛空白字元節點的串連內容會轉換為要求的型別。</target>       </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">移至下一個開始項目或結尾項目標記。</target>       </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">實體參考會自動展開。</target>       </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>Same as calling <ph id="ph1">`XmlConvert.ToXxx`</ph> on the attribute value.</source>
          <target state="translated">與呼叫相同<ph id="ph1">`XmlConvert.ToXxx`</ph>屬性值。</target>       </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>The reader remains in the current position</source>
          <target state="translated">讀取器會保持在目前的位置</target>       </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</source>
          <target state="translated">忽略處理指示 (PI) 或註解，並讀取 PI 或註解後面的串連文字內容。</target>       </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">移至下一個開始項目或結尾項目標記。</target>       </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">實體參考會自動展開。</target>       </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>The value of the element if the reader is a schema validating reader (<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationType%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Xml.ValidationType.Schema&gt;</ph>); otherwise an empty string.</source>
          <target state="translated">如果讀取器會驗證讀取器的結構描述元素的值 (<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.ValidationType%2A&gt;</ph>設<ph id="ph2">&lt;xref:System.Xml.ValidationType.Schema&gt;</ph>); 否則為空字串。</target>       </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>The reader remains in the current position.</source>
          <target state="translated">讀取器會保持在目前位置。</target>       </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">擲回 <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>Undefined, although typically the reader remains in the current position.</source>
          <target state="translated">未定義 (但讀取器通常會保持在目前位置)。</target>       </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如需詳細資訊，請參閱 &lt; 備註 &gt; 一節<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>參考頁面和<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsObjectAsync%2A&gt;</ph>.</source>
          <target state="translated">這個方法的非同步版本，請參閱<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsObjectAsync%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>The attempted cast is not valid.</source>
          <target state="translated">嘗試的轉換無效。</target>       </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>The string format is not valid.</source>
          <target state="translated">字串格式無效。</target>       </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsObject">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsObjectAsync">
          <source>Asynchronously reads the text content at the current position as an <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">以非同步方式與 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 的形式，讀取目前位置的文字內容。</target>       </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsObjectAsync">
          <source>The text content as the most appropriate common language runtime (CLR) object.</source>
          <target state="translated">最合適之 Common Language Runtime (CLR) 物件形式的文字內容。</target>       </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObjectAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsObject%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">這是非同步版本<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsObject%2A&gt;</ph>，使用相同的功能。</target>       </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsObjectAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">若要使用此方法，您必須設定<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph>旗標設為<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsObjectAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">在未將 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 旗標設為 <ph id="ph3">&lt;see langword="true" /&gt;</ph>的情況下呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 非同步方法。</target>       </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsObjectAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</target>       </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>Reads the text content at the current position as a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object.</source>
          <target state="translated">以 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 物件的形式，讀取目前位置的文字內容。</target>       </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>The text content as a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 物件形式的文字內容。</target>       </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</source>
          <target state="translated">這個方法會串連文字、 泛空白字元、 顯著泛空白字元和 CDATA 區段，並略過任何註解或處理指示。</target>       </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>Entity references are automatically resolved.</source>
          <target state="translated">實體參考會自動進行解析。</target>       </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>This method can be used convert typed values to a string, or to read the text content while skipping comments and processing instructions.</source>
          <target state="translated">這個方法可以用將具類型的值轉換為字串，或略過註解和處理指示時，讀取的文字內容。</target>       </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>The following table describes how this method treats each node type.</source>
          <target state="translated">下表說明這個方法會如何處理每個節點類型。</target>       </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>XmlNodeType</source>
          <target state="translated">XmlNodeType</target>       </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>Return value</source>
          <target state="translated">傳回值</target>       </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>Reader behavior</source>
          <target state="translated">讀取器行為</target>       </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</source>
          <target state="translated">文字、CDATA、泛空白字元及顯著泛空白字元節點的串連內容會轉換為要求的型別。</target>       </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">移至下一個開始項目或結尾項目標記。</target>       </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">實體參考會自動展開。</target>       </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>Same as calling <ph id="ph1">`XmlConvert.ToXxx`</ph> on the attribute value.</source>
          <target state="translated">與呼叫相同<ph id="ph1">`XmlConvert.ToXxx`</ph>屬性值。</target>       </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>The reader remains in the current position.</source>
          <target state="translated">讀取器會保持在目前位置。</target>       </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</source>
          <target state="translated">忽略處理指示 (PI) 或註解，並讀取 PI 或註解後面的串連文字內容。</target>       </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>Moves to the next start element or end element tag.</source>
          <target state="translated">移至下一個開始項目或結尾項目標記。</target>       </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>Entity references are automatically expanded.</source>
          <target state="translated">實體參考會自動展開。</target>       </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>An empty string.</source>
          <target state="translated">空字串。</target>       </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>The reader remains in the current position.</source>
          <target state="translated">讀取器會保持在目前位置。</target>       </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">擲回 <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>Undefined, although typically the reader remains in the current position.</source>
          <target state="translated">未定義 (但讀取器通常會保持在目前位置)。</target>       </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如需詳細資訊，請參閱 &lt; 備註 &gt; 一節<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>參考頁面和<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsStringAsync%2A&gt;</ph>.</source>
          <target state="translated">這個方法的非同步版本，請參閱<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsStringAsync%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>The attempted cast is not valid.</source>
          <target state="translated">嘗試的轉換無效。</target>       </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>The string format is not valid.</source>
          <target state="translated">字串格式無效。</target>       </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsString">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsStringAsync">
          <source>Asynchronously reads the text content at the current position as a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object.</source>
          <target state="translated">以非同步方式與 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 物件的形式，讀取目前位置的文字內容。</target>       </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsStringAsync">
          <source>The text content as a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 物件形式的文字內容。</target>       </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsStringAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsString%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">這是非同步版本<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsString%2A&gt;</ph>，使用相同的功能。</target>       </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadContentAsStringAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">若要使用此方法，您必須設定<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph>旗標設為<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsStringAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">在未將 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 旗標設為 <ph id="ph3">&lt;see langword="true" /&gt;</ph>的情況下呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 非同步方法。</target>       </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadContentAsStringAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</target>       </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Reads the current element and returns the contents as an object of the type specified.</source>
          <target state="translated">以指定類型之物件的形式，讀取目前的項目並傳回內容。</target>       </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The type of the value to be returned.</source>
          <target state="translated">要傳回的值型别。</target>       </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> With the release of the .NET Framework 3.5, the value of the <bpt id="p2">&lt;c&gt;</bpt>returnType<ept id="p2">&lt;/c&gt;</ept> parameter can now be the <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> type.</source>
          <target state="translated"><bpt id="p1">**</bpt>注意<ept id="p1">**</ept>：使用 .NET Framework 3.5 的版本時，<bpt id="p2">&lt;c&gt;</bpt>returnType<ept id="p2">&lt;/c&gt;</ept> 參數的值現在可以是 <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> 類型。</target>       </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> object that is used to resolve any namespace prefixes related to type conversion.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> 物件，用來解析任何與型別轉換相關的命名空間前置詞。</target>       </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Reads the element content as the requested type.</source>
          <target state="translated">以要求之類型的形式讀取項目內容。</target>       </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The element content converted to the requested typed object.</source>
          <target state="translated">轉換為要求之類型物件的項目內容。</target>       </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">這個方法會讀取開始標記時，元素的內容，然後移動超過結尾項目標記讀取器。</target>       </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">它會擴充實體，並忽略處理指示與註解。</target>       </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The element can only contain simple content.</source>
          <target state="translated">元素只能包含簡單內容。</target>       </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">也就是說，它不能有子項目。</target>       </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如需詳細資訊，請參閱 &lt; 備註 &gt; 一節<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>參考頁面和<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsAsync%2A&gt;</ph>.</source>
          <target state="translated">這個方法的非同步版本，請參閱<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsAsync%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAs%2A&gt;</ph> method to read the content of the <ph id="ph2">`date`</ph> node.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAs%2A&gt;</ph>方法讀取的內容<ph id="ph2">`date`</ph>節點。</target>       </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The example uses the <ph id="ph1">`dataFile.xml`</ph> file as input.</source>
          <target state="translated">該範例使用 <ph id="ph1">`dataFile.xml`</ph> 檔案做為輸入。</target>       </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The current element contains child elements.</source>
          <target state="translated">目前的項目包含子項目。</target>       </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The element content cannot be converted to the requested type.</source>
          <target state="translated">項目內容無法轉換成要求的類型。</target>       </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">方法是以 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 引數呼叫。</target>       </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Read <ph id="ph1">&lt;see langword="Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated">讀取 <ph id="ph1">&lt;see langword="Decimal.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>The type of the value to be returned.</source>
          <target state="translated">要傳回的值型别。</target>       </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> With the release of the .NET Framework 3.5, the value of the <bpt id="p2">&lt;c&gt;</bpt>returnType<ept id="p2">&lt;/c&gt;</ept> parameter can now be the <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> type.</source>
          <target state="translated"><bpt id="p1">**</bpt>注意<ept id="p1">**</ept>：使用 .NET Framework 3.5 的版本時，<bpt id="p2">&lt;c&gt;</bpt>returnType<ept id="p2">&lt;/c&gt;</ept> 參數的值現在可以是 <ph id="ph1">&lt;see cref="T:System.DateTimeOffset" /&gt;</ph> 類型。</target>       </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> object that is used to resolve any namespace prefixes related to type conversion.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> 物件，用來解析任何與型別轉換相關的命名空間前置詞。</target>       </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">項目的本機名稱。</target>       </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">項目的命名空間 URI。</target>       </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>Checks that the specified local name and namespace URI matches that of the current element, then reads the element content as the requested type.</source>
          <target state="translated">檢查指定的區域名稱和命名空間 URI 是否與目前的項目相符，然後以要求之類型的形式讀取項目內容。</target>       </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>The element content converted to the requested typed object.</source>
          <target state="translated">轉換為要求之類型物件的項目內容。</target>       </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">這個方法會讀取開始標記時，元素的內容，然後移動超過結尾項目標記讀取器。</target>       </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">它會擴充實體，並忽略處理指示與註解。</target>       </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>The element can only contain simple content.</source>
          <target state="translated">元素只能包含簡單內容。</target>       </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">也就是說，它不能有子項目。</target>       </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如需詳細資訊，請參閱 &lt; 備註 &gt; 一節<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>參考頁面和<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>The current element contains child elements.</source>
          <target state="translated">目前的項目包含子項目。</target>       </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>The element content cannot be converted to the requested type.</source>
          <target state="translated">項目內容無法轉換成要求的類型。</target>       </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">方法是以 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 引數呼叫。</target>       </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>The specified local name and namespace URI do not match that of the current element being read.</source>
          <target state="translated">指定的區域名稱和命名空間 URI，與目前正在讀取的項目不相符。</target>       </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
          <source>Read <ph id="ph1">&lt;see langword="Decimal.MaxValue" /&gt;</ph>.</source>
          <target state="translated">讀取 <ph id="ph1">&lt;see langword="Decimal.MaxValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The type of the value to be returned.</source>
          <target state="translated">要傳回的值型别。</target>       </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> object that is used to resolve any namespace prefixes related to type conversion.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> 物件，用來解析任何與型別轉換相關的命名空間前置詞。</target>       </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Asynchronously reads the element content as the requested type.</source>
          <target state="translated">以要求之類型的形式，非同步讀取項目內容。</target>       </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The element content converted to the requested typed object.</source>
          <target state="translated">轉換為要求之類型物件的項目內容。</target>       </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAs%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">這是非同步版本<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAs%2A&gt;</ph>，使用相同的功能。</target>       </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">若要使用此方法，您必須設定<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph>旗標設為<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">在未將 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 旗標設為 <ph id="ph3">&lt;see langword="true" /&gt;</ph>的情況下呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 非同步方法。</target>       </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</target>       </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to copy the resulting text.</source>
          <target state="translated">將產生的文字複製到其中的緩衝區。</target>       </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個值不能是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the buffer where to start copying the result.</source>
          <target state="translated">緩衝區中開始複製結果的位移。</target>       </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to copy into the buffer.</source>
          <target state="translated">要複製至緩衝區中的最大位元組數目。</target>       </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes copied is returned from this method.</source>
          <target state="translated">從這個方法傳回所複製的實際位元組數目。</target>       </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>Reads the element and decodes the <ph id="ph1">&lt;see langword="Base64" /&gt;</ph> content.</source>
          <target state="translated">讀取項目，並將 <ph id="ph1">&lt;see langword="Base64" /&gt;</ph> 內容解碼。</target>       </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">寫入緩衝區的位元組數目。</target>       </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This method reads the element content, decodes it using <ph id="ph1">`Base64`</ph> encoding, and returns the decoded binary bytes (for example, an inline <ph id="ph2">`Base64`</ph>-encoded GIF image) into the buffer.</source>
          <target state="translated">這個方法會讀取的項目內容、 使用將其解碼<ph id="ph1">`Base64`</ph>編碼，並傳回解碼的二進位位元組 (例如，內嵌<ph id="ph2">`Base64`</ph>-編碼的 GIF 影像) 到緩衝區。</target>       </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</source>
          <target state="translated">如需詳細資訊，請參閱 RFC 1521"MIME （多用途網際網路郵件延伸標準） 部分一個： 機制來指定，並描述網際網路訊息內文的格式 」。</target>       </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>You can obtain RFCs from the <bpt id="p1">[</bpt>Request for Comments Web site<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=37119)</ept>.</source>
          <target state="translated">您可以取得從 Rfc<bpt id="p1">[</bpt>註解的網站要求<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=37119)</ept>。</target>       </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A&gt;</ph> can only read simple-content elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A&gt;</ph> 只能讀取簡單內容項目。</target>       </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions.</source>
          <target state="translated">項目可以包含文字、 泛空白字元、 顯著泛空白字元、 CDATA 區段中，註解和處理指示。</target>       </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>It can also contain entity references, which are automatically expanded.</source>
          <target state="translated">它也可以包含實體參考，會自動展開。</target>       </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The element cannot have child elements.</source>
          <target state="translated">項目不能有子項目。</target>       </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This method is very similar to the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBase64%2A&gt;</ph> method except that it can only be called on element node types.</source>
          <target state="translated">這個方法是非常類似於<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBase64%2A&gt;</ph>元素節點型別上只能呼叫只是它的方法。</target>       </trans-unit>
        <trans-unit id="1513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>If the <ph id="ph1">`count`</ph> value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> reads all the remaining bytes in the document and returns the number of bytes read.</source>
          <target state="translated">如果<ph id="ph1">`count`</ph>值高於在文件中的位元組數目，或如果是，文件中的位元組數目等於<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>讀取文件中所有剩餘的位元組，並傳回讀取的位元組數目。</target>       </trans-unit>
        <trans-unit id="1514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The next <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> method call returns a zero and moves the reader to the node following the <ph id="ph2">`EndElement`</ph>.</source>
          <target state="translated">下一步<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>方法呼叫會傳回零，並將讀取器移至節點下<ph id="ph2">`EndElement`</ph>。</target>       </trans-unit>
        <trans-unit id="1515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>If you call <ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> method was called.</source>
          <target state="translated">如果您呼叫<ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>已耗用所有的項目內容之前，讀取器可能如同所耗用的第一個內容，然後<ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>呼叫方法。</target>       </trans-unit>
        <trans-unit id="1516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>This means that the reader will read all the text until the end element is encountered.</source>
          <target state="translated">這表示讀取器會讀取所有文字，直到遇到結束項目。</target>       </trans-unit>
        <trans-unit id="1517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>It will then read the end tag node, read the next node, and then position itself on the next subsequent node.</source>
          <target state="translated">它會讀取結束標記節點、 讀取的下一個節點，然後將其自身的下一步的後續節點上。</target>       </trans-unit>
        <trans-unit id="1518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBase64Async%2A&gt;</ph>.</source>
          <target state="translated">這個方法的非同步版本，請參閱<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBase64Async%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The following example reads an inline <ph id="ph1">`Base64`</ph> encoded image.</source>
          <target state="translated">下列範例會讀取內嵌<ph id="ph1">`Base64`</ph>編碼的影像。</target>       </trans-unit>
        <trans-unit id="1520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`Base64`</ph> data is embedded within the <ph id="ph2">`&lt;image&gt;`</ph> element.</source>
          <target state="translated"><ph id="ph1">`Base64`</ph>資料內嵌於<ph id="ph2">`&lt;image&gt;`</ph>項目。</target>       </trans-unit>
        <trans-unit id="1521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;xref:System.IO.BinaryWriter&gt;</ph> is used to create a new binary data file.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.IO.BinaryWriter&gt;</ph>用來建立新的二進位資料檔案。</target>       </trans-unit>
        <trans-unit id="1522" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 值為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1523" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1524" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1525" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The index into the buffer or index + count is larger than the allocated buffer size.</source>
          <target state="translated">緩衝區的索引或是索引 + 計數大於所配置的緩衝區大小。</target>       </trans-unit>
        <trans-unit id="1526" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> implementation does not support this method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 實作不支援這個方法。</target>       </trans-unit>
        <trans-unit id="1527" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The element contains mixed-content.</source>
          <target state="translated">項目包含混合內容。</target>       </trans-unit>
        <trans-unit id="1528" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The content cannot be converted to the requested type.</source>
          <target state="translated">內容無法轉換成要求的類型。</target>       </trans-unit>
        <trans-unit id="1529" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to copy the resulting text.</source>
          <target state="translated">將產生的文字複製到其中的緩衝區。</target>       </trans-unit>
        <trans-unit id="1530" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個值不能是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1531" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the buffer where to start copying the result.</source>
          <target state="translated">緩衝區中開始複製結果的位移。</target>       </trans-unit>
        <trans-unit id="1532" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to copy into the buffer.</source>
          <target state="translated">要複製至緩衝區中的最大位元組數目。</target>       </trans-unit>
        <trans-unit id="1533" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes copied is returned from this method.</source>
          <target state="translated">從這個方法傳回所複製的實際位元組數目。</target>       </trans-unit>
        <trans-unit id="1534" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>Asynchronously reads the element and decodes the <ph id="ph1">&lt;see langword="Base64" /&gt;</ph> content.</source>
          <target state="translated">以非同步的方式讀取項目，並將 <ph id="ph1">&lt;see langword="Base64" /&gt;</ph> 內容解碼。</target>       </trans-unit>
        <trans-unit id="1535" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">寫入緩衝區的位元組數目。</target>       </trans-unit>
        <trans-unit id="1536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">這是非同步版本<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A&gt;</ph>，使用相同的功能。</target>       </trans-unit>
        <trans-unit id="1537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">若要使用此方法，您必須設定<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph>旗標設為<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1538" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">在未將 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 旗標設為 <ph id="ph3">&lt;see langword="true" /&gt;</ph>的情況下呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 非同步方法。</target>       </trans-unit>
        <trans-unit id="1539" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</target>       </trans-unit>
        <trans-unit id="1540" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to copy the resulting text.</source>
          <target state="translated">將產生的文字複製到其中的緩衝區。</target>       </trans-unit>
        <trans-unit id="1541" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個值不能是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1542" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the buffer where to start copying the result.</source>
          <target state="translated">緩衝區中開始複製結果的位移。</target>       </trans-unit>
        <trans-unit id="1543" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to copy into the buffer.</source>
          <target state="translated">要複製至緩衝區中的最大位元組數目。</target>       </trans-unit>
        <trans-unit id="1544" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes copied is returned from this method.</source>
          <target state="translated">從這個方法傳回所複製的實際位元組數目。</target>       </trans-unit>
        <trans-unit id="1545" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>Reads the element and decodes the <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> content.</source>
          <target state="translated">讀取項目，並將 <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> 內容解碼。</target>       </trans-unit>
        <trans-unit id="1546" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">寫入緩衝區的位元組數目。</target>       </trans-unit>
        <trans-unit id="1547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method reads the element content, decodes it using <ph id="ph1">`BinHex`</ph> encoding, and returns the decoded binary bytes (for example, an inline <ph id="ph2">`BinHex`</ph>-encoded GIF image) into the buffer.</source>
          <target state="translated">這個方法會讀取的項目內容、 使用將其解碼<ph id="ph1">`BinHex`</ph>編碼，並傳回解碼的二進位位元組 (例如，內嵌<ph id="ph2">`BinHex`</ph>-編碼的 GIF 影像) 到緩衝區。</target>       </trans-unit>
        <trans-unit id="1548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method can only read simple-content elements.</source>
          <target state="translated">這個方法只能讀取簡單內容項目。</target>       </trans-unit>
        <trans-unit id="1549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions.</source>
          <target state="translated">項目可以包含文字、 泛空白字元、 顯著泛空白字元、 CDATA 區段中，註解和處理指示。</target>       </trans-unit>
        <trans-unit id="1550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>It can also contain entity references, which are automatically expanded.</source>
          <target state="translated">它也可以包含實體參考，會自動展開。</target>       </trans-unit>
        <trans-unit id="1551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The element cannot have child elements.</source>
          <target state="translated">項目不能有子項目。</target>       </trans-unit>
        <trans-unit id="1552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This method is very similar to the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBinHex%2A&gt;</ph> method except that it can only be called on element node types.</source>
          <target state="translated">這個方法是非常類似於<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadContentAsBinHex%2A&gt;</ph>元素節點型別上只能呼叫只是它的方法。</target>       </trans-unit>
        <trans-unit id="1553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>If the <ph id="ph1">`count`</ph> value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> reads all the remaining bytes in the document and returns the number of bytes read.</source>
          <target state="translated">如果<ph id="ph1">`count`</ph>值高於在文件中的位元組數目，或如果是，文件中的位元組數目等於<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>讀取文件中所有剩餘的位元組，並傳回讀取的位元組數目。</target>       </trans-unit>
        <trans-unit id="1554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The next <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> method call returns a zero and moves the reader to the node following the <ph id="ph2">`EndElement`</ph>.</source>
          <target state="translated">下一步<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>方法呼叫會傳回零，並將讀取器移至節點下<ph id="ph2">`EndElement`</ph>。</target>       </trans-unit>
        <trans-unit id="1555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>If you call <ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> method was called.</source>
          <target state="translated">如果您呼叫<ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>已耗用所有的項目內容之前，讀取器可能如同所耗用的第一個內容，然後<ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>呼叫方法。</target>       </trans-unit>
        <trans-unit id="1556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>This means that the reader will read all the text until the end element is encountered.</source>
          <target state="translated">這表示讀取器會讀取所有文字，直到遇到結束項目。</target>       </trans-unit>
        <trans-unit id="1557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>It will then read the end tag node, read the next node, and then position itself on the next subsequent node.</source>
          <target state="translated">它會讀取結束標記節點、 讀取的下一個節點，然後將其自身的下一步的後續節點上。</target>       </trans-unit>
        <trans-unit id="1558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBinHexAsync%2A&gt;</ph>.</source>
          <target state="translated">這個方法的非同步版本，請參閱<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBinHexAsync%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The following example reads an inline <ph id="ph1">`BinHex`</ph> encoded image.</source>
          <target state="translated">下列範例會讀取內嵌<ph id="ph1">`BinHex`</ph>編碼的影像。</target>       </trans-unit>
        <trans-unit id="1560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`BinHex`</ph> data is embedded within the <ph id="ph2">`&lt;image&gt;`</ph> element.</source>
          <target state="translated"><ph id="ph1">`BinHex`</ph>資料內嵌於<ph id="ph2">`&lt;image&gt;`</ph>項目。</target>       </trans-unit>
        <trans-unit id="1561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;xref:System.IO.BinaryWriter&gt;</ph> is used to create a new binary data file.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.IO.BinaryWriter&gt;</ph>用來建立新的二進位資料檔案。</target>       </trans-unit>
        <trans-unit id="1562" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 值為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1563" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1564" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1565" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The index into the buffer or index + count is larger than the allocated buffer size.</source>
          <target state="translated">緩衝區的索引或是索引 + 計數大於所配置的緩衝區大小。</target>       </trans-unit>
        <trans-unit id="1566" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> implementation does not support this method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 實作不支援這個方法。</target>       </trans-unit>
        <trans-unit id="1567" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The element contains mixed-content.</source>
          <target state="translated">項目包含混合內容。</target>       </trans-unit>
        <trans-unit id="1568" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
          <source>The content cannot be converted to the requested type.</source>
          <target state="translated">內容無法轉換成要求的類型。</target>       </trans-unit>
        <trans-unit id="1569" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer into which to copy the resulting text.</source>
          <target state="translated">將產生的文字複製到其中的緩衝區。</target>       </trans-unit>
        <trans-unit id="1570" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個值不能是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1571" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the buffer where to start copying the result.</source>
          <target state="translated">緩衝區中開始複製結果的位移。</target>       </trans-unit>
        <trans-unit id="1572" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to copy into the buffer.</source>
          <target state="translated">要複製至緩衝區中的最大位元組數目。</target>       </trans-unit>
        <trans-unit id="1573" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The actual number of bytes copied is returned from this method.</source>
          <target state="translated">從這個方法傳回所複製的實際位元組數目。</target>       </trans-unit>
        <trans-unit id="1574" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>Asynchronously reads the element and decodes the <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> content.</source>
          <target state="translated">以非同步的方式讀取項目，並將 <ph id="ph1">&lt;see langword="BinHex" /&gt;</ph> 內容解碼。</target>       </trans-unit>
        <trans-unit id="1575" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes written to the buffer.</source>
          <target state="translated">寫入緩衝區的位元組數目。</target>       </trans-unit>
        <trans-unit id="1576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">這是非同步版本<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A&gt;</ph>，使用相同的功能。</target>       </trans-unit>
        <trans-unit id="1577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">若要使用此方法，您必須設定<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph>旗標設為<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1578" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">在未將 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 旗標設為 <ph id="ph3">&lt;see langword="true" /&gt;</ph>的情況下呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 非同步方法。</target>       </trans-unit>
        <trans-unit id="1579" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</target>       </trans-unit>
        <trans-unit id="1580" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1581" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1582" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Reads the current element value as a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> object.</source>
          <target state="translated">讀取目前的項目值做為<ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="1583" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>Reads the current element and returns the contents as a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> object.</source>
          <target state="translated">以 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 物件的形式，讀取目前項目並傳回內容。</target>       </trans-unit>
        <trans-unit id="1584" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>The element content as a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 物件形式的項目內容。</target>       </trans-unit>
        <trans-unit id="1585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">這個方法會讀取開始標記時，元素的內容，然後移動超過結尾項目標記讀取器。</target>       </trans-unit>
        <trans-unit id="1586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">它會擴充實體，並忽略處理指示與註解。</target>       </trans-unit>
        <trans-unit id="1587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>The element can only contain simple content.</source>
          <target state="translated">元素只能包含簡單內容。</target>       </trans-unit>
        <trans-unit id="1588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">也就是說，它不能有子項目。</target>       </trans-unit>
        <trans-unit id="1589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>If the element content is typed <ph id="ph1">`xsd:boolean`</ph>, the reader returns an unboxed <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> object.</source>
          <target state="translated">如果項目內容的型別<ph id="ph1">`xsd:boolean`</ph>，讀取器傳回 unboxed<ph id="ph2">&lt;xref:System.Boolean&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="1590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>If the content is not typed <ph id="ph1">`xsd:boolean`</ph>, the reader attempts to convert it to a <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> object according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如果內容不具類型<ph id="ph1">`xsd:boolean`</ph>，讀取器會嘗試將它轉換成<ph id="ph2">&lt;xref:System.Boolean&gt;</ph>物件所定義的規則根據<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">如需詳細資訊，請參閱 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 參考頁面的＜備註＞一節。</target>       </trans-unit>
        <trans-unit id="1592" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1593" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1594" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>The current element contains child elements.</source>
          <target state="translated">目前的項目包含子項目。</target>       </trans-unit>
        <trans-unit id="1595" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1596" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>The element content cannot be converted to a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> object.</source>
          <target state="translated">項目內容不能轉換為 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="1597" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">方法是以 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 引數呼叫。</target>       </trans-unit>
        <trans-unit id="1598" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">項目的本機名稱。</target>       </trans-unit>
        <trans-unit id="1599" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">項目的命名空間 URI。</target>       </trans-unit>
        <trans-unit id="1600" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> object.</source>
          <target state="translated">檢查指定的區域名稱和命名空間 URI 是否與目前的項目相符，然後以 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 物件的形式，讀取目前的項目並傳回內容。</target>       </trans-unit>
        <trans-unit id="1601" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>The element content as a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 物件形式的項目內容。</target>       </trans-unit>
        <trans-unit id="1602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">這個方法會讀取開始標記時，元素的內容，然後移動超過結尾項目標記讀取器。</target>       </trans-unit>
        <trans-unit id="1603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">它會擴充實體，並忽略處理指示與註解。</target>       </trans-unit>
        <trans-unit id="1604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>The element can only contain simple content.</source>
          <target state="translated">元素只能包含簡單內容。</target>       </trans-unit>
        <trans-unit id="1605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">也就是說，它不能有子項目。</target>       </trans-unit>
        <trans-unit id="1606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>If the content is typed <ph id="ph1">`xsd:boolean`</ph>, the reader returns an unboxed <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> object.</source>
          <target state="translated">如果內容的型別<ph id="ph1">`xsd:boolean`</ph>，讀取器傳回 unboxed<ph id="ph2">&lt;xref:System.Boolean&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="1607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>If the content is not typed <ph id="ph1">`xsd:boolean`</ph>, the reader attempts to convert it to a <ph id="ph2">&lt;xref:System.Boolean&gt;</ph> object according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如果內容不具類型<ph id="ph1">`xsd:boolean`</ph>，讀取器會嘗試將它轉換成<ph id="ph2">&lt;xref:System.Boolean&gt;</ph>物件所定義的規則根據<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">如需詳細資訊，請參閱 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 參考頁面的＜備註＞一節。</target>       </trans-unit>
        <trans-unit id="1609" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1610" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1611" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>The current element contains child elements.</source>
          <target state="translated">目前的項目包含子項目。</target>       </trans-unit>
        <trans-unit id="1612" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1613" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>The element content cannot be converted to the requested type.</source>
          <target state="translated">項目內容無法轉換成要求的類型。</target>       </trans-unit>
        <trans-unit id="1614" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">方法是以 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 引數呼叫。</target>       </trans-unit>
        <trans-unit id="1615" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
          <source>The specified local name and namespace URI do not match that of the current element being read.</source>
          <target state="translated">指定的區域名稱和命名空間 URI，與目前正在讀取的項目不相符。</target>       </trans-unit>
        <trans-unit id="1616" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1617" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1618" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Reads the current element and returns the contents as a <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> object.</source>
          <target state="translated">以 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 物件的形式，讀取目前項目並傳回內容。</target>       </trans-unit>
        <trans-unit id="1619" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>Reads the current element and returns the contents as a <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> object.</source>
          <target state="translated">以 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 物件的形式，讀取目前項目並傳回內容。</target>       </trans-unit>
        <trans-unit id="1620" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>The element content as a <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 物件形式的項目內容。</target>       </trans-unit>
        <trans-unit id="1621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">這個方法會讀取開始標記時，元素的內容，然後移動超過結尾項目標記讀取器。</target>       </trans-unit>
        <trans-unit id="1622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">它會擴充實體，並忽略處理指示與註解。</target>       </trans-unit>
        <trans-unit id="1623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>The element can only contain simple content.</source>
          <target state="translated">元素只能包含簡單內容。</target>       </trans-unit>
        <trans-unit id="1624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">也就是說，它不能有子項目。</target>       </trans-unit>
        <trans-unit id="1625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>If the content is typed <ph id="ph1">`xsd:dateTime`</ph>, the reader returns an unboxed <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object.</source>
          <target state="translated">如果內容的型別<ph id="ph1">`xsd:dateTime`</ph>，讀取器傳回 unboxed<ph id="ph2">&lt;xref:System.DateTime&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="1626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>If the content is not typed <ph id="ph1">`xsd:dateTime`</ph>, the reader attempts to convert it to a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如果內容不具類型<ph id="ph1">`xsd:dateTime`</ph>，讀取器會嘗試將它轉換成<ph id="ph2">&lt;xref:System.DateTime&gt;</ph>物件所定義的規則根據<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>You cannot rely on the <ph id="ph1">&lt;xref:System.DateTime.Year%2A?displayProperty=nameWithType&gt;</ph> value when the content is typed as <ph id="ph2">`xsd:gMonthDay`</ph>.</source>
          <target state="translated">當內容的型別為 <ph id="ph1">&lt;xref:System.DateTime.Year%2A?displayProperty=nameWithType&gt;</ph> 時，無法依賴 <ph id="ph2">`xsd:gMonthDay`</ph> 值。</target>       </trans-unit>
        <trans-unit id="1628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> always sets the <ph id="ph2">&lt;xref:System.DateTime.Year%2A?displayProperty=nameWithType&gt;</ph> value to 1904 in this case.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 永遠設定<ph id="ph2">&lt;xref:System.DateTime.Year%2A?displayProperty=nameWithType&gt;</ph>在此情況下為 1904年值。</target>       </trans-unit>
        <trans-unit id="1629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">如需詳細資訊，請參閱 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 參考頁面的＜備註＞一節。</target>       </trans-unit>
        <trans-unit id="1630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A&gt;</ph> method to read the content of the <ph id="ph2">`date`</ph> element.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A&gt;</ph>方法讀取的內容<ph id="ph2">`date`</ph>項目。</target>       </trans-unit>
        <trans-unit id="1631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>The example uses the <ph id="ph1">`dataFile.xml`</ph> file as input.</source>
          <target state="translated">該範例使用 <ph id="ph1">`dataFile.xml`</ph> 檔案做為輸入。</target>       </trans-unit>
        <trans-unit id="1632" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1633" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1634" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>The current element contains child elements.</source>
          <target state="translated">目前的項目包含子項目。</target>       </trans-unit>
        <trans-unit id="1635" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1636" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>The element content cannot be converted to a <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> object.</source>
          <target state="translated">項目內容不能轉換為 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="1637" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">方法是以 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 引數呼叫。</target>       </trans-unit>
        <trans-unit id="1638" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">項目的本機名稱。</target>       </trans-unit>
        <trans-unit id="1639" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">項目的命名空間 URI。</target>       </trans-unit>
        <trans-unit id="1640" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> object.</source>
          <target state="translated">檢查指定的區域名稱和命名空間 URI 是否與目前的項目相符，然後以 <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 物件的形式，讀取目前的項目並傳回內容。</target>       </trans-unit>
        <trans-unit id="1641" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>The element contents as a <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> 物件形式的項目內容。</target>       </trans-unit>
        <trans-unit id="1642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">這個方法會讀取開始標記時，元素的內容，然後移動超過結尾項目標記讀取器。</target>       </trans-unit>
        <trans-unit id="1643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">它會擴充實體，並忽略處理指示與註解。</target>       </trans-unit>
        <trans-unit id="1644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>The element can only contain simple content.</source>
          <target state="translated">元素只能包含簡單內容。</target>       </trans-unit>
        <trans-unit id="1645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">也就是說，它不能有子項目。</target>       </trans-unit>
        <trans-unit id="1646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>If the content is typed <ph id="ph1">`xsd:dateTime`</ph>, the reader returns an unboxed <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object.</source>
          <target state="translated">如果內容的型別<ph id="ph1">`xsd:dateTime`</ph>，讀取器傳回 unboxed<ph id="ph2">&lt;xref:System.DateTime&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="1647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>If the content is not typed <ph id="ph1">`xsd:dateTime`</ph>, the reader attempts to convert it to a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如果內容不具類型<ph id="ph1">`xsd:dateTime`</ph>，讀取器會嘗試將它轉換成<ph id="ph2">&lt;xref:System.DateTime&gt;</ph>物件所定義的規則根據<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>You cannot rely on the <ph id="ph1">&lt;xref:System.DateTime.Year%2A?displayProperty=nameWithType&gt;</ph> value when the content is typed as <ph id="ph2">`xsd:gMonthDay`</ph>.</source>
          <target state="translated">當內容的型別為 <ph id="ph1">&lt;xref:System.DateTime.Year%2A?displayProperty=nameWithType&gt;</ph> 時，無法依賴 <ph id="ph2">`xsd:gMonthDay`</ph> 值。</target>       </trans-unit>
        <trans-unit id="1649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> always sets the <ph id="ph2">&lt;xref:System.DateTime.Year%2A?displayProperty=nameWithType&gt;</ph> value to 1904 in this case.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 永遠設定<ph id="ph2">&lt;xref:System.DateTime.Year%2A?displayProperty=nameWithType&gt;</ph>在此情況下為 1904年值。</target>       </trans-unit>
        <trans-unit id="1650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">如需詳細資訊，請參閱 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 參考頁面的＜備註＞一節。</target>       </trans-unit>
        <trans-unit id="1651" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1652" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1653" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>The current element contains child elements.</source>
          <target state="translated">目前的項目包含子項目。</target>       </trans-unit>
        <trans-unit id="1654" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1655" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>The element content cannot be converted to the requested type.</source>
          <target state="translated">項目內容無法轉換成要求的類型。</target>       </trans-unit>
        <trans-unit id="1656" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">方法是以 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 引數呼叫。</target>       </trans-unit>
        <trans-unit id="1657" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
          <source>The specified local name and namespace URI do not match that of the current element being read.</source>
          <target state="translated">指定的區域名稱和命名空間 URI，與目前正在讀取的項目不相符。</target>       </trans-unit>
        <trans-unit id="1658" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1659" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1660" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Reads the current element value as a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object.</source>
          <target state="translated">讀取目前的項目值做為<ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="1661" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
          <source>Reads the current element and returns the contents as a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object.</source>
          <target state="translated">以 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 物件的形式，讀取目前項目並傳回內容。</target>       </trans-unit>
        <trans-unit id="1662" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
          <source>The element content as a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 物件形式的項目內容。</target>       </trans-unit>
        <trans-unit id="1663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">這個方法會讀取開始標記時，元素的內容，然後移動超過結尾項目標記讀取器。</target>       </trans-unit>
        <trans-unit id="1664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">它會擴充實體，並忽略處理指示與註解。</target>       </trans-unit>
        <trans-unit id="1665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
          <source>The element can only contain simple content.</source>
          <target state="translated">元素只能包含簡單內容。</target>       </trans-unit>
        <trans-unit id="1666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">也就是說，它不能有子項目。</target>       </trans-unit>
        <trans-unit id="1667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
          <source>The reader attempts to convert the element content to an <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> object according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">讀取器會嘗試將內容加入至元素轉換<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>物件所定義的規則根據<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">如需詳細資訊，請參閱 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 參考頁面的＜備註＞一節。</target>       </trans-unit>
        <trans-unit id="1669" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1670" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1671" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
          <source>The current element contains child elements.</source>
          <target state="translated">目前的項目包含子項目。</target>       </trans-unit>
        <trans-unit id="1672" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1673" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
          <source>The element content cannot be converted to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">項目內容不能轉換為 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1674" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">方法是以 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 引數呼叫。</target>       </trans-unit>
        <trans-unit id="1675" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">項目的本機名稱。</target>       </trans-unit>
        <trans-unit id="1676" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">項目的命名空間 URI。</target>       </trans-unit>
        <trans-unit id="1677" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object.</source>
          <target state="translated">檢查指定的區域名稱和命名空間 URI 是否與目前的項目相符，然後以 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 物件的形式，讀取目前的項目並傳回內容。</target>       </trans-unit>
        <trans-unit id="1678" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>The element content as a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> 物件形式的項目內容。</target>       </trans-unit>
        <trans-unit id="1679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">這個方法會讀取開始標記時，元素的內容，然後移動超過結尾項目標記讀取器。</target>       </trans-unit>
        <trans-unit id="1680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">它會擴充實體，並忽略處理指示與註解。</target>       </trans-unit>
        <trans-unit id="1681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>The element can only contain simple content.</source>
          <target state="translated">元素只能包含簡單內容。</target>       </trans-unit>
        <trans-unit id="1682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">也就是說，它不能有子項目。</target>       </trans-unit>
        <trans-unit id="1683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>The reader attempts to convert the element content to an <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> object according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">讀取器會嘗試將內容加入至元素轉換<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>物件所定義的規則根據<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">如需詳細資訊，請參閱 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 參考頁面的＜備註＞一節。</target>       </trans-unit>
        <trans-unit id="1685" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1686" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1687" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>The current element contains child elements.</source>
          <target state="translated">目前的項目包含子項目。</target>       </trans-unit>
        <trans-unit id="1688" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1689" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>The element content cannot be converted to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated">項目內容不能轉換為 <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1690" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">方法是以 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 引數呼叫。</target>       </trans-unit>
        <trans-unit id="1691" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
          <source>The specified local name and namespace URI do not match that of the current element being read.</source>
          <target state="translated">指定的區域名稱和命名空間 URI，與目前正在讀取的項目不相符。</target>       </trans-unit>
        <trans-unit id="1692" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1693" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1694" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Reads the current element and returns the contents as a double-precision floating-point number.</source>
          <target state="translated">以雙精確度浮點數的形式，讀取目前的項目並傳回內容。</target>       </trans-unit>
        <trans-unit id="1695" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>Reads the current element and returns the contents as a double-precision floating-point number.</source>
          <target state="translated">以雙精確度浮點數的形式，讀取目前的項目並傳回內容。</target>       </trans-unit>
        <trans-unit id="1696" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>The element content as a double-precision floating-point number.</source>
          <target state="translated">雙精確度浮點數形式的項目內容。</target>       </trans-unit>
        <trans-unit id="1697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">這個方法會讀取開始標記時，元素的內容，然後移動超過結尾項目標記讀取器。</target>       </trans-unit>
        <trans-unit id="1698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">它會擴充實體，並忽略處理指示與註解。</target>       </trans-unit>
        <trans-unit id="1699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>The element can only contain simple content.</source>
          <target state="translated">元素只能包含簡單內容。</target>       </trans-unit>
        <trans-unit id="1700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">也就是說，它不能有子項目。</target>       </trans-unit>
        <trans-unit id="1701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>If the content is typed <ph id="ph1">`xsd:double`</ph>, the reader returns a double-precision floating-point number.</source>
          <target state="translated">如果內容的型別<ph id="ph1">`xsd:double`</ph>，讀取器傳回的雙精確度浮點數。</target>       </trans-unit>
        <trans-unit id="1702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>If the content is not typed <ph id="ph1">`xsd:double`</ph>, the reader attempts to convert it to a double-precision floating-point number according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如果內容不具類型<ph id="ph1">`xsd:double`</ph>，讀取器會嘗試將它轉換為雙精確度浮點數，根據所定義的規則<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">如需詳細資訊，請參閱 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 參考頁面的＜備註＞一節。</target>       </trans-unit>
        <trans-unit id="1704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>The following example uses the method to return the element content as a double-precision floating-point number.</source>
          <target state="translated">下列範例會使用方法來傳回做為雙精確度浮點數的項目內容。</target>       </trans-unit>
        <trans-unit id="1705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>The example uses the <ph id="ph1">`dataFile.xml`</ph> file as input.</source>
          <target state="translated">該範例使用 <ph id="ph1">`dataFile.xml`</ph> 檔案做為輸入。</target>       </trans-unit>
        <trans-unit id="1706" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1707" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1708" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>The current element contains child elements.</source>
          <target state="translated">目前的項目包含子項目。</target>       </trans-unit>
        <trans-unit id="1709" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1710" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>The element content cannot be converted to a double-precision floating-point number.</source>
          <target state="translated">項目內容無法轉換為雙精確度浮點數。</target>       </trans-unit>
        <trans-unit id="1711" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">方法是以 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 引數呼叫。</target>       </trans-unit>
        <trans-unit id="1712" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">項目的本機名稱。</target>       </trans-unit>
        <trans-unit id="1713" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">項目的命名空間 URI。</target>       </trans-unit>
        <trans-unit id="1714" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a double-precision floating-point number.</source>
          <target state="translated">檢查指定的區域名稱和命名空間 URI 是否與目前的項目相符，然後以雙精確度浮點數的形式，讀取目前的項目並傳回內容。</target>       </trans-unit>
        <trans-unit id="1715" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>The element content as a double-precision floating-point number.</source>
          <target state="translated">雙精確度浮點數形式的項目內容。</target>       </trans-unit>
        <trans-unit id="1716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">這個方法會讀取開始標記時，元素的內容，然後移動超過結尾項目標記讀取器。</target>       </trans-unit>
        <trans-unit id="1717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">它會擴充實體，並忽略處理指示與註解。</target>       </trans-unit>
        <trans-unit id="1718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>The element can only contain simple content.</source>
          <target state="translated">元素只能包含簡單內容。</target>       </trans-unit>
        <trans-unit id="1719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">也就是說，它不能有子項目。</target>       </trans-unit>
        <trans-unit id="1720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>If the content is typed <ph id="ph1">`xsd:double`</ph>, the reader returns a double-precision floating-point number.</source>
          <target state="translated">如果內容的型別<ph id="ph1">`xsd:double`</ph>，讀取器傳回的雙精確度浮點數。</target>       </trans-unit>
        <trans-unit id="1721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>If the content is not typed <ph id="ph1">`xsd:double`</ph>, the reader attempts to convert it to a double-precision floating-point number according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如果內容不具類型<ph id="ph1">`xsd:double`</ph>，讀取器會嘗試將它轉換為雙精確度浮點數，根據所定義的規則<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">如需詳細資訊，請參閱 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 參考頁面的＜備註＞一節。</target>       </trans-unit>
        <trans-unit id="1723" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1724" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1725" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>The current element contains child elements.</source>
          <target state="translated">目前的項目包含子項目。</target>       </trans-unit>
        <trans-unit id="1726" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1727" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>The element content cannot be converted to the requested type.</source>
          <target state="translated">項目內容無法轉換成要求的類型。</target>       </trans-unit>
        <trans-unit id="1728" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">方法是以 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 引數呼叫。</target>       </trans-unit>
        <trans-unit id="1729" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
          <source>The specified local name and namespace URI do not match that of the current element being read.</source>
          <target state="translated">指定的區域名稱和命名空間 URI，與目前正在讀取的項目不相符。</target>       </trans-unit>
        <trans-unit id="1730" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1731" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1732" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Reads the current element value as a single-precision floating-point number.</source>
          <target state="translated">以單精確度浮點數的形式讀取目前的項目值。</target>       </trans-unit>
        <trans-unit id="1733" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat">
          <source>Reads the current element and returns the contents as single-precision floating-point number.</source>
          <target state="translated">以單精確度浮點數的形式，讀取目前的項目並傳回內容。</target>       </trans-unit>
        <trans-unit id="1734" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat">
          <source>The element content as a single-precision floating point number.</source>
          <target state="translated">單精確度浮點數形式的項目內容。</target>       </trans-unit>
        <trans-unit id="1735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">這個方法會讀取開始標記時，元素的內容，然後移動超過結尾項目標記讀取器。</target>       </trans-unit>
        <trans-unit id="1736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">它會擴充實體，並忽略處理指示與註解。</target>       </trans-unit>
        <trans-unit id="1737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat">
          <source>The element can only contain simple content.</source>
          <target state="translated">元素只能包含簡單內容。</target>       </trans-unit>
        <trans-unit id="1738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">也就是說，它不能有子項目。</target>       </trans-unit>
        <trans-unit id="1739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat">
          <source>The reader attempts to convert the element content to a single-precision floating point number according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">讀取器會嘗試將項目內容轉換成單精確度浮點數所定義的規則根據<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">如需詳細資訊，請參閱 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 參考頁面的＜備註＞一節。</target>       </trans-unit>
        <trans-unit id="1741" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1742" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1743" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat">
          <source>The current element contains child elements.</source>
          <target state="translated">目前的項目包含子項目。</target>       </trans-unit>
        <trans-unit id="1744" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1745" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat">
          <source>The element content cannot be converted to a single-precision floating-point number.</source>
          <target state="translated">項目內容無法轉換為單精確度浮點數。</target>       </trans-unit>
        <trans-unit id="1746" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">方法是以 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 引數呼叫。</target>       </trans-unit>
        <trans-unit id="1747" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">項目的本機名稱。</target>       </trans-unit>
        <trans-unit id="1748" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">項目的命名空間 URI。</target>       </trans-unit>
        <trans-unit id="1749" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a single-precision floating-point number.</source>
          <target state="translated">檢查指定的區域名稱和命名空間 URI 是否與目前的項目相符，然後以單精確度浮點數的形式，讀取目前的項目並傳回內容。</target>       </trans-unit>
        <trans-unit id="1750" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>The element content as a single-precision floating point number.</source>
          <target state="translated">單精確度浮點數形式的項目內容。</target>       </trans-unit>
        <trans-unit id="1751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">這個方法會讀取開始標記時，元素的內容，然後移動超過結尾項目標記讀取器。</target>       </trans-unit>
        <trans-unit id="1752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">它會擴充實體，並忽略處理指示與註解。</target>       </trans-unit>
        <trans-unit id="1753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>The element can only contain simple content.</source>
          <target state="translated">元素只能包含簡單內容。</target>       </trans-unit>
        <trans-unit id="1754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">也就是說，它不能有子項目。</target>       </trans-unit>
        <trans-unit id="1755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>The reader attempts to convert the element content to a single-precision floating point number according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">讀取器會嘗試將項目內容轉換成單精確度浮點數所定義的規則根據<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">如需詳細資訊，請參閱 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 參考頁面的＜備註＞一節。</target>       </trans-unit>
        <trans-unit id="1757" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1758" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1759" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>The current element contains child elements.</source>
          <target state="translated">目前的項目包含子項目。</target>       </trans-unit>
        <trans-unit id="1760" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1761" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>The element content cannot be converted to a single-precision floating-point number.</source>
          <target state="translated">項目內容無法轉換為單精確度浮點數。</target>       </trans-unit>
        <trans-unit id="1762" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">方法是以 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 引數呼叫。</target>       </trans-unit>
        <trans-unit id="1763" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
          <source>The specified local name and namespace URI do not match that of the current element being read.</source>
          <target state="translated">指定的區域名稱和命名空間 URI，與目前正在讀取的項目不相符。</target>       </trans-unit>
        <trans-unit id="1764" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1765" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1766" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Reads the current element and returns the contents as a 32-bit signed integer.</source>
          <target state="translated">以 32 位元帶正負號之整數的形式，讀取目前的項目並傳回內容。</target>       </trans-unit>
        <trans-unit id="1767" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>Reads the current element and returns the contents as a 32-bit signed integer.</source>
          <target state="translated">以 32 位元帶正負號之整數的形式，讀取目前的項目並傳回內容。</target>       </trans-unit>
        <trans-unit id="1768" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>The element content as a 32-bit signed integer.</source>
          <target state="translated">32 位元帶正負號之整數形式的項目內容。</target>       </trans-unit>
        <trans-unit id="1769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">這個方法會讀取開始標記時，元素的內容，然後移動超過結尾項目標記讀取器。</target>       </trans-unit>
        <trans-unit id="1770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">它會擴充實體，並忽略處理指示與註解。</target>       </trans-unit>
        <trans-unit id="1771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>The element can only contain simple content.</source>
          <target state="translated">元素只能包含簡單內容。</target>       </trans-unit>
        <trans-unit id="1772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">也就是說，它不能有子項目。</target>       </trans-unit>
        <trans-unit id="1773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>If the content is typed <ph id="ph1">`xsd:integer`</ph>, the reader returns an unboxed 32-bit signed integer.</source>
          <target state="translated">如果內容的型別<ph id="ph1">`xsd:integer`</ph>，讀取器傳回的 unboxed 的 32 位元帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="1774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>If the content is not typed <ph id="ph1">`xsd:integer`</ph>, the reader attempts to convert it to a 32-bit signed integer according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如果內容不具類型<ph id="ph1">`xsd:integer`</ph>，讀取器會嘗試將它轉換成 32 位元帶正負號的整數，依據所定義的規則<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">如需詳細資訊，請參閱 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 參考頁面的＜備註＞一節。</target>       </trans-unit>
        <trans-unit id="1776" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1777" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1778" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>The current element contains child elements.</source>
          <target state="translated">目前的項目包含子項目。</target>       </trans-unit>
        <trans-unit id="1779" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1780" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>The element content cannot be converted to a 32-bit signed integer.</source>
          <target state="translated">項目內容不能轉換為 32 位元帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="1781" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">方法是以 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 引數呼叫。</target>       </trans-unit>
        <trans-unit id="1782" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">項目的本機名稱。</target>       </trans-unit>
        <trans-unit id="1783" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">項目的命名空間 URI。</target>       </trans-unit>
        <trans-unit id="1784" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a 32-bit signed integer.</source>
          <target state="translated">檢查指定的區域名稱和命名空間 URI 是否與目前的項目相符，然後以 32 位元帶正負號之整數的形式，讀取目前的項目並傳回內容。</target>       </trans-unit>
        <trans-unit id="1785" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>The element content as a 32-bit signed integer.</source>
          <target state="translated">32 位元帶正負號之整數形式的項目內容。</target>       </trans-unit>
        <trans-unit id="1786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">這個方法會讀取開始標記時，元素的內容，然後移動超過結尾項目標記讀取器。</target>       </trans-unit>
        <trans-unit id="1787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">它會擴充實體，並忽略處理指示與註解。</target>       </trans-unit>
        <trans-unit id="1788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>The element can only contain simple content.</source>
          <target state="translated">元素只能包含簡單內容。</target>       </trans-unit>
        <trans-unit id="1789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">也就是說，它不能有子項目。</target>       </trans-unit>
        <trans-unit id="1790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>If the content is typed <ph id="ph1">`xsd:integer`</ph>, the reader returns an unboxed 32-bit signed integer.</source>
          <target state="translated">如果內容的型別<ph id="ph1">`xsd:integer`</ph>，讀取器傳回的 unboxed 的 32 位元帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="1791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>If the content is not typed <ph id="ph1">`xsd:integer`</ph>, the reader attempts to convert it to a 32-bit signed integer according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如果內容不具類型<ph id="ph1">`xsd:integer`</ph>，讀取器會嘗試將它轉換成 32 位元帶正負號的整數，依據所定義的規則<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">如需詳細資訊，請參閱 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 參考頁面的＜備註＞一節。</target>       </trans-unit>
        <trans-unit id="1793" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1794" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1795" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>The current element contains child elements.</source>
          <target state="translated">目前的項目包含子項目。</target>       </trans-unit>
        <trans-unit id="1796" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1797" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>The element content cannot be converted to a 32-bit signed integer.</source>
          <target state="translated">項目內容不能轉換為 32 位元帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="1798" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">方法是以 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 引數呼叫。</target>       </trans-unit>
        <trans-unit id="1799" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
          <source>The specified local name and namespace URI do not match that of the current element being read.</source>
          <target state="translated">指定的區域名稱和命名空間 URI，與目前正在讀取的項目不相符。</target>       </trans-unit>
        <trans-unit id="1800" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1801" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1802" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Reads the current element and returns the contents as a 64-bit signed integer.</source>
          <target state="translated">以 64 位元帶正負號之整數的形式，讀取目前的項目並傳回內容。</target>       </trans-unit>
        <trans-unit id="1803" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>Reads the current element and returns the contents as a 64-bit signed integer.</source>
          <target state="translated">以 64 位元帶正負號之整數的形式，讀取目前的項目並傳回內容。</target>       </trans-unit>
        <trans-unit id="1804" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>The element content as a 64-bit signed integer.</source>
          <target state="translated">64 位元帶正負號之整數形式的項目內容。</target>       </trans-unit>
        <trans-unit id="1805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">這個方法會讀取開始標記時，元素的內容，然後移動超過結尾項目標記讀取器。</target>       </trans-unit>
        <trans-unit id="1806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">它會擴充實體，並忽略處理指示與註解。</target>       </trans-unit>
        <trans-unit id="1807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>The element can only contain simple content.</source>
          <target state="translated">元素只能包含簡單內容。</target>       </trans-unit>
        <trans-unit id="1808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">也就是說，它不能有子項目。</target>       </trans-unit>
        <trans-unit id="1809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>If the content is typed <ph id="ph1">`xsd:long`</ph>, the reader returns an unboxed 64-bit signed integer.</source>
          <target state="translated">如果內容的型別<ph id="ph1">`xsd:long`</ph>，讀取器傳回的 unboxed 的 64 位元帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="1810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>If the content is not typed <ph id="ph1">`xsd:long`</ph>, the reader attempts to convert it to a 64-bit signed integer according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如果內容不具類型<ph id="ph1">`xsd:long`</ph>，讀取器會嘗試將它轉換成 64 位元帶正負號的整數，依據所定義的規則<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">如需詳細資訊，請參閱 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 參考頁面的＜備註＞一節。</target>       </trans-unit>
        <trans-unit id="1812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsLong%2A&gt;</ph> method to read the content of the <ph id="ph2">`longValue`</ph> element.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsLong%2A&gt;</ph>方法讀取的內容<ph id="ph2">`longValue`</ph>項目。</target>       </trans-unit>
        <trans-unit id="1813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>The example uses the <ph id="ph1">`dataFile.xml`</ph> file as input.</source>
          <target state="translated">該範例使用 <ph id="ph1">`dataFile.xml`</ph> 檔案做為輸入。</target>       </trans-unit>
        <trans-unit id="1814" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1815" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1816" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>The current element contains child elements.</source>
          <target state="translated">目前的項目包含子項目。</target>       </trans-unit>
        <trans-unit id="1817" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1818" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>The element content cannot be converted to a 64-bit signed integer.</source>
          <target state="translated">項目內容不能轉換為 64 位元帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="1819" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">方法是以 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 引數呼叫。</target>       </trans-unit>
        <trans-unit id="1820" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">項目的本機名稱。</target>       </trans-unit>
        <trans-unit id="1821" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">項目的命名空間 URI。</target>       </trans-unit>
        <trans-unit id="1822" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a 64-bit signed integer.</source>
          <target state="translated">檢查指定的區域名稱和命名空間 URI 是否與目前的項目相符，然後以 64 位元帶正負號之整數的形式，讀取目前的項目並傳回內容。</target>       </trans-unit>
        <trans-unit id="1823" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>The element content as a 64-bit signed integer.</source>
          <target state="translated">64 位元帶正負號之整數形式的項目內容。</target>       </trans-unit>
        <trans-unit id="1824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">這個方法會讀取開始標記時，元素的內容，然後移動超過結尾項目標記讀取器。</target>       </trans-unit>
        <trans-unit id="1825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">它會擴充實體，並忽略處理指示與註解。</target>       </trans-unit>
        <trans-unit id="1826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>The element can only contain simple content.</source>
          <target state="translated">元素只能包含簡單內容。</target>       </trans-unit>
        <trans-unit id="1827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">也就是說，它不能有子項目。</target>       </trans-unit>
        <trans-unit id="1828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>If the content is typed <ph id="ph1">`xsd:long`</ph>, the reader returns an unboxed 64-bit signed integer.</source>
          <target state="translated">如果內容的型別<ph id="ph1">`xsd:long`</ph>，讀取器傳回的 unboxed 的 64 位元帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="1829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>If the content is not typed <ph id="ph1">`xsd:long`</ph>, the reader attempts to convert it to a 64-bit signed integer according to the rules defined by the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如果內容不具類型<ph id="ph1">`xsd:long`</ph>，讀取器會嘗試將它轉換成 64 位元帶正負號的整數，依據所定義的規則<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page.</source>
          <target state="translated">如需詳細資訊，請參閱 <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 參考頁面的＜備註＞一節。</target>       </trans-unit>
        <trans-unit id="1831" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1832" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1833" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>The current element contains child elements.</source>
          <target state="translated">目前的項目包含子項目。</target>       </trans-unit>
        <trans-unit id="1834" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1835" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>The element content cannot be converted to a 64-bit signed integer.</source>
          <target state="translated">項目內容不能轉換為 64 位元帶正負號的整數。</target>       </trans-unit>
        <trans-unit id="1836" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">方法是以 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 引數呼叫。</target>       </trans-unit>
        <trans-unit id="1837" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
          <source>The specified local name and namespace URI do not match that of the current element being read.</source>
          <target state="translated">指定的區域名稱和命名空間 URI，與目前正在讀取的項目不相符。</target>       </trans-unit>
        <trans-unit id="1838" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1839" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1840" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Reads the current element and returns the contents as an <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">以 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 的形式，讀取目前項目並傳回內容。</target>       </trans-unit>
        <trans-unit id="1841" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>Reads the current element and returns the contents as an <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">以 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 的形式，讀取目前項目並傳回內容。</target>       </trans-unit>
        <trans-unit id="1842" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>A boxed common language runtime (CLR) object of the most appropriate type.</source>
          <target state="translated">最合適類型的 Boxed Common Language Runtime (CLR) 物件。</target>       </trans-unit>
        <trans-unit id="1843" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.ValueType" /&gt;</ph> property determines the appropriate CLR type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.ValueType" /&gt;</ph> 屬性會判斷適當的 CLR 類型。</target>       </trans-unit>
        <trans-unit id="1844" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.</source>
          <target state="translated">如果內容的類型是清單類型，則這個方法會傳回適當類型之 Boxed 物件的陣列。</target>       </trans-unit>
        <trans-unit id="1845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">這個方法會讀取開始標記時，元素的內容，然後移動超過結尾項目標記讀取器。</target>       </trans-unit>
        <trans-unit id="1846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">它會擴充實體，並忽略處理指示與註解。</target>       </trans-unit>
        <trans-unit id="1847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>The element can only contain simple content.</source>
          <target state="translated">元素只能包含簡單內容。</target>       </trans-unit>
        <trans-unit id="1848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">也就是說，它不能有子項目。</target>       </trans-unit>
        <trans-unit id="1849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如需詳細資訊，請參閱 &lt; 備註 &gt; 一節<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>參考頁面和<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsObjectAsync%2A&gt;</ph>.</source>
          <target state="translated">這個方法的非同步版本，請參閱<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsObjectAsync%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>The following example uses the method to read the content of the <ph id="ph1">`price`</ph> node.</source>
          <target state="translated">下列範例會使用方法來讀取的內容<ph id="ph1">`price`</ph>節點。</target>       </trans-unit>
        <trans-unit id="1852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>The reader uses the information in the schema to map the content to the correct data type.</source>
          <target state="translated">讀取器會使用結構描述中的資訊，將內容對應至正確的資料類型。</target>       </trans-unit>
        <trans-unit id="1853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>The example uses the following two files as input.</source>
          <target state="translated">此範例會使用下列兩個檔案做為輸入。</target>       </trans-unit>
        <trans-unit id="1854" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1855" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1856" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>The current element contains child elements.</source>
          <target state="translated">目前的項目包含子項目。</target>       </trans-unit>
        <trans-unit id="1857" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1858" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>The element content cannot be converted to the requested type</source>
          <target state="translated">項目內容無法轉換成要求的類型</target>       </trans-unit>
        <trans-unit id="1859" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">方法是以 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 引數呼叫。</target>       </trans-unit>
        <trans-unit id="1860" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">項目的本機名稱。</target>       </trans-unit>
        <trans-unit id="1861" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">項目的命名空間 URI。</target>       </trans-unit>
        <trans-unit id="1862" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as an <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">檢查指定的區域名稱和命名空間 URI 是否與目前的項目相符，然後以 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 的形式，讀取目前的項目並傳回內容。</target>       </trans-unit>
        <trans-unit id="1863" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>A boxed common language runtime (CLR) object of the most appropriate type.</source>
          <target state="translated">最合適類型的 Boxed Common Language Runtime (CLR) 物件。</target>       </trans-unit>
        <trans-unit id="1864" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.ValueType" /&gt;</ph> property determines the appropriate CLR type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.ValueType" /&gt;</ph> 屬性會判斷適當的 CLR 類型。</target>       </trans-unit>
        <trans-unit id="1865" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.</source>
          <target state="translated">如果內容的類型是清單類型，則這個方法會傳回適當類型之 Boxed 物件的陣列。</target>       </trans-unit>
        <trans-unit id="1866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">這個方法會讀取開始標記時，元素的內容，然後移動超過結尾項目標記讀取器。</target>       </trans-unit>
        <trans-unit id="1867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">它會擴充實體，並忽略處理指示與註解。</target>       </trans-unit>
        <trans-unit id="1868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>The element can only contain simple content.</source>
          <target state="translated">元素只能包含簡單內容。</target>       </trans-unit>
        <trans-unit id="1869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">也就是說，它不能有子項目。</target>       </trans-unit>
        <trans-unit id="1870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如需詳細資訊，請參閱 &lt; 備註 &gt; 一節<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>參考頁面和<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1871" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1872" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1873" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>The current element contains child elements.</source>
          <target state="translated">目前的項目包含子項目。</target>       </trans-unit>
        <trans-unit id="1874" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1875" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>The element content cannot be converted to the requested type.</source>
          <target state="translated">項目內容無法轉換成要求的類型。</target>       </trans-unit>
        <trans-unit id="1876" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">方法是以 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 引數呼叫。</target>       </trans-unit>
        <trans-unit id="1877" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
          <source>The specified local name and namespace URI do not match that of the current element being read.</source>
          <target state="translated">指定的區域名稱和命名空間 URI，與目前正在讀取的項目不相符。</target>       </trans-unit>
        <trans-unit id="1878" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync">
          <source>Asynchronously reads the current element and returns the contents as an <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">以非同步方式與 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 的形式，讀取目前項目並傳回內容。</target>       </trans-unit>
        <trans-unit id="1879" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync">
          <source>A boxed common language runtime (CLR) object of the most appropriate type.</source>
          <target state="translated">最合適類型的 Boxed Common Language Runtime (CLR) 物件。</target>       </trans-unit>
        <trans-unit id="1880" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.ValueType" /&gt;</ph> property determines the appropriate CLR type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.ValueType" /&gt;</ph> 屬性會判斷適當的 CLR 類型。</target>       </trans-unit>
        <trans-unit id="1881" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync">
          <source>If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.</source>
          <target state="translated">如果內容的類型是清單類型，則這個方法會傳回適當類型之 Boxed 物件的陣列。</target>       </trans-unit>
        <trans-unit id="1882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsObject%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">這是非同步版本<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsObject%2A&gt;</ph>，使用相同的功能。</target>       </trans-unit>
        <trans-unit id="1883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">若要使用此方法，您必須設定<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph>旗標設為<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1884" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">在未將 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 旗標設為 <ph id="ph3">&lt;see langword="true" /&gt;</ph>的情況下呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 非同步方法。</target>       </trans-unit>
        <trans-unit id="1885" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</target>       </trans-unit>
        <trans-unit id="1886" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1887" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1888" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Reads the current element and returns the contents as a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object.</source>
          <target state="translated">以 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 物件的形式，讀取目前項目並傳回內容。</target>       </trans-unit>
        <trans-unit id="1889" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>Reads the current element and returns the contents as a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object.</source>
          <target state="translated">以 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 物件的形式，讀取目前項目並傳回內容。</target>       </trans-unit>
        <trans-unit id="1890" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>The element content as a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 物件形式的項目內容。</target>       </trans-unit>
        <trans-unit id="1891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">這個方法會讀取開始標記時，元素的內容，然後移動超過結尾項目標記讀取器。</target>       </trans-unit>
        <trans-unit id="1892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">它會擴充實體，並忽略處理指示與註解。</target>       </trans-unit>
        <trans-unit id="1893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>The element can only contain simple content.</source>
          <target state="translated">元素只能包含簡單內容。</target>       </trans-unit>
        <trans-unit id="1894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">也就是說，它不能有子項目。</target>       </trans-unit>
        <trans-unit id="1895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如需詳細資訊，請參閱 &lt; 備註 &gt; 一節<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>參考頁面和<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsStringAsync%2A&gt;</ph>.</source>
          <target state="translated">這個方法的非同步版本，請參閱<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsStringAsync%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>The following example reads the <ph id="ph1">`stringValue`</ph> element and returns the text content (ignoring the comment and processing instruction).</source>
          <target state="translated">下列範例會讀取<ph id="ph1">`stringValue`</ph>項目，並傳回的文字內容 （忽略註解和處理指示）。</target>       </trans-unit>
        <trans-unit id="1898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>The example uses the <ph id="ph1">`dataFile.xml`</ph> file as input.</source>
          <target state="translated">該範例使用 <ph id="ph1">`dataFile.xml`</ph> 檔案做為輸入。</target>       </trans-unit>
        <trans-unit id="1899" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1900" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1901" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>The current element contains child elements.</source>
          <target state="translated">目前的項目包含子項目。</target>       </trans-unit>
        <trans-unit id="1902" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1903" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>The element content cannot be converted to a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object.</source>
          <target state="translated">項目內容不能轉換為 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="1904" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">方法是以 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 引數呼叫。</target>       </trans-unit>
        <trans-unit id="1905" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">項目的本機名稱。</target>       </trans-unit>
        <trans-unit id="1906" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">項目的命名空間 URI。</target>       </trans-unit>
        <trans-unit id="1907" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object.</source>
          <target state="translated">檢查指定的區域名稱和命名空間 URI 是否與目前的項目相符，然後以 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 物件的形式，讀取目前的項目並傳回內容。</target>       </trans-unit>
        <trans-unit id="1908" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>The element content as a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 物件形式的項目內容。</target>       </trans-unit>
        <trans-unit id="1909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</source>
          <target state="translated">這個方法會讀取開始標記時，元素的內容，然後移動超過結尾項目標記讀取器。</target>       </trans-unit>
        <trans-unit id="1910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>It expands entities and ignores processing instructions and comments.</source>
          <target state="translated">它會擴充實體，並忽略處理指示與註解。</target>       </trans-unit>
        <trans-unit id="1911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>The element can only contain simple content.</source>
          <target state="translated">元素只能包含簡單內容。</target>       </trans-unit>
        <trans-unit id="1912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>That is, it cannot have child elements.</source>
          <target state="translated">也就是說，它不能有子項目。</target>       </trans-unit>
        <trans-unit id="1913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>For more information, see the Remarks section of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> reference page and the <bpt id="p1">[</bpt>W3C XML Schema Part 2: Datatypes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept> recommendation.</source>
          <target state="translated">如需詳細資訊，請參閱 &lt; 備註 &gt; 一節<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>參考頁面和<bpt id="p1">[</bpt>W3C XML 結構描述第 2 部分： 資料型別<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=4871)</ept>建議。</target>       </trans-unit>
        <trans-unit id="1914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>The following example reads the <ph id="ph1">`stringValue`</ph> element and returns the text content (ignoring the comment and processing instruction).</source>
          <target state="translated">下列範例會讀取<ph id="ph1">`stringValue`</ph>項目，並傳回的文字內容 （忽略註解和處理指示）。</target>       </trans-unit>
        <trans-unit id="1915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>The example uses the <ph id="ph1">`dataFile.xml`</ph> file as input.</source>
          <target state="translated">該範例使用 <ph id="ph1">`dataFile.xml`</ph> 檔案做為輸入。</target>       </trans-unit>
        <trans-unit id="1916" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1917" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1918" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>The current element contains child elements.</source>
          <target state="translated">目前的項目包含子項目。</target>       </trans-unit>
        <trans-unit id="1919" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="1920" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>The element content cannot be converted to a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object.</source>
          <target state="translated">項目內容不能轉換為 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="1921" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>The method is called with <ph id="ph1">&lt;see langword="null" /&gt;</ph> arguments.</source>
          <target state="translated">方法是以 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 引數呼叫。</target>       </trans-unit>
        <trans-unit id="1922" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
          <source>The specified local name and namespace URI do not match that of the current element being read.</source>
          <target state="translated">指定的區域名稱和命名空間 URI，與目前正在讀取的項目不相符。</target>       </trans-unit>
        <trans-unit id="1923" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsStringAsync">
          <source>Asynchronously reads the current element and returns the contents as a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object.</source>
          <target state="translated">以非同步方式與 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 物件的形式，讀取目前項目並傳回內容。</target>       </trans-unit>
        <trans-unit id="1924" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsStringAsync">
          <source>The element content as a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 物件形式的項目內容。</target>       </trans-unit>
        <trans-unit id="1925" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsStringAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsString%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">這是非同步版本<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsString%2A&gt;</ph>，使用相同的功能。</target>       </trans-unit>
        <trans-unit id="1926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementContentAsStringAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">若要使用此方法，您必須設定<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph>旗標設為<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1927" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsStringAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">在未將 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 旗標設為 <ph id="ph3">&lt;see langword="true" /&gt;</ph>的情況下呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 非同步方法。</target>       </trans-unit>
        <trans-unit id="1928" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementContentAsStringAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</target>       </trans-unit>
        <trans-unit id="1929" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1930" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1931" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Reads the simple text-only elements.</source>
          <target state="translated">讀取簡單純文字項目。</target>       </trans-unit>
        <trans-unit id="1932" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>However, we recommend that you use the <ph id="ph1">&lt;see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" /&gt;</ph> method instead, because it provides a more straightforward way to handle this operation.</source>
          <target state="translated">不過，我們建議您改用<ph id="ph1">&lt;see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" /&gt;</ph>方法相反地，因為它會提供較簡單的方式來處理這項作業。</target>       </trans-unit>
        <trans-unit id="1933" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlReader">
          <source>We recommend that you use the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsString%2A&gt;</ph> method to read a text element.</source>
          <target state="translated">我們建議您改用<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsString%2A&gt;</ph>方法讀取的文字項目。</target>       </trans-unit>
        <trans-unit id="1934" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString">
          <source>Reads a text-only element.</source>
          <target state="translated">讀取純文字項目。</target>       </trans-unit>
        <trans-unit id="1935" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString">
          <source>However, we recommend that you use the <ph id="ph1">&lt;see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /&gt;</ph> method instead, because it provides a more straightforward way to handle this operation.</source>
          <target state="translated">不過，我們建議您改用<ph id="ph1">&lt;see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /&gt;</ph>方法相反地，因為它會提供較簡單的方式來處理這項作業。</target>       </trans-unit>
        <trans-unit id="1936" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString">
          <source>The text contained in the element that was read.</source>
          <target state="translated">讀取的項目中所含的文字。</target>       </trans-unit>
        <trans-unit id="1937" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString">
          <source>An empty string if the element is empty.</source>
          <target state="translated">當項目為空白時，則為空字串。</target>       </trans-unit>
        <trans-unit id="1938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementString">
          <source>We recommend that you use the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsString&gt;</ph> method to read a text element.</source>
          <target state="translated">我們建議您改用<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsString&gt;</ph>方法讀取的文字項目。</target>       </trans-unit>
        <trans-unit id="1939" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString">
          <source>The next content node is not a start tag; or the element found does not contain a simple text value.</source>
          <target state="translated">下一個內容節點不是開始標記。或找到的項目未包含簡單的文字值。</target>       </trans-unit>
        <trans-unit id="1940" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1941" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1942" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String)">
          <source>The name to check.</source>
          <target state="translated">要檢查的名稱。</target>       </trans-unit>
        <trans-unit id="1943" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String)">
          <source>Checks that the <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.Name" /&gt;</ph> property of the element found matches the given string before reading a text-only element.</source>
          <target state="translated">檢查<ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.Name" /&gt;</ph>屬性找到的項目之前讀取純文字的項目符合指定的字串。</target>       </trans-unit>
        <trans-unit id="1944" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String)">
          <source>However, we recommend that you use the <ph id="ph1">&lt;see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /&gt;</ph> method instead, because it provides a more straightforward way to handle this operation.</source>
          <target state="translated">不過，我們建議您改用<ph id="ph1">&lt;see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /&gt;</ph>方法相反地，因為它會提供較簡單的方式來處理這項作業。</target>       </trans-unit>
        <trans-unit id="1945" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String)">
          <source>The text contained in the element that was read.</source>
          <target state="translated">讀取的項目中所含的文字。</target>       </trans-unit>
        <trans-unit id="1946" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String)">
          <source>An empty string if the element is empty.</source>
          <target state="translated">當項目為空白時，則為空字串。</target>       </trans-unit>
        <trans-unit id="1947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementString(System.String)">
          <source>We recommend that you use the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsString&gt;</ph> method to read a text element.</source>
          <target state="translated">我們建議您改用<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsString&gt;</ph>方法讀取的文字項目。</target>       </trans-unit>
        <trans-unit id="1948" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String)">
          <source>If the next content node is not a start tag; if the element <ph id="ph1">&lt;see langword="Name" /&gt;</ph> does not match the given argument; or if the element found does not contain a simple text value.</source>
          <target state="translated">如果下一個內容節點不是開始標記。如果項目<ph id="ph1">&lt;see langword="Name" /&gt;</ph>不符合指定的引數; 或如果找到的項目不包含簡單的文字值。</target>       </trans-unit>
        <trans-unit id="1949" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1950" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1951" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
          <source>The local name to check.</source>
          <target state="translated">要檢查的區域名稱。</target>       </trans-unit>
        <trans-unit id="1952" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
          <source>The namespace URI to check.</source>
          <target state="translated">要檢查的命名空間 URI。</target>       </trans-unit>
        <trans-unit id="1953" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
          <source>Checks that the <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.LocalName" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NamespaceURI" /&gt;</ph> properties of the element found matches the given strings before reading a text-only element.</source>
          <target state="translated">檢查<ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.LocalName" /&gt;</ph>和<ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NamespaceURI" /&gt;</ph>項目的屬性找到符合的指定的字串之前讀取純文字的項目。</target>       </trans-unit>
        <trans-unit id="1954" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
          <source>However, we recommend that you use the <ph id="ph1">&lt;see cref="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)" /&gt;</ph> method instead, because it provides a more straightforward way to handle this operation.</source>
          <target state="translated">不過，我們建議您改用<ph id="ph1">&lt;see cref="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)" /&gt;</ph>方法相反地，因為它會提供較簡單的方式來處理這項作業。</target>       </trans-unit>
        <trans-unit id="1955" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
          <source>The text contained in the element that was read.</source>
          <target state="translated">讀取的項目中所含的文字。</target>       </trans-unit>
        <trans-unit id="1956" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
          <source>An empty string if the element is empty.</source>
          <target state="translated">當項目為空白時，則為空字串。</target>       </trans-unit>
        <trans-unit id="1957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
          <source>We recommend that you use the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsString%28System.String%2CSystem.String%29&gt;</ph> method to read a text element.</source>
          <target state="translated">我們建議您改用<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsString%28System.String%2CSystem.String%29&gt;</ph>方法讀取的文字項目。</target>       </trans-unit>
        <trans-unit id="1958" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
          <source>If the next content node is not a start tag; if the element <ph id="ph1">&lt;see langword="LocalName" /&gt;</ph> or <ph id="ph2">&lt;see langword="NamespaceURI" /&gt;</ph> do not match the given arguments; or if the element found does not contain a simple text value.</source>
          <target state="translated">如果下一個內容節點不是開始標記。如果項目<ph id="ph1">&lt;see langword="LocalName" /&gt;</ph>或<ph id="ph2">&lt;see langword="NamespaceURI" /&gt;</ph>不符合指定的引數; 或如果找到的項目不包含簡單的文字值。</target>       </trans-unit>
        <trans-unit id="1959" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1960" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1961" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadEndElement">
          <source>Checks that the current content node is an end tag and advances the reader to the next node.</source>
          <target state="translated">檢查目前節點為結尾標記，並使讀取器前進至下一個節點。</target>       </trans-unit>
        <trans-unit id="1962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadEndElement">
          <source>The following example displays the text content of each element.</source>
          <target state="translated">下列範例會顯示每個項目的文字內容。</target>       </trans-unit>
        <trans-unit id="1963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadEndElement">
          <source>The example uses the <ph id="ph1">`book3.xml`</ph> file.</source>
          <target state="translated">此範例會使用<ph id="ph1">`book3.xml`</ph>檔案。</target>       </trans-unit>
        <trans-unit id="1964" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadEndElement">
          <source>The current node is not an end tag or if incorrect XML is encountered in the input stream.</source>
          <target state="translated">目前的節點不是結束標記，或如果輸入資料流中遇到不正確的 XML。</target>       </trans-unit>
        <trans-unit id="1965" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadEndElement">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1966" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadEndElement">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="1967" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>When overridden in a derived class, reads all the content, including markup, as a string.</source>
          <target state="translated">在衍生類別中覆寫時，將所有的內容當做字串讀取，包括標記。</target>       </trans-unit>
        <trans-unit id="1968" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>All the XML content, including markup, in the current node.</source>
          <target state="translated">目前節點中所有的 XML 內容，包括標記。</target>       </trans-unit>
        <trans-unit id="1969" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>If the current node has no children, an empty string is returned.</source>
          <target state="translated">如果目前節點沒有子節點，則傳回空字串。</target>       </trans-unit>
        <trans-unit id="1970" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>If the current node is neither an element nor attribute, an empty string is returned.</source>
          <target state="translated">如果目前節點既不是項目也不是屬性，則傳回空字串。</target>       </trans-unit>
        <trans-unit id="1971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>This method returns all the content of the current node including the markup.</source>
          <target state="translated">這個方法會傳回目前的節點，包括標記的所有內容。</target>       </trans-unit>
        <trans-unit id="1972" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>The current node (start tag) and corresponding end node (end tag) are not returned.</source>
          <target state="translated">不會傳回目前節點 (開始標記) 及對應的結束節點 (結束標記)。</target>       </trans-unit>
        <trans-unit id="1973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>For example, if you had the following:</source>
          <target state="translated">例如，如果您有下列：</target>       </trans-unit>
        <trans-unit id="1974" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source><ph id="ph1">`ReadInnerXml`</ph> returns <ph id="ph2">`this &lt;child id="123"/&gt;`</ph></source>
          <target state="translated"><ph id="ph1">`ReadInnerXml`</ph> 傳回 <ph id="ph2">`this &lt;child id="123"/&gt;`</ph></target>       </trans-unit>
        <trans-unit id="1975" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>This method handles element and attribute nodes in the following manner:</source>
          <target state="translated">這個方法會以下列方式處理項目和屬性節點：</target>       </trans-unit>
        <trans-unit id="1976" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>Node type</source>
          <target state="translated">節點類型</target>       </trans-unit>
        <trans-unit id="1977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>Position before the call</source>
          <target state="translated">呼叫前的位置</target>       </trans-unit>
        <trans-unit id="1978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>XML fragment</source>
          <target state="translated">XML 片段</target>       </trans-unit>
        <trans-unit id="1979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>Return value</source>
          <target state="translated">傳回值</target>       </trans-unit>
        <trans-unit id="1980" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>Position after the call</source>
          <target state="translated">呼叫後的位置</target>       </trans-unit>
        <trans-unit id="1981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>On the <ph id="ph1">`item1`</ph> start tag.</source>
          <target state="translated">在 <ph id="ph1">`item1`</ph> 開始標記上。</target>       </trans-unit>
        <trans-unit id="1982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source><ph id="ph1">\&lt;</ph>item1&gt;text1<ph id="ph2">\&lt;</ph>/item1&gt;<ph id="ph3">\&lt;</ph>item2&gt;text2<ph id="ph4">\&lt;</ph>/item2&gt;</source>
          <target state="translated"><ph id="ph1">\&lt;</ph>item1&gt;text1<ph id="ph2">\&lt;</ph>/item1&gt;<ph id="ph3">\&lt;</ph>item2&gt;text2<ph id="ph4">\&lt;</ph>/item2&gt;</target>       </trans-unit>
        <trans-unit id="1983" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>text1</source>
          <target state="translated">text1</target>       </trans-unit>
        <trans-unit id="1984" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>On the <ph id="ph1">`item2`</ph> start tag.</source>
          <target state="translated">在 <ph id="ph1">`item2`</ph> 開始標記上。</target>       </trans-unit>
        <trans-unit id="1985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>On the <ph id="ph1">`attr1`</ph> attribute node.</source>
          <target state="translated">在 <ph id="ph1">`attr1`</ph> 屬性節點上。</target>       </trans-unit>
        <trans-unit id="1986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source><ph id="ph1">\&lt;</ph>item attr1="val1" attr2="val2"&gt;text<ph id="ph2">\&lt;</ph>/item&gt;</source>
          <target state="translated"><ph id="ph1">\&lt;</ph>item attr1="val1" attr2="val2"&gt;text<ph id="ph2">\&lt;</ph>/item&gt;</target>       </trans-unit>
        <trans-unit id="1987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>val1</source>
          <target state="translated">val1</target>       </trans-unit>
        <trans-unit id="1988" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>Remains on the <ph id="ph1">`attr1`</ph> attribute node.</source>
          <target state="translated">保留在 <ph id="ph1">`attr1`</ph> 屬性節點上。</target>       </trans-unit>
        <trans-unit id="1989" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>If the reader is positioned on a leaf node, calling <ph id="ph1">`ReadInnerXml`</ph> is equivalent to calling <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>.</source>
          <target state="translated">如果讀取器定位於分葉節點上，則呼叫 <ph id="ph1">`ReadInnerXml`</ph> 相當於呼叫 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1990" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>The method returns <ph id="ph1">`String.Empty`</ph> (except for attribute nodes, in which case the value of the attribute is returned).</source>
          <target state="translated">方法會傳回<ph id="ph1">`String.Empty`</ph>（除非屬性節點屬性的值會傳回在此情況下）。</target>       </trans-unit>
        <trans-unit id="1991" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>This method checks for well-formed XML.</source>
          <target state="translated">這個方法會檢查格式正確的 XML。</target>       </trans-unit>
        <trans-unit id="1992" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>If <ph id="ph1">`ReadInnerXml`</ph> is called from an <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph>, this method also validates the content returned.</source>
          <target state="translated">如果<ph id="ph1">`ReadInnerXml`</ph>從呼叫<ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph>，這個方法也會驗證傳回的內容。</target>       </trans-unit>
        <trans-unit id="1993" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>As implemented in the <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph> and <ph id="ph3">`XmlValidatingReader`</ph> classes the <ph id="ph4">`ReadOuterXml`</ph> method is namespace aware.</source>
          <target state="translated">在中實作<ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph>，<ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph>和<ph id="ph3">`XmlValidatingReader`</ph>類別<ph id="ph4">`ReadOuterXml`</ph>方法是命名空間感知。</target>       </trans-unit>
        <trans-unit id="1994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadInnerXmlAsync%2A&gt;</ph>.</source>
          <target state="translated">這個方法的非同步版本，請參閱<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadInnerXmlAsync%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>The following example compares the <ph id="ph1">`ReadInnerXml`</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadOuterXml%2A&gt;</ph> methods.</source>
          <target state="translated">下列範例會比較<ph id="ph1">`ReadInnerXml`</ph>和<ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadOuterXml%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1996" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>The example uses <ph id="ph1">`2books.xml`</ph> file as input.</source>
          <target state="translated">此範例會使用<ph id="ph1">`2books.xml`</ph>檔案做為輸入。</target>       </trans-unit>
        <trans-unit id="1997" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>The XML was not well-formed, or an error occurred while parsing the XML.</source>
          <target state="translated">XML 不是語式正確，或剖析 XML 時發生錯誤。</target>       </trans-unit>
        <trans-unit id="1998" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="1999" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadInnerXml">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="2000" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadInnerXmlAsync">
          <source>Asynchronously reads all the content, including markup, as a string.</source>
          <target state="translated">以字串形式非同步讀取所有內容，包括標記。</target>       </trans-unit>
        <trans-unit id="2001" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadInnerXmlAsync">
          <source>All the XML content, including markup, in the current node.</source>
          <target state="translated">目前節點中所有的 XML 內容，包括標記。</target>       </trans-unit>
        <trans-unit id="2002" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadInnerXmlAsync">
          <source>If the current node has no children, an empty string is returned.</source>
          <target state="translated">如果目前節點沒有子節點，則傳回空字串。</target>       </trans-unit>
        <trans-unit id="2003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXmlAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadInnerXml%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">這是非同步版本<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadInnerXml%2A&gt;</ph>，使用相同的功能。</target>       </trans-unit>
        <trans-unit id="2004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadInnerXmlAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">若要使用此方法，您必須設定<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph>旗標設為<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="2005" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadInnerXmlAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">在未將 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 旗標設為 <ph id="ph3">&lt;see langword="true" /&gt;</ph>的情況下呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 非同步方法。</target>       </trans-unit>
        <trans-unit id="2006" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadInnerXmlAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</target>       </trans-unit>
        <trans-unit id="2007" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>When overridden in a derived class, reads the content, including markup, representing this node and all its children.</source>
          <target state="translated">在衍生類別中覆寫時，讀取代表這個節點及其所有子節點的內容，包括標記。</target>       </trans-unit>
        <trans-unit id="2008" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>If the reader is positioned on an element or an attribute node, this method returns all the XML content, including markup, of the current node and all its children; otherwise, it returns an empty string.</source>
          <target state="translated">如果讀取器位於項目或屬性節點上，這個方法會傳回目前節點及其所有子節點的所有 XML 內容，包括標記；否則傳回空字串。</target>       </trans-unit>
        <trans-unit id="2009" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>This method is similar to <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadInnerXml%2A&gt;</ph> except it also returns the start and end tags.</source>
          <target state="translated">這個方法是類似於<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadInnerXml%2A&gt;</ph>處在於它也會傳回開始和結束標記。</target>       </trans-unit>
        <trans-unit id="2010" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>This method handles element and attribute nodes in the following manner:</source>
          <target state="translated">這個方法會以下列方式處理項目和屬性節點：</target>       </trans-unit>
        <trans-unit id="2011" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>Node type</source>
          <target state="translated">節點類型</target>       </trans-unit>
        <trans-unit id="2012" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>Position before the call</source>
          <target state="translated">呼叫前的位置</target>       </trans-unit>
        <trans-unit id="2013" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>XML fragment</source>
          <target state="translated">XML 片段</target>       </trans-unit>
        <trans-unit id="2014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>Return value</source>
          <target state="translated">傳回值</target>       </trans-unit>
        <trans-unit id="2015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>Position After the Call</source>
          <target state="translated">呼叫後的位置</target>       </trans-unit>
        <trans-unit id="2016" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>On the <ph id="ph1">`item1`</ph> start tag.</source>
          <target state="translated">在 <ph id="ph1">`item1`</ph> 開始標記上。</target>       </trans-unit>
        <trans-unit id="2017" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source><ph id="ph1">\&lt;</ph>item1&gt;text1<ph id="ph2">\&lt;</ph>/item1&gt;<ph id="ph3">\&lt;</ph>item2&gt;text2<ph id="ph4">\&lt;</ph>/item2&gt;</source>
          <target state="translated"><ph id="ph1">\&lt;</ph>item1&gt;text1<ph id="ph2">\&lt;</ph>/item1&gt;<ph id="ph3">\&lt;</ph>item2&gt;text2<ph id="ph4">\&lt;</ph>/item2&gt;</target>       </trans-unit>
        <trans-unit id="2018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source><ph id="ph1">\&lt;</ph>item1&gt;text1<ph id="ph2">\&lt;</ph>/item1&gt;</source>
          <target state="translated"><ph id="ph1">\&lt;</ph>item1&gt;text1<ph id="ph2">\&lt;</ph>/item1&gt;</target>       </trans-unit>
        <trans-unit id="2019" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>On the <ph id="ph1">`item2`</ph> start tag.</source>
          <target state="translated">在 <ph id="ph1">`item2`</ph> 開始標記上。</target>       </trans-unit>
        <trans-unit id="2020" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>On the <ph id="ph1">`attr1`</ph> attribute node.</source>
          <target state="translated">在 <ph id="ph1">`attr1`</ph> 屬性節點上。</target>       </trans-unit>
        <trans-unit id="2021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source><ph id="ph1">\&lt;</ph>item attr1="val1" attr2="val2"&gt;text<ph id="ph2">\&lt;</ph>/item&gt;</source>
          <target state="translated"><ph id="ph1">\&lt;</ph>item attr1="val1" attr2="val2"&gt;text<ph id="ph2">\&lt;</ph>/item&gt;</target>       </trans-unit>
        <trans-unit id="2022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>attr1="val1"</source>
          <target state="translated">attr1="val1"</target>       </trans-unit>
        <trans-unit id="2023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>Remains on the <ph id="ph1">`attr1`</ph> attribute node.</source>
          <target state="translated">保留在 <ph id="ph1">`attr1`</ph> 屬性節點上。</target>       </trans-unit>
        <trans-unit id="2024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>If the reader is positioned on a leaf node, calling <ph id="ph1">`ReadOuterXml`</ph> is equivalent to calling <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>.</source>
          <target state="translated">如果讀取器定位於分葉節點上，則呼叫 <ph id="ph1">`ReadOuterXml`</ph> 相當於呼叫 <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>The method returns <ph id="ph1">`String.Empty`</ph> (except for attribute nodes, in which case the attribute markup is returned).</source>
          <target state="translated">方法會傳回<ph id="ph1">`String.Empty`</ph>（除非屬性節點的屬性標記會傳回在此情況下）。</target>       </trans-unit>
        <trans-unit id="2026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>This method checks for well-formed XML.</source>
          <target state="translated">這個方法會檢查格式正確的 XML。</target>       </trans-unit>
        <trans-unit id="2027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>If <ph id="ph1">`ReadOuterXml`</ph> is called from an <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph>, this method also validates the content returned</source>
          <target state="translated">如果<ph id="ph1">`ReadOuterXml`</ph>從呼叫<ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph>，這個方法也會驗證傳回的內容</target>       </trans-unit>
        <trans-unit id="2028" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>As implemented in the <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph> and <ph id="ph3">`XmlValidatingReader`</ph> classes the <ph id="ph4">`ReadOuterXml`</ph> method is namespace aware.</source>
          <target state="translated">在中實作<ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph>，<ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph>和<ph id="ph3">`XmlValidatingReader`</ph>類別<ph id="ph4">`ReadOuterXml`</ph>方法是命名空間感知。</target>       </trans-unit>
        <trans-unit id="2029" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>Given the following XML text <ph id="ph1">`&lt;A xmlns:S="urn:1"&gt;&lt;S:B&gt;hello&lt;/S:B&gt;&lt;/A&gt;`</ph>, if the reader were positioned on the <ph id="ph2">`S:B`</ph> start tag, <ph id="ph3">`ReadOuterXml`</ph> returns <ph id="ph4">`&lt;S:B xmlns:S="urn:1"&gt;hello&lt;S:B/&gt;`</ph>.</source>
          <target state="translated">指定下列 XML 文字<ph id="ph1">`&lt;A xmlns:S="urn:1"&gt;&lt;S:B&gt;hello&lt;/S:B&gt;&lt;/A&gt;`</ph>，如果將讀取器置於上<ph id="ph2">`S:B`</ph>開始標記，<ph id="ph3">`ReadOuterXml`</ph>傳回<ph id="ph4">`&lt;S:B xmlns:S="urn:1"&gt;hello&lt;S:B/&gt;`</ph>。</target>       </trans-unit>
        <trans-unit id="2030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadOuterXmlAsync%2A&gt;</ph>.</source>
          <target state="translated">這個方法的非同步版本，請參閱<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadOuterXmlAsync%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>The following example compares the <ph id="ph1">`ReadInnerXml`</ph> and <ph id="ph2">`ReadOuterXml`</ph> methods.</source>
          <target state="translated">下列範例會比較<ph id="ph1">`ReadInnerXml`</ph>和<ph id="ph2">`ReadOuterXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="2032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>The example uses <ph id="ph1">`2books.xml`</ph> file as input.</source>
          <target state="translated">此範例會使用<ph id="ph1">`2books.xml`</ph>檔案做為輸入。</target>       </trans-unit>
        <trans-unit id="2033" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>The XML was not well-formed, or an error occurred while parsing the XML.</source>
          <target state="translated">XML 不是語式正確，或剖析 XML 時發生錯誤。</target>       </trans-unit>
        <trans-unit id="2034" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2035" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadOuterXml">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="2036" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadOuterXmlAsync">
          <source>Asynchronously reads the content, including markup, representing this node and all its children.</source>
          <target state="translated">非同步讀取表示這個節點及其所有子系的內容，包括標記。</target>       </trans-unit>
        <trans-unit id="2037" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadOuterXmlAsync">
          <source>If the reader is positioned on an element or an attribute node, this method returns all the XML content, including markup, of the current node and all its children; otherwise, it returns an empty string.</source>
          <target state="translated">如果讀取器位於項目或屬性節點上，這個方法會傳回目前節點及其所有子節點的所有 XML 內容，包括標記；否則傳回空字串。</target>       </trans-unit>
        <trans-unit id="2038" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXmlAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadOuterXml%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">這是非同步版本<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadOuterXml%2A&gt;</ph>，使用相同的功能。</target>       </trans-unit>
        <trans-unit id="2039" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadOuterXmlAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">若要使用此方法，您必須設定<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph>旗標設為<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="2040" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadOuterXmlAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">在未將 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 旗標設為 <ph id="ph3">&lt;see langword="true" /&gt;</ph>的情況下呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 非同步方法。</target>       </trans-unit>
        <trans-unit id="2041" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadOuterXmlAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</target>       </trans-unit>
        <trans-unit id="2042" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2043" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2044" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Checks that the current node is an element and advances the reader to the next node.</source>
          <target state="translated">檢查以確定目前節點為項目，然後使讀取器前進至下一個節點。</target>       </trans-unit>
        <trans-unit id="2045" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement">
          <source>Checks that the current node is an element and advances the reader to the next node.</source>
          <target state="translated">檢查以確定目前節點為項目，然後使讀取器前進至下一個節點。</target>       </trans-unit>
        <trans-unit id="2046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadStartElement">
          <source>This method calls <ph id="ph1">&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;</ph> followed by <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> to position you on the content of that element found in the input stream.</source>
          <target state="translated">這個方法會呼叫<ph id="ph1">&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;</ph>後面<ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>置於您在輸入資料流中找到該項目的內容。</target>       </trans-unit>
        <trans-unit id="2047" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement">
          <source>Incorrect XML was encountered in the input stream.</source>
          <target state="translated">輸入資料流中遇到不正確的 XML。</target>       </trans-unit>
        <trans-unit id="2048" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2049" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="2050" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String)">
          <source>The qualified name of the element.</source>
          <target state="translated">項目的限定名稱。</target>       </trans-unit>
        <trans-unit id="2051" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String)">
          <source>Checks that the current content node is an element with the given <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.Name" /&gt;</ph> and advances the reader to the next node.</source>
          <target state="translated">檢查目前的內容節點是否具有的項目指定<ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.Name" /&gt;</ph>並使讀取器前進至下一個節點。</target>       </trans-unit>
        <trans-unit id="2052" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadStartElement(System.String)">
          <source>A call to this method corresponds to a call to <ph id="ph1">&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;</ph> followed by a call to <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>.</source>
          <target state="translated">這個方法的呼叫對應至呼叫<ph id="ph1">&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;</ph>後面呼叫<ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadStartElement(System.String)">
          <source>The following example displays the text content of each element.</source>
          <target state="translated">下列範例會顯示每個項目的文字內容。</target>       </trans-unit>
        <trans-unit id="2054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadStartElement(System.String)">
          <source>The example uses the <ph id="ph1">`book3.xml`</ph> file.</source>
          <target state="translated">此範例會使用<ph id="ph1">`book3.xml`</ph>檔案。</target>       </trans-unit>
        <trans-unit id="2055" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String)">
          <source>Incorrect XML was encountered in the input stream.</source>
          <target state="translated">輸入資料流中遇到不正確的 XML。</target>       </trans-unit>
        <trans-unit id="2056" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="2057" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.Name" /&gt;</ph> of the element does not match the given <ph id="ph2">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.Name" /&gt;</ph>的項目不符合給定<ph id="ph2">&lt;paramref name="name" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2058" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2059" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="2060" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">項目的本機名稱。</target>       </trans-unit>
        <trans-unit id="2061" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">項目的命名空間 URI。</target>       </trans-unit>
        <trans-unit id="2062" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
          <source>Checks that the current content node is an element with the given <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.LocalName" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NamespaceURI" /&gt;</ph> and advances the reader to the next node.</source>
          <target state="translated">檢查目前的內容節點是否具有的項目指定<ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.LocalName" /&gt;</ph>和<ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NamespaceURI" /&gt;</ph>並使讀取器前進至下一個節點。</target>       </trans-unit>
        <trans-unit id="2063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
          <source>A call to this method corresponds to a call to <ph id="ph1">&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;</ph> followed by a call to <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>.</source>
          <target state="translated">這個方法的呼叫對應至呼叫<ph id="ph1">&lt;xref:System.Xml.XmlReader.IsStartElement%2A&gt;</ph>後面呼叫<ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2064" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
          <source>Incorrect XML was encountered in the input stream.</source>
          <target state="translated">輸入資料流中遇到不正確的 XML。</target>       </trans-unit>
        <trans-unit id="2065" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="2066" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.LocalName" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NamespaceURI" /&gt;</ph> properties of the element found do not match the given arguments.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.LocalName" /&gt;</ph>和<ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NamespaceURI" /&gt;</ph>屬性找到的項目不符合指定的引數。</target>       </trans-unit>
        <trans-unit id="2067" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2068" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="2069" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.ReadState">
          <source>When overridden in a derived class, gets the state of the reader.</source>
          <target state="translated">在衍生類別中覆寫時，取得讀取器的狀態。</target>       </trans-unit>
        <trans-unit id="2070" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.ReadState">
          <source>One of the enumeration values that specifies the state of the reader.</source>
          <target state="translated">其中一個列舉值，這個值指定讀取器的狀態。</target>       </trans-unit>
        <trans-unit id="2071" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.ReadState">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadState%2A&gt;</ph> property has one of the following values:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadState%2A&gt;</ph>屬性具有下列值之一：</target>       </trans-unit>
        <trans-unit id="2072" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.ReadState">
          <source><ph id="ph1">&lt;xref:System.Xml.ReadState.Initial&gt;</ph>, when the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.ReadState.Initial&gt;</ph>當<ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType&gt;</ph>方法呼叫。</target>       </trans-unit>
        <trans-unit id="2073" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.ReadState">
          <source><ph id="ph1">&lt;xref:System.Xml.ReadState.Interactive&gt;</ph>, when the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType&gt;</ph> method has been called, and additional methods may be called on the reader.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.ReadState.Interactive&gt;</ph>當<ph id="ph2">&lt;xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType&gt;</ph>已呼叫方法，並將讀取器上可以呼叫其他方法。</target>       </trans-unit>
        <trans-unit id="2074" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.ReadState">
          <source><ph id="ph1">&lt;xref:System.Xml.ReadState.EndOfFile&gt;</ph>, when the end of the XML document has been reached successfully.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.ReadState.EndOfFile&gt;</ph>當 XML 文件已到達結尾成功。</target>       </trans-unit>
        <trans-unit id="2075" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.ReadState">
          <source><ph id="ph1">&lt;xref:System.Xml.ReadState.Closed&gt;</ph>, when the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Close%2A?displayProperty=nameWithType&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.ReadState.Closed&gt;</ph>當<ph id="ph2">&lt;xref:System.Xml.XmlReader.Close%2A?displayProperty=nameWithType&gt;</ph>方法呼叫。</target>       </trans-unit>
        <trans-unit id="2076" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.ReadState">
          <source><ph id="ph1">&lt;xref:System.Xml.ReadState.Error&gt;</ph>, when an error is preventing the read operation from continuing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.ReadState.Error&gt;</ph>當發生錯誤，無法讀取的作業無法繼續。</target>       </trans-unit>
        <trans-unit id="2077" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.ReadState">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2078" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.ReadState">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="2079" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadString">
          <source>When overridden in a derived class, reads the contents of an element or text node as a string.</source>
          <target state="translated">在衍生類別中覆寫時，將項目或文字節點的內容當做字串讀取。</target>       </trans-unit>
        <trans-unit id="2080" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadString">
          <source>However, we recommend that you use the <ph id="ph1">&lt;see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" /&gt;</ph> method instead, because it provides a more straightforward way to handle this operation.</source>
          <target state="translated">不過，我們建議您改用<ph id="ph1">&lt;see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" /&gt;</ph>方法相反地，因為它會提供較簡單的方式來處理這項作業。</target>       </trans-unit>
        <trans-unit id="2081" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadString">
          <source>The contents of the element or an empty string.</source>
          <target state="translated">項目的內容或空字串。</target>       </trans-unit>
        <trans-unit id="2082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadString">
          <source>We recommend that you use the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsString%2A&gt;</ph> method to read the contents of an element or text node as a string.</source>
          <target state="translated">我們建議您改用<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadElementContentAsString%2A&gt;</ph>方法來讀取為字串的項目或文字節點的內容。</target>       </trans-unit>
        <trans-unit id="2083" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadString">
          <source>An error occurred while parsing the XML.</source>
          <target state="translated">剖析 XML 時發生錯誤。</target>       </trans-unit>
        <trans-unit id="2084" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadString">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2085" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadString">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="2086" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>Returns a new <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> instance that can be used to read the current node, and all its descendants.</source>
          <target state="translated">傳回新<ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph>可以用來讀取目前的節點及其所有子系的執行個體。</target>       </trans-unit>
        <trans-unit id="2087" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>A new XML reader instance set to <ph id="ph1">&lt;see cref="F:System.Xml.ReadState.Initial" /&gt;</ph>.</source>
          <target state="translated">新的 XML 讀取器執行個體設定為<ph id="ph1">&lt;see cref="F:System.Xml.ReadState.Initial" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2088" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>Calling the <ph id="ph1">&lt;see cref="M:System.Xml.XmlReader.Read" /&gt;</ph> method positions the new reader on the node that was current before the call to the <ph id="ph2">&lt;see cref="M:System.Xml.XmlReader.ReadSubtree" /&gt;</ph> method.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;see cref="M:System.Xml.XmlReader.Read" /&gt;</ph>方法前呼叫的節點上放置新讀取器<ph id="ph2">&lt;see cref="M:System.Xml.XmlReader.ReadSubtree" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="2089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadSubtree%2A&gt;</ph> can be called only on element nodes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadSubtree%2A&gt;</ph> 只有在項目節點上，可以被呼叫。</target>       </trans-unit>
        <trans-unit id="2090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>When the entire sub-tree has been read, calls to the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> method returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">已讀取整個子樹狀目錄，當呼叫<ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>方法會傳回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="2091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>When the new XML reader has been closed, the original readeris positioned on the <ph id="ph1">`EndElement`</ph> node of the sub-tree.</source>
          <target state="translated">當新的 XML 讀取器已經關閉，原始的 readeris 位於<ph id="ph1">`EndElement`</ph>子樹狀結構的節點。</target>       </trans-unit>
        <trans-unit id="2092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>Thus, if you called the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadSubtree%2A&gt;</ph> method on the start tag of the book element, after the sub-tree has been read and the new XML reader has been closed, the original XML reader is positioned on the end tag of the book element.</source>
          <target state="translated">因此，如果您呼叫<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadSubtree%2A&gt;</ph>book 項目之後，子樹狀目錄中讀取和新的 XML 讀取器的開始標記上的方法已經關閉，原始的 XML 讀取器位於目的 book 項目結束標記。</target>       </trans-unit>
        <trans-unit id="2093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>You should not perform any operations on the original reader until the new reader has been closed.</source>
          <target state="translated">在關閉新讀取器之前，不應在原始讀取器上執行任何作業。</target>       </trans-unit>
        <trans-unit id="2094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>This action is not supported and can result in unpredictable behavior.</source>
          <target state="translated">此動作不受支援，並會導致無法預期的行為。</target>       </trans-unit>
        <trans-unit id="2095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadSubtree%2A&gt;</ph> method isn't intended for creatingcopies of the XML data that you can work with independently.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadSubtree%2A&gt;</ph>方法不適用於 XML 資料，您可以使用獨立的 creatingcopies。</target>       </trans-unit>
        <trans-unit id="2096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>It's designedto create a boundary around an XML element.</source>
          <target state="translated">它的 designedto 建立的 XML 項目周圍的界限。</target>       </trans-unit>
        <trans-unit id="2097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>This is useful if you want to pass data to another component for processing and you wish to limit how much of your data the component can access.</source>
          <target state="translated">如果您想要將資料傳遞至另一個元件進行處理，而且您想要限制該元件可存取您資料中有多少，這非常有用。</target>       </trans-unit>
        <trans-unit id="2098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>When you pass an XML reader returned by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadSubtree%2A&gt;</ph> method to another application, the application can access only that XML element, not the entire XML document.</source>
          <target state="translated">傳遞時，所傳回的 XML 讀取器<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadSubtree%2A&gt;</ph>方法，以另一個應用程式，應用程式可以存取只有該 XML 項目，不是整個 XML 文件。</target>       </trans-unit>
        <trans-unit id="2099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadSubtree%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範如何使用 <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadSubtree%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>Use the following XML data to run the examples in this topic:</source>
          <target state="translated">若要執行本主題中的範例使用下列 XML 資料：</target>       </trans-unit>
        <trans-unit id="2101" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2102" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadSubtree">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="2103" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2104" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2105" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Advances the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to the next matching descendant element.</source>
          <target state="translated">往前推進<ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>下一個相符的子系項目。</target>       </trans-unit>
        <trans-unit id="2106" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
          <source>The qualified name of the element you wish to move to.</source>
          <target state="translated">您要移至之項目的限定名稱。</target>       </trans-unit>
        <trans-unit id="2107" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
          <source>Advances the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to the next descendant element with the specified qualified name.</source>
          <target state="translated">往前推進<ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>下一個子系的項目，具有指定限定名稱。</target>       </trans-unit>
        <trans-unit id="2108" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a matching descendant element is found; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>如果找到相符的子系項目否則<ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2109" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
          <source>If a matching child element is not found, the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> is positioned on the end tag (<ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="XmlNodeType.EndElement" /&gt;</ph>) of the element.</source>
          <target state="translated">如果找不到相符的子元素，<ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>位於結束標記 (<ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph>是<ph id="ph3">&lt;see langword="XmlNodeType.EndElement" /&gt;</ph>) 的項目。</target>       </trans-unit>
        <trans-unit id="2110" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> is not positioned on an element when <ph id="ph2">&lt;see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String)" /&gt;</ph> was called, this method returns <ph id="ph3">&lt;see langword="false" /&gt;</ph> and the position of the <ph id="ph4">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> is not changed.</source>
          <target state="translated">如果<ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>不位於項目上時<ph id="ph2">&lt;see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String)" /&gt;</ph>呼叫，這個方法會傳回<ph id="ph3">&lt;see langword="false" /&gt;</ph>和位置<ph id="ph4">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>則不會變更。</target>       </trans-unit>
        <trans-unit id="2111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
          <source>The following example parses the second book node.</source>
          <target state="translated">下列範例會剖析第二個書籍節點。</target>       </trans-unit>
        <trans-unit id="2112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
          <source>The example uses the file, <ph id="ph1">`2books.xml`</ph>, as input.</source>
          <target state="translated">此範例會使用該檔案，<ph id="ph1">`2books.xml`</ph>作為輸入。</target>       </trans-unit>
        <trans-unit id="2113" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2114" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="2115" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
          <source>The parameter is an empty string.</source>
          <target state="translated">參數為空字串。</target>       </trans-unit>
        <trans-unit id="2116" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
          <source>The local name of the element you wish to move to.</source>
          <target state="translated">您要移至之項目的本機名稱。</target>       </trans-unit>
        <trans-unit id="2117" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
          <source>The namespace URI of the element you wish to move to.</source>
          <target state="translated">您要移至之項目的命名空間 URI。</target>       </trans-unit>
        <trans-unit id="2118" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
          <source>Advances the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to the next descendant element with the specified local name and namespace URI.</source>
          <target state="translated">往前推進<ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>下一個子系的項目，使用指定的區域名稱和命名空間 URI。</target>       </trans-unit>
        <trans-unit id="2119" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a matching descendant element is found; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>如果找到相符的子系項目否則<ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2120" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
          <source>If a matching child element is not found, the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> is positioned on the end tag (<ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="XmlNodeType.EndElement" /&gt;</ph>) of the element.</source>
          <target state="translated">如果找不到相符的子元素，<ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>位於結束標記 (<ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph>是<ph id="ph3">&lt;see langword="XmlNodeType.EndElement" /&gt;</ph>) 的項目。</target>       </trans-unit>
        <trans-unit id="2121" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> is not positioned on an element when <ph id="ph2">&lt;see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" /&gt;</ph> was called, this method returns <ph id="ph3">&lt;see langword="false" /&gt;</ph> and the position of the <ph id="ph4">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> is not changed.</source>
          <target state="translated">如果<ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>不位於項目上時<ph id="ph2">&lt;see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" /&gt;</ph>呼叫，這個方法會傳回<ph id="ph3">&lt;see langword="false" /&gt;</ph>和位置<ph id="ph4">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>則不會變更。</target>       </trans-unit>
        <trans-unit id="2122" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2123" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="2124" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
          <source>Both parameter values are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這兩個參數值為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2125" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2126" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2127" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Reads until the named element is found.</source>
          <target state="translated">在找到具名項目之前讀取。</target>       </trans-unit>
        <trans-unit id="2128" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
          <source>The qualified name of the element.</source>
          <target state="translated">項目的限定名稱。</target>       </trans-unit>
        <trans-unit id="2129" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
          <source>Reads until an element with the specified qualified name is found.</source>
          <target state="translated">在找到具有指定限定名稱的項目之前讀取。</target>       </trans-unit>
        <trans-unit id="2130" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a matching element is found; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph> and the <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> is in an end of file state.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>如果找到相符的項目否則<ph id="ph2">&lt;see langword="false" /&gt;</ph>和<ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>是在檔案結尾的狀態。</target>       </trans-unit>
        <trans-unit id="2131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
          <source>This method is functionally equivalent executing the <ph id="ph1">`following::name`</ph> XPath expression from the current node.</source>
          <target state="translated">這個方法時，功能上相當執行<ph id="ph1">`following::name`</ph>從目前節點的 XPath 運算式。</target>       </trans-unit>
        <trans-unit id="2132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
          <source>It provides a quick way to find a named element in the XML document.</source>
          <target state="translated">它提供快速的方式，XML 文件中找到具名項目。</target>       </trans-unit>
        <trans-unit id="2133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
          <source>It advances the reader to the next following element that matches the specified name and returns <ph id="ph1">`true`</ph> if a matching element is found.</source>
          <target state="translated">將讀取器前移至下的下列項目符合指定的名稱並傳回<ph id="ph1">`true`</ph>如果找到相符的項目。</target>       </trans-unit>
        <trans-unit id="2134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
          <source>Using the example below, the reader would read to the first instance of the specified element while reading forward.</source>
          <target state="translated">使用下列範例中，讀取器會讀取指定項目的第一個執行個體時向前讀取。</target>       </trans-unit>
        <trans-unit id="2135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
          <source>This method can be called on all node types.</source>
          <target state="translated">可以在所有節點類型上呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="2136" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2137" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="2138" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
          <source>The parameter is an empty string.</source>
          <target state="translated">參數為空字串。</target>       </trans-unit>
        <trans-unit id="2139" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">項目的本機名稱。</target>       </trans-unit>
        <trans-unit id="2140" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
          <source>The namespace URI of the element.</source>
          <target state="translated">項目的命名空間 URI。</target>       </trans-unit>
        <trans-unit id="2141" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
          <source>Reads until an element with the specified local name and namespace URI is found.</source>
          <target state="translated">在找到具有指定區域名稱和命名空間 URI 的項目之前讀取。</target>       </trans-unit>
        <trans-unit id="2142" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a matching element is found; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph> and the <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> is in an end of file state.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>如果找到相符的項目否則<ph id="ph2">&lt;see langword="false" /&gt;</ph>和<ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>是在檔案結尾的狀態。</target>       </trans-unit>
        <trans-unit id="2143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
          <source>This method is functionally equivalent executing the <ph id="ph1">`following::name`</ph> XPath expression from the current node.</source>
          <target state="translated">這個方法時，功能上相當執行<ph id="ph1">`following::name`</ph>從目前節點的 XPath 運算式。</target>       </trans-unit>
        <trans-unit id="2144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
          <source>It provides a quick way to find a named element in the XML document.</source>
          <target state="translated">它提供快速的方式，XML 文件中找到具名項目。</target>       </trans-unit>
        <trans-unit id="2145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
          <source>It advances the reader to the next following element that matches the specified name and returns <ph id="ph1">`true`</ph> if a matching element is found.</source>
          <target state="translated">將讀取器前移至下的下列項目符合指定的名稱並傳回<ph id="ph1">`true`</ph>如果找到相符的項目。</target>       </trans-unit>
        <trans-unit id="2146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
          <source>This method can be called on all node types.</source>
          <target state="translated">可以在所有節點類型上呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="2147" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2148" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="2149" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
          <source>Both parameter values are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這兩個參數值為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2150" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2151" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message “An asynchronous operation is already in progress.”</source>
          <target state="translated">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2152" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlReader">
          <source>Advances the <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> to the next matching sibling element.</source>
          <target state="translated">往前推進<ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph>下一個相符的同層級項目。</target>       </trans-unit>
        <trans-unit id="2153" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
          <source>The qualified name of the sibling element you wish to move to.</source>
          <target state="translated">您要移至之同層級項目的限定名稱。</target>       </trans-unit>
        <trans-unit id="2154" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
          <source>Advances the <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> to the next sibling element with the specified qualified name.</source>
          <target state="translated">往前推進<ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph>指定限定名稱的下一個同層級項目。</target>       </trans-unit>
        <trans-unit id="2155" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a matching sibling element is found; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>如果找到相符的同層級項目否則<ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2156" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
          <source>If a matching sibling element is not found, the <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> is positioned on the end tag (<ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="XmlNodeType.EndElement" /&gt;</ph>) of the parent element.</source>
          <target state="translated">如果找不到相符的同層級項目，則 <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> 會置於父項目的結束標記上 (<ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="XmlNodeType.EndElement" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="2157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
          <source>Do not call <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadToNextSibling%2A&gt;</ph> when the <ph id="ph2">`XmlReader`</ph> is an initial state (<ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadState%2A&gt;</ph> is <ph id="ph4">&lt;xref:System.Xml.ReadState.Initial&gt;</ph>).</source>
          <target state="translated">請勿呼叫<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadToNextSibling%2A&gt;</ph>時<ph id="ph2">`XmlReader`</ph>是初始狀態 (<ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadState%2A&gt;</ph>是<ph id="ph4">&lt;xref:System.Xml.ReadState.Initial&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="2158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
          <source>You can call <ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> to advance the <ph id="ph2">`XmlReader`</ph> and then call the <ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadToNextSibling%2A&gt;</ph> method.</source>
          <target state="translated">您可以呼叫<ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>前進<ph id="ph2">`XmlReader`</ph>，然後呼叫<ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadToNextSibling%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="2159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
          <source>The following example reads the ISBN attribute on each book node.</source>
          <target state="translated">下列範例會讀取每個書籍節點上的 ISBN 屬性。</target>       </trans-unit>
        <trans-unit id="2160" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2161" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="2162" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
          <source>The parameter is an empty string.</source>
          <target state="translated">參數為空字串。</target>       </trans-unit>
        <trans-unit id="2163" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
          <source>The local name of the sibling element you wish to move to.</source>
          <target state="translated">您要移至之同層級項目的本機名稱。</target>       </trans-unit>
        <trans-unit id="2164" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
          <source>The namespace URI of the sibling element you wish to move to.</source>
          <target state="translated">您要移至之同層級項目的命名空間 URI。</target>       </trans-unit>
        <trans-unit id="2165" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
          <source>Advances the <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> to the next sibling element with the specified local name and namespace URI.</source>
          <target state="translated">將 <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> 前移到下一個具有指定區域名稱和命名空間 URI 的同層級項目。</target>       </trans-unit>
        <trans-unit id="2166" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a matching sibling element is found; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果找到相符的同層級項目，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2167" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
          <source>If a matching sibling element is not found, the <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> is positioned on the end tag (<ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph> is <ph id="ph3">&lt;see langword="XmlNodeType.EndElement" /&gt;</ph>) of the parent element.</source>
          <target state="translated">如果找不到相符的同層級項目，則 <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> 會置於父項目的結束標記上 (<ph id="ph2">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="XmlNodeType.EndElement" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="2168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
          <source>Do not call <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadToNextSibling%2A&gt;</ph> when the <ph id="ph2">`XmlReader`</ph> is an initial state (<ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadState%2A&gt;</ph> is <ph id="ph4">&lt;xref:System.Xml.ReadState.Initial&gt;</ph>).</source>
          <target state="translated">請勿呼叫<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadToNextSibling%2A&gt;</ph>時<ph id="ph2">`XmlReader`</ph>是初始狀態 (<ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadState%2A&gt;</ph>是<ph id="ph4">&lt;xref:System.Xml.ReadState.Initial&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="2169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
          <source>You can call <ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> to advance the <ph id="ph2">`XmlReader`</ph> and then call the <ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadToNextSibling%2A&gt;</ph> method.</source>
          <target state="translated">您可以呼叫<ph id="ph1">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>前進<ph id="ph2">`XmlReader`</ph>，然後呼叫<ph id="ph3">&lt;xref:System.Xml.XmlReader.ReadToNextSibling%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="2170" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2171" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="2172" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
          <source>Both parameter values are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這兩個參數值為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2173" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>The array of characters that serves as the buffer to which the text contents are written.</source>
          <target state="translated">做為寫入文字內容之緩衝區的字元陣列。</target>       </trans-unit>
        <trans-unit id="2174" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個值不能是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2175" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>The offset within the buffer where the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> can start to copy the results.</source>
          <target state="translated">緩衝區位移位置<ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>可以開始複製結果。</target>       </trans-unit>
        <trans-unit id="2176" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>The maximum number of characters to copy into the buffer.</source>
          <target state="translated">要複製至緩衝區中的最大字元數目。</target>       </trans-unit>
        <trans-unit id="2177" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>The actual number of characters copied is returned from this method.</source>
          <target state="translated">從這個方法傳回所複製的實際字元數目。</target>       </trans-unit>
        <trans-unit id="2178" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>Reads large streams of text embedded in an XML document.</source>
          <target state="translated">讀取 XML 文件中內嵌之大量文字資料流。</target>       </trans-unit>
        <trans-unit id="2179" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters read into the buffer.</source>
          <target state="translated">讀入緩衝區的字元數目。</target>       </trans-unit>
        <trans-unit id="2180" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>The value zero is returned when there is no more text content.</source>
          <target state="translated">當不再有文字內容時，會傳回零的值。</target>       </trans-unit>
        <trans-unit id="2181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>This method enables reading of very large streams of text embedded in an XML document in a streaming fashion, that is, a small number of characters at a time instead of allocating a single string for the whole value.</source>
          <target state="translated">這個方法可讓讀取資料流處理方式，也就是 XML 文件中的內嵌文字的非常大型的資料流的少量而不是整個值配置單一字串一次的字元。</target>       </trans-unit>
        <trans-unit id="2182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>This method can be called on any node that has a value (<ph id="ph1">&lt;xref:System.Xml.XmlReader.HasValue%2A&gt;</ph> is <ph id="ph2">`true`</ph>), however actual streaming of the node value only occurs when called on a text, white space and significant white space nodes.</source>
          <target state="translated">這個方法可以呼叫具有值的任何節點上 (<ph id="ph1">&lt;xref:System.Xml.XmlReader.HasValue%2A&gt;</ph>是<ph id="ph2">`true`</ph>)，不過時呼叫的文字、 泛空白字元和顯著泛空白字元節點的節點值的實際資料流才會發生。</target>       </trans-unit>
        <trans-unit id="2183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>Other node type values are cached, including attributes and CDATA nodes.</source>
          <target state="translated">其他節點型別值會快取，包括屬性和 CDATA 節點。</target>       </trans-unit>
        <trans-unit id="2184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>This method returns only the content of the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> property and does not move the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">這個方法會傳回內容的<ph id="ph1">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph>屬性並不會移動<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>This method reads the specified number of characters (<ph id="ph1">`count`</ph>) of the node value into a character buffer (<ph id="ph2">`buffer`</ph>) at a specified offset (<ph id="ph3">`index`</ph>) and returns the number of characters written to the buffer.</source>
          <target state="translated">這個方法會讀取指定的字元數 (<ph id="ph1">`count`</ph>) 讀入字元緩衝區中的節點值的 (<ph id="ph2">`buffer`</ph>) 在指定的位移 (<ph id="ph3">`index`</ph>)，然後傳回寫入緩衝區的字元數。</target>       </trans-unit>
        <trans-unit id="2186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>It returns the <ph id="ph1">`0`</ph> when it has reached the end of the value.</source>
          <target state="translated">它會傳回<ph id="ph1">`0`</ph>當它已達到此值的結尾。</target>       </trans-unit>
        <trans-unit id="2187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>It cannot be restarted to read through the value again.</source>
          <target state="translated">它無法閱讀值重新啟動。</target>       </trans-unit>
        <trans-unit id="2188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>In between calls to <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph> the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> properties do no change except for the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> property.</source>
          <target state="translated">呼叫之間<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph><ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>屬性進行任何變更，除了<ph id="ph3">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="2189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> property is accessed it may either return a partial value (with characters not yet returned by <ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph>) or a full value depending on the implementation.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph>存取屬性可能會傳回部分的值 (尚未所傳回的字元<ph id="ph2">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph>) 或完整的值，視實作而定。</target>       </trans-unit>
        <trans-unit id="2190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>All the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> implementations in the <ph id="ph2">&lt;xref:System.Xml&gt;</ph> namespace return a partial value for the <ph id="ph3">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph> property implementation.</source>
          <target state="translated">所有<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>中的實作<ph id="ph2">&lt;xref:System.Xml&gt;</ph>命名空間傳回的部分值<ph id="ph3">&lt;xref:System.Xml.XmlReader.Value%2A&gt;</ph>屬性實作。</target>       </trans-unit>
        <trans-unit id="2191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>Any Read method can be called in between calls to <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph>.</source>
          <target state="translated">任何讀取方法呼叫之間呼叫<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>If this occurs, the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> moves to the next <ph id="ph2">&lt;xref:System.Xml.XmlNodeType&gt;</ph> in the stream and any characters not yet returned are skipped.</source>
          <target state="translated">如果發生這種情況，<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>移到下<ph id="ph2">&lt;xref:System.Xml.XmlNodeType&gt;</ph>中的資料流和未傳回任何字元會略過。</target>       </trans-unit>
        <trans-unit id="2193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>There may be a case when <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph> returns less than the requested number of characters.</source>
          <target state="translated">可能的案例時<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph>傳回少於所要求的數目的字元。</target>       </trans-unit>
        <trans-unit id="2194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>For example, if you had a 200-character long value with a surrogate pair at positions 127 and 128 and you called <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph> with a 128-character buffer, the method call would return 127 characters instead of the requested 128.</source>
          <target state="translated">例如，如果您有 200 個字元的長數值 surrogate 字組與位置 127，128，而且您呼叫<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph>128 個字元的緩衝區，方法呼叫會傳回而不是要求 128 127 個字元。</target>       </trans-unit>
        <trans-unit id="2195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>The surrogate pair would then be returned in the next <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph> call.</source>
          <target state="translated">Surrogate 字組則會傳回在接下來<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph>呼叫。</target>       </trans-unit>
        <trans-unit id="2196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph> did not return the requested 128 characters because doing so would have resulted in an incomplete surrogate pair at the end of the buffer.</source>
          <target state="translated">在此情況下，<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph>未傳回要求的 128 個字元，因為這樣做，可能會導致緩衝區的結尾不完整的 surrogate 字組。</target>       </trans-unit>
        <trans-unit id="2197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunkAsync%2A&gt;</ph>.</source>
          <target state="translated">這個方法的非同步版本，請參閱<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunkAsync%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2198" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2199" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="2200" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> 值為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2201" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>The index into the buffer, or index + count is larger than the allocated buffer size.</source>
          <target state="translated">緩衝區索引或索引 + count 大於配置的緩衝區大小。</target>       </trans-unit>
        <trans-unit id="2202" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> implementation does not support this method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 實作不支援這個方法。</target>       </trans-unit>
        <trans-unit id="2203" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
          <source>The XML data is not well-formed.</source>
          <target state="translated">XML 資料格式不正確。</target>       </trans-unit>
        <trans-unit id="2204" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
          <source>The array of characters that serves as the buffer to which the text contents are written.</source>
          <target state="translated">做為寫入文字內容之緩衝區的字元陣列。</target>       </trans-unit>
        <trans-unit id="2205" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
          <source>This value cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個值不能是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2206" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
          <source>The offset within the buffer where the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> can start to copy the results.</source>
          <target state="translated">緩衝區位移位置<ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>可以開始複製結果。</target>       </trans-unit>
        <trans-unit id="2207" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
          <source>The maximum number of characters to copy into the buffer.</source>
          <target state="translated">要複製至緩衝區中的最大字元數目。</target>       </trans-unit>
        <trans-unit id="2208" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
          <source>The actual number of characters copied is returned from this method.</source>
          <target state="translated">從這個方法傳回所複製的實際字元數目。</target>       </trans-unit>
        <trans-unit id="2209" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
          <source>Asynchronously reads large streams of text embedded in an XML document.</source>
          <target state="translated">以非同步的方式讀取 XML 文件中內嵌之大量文字資料流。</target>       </trans-unit>
        <trans-unit id="2210" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters read into the buffer.</source>
          <target state="translated">讀入緩衝區的字元數目。</target>       </trans-unit>
        <trans-unit id="2211" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
          <source>The value zero is returned when there is no more text content.</source>
          <target state="translated">當不再有文字內容時，會傳回零的值。</target>       </trans-unit>
        <trans-unit id="2212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">這是非同步版本<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadValueChunk%2A&gt;</ph>，使用相同的功能。</target>       </trans-unit>
        <trans-unit id="2213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">若要使用此方法，您必須設定<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph>旗標設為<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="2214" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">在未將 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 旗標設為 <ph id="ph3">&lt;see langword="true" /&gt;</ph>的情況下呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 非同步方法。</target>       </trans-unit>
        <trans-unit id="2215" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</target>       </trans-unit>
        <trans-unit id="2216" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ResolveEntity">
          <source>When overridden in a derived class, resolves the entity reference for <ph id="ph1">&lt;see langword="EntityReference" /&gt;</ph> nodes.</source>
          <target state="translated">當在衍生類別中覆寫時，會解析實體參考<ph id="ph1">&lt;see langword="EntityReference" /&gt;</ph>節點。</target>       </trans-unit>
        <trans-unit id="2217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ResolveEntity">
          <source>If the reader is positioned on an <ph id="ph1">`EntityReference`</ph> node (<ph id="ph2">`XmlNodeType.EntityReference`</ph>), if <ph id="ph3">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph> is called after calling this method, the entity replacement text is parsed.</source>
          <target state="translated">如果讀取器位於<ph id="ph1">`EntityReference`</ph>節點 (<ph id="ph2">`XmlNodeType.EntityReference`</ph>)，如果<ph id="ph3">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>呼叫此方法中，實體取代文字會剖析之後呼叫。</target>       </trans-unit>
        <trans-unit id="2218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ResolveEntity">
          <source>When the entity replacement text is finished, an <ph id="ph1">`EndEntity`</ph> node is returned to close the entity reference scope.</source>
          <target state="translated">實體取代文字完成時，<ph id="ph1">`EndEntity`</ph>關閉實體參考範圍，則會傳回節點。</target>       </trans-unit>
        <trans-unit id="2219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.ResolveEntity">
          <source>After calling this method, if the entity is part of an attribute value, you must call <ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadAttributeValue%2A&gt;</ph> to step into the entity.</source>
          <target state="translated">之後呼叫這個方法，如果實體是一部分的屬性值，您必須呼叫<ph id="ph1">&lt;xref:System.Xml.XmlReader.ReadAttributeValue%2A&gt;</ph>逐步執行至實體。</target>       </trans-unit>
        <trans-unit id="2220" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ResolveEntity">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2221" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.ResolveEntity">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="2222" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.SchemaInfo">
          <source>Gets the schema information that has been assigned to the current node as a result of schema validation.</source>
          <target state="translated">取得在結構描述驗證之後已指派給目前節點的結構描述資訊。</target>       </trans-unit>
        <trans-unit id="2223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.SchemaInfo">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.IXmlSchemaInfo" /&gt;</ph> object containing the schema information for the current node.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.IXmlSchemaInfo" /&gt;</ph> 物件，包含目前節點的結構描述資訊。</target>       </trans-unit>
        <trans-unit id="2224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.SchemaInfo">
          <source>Schema information can be set on elements, attributes, or on text nodes with a non-null <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.ValueType" /&gt;</ph> (typed values).</source>
          <target state="translated">可以在項目、屬性或具有非 null <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.ValueType" /&gt;</ph> (具型別值) 之文字節點上設定結構描述資訊。</target>       </trans-unit>
        <trans-unit id="2225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.SchemaInfo">
          <source>If the current node is not one of the above node types, or if the <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> instance does not report schema information, this property returns <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果目前節點不屬於上述其中一個節點型別，或 <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> 執行個體不會報告結構描述資訊，則這個屬性會傳回 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.SchemaInfo">
          <source>If this property is called from an <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> or an <ph id="ph2">&lt;see cref="T:System.Xml.XmlValidatingReader" /&gt;</ph> object, this property always returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果這個屬性是從 <ph id="ph1">&lt;see cref="T:System.Xml.XmlTextReader" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Xml.XmlValidatingReader" /&gt;</ph> 物件呼叫的，則這個屬性一定會傳回 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.SchemaInfo">
          <source>These <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> implementations do not expose schema information through the <ph id="ph2">&lt;see langword="SchemaInfo" /&gt;</ph> property.</source>
          <target state="translated">這些 <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> 實作不會透過 <ph id="ph2">&lt;see langword="SchemaInfo" /&gt;</ph> 屬性公開結構描述資訊。</target>       </trans-unit>
        <trans-unit id="2228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.SchemaInfo">
          <source>If you have to get the post-schema-validation information set (PSVI) for an element, position the reader on the end tag of the element, rather than on the start tag.</source>
          <target state="translated">如果您需要取得項目的後結構描述驗證資訊集 (PSVI)，請將讀取器置於項目的結束標記，而非開始標記。</target>       </trans-unit>
        <trans-unit id="2229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.SchemaInfo">
          <source>You get the PSVI through the <ph id="ph1">&lt;see langword="SchemaInfo" /&gt;</ph> property of a reader.</source>
          <target state="translated">您可以透過讀取器的 <ph id="ph1">&lt;see langword="SchemaInfo" /&gt;</ph> 屬性取得 PSVI。</target>       </trans-unit>
        <trans-unit id="2230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.SchemaInfo">
          <source>The validating reader that is created through <ph id="ph1">&lt;see cref="Overload:System.Xml.XmlReader.Create" /&gt;</ph> with the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.ValidationType" /&gt;</ph> property set to <ph id="ph3">&lt;see cref="F:System.Xml.ValidationType.Schema" /&gt;</ph> has complete PSVI for an element only when the reader is positioned on the end tag of an element.</source>
          <target state="translated">如果驗證讀取器是透過將 <ph id="ph1">&lt;see cref="Overload:System.Xml.XmlReader.Create" /&gt;</ph> 並將 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.ValidationType" /&gt;</ph> 屬性設定為 <ph id="ph3">&lt;see cref="F:System.Xml.ValidationType.Schema" /&gt;</ph> 所建立，則該讀取器必須置於項目的結束標記，才會具有項目的完整 PSVI。</target>       </trans-unit>
        <trans-unit id="2231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.SchemaInfo">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.IXmlSchemaInfo&gt;</ph> interface exposes a subset of the Post Schema Validation Infoset (PSVI) associated with an XML node.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.IXmlSchemaInfo&gt;</ph>介面會公開的後結構描述驗證 Infoset (PSVI) 相關聯的 XML 節點的子集。</target>       </trans-unit>
        <trans-unit id="2232" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.SchemaInfo">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2233" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.SchemaInfo">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="2234" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Settings">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReaderSettings" /&gt;</ph> object used to create this <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReaderSettings" /&gt;</ph> 物件，用於建立這個 <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="2235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Settings">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReaderSettings" /&gt;</ph> object used to create this reader instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReaderSettings" /&gt;</ph> 物件，用於建立這個讀取器執行個體。</target>       </trans-unit>
        <trans-unit id="2236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Settings">
          <source>If this reader was not created using the <ph id="ph1">&lt;see cref="Overload:System.Xml.XmlReader.Create" /&gt;</ph> method, this property returns <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果未使用 <ph id="ph1">&lt;see cref="Overload:System.Xml.XmlReader.Create" /&gt;</ph> 方法建立這個讀取器，則這個屬性會傳回 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Settings">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object can contain sensitive information such as user credentials.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>物件可以包含使用者認證等機密資訊。</target>       </trans-unit>
        <trans-unit id="2238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Settings">
          <source>Applications must be careful when caching this object or passing it to another component.</source>
          <target state="translated">應用程式必須非常小心，當快取此物件，或將它傳遞給另一個元件。</target>       </trans-unit>
        <trans-unit id="2239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Settings">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> class is used to specify the set of features to support on the created reader instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>類別用來指定要建立的讀取器執行個體上支援的功能集。</target>       </trans-unit>
        <trans-unit id="2240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Settings">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object returned by this property cannot be modified.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>無法修改這個屬性所傳回的物件。</target>       </trans-unit>
        <trans-unit id="2241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Settings">
          <source>Any attempt to change individual settings results in an exception being thrown.</source>
          <target state="translated">任何嘗試變更個別的設定會造成擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="2242" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Settings">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2243" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Settings">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="2244" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Skip">
          <source>Skips the children of the current node.</source>
          <target state="translated">略過目前節點的子節點。</target>       </trans-unit>
        <trans-unit id="2245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>In the following XML input if the reader is positioned on the <ph id="ph1">`&lt;a&gt;`</ph> node or any of its attributes, calling <ph id="ph2">`Skip`</ph> positions the reader to the <ph id="ph3">`&lt;b&gt;`</ph> node.</source>
          <target state="translated">下列 xml 輸入如果讀取器位於<ph id="ph1">`&lt;a&gt;`</ph>節點或其任何屬性，呼叫<ph id="ph2">`Skip`</ph>若要將讀取器放置<ph id="ph3">`&lt;b&gt;`</ph>節點。</target>       </trans-unit>
        <trans-unit id="2246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>If the reader is positioned on a leaf node already (such as the <ph id="ph1">`&lt;x&gt;`</ph> node or the text node <ph id="ph2">`abc`</ph>), calling <ph id="ph3">`Skip`</ph> is the same as calling <ph id="ph4">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>.</source>
          <target state="translated">如果讀取器位於分葉節點上已 (例如<ph id="ph1">`&lt;x&gt;`</ph>節點或文字節點<ph id="ph2">`abc`</ph>)，則呼叫<ph id="ph3">`Skip`</ph>等同於呼叫<ph id="ph4">&lt;xref:System.Xml.XmlReader.Read%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>This method checks for well-formed XML.</source>
          <target state="translated">這個方法會檢查格式正確的 XML。</target>       </trans-unit>
        <trans-unit id="2248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>If the reader is an <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph>, this method also validates the skipped content.</source>
          <target state="translated">如果讀取器<ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph>，這個方法也會驗證略過的內容。</target>       </trans-unit>
        <trans-unit id="2249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>The <ph id="ph1">`XmlReader`</ph> implementation determines whether or not the <ph id="ph2">`Skip`</ph> method will expand external entities.</source>
          <target state="translated"><ph id="ph1">`XmlReader`</ph>實作可決定是否<ph id="ph2">`Skip`</ph>方法會擴充外部實體。</target>       </trans-unit>
        <trans-unit id="2250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>The following table describes whether the external entities are expanded for the various types of <ph id="ph1">`XmlReader`</ph> objects.</source>
          <target state="translated">下表描述各種類型是否會展開外部的實體<ph id="ph1">`XmlReader`</ph>物件。</target>       </trans-unit>
        <trans-unit id="2251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>Type of XmlReader</source>
          <target state="translated">XmlReader 的型別</target>       </trans-unit>
        <trans-unit id="2252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>Expands external entities</source>
          <target state="translated">展開外部實體</target>       </trans-unit>
        <trans-unit id="2253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>No.</source>
          <target state="translated">否。</target>       </trans-unit>
        <trans-unit id="2254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance created by the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method that is reading text data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 所建立的執行個體<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph>讀取的文字資料的方法。</target>       </trans-unit>
        <trans-unit id="2255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>No.</source>
          <target state="translated">否。</target>       </trans-unit>
        <trans-unit id="2256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance created by the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method that is reading binary data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 所建立的執行個體<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph>讀取的二進位資料的方法。</target>       </trans-unit>
        <trans-unit id="2257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>Not applicable.</source>
          <target state="translated">不適用。</target>       </trans-unit>
        <trans-unit id="2258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>A schema validating <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance created by the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.</source>
          <target state="translated">結構描述驗證<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>所建立的執行個體<ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="2259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>Yes.</source>
          <target state="translated">可以。</target>       </trans-unit>
        <trans-unit id="2260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>Yes.</source>
          <target state="translated">可以。</target>       </trans-unit>
        <trans-unit id="2261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance returned by a <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 所傳回的執行個體<ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="2262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>Not applicable.</source>
          <target state="translated">不適用。</target>       </trans-unit>
        <trans-unit id="2263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>No.</source>
          <target state="translated">否。</target>       </trans-unit>
        <trans-unit id="2264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instance wrapped around another <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> 圍繞另一個執行個體<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="2265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>Depends on the implementation of the underlying <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">取決於基礎實作<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>(The <ph id="ph1">`Skip`</ph> method on the underlying <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> is called).</source>
          <target state="translated">(<ph id="ph1">`Skip`</ph>方法於基礎<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>稱為)。</target>       </trans-unit>
        <trans-unit id="2267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>For the asynchronous version of this method, see <ph id="ph1">&lt;xref:System.Xml.XmlReader.SkipAsync%2A&gt;</ph>.</source>
          <target state="translated">這個方法的非同步版本，請參閱<ph id="ph1">&lt;xref:System.Xml.XmlReader.SkipAsync%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>The following example parses an XML file starting on the second book node.</source>
          <target state="translated">下列範例會剖析 XML 檔案的第二個書籍節點上啟動。</target>       </trans-unit>
        <trans-unit id="2269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.Skip">
          <source>The example uses the file, <ph id="ph1">`2books.xml`</ph>, as input.</source>
          <target state="translated">此範例會使用該檔案，<ph id="ph1">`2books.xml`</ph>作為輸入。</target>       </trans-unit>
        <trans-unit id="2270" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Skip">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2271" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.Skip">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="2272" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.SkipAsync">
          <source>Asynchronously skips the children of the current node.</source>
          <target state="translated">以非同步的方式略過目前節點的子節點。</target>       </trans-unit>
        <trans-unit id="2273" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.SkipAsync">
          <source>The current node.</source>
          <target state="translated">目前節點。</target>       </trans-unit>
        <trans-unit id="2274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.SkipAsync">
          <source>This is the asynchronous version of <ph id="ph1">&lt;xref:System.Xml.XmlReader.Skip%2A&gt;</ph>, with the same functionality.</source>
          <target state="translated">這是非同步版本<ph id="ph1">&lt;xref:System.Xml.XmlReader.Skip%2A&gt;</ph>，使用相同的功能。</target>       </trans-unit>
        <trans-unit id="2275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlReader.SkipAsync">
          <source>To use this method, you must set the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">若要使用此方法，您必須設定<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph>旗標設為<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="2276" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.SkipAsync">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> asynchronous method was called without setting the <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> flag to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">在未將 <ph id="ph2">&lt;see cref="P:System.Xml.XmlReaderSettings.Async" /&gt;</ph> 旗標設為 <ph id="ph3">&lt;see langword="true" /&gt;</ph>的情況下呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 非同步方法。</target>       </trans-unit>
        <trans-unit id="2277" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlReader.SkipAsync">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</target>       </trans-unit>
        <trans-unit id="2278" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Value">
          <source>When overridden in a derived class, gets the text value of the current node.</source>
          <target state="translated">在衍生類別中覆寫時，取得目前節點的文字值。</target>       </trans-unit>
        <trans-unit id="2279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source>The value returned depends on the <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph> of the node.</source>
          <target state="translated">傳回值需視節點的 <ph id="ph1">&lt;see cref="P:System.Xml.XmlReader.NodeType" /&gt;</ph> 而定。</target>       </trans-unit>
        <trans-unit id="2280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source>The following table lists node types that have a value to return.</source>
          <target state="translated">下表列出具有傳回值的節點類型。</target>       </trans-unit>
        <trans-unit id="2281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source>All other node types return <ph id="ph1">&lt;see langword="String.Empty" /&gt;</ph>.</source>
          <target state="translated">有其他節點類型都會傳回 <ph id="ph1">&lt;see langword="String.Empty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Node type</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 節點類型</target>       </trans-unit>
        <trans-unit id="2283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 值</target>       </trans-unit>
        <trans-unit id="2284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Attribute" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The value of the attribute.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Attribute" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 屬性的值。</target>       </trans-unit>
        <trans-unit id="2285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="CDATA" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The content of the CDATA section.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="CDATA" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> CDATA 區段的內容。</target>       </trans-unit>
        <trans-unit id="2286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Comment" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The content of the comment.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Comment" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 註解的內容。</target>       </trans-unit>
        <trans-unit id="2287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="DocumentType" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The internal subset.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="DocumentType" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 內部子集。</target>       </trans-unit>
        <trans-unit id="2288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="ProcessingInstruction" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The entire content, excluding the target.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="ProcessingInstruction" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 整個內容 （目標除外）。</target>       </trans-unit>
        <trans-unit id="2289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="SignificantWhitespace" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The white space between markup in a mixed content model.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="SignificantWhitespace" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 混合內容模型中標記間的泛空白字元。</target>       </trans-unit>
        <trans-unit id="2290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Text" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The content of the text node.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Text" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 文字節點的內容。</target>       </trans-unit>
        <trans-unit id="2291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Whitespace" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The white space between markup.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="Whitespace" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 標記之間的泛空白字元。</target>       </trans-unit>
        <trans-unit id="2292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="XmlDeclaration" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> The content of the declaration.</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><bpt id="p1">&lt;term&gt;</bpt><ph id="ph4">&lt;see langword="XmlDeclaration" /&gt;</ph><ept id="p1">&lt;/term&gt;</ept><ph id="ph5">&lt;description&gt;</ph> 宣告的內容。</target>       </trans-unit>
        <trans-unit id="2293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source>For the asynchronous version of this property, see the <ph id="ph1">&lt;xref:System.Xml.XmlReader.GetValueAsync%2A&gt;</ph> method.</source>
          <target state="translated">這個屬性的非同步版本，請參閱<ph id="ph1">&lt;xref:System.Xml.XmlReader.GetValueAsync%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="2294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source>The following example reads an XML file and displays each of the nodes.</source>
          <target state="translated">下列範例會讀取 XML 檔案，並顯示每個節點。</target>       </trans-unit>
        <trans-unit id="2295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.Value">
          <source>The sample uses the <ph id="ph1">`items.xml`</ph> file.</source>
          <target state="translated">此範例會使用<ph id="ph1">`items.xml`</ph>檔案。</target>       </trans-unit>
        <trans-unit id="2296" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Value">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2297" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.Value">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="2298" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.ValueType">
          <source>Gets The Common Language Runtime (CLR) type for the current node.</source>
          <target state="translated">取得目前節點的 Common Language Runtime (CLR) 類型。</target>       </trans-unit>
        <trans-unit id="2299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.ValueType">
          <source>The CLR type that corresponds to the typed value of the node.</source>
          <target state="translated">CLR 類型，對應至節點的具類型值。</target>       </trans-unit>
        <trans-unit id="2300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.ValueType">
          <source>The default is <ph id="ph1">&lt;see langword="System.String" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.ValueType">
          <source>See <bpt id="p1">[</bpt>Type Support in the System.Xml Classes<ept id="p1">](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)</ept> for a list of the default mappings.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>System.Xml 類別中的型別支援<ept id="p1">](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)</ept>如需預設對應的清單。</target>       </trans-unit>
        <trans-unit id="2302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.ValueType">
          <source>An element of type <ph id="ph1">`xs:int`</ph> has a <ph id="ph2">`ValueType`</ph> of <ph id="ph3">`System.Int32`</ph> by default.</source>
          <target state="translated">類型的元素<ph id="ph1">`xs:int`</ph>具有<ph id="ph2">`ValueType`</ph>的<ph id="ph3">`System.Int32`</ph>預設。</target>       </trans-unit>
        <trans-unit id="2303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.ValueType">
          <source>However, the <ph id="ph1">`ValueType`</ph> could be one of the valid types that can be mapped to <ph id="ph2">`xs:int`</ph>, such as <ph id="ph3">`System.Int16`</ph> or <ph id="ph4">`System.Double`</ph>.</source>
          <target state="translated">不過，<ph id="ph1">`ValueType`</ph>可能是其中一個有效的類型可以對應至<ph id="ph2">`xs:int`</ph>，例如<ph id="ph3">`System.Int16`</ph>或<ph id="ph4">`System.Double`</ph>。</target>       </trans-unit>
        <trans-unit id="2304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.ValueType">
          <source>If a node is un-typed, or if the node is an element that contains mixed content, the node value is mapped to the <ph id="ph1">`System.String`</ph> type.</source>
          <target state="translated">如果節點是不具型別，或該節點是包含混合的內容的項目，如果節點值會對應到<ph id="ph1">`System.String`</ph>型別。</target>       </trans-unit>
        <trans-unit id="2305" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.ValueType">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2306" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.ValueType">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="2307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.ValueType">
          <source>Implementers must provide a <ph id="ph1">&lt;see langword="ValueType" /&gt;</ph> for every node, even if it is only the <ph id="ph2">&lt;see langword="System.String" /&gt;</ph> type.</source>
          <target state="translated">實作者必須提供<ph id="ph1">&lt;see langword="ValueType" /&gt;</ph>每個節點，即使它是只<ph id="ph2">&lt;see langword="System.String" /&gt;</ph>型別。</target>       </trans-unit>
        <trans-unit id="2308" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.XmlLang">
          <source>When overridden in a derived class, gets the current <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> scope.</source>
          <target state="translated">當在衍生類別中覆寫時，取得目前<ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph>範圍。</target>       </trans-unit>
        <trans-unit id="2309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.XmlLang">
          <source>The current <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> scope.</source>
          <target state="translated">目前的 <ph id="ph1">&lt;see langword="xml:lang" /&gt;</ph> 範圍。</target>       </trans-unit>
        <trans-unit id="2310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.XmlLang">
          <source>This property represents the <ph id="ph1">`xml:lang`</ph> scope within which the current node resides.</source>
          <target state="translated">這個屬性代表<ph id="ph1">`xml:lang`</ph>內目前的節點所在的範圍。</target>       </trans-unit>
        <trans-unit id="2311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.XmlLang">
          <source>For example, here is an XML fragment with <ph id="ph1">`xml:lang`</ph> set to US English in the root element:</source>
          <target state="translated">例如，以下是使用 XML 片段<ph id="ph1">`xml:lang`</ph>根項目設定為 英文 （美國）：</target>       </trans-unit>
        <trans-unit id="2312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.XmlLang">
          <source>When the reader is positioned on the <ph id="ph1">`name`</ph> element, you can use this property to find that it is in the scope of a US English <ph id="ph2">`xml:lang`</ph> attribute.</source>
          <target state="translated">當讀取器位於<ph id="ph1">`name`</ph>項目，您可以使用這個屬性來尋找它位於範圍內的美式英文<ph id="ph2">`xml:lang`</ph>屬性。</target>       </trans-unit>
        <trans-unit id="2313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.XmlLang">
          <source>See <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.XmlLang%2A?displayProperty=nameWithType&gt;</ph> for an example of using this property.</source>
          <target state="translated">請參閱<ph id="ph1">&lt;xref:System.Xml.XmlTextReader.XmlLang%2A?displayProperty=nameWithType&gt;</ph>如需使用此屬性的範例。</target>       </trans-unit>
        <trans-unit id="2314" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.XmlLang">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2315" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.XmlLang">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
        <trans-unit id="2316" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.XmlSpace">
          <source>When overridden in a derived class, gets the current <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> scope.</source>
          <target state="translated">當在衍生類別中覆寫時，取得目前<ph id="ph1">&lt;see langword="xml:space" /&gt;</ph>範圍。</target>       </trans-unit>
        <trans-unit id="2317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.XmlSpace">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlSpace" /&gt;</ph> values.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Xml.XmlSpace" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="2318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.XmlSpace">
          <source>If no <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> scope exists, this property defaults to <ph id="ph2">&lt;see langword="XmlSpace.None" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="xml:space" /&gt;</ph> 範圍不存在，這個屬性預設值為 <ph id="ph2">&lt;see langword="XmlSpace.None" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="2319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlReader.XmlSpace">
          <source>See <ph id="ph1">&lt;xref:System.Xml.XmlTextReader.XmlSpace%2A&gt;</ph> (in the <ph id="ph2">`XmlTextReader`</ph> class) for an example using this property.</source>
          <target state="translated">請參閱<ph id="ph1">&lt;xref:System.Xml.XmlTextReader.XmlSpace%2A&gt;</ph>(在<ph id="ph2">`XmlTextReader`</ph>類別) 如需使用這個屬性的範例。</target>       </trans-unit>
        <trans-unit id="2320" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.XmlSpace">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> method was called before a previous asynchronous operation finished.</source>
          <target state="translated">在先前的非同步作業完成前呼叫了 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="2321" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlReader.XmlSpace">
          <source>In this case, <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown with the message "An asynchronous operation is already in progress."</source>
          <target state="translated">在此情況下，會擲回 <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> 與「非同步作業已經在進行中」的訊息。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>