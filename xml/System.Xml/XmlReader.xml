<Type Name="XmlReader" FullName="System.Xml.XmlReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7a247d2896ea3528404d0f1bb04ecb2c3a4bb676" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37485439" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class XmlReader : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlReader extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlReader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlReader&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlReader abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type XmlReader = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{debuggerDisplayProxy}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{debuggerDisplayProxy}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3aee5-101">表示提供快速、非快取、順向 (Forward-only) 存取 XML 資料的讀取器 (Reader)。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3aee5-101">Represents a reader that provides fast, noncached, forward-only access to XML data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-102"><xref:System.Xml.XmlReader> 提供順向、 唯讀存取文件或資料流中的 XML 資料。</span><span class="sxs-lookup"><span data-stu-id="3aee5-102"><xref:System.Xml.XmlReader> provides forward-only, read-only access to XML data in a document or stream.</span></span> <span data-ttu-id="3aee5-103">此類別符合 W3C[可延伸標記語言 (XML) 1.0 （第四版）](https://www.w3.org/TR/2006/REC-xml-20060816/)並[Namespaces in XML 1.0 （第三個版本）](https://www.w3.org/TR/REC-xml-names/)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-103">This class conforms to the W3C [Extensible Markup Language (XML) 1.0 (fourth edition)](https://www.w3.org/TR/2006/REC-xml-20060816/) and the [Namespaces in XML 1.0 (third edition)](https://www.w3.org/TR/REC-xml-names/) recommendations.</span></span>  
  
 <span data-ttu-id="3aee5-104"><xref:System.Xml.XmlReader> 方法可讓您透過 XML 資料移動，並讀取節點的內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-104"><xref:System.Xml.XmlReader> methods let you move through XML data and read the contents of a node.</span></span> <span data-ttu-id="3aee5-105">此類別的屬性會反映目前的節點，也就是將讀取器置於其中的值。<xref:System.Xml.XmlReader.ReadState%2A>屬性值表示 XML 讀取器的目前狀態。</span><span class="sxs-lookup"><span data-stu-id="3aee5-105">The properties of the class reflect the value of the current node, which is where the reader is positioned.The <xref:System.Xml.XmlReader.ReadState%2A> property value indicates the current state of the XML reader.</span></span> <span data-ttu-id="3aee5-106">比方說，此屬性設為<xref:System.Xml.ReadState.Initial?displayProperty=nameWithType>所<xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType>方法並<xref:System.Xml.ReadState.Closed?displayProperty=nameWithType>由<xref:System.Xml.XmlReader.Close%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-106">For example, the property is set to <xref:System.Xml.ReadState.Initial?displayProperty=nameWithType> by the <xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType> method and <xref:System.Xml.ReadState.Closed?displayProperty=nameWithType> by the <xref:System.Xml.XmlReader.Close%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="3aee5-107"><xref:System.Xml.XmlReader> 也提供的資料一致性檢查和針對 DTD 或結構描述進行驗證。</span><span class="sxs-lookup"><span data-stu-id="3aee5-107"><xref:System.Xml.XmlReader> also provides data conformance checks and validation against a DTD or schema.</span></span>  
  
 <span data-ttu-id="3aee5-108"><xref:System.Xml.XmlReader> 您可以使用提取模型來擷取資料。</span><span class="sxs-lookup"><span data-stu-id="3aee5-108"><xref:System.Xml.XmlReader> uses a pull model to retrieve data.</span></span> <span data-ttu-id="3aee5-109">此模型中：</span><span class="sxs-lookup"><span data-stu-id="3aee5-109">This model:</span></span>  
  
-   <span data-ttu-id="3aee5-110">狀態管理簡化自然、 上下程序的精緻化。</span><span class="sxs-lookup"><span data-stu-id="3aee5-110">Simplifies state management by a natural, top-down procedural refinement.</span></span>  
  
-   <span data-ttu-id="3aee5-111">支援多個輸入資料流和分層。</span><span class="sxs-lookup"><span data-stu-id="3aee5-111">Supports multiple input streams and layering.</span></span>  
  
-   <span data-ttu-id="3aee5-112">可讓用戶端給予剖析器到其中的字串會直接寫入，並因此會避免額外的字串複本的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="3aee5-112">Enables the client to give the parser a buffer into which the string is directly written, and thus avoids the necessity of an extra string copy.</span></span>  
  
-   <span data-ttu-id="3aee5-113">支援選擇性處理程序。</span><span class="sxs-lookup"><span data-stu-id="3aee5-113">Supports selective processing.</span></span> <span data-ttu-id="3aee5-114">用戶端可以略過項目，並處理這些感興趣的應用程式。</span><span class="sxs-lookup"><span data-stu-id="3aee5-114">The client can skip items and process those that are of interest to the application.</span></span> <span data-ttu-id="3aee5-115">您也可以設定屬性，以管理 XML 資料流 （例如正規化） 的處理方式。</span><span class="sxs-lookup"><span data-stu-id="3aee5-115">You can also set properties in advance to manage how the XML stream is processed (for example, normalization).</span></span>  
  
 <span data-ttu-id="3aee5-116">本節內容：</span><span class="sxs-lookup"><span data-stu-id="3aee5-116">In this section:</span></span>  
  
 <span data-ttu-id="3aee5-117">[建立 XML 讀取器](#xmlreader_create) </span><span class="sxs-lookup"><span data-stu-id="3aee5-117">[Creating an XML reader](#xmlreader_create) </span></span>  
 <span data-ttu-id="3aee5-118">[驗證 XML 資料](#xmlreader_validate) </span><span class="sxs-lookup"><span data-stu-id="3aee5-118">[Validating XML data](#xmlreader_validate) </span></span>  
 <span data-ttu-id="3aee5-119">[資料一致性](#xmlreader_data) </span><span class="sxs-lookup"><span data-stu-id="3aee5-119">[Data conformance](#xmlreader_data) </span></span>  
 <span data-ttu-id="3aee5-120">[瀏覽節點](#xmlreader_nodes) </span><span class="sxs-lookup"><span data-stu-id="3aee5-120">[Navigating through nodes](#xmlreader_nodes) </span></span>  
 <span data-ttu-id="3aee5-121">[讀取 XML 項目](#xmlreader_elements) </span><span class="sxs-lookup"><span data-stu-id="3aee5-121">[Reading XML elements](#xmlreader_elements) </span></span>  
 <span data-ttu-id="3aee5-122">[讀取 XML 屬性](#xmlreader_attributes) </span><span class="sxs-lookup"><span data-stu-id="3aee5-122">[Reading XML attributes](#xmlreader_attributes) </span></span>  
 <span data-ttu-id="3aee5-123">[讀取 XML 內容](#xmlreader_content) </span><span class="sxs-lookup"><span data-stu-id="3aee5-123">[Reading XML content](#xmlreader_content) </span></span>  
 <span data-ttu-id="3aee5-124">[將轉換成 CLR 類型](#xmlreader_clr) </span><span class="sxs-lookup"><span data-stu-id="3aee5-124">[Converting to CLR types](#xmlreader_clr) </span></span>  
 <span data-ttu-id="3aee5-125">[非同步程式設計](#xmlreader_async) </span><span class="sxs-lookup"><span data-stu-id="3aee5-125">[Asynchronous programming](#xmlreader_async) </span></span>  
 [<span data-ttu-id="3aee5-126">安全性考量</span><span class="sxs-lookup"><span data-stu-id="3aee5-126">Security considerations</span></span>](#xmlreader_security)  
  
<a name="xmlreader_create"></a>   
## <a name="creating-an-xml-reader"></a><span data-ttu-id="3aee5-127">建立 XML 讀取器</span><span class="sxs-lookup"><span data-stu-id="3aee5-127">Creating an XML reader</span></span>  
 <span data-ttu-id="3aee5-128">使用<xref:System.Xml.XmlReader.Create%2A>方法用來建立<xref:System.Xml.XmlReader>執行個體。</span><span class="sxs-lookup"><span data-stu-id="3aee5-128">Use the <xref:System.Xml.XmlReader.Create%2A> method to create an <xref:System.Xml.XmlReader> instance.</span></span>  
  
 <span data-ttu-id="3aee5-129">雖然.NET Framework 提供的具體實作<xref:System.Xml.XmlReader>類別，例如<xref:System.Xml.XmlTextReader>， <xref:System.Xml.XmlNodeReader>，和<xref:System.Xml.XmlValidatingReader>類別，我們建議您只有在這些情況下，使用特定的類別：</span><span class="sxs-lookup"><span data-stu-id="3aee5-129">Although the .NET Framework provides concrete implementations of the <xref:System.Xml.XmlReader> class, such as the <xref:System.Xml.XmlTextReader>, <xref:System.Xml.XmlNodeReader>, and the <xref:System.Xml.XmlValidatingReader> classes, we recommend that you use the specialized classes only in these scenarios:</span></span>  
  
-   <span data-ttu-id="3aee5-130">當您想要讀取從 XML DOM 樹狀子目錄<xref:System.Xml.XmlNode>物件，請使用<xref:System.Xml.XmlNodeReader>類別。</span><span class="sxs-lookup"><span data-stu-id="3aee5-130">When you want to read an XML DOM subtree from an <xref:System.Xml.XmlNode> object, use the <xref:System.Xml.XmlNodeReader> class.</span></span> <span data-ttu-id="3aee5-131">（不過，此類別不支援 DTD 或結構描述驗證。）</span><span class="sxs-lookup"><span data-stu-id="3aee5-131">(However, this class doesn't support DTD or schema validation.)</span></span>  
  
-   <span data-ttu-id="3aee5-132">如果您必須展開要求的實體，您不想將文字內容正規化，或您不想預設傳回的屬性，請使用<xref:System.Xml.XmlTextReader>類別。</span><span class="sxs-lookup"><span data-stu-id="3aee5-132">If you must expand entities on request, you don't want your text content normalized, or you don't want default attributes returned, use the <xref:System.Xml.XmlTextReader> class.</span></span>  
  
 <span data-ttu-id="3aee5-133">若要指定您想要的 XML 讀取器上啟用的功能集，請傳遞<xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType>物件至<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-133">To specify the set of features you want to enable on the XML reader, pass an <xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType> object to the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="3aee5-134">您可以使用單一<xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType>要使用相同的功能，建立多個讀取器的物件，或修改<xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType>物件來建立新的讀取器與一組不同的功能。</span><span class="sxs-lookup"><span data-stu-id="3aee5-134">You can use a single <xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType> object to create multiple readers with the same functionality, or modify the <xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType> object to create a new reader with a different set of features.</span></span> <span data-ttu-id="3aee5-135">此外，您也很容易可以將功能加入至現有讀取器。</span><span class="sxs-lookup"><span data-stu-id="3aee5-135">You can also easily add features to an existing reader.</span></span>  
  
 <span data-ttu-id="3aee5-136">如果您未使用<xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType>物件時，會使用預設設定。</span><span class="sxs-lookup"><span data-stu-id="3aee5-136">If you don't use a <xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType> object, default settings are used.</span></span> <span data-ttu-id="3aee5-137">請參閱<xref:System.Xml.XmlReader.Create%2A>參考頁面，如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="3aee5-137">See the <xref:System.Xml.XmlReader.Create%2A> reference page for details.</span></span>  
  
 <span data-ttu-id="3aee5-138"><xref:System.Xml.XmlReader> 會擲回<xref:System.Xml.XmlException>xml 剖析錯誤。</span><span class="sxs-lookup"><span data-stu-id="3aee5-138"><xref:System.Xml.XmlReader> throws an <xref:System.Xml.XmlException> on XML parse errors.</span></span> <span data-ttu-id="3aee5-139">擲回例外狀況之後，讀取器的狀態不是可預測的。</span><span class="sxs-lookup"><span data-stu-id="3aee5-139">After an exception is thrown, the state of the reader is not predictable.</span></span> <span data-ttu-id="3aee5-140">例如，回報的節點型別可能不同於目前節點的實際節點型別。</span><span class="sxs-lookup"><span data-stu-id="3aee5-140">For example, the reported node type may be different from the actual node type of the current node.</span></span> <span data-ttu-id="3aee5-141">使用<xref:System.Xml.XmlReader.ReadState%2A>檢查讀取器是否處於錯誤狀態的屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-141">Use the <xref:System.Xml.XmlReader.ReadState%2A> property to check whether the reader is in error state.</span></span>  
  
<a name="xmlreader_validate"></a>   
## <a name="validating-xml-data"></a><span data-ttu-id="3aee5-142">驗證 XML 資料</span><span class="sxs-lookup"><span data-stu-id="3aee5-142">Validating XML data</span></span>  
 <span data-ttu-id="3aee5-143">若要定義 XML 文件和其項目關聯性、 資料類型及內容條件約束的結構，您可以使用文件類型定義 (DTD) 或 XML 結構描述定義語言 (XSD) 結構描述。</span><span class="sxs-lookup"><span data-stu-id="3aee5-143">To define the structure of an XML document and its element relationships, data types, and content constraints, you use a document type definition (DTD) or XML Schema definition language (XSD) schema.</span></span> <span data-ttu-id="3aee5-144">XML 文件會被視為格式正確符合所定義的所有句法要求時，才[W3C XML 1.0 建議事項](https://www.w3.org/TR/2006/REC-xml-20060816/)。</span><span class="sxs-lookup"><span data-stu-id="3aee5-144">An XML document is considered to be well formed if it meets all the syntactical requirements defined by the [W3C XML 1.0 Recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/).</span></span> <span data-ttu-id="3aee5-145">如果它的格式正確，而且符合其 DTD 或結構描述所定義的條件約束，則被視為有效。</span><span class="sxs-lookup"><span data-stu-id="3aee5-145">It's considered valid if it's well formed and also conforms to the constraints defined by its DTD or schema.</span></span> <span data-ttu-id="3aee5-146">(請參閱[W3C XML 結構描述第 1 部分： 結構](https://www.w3.org/TR/xmlschema-1/)並[W3C XML 結構描述第 2 部分： 資料型別](https://www.w3.org/TR/xmlschema-2/)建議。)因此，雖然所有有效 XML 文件的格式都正確，但是並非所有格式正確的 XML 文件都有效。</span><span class="sxs-lookup"><span data-stu-id="3aee5-146">(See the [W3C XML Schema Part 1: Structures](https://www.w3.org/TR/xmlschema-1/) and the [W3C XML Schema Part 2: Datatypes](https://www.w3.org/TR/xmlschema-2/)recommendations.) Therefore, although all valid XML documents are well formed, not all well-formed XML documents are valid.</span></span>  
  
 <span data-ttu-id="3aee5-147">您可以針對驗證資料 DTD 中，內嵌 XSD 結構描述，或 XSD 結構描述儲存在<xref:System.Xml.Schema.XmlSchemaSet>物件 （快取）; 將說明這些情況在<xref:System.Xml.XmlReader.Create%2A>參考頁面。</span><span class="sxs-lookup"><span data-stu-id="3aee5-147">You can validate the data against a DTD, an inline XSD Schema, or an XSD Schema stored in an <xref:System.Xml.Schema.XmlSchemaSet> object (a cache); these scenarios are described on the <xref:System.Xml.XmlReader.Create%2A> reference page.</span></span> <span data-ttu-id="3aee5-148"><xref:System.Xml.XmlReader> 不支援 XML 資料精簡 (XDR) 結構描述驗證。</span><span class="sxs-lookup"><span data-stu-id="3aee5-148"><xref:System.Xml.XmlReader> doesn't support XML-Data Reduced (XDR) schema validation.</span></span>  
  
 <span data-ttu-id="3aee5-149">您可以使用下列設定上<xref:System.Xml.XmlReaderSettings>類別，以指定哪一種驗證，如果有的話，<xref:System.Xml.XmlReader>執行個體可支援。</span><span class="sxs-lookup"><span data-stu-id="3aee5-149">You use the following settings on the <xref:System.Xml.XmlReaderSettings> class to specify what type of validation, if any, the <xref:System.Xml.XmlReader> instance supports.</span></span>  
  
|<span data-ttu-id="3aee5-150">使用此<xref:System.Xml.XmlReaderSettings>成員</span><span class="sxs-lookup"><span data-stu-id="3aee5-150">Use this <xref:System.Xml.XmlReaderSettings> member</span></span>|<span data-ttu-id="3aee5-151">若要指定</span><span class="sxs-lookup"><span data-stu-id="3aee5-151">To specify</span></span>|  
|-----------------------------------------------------------------------------------------------------------------------------------------------------------|----------------|  
|<span data-ttu-id="3aee5-152"><xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> 屬性</span><span class="sxs-lookup"><span data-stu-id="3aee5-152"><xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> property</span></span>|<span data-ttu-id="3aee5-153">是否允許 DTD 處理。</span><span class="sxs-lookup"><span data-stu-id="3aee5-153">Whether to allow DTD processing.</span></span> <span data-ttu-id="3aee5-154">預設不允許 DTD 處理。</span><span class="sxs-lookup"><span data-stu-id="3aee5-154">The default is to disallow DTD processing.</span></span>|  
|<span data-ttu-id="3aee5-155"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> 屬性</span><span class="sxs-lookup"><span data-stu-id="3aee5-155"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> property</span></span>|<span data-ttu-id="3aee5-156">讀取器是否應該驗證資料，以及要執行 （DTD 或結構描述） 的驗證型別。</span><span class="sxs-lookup"><span data-stu-id="3aee5-156">Whether the reader should validate data, and what type of validation to perform (DTD or schema).</span></span> <span data-ttu-id="3aee5-157">預設不進行資料驗證。</span><span class="sxs-lookup"><span data-stu-id="3aee5-157">The default is no data validation.</span></span>|  
|<span data-ttu-id="3aee5-158"><xref:System.Xml.XmlReaderSettings.ValidationEventHandler> 事件</span><span class="sxs-lookup"><span data-stu-id="3aee5-158"><xref:System.Xml.XmlReaderSettings.ValidationEventHandler> event</span></span>|<span data-ttu-id="3aee5-159">事件處理常式接收驗證事件的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="3aee5-159">An event handler for receiving information about validation events.</span></span> <span data-ttu-id="3aee5-160">如果未提供事件處理常式，會在第一次發生驗證錯誤時擲回 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-160">If an event handler is not provided, an <xref:System.Xml.XmlException> is thrown on the first validation error.</span></span>|  
|<span data-ttu-id="3aee5-161"><xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> 屬性</span><span class="sxs-lookup"><span data-stu-id="3aee5-161"><xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> property</span></span>|<span data-ttu-id="3aee5-162">其他驗證選項，透過<xref:System.Xml.Schema.XmlSchemaValidationFlags>列舉成員：</span><span class="sxs-lookup"><span data-stu-id="3aee5-162">Additional validation options through the <xref:System.Xml.Schema.XmlSchemaValidationFlags> enumeration members:</span></span><br /><br /> <span data-ttu-id="3aee5-163">-   `AllowXmlAttributes`-允許 XML 屬性 (`xml:*`) 即使未定義結構描述中的執行個體文件中。</span><span class="sxs-lookup"><span data-stu-id="3aee5-163">-   `AllowXmlAttributes`-- Allow XML attributes (`xml:*`) in instance documents even when they're not defined in the schema.</span></span> <span data-ttu-id="3aee5-164">會根據屬性的資料型別來驗證該屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-164">The attributes are validated based on their data type.</span></span> <span data-ttu-id="3aee5-165">請參閱<xref:System.Xml.Schema.XmlSchemaValidationFlags>設定在特定案例中使用的參考頁面。</span><span class="sxs-lookup"><span data-stu-id="3aee5-165">See the <xref:System.Xml.Schema.XmlSchemaValidationFlags> reference page for  the setting to use in specific scenarios.</span></span> <span data-ttu-id="3aee5-166">（預設為停用。）</span><span class="sxs-lookup"><span data-stu-id="3aee5-166">(Disabled by default.)</span></span><br /><span data-ttu-id="3aee5-167">-   `ProcessIdentityConstraints` -處理識別條件約束 (`xs:ID`， `xs:IDREF`， `xs:key`， `xs:keyref`， `xs:unique`) 在驗證期間發生。</span><span class="sxs-lookup"><span data-stu-id="3aee5-167">-   `ProcessIdentityConstraints` --Process identity constraints (`xs:ID`, `xs:IDREF`, `xs:key`, `xs:keyref`, `xs:unique`) encountered during validation.</span></span> <span data-ttu-id="3aee5-168">（依預設啟用）。</span><span class="sxs-lookup"><span data-stu-id="3aee5-168">(Enabled by default.)</span></span><br /><span data-ttu-id="3aee5-169">-   `ProcessSchemaLocation` -處理所指定的結構描述`xsi:schemaLocation`或`xsi:noNamespaceSchemaLocation`屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-169">-   `ProcessSchemaLocation` --Process schemas specified by the `xsi:schemaLocation` or `xsi:noNamespaceSchemaLocation` attribute.</span></span> <span data-ttu-id="3aee5-170">（依預設啟用）。</span><span class="sxs-lookup"><span data-stu-id="3aee5-170">(Enabled by default.)</span></span><br /><span data-ttu-id="3aee5-171">-   `ProcessInlineSchema`-處理驗證期間的內嵌 XML 結構描述。</span><span class="sxs-lookup"><span data-stu-id="3aee5-171">-   `ProcessInlineSchema`-- Process inline XML Schemas during validation.</span></span> <span data-ttu-id="3aee5-172">（預設為停用。）</span><span class="sxs-lookup"><span data-stu-id="3aee5-172">(Disabled by default.)</span></span><br /><span data-ttu-id="3aee5-173">-   `ReportValidationWarnings`-如果發生驗證警告時，報告事件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-173">-   `ReportValidationWarnings`--Report events if a validation warning occurs.</span></span> <span data-ttu-id="3aee5-174">在沒有可以用於驗證特定項目或屬性的 DTD 或 XML 結構描述時，通常會發出警告。</span><span class="sxs-lookup"><span data-stu-id="3aee5-174">A warning is typically issued when there is no DTD or XML Schema to validate a particular element or attribute against.</span></span> <span data-ttu-id="3aee5-175">會使用 <xref:System.Xml.XmlReaderSettings.ValidationEventHandler> 來進行通知。</span><span class="sxs-lookup"><span data-stu-id="3aee5-175">The <xref:System.Xml.XmlReaderSettings.ValidationEventHandler> is used for notification.</span></span> <span data-ttu-id="3aee5-176">（預設為停用。）</span><span class="sxs-lookup"><span data-stu-id="3aee5-176">(Disabled by default.)</span></span>|  
|<xref:System.Xml.XmlReaderSettings.Schemas%2A>|<span data-ttu-id="3aee5-177">用來驗證的 <xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-177">The <xref:System.Xml.Schema.XmlSchemaSet> to use for validation.</span></span>|  
|<span data-ttu-id="3aee5-178"><xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 屬性</span><span class="sxs-lookup"><span data-stu-id="3aee5-178"><xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property</span></span>|<span data-ttu-id="3aee5-179"><xref:System.Xml.XmlResolver>解析及存取外部資源。</span><span class="sxs-lookup"><span data-stu-id="3aee5-179">The <xref:System.Xml.XmlResolver> for resolving and accessing external resources.</span></span> <span data-ttu-id="3aee5-180">這可以包括外部實體，例如 DTD 和結構描述，以及任何`xs:include`或`xs:import`XML 結構描述中包含的項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-180">This can include external entities such as DTD and schemas, and any `xs:include` or `xs:import` elements contained in the XML Schema.</span></span> <span data-ttu-id="3aee5-181">如果您未指定<xref:System.Xml.XmlResolver>，則<xref:System.Xml.XmlReader>使用的預設值<xref:System.Xml.XmlUrlResolver>與不具使用者認證。</span><span class="sxs-lookup"><span data-stu-id="3aee5-181">If you don't specify an <xref:System.Xml.XmlResolver>, the <xref:System.Xml.XmlReader> uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span>|  
  
<a name="xmlreader_data"></a>   
## <a name="data-conformance"></a><span data-ttu-id="3aee5-182">資料一致性</span><span class="sxs-lookup"><span data-stu-id="3aee5-182">Data conformance</span></span>  
 <span data-ttu-id="3aee5-183">所建立的 XML 讀取器<xref:System.Xml.XmlReader.Create%2A>方法符合下列的合規性需求的預設值：</span><span class="sxs-lookup"><span data-stu-id="3aee5-183">XML readers that are created by the <xref:System.Xml.XmlReader.Create%2A> method meet the following compliance requirements by default:</span></span>  
  
-   <span data-ttu-id="3aee5-184">新行和屬性值根據正規化 W3C [XML 1.0 建議事項](https://www.w3.org/TR/2006/REC-xml-20060816/)。</span><span class="sxs-lookup"><span data-stu-id="3aee5-184">New lines and attribute value are normalized according to the W3C [XML 1.0 Recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/).</span></span>  
  
-   <span data-ttu-id="3aee5-185">會自動展開所有實體。</span><span class="sxs-lookup"><span data-stu-id="3aee5-185">All entities are automatically expanded.</span></span>  
  
-   <span data-ttu-id="3aee5-186">即使在不會驗證讀取器時，會固定加入文件類型定義中宣告的預設屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-186">Default attributes declared in the document type definition are always added even when the reader doesn't validate.</span></span>  
  
-   <span data-ttu-id="3aee5-187">允許宣告對應至正確的 XML 命名空間 URI 的 XML 前置詞。</span><span class="sxs-lookup"><span data-stu-id="3aee5-187">Declaration of XML prefix mapped to the correct XML namespace URI is allowed.</span></span>  
  
-   <span data-ttu-id="3aee5-188">在單一標記法名稱`NotationType`屬性宣告並`NmTokens`在單一`Enumeration`屬性宣告就會不同。</span><span class="sxs-lookup"><span data-stu-id="3aee5-188">The notation names in a single `NotationType` attribute declaration and `NmTokens` in a single `Enumeration` attribute declaration are distinct.</span></span>  
  
 <span data-ttu-id="3aee5-189">使用這些<xref:System.Xml.XmlReaderSettings>屬性，以指定的一致性類型檢查您想要啟用：</span><span class="sxs-lookup"><span data-stu-id="3aee5-189">Use these <xref:System.Xml.XmlReaderSettings> properties to specify the type of conformance checks you want to enable:</span></span>  
  
|<span data-ttu-id="3aee5-190">使用此<xref:System.Xml.XmlReaderSettings>屬性</span><span class="sxs-lookup"><span data-stu-id="3aee5-190">Use this <xref:System.Xml.XmlReaderSettings> property</span></span>|<span data-ttu-id="3aee5-191">以</span><span class="sxs-lookup"><span data-stu-id="3aee5-191">To</span></span>|<span data-ttu-id="3aee5-192">預設</span><span class="sxs-lookup"><span data-stu-id="3aee5-192">Default</span></span>|  
|-------------------------------------------------------------------------------------------------------------------------------------------------------------|--------|-------------|  
|<span data-ttu-id="3aee5-193"><xref:System.Xml.XmlReaderSettings.CheckCharacters%2A> 屬性</span><span class="sxs-lookup"><span data-stu-id="3aee5-193"><xref:System.Xml.XmlReaderSettings.CheckCharacters%2A> property</span></span>|<span data-ttu-id="3aee5-194">啟用或停用檢查下列項目：</span><span class="sxs-lookup"><span data-stu-id="3aee5-194">Enable or disable checks for the following:</span></span><br /><br /> <span data-ttu-id="3aee5-195">字元是合法的 XML 字元的範圍內所定義[2.2 字元](https://www.w3.org/TR/2006/REC-xml-20060816/#charsets)W3C XML 1.0 建議事項一節。</span><span class="sxs-lookup"><span data-stu-id="3aee5-195">-   Characters are within the range of legal XML characters, as defined by the [2.2 Characters](https://www.w3.org/TR/2006/REC-xml-20060816/#charsets) section of the W3C XML 1.0 Recommendation.</span></span><br /><span data-ttu-id="3aee5-196">-所有的 XML 名稱是否有效，如同[2.3 Common Syntactic Constructs](https://www.w3.org/TR/2006/REC-xml-20060816/#NT-Name) W3C XML 1.0 建議事項一節。</span><span class="sxs-lookup"><span data-stu-id="3aee5-196">-   All XML names are valid, as defined by the [2.3 Common Syntactic Constructs](https://www.w3.org/TR/2006/REC-xml-20060816/#NT-Name) section of the W3C XML 1.0 Recommendation.</span></span><br /><br /> <span data-ttu-id="3aee5-197">當這個屬性設定為`true`（預設）、<xref:System.Xml.XmlException>擲回例外狀況是 XML 檔案包含不合法的字元或無效的 XML 名稱 （例如，項目名稱以數字開頭）。</span><span class="sxs-lookup"><span data-stu-id="3aee5-197">When this property is set to `true` (default), an <xref:System.Xml.XmlException> exception is thrown if the XML file contains illegal characters or invalid XML names (for example, an element name starts with a number).</span></span>|<span data-ttu-id="3aee5-198">字元且名稱檢查已啟用。</span><span class="sxs-lookup"><span data-stu-id="3aee5-198">Character and name checking is enabled.</span></span><br /><br /> <span data-ttu-id="3aee5-199">將 <xref:System.Xml.XmlReaderSettings.CheckCharacters%2A> 設為 `false` 會關閉字元實體參考的字元檢查。</span><span class="sxs-lookup"><span data-stu-id="3aee5-199">Setting <xref:System.Xml.XmlReaderSettings.CheckCharacters%2A> to `false` turns off character checking for character entity references.</span></span> <span data-ttu-id="3aee5-200">如果讀取器處理文字資料，它會始終檢查 XML 名稱是否有效，而不論此設定。</span><span class="sxs-lookup"><span data-stu-id="3aee5-200">If the reader is processing text data, it always checks that XML names are valid, regardless of this setting.</span></span> <span data-ttu-id="3aee5-201">**注意：** 存在 DTD 時，XML 1.0 版建議事項需要文件層級一致性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-201">**Note:**  The XML 1.0 recommendation requires document-level conformance when a DTD is present.</span></span> <span data-ttu-id="3aee5-202">因此，如果讀取器設定為支援<xref:System.Xml.ConformanceLevel.Fragment?displayProperty=nameWithType>，但 XML 資料包含文件類型定義 (DTD)，<xref:System.Xml.XmlException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="3aee5-202">Therefore, if the reader is configured to support <xref:System.Xml.ConformanceLevel.Fragment?displayProperty=nameWithType>, but the XML data contains a document type definition (DTD), an <xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="3aee5-203"><xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> 屬性</span><span class="sxs-lookup"><span data-stu-id="3aee5-203"><xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> property</span></span>|<span data-ttu-id="3aee5-204">選擇強制執行的一致性層級：</span><span class="sxs-lookup"><span data-stu-id="3aee5-204">Choose the level of conformance to enforce:</span></span><br /><br /> <span data-ttu-id="3aee5-205">-   <xref:System.Xml.ConformanceLevel.Document>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-205">-   <xref:System.Xml.ConformanceLevel.Document>.</span></span> <span data-ttu-id="3aee5-206">符合的規則[語式正確的 XML 1.0 文件](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-well-formed)。</span><span class="sxs-lookup"><span data-stu-id="3aee5-206">Conforms to the rules for a [well-formed XML 1.0 document](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-well-formed).</span></span><br /><span data-ttu-id="3aee5-207">-   <xref:System.Xml.ConformanceLevel.Fragment>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-207">-   <xref:System.Xml.ConformanceLevel.Fragment>.</span></span> <span data-ttu-id="3aee5-208">符合格式正確的文件片段做為可使用的規則[外部剖析實體](https://www.w3.org/TR/2006/REC-xml-20060816/#wf-entities)。</span><span class="sxs-lookup"><span data-stu-id="3aee5-208">Conforms to the rules for a well-formed document fragment that can be consumed as an [external parsed entity](https://www.w3.org/TR/2006/REC-xml-20060816/#wf-entities).</span></span><br /><span data-ttu-id="3aee5-209">-   <xref:System.Xml.ConformanceLevel.Auto>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-209">-   <xref:System.Xml.ConformanceLevel.Auto>.</span></span> <span data-ttu-id="3aee5-210">符合層級讀取器所決定。</span><span class="sxs-lookup"><span data-stu-id="3aee5-210">Conforms to the level decided by the reader.</span></span><br /><br /> <span data-ttu-id="3aee5-211">如果資料不一致，<xref:System.Xml.XmlException>擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3aee5-211">If the data isn't in conformance, an <xref:System.Xml.XmlException> exception is thrown.</span></span>|<xref:System.Xml.ConformanceLevel.Document>|  
  
<a name="xmlreader_nodes"></a>   
## <a name="navigating-through-nodes"></a><span data-ttu-id="3aee5-212">瀏覽節點</span><span class="sxs-lookup"><span data-stu-id="3aee5-212">Navigating through nodes</span></span>  
 <span data-ttu-id="3aee5-213">目前節點是 XML 讀取器目前所在的 XML 節點。</span><span class="sxs-lookup"><span data-stu-id="3aee5-213">The current node is the XML node on which the XML reader is currently positioned.</span></span> <span data-ttu-id="3aee5-214">所有<xref:System.Xml.XmlReader>方法會執行與這個節點及其所有相關的作業<xref:System.Xml.XmlReader>屬性會反映目前節點的值。</span><span class="sxs-lookup"><span data-stu-id="3aee5-214">All <xref:System.Xml.XmlReader> methods perform operations in relation to this node, and all <xref:System.Xml.XmlReader> properties reflect the value of the current node.</span></span>  
  
 <span data-ttu-id="3aee5-215">下列方法讓您輕鬆瀏覽節點和剖析資料。</span><span class="sxs-lookup"><span data-stu-id="3aee5-215">The following methods make it easy to navigate through nodes and parse data.</span></span>  
  
|<span data-ttu-id="3aee5-216">使用此<xref:System.Xml.XmlReaderSettings>方法</span><span class="sxs-lookup"><span data-stu-id="3aee5-216">Use this <xref:System.Xml.XmlReaderSettings> method</span></span>|<span data-ttu-id="3aee5-217">以</span><span class="sxs-lookup"><span data-stu-id="3aee5-217">To</span></span>|  
|-----------------------------------------------------------------------------------------------------------------------------------------------------------|--------|  
|<xref:System.Xml.XmlReader.Read%2A>|<span data-ttu-id="3aee5-218">讀取的第一個節點，並一次前進透過資料流的一個節點。</span><span class="sxs-lookup"><span data-stu-id="3aee5-218">Read the first node, and advance through the stream one node at a time.</span></span> <span data-ttu-id="3aee5-219">這類呼叫通常會執行內`while`迴圈。</span><span class="sxs-lookup"><span data-stu-id="3aee5-219">Such calls are typically performed inside a `while` loop.</span></span><br /><br /> <span data-ttu-id="3aee5-220">使用<xref:System.Xml.XmlReader.NodeType%2A>屬性來取得目前節點的類型 （例如屬性、 註解、 項目，等等）。</span><span class="sxs-lookup"><span data-stu-id="3aee5-220">Use the <xref:System.Xml.XmlReader.NodeType%2A> property to get the type (for example, attribute, comment, element, and so on) of the current node.</span></span>|  
|<xref:System.Xml.XmlReader.Skip%2A>|<span data-ttu-id="3aee5-221">略過目前節點的子系，並移至下一個節點。</span><span class="sxs-lookup"><span data-stu-id="3aee5-221">Skip the children of the current node and move to the next node.</span></span>|  
|<span data-ttu-id="3aee5-222"><xref:System.Xml.XmlReader.MoveToContent%2A> 和 <xref:System.Xml.XmlReader.MoveToContentAsync%2A></span><span class="sxs-lookup"><span data-stu-id="3aee5-222"><xref:System.Xml.XmlReader.MoveToContent%2A> and <xref:System.Xml.XmlReader.MoveToContentAsync%2A></span></span>|<span data-ttu-id="3aee5-223">略過非內容節點，並移至下一個內容節點或檔案結尾。</span><span class="sxs-lookup"><span data-stu-id="3aee5-223">Skip non-content nodes and move to the next content node or to the end of the file.</span></span><br /><br /> <span data-ttu-id="3aee5-224">非內容節點包含<xref:System.Xml.XmlNodeType.ProcessingInstruction>， <xref:System.Xml.XmlNodeType.DocumentType>， <xref:System.Xml.XmlNodeType.Comment>， <xref:System.Xml.XmlNodeType.Whitespace>，和<xref:System.Xml.XmlNodeType.SignificantWhitespace>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-224">Non-content nodes include <xref:System.Xml.XmlNodeType.ProcessingInstruction>, <xref:System.Xml.XmlNodeType.DocumentType>, <xref:System.Xml.XmlNodeType.Comment>, <xref:System.Xml.XmlNodeType.Whitespace>, and <xref:System.Xml.XmlNodeType.SignificantWhitespace>.</span></span><br /><br /> <span data-ttu-id="3aee5-225">內容節點包括非泛空白字元文字<xref:System.Xml.XmlNodeType.CDATA>， <xref:System.Xml.XmlNodeType.EntityReference> ，和<xref:System.Xml.XmlNodeType.EndEntity>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-225">Content nodes include non-white space text, <xref:System.Xml.XmlNodeType.CDATA>, <xref:System.Xml.XmlNodeType.EntityReference> , and <xref:System.Xml.XmlNodeType.EndEntity>.</span></span>|  
|<xref:System.Xml.XmlReader.ReadSubtree%2A>|<span data-ttu-id="3aee5-226">讀取項目和其所有子系，並傳回新<xref:System.Xml.XmlReader>設為執行個體<xref:System.Xml.ReadState.Initial?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-226">Read an element and all its children, and return a new <xref:System.Xml.XmlReader> instance set to <xref:System.Xml.ReadState.Initial?displayProperty=nameWithType>.</span></span><br /><br /> <span data-ttu-id="3aee5-227">這個方法可用於建立 XML 項目; 周圍的界限例如，如果您想要將資料傳遞至另一個元件進行處理，而且您想要限制您的資料中有多少可以存取元件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-227">This method is useful for creating boundaries around XML elements; for example, if you want to pass data to another component for processing and you want to limit how much of your data the component can access.</span></span>|  
  
 <span data-ttu-id="3aee5-228">請參閱<xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType>參考頁面巡覽的文字資料流的一個節點，一次，並顯示每個節點類型的範例。</span><span class="sxs-lookup"><span data-stu-id="3aee5-228">See the <xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType> reference page for an example of navigating through a text stream one node at a time and displaying the type of each node.</span></span>  
  
 <span data-ttu-id="3aee5-229">下列各節說明您可以讀取特定類型的資料，例如元素、 屬性的方式，並具型別資料。</span><span class="sxs-lookup"><span data-stu-id="3aee5-229">The following sections describe how you can read specific types of data, such as elements, attributes, and typed data.</span></span>  
  
<a name="xmlreader_elements"></a>   
## <a name="reading-xml-elements"></a><span data-ttu-id="3aee5-230">讀取 XML 項目</span><span class="sxs-lookup"><span data-stu-id="3aee5-230">Reading XML elements</span></span>  
 <span data-ttu-id="3aee5-231">下表列出的方法和屬性，<xref:System.Xml.XmlReader>類別提供用於處理項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-231">The following table lists the methods and properties that the <xref:System.Xml.XmlReader> class provides for processing elements.</span></span> <span data-ttu-id="3aee5-232">將 <xref:System.Xml.XmlReader> 定位於項目上後，節點屬性 (如 <xref:System.Xml.XmlReader.Name%2A>) 就會反映項目值。</span><span class="sxs-lookup"><span data-stu-id="3aee5-232">After the <xref:System.Xml.XmlReader> is positioned on an element, the node properties, such as <xref:System.Xml.XmlReader.Name%2A>, reflect the element values.</span></span> <span data-ttu-id="3aee5-233">除了下面說明的成員之外，還可以使用 <xref:System.Xml.XmlReader> 類別的任意一般方法及屬性來處理項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-233">In addition to the members described below, any of the general methods and properties of the <xref:System.Xml.XmlReader> class can also be used to process elements.</span></span> <span data-ttu-id="3aee5-234">例如，您可以使用 <xref:System.Xml.XmlReader.ReadInnerXml%2A> 方法讀取項目的內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-234">For example, you can use the <xref:System.Xml.XmlReader.ReadInnerXml%2A> method to read the contents of an element.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3aee5-235">請參閱第 3.1 節[W3C XML 1.0 建議事項](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-starttags)定義的開始標記、 結束標記與空項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-235">See section 3.1 of the [W3C XML 1.0 Recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-starttags) for definitions of start tags, end tags, and empty element tags.</span></span>  
  
|<span data-ttu-id="3aee5-236">使用此<xref:System.Xml.XmlReader>成員</span><span class="sxs-lookup"><span data-stu-id="3aee5-236">Use this <xref:System.Xml.XmlReader> member</span></span>|<span data-ttu-id="3aee5-237">以</span><span class="sxs-lookup"><span data-stu-id="3aee5-237">To</span></span>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------|--------|  
|<span data-ttu-id="3aee5-238"><xref:System.Xml.XmlReader.IsStartElement%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="3aee5-238"><xref:System.Xml.XmlReader.IsStartElement%2A> method</span></span>|<span data-ttu-id="3aee5-239">檢查目前節點是否開始標記或空白項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-239">Check if the current node is a start tag or an empty element tag.</span></span>|  
|<span data-ttu-id="3aee5-240"><xref:System.Xml.XmlReader.ReadStartElement%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="3aee5-240"><xref:System.Xml.XmlReader.ReadStartElement%2A> method</span></span>|<span data-ttu-id="3aee5-241">檢查目前節點是項目，並使讀取器前進至下一個節點 (呼叫<xref:System.Xml.XmlReader.IsStartElement%2A>後面接著<xref:System.Xml.XmlReader.Read%2A>)。</span><span class="sxs-lookup"><span data-stu-id="3aee5-241">Check that the current node is an element and advance the reader to the next node (calls <xref:System.Xml.XmlReader.IsStartElement%2A> followed by <xref:System.Xml.XmlReader.Read%2A>).</span></span>|  
|<span data-ttu-id="3aee5-242"><xref:System.Xml.XmlReader.ReadEndElement%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="3aee5-242"><xref:System.Xml.XmlReader.ReadEndElement%2A> method</span></span>|<span data-ttu-id="3aee5-243">檢查目前節點為結尾標記，並使讀取器前進至下一個節點。</span><span class="sxs-lookup"><span data-stu-id="3aee5-243">Check that the current node is an end tag and advance the reader to the next node.</span></span>|  
|<span data-ttu-id="3aee5-244"><xref:System.Xml.XmlReader.ReadElementString%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="3aee5-244"><xref:System.Xml.XmlReader.ReadElementString%2A> method</span></span>|<span data-ttu-id="3aee5-245">讀取純文字的項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-245">Read a text-only element.</span></span>|  
|<span data-ttu-id="3aee5-246"><xref:System.Xml.XmlReader.ReadToDescendant%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="3aee5-246"><xref:System.Xml.XmlReader.ReadToDescendant%2A> method</span></span>|<span data-ttu-id="3aee5-247">請前往下一個具有指定的名稱的下階 （子系） 元素中的 XML 讀取器。</span><span class="sxs-lookup"><span data-stu-id="3aee5-247">Advance the XML reader to the next descendant (child) element that has the specified name.</span></span>|  
|<span data-ttu-id="3aee5-248"><xref:System.Xml.XmlReader.ReadToNextSibling%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="3aee5-248"><xref:System.Xml.XmlReader.ReadToNextSibling%2A> method</span></span>|<span data-ttu-id="3aee5-249">前往下一步 的同層級項目具有指定的名稱的 XML 讀取器。</span><span class="sxs-lookup"><span data-stu-id="3aee5-249">Advance the XML reader to the next sibling element that has the specified name.</span></span>|  
|<span data-ttu-id="3aee5-250"><xref:System.Xml.XmlReader.IsEmptyElement%2A> 屬性</span><span class="sxs-lookup"><span data-stu-id="3aee5-250"><xref:System.Xml.XmlReader.IsEmptyElement%2A> property</span></span>|<span data-ttu-id="3aee5-251">檢查目前的項目是否具有結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-251">Check if the current element has an end element tag.</span></span> <span data-ttu-id="3aee5-252">例如: </span><span class="sxs-lookup"><span data-stu-id="3aee5-252">For example:</span></span><br /><br /> <span data-ttu-id="3aee5-253">-   `<item num="123"/>` (<xref:System.Xml.XmlReader.IsEmptyElement%2A>是`true`。)</span><span class="sxs-lookup"><span data-stu-id="3aee5-253">-   `<item num="123"/>` (<xref:System.Xml.XmlReader.IsEmptyElement%2A> is `true`.)</span></span><br /><span data-ttu-id="3aee5-254">-   `<item num="123"> </item>` (<xref:System.Xml.XmlReader.IsEmptyElement%2A>是`false`，不過，此項目的內容是空的。)</span><span class="sxs-lookup"><span data-stu-id="3aee5-254">-   `<item num="123"> </item>` (<xref:System.Xml.XmlReader.IsEmptyElement%2A> is `false`, although the element's content is empty.)</span></span>|  
  
 <span data-ttu-id="3aee5-255">如需讀取的項目文字內容的範例，請參閱<xref:System.Xml.XmlReader.ReadString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-255">For an example of reading the text content of elements, see the <xref:System.Xml.XmlReader.ReadString%2A> method.</span></span> <span data-ttu-id="3aee5-256">下列範例會處理項目使用`while`迴圈。</span><span class="sxs-lookup"><span data-stu-id="3aee5-256">The following example processes elements by using a `while` loop.</span></span>  
  
 [!code-csharp[XmlReaderBasic#10](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#10)]
 [!code-vb[XmlReaderBasic#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#10)]  
  
<a name="xmlreader_attributes"></a>   
## <a name="reading-xml-attributes"></a><span data-ttu-id="3aee5-257">讀取 XML 屬性</span><span class="sxs-lookup"><span data-stu-id="3aee5-257">Reading XML attributes</span></span>  
 <span data-ttu-id="3aee5-258">XML 屬性最常見於項目，但它們也允許 XML 宣告及文件類型節點上。</span><span class="sxs-lookup"><span data-stu-id="3aee5-258">XML attributes are most commonly found on elements, but they're also allowed on XML declaration and document type nodes.</span></span>  
  
 <span data-ttu-id="3aee5-259">置於項目節點，<xref:System.Xml.XmlReader.MoveToAttribute%2A>方法可讓您瀏覽屬性清單的項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-259">When positioned on an element node, the <xref:System.Xml.XmlReader.MoveToAttribute%2A> method lets you go through the attribute list of the element.</span></span> <span data-ttu-id="3aee5-260">請注意，在後<xref:System.Xml.XmlReader.MoveToAttribute%2A>已呼叫節點屬性這類<xref:System.Xml.XmlReader.Name%2A>， <xref:System.Xml.XmlReader.NamespaceURI%2A>，和<xref:System.Xml.XmlReader.Prefix%2A>反映該屬性的屬性、 所屬的項目屬性的屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-260">Note that after <xref:System.Xml.XmlReader.MoveToAttribute%2A> has been called, node properties such as <xref:System.Xml.XmlReader.Name%2A>, <xref:System.Xml.XmlReader.NamespaceURI%2A>, and <xref:System.Xml.XmlReader.Prefix%2A> reflect the properties of that attribute, not the properties of the element the attribute belongs to.</span></span>  
  
 <span data-ttu-id="3aee5-261"><xref:System.Xml.XmlReader>類別會提供這些方法和屬性來讀取和處理項目上的屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-261">The <xref:System.Xml.XmlReader> class provides these methods and properties to read and process attributes on elements.</span></span>  
  
|<span data-ttu-id="3aee5-262">使用此<xref:System.Xml.XmlReader>成員</span><span class="sxs-lookup"><span data-stu-id="3aee5-262">Use this <xref:System.Xml.XmlReader> member</span></span>|<span data-ttu-id="3aee5-263">以</span><span class="sxs-lookup"><span data-stu-id="3aee5-263">To</span></span>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------|--------|  
|<span data-ttu-id="3aee5-264"><xref:System.Xml.XmlReader.HasAttributes%2A> 屬性</span><span class="sxs-lookup"><span data-stu-id="3aee5-264"><xref:System.Xml.XmlReader.HasAttributes%2A> property</span></span>|<span data-ttu-id="3aee5-265">檢查目前節點是否具有任何屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-265">Check whether the current node has any attributes.</span></span>|  
|<span data-ttu-id="3aee5-266"><xref:System.Xml.XmlReader.AttributeCount%2A> 屬性</span><span class="sxs-lookup"><span data-stu-id="3aee5-266"><xref:System.Xml.XmlReader.AttributeCount%2A> property</span></span>|<span data-ttu-id="3aee5-267">取得目前的項目屬性的數目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-267">Get the number of attributes on the current element.</span></span>|  
|<span data-ttu-id="3aee5-268"><xref:System.Xml.XmlReader.MoveToFirstAttribute%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="3aee5-268"><xref:System.Xml.XmlReader.MoveToFirstAttribute%2A> method</span></span>|<span data-ttu-id="3aee5-269">移動項目中的第一個屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-269">Move to the first attribute in an element.</span></span>|  
|<span data-ttu-id="3aee5-270"><xref:System.Xml.XmlReader.MoveToNextAttribute%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="3aee5-270"><xref:System.Xml.XmlReader.MoveToNextAttribute%2A> method</span></span>|<span data-ttu-id="3aee5-271">移至下一個屬性的項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-271">Move to the next attribute in an element.</span></span>|  
|<span data-ttu-id="3aee5-272"><xref:System.Xml.XmlReader.MoveToAttribute%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="3aee5-272"><xref:System.Xml.XmlReader.MoveToAttribute%2A> method</span></span>|<span data-ttu-id="3aee5-273">移至指定的屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-273">Move to a specified attribute.</span></span>|  
|<span data-ttu-id="3aee5-274"><xref:System.Xml.XmlReader.GetAttribute%2A> 方法或<xref:System.Xml.XmlReader.Item%2A>屬性</span><span class="sxs-lookup"><span data-stu-id="3aee5-274"><xref:System.Xml.XmlReader.GetAttribute%2A> method or <xref:System.Xml.XmlReader.Item%2A> property</span></span>|<span data-ttu-id="3aee5-275">取得指定之屬性的值。</span><span class="sxs-lookup"><span data-stu-id="3aee5-275">Get the value of a specified attribute.</span></span>|  
|<span data-ttu-id="3aee5-276"><xref:System.Xml.XmlReader.IsDefault%2A> 屬性</span><span class="sxs-lookup"><span data-stu-id="3aee5-276"><xref:System.Xml.XmlReader.IsDefault%2A> property</span></span>|<span data-ttu-id="3aee5-277">檢查目前節點是否為 DTD 或結構描述中定義的預設值所產生的屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-277">Check whether the current node is an attribute that was generated from the default value defined in the DTD or schema.</span></span>|  
|<span data-ttu-id="3aee5-278"><xref:System.Xml.XmlReader.MoveToElement%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="3aee5-278"><xref:System.Xml.XmlReader.MoveToElement%2A> method</span></span>|<span data-ttu-id="3aee5-279">移至擁有目前屬性的項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-279">Move to the element that owns the current attribute.</span></span> <span data-ttu-id="3aee5-280">使用這個方法傳回的項目之後瀏覽其屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-280">Use this method to return to an element after navigating through its attributes.</span></span>|  
|<span data-ttu-id="3aee5-281"><xref:System.Xml.XmlReader.ReadAttributeValue%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="3aee5-281"><xref:System.Xml.XmlReader.ReadAttributeValue%2A> method</span></span>|<span data-ttu-id="3aee5-282">將屬性值剖析成一或多個`Text`， `EntityReference`，或`EndEntity`節點。</span><span class="sxs-lookup"><span data-stu-id="3aee5-282">Parse the attribute value into one or more `Text`, `EntityReference`, or `EndEntity` nodes.</span></span>|  
  
 <span data-ttu-id="3aee5-283">任何一般 <xref:System.Xml.XmlReader> 方法和屬性都可用於處理屬性 (Attribute)。</span><span class="sxs-lookup"><span data-stu-id="3aee5-283">Any of the general <xref:System.Xml.XmlReader> methods and properties can also be used to process attributes.</span></span> <span data-ttu-id="3aee5-284">例如，將 <xref:System.Xml.XmlReader> 置於屬性 (Attribute) 上之後，<xref:System.Xml.XmlReader.Name%2A> 及 <xref:System.Xml.XmlReader.Value%2A> 屬性會反映屬性 (Attribute) 的值。</span><span class="sxs-lookup"><span data-stu-id="3aee5-284">For example, after the <xref:System.Xml.XmlReader> is positioned on an attribute, the <xref:System.Xml.XmlReader.Name%2A> and <xref:System.Xml.XmlReader.Value%2A> properties reflect the values of the attribute.</span></span> <span data-ttu-id="3aee5-285">您還可使用任何內容 `Read` 方法，以取得屬性的值。</span><span class="sxs-lookup"><span data-stu-id="3aee5-285">You can also use any of the content `Read` methods to get the value of the attribute.</span></span>  
  
 <span data-ttu-id="3aee5-286">這個範例會使用<xref:System.Xml.XmlReader.AttributeCount%2A>來瀏覽項目上的所有屬性的屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-286">This example uses the <xref:System.Xml.XmlReader.AttributeCount%2A> property to navigate through all the attributes on an element.</span></span>  
  
 [!code-csharp[XmlReaderBasic#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#1)]
 [!code-vb[XmlReaderBasic#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#1)]  
  
 <span data-ttu-id="3aee5-287">這個範例會使用<xref:System.Xml.XmlReader.MoveToNextAttribute%2A>方法中的`while`迴圈來瀏覽屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-287">This example uses the <xref:System.Xml.XmlReader.MoveToNextAttribute%2A> method in a `while` loop to navigate through the attributes.</span></span>  
  
 [!code-csharp[XmlReaderBasic#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#6)]
 [!code-vb[XmlReaderBasic#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#6)]  
  
 <span data-ttu-id="3aee5-288">**讀取 XML 宣告節點上的屬性**</span><span class="sxs-lookup"><span data-stu-id="3aee5-288">**Reading attributes on XML declaration nodes**</span></span>  
  
 <span data-ttu-id="3aee5-289">XML 讀取器必須置於 XML 宣告節點<xref:System.Xml.XmlReader.Value%2A>屬性會傳回版本、 獨立及編碼資訊，以單一字串。</span><span class="sxs-lookup"><span data-stu-id="3aee5-289">When the XML reader is positioned on an XML declaration node, the <xref:System.Xml.XmlReader.Value%2A> property returns the version, standalone, and encoding information as a single string.</span></span> <span data-ttu-id="3aee5-290"><xref:System.Xml.XmlReader> 所建立的物件<xref:System.Xml.XmlReader.Create%2A>方法中，<xref:System.Xml.XmlTextReader>類別，而<xref:System.Xml.XmlValidatingReader>類別公開版本、 獨立及編碼項目，做為屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-290"><xref:System.Xml.XmlReader> objects created by the <xref:System.Xml.XmlReader.Create%2A> method, the <xref:System.Xml.XmlTextReader> class, and the <xref:System.Xml.XmlValidatingReader> class expose the version, standalone, and encoding items as attributes.</span></span>  
  
 <span data-ttu-id="3aee5-291">**讀取文件類型節點上的屬性**</span><span class="sxs-lookup"><span data-stu-id="3aee5-291">**Reading attributes on document type nodes**</span></span>  
  
 <span data-ttu-id="3aee5-292">XML 讀取器必須置於文件類型節點<xref:System.Xml.XmlReader.GetAttribute%2A>方法和<xref:System.Xml.XmlReader.Item%2A>屬性可以用來傳回 SYSTEM 及 PUBLIC 常值的值。</span><span class="sxs-lookup"><span data-stu-id="3aee5-292">When the XML reader is positioned on a document type node, the <xref:System.Xml.XmlReader.GetAttribute%2A> method and <xref:System.Xml.XmlReader.Item%2A> property can be used to return the values for the SYSTEM and PUBLIC literals.</span></span> <span data-ttu-id="3aee5-293">例如，呼叫 `reader.GetAttribute("PUBLIC")` 會傳回 PUBLIC 值。</span><span class="sxs-lookup"><span data-stu-id="3aee5-293">For example, calling `reader.GetAttribute("PUBLIC")` returns the PUBLIC value.</span></span>  
  
 <span data-ttu-id="3aee5-294">**讀取在處理指示節點上的屬性**</span><span class="sxs-lookup"><span data-stu-id="3aee5-294">**Reading attributes on processing instruction nodes**</span></span>  
  
 <span data-ttu-id="3aee5-295">將 <xref:System.Xml.XmlReader> 置於處理指示節點時，<xref:System.Xml.XmlReader.Value%2A> 屬性會傳回全部文字內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-295">When the <xref:System.Xml.XmlReader> is positioned on a processing instruction node, the <xref:System.Xml.XmlReader.Value%2A> property returns the entire text content.</span></span> <span data-ttu-id="3aee5-296">處理指示節點中的項目不被視為屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-296">Items in the processing instruction node aren't treated as attributes.</span></span> <span data-ttu-id="3aee5-297">無法與閱讀<xref:System.Xml.XmlReader.GetAttribute%2A>或<xref:System.Xml.XmlReader.MoveToAttribute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-297">They can't be read with the <xref:System.Xml.XmlReader.GetAttribute%2A> or <xref:System.Xml.XmlReader.MoveToAttribute%2A> method.</span></span>  
  
<a name="xmlreader_content"></a>   
## <a name="reading-xml-content"></a><span data-ttu-id="3aee5-298">讀取 XML 內容</span><span class="sxs-lookup"><span data-stu-id="3aee5-298">Reading XML content</span></span>  
 <span data-ttu-id="3aee5-299">XMLReader 類別包含下列成員，可從 XML 檔案讀取內容，然後將內容傳回為字串值。</span><span class="sxs-lookup"><span data-stu-id="3aee5-299">The XMLReader class includes the following members that read content from an XML file and return the content as string values.</span></span> <span data-ttu-id="3aee5-300">(若要傳回 CLR 型別，請參閱[下一節](#xmlreader_clr)。)</span><span class="sxs-lookup"><span data-stu-id="3aee5-300">(To return CLR types, see the [next section](#xmlreader_clr).)</span></span>  
  
|<span data-ttu-id="3aee5-301">使用此<xref:System.Xml.XmlReader>成員</span><span class="sxs-lookup"><span data-stu-id="3aee5-301">Use this <xref:System.Xml.XmlReader> member</span></span>|<span data-ttu-id="3aee5-302">以</span><span class="sxs-lookup"><span data-stu-id="3aee5-302">To</span></span>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------|--------|  
|<span data-ttu-id="3aee5-303"><xref:System.Xml.XmlReader.Value%2A> 屬性</span><span class="sxs-lookup"><span data-stu-id="3aee5-303"><xref:System.Xml.XmlReader.Value%2A> property</span></span>|<span data-ttu-id="3aee5-304">取得目前節點的文字內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-304">Get the text content of the current node.</span></span> <span data-ttu-id="3aee5-305">傳回的值取決於節點類型;請參閱<xref:System.Xml.XmlReader.Value%2A>參考頁面，如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="3aee5-305">The value returned depends on the node type; see the <xref:System.Xml.XmlReader.Value%2A> reference page for details.</span></span>|  
|<span data-ttu-id="3aee5-306"><xref:System.Xml.XmlReader.ReadString%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="3aee5-306"><xref:System.Xml.XmlReader.ReadString%2A> method</span></span>|<span data-ttu-id="3aee5-307">取得做為字串的項目或文字節點的內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-307">Get the content of an element or text node as a string.</span></span> <span data-ttu-id="3aee5-308">此方法會停止處理指示和註解。</span><span class="sxs-lookup"><span data-stu-id="3aee5-308">This method stops on processing instructions and comments.</span></span><br /><br /> <span data-ttu-id="3aee5-309">如需這個方法的特定節點類型的處理方式的詳細資訊，請參閱<xref:System.Xml.XmlReader.ReadString%2A>參考頁面。</span><span class="sxs-lookup"><span data-stu-id="3aee5-309">For details on how this method handles specific node types, see the <xref:System.Xml.XmlReader.ReadString%2A> reference page.</span></span>|  
|<span data-ttu-id="3aee5-310"><xref:System.Xml.XmlReader.ReadInnerXml%2A> 和 <xref:System.Xml.XmlReader.ReadInnerXmlAsync%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="3aee5-310"><xref:System.Xml.XmlReader.ReadInnerXml%2A> and <xref:System.Xml.XmlReader.ReadInnerXmlAsync%2A> methods</span></span>|<span data-ttu-id="3aee5-311">取得目前的節點，包括標記，但不含開始和結束標記的所有內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-311">Get all the content of the current node, including the markup, but excluding start and end tags.</span></span> <span data-ttu-id="3aee5-312">例如，若為：</span><span class="sxs-lookup"><span data-stu-id="3aee5-312">For example, for:</span></span><br /><br /> `<node>this<child id="123"/></node>`<br /><br /> <span data-ttu-id="3aee5-313"><xref:System.Xml.XmlReader.ReadInnerXml%2A> 會傳回：</span><span class="sxs-lookup"><span data-stu-id="3aee5-313"><xref:System.Xml.XmlReader.ReadInnerXml%2A> returns:</span></span><br /><br /> `this<child id="123"/>`|  
|<span data-ttu-id="3aee5-314"><xref:System.Xml.XmlReader.ReadOuterXml%2A> 和 <xref:System.Xml.XmlReader.ReadOuterXmlAsync%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="3aee5-314"><xref:System.Xml.XmlReader.ReadOuterXml%2A> and <xref:System.Xml.XmlReader.ReadOuterXmlAsync%2A> methods</span></span>|<span data-ttu-id="3aee5-315">取得目前的節點及其子系，包括標記和開始/結束標記的所有內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-315">Get all the content of the current node and its children, including markup and start/end tags.</span></span> <span data-ttu-id="3aee5-316">例如，若為：</span><span class="sxs-lookup"><span data-stu-id="3aee5-316">For example, for:</span></span><br /><br /> `<node>this<child id="123"/></node>`<br /><br /> <span data-ttu-id="3aee5-317"><xref:System.Xml.XmlReader.ReadOuterXml%2A> 會傳回：</span><span class="sxs-lookup"><span data-stu-id="3aee5-317"><xref:System.Xml.XmlReader.ReadOuterXml%2A> returns:</span></span><br /><br /> `<node>this<child id="123"/></node>`|  
  
<a name="xmlreader_clr"></a>   
## <a name="converting-to-clr-types"></a><span data-ttu-id="3aee5-318">將轉換成 CLR 類型</span><span class="sxs-lookup"><span data-stu-id="3aee5-318">Converting to CLR types</span></span>  
 <span data-ttu-id="3aee5-319">您可以使用的成員<xref:System.Xml.XmlReader>（下表所列） 的類別讀取 XML 資料，並傳回值，做為通用語言執行平台 (CLR) 型別，而不是字串。</span><span class="sxs-lookup"><span data-stu-id="3aee5-319">You can use the members of the <xref:System.Xml.XmlReader> class (listed in the following table) to read XML data and return values as common language runtime (CLR) types instead of strings.</span></span> <span data-ttu-id="3aee5-320">這些成員可讓您取得值，而不必手動剖析，或將字串值轉換為最適合您的程式碼撰寫工作的表示法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-320">These members enable you to get values in the representation that is most appropriate for your coding task without having to manually parse or convert string values.</span></span>  
  
-   <span data-ttu-id="3aee5-321">**ReadElementContentAs**只有元素節點型別上呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-321">The **ReadElementContentAs** methods can only be called on element node types.</span></span> <span data-ttu-id="3aee5-322">這些方法無法用於包含項目子系或混合內容的項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-322">These methods cannot be used on elements that contain child elements or mixed content.</span></span> <span data-ttu-id="3aee5-323">呼叫後，<xref:System.Xml.XmlReader> 物件會讀取開始標記、讀取項目內容，然後移動到超過結尾項目標記以後的部分。</span><span class="sxs-lookup"><span data-stu-id="3aee5-323">When called, the <xref:System.Xml.XmlReader> object reads the start tag, reads the element content, and then moves past the end element tag.</span></span> <span data-ttu-id="3aee5-324">處理指示及註解會略過，並且實體會展開。</span><span class="sxs-lookup"><span data-stu-id="3aee5-324">Processing instructions and comments are ignored and entities are expanded.</span></span>  
  
-   <span data-ttu-id="3aee5-325">**ReadContentAs**方法讀取的文字內容，目前的讀取器位置，和 XML 資料不需要任何結構描述或資料型別與其建立關聯的資訊時，將文字內容轉換成要求的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="3aee5-325">The **ReadContentAs** methods read the text content at the current reader position, and if the XML data doesn't have any schema or data type information associated with it, convert the text content to the requested return type.</span></span> <span data-ttu-id="3aee5-326">文字、泛空白字元、顯著泛空白字元及 CDATA 區段都是串連的。</span><span class="sxs-lookup"><span data-stu-id="3aee5-326">Text, white space, significant white space and CDATA sections are concatenated.</span></span> <span data-ttu-id="3aee5-327">註解和處理指示會略過，並會自動解析實體參考。</span><span class="sxs-lookup"><span data-stu-id="3aee5-327">Comments and processing instructions are skipped, and entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="3aee5-328"><xref:System.Xml.XmlReader>類別會使用所定義的規則[W3C XML 結構描述第 2 部分： 資料型別](https://www.w3.org/TR/xmlschema-2/)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-328">The <xref:System.Xml.XmlReader> class uses the rules defined by the [W3C XML Schema Part 2: Datatypes](https://www.w3.org/TR/xmlschema-2/)recommendation.</span></span>  
  
|<span data-ttu-id="3aee5-329">使用此<xref:System.Xml.XmlReader>方法</span><span class="sxs-lookup"><span data-stu-id="3aee5-329">Use this <xref:System.Xml.XmlReader> method</span></span>|<span data-ttu-id="3aee5-330">傳回這個 CLR 類型</span><span class="sxs-lookup"><span data-stu-id="3aee5-330">To return this CLR type</span></span>|  
|--------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|  
|<span data-ttu-id="3aee5-331"><xref:System.Xml.XmlReader.ReadContentAsBoolean%2A> 和 <xref:System.Xml.XmlReader.ReadElementContentAsBoolean%2A></span><span class="sxs-lookup"><span data-stu-id="3aee5-331"><xref:System.Xml.XmlReader.ReadContentAsBoolean%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsBoolean%2A></span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="3aee5-332"><xref:System.Xml.XmlReader.ReadContentAsDateTime%2A> 和 <xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A></span><span class="sxs-lookup"><span data-stu-id="3aee5-332"><xref:System.Xml.XmlReader.ReadContentAsDateTime%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A></span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="3aee5-333"><xref:System.Xml.XmlReader.ReadContentAsDouble%2A> 和 <xref:System.Xml.XmlReader.ReadElementContentAsDouble%2A></span><span class="sxs-lookup"><span data-stu-id="3aee5-333"><xref:System.Xml.XmlReader.ReadContentAsDouble%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsDouble%2A></span></span>|<xref:System.Double>|  
|<span data-ttu-id="3aee5-334"><xref:System.Xml.XmlReader.ReadContentAsLong%2A> 和 <xref:System.Xml.XmlReader.ReadElementContentAsLong%2A></span><span class="sxs-lookup"><span data-stu-id="3aee5-334"><xref:System.Xml.XmlReader.ReadContentAsLong%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsLong%2A></span></span>|<xref:System.Int64>|  
|<span data-ttu-id="3aee5-335"><xref:System.Xml.XmlReader.ReadContentAsInt%2A> 和 <xref:System.Xml.XmlReader.ReadElementContentAsInt%2A></span><span class="sxs-lookup"><span data-stu-id="3aee5-335"><xref:System.Xml.XmlReader.ReadContentAsInt%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsInt%2A></span></span>|<xref:System.Int32>|  
|<span data-ttu-id="3aee5-336"><xref:System.Xml.XmlReader.ReadContentAsString%2A> 和 <xref:System.Xml.XmlReader.ReadElementContentAsString%2A></span><span class="sxs-lookup"><span data-stu-id="3aee5-336"><xref:System.Xml.XmlReader.ReadContentAsString%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsString%2A></span></span>|<xref:System.String>|  
|<span data-ttu-id="3aee5-337"><xref:System.Xml.XmlReader.ReadContentAs%2A> 和 <xref:System.Xml.XmlReader.ReadElementContentAs%2A></span><span class="sxs-lookup"><span data-stu-id="3aee5-337"><xref:System.Xml.XmlReader.ReadContentAs%2A> and <xref:System.Xml.XmlReader.ReadElementContentAs%2A></span></span>|<span data-ttu-id="3aee5-338">您使用指定的型別`returnType`參數</span><span class="sxs-lookup"><span data-stu-id="3aee5-338">The type you specify with the `returnType` parameter</span></span>|  
|<span data-ttu-id="3aee5-339"><xref:System.Xml.XmlReader.ReadContentAsObject%2A> 和 <xref:System.Xml.XmlReader.ReadElementContentAsObject%2A></span><span class="sxs-lookup"><span data-stu-id="3aee5-339"><xref:System.Xml.XmlReader.ReadContentAsObject%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsObject%2A></span></span>|<span data-ttu-id="3aee5-340">所指定最適當的類型<xref:System.Xml.XmlReader.ValueType%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-340">The most appropriate type, as specified by the <xref:System.Xml.XmlReader.ValueType%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="3aee5-341">請參閱[System.Xml 類別中的型別支援](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)對應資訊。</span><span class="sxs-lookup"><span data-stu-id="3aee5-341">See [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md) for mapping information.</span></span>|  
  
 <span data-ttu-id="3aee5-342">如果項目輕鬆無法轉換為 CLR 型別中，但會因為其格式，您可以使用結構描述對應，以確保成功的轉換。</span><span class="sxs-lookup"><span data-stu-id="3aee5-342">If an element can't easily be converted to a CLR type because of its format, you can use a schema mapping to ensure a successful conversion.</span></span> <span data-ttu-id="3aee5-343">下列範例會使用為.xsd 檔轉換`hire-date`項目`xs:date`類型，然後使用<xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A>方法，以傳回此元素作為<xref:System.DateTime>物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-343">The following example uses an .xsd file to convert the `hire-date` element to the `xs:date` type, and then uses the <xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A> method to return the element as a <xref:System.DateTime> object.</span></span>  
  
 <span data-ttu-id="3aee5-344">**輸入 (hireDate.xml):**</span><span class="sxs-lookup"><span data-stu-id="3aee5-344">**Input (hireDate.xml):**</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#9](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/hireDate.xml#9)]  
  
 <span data-ttu-id="3aee5-345">**結構描述 (hireDate.xsd):**</span><span class="sxs-lookup"><span data-stu-id="3aee5-345">**Schema (hireDate.xsd):**</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#10](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/hireDate.xsd#10)]  
  
 <span data-ttu-id="3aee5-346">**程式碼：**</span><span class="sxs-lookup"><span data-stu-id="3aee5-346">**Code:**</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#13](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#13)]
 [!code-vb[XmlReader.ReadElementContentAs#13](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#13)]  
  
 <span data-ttu-id="3aee5-347">**輸出：**</span><span class="sxs-lookup"><span data-stu-id="3aee5-347">**Output:**</span></span>  
  
```  
Six Month Review Date:  7/8/2003 12:00:00 AM  
```  
  
<a name="xmlreader_async"></a>   
## <a name="asynchronous-programming"></a><span data-ttu-id="3aee5-348">非同步程式設計</span><span class="sxs-lookup"><span data-stu-id="3aee5-348">Asynchronous programming</span></span>  
 <span data-ttu-id="3aee5-349">大部分的<xref:System.Xml.XmlReader>方法有非同步對應項目具有"Async"結尾的方法名稱。</span><span class="sxs-lookup"><span data-stu-id="3aee5-349">Most of the <xref:System.Xml.XmlReader> methods have asynchronous counterparts that have "Async" at the end of their method names.</span></span> <span data-ttu-id="3aee5-350">例如，非同步的對等<xref:System.Xml.XmlReader.ReadContentAsObject%2A>是<xref:System.Xml.XmlReader.ReadContentAsObjectAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-350">For example, the asynchronous equivalent of <xref:System.Xml.XmlReader.ReadContentAsObject%2A> is <xref:System.Xml.XmlReader.ReadContentAsObjectAsync%2A>.</span></span>  
  
 <span data-ttu-id="3aee5-351">下列方法可以搭配非同步方法呼叫：</span><span class="sxs-lookup"><span data-stu-id="3aee5-351">The following methods can be used with asynchronous method calls:</span></span>  
  
-   <xref:System.Xml.XmlReader.GetAttribute%2A>  
  
-   <xref:System.Xml.XmlReader.MoveToAttribute%2A>  
  
-   <xref:System.Xml.XmlReader.MoveToFirstAttribute%2A>  
  
-   <xref:System.Xml.XmlReader.MoveToNextAttribute%2A>  
  
-   <xref:System.Xml.XmlReader.MoveToElement%2A>  
  
-   <xref:System.Xml.XmlReader.ReadAttributeValue%2A>  
  
-   <xref:System.Xml.XmlReader.ReadSubtree%2A>  
  
-   <xref:System.Xml.XmlReader.ResolveEntity%2A>  
  
 <span data-ttu-id="3aee5-352">下列各節說明非同步方法，不需要非同步對應項目使用方式。</span><span class="sxs-lookup"><span data-stu-id="3aee5-352">The following sections describe asynchronous usage for methods that don't have asynchronous counterparts.</span></span>  
  
 <span data-ttu-id="3aee5-353">**ReadStartElement 方法**</span><span class="sxs-lookup"><span data-stu-id="3aee5-353">**ReadStartElement method**</span></span>  
  
 [!code-csharp[System.Xml.XmlReader.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#1)]
 [!code-vb[System.Xml.XmlReader.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#1)]  
  
 <span data-ttu-id="3aee5-354">**ReadEndElement 方法**</span><span class="sxs-lookup"><span data-stu-id="3aee5-354">**ReadEndElement method**</span></span>  
  
 [!code-csharp[System.Xml.XmlReader.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#2)]
 [!code-vb[System.Xml.XmlReader.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#2)]  
  
 <span data-ttu-id="3aee5-355">**ReadToNextSibling 方法**</span><span class="sxs-lookup"><span data-stu-id="3aee5-355">**ReadToNextSibling method**</span></span>  
  
 [!code-csharp[System.Xml.XmlReader.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#3)]
 [!code-vb[System.Xml.XmlReader.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#3)]  
  
 <span data-ttu-id="3aee5-356">**ReadToFollowing 方法**</span><span class="sxs-lookup"><span data-stu-id="3aee5-356">**ReadToFollowing method**</span></span>  
  
 [!code-csharp[System.Xml.XmlReader.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#4)]
 [!code-vb[System.Xml.XmlReader.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#4)]  
  
 <span data-ttu-id="3aee5-357">**ReadToDescendant 方法**</span><span class="sxs-lookup"><span data-stu-id="3aee5-357">**ReadToDescendant method**</span></span>  
  
 [!code-csharp[System.Xml.XmlReader.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#5)]
 [!code-vb[System.Xml.XmlReader.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#5)]  
  
<a name="xmlreader_security"></a>   
## <a name="security-considerations"></a><span data-ttu-id="3aee5-358">安全性考量</span><span class="sxs-lookup"><span data-stu-id="3aee5-358">Security considerations</span></span>  
 <span data-ttu-id="3aee5-359">使用時，請考慮下列<xref:System.Xml.XmlReader>類別：</span><span class="sxs-lookup"><span data-stu-id="3aee5-359">Consider the following when working with the <xref:System.Xml.XmlReader> class:</span></span>  
  
-   <span data-ttu-id="3aee5-360">從擲回的例外狀況<xref:System.Xml.XmlReader>可能會洩露到您的應用程式的路徑資訊，您可能不想反昇。</span><span class="sxs-lookup"><span data-stu-id="3aee5-360">Exceptions thrown from the <xref:System.Xml.XmlReader> can disclose path information that you might not want bubbled up to your app.</span></span> <span data-ttu-id="3aee5-361">您的應用程式必須攔截例外狀況，並適當地處理它們。</span><span class="sxs-lookup"><span data-stu-id="3aee5-361">Your app must catch exceptions and process them appropriately.</span></span>  
  
-   <span data-ttu-id="3aee5-362">請勿啟用 DTD 處理，如果您擔心阻絕服務問題，或如果您正在處理不受信任的來源。</span><span class="sxs-lookup"><span data-stu-id="3aee5-362">Do not enable DTD processing if you're concerned about denial of service issues or if you're dealing with untrusted sources.</span></span> <span data-ttu-id="3aee5-363">預設為停用 DTD 處理<xref:System.Xml.XmlReader>所建立的物件<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-363">DTD processing is disabled by default for <xref:System.Xml.XmlReader> objects created by the <xref:System.Xml.XmlReader.Create%2A> method.</span></span>  
  
     <span data-ttu-id="3aee5-364">如果已啟用 DTD 處理，則可使用 <xref:System.Xml.XmlSecureResolver> 限制 <xref:System.Xml.XmlReader> 可存取的資源。</span><span class="sxs-lookup"><span data-stu-id="3aee5-364">If you have DTD processing enabled, you can use the <xref:System.Xml.XmlSecureResolver> to restrict the resources that the <xref:System.Xml.XmlReader> can access.</span></span> <span data-ttu-id="3aee5-365">您也可以設計您的應用程式，讓 XML 處理具有記憶體和時間限制。</span><span class="sxs-lookup"><span data-stu-id="3aee5-365">You can also design your app so that the XML processing is memory and time constrained.</span></span> <span data-ttu-id="3aee5-366">比方說，您可以設定逾時限制在您的 ASP.NET 應用程式。</span><span class="sxs-lookup"><span data-stu-id="3aee5-366">For example, you can configure time-out limits in your ASP.NET app.</span></span>  
  
-   <span data-ttu-id="3aee5-367">XML 資料可以包括外部資源的參考，如結構描述檔案。</span><span class="sxs-lookup"><span data-stu-id="3aee5-367">XML data can include references to external resources such as a schema file.</span></span> <span data-ttu-id="3aee5-368">根據預設，使用解析外部資源<xref:System.Xml.XmlUrlResolver>與不具使用者認證的物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-368">By default, external resources are resolved by using an <xref:System.Xml.XmlUrlResolver> object with no user credentials.</span></span> <span data-ttu-id="3aee5-369">您可以透過執行下列其中一項作業，進一步保護它：</span><span class="sxs-lookup"><span data-stu-id="3aee5-369">You can secure this further by doing one of the following:</span></span>  
  
    -   <span data-ttu-id="3aee5-370">藉由將 <xref:System.Xml.XmlReader> 屬性設為 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 物件，限制 <xref:System.Xml.XmlSecureResolver> 可以存取的資源。</span><span class="sxs-lookup"><span data-stu-id="3aee5-370">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
  
    -   <span data-ttu-id="3aee5-371">藉由將 <xref:System.Xml.XmlReader> 屬性設為 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>，來禁止 `null` 開啟外部資源。</span><span class="sxs-lookup"><span data-stu-id="3aee5-371">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to `null`.</span></span>  
  
-   <span data-ttu-id="3aee5-372"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>並<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation>驗證旗標<xref:System.Xml.XmlReaderSettings>物件不預設設定。</span><span class="sxs-lookup"><span data-stu-id="3aee5-372">The <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags of an <xref:System.Xml.XmlReaderSettings> object aren't set by default.</span></span> <span data-ttu-id="3aee5-373">在處理來自不受信任來源的 XML 資料時，這有助於保護 <xref:System.Xml.XmlReader>，防止其遭受以結構描述為基礎的攻擊。</span><span class="sxs-lookup"><span data-stu-id="3aee5-373">This helps to protect the <xref:System.Xml.XmlReader> against schema-based attacks when it is processing XML data from an untrusted source.</span></span> <span data-ttu-id="3aee5-374">當設定這些旗標時，<xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 物件的 <xref:System.Xml.XmlReaderSettings> 可用於解析在 <xref:System.Xml.XmlReader> 的執行個體文件中發現的結構描述位置。</span><span class="sxs-lookup"><span data-stu-id="3aee5-374">When these flags are set, the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> of the <xref:System.Xml.XmlReaderSettings> object is used to resolve schema locations encountered in the instance document in the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="3aee5-375">如果<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>屬性設定為`null`，結構描述位置不是解析即使<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>和<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation>設定驗證旗標。</span><span class="sxs-lookup"><span data-stu-id="3aee5-375">If the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property is set to `null`, schema locations aren't resolved even if the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags are set.</span></span>  
  
     <span data-ttu-id="3aee5-376">驗證期間加入的結構描述會加入新型別，並可變更要驗證之物件的驗證結果。</span><span class="sxs-lookup"><span data-stu-id="3aee5-376">Schemas added during validation add new types and can change the validation outcome of the document being validated.</span></span> <span data-ttu-id="3aee5-377">因此，外部結構描述應僅從受信任的來源解析。</span><span class="sxs-lookup"><span data-stu-id="3aee5-377">As a result, external schemas should only be resolved from trusted sources.</span></span>  
  
     <span data-ttu-id="3aee5-378">建議您停用<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>驗證高可用性的情況下，針對文件的大部分具有識別條件約束的結構描述中的不受信任、 大型 XML 文件時的旗標。</span><span class="sxs-lookup"><span data-stu-id="3aee5-378">We recommend disabling the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> flag when validating untrusted, large XML documents in high availability scenarios against a schema that has identity constraints over a large part of the document.</span></span> <span data-ttu-id="3aee5-379">預設會啟用此旗標。</span><span class="sxs-lookup"><span data-stu-id="3aee5-379">This flag is enabled by default.</span></span>  
  
-   <span data-ttu-id="3aee5-380">XML 資料可以包含需要相當長時間來處理的大量屬性、命名空間宣告、巢狀項目等。</span><span class="sxs-lookup"><span data-stu-id="3aee5-380">XML data can contain a large number of attributes, namespace declarations, nested elements and so on that require a substantial amount of time to process.</span></span> <span data-ttu-id="3aee5-381">若要傳送至輸入的大小限制<xref:System.Xml.XmlReader>，您可以：</span><span class="sxs-lookup"><span data-stu-id="3aee5-381">To limit the size of the input that is sent to the <xref:System.Xml.XmlReader>, you can:</span></span>  
  
    -   <span data-ttu-id="3aee5-382">藉由設定限制的文件大小<xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-382">Limit the size of the document by setting the <xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A> property.</span></span>  
  
    -   <span data-ttu-id="3aee5-383">產生自展開實體所設定的字元數目限制<xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-383">Limit the number of characters that result from expanding entities by setting the <xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A> property.</span></span>  
  
    -   <span data-ttu-id="3aee5-384">建立自訂`IStream`實作<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-384">Create a custom `IStream` implementation for the <xref:System.Xml.XmlReader>.</span></span>  
  
-   <span data-ttu-id="3aee5-385"><xref:System.Xml.XmlReader.ReadValueChunk%2A>方法可用來處理大型資料流的資料。</span><span class="sxs-lookup"><span data-stu-id="3aee5-385">The <xref:System.Xml.XmlReader.ReadValueChunk%2A> method can be used to handle large streams of data.</span></span> <span data-ttu-id="3aee5-386">此方法每次會讀取較少數量的字元，而不是為整個值配置單一字串。</span><span class="sxs-lookup"><span data-stu-id="3aee5-386">This method reads a small number of characters at a time instead of allocating a single string for the whole value.</span></span>  
  
-   <span data-ttu-id="3aee5-387">讀取 XML 文件具有大量唯一本機名稱、 命名空間或前置詞時，會發生問題。</span><span class="sxs-lookup"><span data-stu-id="3aee5-387">When reading an XML document with a large number of unique local names, namespaces, or prefixes, a problem can occur.</span></span> <span data-ttu-id="3aee5-388">如果您使用的類別，衍生自<xref:System.Xml.XmlReader>，而且您呼叫<xref:System.Xml.XmlReader.LocalName%2A>， <xref:System.Xml.XmlReader.Prefix%2A>，或<xref:System.Xml.XmlReader.NamespaceURI%2A>每個項目的屬性，傳回的字串會新增至<xref:System.Xml.NameTable>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-388">If you are using a class that derives from <xref:System.Xml.XmlReader>, and you call the <xref:System.Xml.XmlReader.LocalName%2A>, <xref:System.Xml.XmlReader.Prefix%2A>, or <xref:System.Xml.XmlReader.NamespaceURI%2A> property for each item, the returned string is added to a <xref:System.Xml.NameTable>.</span></span> <span data-ttu-id="3aee5-389">所持有的集合<xref:System.Xml.NameTable>永遠不會減少的大小，建立字串控制代碼的虛擬記憶體流失。</span><span class="sxs-lookup"><span data-stu-id="3aee5-389">The collection held by the <xref:System.Xml.NameTable> never decreases in size, creating a virtual memory leak of the string handles.</span></span> <span data-ttu-id="3aee5-390">這一個緩和策略是衍生自<xref:System.Xml.NameTable>類別並強制執行最大的大小配額。</span><span class="sxs-lookup"><span data-stu-id="3aee5-390">One mitigation for this is to derive from the <xref:System.Xml.NameTable> class and enforce a maximum size quota.</span></span> <span data-ttu-id="3aee5-391">(沒有任何方法可防止使用<xref:System.Xml.NameTable>，或切換<xref:System.Xml.NameTable>配額已滿時)。</span><span class="sxs-lookup"><span data-stu-id="3aee5-391">(There is no way to prevent the use of a <xref:System.Xml.NameTable>, or to switch the <xref:System.Xml.NameTable> when it is full).</span></span> <span data-ttu-id="3aee5-392">另一個的緩和措施是避免使用提到的屬性，改用<xref:System.Xml.XmlReader.MoveToAttribute%2A>方法<xref:System.Xml.XmlReader.IsStartElement%2A>方法這些方法可能; 不傳回字串，並因此避免量問題<xref:System.Xml.NameTable>集合。</span><span class="sxs-lookup"><span data-stu-id="3aee5-392">Another mitigation is to avoid using the properties mentioned and instead use the <xref:System.Xml.XmlReader.MoveToAttribute%2A> method with the <xref:System.Xml.XmlReader.IsStartElement%2A> method where possible; those methods don't return strings and thus avoid the problem of overfilling the <xref:System.Xml.NameTable> collection.</span></span>  
  
-   <span data-ttu-id="3aee5-393"><xref:System.Xml.XmlReaderSettings> 物件可以包含機密資訊 (如使用者認證)。</span><span class="sxs-lookup"><span data-stu-id="3aee5-393"><xref:System.Xml.XmlReaderSettings> objects can contain sensitive information such as user credentials.</span></span> <span data-ttu-id="3aee5-394">不受信任的元件可能會使用 <xref:System.Xml.XmlReaderSettings> 物件及其使用者認證，建立 <xref:System.Xml.XmlReader> 物件來讀取資料。</span><span class="sxs-lookup"><span data-stu-id="3aee5-394">An untrusted component could use the <xref:System.Xml.XmlReaderSettings> object and its user credentials to create <xref:System.Xml.XmlReader> objects to read data.</span></span> <span data-ttu-id="3aee5-395">快取時請小心<xref:System.Xml.XmlReaderSettings>物件，或傳遞時<xref:System.Xml.XmlReaderSettings>元件之間的物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-395">Be careful when caching <xref:System.Xml.XmlReaderSettings> objects, or when passing the <xref:System.Xml.XmlReaderSettings> object from one component to another.</span></span>  
  
-   <span data-ttu-id="3aee5-396">請不要接受來自不受信任來源的支援元件，如 <xref:System.Xml.NameTable>、<xref:System.Xml.XmlNamespaceManager> 及 <xref:System.Xml.XmlResolver> 物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-396">Do not accept supporting components, such as <xref:System.Xml.NameTable>, <xref:System.Xml.XmlNamespaceManager>, and <xref:System.Xml.XmlResolver> objects, from an untrusted source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-397">下列程式碼範例示範如何使用非同步 API 來剖析 XML。</span><span class="sxs-lookup"><span data-stu-id="3aee5-397">The following example code shows how to use the asynchronous API to parse XML.</span></span>  
  
 [!code-csharp[System.Xml.XmlReader.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#6)]
 [!code-vb[System.Xml.XmlReader.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-398">初始化 <see langword="XmlReader" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-398">Initializes a new instance of the <see langword="XmlReader" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-399">初始化狀態，在這種類型的衍生的類別建構函式會呼叫這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="3aee5-399">This constructor is called by derived class constructors to initialize state in this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeCount">
      <MemberSignature Language="C#" Value="public abstract int AttributeCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AttributeCount" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.AttributeCount" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property AttributeCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int AttributeCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeCount : int" Usage="System.Xml.XmlReader.AttributeCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-400">在衍生類別中覆寫時，取得目前節點上的屬性數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-400">When overridden in a derived class, gets the number of attributes on the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aee5-401">目前節點的屬性數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-401">The number of attributes on the current node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-402">這個屬性無關`Element`，`DocumentType`和`XmlDeclaration`僅限節點。</span><span class="sxs-lookup"><span data-stu-id="3aee5-402">This property is relevant to `Element`, `DocumentType` and `XmlDeclaration` nodes only.</span></span> <span data-ttu-id="3aee5-403">（其他節點型別並沒有屬性。）</span><span class="sxs-lookup"><span data-stu-id="3aee5-403">(Other node types do not have attributes.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-404">下列範例會顯示目前的節點上的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-404">The following example displays all attributes on the current node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#1)]
 [!code-vb[XmlReaderBasic#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-405">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-405">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-406">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-406">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public abstract string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XmlReader.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-407">在衍生類別中覆寫時，取得目前節點的基底 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-407">When overridden in a derived class, gets the base URI of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aee5-408">目前節點的基底 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-408">The base URI of the current node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-409">網路上的 XML 文件使用不同的 W3C 標準包含機制進行彙總的資料區塊所組成，並因此會包含來自不同位置的節點。</span><span class="sxs-lookup"><span data-stu-id="3aee5-409">A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="3aee5-410">DTD 實體就是一個例子，但這並不限於使用 Dtd。</span><span class="sxs-lookup"><span data-stu-id="3aee5-410">DTD entities are an example of this, but this is not limited to DTDs.</span></span> <span data-ttu-id="3aee5-411">基底 URI 會告訴您這些節點的來源。</span><span class="sxs-lookup"><span data-stu-id="3aee5-411">The base URI tells you where these nodes came from.</span></span> <span data-ttu-id="3aee5-412">是否要傳回的節點沒有基底 URI （例如，它們已從字串中剖析記憶體中），`String.Empty`會傳回。</span><span class="sxs-lookup"><span data-stu-id="3aee5-412">If there is no base URI for the nodes being returned (for example, they were parsed from an in-memory string), `String.Empty` is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-413">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-413">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-414">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-414">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadBinaryContent">
      <MemberSignature Language="C#" Value="public virtual bool CanReadBinaryContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReadBinaryContent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.CanReadBinaryContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanReadBinaryContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReadBinaryContent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReadBinaryContent : bool" Usage="System.Xml.XmlReader.CanReadBinaryContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-415">取得值，這個值表示 <see cref="T:System.Xml.XmlReader" /> 是否會實作二進位內容讀取方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-415">Gets a value indicating whether the <see cref="T:System.Xml.XmlReader" /> implements the binary content read methods.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aee5-416">如果實作二進位內容讀取方法，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-416">
              <see langword="true" /> if the binary content read methods are implemented; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-417">二進位內容讀取方法包括<xref:System.Xml.XmlReader.ReadContentAsBase64%2A>， <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A>， <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A>，和<xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-417">The binary content read methods include the <xref:System.Xml.XmlReader.ReadContentAsBase64%2A>, <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A>, <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A>, and <xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A> methods.</span></span> <span data-ttu-id="3aee5-418">如果這個屬性會傳回`false`<xref:System.NotSupportedException>任何二進位檔的讀取時，會傳回呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-418">If this property returns `false` a <xref:System.NotSupportedException> is returned when any of the binary read methods is called.</span></span>  
  
 <span data-ttu-id="3aee5-419">所有 Microsoft.NET Framework 實作<xref:System.Xml.XmlReader>類別傳回`true`這個屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-419">All Microsoft .NET Framework implementations of the <xref:System.Xml.XmlReader> class return `true` for this property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-420">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-420">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-421">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-421">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadValueChunk">
      <MemberSignature Language="C#" Value="public virtual bool CanReadValueChunk { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReadValueChunk" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.CanReadValueChunk" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanReadValueChunk As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReadValueChunk { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReadValueChunk : bool" Usage="System.Xml.XmlReader.CanReadValueChunk" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-422">取得值，表示 <see cref="T:System.Xml.XmlReader" /> 是否會實作 <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-422">Gets a value indicating whether the <see cref="T:System.Xml.XmlReader" /> implements the <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aee5-423">如果 <see cref="T:System.Xml.XmlReader" /> 會實作 <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> 方法，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-423">
              <see langword="true" /> if the <see cref="T:System.Xml.XmlReader" /> implements the <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> method; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-424">文字剖析<xref:System.Xml.XmlReader>靜態所建立的物件<xref:System.Xml.XmlReader.Create%2A>方法永遠會傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-424">Text parsing <xref:System.Xml.XmlReader> objects that were created from the static <xref:System.Xml.XmlReader.Create%2A> method always return `true`.</span></span> <span data-ttu-id="3aee5-425">所有其他 Microsoft.NET Framework 實作<xref:System.Xml.XmlReader>類別，包括<xref:System.Xml.XmlTextReader>類別中，傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-425">All other Microsoft .NET Framework implementations of the <xref:System.Xml.XmlReader> class, including the <xref:System.Xml.XmlTextReader> class, return `false`.</span></span>  
  
 <span data-ttu-id="3aee5-426">如果這個屬性會傳回`false`<xref:System.NotSupportedException>時，會傳回<xref:System.Xml.XmlReader.ReadValueChunk%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-426">If this property returns `false` a <xref:System.NotSupportedException> is returned when the <xref:System.Xml.XmlReader.ReadValueChunk%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-427">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-427">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-428">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-428">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanResolveEntity">
      <MemberSignature Language="C#" Value="public virtual bool CanResolveEntity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanResolveEntity" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.CanResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanResolveEntity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanResolveEntity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanResolveEntity : bool" Usage="System.Xml.XmlReader.CanResolveEntity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-429">取得值，指出這個讀取器是否可以剖析和解析實體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-429">Gets a value indicating whether this reader can parse and resolve entities.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aee5-430">如果讀取器可以剖析和解析實體，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-430">
              <see langword="true" /> if the reader can parse and resolve entities; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-431">這個屬性一律傳回`false`實作的<xref:System.Xml.XmlReader>不支援 DTD 資訊。</span><span class="sxs-lookup"><span data-stu-id="3aee5-431">This property always returns `false` for implementations of <xref:System.Xml.XmlReader> that do not support DTD information.</span></span> <span data-ttu-id="3aee5-432">在此情況下，呼叫<xref:System.Xml.XmlReader.ResolveEntity%2A>會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3aee5-432">In this case, calling <xref:System.Xml.XmlReader.ResolveEntity%2A> throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-433">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-433">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-434">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-434">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="xmlReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-435">在衍生類別中覆寫時，將 <see cref="P:System.Xml.XmlReader.ReadState" /> 變更為 <see cref="F:System.Xml.ReadState.Closed" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-435">When overridden in a derived class, changes the <see cref="P:System.Xml.XmlReader.ReadState" /> to <see cref="F:System.Xml.ReadState.Closed" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-436">這個方法也會釋放讀取期間所保留的任何資源。</span><span class="sxs-lookup"><span data-stu-id="3aee5-436">This method also releases any resources held during reading.</span></span> <span data-ttu-id="3aee5-437">如果<xref:System.Xml.XmlReader.Close%2A>已經被呼叫，會執行任何動作。</span><span class="sxs-lookup"><span data-stu-id="3aee5-437">If <xref:System.Xml.XmlReader.Close%2A> has already been called, no action is performed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-438">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-438">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-439">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-439">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-440">建立新的 <see cref="T:System.Xml.XmlReader" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-440">Creates a new <see cref="T:System.Xml.XmlReader" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-441">大部分<xref:System.Xml.XmlReader.Create%2A>多載包含`settings`接受參數<xref:System.Xml.XmlReaderSettings>物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-441">Most of the <xref:System.Xml.XmlReader.Create%2A> overloads include a `settings` parameter that accepts an <xref:System.Xml.XmlReaderSettings> object.</span></span> <span data-ttu-id="3aee5-442">您可以使用這個物件：</span><span class="sxs-lookup"><span data-stu-id="3aee5-442">You can use this object to:</span></span>  
  
-   <span data-ttu-id="3aee5-443">指定您想要支援哪些功能<xref:System.Xml.XmlReader>物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-443">Specify which features you want supported on the <xref:System.Xml.XmlReader> object.</span></span>  
  
-   <span data-ttu-id="3aee5-444">重複使用<xref:System.Xml.XmlReaderSettings>物件來建立多個讀取器。</span><span class="sxs-lookup"><span data-stu-id="3aee5-444">Reuse the <xref:System.Xml.XmlReaderSettings> object to create multiple readers.</span></span> <span data-ttu-id="3aee5-445">您可以使用相同設定來建立具有相同功能的多個讀取器。</span><span class="sxs-lookup"><span data-stu-id="3aee5-445">You can use the same settings to create multiple readers with the same functionality.</span></span> <span data-ttu-id="3aee5-446">或者，您可以修改的設定上<xref:System.Xml.XmlReaderSettings>執行個體，並建立新的讀取器與一組不同的功能。</span><span class="sxs-lookup"><span data-stu-id="3aee5-446">Or, you can modify the settings on an <xref:System.Xml.XmlReaderSettings> instance and create a new reader with a different set of features.</span></span>  
  
-   <span data-ttu-id="3aee5-447">將功能加入現有的 XML 讀取器。</span><span class="sxs-lookup"><span data-stu-id="3aee5-447">Add features to an existing XML reader.</span></span> <span data-ttu-id="3aee5-448"><xref:System.Xml.XmlReader.Create%2A> 方法可以接受其他 <xref:System.Xml.XmlReader> 物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-448">The <xref:System.Xml.XmlReader.Create%2A> method can accept another <xref:System.Xml.XmlReader> object.</span></span> <span data-ttu-id="3aee5-449">基礎<xref:System.Xml.XmlReader>物件可以是使用者定義的讀取器<xref:System.Xml.XmlTextReader>物件，或另一個<xref:System.Xml.XmlReader>您想要加入其他功能的執行個體。</span><span class="sxs-lookup"><span data-stu-id="3aee5-449">The underlying <xref:System.Xml.XmlReader> object can be a user-defined reader, a <xref:System.Xml.XmlTextReader> object, or another <xref:System.Xml.XmlReader> instance that you want to add additional features to.</span></span>  
  
-   <span data-ttu-id="3aee5-450">充分利用功能，例如更好的一致性檢查及合規性[XML 1.0 （第四版）](https://www.w3.org/TR/2006/REC-xml-20060816/)建議僅適用於<xref:System.Xml.XmlReader>建立的靜態物件<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-450">Take full advantage of features such as better conformance checking and compliance to the [XML 1.0 (fourth edition)](https://www.w3.org/TR/2006/REC-xml-20060816/)recommendation that are available only on <xref:System.Xml.XmlReader> objects created by the static <xref:System.Xml.XmlReader.Create%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3aee5-451">雖然.NET Framework 包含的具體實作<xref:System.Xml.XmlReader>類別，例如<xref:System.Xml.XmlTextReader>， <xref:System.Xml.XmlNodeReader>，而<xref:System.Xml.XmlValidatingReader>類別，建議您建立<xref:System.Xml.XmlReader>執行個體使用<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-451">Although the .NET Framework includes concrete implementations of the <xref:System.Xml.XmlReader> class, such as the <xref:System.Xml.XmlTextReader>, <xref:System.Xml.XmlNodeReader>, and the <xref:System.Xml.XmlValidatingReader> classes, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A> method.</span></span>  
  
## <a name="default-settings"></a><span data-ttu-id="3aee5-452">預設設定</span><span class="sxs-lookup"><span data-stu-id="3aee5-452">Default settings</span></span>  
 <span data-ttu-id="3aee5-453">如果您使用<xref:System.Xml.XmlReader.Create%2A>不接受多載<xref:System.Xml.XmlReaderSettings>物件時，會使用下列的預設讀取器設定：</span><span class="sxs-lookup"><span data-stu-id="3aee5-453">If you use a <xref:System.Xml.XmlReader.Create%2A> overload that doesn't accept a <xref:System.Xml.XmlReaderSettings> object, the following default reader settings are used:</span></span>  
  
|<span data-ttu-id="3aee5-454">設定</span><span class="sxs-lookup"><span data-stu-id="3aee5-454">Setting</span></span>|<span data-ttu-id="3aee5-455">預設</span><span class="sxs-lookup"><span data-stu-id="3aee5-455">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlReaderSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlReaderSettings.IgnoreComments%2A>|`false`|  
|<xref:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions%2A>|`false`|  
|<xref:System.Xml.XmlReaderSettings.IgnoreWhitespace%2A>|`false`|  
|<xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A>|<span data-ttu-id="3aee5-456">0</span><span class="sxs-lookup"><span data-stu-id="3aee5-456">0</span></span>|  
|<xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A>|<span data-ttu-id="3aee5-457">0</span><span class="sxs-lookup"><span data-stu-id="3aee5-457">0</span></span>|  
|<xref:System.Xml.XmlReaderSettings.NameTable%2A>|`null`|  
|<xref:System.Xml.XmlReaderSettings.DtdProcessing%2A>|<xref:System.Xml.DtdProcessing.Prohibit>|  
|<xref:System.Xml.XmlReaderSettings.Schemas%2A>|<span data-ttu-id="3aee5-458">空白的 <xref:System.Xml.Schema.XmlSchemaSet> 物件</span><span class="sxs-lookup"><span data-stu-id="3aee5-458">An empty <xref:System.Xml.Schema.XmlSchemaSet> object</span></span>|  
|<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>|<span data-ttu-id="3aee5-459"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> 已啟用</span><span class="sxs-lookup"><span data-stu-id="3aee5-459"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> enabled</span></span>|  
|<xref:System.Xml.XmlReaderSettings.ValidationType%2A>|<xref:System.Xml.ValidationType.None>|  
|<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>|<span data-ttu-id="3aee5-460">新的 <xref:System.Xml.XmlUrlResolver> 物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-460">A new <xref:System.Xml.XmlUrlResolver> object.</span></span>  <span data-ttu-id="3aee5-461">從.NET Framework 4.5.2 開始，此設定具有預設值是`null`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-461">Starting with the .NET Framework 4.5.2, this setting has a default value of `null`.</span></span>|  
  
## <a name="settings-for-common-scenarios"></a><span data-ttu-id="3aee5-462">設定適用於常見案例</span><span class="sxs-lookup"><span data-stu-id="3aee5-462">Settings for common scenarios</span></span>  
 <span data-ttu-id="3aee5-463">以下是<xref:System.Xml.XmlReaderSettings>您應該設定的一些典型的 XML 讀取器案例的屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-463">Here are the <xref:System.Xml.XmlReaderSettings> properties you should set for some of the typical XML reader scenarios.</span></span>  
  
|<span data-ttu-id="3aee5-464">需求</span><span class="sxs-lookup"><span data-stu-id="3aee5-464">Requirement</span></span>|<span data-ttu-id="3aee5-465">設定</span><span class="sxs-lookup"><span data-stu-id="3aee5-465">Set</span></span>|  
|-----------------|---------|  
|<span data-ttu-id="3aee5-466">資料必須是語式正確的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-466">Data must be a well-formed XML document.</span></span>|<span data-ttu-id="3aee5-467"><xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> 若要<xref:System.Xml.ConformanceLevel.Document>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-467"><xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> to <xref:System.Xml.ConformanceLevel.Document>.</span></span>|  
|<span data-ttu-id="3aee5-468">資料必須是語式正確的 XML 剖析實體。</span><span class="sxs-lookup"><span data-stu-id="3aee5-468">Data must be a well-formed XML parsed entity.</span></span>|<span data-ttu-id="3aee5-469"><xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> 若要<xref:System.Xml.ConformanceLevel.Fragment>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-469"><xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> to <xref:System.Xml.ConformanceLevel.Fragment>.</span></span>|  
|<span data-ttu-id="3aee5-470">資料必須根據 DTD 進行驗證。</span><span class="sxs-lookup"><span data-stu-id="3aee5-470">Data must be validated against a DTD.</span></span>|<span data-ttu-id="3aee5-471"><xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> 至 <xref:System.Xml.DtdProcessing.Parse></span><span class="sxs-lookup"><span data-stu-id="3aee5-471"><xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> to <xref:System.Xml.DtdProcessing.Parse></span></span><br /><span data-ttu-id="3aee5-472"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> 若要<xref:System.Xml.ValidationType.DTD>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-472"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> to <xref:System.Xml.ValidationType.DTD>.</span></span>|  
|<span data-ttu-id="3aee5-473">資料必須根據 XML 結構描述進行驗證。</span><span class="sxs-lookup"><span data-stu-id="3aee5-473">Data must be validated against an XML schema.</span></span>|<span data-ttu-id="3aee5-474"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> 至 <xref:System.Xml.ValidationType.Schema></span><span class="sxs-lookup"><span data-stu-id="3aee5-474"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> to <xref:System.Xml.ValidationType.Schema></span></span><br /><span data-ttu-id="3aee5-475"><xref:System.Xml.XmlReaderSettings.Schemas%2A> 若要<xref:System.Xml.Schema.XmlSchemaSet>用來驗證。</span><span class="sxs-lookup"><span data-stu-id="3aee5-475"><xref:System.Xml.XmlReaderSettings.Schemas%2A> to the <xref:System.Xml.Schema.XmlSchemaSet> to use for validation.</span></span> <span data-ttu-id="3aee5-476">請注意，<xref:System.Xml.XmlReader>不支援 XML 資料精簡 (XDR) 結構描述驗證。</span><span class="sxs-lookup"><span data-stu-id="3aee5-476">Note that <xref:System.Xml.XmlReader> doesn't support XML-Data Reduced (XDR) schema validation.</span></span>|  
|<span data-ttu-id="3aee5-477">資料必須根據內嵌 XML 結構描述進行驗證。</span><span class="sxs-lookup"><span data-stu-id="3aee5-477">Data must be validated against an inline XML schema.</span></span>|<span data-ttu-id="3aee5-478"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> 至 <xref:System.Xml.ValidationType.Schema></span><span class="sxs-lookup"><span data-stu-id="3aee5-478"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> to <xref:System.Xml.ValidationType.Schema></span></span><br /><span data-ttu-id="3aee5-479"><xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> 若要<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-479"><xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> to <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>.</span></span>|  
|<span data-ttu-id="3aee5-480">型別支援。</span><span class="sxs-lookup"><span data-stu-id="3aee5-480">Type support.</span></span>|<span data-ttu-id="3aee5-481"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> 至 <xref:System.Xml.ValidationType.Schema></span><span class="sxs-lookup"><span data-stu-id="3aee5-481"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> to <xref:System.Xml.ValidationType.Schema></span></span><br /><span data-ttu-id="3aee5-482"><xref:System.Xml.XmlReaderSettings.Schemas%2A> 若要<xref:System.Xml.Schema.XmlSchemaSet>使用。</span><span class="sxs-lookup"><span data-stu-id="3aee5-482"><xref:System.Xml.XmlReaderSettings.Schemas%2A> to the <xref:System.Xml.Schema.XmlSchemaSet> to use.</span></span>|  
  
 <span data-ttu-id="3aee5-483"><xref:System.Xml.XmlReader> 不支援 XML 資料精簡 (XDR) 結構描述驗證。</span><span class="sxs-lookup"><span data-stu-id="3aee5-483"><xref:System.Xml.XmlReader> doesn't support XML-Data Reduced (XDR) schema validation.</span></span>  
  
## <a name="asynchronous-programming"></a><span data-ttu-id="3aee5-484">非同步程式設計</span><span class="sxs-lookup"><span data-stu-id="3aee5-484">Asynchronous programming</span></span>  
 <span data-ttu-id="3aee5-485">在同步模式中，<xref:System.Xml.XmlReader.Create%2A>方法會讀取檔案、 資料流或文字讀取器的緩衝區中的第一個區塊的資料。</span><span class="sxs-lookup"><span data-stu-id="3aee5-485">In synchronous mode, the <xref:System.Xml.XmlReader.Create%2A> method reads the first chunk of data from the buffer of the file, stream, or text reader.</span></span> <span data-ttu-id="3aee5-486">如果 I/O 作業失敗，這可能會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3aee5-486">This may throw an exception if an I/O operation fails.</span></span> <span data-ttu-id="3aee5-487">在非同步模式中，第一項 I/O 作業發生在讀取作業，因此讀取的作業發生時，會擲回例外狀況發生。</span><span class="sxs-lookup"><span data-stu-id="3aee5-487">In asynchronous mode, the first I/O operation occurs with a read operation, so exceptions that arise will be thrown when the read operation occurs.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="3aee5-488">安全性考量</span><span class="sxs-lookup"><span data-stu-id="3aee5-488">Security considerations</span></span>  
 <span data-ttu-id="3aee5-489">根據預設，<xref:System.Xml.XmlReader>使用<xref:System.Xml.XmlUrlResolver>使用沒有使用者認證，若要開啟資源的物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-489">By default, the <xref:System.Xml.XmlReader> uses an <xref:System.Xml.XmlUrlResolver> object with no user credentials to open resources.</span></span> <span data-ttu-id="3aee5-490">這表示根據預設，XML 讀取器可以存取並不需要認證的任何位置。</span><span class="sxs-lookup"><span data-stu-id="3aee5-490">This means that, by default, the XML reader can access any location that doesn't require credentials.</span></span> <span data-ttu-id="3aee5-491">使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>屬性，來控制資源的存取權：</span><span class="sxs-lookup"><span data-stu-id="3aee5-491">Use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to control access to resources:</span></span>  
  
-   <span data-ttu-id="3aee5-492">設定<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>至<xref:System.Xml.XmlSecureResolver>物件，以限制 XML 讀取器可以存取的資源。</span><span class="sxs-lookup"><span data-stu-id="3aee5-492">Set <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> to an <xref:System.Xml.XmlSecureResolver> object to restrict the resources that the XML reader can access.</span></span>  
  
 <span data-ttu-id="3aee5-493">-或-</span><span class="sxs-lookup"><span data-stu-id="3aee5-493">-or-</span></span>  
  
-   <span data-ttu-id="3aee5-494">設定<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>至`null`以防止開啟的任何外部資源的 XML 讀取器。</span><span class="sxs-lookup"><span data-stu-id="3aee5-494">Set <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> to `null` to prevent the XML reader from opening any external resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-495">這個範例會建立 XML 讀取器會去除不顯著泛空白字元、 去除註解，並執行片段層級的一致性檢查。</span><span class="sxs-lookup"><span data-stu-id="3aee5-495">This example creates an XML reader that strips insignificant white space, strips comments, and performs fragment-level conformance checking.</span></span>  
  
 [!code-csharp[XmlReader.Create#11](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#11)]
 [!code-vb[XmlReader.Create#11](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#11)]  
  
 <span data-ttu-id="3aee5-496">下列範例會使用<xref:System.Xml.XmlUrlResolver>具有預設認證來存取檔案。</span><span class="sxs-lookup"><span data-stu-id="3aee5-496">The following example uses an <xref:System.Xml.XmlUrlResolver> with default credentials to access a file.</span></span>  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 [!code-cpp[XmlReaderSettings.cctor#2](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#2)]
 [!code-csharp[XmlReaderSettings.cctor#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#2)]
 [!code-vb[XmlReaderSettings.cctor#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#2)]  
  
 <span data-ttu-id="3aee5-497">下列程式碼包裝在另一個讀取器讀取器執行個體。</span><span class="sxs-lookup"><span data-stu-id="3aee5-497">The following code wraps a reader instance within another reader.</span></span>  
  
 [!code-csharp[XmlReader.Create#13](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#13)]
 [!code-vb[XmlReader.Create#13](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#13)]  
  
 <span data-ttu-id="3aee5-498">此範例中鏈結讀取器以加入 DTD 和 XML 結構描述驗證。</span><span class="sxs-lookup"><span data-stu-id="3aee5-498">This example chains readers to add DTD and XML schema validation.</span></span>  
  
 [!code-csharp[XmlReader.Create#12](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#12)]
 [!code-vb[XmlReader.Create#12](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.Stream input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.Stream input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As Stream) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::Stream ^ input);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="3aee5-499">包含 XML 資料的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-499">The stream that contains the XML data.</span>
          </span>
          <span data-ttu-id="3aee5-500">
            <see cref="T:System.Xml.XmlReader" /> 會掃描資料流的前幾個位元組，以尋找位元組順序標記或其他編碼符號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-500">The <see cref="T:System.Xml.XmlReader" /> scans the first bytes of the stream looking for a byte order mark or other sign of encoding.</span>
          </span>
          <span data-ttu-id="3aee5-501">決定編碼後，會使用該編碼繼續讀取資料流，處理流程也會繼續將輸入剖析成 (Unicode) 字元的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-501">When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-502">使用指定的資料流，以預設設定建立新的 <see cref="T:System.Xml.XmlReader" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-502">Creates a new <see cref="T:System.Xml.XmlReader" /> instance using the specified stream with default settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-503">用以在資料流中讀取 XML 資料的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-503">An object that is used to read the XML data in the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-504"><xref:System.Xml.XmlReaderSettings>物件使用預設設定用來建立讀取器。</span><span class="sxs-lookup"><span data-stu-id="3aee5-504">An <xref:System.Xml.XmlReaderSettings> object with default settings is used to create the reader.</span></span> <span data-ttu-id="3aee5-505">如果您想要指定要建立的讀取器上支援的功能，使用採用的多載<xref:System.Xml.XmlReaderSettings>物件做為其引數，其中，並傳入<xref:System.Xml.XmlReaderSettings>具有正確的設定物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-505">If you wish to specify the features to support on the created reader, use the overload that takes an <xref:System.Xml.XmlReaderSettings> object as one of its arguments, and pass in an <xref:System.Xml.XmlReaderSettings> object with the correct settings.</span></span>  
  
 <span data-ttu-id="3aee5-506">預設值<xref:System.Xml.XmlUrlResolver>以不含認證用來存取任何外部的資源，例如文件類型定義 (DTD)、 實體、 結構描述等等。</span><span class="sxs-lookup"><span data-stu-id="3aee5-506">A default <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3aee5-507">從.NET Framework 4.5.2，沒有預設值開始<xref:System.Xml.XmlUrlResolver>提供。</span><span class="sxs-lookup"><span data-stu-id="3aee5-507">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="3aee5-508">如果您的解決方案以目標為.NET Framework 4.5.2 或更新版本，指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-508">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3aee5-509">如果在需要驗證的網路資源位於外部的資源，請指定<xref:System.Xml.XmlResolver>具有必要的認證使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-509">If the external resource is located on a network resource that requires authentication, specify an <xref:System.Xml.XmlResolver> with the necessary credentials using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3aee5-510">建立<xref:System.Xml.XmlReader>物件展開實體參考，並執行新行字元的 XML 正規化。</span><span class="sxs-lookup"><span data-stu-id="3aee5-510">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-511">下列範例會建立<xref:System.Xml.XmlReader>物件，以讀取來自<xref:System.IO.FileStream>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-511">The following example creates an <xref:System.Xml.XmlReader> object that reads from a <xref:System.IO.FileStream>.</span></span>  
  
 [!code-csharp[XmlReader.Create#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#8)]
 [!code-vb[XmlReader.Create#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-512">
            <paramref name="input" /> 值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-512">The <paramref name="input" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3aee5-513">
            <see cref="T:System.Xml.XmlReader" /> 沒有足夠的權限可以存取 XML 資料的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-513">The <see cref="T:System.Xml.XmlReader" /> does not have sufficient permissions to access the location of the XML data.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.TextReader input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.TextReader input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As TextReader) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::TextReader ^ input);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.TextReader -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="3aee5-514">要從中讀取 XML 資料的文字閱讀器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-514">The text reader from which to read the XML data.</span>
          </span>
          <span data-ttu-id="3aee5-515">因為文字閱讀器會傳回 Unicode 字元的資料流，所以 XML 讀取器不會使用 XML 宣告中所指定的編碼方式，來解碼資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-515">A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration is not used by the XML reader to decode the data stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-516">使用指定的文字讀取器，建立新的 <see cref="T:System.Xml.XmlReader" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-516">Creates a new <see cref="T:System.Xml.XmlReader" /> instance by using the specified text reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-517">用以在資料流中讀取 XML 資料的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-517">An object that is used to read the XML data in the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-518"><xref:System.Xml.XmlReaderSettings>物件使用預設設定用來建立讀取器。</span><span class="sxs-lookup"><span data-stu-id="3aee5-518">An <xref:System.Xml.XmlReaderSettings> object with default settings is used to create the reader.</span></span> <span data-ttu-id="3aee5-519">如果您想要指定要建立的讀取器上支援的功能，使用採用的多載<xref:System.Xml.XmlReaderSettings>物件做為其引數，其中，並傳入<xref:System.Xml.XmlReaderSettings>具有正確的設定物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-519">If you wish to specify the features to support on the created reader, use the overload that takes an <xref:System.Xml.XmlReaderSettings> object as one of its arguments, and pass in an <xref:System.Xml.XmlReaderSettings> object with the correct settings.</span></span>  
  
 <span data-ttu-id="3aee5-520">預設值<xref:System.Xml.XmlUrlResolver>以不含認證用來存取任何外部的資源，例如文件類型定義 (DTD)、 實體、 結構描述等等。</span><span class="sxs-lookup"><span data-stu-id="3aee5-520">A default <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3aee5-521">從.NET Framework 4.5.2，沒有預設值開始<xref:System.Xml.XmlUrlResolver>提供。</span><span class="sxs-lookup"><span data-stu-id="3aee5-521">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="3aee5-522">如果您的解決方案以目標為.NET Framework 4.5.2 或更新版本，指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-522">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3aee5-523">如果在需要驗證的網路資源位於外部的資源，請指定<xref:System.Xml.XmlResolver>具有必要的認證使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-523">If the external resource is located on a network resource that requires authentication, specify an <xref:System.Xml.XmlResolver> with the necessary credentials using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3aee5-524">建立<xref:System.Xml.XmlReader>物件展開實體參考，並執行新行字元的 XML 正規化。</span><span class="sxs-lookup"><span data-stu-id="3aee5-524">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-525">下列範例會使用<xref:System.IO.StringReader>類別以讀取 XML 字串。</span><span class="sxs-lookup"><span data-stu-id="3aee5-525">The following example uses the <xref:System.IO.StringReader> class to read an XML string.</span></span>  
  
 [!code-csharp[XmlReader.Create#7](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#7)]
 [!code-vb[XmlReader.Create#7](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-526">
            <paramref name="input" /> 值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-526">The <paramref name="input" /> value is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (string inputUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(string inputUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (inputUri As String) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::String ^ inputUri);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create inputUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputUri">
          <span data-ttu-id="3aee5-527">包含 XML 資料之檔案的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-527">The URI for the file that contains the XML data.</span>
          </span>
          <span data-ttu-id="3aee5-528">
            <see cref="T:System.Xml.XmlUrlResolver" /> 類別可用來將路徑轉換成正式的資料代表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-528">The <see cref="T:System.Xml.XmlUrlResolver" /> class is used to convert the path to a canonical data representation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-529">使用指定的 URI，建立新的 <see cref="T:System.Xml.XmlReader" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-529">Creates a new <see cref="T:System.Xml.XmlReader" /> instance with specified URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-530">用以在資料流中讀取 XML 資料的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-530">An object that is used to read the XML data in the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-531"><xref:System.Xml.XmlReaderSettings>物件使用預設設定用來建立讀取器。</span><span class="sxs-lookup"><span data-stu-id="3aee5-531">An <xref:System.Xml.XmlReaderSettings> object with default settings is used to create the reader.</span></span> <span data-ttu-id="3aee5-532">如果您想要指定要建立的讀取器上支援的功能，使用採用的多載<xref:System.Xml.XmlReaderSettings>物件做為其引數，其中，並傳入<xref:System.Xml.XmlReaderSettings>具有正確的設定物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-532">If you wish to specify the features to support on the created reader, use the overload that takes an <xref:System.Xml.XmlReaderSettings> object as one of its arguments, and pass in an <xref:System.Xml.XmlReaderSettings> object with the correct settings.</span></span>  
  
 <span data-ttu-id="3aee5-533">預設值<xref:System.Xml.XmlUrlResolver>以不含認證用來存取任何外部的資源，例如文件類型定義 (DTD)、 實體、 結構描述等等。</span><span class="sxs-lookup"><span data-stu-id="3aee5-533">A default <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3aee5-534">從.NET Framework 4.5.2，沒有預設值開始<xref:System.Xml.XmlUrlResolver>提供。</span><span class="sxs-lookup"><span data-stu-id="3aee5-534">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="3aee5-535">如果您的解決方案以目標為.NET Framework 4.5.2 或更新版本，指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-535">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3aee5-536">如果在需要驗證的網路資源位於外部的資源，請指定<xref:System.Xml.XmlResolver>具有必要的認證使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-536">If the external resource is located on a network resource that requires authentication, specify an <xref:System.Xml.XmlResolver> with the necessary credentials using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3aee5-537">建立<xref:System.Xml.XmlReader>物件展開實體參考，並執行新行字元的 XML 正規化。</span><span class="sxs-lookup"><span data-stu-id="3aee5-537">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-538">下列範例會建立<xref:System.Xml.XmlReader>讀取 XML 資料檔的 URI 所指定的物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-538">The following example creates an <xref:System.Xml.XmlReader> object that reads XML data file specified by the URI.</span></span>  
  
 [!code-csharp[XmlReader.Create#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#6)]
 [!code-vb[XmlReader.Create#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-539">
            <paramref name="inputUri" /> 值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-539">The <paramref name="inputUri" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3aee5-540">
            <see cref="T:System.Xml.XmlReader" /> 沒有足夠的權限可以存取 XML 資料的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-540">The <see cref="T:System.Xml.XmlReader" /> does not have sufficient permissions to access the location of the XML data.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="3aee5-541">URI 所識別的檔案不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-541">The file identified by the URI does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="3aee5-542">
            <block subset="none" type="note">
              <para> 在 [適用於 Windows 市集應用程式的 .NET] (http://go.microsoft.com/fwlink/?LinkID=247912) 或 [可攜式類別庫] (~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) 中，改為攔截基底類別例外狀況 <see cref="T:System.FormatException" />。</para>
            </block>  URI 格式不正確。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-542">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.FormatException" />, instead.  </para>
              </block>  The URI format is not correct.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.Stream input, System.Xml.XmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.Stream input, class System.Xml.XmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As Stream, settings As XmlReaderSettings) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::Stream ^ input, System::Xml::XmlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream * System.Xml.XmlReaderSettings -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create (input, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="3aee5-543">包含 XML 資料的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-543">The stream that contains the XML data.</span>
          </span>
          <span data-ttu-id="3aee5-544">
            <see cref="T:System.Xml.XmlReader" /> 會掃描資料流的前幾個位元組，以尋找位元組順序標記或其他編碼符號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-544">The <see cref="T:System.Xml.XmlReader" /> scans the first bytes of the stream looking for a byte order mark or other sign of encoding.</span>
          </span>
          <span data-ttu-id="3aee5-545">決定編碼後，會使用該編碼繼續讀取資料流，處理流程也會繼續將輸入剖析成 (Unicode) 字元的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-545">When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="3aee5-546">新 <see cref="T:System.Xml.XmlReader" /> 執行個體的設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-546">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span>
          </span>
          <span data-ttu-id="3aee5-547">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-547">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-548">使用指定的資料流及設定，建立新的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-548">Creates a new <see cref="T:System.Xml.XmlReader" /> instance with the specified stream and settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-549">用以在資料流中讀取 XML 資料的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-549">An object that is used to read the XML data in the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-550">根據預設<xref:System.Xml.XmlUrlResolver>以不含認證用來存取任何外部的資源，例如文件類型定義 (DTD)、 實體、 結構描述等等。</span><span class="sxs-lookup"><span data-stu-id="3aee5-550">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3aee5-551">從.NET Framework 4.5.2，沒有預設值開始<xref:System.Xml.XmlUrlResolver>提供。</span><span class="sxs-lookup"><span data-stu-id="3aee5-551">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="3aee5-552">如果您的解決方案以目標為.NET Framework 4.5.2 或更新版本，指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-552">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3aee5-553">如果在需要驗證的網路資源位於外部的資源，請使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>屬性來指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="3aee5-553">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3aee5-554">您可以使用其中一種下列方法來控制哪些資源<xref:System.Xml.XmlReader>可以存取：</span><span class="sxs-lookup"><span data-stu-id="3aee5-554">You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:</span></span>  
>   
>  -   <span data-ttu-id="3aee5-555">藉由將 <xref:System.Xml.XmlReader> 屬性設為 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 物件，限制 <xref:System.Xml.XmlSecureResolver> 可以存取的資源。</span><span class="sxs-lookup"><span data-stu-id="3aee5-555">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
>   
>  <span data-ttu-id="3aee5-556">-或-</span><span class="sxs-lookup"><span data-stu-id="3aee5-556">-or-</span></span>  
>   
>  -   <span data-ttu-id="3aee5-557">藉由將 <xref:System.Xml.XmlReader> 屬性設為 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>，來禁止 `null` 開啟外部資源。</span><span class="sxs-lookup"><span data-stu-id="3aee5-557">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="3aee5-558">建立<xref:System.Xml.XmlReader>物件展開實體參考，並執行新行字元的 XML 正規化。</span><span class="sxs-lookup"><span data-stu-id="3aee5-558">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-559">
            <paramref name="input" /> 值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-559">The <paramref name="input" /> value is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.TextReader input, System.Xml.XmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.TextReader input, class System.Xml.XmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As TextReader, settings As XmlReaderSettings) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::TextReader ^ input, System::Xml::XmlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.TextReader * System.Xml.XmlReaderSettings -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create (input, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="3aee5-560">要從中讀取 XML 資料的文字閱讀器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-560">The text reader from which to read the XML data.</span>
          </span>
          <span data-ttu-id="3aee5-561">因為文字閱讀器會傳回 Unicode 字元的資料流，所以 XML 讀取器不會使用 XML 宣告中所指定的編碼方式，來解碼資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-561">A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the XML reader to decode the data stream.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="3aee5-562">新的 <see cref="T:System.Xml.XmlReader" /> 的設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-562">The settings for the new <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
          <span data-ttu-id="3aee5-563">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-563">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-564">使用指定的文字讀取器及設定，建立新的 <see cref="T:System.Xml.XmlReader" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-564">Creates a new <see cref="T:System.Xml.XmlReader" /> instance by using the specified text reader and settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-565">用以在資料流中讀取 XML 資料的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-565">An object that is used to read the XML data in the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-566">根據預設<xref:System.Xml.XmlUrlResolver>以不含認證用來存取任何外部的資源，例如文件類型定義 (DTD)、 實體、 結構描述等等。</span><span class="sxs-lookup"><span data-stu-id="3aee5-566">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3aee5-567">從.NET Framework 4.5.2，沒有預設值開始<xref:System.Xml.XmlUrlResolver>提供。</span><span class="sxs-lookup"><span data-stu-id="3aee5-567">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="3aee5-568">如果您的解決方案以目標為.NET Framework 4.5.2 或更新版本，指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-568">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3aee5-569">如果在需要驗證的網路資源位於外部的資源，請使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>屬性來指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="3aee5-569">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3aee5-570">您可以使用其中一種下列方法來控制哪些資源<xref:System.Xml.XmlReader>可以存取：</span><span class="sxs-lookup"><span data-stu-id="3aee5-570">You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:</span></span>  
>   
>  -   <span data-ttu-id="3aee5-571">藉由將 <xref:System.Xml.XmlReader> 屬性設為 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 物件，限制 <xref:System.Xml.XmlSecureResolver> 可以存取的資源。</span><span class="sxs-lookup"><span data-stu-id="3aee5-571">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
>   
>  <span data-ttu-id="3aee5-572">-或-</span><span class="sxs-lookup"><span data-stu-id="3aee5-572">-or-</span></span>  
>   
>  -   <span data-ttu-id="3aee5-573">藉由將 <xref:System.Xml.XmlReader> 屬性設為 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>，來禁止 `null` 開啟外部資源。</span><span class="sxs-lookup"><span data-stu-id="3aee5-573">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="3aee5-574">建立<xref:System.Xml.XmlReader>物件展開實體參考，並執行新行字元的 XML 正規化。</span><span class="sxs-lookup"><span data-stu-id="3aee5-574">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-575">
            <paramref name="input" /> 值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-575">The <paramref name="input" /> value is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (string inputUri, System.Xml.XmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(string inputUri, class System.Xml.XmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (inputUri As String, settings As XmlReaderSettings) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::String ^ inputUri, System::Xml::XmlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : string * System.Xml.XmlReaderSettings -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create (inputUri, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="inputUri">
          <span data-ttu-id="3aee5-576">包含 XML 資料之檔案的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-576">The URI for the file containing the XML data.</span>
          </span>
          <span data-ttu-id="3aee5-577">
            <see cref="T:System.Xml.XmlReaderSettings" /> 物件上的 <see cref="T:System.Xml.XmlResolver" /> 物件是用於將路徑轉換成標準資料表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-577">The <see cref="T:System.Xml.XmlResolver" /> object on the <see cref="T:System.Xml.XmlReaderSettings" /> object is used to convert the path to a canonical data representation.</span>
          </span>
          <span data-ttu-id="3aee5-578">如果 <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> 為 <see langword="null" />，則會使用新的 <see cref="T:System.Xml.XmlUrlResolver" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-578">If <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> is <see langword="null" />, a new <see cref="T:System.Xml.XmlUrlResolver" /> object is used.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="3aee5-579">新 <see cref="T:System.Xml.XmlReader" /> 執行個體的設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-579">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span>
          </span>
          <span data-ttu-id="3aee5-580">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-580">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-581">使用指定的 URI 和設定，建立新的 <see cref="T:System.Xml.XmlReader" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-581">Creates a new <see cref="T:System.Xml.XmlReader" /> instance by using the specified URI and settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-582">用以在資料流中讀取 XML 資料的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-582">An object that is used to read the XML data in the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-583">根據預設<xref:System.Xml.XmlUrlResolver>以不含認證用來存取任何外部的資源，例如文件類型定義 (DTD)、 實體、 結構描述等等。</span><span class="sxs-lookup"><span data-stu-id="3aee5-583">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3aee5-584">從.NET Framework 4.5.2，沒有預設值開始<xref:System.Xml.XmlUrlResolver>提供。</span><span class="sxs-lookup"><span data-stu-id="3aee5-584">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="3aee5-585">如果您的解決方案以目標為.NET Framework 4.5.2 或更新版本，指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-585">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3aee5-586">這表示<xref:System.Xml.XmlReader>可以存取任何不需要驗證的位置。</span><span class="sxs-lookup"><span data-stu-id="3aee5-586">This means that the <xref:System.Xml.XmlReader> can access any locations that does not require authentication.</span></span> <span data-ttu-id="3aee5-587">如果在需要驗證的網路資源位於外部的資源，請使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>屬性來指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="3aee5-587">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3aee5-588">您可以限制的資源，<xref:System.Xml.XmlReader>設定，即可存取<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>屬性設<xref:System.Xml.XmlSecureResolver>物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-588">You can restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
  
 <span data-ttu-id="3aee5-589">建立<xref:System.Xml.XmlReader>物件展開實體參考，並執行新行字元的 XML 正規化。</span><span class="sxs-lookup"><span data-stu-id="3aee5-589">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-590">下列範例會建立<xref:System.Xml.XmlReader>支援文件類型定義 (DTD) 驗證的物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-590">The following example creates an <xref:System.Xml.XmlReader> object that supports document type definition (DTD) validation.</span></span>  
  
 [!code-csharp[XmlReader.Create#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#3)]
 [!code-vb[XmlReader.Create#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-591">
            <paramref name="inputUri" /> 值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-591">The <paramref name="inputUri" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="3aee5-592">找不到由 URI 指定的檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-592">The file specified by the URI cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="3aee5-593">
            <block subset="none" type="note">
              <para> 在 [適用於 Windows 市集應用程式的 .NET] (http://go.microsoft.com/fwlink/?LinkID=247912) 或 [可攜式類別庫] (~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) 中，改為攔截基底類別例外狀況 <see cref="T:System.FormatException" />。</para>
            </block>  URI 格式不正確。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-593">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.FormatException" />, instead.  </para>
              </block>  The URI format is not correct.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.Xml.XmlReader reader, System.Xml.XmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.Xml.XmlReader reader, class System.Xml.XmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (reader As XmlReader, settings As XmlReaderSettings) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::Xml::XmlReader ^ reader, System::Xml::XmlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.Xml.XmlReader * System.Xml.XmlReaderSettings -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create (reader, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="3aee5-594">您想要當做基礎 XML 讀取器使用的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-594">The object that you want to use as the underlying XML reader.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="3aee5-595">新 <see cref="T:System.Xml.XmlReader" /> 執行個體的設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-595">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span>
          </span>
          <span data-ttu-id="3aee5-596">
            <see cref="T:System.Xml.XmlReaderSettings" /> 物件的一致性層級必須符合基礎讀取器的一致性層級，或是必須設定為 <see cref="F:System.Xml.ConformanceLevel.Auto" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-596">The conformance level of the <see cref="T:System.Xml.XmlReaderSettings" /> object must either match the conformance level of the underlying reader, or it must be set to <see cref="F:System.Xml.ConformanceLevel.Auto" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-597">使用指定的 XML 讀取器和設定，建立新的 <see cref="T:System.Xml.XmlReader" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-597">Creates a new <see cref="T:System.Xml.XmlReader" /> instance by using the specified XML reader and settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-598">包裝在指定 <see cref="T:System.Xml.XmlReader" /> 物件周圍的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-598">An object that is wrapped around the specified <see cref="T:System.Xml.XmlReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-599">這個方法可讓您將其他功能新增至基礎<xref:System.Xml.XmlReader>物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-599">This method allows you add additional features to an underlying <xref:System.Xml.XmlReader> object.</span></span> <span data-ttu-id="3aee5-600">基礎<xref:System.Xml.XmlReader>物件可以是另一個<xref:System.Xml.XmlReader>所建立的物件<xref:System.Xml.XmlReader.Create%2A>方法，或有<xref:System.Xml.XmlReader>建立使用其中一個具象物件<xref:System.Xml.XmlReader>實作。</span><span class="sxs-lookup"><span data-stu-id="3aee5-600">The underlying <xref:System.Xml.XmlReader> object can be another <xref:System.Xml.XmlReader> object created by the <xref:System.Xml.XmlReader.Create%2A> method, or an <xref:System.Xml.XmlReader> object created using one of the concrete <xref:System.Xml.XmlReader> implementations.</span></span>  
  
 <span data-ttu-id="3aee5-601">預設值<xref:System.Xml.XmlUrlResolver>以不含認證用來存取任何外部的資源，例如結構描述。</span><span class="sxs-lookup"><span data-stu-id="3aee5-601">A default <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a schema.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3aee5-602">從.NET Framework 4.5.2，沒有預設值開始<xref:System.Xml.XmlUrlResolver>提供。</span><span class="sxs-lookup"><span data-stu-id="3aee5-602">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="3aee5-603">如果您的解決方案以目標為.NET Framework 4.5.2 或更新版本，指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-603">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3aee5-604">如果在需要驗證的網路資源位於外部的資源，請指定<xref:System.Xml.XmlResolver>具有必要的認證使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-604">If the external resource is located on a network resource that requires authentication, specify an <xref:System.Xml.XmlResolver> with the necessary credentials using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3aee5-605">您可以使用其中一種下列方法來控制哪些資源<xref:System.Xml.XmlReader>可以存取：</span><span class="sxs-lookup"><span data-stu-id="3aee5-605">You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:</span></span>  
>   
>  -   <span data-ttu-id="3aee5-606">藉由將 <xref:System.Xml.XmlReader> 屬性設為 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 物件，限制 <xref:System.Xml.XmlSecureResolver> 可以存取的資源。</span><span class="sxs-lookup"><span data-stu-id="3aee5-606">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
>   
>  <span data-ttu-id="3aee5-607">-或-</span><span class="sxs-lookup"><span data-stu-id="3aee5-607">-or-</span></span>  
>   
>  -   <span data-ttu-id="3aee5-608">藉由將 <xref:System.Xml.XmlReader> 屬性設為 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>，來禁止 `null` 開啟外部資源。</span><span class="sxs-lookup"><span data-stu-id="3aee5-608">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="3aee5-609">建立<xref:System.Xml.XmlReader>物件展開實體參考，並執行新行字元的 XML 正規化。</span><span class="sxs-lookup"><span data-stu-id="3aee5-609">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-610">下列範例會建立驗證<xref:System.Xml.XmlReader>物件，包裝著<xref:System.Xml.XmlNodeReader>物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-610">The following example creates a validating <xref:System.Xml.XmlReader> object that is wrapped around an <xref:System.Xml.XmlNodeReader> object.</span></span>  
  
 [!code-csharp[XmlReader.Create#5](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#5)]
 [!code-vb[XmlReader.Create#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-611">
            <paramref name="reader" /> 值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-611">The <paramref name="reader" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-612">如果 <see cref="T:System.Xml.XmlReaderSettings" /> 物件所指定的一致性層級與基礎讀取器的一致性層級不一致。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-612">If the <see cref="T:System.Xml.XmlReaderSettings" /> object specifies a conformance level that is not consistent with conformance level of the underlying reader.</span>
          </span>
          <span data-ttu-id="3aee5-613">-或-  基礎 <see cref="T:System.Xml.XmlReader" /> 處於 <see cref="F:System.Xml.ReadState.Error" /> 或 <see cref="F:System.Xml.ReadState.Closed" /> 狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-613">-or-  The underlying <see cref="T:System.Xml.XmlReader" /> is in an <see cref="F:System.Xml.ReadState.Error" /> or <see cref="F:System.Xml.ReadState.Closed" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.Stream input, System.Xml.XmlReaderSettings settings, string baseUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.Stream input, class System.Xml.XmlReaderSettings settings, string baseUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As Stream, settings As XmlReaderSettings, baseUri As String) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::Stream ^ input, System::Xml::XmlReaderSettings ^ settings, System::String ^ baseUri);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream * System.Xml.XmlReaderSettings * string -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create (input, settings, baseUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" />
        <Parameter Name="baseUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="3aee5-614">包含 XML 資料的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-614">The stream that contains the XML data.</span>
          </span>
          <span data-ttu-id="3aee5-615">
            <see cref="T:System.Xml.XmlReader" /> 會掃描資料流的前幾個位元組，以尋找位元組順序標記或其他編碼符號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-615">The <see cref="T:System.Xml.XmlReader" /> scans the first bytes of the stream looking for a byte order mark or other sign of encoding.</span>
          </span>
          <span data-ttu-id="3aee5-616">決定編碼後，會使用該編碼繼續讀取資料流，處理流程也會繼續將輸入剖析成 (Unicode) 字元的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-616">When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="3aee5-617">新 <see cref="T:System.Xml.XmlReader" /> 執行個體的設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-617">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span>
          </span>
          <span data-ttu-id="3aee5-618">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-618">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="baseUri">
          <span data-ttu-id="3aee5-619">所讀取之實體或文件的基底 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-619">The base URI for the entity or document being read.</span>
          </span>
          <span data-ttu-id="3aee5-620">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-620">This value can be <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3aee5-621">**安全性提示**：系統會使用基底 URI 來解析 XML 文件的相對 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-621">**Security Note** The base URI is used to resolve the relative URI of the XML document.</span>
          </span>
          <span data-ttu-id="3aee5-622">請不要使用來自不受信任來源的基底 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-622">Do not use a base URI from an untrusted source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-623">使用指定的資料流、基底 URI 和設定，建立新的 <see cref="T:System.Xml.XmlReader" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-623">Creates a new <see cref="T:System.Xml.XmlReader" /> instance using the specified stream, base URI, and settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-624">用以在資料流中讀取 XML 資料的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-624">An object that is used to read the XML data in the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-625">根據預設<xref:System.Xml.XmlUrlResolver>以不含認證用來存取任何外部的資源，例如文件類型定義 (DTD)、 實體、 結構描述等等。</span><span class="sxs-lookup"><span data-stu-id="3aee5-625">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3aee5-626">從.NET Framework 4.5.2，沒有預設值開始<xref:System.Xml.XmlUrlResolver>提供。</span><span class="sxs-lookup"><span data-stu-id="3aee5-626">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="3aee5-627">如果您的解決方案以目標為.NET Framework 4.5.2 或更新版本，指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-627">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3aee5-628">如果在需要驗證的網路資源位於外部的資源，請使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>屬性來指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="3aee5-628">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3aee5-629">您可以使用其中一種下列方法來控制哪些資源<xref:System.Xml.XmlReader>可以存取：</span><span class="sxs-lookup"><span data-stu-id="3aee5-629">You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:</span></span>  
>   
>  -   <span data-ttu-id="3aee5-630">藉由將 <xref:System.Xml.XmlReader> 屬性設為 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 物件，限制 <xref:System.Xml.XmlSecureResolver> 可以存取的資源。</span><span class="sxs-lookup"><span data-stu-id="3aee5-630">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
>   
>  <span data-ttu-id="3aee5-631">-或-</span><span class="sxs-lookup"><span data-stu-id="3aee5-631">-or-</span></span>  
>   
>  -   <span data-ttu-id="3aee5-632">藉由將 <xref:System.Xml.XmlReader> 屬性設為 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>，來禁止 `null` 開啟外部資源。</span><span class="sxs-lookup"><span data-stu-id="3aee5-632">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="3aee5-633">建立<xref:System.Xml.XmlReader>物件展開實體參考，並執行新行字元的 XML 正規化。</span><span class="sxs-lookup"><span data-stu-id="3aee5-633">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-634">
            <paramref name="input" /> 值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-634">The <paramref name="input" /> value is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.Stream input, System.Xml.XmlReaderSettings settings, System.Xml.XmlParserContext inputContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.Stream input, class System.Xml.XmlReaderSettings settings, class System.Xml.XmlParserContext inputContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As Stream, settings As XmlReaderSettings, inputContext As XmlParserContext) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::Stream ^ input, System::Xml::XmlReaderSettings ^ settings, System::Xml::XmlParserContext ^ inputContext);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream * System.Xml.XmlReaderSettings * System.Xml.XmlParserContext -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create (input, settings, inputContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" />
        <Parameter Name="inputContext" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="3aee5-635">包含 XML 資料的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-635">The stream that contains the XML data.</span>
          </span>
          <span data-ttu-id="3aee5-636">
            <see cref="T:System.Xml.XmlReader" /> 會掃描資料流的前幾個位元組，以尋找位元組順序標記或其他編碼符號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-636">The <see cref="T:System.Xml.XmlReader" /> scans the first bytes of the stream looking for a byte order mark or other sign of encoding.</span>
          </span>
          <span data-ttu-id="3aee5-637">決定編碼後，會使用該編碼繼續讀取資料流，處理流程也會繼續將輸入剖析成 (Unicode) 字元的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-637">When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="3aee5-638">新 <see cref="T:System.Xml.XmlReader" /> 執行個體的設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-638">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span>
          </span>
          <span data-ttu-id="3aee5-639">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-639">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="inputContext">
          <span data-ttu-id="3aee5-640">剖析 XML 片段所需的內容資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-640">The context information required to parse the XML fragment.</span>
          </span>
          <span data-ttu-id="3aee5-641">內容資訊可包含要使用的 <see cref="T:System.Xml.XmlNameTable" />、編碼方式、命名空間範圍、目前的 <c>xml:lang</c> 和 <c>xml:space</c> 範圍、基底 URI，以及文件類型定義。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-641">The context information can include the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, the current <c>xml:lang</c> and <c>xml:space</c> scope, base URI, and document type definition.</span>
          </span>
          <span data-ttu-id="3aee5-642">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-642">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-643">使用剖析用的指定資料流、設定和內容資訊，建立新的 <see cref="T:System.Xml.XmlReader" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-643">Creates a new <see cref="T:System.Xml.XmlReader" /> instance using the specified stream, settings, and context information for parsing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-644">用以在資料流中讀取 XML 資料的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-644">An object that is used to read the XML data in the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-645">根據預設<xref:System.Xml.XmlUrlResolver>以不含認證用來存取任何外部的資源，例如文件類型定義 (DTD)、 實體、 結構描述等等。</span><span class="sxs-lookup"><span data-stu-id="3aee5-645">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3aee5-646">從.NET Framework 4.5.2，沒有預設值開始<xref:System.Xml.XmlUrlResolver>提供。</span><span class="sxs-lookup"><span data-stu-id="3aee5-646">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="3aee5-647">如果您的解決方案以目標為.NET Framework 4.5.2 或更新版本，指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-647">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3aee5-648">如果在需要驗證的網路資源位於外部的資源，請使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>屬性來指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="3aee5-648">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3aee5-649">您可以使用其中一種下列方法來控制哪些資源<xref:System.Xml.XmlReader>可以存取：</span><span class="sxs-lookup"><span data-stu-id="3aee5-649">You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:</span></span>  
>   
>  -   <span data-ttu-id="3aee5-650">藉由將 <xref:System.Xml.XmlReader> 屬性設為 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 物件，限制 <xref:System.Xml.XmlSecureResolver> 可以存取的資源。</span><span class="sxs-lookup"><span data-stu-id="3aee5-650">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
>   
>  <span data-ttu-id="3aee5-651">-或-</span><span class="sxs-lookup"><span data-stu-id="3aee5-651">-or-</span></span>  
>   
>  -   <span data-ttu-id="3aee5-652">藉由將 <xref:System.Xml.XmlReader> 屬性設為 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>，來禁止 `null` 開啟外部資源。</span><span class="sxs-lookup"><span data-stu-id="3aee5-652">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="3aee5-653">建立<xref:System.Xml.XmlReader>物件展開實體參考，並執行新行字元的 XML 正規化。</span><span class="sxs-lookup"><span data-stu-id="3aee5-653">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-654">
            <paramref name="input" /> 值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-654">The <paramref name="input" /> value is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.TextReader input, System.Xml.XmlReaderSettings settings, string baseUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.TextReader input, class System.Xml.XmlReaderSettings settings, string baseUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As TextReader, settings As XmlReaderSettings, baseUri As String) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::TextReader ^ input, System::Xml::XmlReaderSettings ^ settings, System::String ^ baseUri);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.TextReader * System.Xml.XmlReaderSettings * string -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create (input, settings, baseUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" />
        <Parameter Name="baseUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="3aee5-655">要從中讀取 XML 資料的文字閱讀器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-655">The text reader from which to read the XML data.</span>
          </span>
          <span data-ttu-id="3aee5-656">因為文字閱讀器會傳回 Unicode 字元的資料流，所以 <see cref="T:System.Xml.XmlReader" /> 不會使用 XML 宣告中所指定的編碼方式將資料流解碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-656">A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the <see cref="T:System.Xml.XmlReader" /> to decode the data stream.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="3aee5-657">新 <see cref="T:System.Xml.XmlReader" /> 執行個體的設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-657">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span>
          </span>
          <span data-ttu-id="3aee5-658">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-658">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="baseUri">
          <span data-ttu-id="3aee5-659">所讀取之實體或文件的基底 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-659">The base URI for the entity or document being read.</span>
          </span>
          <span data-ttu-id="3aee5-660">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-660">This value can be <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3aee5-661">**安全性提示**：系統會使用基底 URI 來解析 XML 文件的相對 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-661">**Security Note** The base URI is used to resolve the relative URI of the XML document.</span>
          </span>
          <span data-ttu-id="3aee5-662">請不要使用來自不受信任來源的基底 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-662">Do not use a base URI from an untrusted source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-663">使用指定的文字讀取器、設定和基底 URI，建立新的 <see cref="T:System.Xml.XmlReader" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-663">Creates a new <see cref="T:System.Xml.XmlReader" /> instance by using the specified text reader, settings, and base URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-664">用以在資料流中讀取 XML 資料的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-664">An object that is used to read the XML data in the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-665">根據預設<xref:System.Xml.XmlUrlResolver>以不含認證用來存取任何外部的資源，例如文件類型定義 (DTD)、 實體、 結構描述等等。</span><span class="sxs-lookup"><span data-stu-id="3aee5-665">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3aee5-666">從.NET Framework 4.5.2，沒有預設值開始<xref:System.Xml.XmlUrlResolver>提供。</span><span class="sxs-lookup"><span data-stu-id="3aee5-666">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="3aee5-667">如果您的解決方案以目標為.NET Framework 4.5.2 或更新版本，指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-667">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3aee5-668">如果在需要驗證的網路資源位於外部的資源，請使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>屬性來指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="3aee5-668">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3aee5-669">您可以使用其中一種下列方法來控制哪些資源<xref:System.Xml.XmlReader>可以存取：</span><span class="sxs-lookup"><span data-stu-id="3aee5-669">You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:</span></span>  
>   
>  -   <span data-ttu-id="3aee5-670">藉由將 <xref:System.Xml.XmlReader> 屬性設為 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 物件，限制 <xref:System.Xml.XmlSecureResolver> 可以存取的資源。</span><span class="sxs-lookup"><span data-stu-id="3aee5-670">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
>   
>  <span data-ttu-id="3aee5-671">-或-</span><span class="sxs-lookup"><span data-stu-id="3aee5-671">-or-</span></span>  
>   
>  -   <span data-ttu-id="3aee5-672">藉由將 <xref:System.Xml.XmlReader> 屬性設為 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>，來禁止 `null` 開啟外部資源。</span><span class="sxs-lookup"><span data-stu-id="3aee5-672">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="3aee5-673">建立<xref:System.Xml.XmlReader>物件展開實體參考，並執行新行字元的 XML 正規化。</span><span class="sxs-lookup"><span data-stu-id="3aee5-673">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-674">
            <paramref name="input" /> 值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-674">The <paramref name="input" /> value is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.TextReader input, System.Xml.XmlReaderSettings settings, System.Xml.XmlParserContext inputContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.TextReader input, class System.Xml.XmlReaderSettings settings, class System.Xml.XmlParserContext inputContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As TextReader, settings As XmlReaderSettings, inputContext As XmlParserContext) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::TextReader ^ input, System::Xml::XmlReaderSettings ^ settings, System::Xml::XmlParserContext ^ inputContext);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.TextReader * System.Xml.XmlReaderSettings * System.Xml.XmlParserContext -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create (input, settings, inputContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" />
        <Parameter Name="inputContext" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="3aee5-675">要從中讀取 XML 資料的文字閱讀器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-675">The text reader from which to read the XML data.</span>
          </span>
          <span data-ttu-id="3aee5-676">因為文字閱讀器會傳回 Unicode 字元的資料流，所以 XML 讀取器不會使用 XML 宣告中所指定的編碼方式，來解碼資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-676">A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the XML reader to decode the data stream.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="3aee5-677">新 <see cref="T:System.Xml.XmlReader" /> 執行個體的設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-677">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span>
          </span>
          <span data-ttu-id="3aee5-678">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-678">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="inputContext">
          <span data-ttu-id="3aee5-679">剖析 XML 片段所需的內容資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-679">The context information required to parse the XML fragment.</span>
          </span>
          <span data-ttu-id="3aee5-680">內容資訊可包含要使用的 <see cref="T:System.Xml.XmlNameTable" />、編碼方式、命名空間範圍、目前的 <c>xml:lang</c> 和 <c>xml:space</c> 範圍、基底 URI，以及文件類型定義。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-680">The context information can include the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, the current <c>xml:lang</c> and <c>xml:space</c> scope, base URI, and document type definition.</span>
          </span>
          <span data-ttu-id="3aee5-681">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-681">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-682">使用指定的文字讀取器、設定和內容資訊進行剖析，建立新的 <see cref="T:System.Xml.XmlReader" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-682">Creates a new <see cref="T:System.Xml.XmlReader" /> instance by using the specified text reader, settings, and context information for parsing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-683">用以在資料流中讀取 XML 資料的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-683">An object that is used to read the XML data in the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-684">根據預設<xref:System.Xml.XmlUrlResolver>以不含認證用來存取任何外部的資源，例如文件類型定義 (DTD)、 實體、 結構描述等等。</span><span class="sxs-lookup"><span data-stu-id="3aee5-684">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3aee5-685">從.NET Framework 4.5.2，沒有預設值開始<xref:System.Xml.XmlUrlResolver>提供。</span><span class="sxs-lookup"><span data-stu-id="3aee5-685">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="3aee5-686">如果您的解決方案以目標為.NET Framework 4.5.2 或更新版本，指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-686">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3aee5-687">如果在需要驗證的網路資源位於外部的資源，請使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>屬性來指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="3aee5-687">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3aee5-688">您可以使用其中一種下列方法來控制哪些資源<xref:System.Xml.XmlReader>可以存取：</span><span class="sxs-lookup"><span data-stu-id="3aee5-688">You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:</span></span>  
>   
>  -   <span data-ttu-id="3aee5-689">藉由將 <xref:System.Xml.XmlReader> 屬性設為 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 物件，限制 <xref:System.Xml.XmlSecureResolver> 可以存取的資源。</span><span class="sxs-lookup"><span data-stu-id="3aee5-689">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
>   
>  <span data-ttu-id="3aee5-690">-或-</span><span class="sxs-lookup"><span data-stu-id="3aee5-690">-or-</span></span>  
>   
>  -   <span data-ttu-id="3aee5-691">藉由將 <xref:System.Xml.XmlReader> 屬性設為 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>，來禁止 `null` 開啟外部資源。</span><span class="sxs-lookup"><span data-stu-id="3aee5-691">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="3aee5-692">建立<xref:System.Xml.XmlReader>物件展開實體參考，並執行新行字元的 XML 正規化。</span><span class="sxs-lookup"><span data-stu-id="3aee5-692">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-693">下列範例會建立<xref:System.Xml.XmlReader>讀取 XML 片段的物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-693">The following example creates an <xref:System.Xml.XmlReader> object that reads an XML fragment.</span></span>  
  
 [!code-csharp[XmlReader.Create#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#1)]
 [!code-vb[XmlReader.Create#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-694">
            <paramref name="input" /> 值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-694">The <paramref name="input" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3aee5-695">
            <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> 和 <see cref="P:System.Xml.XmlParserContext.NameTable" /> 屬性都包含值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-695">The <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> and <see cref="P:System.Xml.XmlParserContext.NameTable" /> properties both contain values.</span>
          </span>
          <span data-ttu-id="3aee5-696">(只能設定並使用其中一個 <see langword="NameTable" /> 屬性)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-696">(Only one of these <see langword="NameTable" /> properties can be set and used).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (string inputUri, System.Xml.XmlReaderSettings settings, System.Xml.XmlParserContext inputContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(string inputUri, class System.Xml.XmlReaderSettings settings, class System.Xml.XmlParserContext inputContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (inputUri As String, settings As XmlReaderSettings, inputContext As XmlParserContext) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::String ^ inputUri, System::Xml::XmlReaderSettings ^ settings, System::Xml::XmlParserContext ^ inputContext);" />
      <MemberSignature Language="F#" Value="static member Create : string * System.Xml.XmlReaderSettings * System.Xml.XmlParserContext -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create (inputUri, settings, inputContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" />
        <Parameter Name="inputContext" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="inputUri">
          <span data-ttu-id="3aee5-697">包含 XML 資料之檔案的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-697">The URI for the file containing the XML data.</span>
          </span>
          <span data-ttu-id="3aee5-698">
            <see cref="T:System.Xml.XmlReaderSettings" /> 物件上的 <see cref="T:System.Xml.XmlResolver" /> 物件是用於將路徑轉換成標準資料表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-698">The <see cref="T:System.Xml.XmlResolver" /> object on the <see cref="T:System.Xml.XmlReaderSettings" /> object is used to convert the path to a canonical data representation.</span>
          </span>
          <span data-ttu-id="3aee5-699">如果 <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> 為 <see langword="null" />，則會使用新的 <see cref="T:System.Xml.XmlUrlResolver" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-699">If <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> is <see langword="null" />, a new <see cref="T:System.Xml.XmlUrlResolver" /> object is used.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="3aee5-700">新 <see cref="T:System.Xml.XmlReader" /> 執行個體的設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-700">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span>
          </span>
          <span data-ttu-id="3aee5-701">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-701">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="inputContext">
          <span data-ttu-id="3aee5-702">剖析 XML 片段所需的內容資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-702">The context information required to parse the XML fragment.</span>
          </span>
          <span data-ttu-id="3aee5-703">內容資訊可包含要使用的 <see cref="T:System.Xml.XmlNameTable" />、編碼方式、命名空間範圍、目前的 <c>xml:lang</c> 和 <c>xml:space</c> 範圍、基底 URI，以及文件類型定義。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-703">The context information can include the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, the current <c>xml:lang</c> and <c>xml:space</c> scope, base URI, and document type definition.</span>
          </span>
          <span data-ttu-id="3aee5-704">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-704">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-705">使用剖析用的指定 URI、設定和內容資訊，建立新的 <see cref="T:System.Xml.XmlReader" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-705">Creates a new <see cref="T:System.Xml.XmlReader" /> instance by using the specified URI, settings, and context information for parsing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-706">用以在資料流中讀取 XML 資料的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-706">An object that is used to read the XML data in the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-707">根據預設<xref:System.Xml.XmlUrlResolver>以不含認證用來存取任何外部的資源，例如文件類型定義 (DTD)、 實體、 結構描述等等。</span><span class="sxs-lookup"><span data-stu-id="3aee5-707">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3aee5-708">從.NET Framework 4.5.2，沒有預設值開始<xref:System.Xml.XmlUrlResolver>提供。</span><span class="sxs-lookup"><span data-stu-id="3aee5-708">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="3aee5-709">如果您的解決方案以目標為.NET Framework 4.5.2 或更新版本，指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-709">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3aee5-710">這表示<xref:System.Xml.XmlReader>可以存取任何不需要驗證的位置。</span><span class="sxs-lookup"><span data-stu-id="3aee5-710">This means that the <xref:System.Xml.XmlReader> can access any locations that does not require authentication.</span></span> <span data-ttu-id="3aee5-711">如果在需要驗證的網路資源位於外部的資源，請使用<xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>屬性來指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="3aee5-711">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3aee5-712">您可以限制的資源，<xref:System.Xml.XmlReader>設定，即可存取<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>屬性設<xref:System.Xml.XmlSecureResolver>物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-712">You can restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
  
 <span data-ttu-id="3aee5-713">建立<xref:System.Xml.XmlReader>物件展開實體參考，並執行新行字元的 XML 正規化。</span><span class="sxs-lookup"><span data-stu-id="3aee5-713">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-714">
            <see langword="inputUri" /> 值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-714">The <see langword="inputUri" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3aee5-715">
            <see cref="T:System.Xml.XmlReader" /> 沒有足夠的權限可以存取 XML 資料的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-715">The <see cref="T:System.Xml.XmlReader" /> does not have sufficient permissions to access the location of the XML data.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3aee5-716">
            <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> 和 <see cref="P:System.Xml.XmlParserContext.NameTable" /> 屬性都包含值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-716">The <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> and <see cref="P:System.Xml.XmlParserContext.NameTable" /> properties both contain values.</span>
          </span>
          <span data-ttu-id="3aee5-717">(只能設定並使用其中一個 <see langword="NameTable" /> 屬性)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-717">(Only one of these <see langword="NameTable" /> properties can be set and used).</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="3aee5-718">找不到由 URI 指定的檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-718">The file specified by the URI cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="3aee5-719">URI 格式不正確。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-719">The URI format is not correct.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public abstract int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Xml.XmlReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-720">在衍生類別中覆寫時，取得 XML 文件中目前節點的深度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-720">When overridden in a derived class, gets the depth of the current node in the XML document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aee5-721">XML 文件中目前節點的深度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-721">The depth of the current node in the XML document.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3aee5-722">請參閱<xref:System.Xml.XmlTextReader.Depth%2A>(在`XmlTextReader`類別) 如需使用這個屬性的範例。</span><span class="sxs-lookup"><span data-stu-id="3aee5-722">See <xref:System.Xml.XmlTextReader.Depth%2A> (in the `XmlTextReader` class) for an example using this property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-723">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-723">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-724">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-724">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-725">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-725">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-726">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <see cref="T:System.InvalidOperationException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-726">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="3aee5-727">釋放 <see cref="T:System.Xml.XmlReader" /> 類別所使用的資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-727">Releases the resources used by the <see cref="T:System.Xml.XmlReader" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="xmlReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-728">將 <see cref="T:System.Xml.XmlReader" /> 類別目前的執行個體所使用的資源全部釋出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-728">Releases all resources used by the current instance of the <see cref="T:System.Xml.XmlReader" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-729">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-729">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-730">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-730">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="xmlReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="3aee5-731">
            <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-731">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-732">釋放 <see cref="T:System.Xml.XmlReader" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-732">Releases the unmanaged resources used by the <see cref="T:System.Xml.XmlReader" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-733">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-733">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-734">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-734">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public abstract bool EOF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EOF" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.EOF" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property EOF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool EOF { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EOF : bool" Usage="System.Xml.XmlReader.EOF" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-735">在衍生類別中覆寫時，取得指出讀取器是否在資料流結尾的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-735">When overridden in a derived class, gets a value indicating whether the reader is positioned at the end of the stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aee5-736">如果讀取器定位於資料流結尾，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-736">
              <see langword="true" /> if the reader is positioned at the end of the stream; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-737">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-737">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-738">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-738">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-739">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-739">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-740">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <see cref="T:System.InvalidOperationException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-740">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="3aee5-741">在衍生類別中覆寫時，取得屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-741">When overridden in a derived class, gets the value of an attribute.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public abstract string GetAttribute (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.GetAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAttribute (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetAttribute(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetAttribute : int -&gt; string" Usage="xmlReader.GetAttribute i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="3aee5-742">屬性的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-742">The index of the attribute.</span>
          </span>
          <span data-ttu-id="3aee5-743">索引以零為起始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-743">The index is zero-based.</span>
          </span>
          <span data-ttu-id="3aee5-744">(第一個屬性的索引為 0。)</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-744">(The first attribute has index 0.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-745">在衍生類別中覆寫時，取得具有指定索引的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-745">When overridden in a derived class, gets the value of the attribute with the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-746">指定的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-746">The value of the specified attribute.</span>
          </span>
          <span data-ttu-id="3aee5-747">這個方法不會移動讀取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-747">This method does not move the reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3aee5-748">下列範例會取得第三個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="3aee5-748">The following example gets the value of the third attribute.</span></span>  
  
 [!code-csharp[XmlReaderBasic#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#2)]
 [!code-vb[XmlReaderBasic#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3aee5-749">
            <paramref name="i" /> 超出範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-749">
              <paramref name="i" /> is out of range.</span>
          </span>
          <span data-ttu-id="3aee5-750">它必須是非負值，而且小於屬性集合的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-750">It must be non-negative and less than the size of the attribute collection.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-751">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-751">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-752">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-752">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public abstract string GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAttribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetAttribute : string -&gt; string" Usage="xmlReader.GetAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="3aee5-753">屬性的限定名稱 (Qualified Name)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-753">The qualified name of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-754">在衍生類別中覆寫時，取得具有指定 <see cref="P:System.Xml.XmlReader.Name" /> 的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-754">When overridden in a derived class, gets the value of the attribute with the specified <see cref="P:System.Xml.XmlReader.Name" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-755">指定的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-755">The value of the specified attribute.</span>
          </span>
          <span data-ttu-id="3aee5-756">如果找不到該屬性或其值為 <see langword="String.Empty" />，則傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-756">If the attribute is not found or the value is <see langword="String.Empty" />, <see langword="null" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-757">這個方法不會移動讀取器。</span><span class="sxs-lookup"><span data-stu-id="3aee5-757">This method does not move the reader.</span></span>  
  
 <span data-ttu-id="3aee5-758">如果讀取器置於`DocumentType` 節點，這個方法可用來取得的 PUBLIC 和 SYSTEM 常值，例如， `reader.GetAttribute("PUBLIC")`</span><span class="sxs-lookup"><span data-stu-id="3aee5-758">If the reader is positioned on a `DocumentType` node, this method can be used to get the PUBLIC and SYSTEM literals, for example, `reader.GetAttribute("PUBLIC")`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-759">下列範例會取得 ISBN 屬性的值。</span><span class="sxs-lookup"><span data-stu-id="3aee5-759">The following example gets the value of the ISBN attribute.</span></span>  
  
 [!code-csharp[XmlReaderBasic#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#3)]
 [!code-vb[XmlReaderBasic#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-760">
            <paramref name="name" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-760">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-761">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-761">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-762">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-762">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public abstract string GetAttribute (string name, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAttribute (name As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetAttribute(System::String ^ name, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member GetAttribute : string * string -&gt; string" Usage="xmlReader.GetAttribute (name, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="3aee5-763">屬性的本機名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-763">The local name of the attribute.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="3aee5-764">屬性的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-764">The namespace URI of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-765">在衍生類別中覆寫時，取得具有指定 <see cref="P:System.Xml.XmlReader.LocalName" /> 與 <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-765">When overridden in a derived class, gets the value of the attribute with the specified <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-766">指定的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-766">The value of the specified attribute.</span>
          </span>
          <span data-ttu-id="3aee5-767">如果找不到該屬性或其值為 <see langword="String.Empty" />，則傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-767">If the attribute is not found or the value is <see langword="String.Empty" />, <see langword="null" /> is returned.</span>
          </span>
          <span data-ttu-id="3aee5-768">這個方法不會移動讀取器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-768">This method does not move the reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-769">下列 XML 會包含特定的命名空間中的屬性：</span><span class="sxs-lookup"><span data-stu-id="3aee5-769">The following XML contains an attribute in a specific namespace:</span></span>  
  
```xml  
<test xmlns:dt="urn:datatypes" dt:type="int"/>  
```  
  
 <span data-ttu-id="3aee5-770">您可以查閱`dt:type`屬性使用一個引數 （前置詞和本機名稱） 或兩個引數 （區域名稱和命名空間 URI）：</span><span class="sxs-lookup"><span data-stu-id="3aee5-770">You can lookup the `dt:type` attribute using one argument (prefix and local name) or two arguments (local name and namespace URI):</span></span>  
  
```csharp  
String dt = reader.GetAttribute("dt:type");  
String dt2 = reader.GetAttribute("type","urn:datatypes");  
```  
  
 <span data-ttu-id="3aee5-771">若要查閱`xmlns:dt`屬性，請使用下列引數的其中一個：</span><span class="sxs-lookup"><span data-stu-id="3aee5-771">To lookup the `xmlns:dt` attribute, use one of the following arguments:</span></span>  
  
```csharp  
String dt3 = reader.GetAttribute("xmlns:dt");  
String dt4 = reader.GetAttribute("dt",http://www.w3.org/2000/xmlns/);  
```  
  
 <span data-ttu-id="3aee5-772">您也可以取得此資訊使用<xref:System.Xml.XmlReader.Prefix%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-772">You can also get this information using the <xref:System.Xml.XmlReader.Prefix%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-773">
            <paramref name="name" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-773">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-774">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-774">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-775">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-775">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; GetValueAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; GetValueAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.GetValueAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValueAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ GetValueAsync();" />
      <MemberSignature Language="F#" Value="abstract member GetValueAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.GetValueAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="xmlReader.GetValueAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-776">非同步取得目前節點的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-776">Asynchronously gets the value of the current node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-777">目前節點的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-777">The value of the current node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-778">若要使用此方法，您必須設定<xref:System.Xml.XmlReaderSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-778">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-779">在未將 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlReader" /> 非同步方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-779">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="3aee5-780">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-780">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HasAttributes">
      <MemberSignature Language="C#" Value="public virtual bool HasAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.HasAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasAttributes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAttributes : bool" Usage="System.Xml.XmlReader.HasAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-781">取得值，表示目前節點是否具有任何屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-781">Gets a value indicating whether the current node has any attributes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aee5-782">如果目前節點擁有屬性，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-782">
              <see langword="true" /> if the current node has attributes; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3aee5-783">下列範例會顯示目前的節點上的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-783">The following example displays all attributes on the current node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#6)]
 [!code-vb[XmlReaderBasic#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-784">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-784">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-785">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-785">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public virtual bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="System.Xml.XmlReader.HasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-786">在衍生類別中覆寫時，取得指出目前節點是否具有 <see cref="P:System.Xml.XmlReader.Value" /> 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-786">When overridden in a derived class, gets a value indicating whether the current node can have a <see cref="P:System.Xml.XmlReader.Value" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aee5-787">如果讀取器目前所在節點具有 <see langword="Value" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-787">
              <see langword="true" /> if the node on which the reader is currently positioned can have a <see langword="Value" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3aee5-788">如果為 <see langword="false" />，則節點的值為 <see langword="String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-788">If <see langword="false" />, the node has a value of <see langword="String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-789">下表列出具有傳回值的節點類型。</span><span class="sxs-lookup"><span data-stu-id="3aee5-789">The following table lists node types that have a value to return.</span></span>  
  
|<span data-ttu-id="3aee5-790">節點類型</span><span class="sxs-lookup"><span data-stu-id="3aee5-790">Node Type</span></span>|<span data-ttu-id="3aee5-791">值</span><span class="sxs-lookup"><span data-stu-id="3aee5-791">Value</span></span>|  
|---------------|-----------|  
|`Attribute`|<span data-ttu-id="3aee5-792">屬性的值。</span><span class="sxs-lookup"><span data-stu-id="3aee5-792">The value of the attribute.</span></span>|  
|`CDATA`|<span data-ttu-id="3aee5-793">CDATA 區段的內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-793">The content of the CDATA section.</span></span>|  
|`Comment`|<span data-ttu-id="3aee5-794">註解的內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-794">The content of the comment.</span></span>|  
|`DocumentType`|<span data-ttu-id="3aee5-795">內部子集。</span><span class="sxs-lookup"><span data-stu-id="3aee5-795">The internal subset.</span></span>|  
|`ProcessingInstruction`|<span data-ttu-id="3aee5-796">全部內容 (目標除外)。</span><span class="sxs-lookup"><span data-stu-id="3aee5-796">The entire content, excluding the target.</span></span>|  
|`SignificantWhitespace`|<span data-ttu-id="3aee5-797">在混合內容模型中標記間的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="3aee5-797">The white space between markup in a mixed content model.</span></span>|  
|`Text`|<span data-ttu-id="3aee5-798">文字節點的內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-798">The content of the text node.</span></span>|  
|`Whitespace`|<span data-ttu-id="3aee5-799">標記之間的泛空白字元。</span><span class="sxs-lookup"><span data-stu-id="3aee5-799">The white space between markup.</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="3aee5-800">宣告的內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-800">The content of the declaration.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-801">請參閱<xref:System.Xml.XmlTextReader.HasValue%2A>(在`XmlTextReader`類別) 如需使用此方法的範例。</span><span class="sxs-lookup"><span data-stu-id="3aee5-801">See <xref:System.Xml.XmlTextReader.HasValue%2A> (in the `XmlTextReader` class) for a sample using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-802">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-802">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-803">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-803">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public virtual bool IsDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDefault { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDefault : bool" Usage="System.Xml.XmlReader.IsDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-804">在衍生類別中覆寫時，取得值，指出目前節點是否為從 DTD 或結構描述中定義的預設值產生的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-804">When overridden in a derived class, gets a value indicating whether the current node is an attribute that was generated from the default value defined in the DTD or schema.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aee5-805">如果目前節點是 DTD 或結構描述中定義的預設值所產生的屬性，則為 <see langword="true" />，如果已經明確設定屬性值，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-805">
              <see langword="true" /> if the current node is an attribute whose value was generated from the default value defined in the DTD or schema; <see langword="false" /> if the attribute value was explicitly set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-806">`IsDefault` 一律會傳回`false`實作的`XmlReader`不支援結構描述或 DTD 資訊。</span><span class="sxs-lookup"><span data-stu-id="3aee5-806">`IsDefault` always returns `false` for implementations of `XmlReader` that do not support schema or DTD information.</span></span> <span data-ttu-id="3aee5-807">這個屬性只適用於屬性節點。</span><span class="sxs-lookup"><span data-stu-id="3aee5-807">This property applies only to an attribute node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-808">下列範例會顯示所有屬性上的根項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-808">The following example displays all attributes on the root element.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Xml;  
  
public class Sample   
{  
  public static void Main(){  
  
    // Create the reader.  
    XmlReader reader = XmlReader.Create("book4.xml");  
  
    reader.MoveToContent();  
  
    // Display each of the attribute nodes, including default attributes.  
    while (reader.MoveToNextAttribute()){  
        if (reader.IsDefault)  
          Console.Write("(default attribute) ");  
        Console.WriteLine("{0} = {1}", reader.Name, reader.Value);    
    }             
  
    //Close the reader.  
    reader.Close();       
  
  }  
} // End class  
```  
  
 <span data-ttu-id="3aee5-809">此範例會使用下列的檔案，做為輸入。</span><span class="sxs-lookup"><span data-stu-id="3aee5-809">The example uses the following files as input.</span></span>  
  
 `book4.xml`  
  
```xml  
<!DOCTYPE book SYSTEM 'book.dtd'>  
<book ISBN = '1-861001-57-5'>  
  <title>Pride And Prejudice</title>  
  <price>19.95</price>  
</book>  
```  
  
 `book.dtd`  
  
```  
<!ELEMENT book (title,price)>   
<!ATTLIST book   
   genre CDATA "novel"  
   ISBN CDATA #REQUIRED>  
<!ELEMENT title (#PCDATA)>  
<!ELEMENT price (#PCDATA)>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-810">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-810">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-811">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-811">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsEmptyElement">
      <MemberSignature Language="C#" Value="public abstract bool IsEmptyElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmptyElement" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.IsEmptyElement" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsEmptyElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsEmptyElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmptyElement : bool" Usage="System.Xml.XmlReader.IsEmptyElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-812">在衍生類別中覆寫時，取得指出目前節點是否為空項目的值 (例如 <c>&lt;MyElement/&gt;</c>)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-812">When overridden in a derived class, gets a value indicating whether the current node is an empty element (for example, <c>&lt;MyElement/&gt;</c>).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aee5-813">
            <see langword="true" /> 如果目前節點是項目 (<see cref="P:System.Xml.XmlReader.NodeType" />等於<see langword="XmlNodeType.Element" />) 結尾<c> / &gt;</c>否則<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-813">
              <see langword="true" /> if the current node is an element (<see cref="P:System.Xml.XmlReader.NodeType" /> equals <see langword="XmlNodeType.Element" />) that ends with <c>/&gt;</c>; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-814">此屬性可讓您判斷下列各項目之間的差異：</span><span class="sxs-lookup"><span data-stu-id="3aee5-814">This property enables you to determine the difference between the following:</span></span>  
  
 <span data-ttu-id="3aee5-815">`<item num="123"/>` (`IsEmptyElement`是`true`)。</span><span class="sxs-lookup"><span data-stu-id="3aee5-815">`<item num="123"/>` (`IsEmptyElement` is `true`).</span></span>  
  
 <span data-ttu-id="3aee5-816">`<item num="123"></item>` (`IsEmptyElement`是`false`，不過是空的項目內容)。</span><span class="sxs-lookup"><span data-stu-id="3aee5-816">`<item num="123"></item>` (`IsEmptyElement` is `false`, although element content is empty).</span></span>  
  
 <span data-ttu-id="3aee5-817">對應`EndElement`節點並不會產生空的項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-817">A corresponding `EndElement` node is not generated for empty elements.</span></span>  
  
 <span data-ttu-id="3aee5-818">如果預設的內容已加入的項目，因為結構描述的驗證，所以`IsEmptyElement`仍會傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-818">If default content has been added to an element due to schema validation, `IsEmptyElement` still returns `true`.</span></span> <span data-ttu-id="3aee5-819">它具有在項目具有預設值並無任何影響。</span><span class="sxs-lookup"><span data-stu-id="3aee5-819">It has no bearing on whether or not the element has a default value.</span></span> <span data-ttu-id="3aee5-820">換句話說，`IsEmptyElement`只會報告是否在來源文件中的項目具有結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-820">In other words, `IsEmptyElement` simply reports whether or not the element in the source document had an end element tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-821">下列範例會顯示每個項目的文字內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-821">The following example displays the text content of each element.</span></span>  
  
 [!code-csharp[XmlReaderBasic#10](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#10)]
 [!code-vb[XmlReaderBasic#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#10)]  
  
 <span data-ttu-id="3aee5-822">此範例會使用該檔案，`elems.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="3aee5-822">The example uses the file, `elems.xml`, as input.</span></span>  
  
 [!code-xml[XML_Core_Files#3](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/elems.xml#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-823">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-823">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-824">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-824">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsName">
      <MemberSignature Language="C#" Value="public static bool IsName (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsName(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.IsName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsName (str As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsName(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member IsName : string -&gt; bool" Usage="System.Xml.XmlReader.IsName str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="3aee5-825">要驗證的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-825">The name to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-826">傳回值，指出字串引數是否為有效的 XML 名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-826">Returns a value indicating whether the string argument is a valid XML name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-827">如果名稱有效，即為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-827">
              <see langword="true" /> if the name is valid; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-828">這個方法會使用[W3C XML 1.0 建議事項](http://go.microsoft.com/fwlink/?LinkId=49863)判斷名稱是否有效。</span><span class="sxs-lookup"><span data-stu-id="3aee5-828">This method uses the [W3C XML 1.0 Recommendation](http://go.microsoft.com/fwlink/?LinkId=49863) to determine whether the name is valid.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-829">
            <paramref name="str" /> 值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-829">The <paramref name="str" /> value is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsNameToken">
      <MemberSignature Language="C#" Value="public static bool IsNameToken (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNameToken(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.IsNameToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNameToken (str As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNameToken(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member IsNameToken : string -&gt; bool" Usage="System.Xml.XmlReader.IsNameToken str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="3aee5-830">要驗證的名稱語彙基元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-830">The name token to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-831">傳回值，指出字串引數是否為有效的 XML 名稱語彙基元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-831">Returns a value indicating whether or not the string argument is a valid XML name token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-832">如果它是有效的名稱語彙基元，即為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-832">
              <see langword="true" /> if it is a valid name token; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-833">這個方法會使用[W3C XML 1.0 建議事項](http://go.microsoft.com/fwlink/?LinkId=49863)判斷名稱語彙基元是否有效。</span><span class="sxs-lookup"><span data-stu-id="3aee5-833">This method uses the [W3C XML 1.0 Recommendation](http://go.microsoft.com/fwlink/?LinkId=49863) to determine whether the name token is valid.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-834">
            <paramref name="str" /> 值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-834">The <paramref name="str" /> value is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStartElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-835">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-835">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-836">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <see cref="T:System.InvalidOperationException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-836">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="3aee5-837">測試目前的內容節點是否為開頭標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-837">Tests if the current content node is a start tag.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStartElement">
      <MemberSignature Language="C#" Value="public virtual bool IsStartElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsStartElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.IsStartElement" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsStartElement () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsStartElement();" />
      <MemberSignature Language="F#" Value="abstract member IsStartElement : unit -&gt; bool&#xA;override this.IsStartElement : unit -&gt; bool" Usage="xmlReader.IsStartElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-838">呼叫 <see cref="M:System.Xml.XmlReader.MoveToContent" /> 並測試目前的內容節點為開頭標記或空白項目標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-838">Calls <see cref="M:System.Xml.XmlReader.MoveToContent" /> and tests if the current content node is a start tag or empty element tag.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-839">如果 <see cref="M:System.Xml.XmlReader.MoveToContent" /> 找到開頭標記或空白項目標記，即為 <see langword="true" />；如果找到的節點類型並非 <see langword="false" />，則為 <see langword="XmlNodeType.Element" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-839">
              <see langword="true" /> if <see cref="M:System.Xml.XmlReader.MoveToContent" /> finds a start tag or empty element tag; <see langword="false" /> if a node type other than <see langword="XmlNodeType.Element" /> was found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-840">這個方法略過空白字元、 註解和處理指示，直到讀取器定位於內容節點上。</span><span class="sxs-lookup"><span data-stu-id="3aee5-840">This method skips white space, comments, and processing instructions until the reader is positioned on a content node.</span></span> <span data-ttu-id="3aee5-841">如果目前節點是項目，然後測試方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-841">The method then tests if the current node is an element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-842">下列範例會顯示每個項目的文字內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-842">The following example displays the text content of each element.</span></span>  
  
 [!code-csharp[XmlReaderBasic#10](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#10)]
 [!code-vb[XmlReaderBasic#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#10)]  
  
 <span data-ttu-id="3aee5-843">此範例會使用該檔案，`elems.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="3aee5-843">The example uses the file, `elems.xml`, as input.</span></span>  
  
 [!code-xml[XML_Core_Files#3](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/elems.xml#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-844">在輸入資料流中遇到錯誤的 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-844">Incorrect XML is encountered in the input stream.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-845">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-845">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-846">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-846">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlReader.MoveToContent" />
      </Docs>
    </Member>
    <Member MemberName="IsStartElement">
      <MemberSignature Language="C#" Value="public virtual bool IsStartElement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsStartElement(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.IsStartElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsStartElement (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsStartElement(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member IsStartElement : string -&gt; bool&#xA;override this.IsStartElement : string -&gt; bool" Usage="xmlReader.IsStartElement name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="3aee5-847">字串符合所找到項目的 <see langword="Name" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-847">The string matched against the <see langword="Name" /> property of the element found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-848">呼叫 <see cref="M:System.Xml.XmlReader.MoveToContent" /> 並測試目前的內容節點為開頭標記或空白項目標記，以及所找到項目的 <see cref="P:System.Xml.XmlReader.Name" /> 屬性是否符合指定的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-848">Calls <see cref="M:System.Xml.XmlReader.MoveToContent" /> and tests if the current content node is a start tag or empty element tag and if the <see cref="P:System.Xml.XmlReader.Name" /> property of the element found matches the given argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-849">如果產生的節點是項目，並且 <see langword="true" /> 屬性符合指定的字串，即為 <see langword="Name" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-849">
              <see langword="true" /> if the resulting node is an element and the <see langword="Name" /> property matches the specified string.</span>
          </span>
          <span data-ttu-id="3aee5-850">如果找到的節點類型並非 <see langword="XmlNodeType.Element" />，或項目 <see langword="Name" /> 屬性不符合指定字串，即為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-850">
              <see langword="false" /> if a node type other than <see langword="XmlNodeType.Element" /> was found or if the element <see langword="Name" /> property does not match the specified string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-851">這個方法略過空白字元、 註解和處理指示，直到讀取器定位於內容節點上。</span><span class="sxs-lookup"><span data-stu-id="3aee5-851">This method skips white space, comments, and processing instructions until the reader is positioned on a content node.</span></span> <span data-ttu-id="3aee5-852">如果目前節點是項目，然後測試方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-852">The method then tests if the current node is an element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-853">下列範例會顯示每個價格項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-853">The following example displays each price element.</span></span>  
  
 [!code-csharp[XmlReaderBasic#17](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#17)]
 [!code-vb[XmlReaderBasic#17](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-854">在輸入資料流中遇到錯誤的 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-854">Incorrect XML is encountered in the input stream.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-855">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-855">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-856">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-856">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlReader.MoveToContent" />
      </Docs>
    </Member>
    <Member MemberName="IsStartElement">
      <MemberSignature Language="C#" Value="public virtual bool IsStartElement (string localname, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsStartElement(string localname, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsStartElement (localname As String, ns As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsStartElement(System::String ^ localname, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member IsStartElement : string * string -&gt; bool&#xA;override this.IsStartElement : string * string -&gt; bool" Usage="xmlReader.IsStartElement (localname, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localname" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localname">
          <span data-ttu-id="3aee5-857">要符合所找到項目之 <see langword="LocalName" /> 屬性的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-857">The string to match against the <see langword="LocalName" /> property of the element found.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="3aee5-858">要符合所找到項目之 <see langword="NamespaceURI" /> 屬性的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-858">The string to match against the <see langword="NamespaceURI" /> property of the element found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-859">呼叫 <see cref="M:System.Xml.XmlReader.MoveToContent" /> 並測試目前的內容節點為開頭標記或空白項目標記，以及所找到項目的 <see cref="P:System.Xml.XmlReader.LocalName" /> 與 <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 屬性是否符合指定的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-859">Calls <see cref="M:System.Xml.XmlReader.MoveToContent" /> and tests if the current content node is a start tag or empty element tag and if the <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" /> properties of the element found match the given strings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-860">
            <see langword="true" />如果產生的節點是項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-860">
              <see langword="true" /> if the resulting node is an element.</span>
          </span>
          <span data-ttu-id="3aee5-861">如果找到的節點類型並非 <see langword="XmlNodeType.Element" />，或項目的 <see langword="LocalName" /> 和 <see langword="NamespaceURI" /> 屬性不符合指定字串，即為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-861">
              <see langword="false" /> if a node type other than <see langword="XmlNodeType.Element" /> was found or if the <see langword="LocalName" /> and <see langword="NamespaceURI" /> properties of the element do not match the specified strings.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-862">這個方法略過空白字元、 註解和處理指示，直到讀取器定位於內容節點上。</span><span class="sxs-lookup"><span data-stu-id="3aee5-862">This method skips white space, comments, and processing instructions until the reader is positioned on a content node.</span></span> <span data-ttu-id="3aee5-863">如果目前節點是項目，然後測試方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-863">The method then tests if the current node is an element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-864">在輸入資料流中遇到錯誤的 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-864">Incorrect XML is encountered in the input stream.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-865">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-865">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-866">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-866">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlReader.MoveToContent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-867">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-867">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-868">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <see cref="T:System.InvalidOperationException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-868">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="3aee5-869">在衍生類別中覆寫時，取得屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-869">When overridden in a derived class, gets the value of the attribute.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual string this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[int] { System::String ^ get(int i); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : string" Usage="System.Xml.XmlReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="3aee5-870">屬性的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-870">The index of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-871">在衍生類別中覆寫時，取得具有指定索引的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-871">When overridden in a derived class, gets the value of the attribute with the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aee5-872">指定的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-872">The value of the specified attribute.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-873">這個屬性不會移動讀取器。</span><span class="sxs-lookup"><span data-stu-id="3aee5-873">This property does not move the reader.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-874">下列範例會顯示目前的節點上的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-874">The following example displays all attributes on the current node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#1)]
 [!code-vb[XmlReaderBasic#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-875">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-875">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-876">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-876">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlReader.GetAttribute(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual string this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string" Usage="System.Xml.XmlReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="3aee5-877">屬性的限定名稱 (Qualified Name)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-877">The qualified name of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-878">在衍生類別中覆寫時，取得具有指定 <see cref="P:System.Xml.XmlReader.Name" /> 的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-878">When overridden in a derived class, gets the value of the attribute with the specified <see cref="P:System.Xml.XmlReader.Name" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aee5-879">指定的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-879">The value of the specified attribute.</span>
          </span>
          <span data-ttu-id="3aee5-880">如果找不到屬性，會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-880">If the attribute is not found, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-881">這個屬性不會移動讀取器。</span><span class="sxs-lookup"><span data-stu-id="3aee5-881">This property does not move the reader.</span></span>  
  
 <span data-ttu-id="3aee5-882">如果讀取器置於`DocumentType` 節點，這個方法可用來取得的 PUBLIC 和 SYSTEM 常值，例如， `reader["PUBLIC"]`</span><span class="sxs-lookup"><span data-stu-id="3aee5-882">If the reader is positioned on a `DocumentType` node, this method can be used to get the PUBLIC and SYSTEM literals, for example, `reader["PUBLIC"]`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-883">下列範例會取得 ISBN 屬性的值。</span><span class="sxs-lookup"><span data-stu-id="3aee5-883">The following example gets the value of the ISBN attribute.</span></span>  
  
 [!code-csharp[XmlReaderBasic#7](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#7)]
 [!code-vb[XmlReaderBasic#7](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-884">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-884">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-885">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-885">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlReader.GetAttribute(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual string this[string name, string namespaceURI] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Item(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(name As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^, System::String ^] { System::String ^ get(System::String ^ name, System::String ^ namespaceURI); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * string) : string" Usage="System.Xml.XmlReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="3aee5-886">屬性的本機名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-886">The local name of the attribute.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="3aee5-887">屬性的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-887">The namespace URI of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-888">在衍生類別中覆寫時，取得具有指定 <see cref="P:System.Xml.XmlReader.LocalName" /> 與 <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-888">When overridden in a derived class, gets the value of the attribute with the specified <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aee5-889">指定的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-889">The value of the specified attribute.</span>
          </span>
          <span data-ttu-id="3aee5-890">如果找不到屬性，會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-890">If the attribute is not found, <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-891">這個屬性不會移動讀取器。</span><span class="sxs-lookup"><span data-stu-id="3aee5-891">This property does not move the reader.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-892">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-892">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-893">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-893">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public abstract string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XmlReader.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-894">在衍生類別中覆寫時，取得目前節點的區域名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-894">When overridden in a derived class, gets the local name of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aee5-895">目前節點名稱的前置詞被移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-895">The name of the current node with the prefix removed.</span>
          </span>
          <span data-ttu-id="3aee5-896">例如，<see langword="LocalName" />已<see langword="book" />項目的<c> &lt;bk: book&amp;gt&gt;</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-896">For example, <see langword="LocalName" /> is <see langword="book" /> for the element <c>&lt;bk:book&gt;</c>.</span>
          </span>
          <span data-ttu-id="3aee5-897">對於沒有名稱的節點類型 (如 <see langword="Text" />、<see langword="Comment" /> 等)，這個屬性會傳回 <see langword="String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-897">For node types that do not have a name (like <see langword="Text" />, <see langword="Comment" />, and so on), this property returns <see langword="String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3aee5-898">下列範例會顯示每個節點的本機名稱，如果它們存在，前置詞和命名空間 URI。</span><span class="sxs-lookup"><span data-stu-id="3aee5-898">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-csharp[XmlReaderBasic#9](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#9)]
 [!code-vb[XmlReaderBasic#9](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#9)]  
  
 <span data-ttu-id="3aee5-899">此範例會使用該檔案，book2.xml，做為輸入。</span><span class="sxs-lookup"><span data-stu-id="3aee5-899">The example uses the file, book2.xml, as input.</span></span>  
  
 [!code-xml[XML_Core_Files#5](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/book2.xml#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-900">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-900">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-901">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-901">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlReader.Name" />
      </Docs>
    </Member>
    <Member MemberName="LookupNamespace">
      <MemberSignature Language="C#" Value="public abstract string LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function LookupNamespace (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ LookupNamespace(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="abstract member LookupNamespace : string -&gt; string" Usage="xmlReader.LookupNamespace prefix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="3aee5-902">您要解析其命名空間 URI 的前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-902">The prefix whose namespace URI you want to resolve.</span>
          </span>
          <span data-ttu-id="3aee5-903">若要符合預設命名空間，請傳送空字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-903">To match the default namespace, pass an empty string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-904">在衍生類別中覆寫時，解析目前項目範圍內的命名空間前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-904">When overridden in a derived class, resolves a namespace prefix in the current element's scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-905">前置詞對應的命名空間 URI，如果找不到符合的前置詞，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-905">The namespace URI to which the prefix maps or <see langword="null" /> if no matching prefix is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-906">在下列 XML 字串，如果讀取器置於`href`屬性，前置詞`a`藉由呼叫會解析`reader.LookupNamespace("a")`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-906">In the following XML string, if the reader is positioned on the `href` attribute, the prefix `a` is resolved by calling `reader.LookupNamespace("a")`.</span></span> <span data-ttu-id="3aee5-907">傳回的字串是`urn:456`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-907">The returned string is `urn:456`.</span></span>  
  
```xml  
<root xmlns:a="urn:456">  
  <item>  
  <ref href="a:b"/>  
  </item>  
 </root>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-908">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-908">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-909">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-909">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveToAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-910">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-910">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-911">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <see cref="T:System.InvalidOperationException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-911">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="3aee5-912">在衍生類別中覆寫時，移至指定的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-912">When overridden in a derived class, moves to the specified attribute.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public virtual void MoveToAttribute (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveToAttribute(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub MoveToAttribute (i As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MoveToAttribute(int i);" />
      <MemberSignature Language="F#" Value="abstract member MoveToAttribute : int -&gt; unit&#xA;override this.MoveToAttribute : int -&gt; unit" Usage="xmlReader.MoveToAttribute i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="3aee5-913">屬性的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-913">The index of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-914">在衍生類別中覆寫時，移至具有指定索引的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-914">When overridden in a derived class, moves to the attribute with the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3aee5-915">下列範例會顯示目前的節點上的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-915">The following example displays all attributes on the current node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#4)]
 [!code-vb[XmlReaderBasic#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-916">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-916">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-917">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-917">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3aee5-918">參數的值是負數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-918">The parameter has a negative value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public abstract bool MoveToAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToAttribute (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member MoveToAttribute : string -&gt; bool" Usage="xmlReader.MoveToAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="3aee5-919">屬性的限定名稱 (Qualified Name)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-919">The qualified name of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-920">在衍生類別中覆寫時，移至具有指定 <see cref="P:System.Xml.XmlReader.Name" /> 的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-920">When overridden in a derived class, moves to the attribute with the specified <see cref="P:System.Xml.XmlReader.Name" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-921">如果找到屬性，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-921">
              <see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3aee5-922">如果為 <see langword="false" />，則不會變更讀取器的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-922">If <see langword="false" />, the reader's position does not change.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-923">之後呼叫`MoveToAttribute`，則<xref:System.Xml.XmlReader.Name%2A>， <xref:System.Xml.XmlReader.NamespaceURI%2A>，和<xref:System.Xml.XmlReader.Prefix%2A>屬性會反映該屬性的屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-923">After calling `MoveToAttribute`, the <xref:System.Xml.XmlReader.Name%2A>, <xref:System.Xml.XmlReader.NamespaceURI%2A>, and <xref:System.Xml.XmlReader.Prefix%2A> properties reflect the properties of that attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-924">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-924">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-925">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-925">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3aee5-926">參數為空字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-926">The parameter is an empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public abstract bool MoveToAttribute (string name, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToAttribute(string name, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToAttribute (name As String, ns As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToAttribute(System::String ^ name, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member MoveToAttribute : string * string -&gt; bool" Usage="xmlReader.MoveToAttribute (name, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="3aee5-927">屬性的本機名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-927">The local name of the attribute.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="3aee5-928">屬性的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-928">The namespace URI of the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-929">在衍生類別中覆寫時，移至具有指定 <see cref="P:System.Xml.XmlReader.LocalName" /> 和 <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-929">When overridden in a derived class, moves to the attribute with the specified <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-930">如果找到屬性，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-930">
              <see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3aee5-931">如果為 <see langword="false" />，則不會變更讀取器的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-931">If <see langword="false" />, the reader's position does not change.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-932">之後呼叫`MoveToAttribute`，則<xref:System.Xml.XmlReader.Name%2A>， <xref:System.Xml.XmlReader.NamespaceURI%2A>，和<xref:System.Xml.XmlReader.Prefix%2A>屬性會反映該屬性的屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-932">After calling `MoveToAttribute`, the <xref:System.Xml.XmlReader.Name%2A>, <xref:System.Xml.XmlReader.NamespaceURI%2A>, and <xref:System.Xml.XmlReader.Prefix%2A> properties reflect the properties of that attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-933">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-933">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-934">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-934">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-935">這兩個參數值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-935">Both parameter values are <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToContent">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeType MoveToContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Xml.XmlNodeType MoveToContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToContent () As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNodeType MoveToContent();" />
      <MemberSignature Language="F#" Value="abstract member MoveToContent : unit -&gt; System.Xml.XmlNodeType&#xA;override this.MoveToContent : unit -&gt; System.Xml.XmlNodeType" Usage="xmlReader.MoveToContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-936">檢查目前節點是否為內容 (非空白字元文字、<see langword="CDATA" />、<see langword="Element" />、<see langword="EndElement" />、<see langword="EntityReference" /> 或 <see langword="EndEntity" />) 節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-936">Checks whether the current node is a content (non-white space text, <see langword="CDATA" />, <see langword="Element" />, <see langword="EndElement" />, <see langword="EntityReference" />, or <see langword="EndEntity" />) node.</span>
          </span>
          <span data-ttu-id="3aee5-937">如果節點並非內容節點，讀取器會先跳至下一個內容節點或檔案結尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-937">If the node is not a content node, the reader skips ahead to the next content node or end of file.</span>
          </span>
          <span data-ttu-id="3aee5-938">它會略過下列型別的節點：<see langword="ProcessingInstruction" />、<see langword="DocumentType" />、<see langword="Comment" />、<see langword="Whitespace" /> 或 <see langword="SignificantWhitespace" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-938">It skips over nodes of the following type: <see langword="ProcessingInstruction" />, <see langword="DocumentType" />, <see langword="Comment" />, <see langword="Whitespace" />, or <see langword="SignificantWhitespace" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-939">這個方法所找到的目前節點的 <see cref="P:System.Xml.XmlReader.NodeType" />，如果讀取器已經到達輸入資料流的結尾，則為 <see langword="XmlNodeType.None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-939">The <see cref="P:System.Xml.XmlReader.NodeType" /> of the current node found by the method or <see langword="XmlNodeType.None" /> if the reader has reached the end of the input stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-940">如果目前節點是屬性節點，這個方法會移動讀取器傳回至擁有該屬性的項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-940">If the current node is an attribute node, this method moves the reader back to the element that owns the attribute.</span></span>  
  
 <span data-ttu-id="3aee5-941">這個方法的非同步版本，請參閱<xref:System.Xml.XmlReader.MoveToContentAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-941">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.MoveToContentAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-942">當您想要撰寫程式碼，可以略過隨機的 XML 標記，而不會中斷，這非常有用。</span><span class="sxs-lookup"><span data-stu-id="3aee5-942">This is useful when you want to write code that can skip over random XML markup without breaking.</span></span> <span data-ttu-id="3aee5-943">例如，假設您有下列程式碼：</span><span class="sxs-lookup"><span data-stu-id="3aee5-943">For example, suppose you have the following code:</span></span>  
  
 [!code-cpp[Classic WebData XmlReader.MoveToContent Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlReader.MoveToContent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlReader.MoveToContent Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlReader.MoveToContent Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlReader.MoveToContent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlReader.MoveToContent Example/VB/source.vb#1)]  
  
 <span data-ttu-id="3aee5-944">此程式碼可以處理下列輸入，而不會中斷：</span><span class="sxs-lookup"><span data-stu-id="3aee5-944">This code can handle the following inputs without breaking:</span></span>  
  
```xml  
<price>123.4</price>  
```  
  
 <span data-ttu-id="3aee5-945">和</span><span class="sxs-lookup"><span data-stu-id="3aee5-945">and</span></span>  
  
```xml  
<?xml version="1.0"><!DOCTYPE price SYSTEM  
  "abc"><price>123.4</price>  
```  
  
 <span data-ttu-id="3aee5-946">和</span><span class="sxs-lookup"><span data-stu-id="3aee5-946">and</span></span>  
  
```xml  
<?xml version="1.0"><!DOCTYPE price SYSTEM "abc"  
  [<!ENTTIY p  
  "123.4">]><price>&p;</price>  
```  
  
 <span data-ttu-id="3aee5-947">和</span><span class="sxs-lookup"><span data-stu-id="3aee5-947">and</span></span>  
  
```xml  
<!-- some test comment --><?processing  
  instruction?><price>123.4</price>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-948">在輸入資料流中發現不正確的 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-948">Incorrect XML encountered in the input stream.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-949">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-949">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-950">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-950">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToContentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Xml.XmlNodeType&gt; MoveToContentAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype System.Xml.XmlNodeType&gt; MoveToContentAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToContentAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToContentAsync () As Task(Of XmlNodeType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Xml::XmlNodeType&gt; ^ MoveToContentAsync();" />
      <MemberSignature Language="F#" Value="abstract member MoveToContentAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Xml.XmlNodeType&gt;&#xA;override this.MoveToContentAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Xml.XmlNodeType&gt;" Usage="xmlReader.MoveToContentAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlReader/&lt;MoveToContentAsync&gt;c__async5))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Xml.XmlNodeType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-951">非同步檢查目前節點是否為內容節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-951">Asynchronously checks whether the current node is a content node.</span>
          </span>
          <span data-ttu-id="3aee5-952">如果節點並非內容節點，讀取器會先跳至下一個內容節點或檔案結尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-952">If the node is not a content node, the reader skips ahead to the next content node or end of file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-953">這個方法所找到的目前節點的 <see cref="P:System.Xml.XmlReader.NodeType" />，如果讀取器已經到達輸入資料流的結尾，則為 <see langword="XmlNodeType.None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-953">The <see cref="P:System.Xml.XmlReader.NodeType" /> of the current node found by the method or <see langword="XmlNodeType.None" /> if the reader has reached the end of the input stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-954">這是非同步的<xref:System.Xml.XmlReader.MoveToContent%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="3aee5-954">This is the asynchronous version of <xref:System.Xml.XmlReader.MoveToContent%2A>, with the same functionality.</span></span> <span data-ttu-id="3aee5-955">若要使用此方法，您必須設定<xref:System.Xml.XmlReaderSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-955">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-956">在未將 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlReader" /> 非同步方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-956">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="3aee5-957">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-957">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToElement">
      <MemberSignature Language="C#" Value="public abstract bool MoveToElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToElement" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToElement () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToElement();" />
      <MemberSignature Language="F#" Value="abstract member MoveToElement : unit -&gt; bool" Usage="xmlReader.MoveToElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-958">在衍生類別中覆寫時，移至包含目前屬性節點的項目上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-958">When overridden in a derived class, moves to the element that contains the current attribute node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-959">如果讀取器位於屬性 (讀取器移至擁有該屬性的項目) 上，則為 <see langword="true" />，如果讀取器不在屬性 (不會變更讀取器的位置)，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-959">
              <see langword="true" /> if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); <see langword="false" /> if the reader is not positioned on an attribute (the position of the reader does not change).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-960">使用這個方法傳回的項目之後瀏覽其屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-960">Use this method to return to an element after navigating through its attributes.</span></span> <span data-ttu-id="3aee5-961">這個方法會將讀取器移至下列節點類型的其中一個： `Element`， `DocumentType`，或`XmlDeclaration`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-961">This method moves the reader to one of the following node types: `Element`, `DocumentType`, or `XmlDeclaration`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-962">下列範例會顯示目前的節點上的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-962">The following example displays all attributes on the current node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#4)]
 [!code-vb[XmlReaderBasic#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-963">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-963">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-964">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-964">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToFirstAttribute">
      <MemberSignature Language="C#" Value="public abstract bool MoveToFirstAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToFirstAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToFirstAttribute" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToFirstAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToFirstAttribute();" />
      <MemberSignature Language="F#" Value="abstract member MoveToFirstAttribute : unit -&gt; bool" Usage="xmlReader.MoveToFirstAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-965">在衍生類別中覆寫時，移至第一個屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-965">When overridden in a derived class, moves to the first attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-966">如果屬性存在 (讀取器移至第一個屬性)，則為 <see langword="true" />，否則為 <see langword="false" /> (不會變更讀取器的位置)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-966">
              <see langword="true" /> if an attribute exists (the reader moves to the first attribute); otherwise, <see langword="false" /> (the position of the reader does not change).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3aee5-967">下列範例會取得第一個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="3aee5-967">The following example gets the value of the first attribute.</span></span>  
  
 [!code-csharp[XmlReaderBasic#5](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#5)]
 [!code-vb[XmlReaderBasic#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-968">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-968">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-969">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-969">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToNextAttribute">
      <MemberSignature Language="C#" Value="public abstract bool MoveToNextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToNextAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToNextAttribute" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToNextAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToNextAttribute();" />
      <MemberSignature Language="F#" Value="abstract member MoveToNextAttribute : unit -&gt; bool" Usage="xmlReader.MoveToNextAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-970">在衍生類別中覆寫時，移至下一個屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-970">When overridden in a derived class, moves to the next attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-971">如果有下一個屬性，則為 <see langword="true" />，如果沒有其他屬性，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-971">
              <see langword="true" /> if there is a next attribute; <see langword="false" /> if there are no more attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-972">如果目前的節點是項目節點，這個方法就相當於<xref:System.Xml.XmlReader.MoveToFirstAttribute%2A>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-972">If the current node is an element node, this method is equivalent to <xref:System.Xml.XmlReader.MoveToFirstAttribute%2A>.</span></span> <span data-ttu-id="3aee5-973">如果`MoveToNextAttribute`傳回`true`，讀取器移至下一個屬性，讀取器位置不會變更的否則為。</span><span class="sxs-lookup"><span data-stu-id="3aee5-973">If `MoveToNextAttribute` returns `true`, the reader moves to the next attribute; otherwise, the position of the reader does not change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-974">下列範例會顯示目前的節點上的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-974">The following example displays all attributes on the current node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#6)]
 [!code-vb[XmlReaderBasic#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-975">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-975">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-976">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-976">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XmlReader.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-977">在衍生類別中覆寫時，取得目前節點的限定名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-977">When overridden in a derived class, gets the qualified name of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aee5-978">目前節點的限定名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-978">The qualified name of the current node.</span>
          </span>
          <span data-ttu-id="3aee5-979">例如，<see langword="Name" />已<see langword="bk:book" />項目的<c> &lt;bk: book&amp;gt&gt;</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-979">For example, <see langword="Name" /> is <see langword="bk:book" /> for the element <c>&lt;bk:book&gt;</c>.</span>
          </span>
          <span data-ttu-id="3aee5-980">傳回的名稱需視節點的 <see cref="P:System.Xml.XmlReader.NodeType" /> 而定：</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-980">The name returned is dependent on the <see cref="P:System.Xml.XmlReader.NodeType" /> of the node.</span>
          </span>
          <span data-ttu-id="3aee5-981">下列節點類型會傳回所列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-981">The following node types return the listed values.</span>
          </span>
          <span data-ttu-id="3aee5-982">其他所有節點類型都會傳回空字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-982">All other node types return an empty string.</span>
          </span>
          <span data-ttu-id="3aee5-983">
            <list type="table">
              <listheader>
                <term> 節點型別</term>
                <description>名稱</description>
              </listheader>
              <item>
                <term>
                  <see langword="Attribute" />
                </term>
                <description>屬性的名稱。</description>
              </item>
              <item>
                <term>
                  <see langword="DocumentType" />
                </term>
                <description> 文件型別名稱。</description>
              </item>
              <item>
                <term>
                  <see langword="Element" />
                </term>
                <description> 標記名稱。</description>
              </item>
              <item>
                <term>
                  <see langword="EntityReference" />
                </term>
                <description> 所參考的實體名稱。</description>
              </item>
              <item>
                <term>
                  <see langword="ProcessingInstruction" />
                </term>
                <description> 處理指示的目標。</description>
              </item>
              <item>
                <term>
                  <see langword="XmlDeclaration" />
                </term>
                <description> 常值字串<see langword="xml" />。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-983">
              <list type="table">
                <listheader>
                  <term> Node type  </term>
                  <description> Name  </description>
                </listheader>
                <item>
                  <term>
                    <see langword="Attribute" />
                  </term>
                  <description> The name of the attribute.  </description>
                </item>
                <item>
                  <term>
                    <see langword="DocumentType" />
                  </term>
                  <description> The document type name.  </description>
                </item>
                <item>
                  <term>
                    <see langword="Element" />
                  </term>
                  <description> The tag name.  </description>
                </item>
                <item>
                  <term>
                    <see langword="EntityReference" />
                  </term>
                  <description> The name of the entity referenced.  </description>
                </item>
                <item>
                  <term>
                    <see langword="ProcessingInstruction" />
                  </term>
                  <description> The target of the processing instruction.  </description>
                </item>
                <item>
                  <term>
                    <see langword="XmlDeclaration" />
                  </term>
                  <description> The literal string <see langword="xml" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3aee5-984">下列範例會讀取 XML 檔案，並顯示每個節點。</span><span class="sxs-lookup"><span data-stu-id="3aee5-984">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-csharp[XmlReaderBasic#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#8)]
 [!code-vb[XmlReaderBasic#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#8)]  
  
 <span data-ttu-id="3aee5-985">此範例會使用`items.xml`檔案。</span><span class="sxs-lookup"><span data-stu-id="3aee5-985">The sample uses the `items.xml` file.</span></span>  
  
 [!code-xml[XML_Core_Files#2](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/items.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-986">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-986">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-987">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-987">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlReader.LocalName" />
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public abstract string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceURI : string" Usage="System.Xml.XmlReader.NamespaceURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-988">在衍生類別中覆寫時，取得讀取器所在節點的命名空間 URI (如 W3C 命名空間規格中所定義)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-988">When overridden in a derived class, gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aee5-989">目前節點的命名空間 URI，否則為空字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-989">The namespace URI of the current node; otherwise an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-990">這個屬性無關`Element`和`Attribute`僅限節點。</span><span class="sxs-lookup"><span data-stu-id="3aee5-990">This property is relevant to `Element` and `Attribute` nodes only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-991">下列範例會顯示每個節點的本機名稱，如果它們存在，前置詞和命名空間 URI。</span><span class="sxs-lookup"><span data-stu-id="3aee5-991">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-csharp[XmlReaderBasic#9](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#9)]
 [!code-vb[XmlReaderBasic#9](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#9)]  
  
 <span data-ttu-id="3aee5-992">此範例會使用該檔案，book2.xml，做為輸入。</span><span class="sxs-lookup"><span data-stu-id="3aee5-992">The example uses the file, book2.xml, as input.</span></span>  
  
 [!code-xml[XML_Core_Files#5](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/book2.xml#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-993">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-993">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-994">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-994">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable" Usage="System.Xml.XmlReader.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-995">在衍生類別中覆寫時，取得與這個實作相關聯的 <see cref="T:System.Xml.XmlNameTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-995">When overridden in a derived class, gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this implementation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aee5-996">
            <see langword="XmlNameTable" /> 可讓您取得節點中字串的原子化版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-996">The <see langword="XmlNameTable" /> enabling you to get the atomized version of a string within the node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-997">從傳回的所有節點和屬性名稱<xref:System.Xml.XmlReader>不可部分完成的使用`NameTable`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-997">All node and attribute names returned from <xref:System.Xml.XmlReader> are atomized using the `NameTable`.</span></span> <span data-ttu-id="3aee5-998">相同的名稱傳回多次時 (例如`Customer`)，然後相同`String`物件就會傳回該名稱。</span><span class="sxs-lookup"><span data-stu-id="3aee5-998">When the same name is returned multiple times (for example, `Customer`), then the same `String` object will be returned for that name.</span></span> <span data-ttu-id="3aee5-999">這項功能可讓您撰寫有效率的程式碼，進行物件比較，對這些字串，而不是昂貴的字串比較。</span><span class="sxs-lookup"><span data-stu-id="3aee5-999">This makes it possible for you to write efficient code that does object comparisons on these strings instead of expensive string comparisons.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1000">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1000">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1001">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1001">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlNameTable" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.XmlReader.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1002">在衍生類別中覆寫時，取得目前節點的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1002">When overridden in a derived class, gets the type of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aee5-1003">其中一個列舉值，指定目前節點的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1003">One of the enumeration values that specify the type of the current node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3aee5-1004">下列範例會讀取 XML 檔案，並顯示每個節點。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1004">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-csharp[XmlReaderBasic#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#8)]
 [!code-vb[XmlReaderBasic#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#8)]  
  
 <span data-ttu-id="3aee5-1005">此範例會使用`items.xml`檔案。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1005">The sample uses the `items.xml` file.</span></span>  
  
 [!code-xml[XML_Core_Files#2](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/items.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1006">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1006">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1007">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1007">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public abstract string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Prefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string" Usage="System.Xml.XmlReader.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1008">在衍生類別中覆寫時，取得與目前節點相關聯的命名空間前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1008">When overridden in a derived class, gets the namespace prefix associated with the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aee5-1009">與目前節點相關聯的命名空間前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1009">The namespace prefix associated with the current node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3aee5-1010">下列範例會顯示每個節點的本機名稱，如果它們存在，前置詞和命名空間 URI。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1010">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-csharp[XmlReaderBasic#9](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#9)]
 [!code-vb[XmlReaderBasic#9](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#9)]  
  
 <span data-ttu-id="3aee5-1011">此範例會使用該檔案，book2.xml，做為輸入。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1011">The example uses the file, book2.xml, as input.</span></span>  
  
 [!code-xml[XML_Core_Files#5](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/book2.xml#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1012">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1012">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1013">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1013">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public virtual char QuoteChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property char QuoteChar { char get(); };" />
      <MemberSignature Language="F#" Value="member this.QuoteChar : char" Usage="System.Xml.XmlReader.QuoteChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1014">在衍生類別中覆寫時，取得用來括住屬性節點值的引號字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1014">When overridden in a derived class, gets the quotation mark character used to enclose the value of an attribute node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aee5-1015">用來括住屬性節點值的引號字元 (" 或 ')。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1015">The quotation mark character (" or ') used to enclose the value of an attribute node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1016">這個屬性只適用於屬性節點。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1016">This property applies only to an attribute node.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1017">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1017">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1018">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1018">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public abstract bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Read();" />
      <MemberSignature Language="F#" Value="abstract member Read : unit -&gt; bool" Usage="xmlReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1019">在衍生類別中覆寫時，從資料流讀取下一個節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1019">When overridden in a derived class, reads the next node from the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1020">如果順利讀取下一個節點，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1020">
              <see langword="true" /> if the next node was read successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1021">當<xref:System.Xml.XmlReader>這是第一次建立並初始化，沒有可用的資訊。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1021">When an <xref:System.Xml.XmlReader> is first created and initialized, there is no information available.</span></span> <span data-ttu-id="3aee5-1022">您必須呼叫<xref:System.Xml.XmlReader.Read%2A>讀取的第一個節點。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1022">You must call <xref:System.Xml.XmlReader.Read%2A> to read the first node.</span></span> <span data-ttu-id="3aee5-1023"><xref:System.Xml.XmlReader.Read%2A>方法會設定狀態的 XML 讀取器，來起始<xref:System.Xml.ReadState>並透過 XML 檔案以循序方式移動，直到它到達的檔案，此時方法會傳回值的結尾`false`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1023">The <xref:System.Xml.XmlReader.Read%2A> method sets the state of the XML reader to initiate <xref:System.Xml.ReadState> and moves through the XML file sequentially until it reaches the end of the file, at which point the method returns a value of `false`.</span></span>  
  
 <span data-ttu-id="3aee5-1024">這個方法需要從資料流至少四個位元組，才能開始剖析。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1024">This method requires at least four bytes from the data stream in order to begin parsing.</span></span> <span data-ttu-id="3aee5-1025">如果傳回少於四個位元組，而且資料流中沒有詳細資料，此方法會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1025">If fewer than four bytes are returned and there is no more data in the stream, the method returns `false`.</span></span> <span data-ttu-id="3aee5-1026">如果資料流中有更多資料，方法會封鎖直到接收第四個位元組的剖析。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1026">If there is more data in the stream, the method will block parsing until receipt of the fourth byte.</span></span>  
  
 <span data-ttu-id="3aee5-1027">這個方法的非同步版本，請參閱<xref:System.Xml.XmlReader.ReadAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1027">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-1028">下列範例會讀取 XML 檔案，並顯示每個節點。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1028">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-csharp[XmlReaderBasic#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#8)]
 [!code-vb[XmlReaderBasic#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#8)]  
  
 <span data-ttu-id="3aee5-1029">此範例會使用`items.xml`檔案。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1029">The sample uses the `items.xml` file.</span></span>  
  
 [!code-xml[XML_Core_Files#2](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/items.xml#2)]  
  
 <span data-ttu-id="3aee5-1030">**輸出：**</span><span class="sxs-lookup"><span data-stu-id="3aee5-1030">**Output:**</span></span>  
  
```  
<Item>Test with an entity: 123</Item><Item>Test with a child element <more> stuff</Item><Item>Test with a CDATA section <![CDATA[<456>]]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-1031">剖析 XML 時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1031">An error occurred while parsing the XML.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1032">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1032">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1033">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1033">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; ReadAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; ReadAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadAsync () As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;bool&gt; ^ ReadAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : unit -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.ReadAsync : unit -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="xmlReader.ReadAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1034">非同步讀取資料流中的下一個節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1034">Asynchronously reads the next node from the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1035">如果成功讀取下一個節點，則為 <see langword="true" />，如果沒有其他節點可讀取，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1035">
              <see langword="true" /> if the next node was read successfully; <see langword="false" /> if there are no more nodes to read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1036">這是非同步的<xref:System.Xml.XmlReader.Read%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1036">This is the asynchronous version of <xref:System.Xml.XmlReader.Read%2A>, with the same functionality.</span></span> <span data-ttu-id="3aee5-1037">若要使用此方法，您必須設定<xref:System.Xml.XmlReaderSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1037">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1038">在未將 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlReader" /> 非同步方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1038">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="3aee5-1039">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1039">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAttributeValue">
      <MemberSignature Language="C#" Value="public abstract bool ReadAttributeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadAttributeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadAttributeValue" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ReadAttributeValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ReadAttributeValue();" />
      <MemberSignature Language="F#" Value="abstract member ReadAttributeValue : unit -&gt; bool" Usage="xmlReader.ReadAttributeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1040">在衍生類別中覆寫時，將屬性值剖析成一或多個 <see langword="Text" />、<see langword="EntityReference" /> 或 <see langword="EndEntity" /> 節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1040">When overridden in a derived class, parses the attribute value into one or more <see langword="Text" />, <see langword="EntityReference" />, or <see langword="EndEntity" /> nodes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1041">如果傳回的是節點，則為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1041">
              <see langword="true" /> if there are nodes to return.</span>
          </span>
          <span data-ttu-id="3aee5-1042">如果在初次呼叫時讀取器不位於屬性節點上，或已讀取所有屬性值，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1042">
              <see langword="false" /> if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.</span>
          </span>
          <span data-ttu-id="3aee5-1043">針對含有 <see langword="String.Empty" /> 值的單一節點，空白的屬性 (例如 <c>misc=""</c>) 會傳回 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1043">An empty attribute, such as, <c>misc=""</c>, returns <see langword="true" /> with a single node with a value of <see langword="String.Empty" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1044">使用這個方法之後呼叫<xref:System.Xml.XmlReader.MoveToAttribute%2A>閱讀的文字或實體參考節點的屬性值所組成。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1044">Use this method after calling <xref:System.Xml.XmlReader.MoveToAttribute%2A> to read through the text or entity reference nodes that make up the attribute value.</span></span> <span data-ttu-id="3aee5-1045"><xref:System.Xml.XmlReader.Depth%2A>屬性值的節點是屬性節點的深度加一，它會自動遞增和遞減 1 當您逐步執行和跳離一般實體參考。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1045">The <xref:System.Xml.XmlReader.Depth%2A> of the attribute value nodes is one plus the depth of the attribute node; it increments and decrements by one when you step into and out of general entity references.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1046">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1046">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1047">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1047">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAs">
      <MemberSignature Language="C#" Value="public virtual object ReadContentAs (Type returnType, System.Xml.IXmlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadContentAs(class System.Type returnType, class System.Xml.IXmlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAs (returnType As Type, namespaceResolver As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadContentAs(Type ^ returnType, System::Xml::IXmlNamespaceResolver ^ namespaceResolver);" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAs : Type * System.Xml.IXmlNamespaceResolver -&gt; obj&#xA;override this.ReadContentAs : Type * System.Xml.IXmlNamespaceResolver -&gt; obj" Usage="xmlReader.ReadContentAs (returnType, namespaceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="returnType">
          <span data-ttu-id="3aee5-1048">要傳回的值型别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1048">The type of the value to be returned.</span>
          </span>
          <span data-ttu-id="3aee5-1049">**注意**：使用 .NET Framework 3.5 的版本時，<c>returnType</c> 參數的值現在可以是 <see cref="T:System.DateTimeOffset" /> 類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1049">**Note** With the release of the .NET Framework 3.5, the value of the <c>returnType</c> parameter can now be the <see cref="T:System.DateTimeOffset" /> type.</span>
          </span>
        </param>
        <param name="namespaceResolver">
          <span data-ttu-id="3aee5-1050">
            <see cref="T:System.Xml.IXmlNamespaceResolver" /> 物件，用來解析任何與型別轉換相關的命名空間前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1050">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> object that is used to resolve any namespace prefixes related to type conversion.</span>
          </span>
          <span data-ttu-id="3aee5-1051">例如，將 <see cref="T:System.Xml.XmlQualifiedName" /> 物件轉換為 <c>xs:string</c> 時，可以使用它。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1051">For example, this can be used when converting an <see cref="T:System.Xml.XmlQualifiedName" /> object to an <c>xs:string</c>.</span>
          </span>
          <span data-ttu-id="3aee5-1052">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1052">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-1053">以指定型别的物件形式讀取內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1053">Reads the content as an object of the type specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1054">轉換為要求類型的串連文字內容或屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1054">The concatenated text content or attribute value converted to the requested type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1055">這個方法會讀取目前的讀取器位置上的文字內容，並將它轉換成要求的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1055">This method reads the text content at the current reader position and converts it to the requested return type.</span></span> <span data-ttu-id="3aee5-1056">文字、泛空白字元、顯著泛空白字元及 CDATA 區段都是串連的。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1056">Text, white space, significant white space and CDATA sections are concatenated.</span></span> <span data-ttu-id="3aee5-1057">註解和處理指示會略過，並且實體參考會自動進行解析。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1057">Comments and processing instructions are skipped and entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="3aee5-1058">這個方法用來讀取、 轉換，如有必要，並傳回從目前節點的不可部份完成值的項目內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1058">This method is used to read, convert if necessary, and return atomic value items from the current node content.</span></span> <span data-ttu-id="3aee5-1059">如果輸入型別是目前的節點包含目前節點的值的目標型別執行個體之類型的有效對應會傳回。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1059">If the input type is a valid mappings for the type of the current node then an instance of the target type containing the value of the current node is returned.</span></span> <span data-ttu-id="3aee5-1060">請參閱 < 備註 > 一節<xref:System.Xml.XmlReader>referencepage 如需預設對應的清單。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1060">See the Remarks section in the <xref:System.Xml.XmlReader> referencepage for a list of the default mappings.</span></span>  
  
 <span data-ttu-id="3aee5-1061">例如，如果您有下列的 XML 文字：</span><span class="sxs-lookup"><span data-stu-id="3aee5-1061">For example, if you had the following XML text:</span></span>  
  
```xml  
<elem>123 <!-- comment --> <?pi my_text?> 456 <?pi another_pi?></elem>  
```  
  
 <span data-ttu-id="3aee5-1062">如果資料型別和字串陣列，提供給<xref:System.Xml.XmlReader.ReadContentAs%2A>從根據有效的 CLR 型別對應的清單的字串轉換方法呼叫，則整數值。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1062">If the data is typed and a string array is supplied to the <xref:System.Xml.XmlReader.ReadContentAs%2A> method call, then the integer values are converted from strings according to the list of valid CLR type mappings.</span></span>  
  
 <span data-ttu-id="3aee5-1063">如果資料是不具型別和字串陣列，提供給<xref:System.Xml.XmlReader.ReadContentAs%2A>方法呼叫，將內容會剖析為個別的字串。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1063">If the data is untyped and a string array is supplied to the <xref:System.Xml.XmlReader.ReadContentAs%2A> method call, then the content is parsed into separate strings.</span></span> <span data-ttu-id="3aee5-1064">包含兩個字串的陣列會傳回值為"123"和"456 」。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1064">An array containing two strings is returned with the values "123" and "456".</span></span> <span data-ttu-id="3aee5-1065">從內容，不會保留空間。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1065">The spaces are not preserved from the content.</span></span>  
  
 <span data-ttu-id="3aee5-1066">通常在讀取不具類型的資料內容會剖析根據提供的型別。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1066">In general when reading untyped data the content is parsed according to the supplied type.</span></span> <span data-ttu-id="3aee5-1067">例如，如果整數陣列提供給<xref:System.Xml.XmlReader.ReadContentAs%2A>方法呼叫，則字串會剖析為整數的陣列{123,456}。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1067">For example, if an integer array is supplied to the <xref:System.Xml.XmlReader.ReadContentAs%2A> method call then the string is parsed into an array of integers {123,456}.</span></span>  
  
 <span data-ttu-id="3aee5-1068">在下列範例中的 XML 文字是不以空格分隔</span><span class="sxs-lookup"><span data-stu-id="3aee5-1068">In the following example the XML text is not separated by spaces</span></span>  
  
```xml  
<elem>123<!-- comment --><?pi my_text?>456789<?pi another_pi?></elem>  
```  
  
 <span data-ttu-id="3aee5-1069">如果內容是不具型別和字串陣列，提供給<xref:System.Xml.XmlReader.ReadContentAs%2A>方法然後呼叫包含其中一個值"123456789"會傳回串連的字串的陣列。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1069">If the content is untyped and a string array is supplied to the <xref:System.Xml.XmlReader.ReadContentAs%2A> method call then an array containing one concatenated string is returned with the value "123456789".</span></span>  
  
 <span data-ttu-id="3aee5-1070">下表描述這個方法處理每個節點類型的方式。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1070">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="3aee5-1071">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="3aee5-1071">XmlNodeType</span></span>|<span data-ttu-id="3aee5-1072">傳回值</span><span class="sxs-lookup"><span data-stu-id="3aee5-1072">Return value</span></span>|<span data-ttu-id="3aee5-1073">讀取器行為</span><span class="sxs-lookup"><span data-stu-id="3aee5-1073">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="3aee5-1074">文字、CDATA、泛空白字元及顯著泛空白字元節點的串連內容會轉換為要求的型別。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1074">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="3aee5-1075">移至下一個開始項目或結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1075">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3aee5-1076">實體參考會自動展開。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1076">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="3aee5-1077">與呼叫相同`XmlConvert.ToXxx`屬性值。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1077">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="3aee5-1078">讀取器會保持在目前位置。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1078">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="3aee5-1079">忽略處理指示 (PI) 或註解，並讀取 PI 或註解後面的串連文字內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1079">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="3aee5-1080">移至下一個開始項目或結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1080">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3aee5-1081">實體參考會自動展開。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1081">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="3aee5-1082">空字串。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1082">An empty string.</span></span>|<span data-ttu-id="3aee5-1083">讀取器會保持在目前位置。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1083">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="3aee5-1084">擲回 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1084">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="3aee5-1085">未定義 (但讀取器通常會保持在目前位置)。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1085">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="3aee5-1086">如需詳細資訊，請參閱的 < 備註 > 一節<xref:System.Xml.XmlReader>參考頁面並[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1086">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3aee5-1087">這個方法的非同步版本，請參閱<xref:System.Xml.XmlReader.ReadContentAsAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1087">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadContentAsAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-1088">下列範例會使用<xref:System.Xml.XmlReader.ReadContentAs%2A>方法來傳回色彩項目的內容到字串物件的陣列。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1088">The following example uses the <xref:System.Xml.XmlReader.ReadContentAs%2A> method to return the contents of the colors element into an array of string objects.</span></span>  
  
 [!code-csharp[XmlReader.ReadContentAs#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadContentAs/CS/readContentAs.cs#2)]
 [!code-vb[XmlReader.ReadContentAs#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadContentAs/VB/readContentAs.vb#2)]  
  
 <span data-ttu-id="3aee5-1089">該範例使用 `dataFile_2.xml` 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1089">The example uses the `dataFile_2.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadContentAs#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadContentAs/XML/dataFile_2.xml#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="3aee5-1090">此內容的目標類型格式不正確。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1090">The content is not in the correct format for the target type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="3aee5-1091">嘗試的轉換無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1091">The attempted cast is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-1092">
            <paramref name="returnType" /> 值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1092">The <paramref name="returnType" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1093">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1093">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1094">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1094">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="3aee5-1095">讀取 <see langword="Decimal.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1095">Read <see langword="Decimal.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;object&gt; ReadContentAsAsync (Type returnType, System.Xml.IXmlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ReadContentAsAsync(class System.Type returnType, class System.Xml.IXmlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsAsync (returnType As Type, namespaceResolver As IXmlNamespaceResolver) As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ ReadContentAsAsync(Type ^ returnType, System::Xml::IXmlNamespaceResolver ^ namespaceResolver);" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsAsync : Type * System.Xml.IXmlNamespaceResolver -&gt; System.Threading.Tasks.Task&lt;obj&gt;&#xA;override this.ReadContentAsAsync : Type * System.Xml.IXmlNamespaceResolver -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="xmlReader.ReadContentAsAsync (returnType, namespaceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlReader/&lt;ReadContentAsAsync&gt;c__async1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="returnType">
          <span data-ttu-id="3aee5-1096">要傳回的值型别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1096">The type of the value to be returned.</span>
          </span>
        </param>
        <param name="namespaceResolver">
          <span data-ttu-id="3aee5-1097">
            <see cref="T:System.Xml.IXmlNamespaceResolver" /> 物件，用來解析任何與型別轉換相關的命名空間前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1097">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> object that is used to resolve any namespace prefixes related to type conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-1098">以非同步的方式讀取做為指定型别之物件的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1098">Asynchronously reads the content as an object of the type specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1099">轉換為要求類型的串連文字內容或屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1099">The concatenated text content or attribute value converted to the requested type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1100">這是非同步的<xref:System.Xml.XmlReader.ReadContentAs%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1100">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadContentAs%2A>, with the same functionality.</span></span> <span data-ttu-id="3aee5-1101">若要使用此方法，您必須設定<xref:System.Xml.XmlReaderSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1101">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1102">在未將 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlReader" /> 非同步方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1102">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="3aee5-1103">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1103">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBase64">
      <MemberSignature Language="C#" Value="public virtual int ReadContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsBase64 : byte[] * int * int -&gt; int&#xA;override this.ReadContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlReader.ReadContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3aee5-1104">將產生的文字複製到其中的緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1104">The buffer into which to copy the resulting text.</span>
          </span>
          <span data-ttu-id="3aee5-1105">這個值不能是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1105">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="3aee5-1106">緩衝區中開始複製結果的位移。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1106">The offset into the buffer where to start copying the result.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3aee5-1107">要複製至緩衝區中的最大位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1107">The maximum number of bytes to copy into the buffer.</span>
          </span>
          <span data-ttu-id="3aee5-1108">從這個方法傳回所複製的實際位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1108">The actual number of bytes copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-1109">讀取內容，並傳回 Base64 已解碼的二進位位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1109">Reads the content and returns the Base64 decoded binary bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1110">寫入緩衝區的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1110">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1111">這個方法會串流處理內容、 解碼`Base64`內容，並傳回已解碼二進位位元組 (例如，內嵌`Base64`編碼的 GIF 影像) 到緩衝區。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1111">This method streams the content, decodes the `Base64` content, and returns the decoded binary bytes (for example, an inline `Base64` encoded GIF image) into the buffer.</span></span> <span data-ttu-id="3aee5-1112">可以連續呼叫這個方法來讀取內嵌文字的大量資料流。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1112">This method can be called successively to read large streams of embedded text.</span></span> <span data-ttu-id="3aee5-1113">如需詳細資訊，請參閱 RFC 1521"MIME （多用途網際網路郵件延伸標準） 第一個： 機制來指定，並描述網際網路訊息內文的格式 」。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1113">For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</span></span> <span data-ttu-id="3aee5-1114">您可以取得從 Rfc[註解的網站要求](http://go.microsoft.com/fwlink/?LinkId=37119)。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1114">You can obtain RFCs from the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkId=37119).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3aee5-1115">您不應該存取的任何讀取器屬性呼叫之間<xref:System.Xml.XmlReader.ReadContentAsBase64%2A>方法，這個方法傳回值直到`0`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1115">You should not access any of the reader properties between calls to the <xref:System.Xml.XmlReader.ReadContentAsBase64%2A> method until the method returns the value `0`.</span></span>  
  
 <span data-ttu-id="3aee5-1116">這個方法有下列行為：</span><span class="sxs-lookup"><span data-stu-id="3aee5-1116">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="3aee5-1117"><xref:System.Xml.XmlReader.ReadContentAsBase64%2A> 傳回值`0`當它到達它正在操作的位元組資料流的結尾。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1117"><xref:System.Xml.XmlReader.ReadContentAsBase64%2A> returns the value `0` when it has reached the end of the byte stream it was operating on.</span></span> <span data-ttu-id="3aee5-1118">讀取器定位於第一個非內容節點上。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1118">The reader is positioned on the first non-content node.</span></span>  
  
-   <span data-ttu-id="3aee5-1119">如果您尋求更少，或確切數目，超過會留在讀取器會保留在其目前位置的資料流位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1119">If you ask for fewer, or the exact number of, bytes than are left in the stream the reader remains in its current position.</span></span>  
  
-   <span data-ttu-id="3aee5-1120"><xref:System.Xml.XmlReader.ReadContentAsBase64%2A> 不支援下列的 XML 節點類型： `Element`， `XmlDeclaration`， `None`， `Document`， `DocumentType`， `Notation`， `Entity`， `DocumentFragment`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1120"><xref:System.Xml.XmlReader.ReadContentAsBase64%2A> is not supported on the following XML node types: `Element`, `XmlDeclaration`, `None`, `Document`, `DocumentType`, `Notation`, `Entity`, `DocumentFragment`.</span></span>  
  
 <span data-ttu-id="3aee5-1121">這個方法的非同步版本，請參閱<xref:System.Xml.XmlReader.ReadContentAsBase64Async%2A>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1121">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadContentAsBase64Async%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-1122">
            <paramref name="buffer" /> 值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1122">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1123">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1123">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1124">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1124">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3aee5-1125">緩衝區的索引或是索引 + 計數大於所配置的緩衝區大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1125">The index into the buffer or index + count is larger than the allocated buffer size.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3aee5-1126">
            <see cref="T:System.Xml.XmlReader" /> 實作不支援這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1126">The <see cref="T:System.Xml.XmlReader" /> implementation does not support this method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBase64Async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadContentAsBase64Async (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadContentAsBase64Async(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsBase64Async (buffer As Byte(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadContentAsBase64Async(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsBase64Async : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadContentAsBase64Async : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="xmlReader.ReadContentAsBase64Async (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3aee5-1127">將產生的文字複製到其中的緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1127">The buffer into which to copy the resulting text.</span>
          </span>
          <span data-ttu-id="3aee5-1128">這個值不能是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1128">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="3aee5-1129">緩衝區中開始複製結果的位移。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1129">The offset into the buffer where to start copying the result.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3aee5-1130">要複製至緩衝區中的最大位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1130">The maximum number of bytes to copy into the buffer.</span>
          </span>
          <span data-ttu-id="3aee5-1131">從這個方法傳回所複製的實際位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1131">The actual number of bytes copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-1132">以非同步的方式讀取內容，並傳回 Base64 已解碼的二進位位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1132">Asynchronously reads the content and returns the Base64 decoded binary bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1133">寫入緩衝區的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1133">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1134">這是非同步的<xref:System.Xml.XmlReader.ReadContentAsBase64%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1134">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadContentAsBase64%2A>, with the same functionality.</span></span> <span data-ttu-id="3aee5-1135">若要使用此方法，您必須設定<xref:System.Xml.XmlReaderSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1135">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1136">在未將 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlReader" /> 非同步方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1136">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="3aee5-1137">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1137">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBinHex">
      <MemberSignature Language="C#" Value="public virtual int ReadContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsBinHex : byte[] * int * int -&gt; int&#xA;override this.ReadContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlReader.ReadContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3aee5-1138">將產生的文字複製到其中的緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1138">The buffer into which to copy the resulting text.</span>
          </span>
          <span data-ttu-id="3aee5-1139">這個值不能是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1139">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="3aee5-1140">緩衝區中開始複製結果的位移。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1140">The offset into the buffer where to start copying the result.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3aee5-1141">要複製至緩衝區中的最大位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1141">The maximum number of bytes to copy into the buffer.</span>
          </span>
          <span data-ttu-id="3aee5-1142">從這個方法傳回所複製的實際位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1142">The actual number of bytes copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-1143">讀取內容，並傳回 <see langword="BinHex" /> 已解碼的二進位位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1143">Reads the content and returns the <see langword="BinHex" /> decoded binary bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1144">寫入緩衝區的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1144">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1145">這個方法會串流處理內容、 解碼`BinHex`內容，並傳回已解碼二進位位元組 (例如，內嵌`BinHex`編碼的 GIF 影像) 到緩衝區。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1145">This method streams the content, decodes the `BinHex` content, and returns the decoded binary bytes (for example, an inline `BinHex` encoded GIF image) into the buffer.</span></span> <span data-ttu-id="3aee5-1146">可以連續呼叫這個方法來讀取內嵌文字的大量資料流。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1146">This method can be called successively to read large streams of embedded text.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3aee5-1147">您不應該存取的任何讀取器屬性呼叫之間<xref:System.Xml.XmlReader.ReadContentAsBinHex%2A>方法，這個方法傳回值直到`0`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1147">You should not access any of the reader properties between calls to the <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> method until the method returns the value `0`.</span></span>  
  
 <span data-ttu-id="3aee5-1148">這個方法有下列行為：</span><span class="sxs-lookup"><span data-stu-id="3aee5-1148">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="3aee5-1149"><xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> 傳回值`0`當它到達它正在操作的位元組資料流的結尾。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1149"><xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> returns the value `0` when it has reached the end of the byte stream it was operating on.</span></span> <span data-ttu-id="3aee5-1150">讀取器定位於第一個非內容節點上。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1150">The reader is positioned on the first non-content node.</span></span>  
  
-   <span data-ttu-id="3aee5-1151">如果您尋求更少，或超過會留在資料流讀取位元組的確切數目，會保留在其目前的位置。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1151">If you ask for fewer, or the exact number, of bytes than are left in the stream the reader remains in its current position.</span></span>  
  
-   <span data-ttu-id="3aee5-1152"><xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> 不支援下列的 XML 節點類型： `Element`， `XmlDeclaration`， `None`， `Document`， `DocumentType`， `Notation, Entity`， `DocumentFragment`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1152"><xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> is not supported on the following XML node types: `Element`, `XmlDeclaration`, `None`, `Document`, `DocumentType`, `Notation, Entity`, `DocumentFragment`.</span></span>  
  
 <span data-ttu-id="3aee5-1153">這個方法的非同步版本，請參閱<xref:System.Xml.XmlReader.ReadContentAsBinHexAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1153">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadContentAsBinHexAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-1154">
            <paramref name="buffer" /> 值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1154">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1155">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1155">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1156">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1156">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3aee5-1157">緩衝區的索引或是索引 + 計數大於所配置的緩衝區大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1157">The index into the buffer or index + count is larger than the allocated buffer size.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3aee5-1158">
            <see cref="T:System.Xml.XmlReader" /> 實作不支援這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1158">The <see cref="T:System.Xml.XmlReader" /> implementation does not support this method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBinHexAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadContentAsBinHexAsync (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadContentAsBinHexAsync(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsBinHexAsync (buffer As Byte(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadContentAsBinHexAsync(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsBinHexAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadContentAsBinHexAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="xmlReader.ReadContentAsBinHexAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3aee5-1159">將產生的文字複製到其中的緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1159">The buffer into which to copy the resulting text.</span>
          </span>
          <span data-ttu-id="3aee5-1160">這個值不能是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1160">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="3aee5-1161">緩衝區中開始複製結果的位移。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1161">The offset into the buffer where to start copying the result.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3aee5-1162">要複製至緩衝區中的最大位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1162">The maximum number of bytes to copy into the buffer.</span>
          </span>
          <span data-ttu-id="3aee5-1163">從這個方法傳回所複製的實際位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1163">The actual number of bytes copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-1164">以非同步的方式讀取內容，並傳回 <see langword="BinHex" /> 的解碼二進位位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1164">Asynchronously reads the content and returns the <see langword="BinHex" /> decoded binary bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1165">寫入緩衝區的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1165">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1166">這是非同步的<xref:System.Xml.XmlReader.ReadContentAsBinHex%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1166">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A>, with the same functionality.</span></span> <span data-ttu-id="3aee5-1167">若要使用此方法，您必須設定<xref:System.Xml.XmlReaderSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1167">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1168">在未將 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlReader" /> 非同步方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1168">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="3aee5-1169">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1169">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBoolean">
      <MemberSignature Language="C#" Value="public virtual bool ReadContentAsBoolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadContentAsBoolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsBoolean" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsBoolean () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadContentAsBoolean();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsBoolean : unit -&gt; bool&#xA;override this.ReadContentAsBoolean : unit -&gt; bool" Usage="xmlReader.ReadContentAsBoolean " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1170">以 <see langword="Boolean" /> 的形式，讀取目前位置的文字內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1170">Reads the text content at the current position as a <see langword="Boolean" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1171">
            <see cref="T:System.Boolean" /> 物件形式的文字內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1171">The text content as a <see cref="T:System.Boolean" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1172">這個方法會串連文字、 泛空白字元、 顯著泛空白字元和 CDATA 區段，並略過任何註解或處理指示。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1172">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="3aee5-1173">會自動解析實體參考。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1173">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="3aee5-1174">如果內容的型別`xsd:boolean`，讀取器傳回 unboxed<xref:System.Boolean>物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1174">If the content is typed `xsd:boolean`, the reader returns an unboxed <xref:System.Boolean> object.</span></span> <span data-ttu-id="3aee5-1175">如果內容不具型別`xsd:boolean`，讀取器會嘗試將它轉換成<xref:System.Boolean>物件所定義的規則根據[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1175">If the content is not typed `xsd:boolean`, the reader attempts to convert it to a <xref:System.Boolean> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3aee5-1176">下表描述這個方法處理每個節點類型的方式。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1176">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="3aee5-1177">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="3aee5-1177">XmlNodeType</span></span>|<span data-ttu-id="3aee5-1178">傳回值</span><span class="sxs-lookup"><span data-stu-id="3aee5-1178">Return value</span></span>|<span data-ttu-id="3aee5-1179">讀取器行為</span><span class="sxs-lookup"><span data-stu-id="3aee5-1179">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="3aee5-1180">文字、CDATA、泛空白字元及顯著泛空白字元節點的串連內容會轉換為要求的型別。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1180">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="3aee5-1181">移至下一個開始項目或結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1181">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3aee5-1182">實體參考會自動展開。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1182">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="3aee5-1183">與呼叫相同`XmlConvert.ToXxx`屬性值。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1183">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="3aee5-1184">讀取器會保持在目前位置。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1184">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="3aee5-1185">忽略處理指示 (PI) 或註解，並讀取 PI 或註解後面的串連文字內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1185">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="3aee5-1186">移至下一個開始項目或結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1186">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3aee5-1187">實體參考會自動展開。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1187">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="3aee5-1188">空字串。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1188">An empty string.</span></span>|<span data-ttu-id="3aee5-1189">讀取器會保持在目前位置。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1189">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="3aee5-1190">擲回 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1190">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="3aee5-1191">未定義 (但讀取器通常會保持在目前位置)。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1191">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="3aee5-1192">如需詳細資訊，請參閱 <<c0> <xref:System.Xml.XmlReader> 參考頁面並[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1192">For more information, see the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-1193">下列範例會使用<xref:System.Xml.XmlReader.ReadContentAsBoolean%2A>方法來讀取以 B 屬性`oolean`值。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1193">The following example uses the <xref:System.Xml.XmlReader.ReadContentAsBoolean%2A> method to read the attribute as a B`oolean` value.</span></span>  
  
 [!code-csharp[XmlReader.ReadContentAs#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadContentAs/CS/readContentAs.cs#1)]
 [!code-vb[XmlReader.ReadContentAs#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadContentAs/VB/readContentAs.vb#1)]  
  
 <span data-ttu-id="3aee5-1194">該範例使用 `dataFile_2.xml` 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1194">The example uses the `dataFile_2.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadContentAs#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadContentAs/XML/dataFile_2.xml#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="3aee5-1195">嘗試的轉換無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1195">The attempted cast is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="3aee5-1196">字串格式無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1196">The string format is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1197">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1197">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1198">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1198">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsDateTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ReadContentAsDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ReadContentAsDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsDateTime () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ReadContentAsDateTime();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsDateTime : unit -&gt; DateTime&#xA;override this.ReadContentAsDateTime : unit -&gt; DateTime" Usage="xmlReader.ReadContentAsDateTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1199">以 <see cref="T:System.DateTime" /> 物件的形式，讀取目前位置的文字內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1199">Reads the text content at the current position as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1200">
            <see cref="T:System.DateTime" /> 物件形式的文字內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1200">The text content as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1201">這個方法會串連文字、 泛空白字元、 顯著泛空白字元和 CDATA 區段，並略過任何註解或處理指示。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1201">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="3aee5-1202">會自動解析實體參考。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1202">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="3aee5-1203">如果內容的型別`xsd:dateTime`，讀取器傳回 unboxed<xref:System.DateTime>物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1203">If the content is typed `xsd:dateTime`, the reader returns an unboxed <xref:System.DateTime> object.</span></span> <span data-ttu-id="3aee5-1204">如果內容不具型別`xsd:dateTime`，讀取器會嘗試將它轉換成<xref:System.DateTime>物件所定義的規則根據[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1204">If the content is not typed `xsd:dateTime`, the reader attempts to convert it to a <xref:System.DateTime> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3aee5-1205">當內容的型別為 <xref:System.DateTime.Year%2A?displayProperty=nameWithType> 時，無法依賴 `xsd:gMonthDay` 值。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1205">You cannot rely on the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> value when the content is typed as `xsd:gMonthDay`.</span></span> <span data-ttu-id="3aee5-1206"><xref:System.Xml.XmlReader> 一律設定<xref:System.DateTime.Year%2A?displayProperty=nameWithType>值在此例為 1904年。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1206"><xref:System.Xml.XmlReader> always sets the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> value to 1904 in this case.</span></span>  
  
 <span data-ttu-id="3aee5-1207">下表描述這個方法處理每個節點類型的方式。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1207">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="3aee5-1208">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="3aee5-1208">XmlNodeType</span></span>|<span data-ttu-id="3aee5-1209">傳回值</span><span class="sxs-lookup"><span data-stu-id="3aee5-1209">Return value</span></span>|<span data-ttu-id="3aee5-1210">讀取器行為</span><span class="sxs-lookup"><span data-stu-id="3aee5-1210">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="3aee5-1211">文字、CDATA、泛空白字元及顯著泛空白字元節點的串連內容會轉換為要求的型別。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1211">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="3aee5-1212">移至下一個開始項目或結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1212">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3aee5-1213">實體參考會自動展開。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1213">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="3aee5-1214">與呼叫相同`XmlConvert.ToXxx`屬性值。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1214">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="3aee5-1215">讀取器會保持在目前位置。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1215">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="3aee5-1216">忽略處理指示 (PI) 或註解，並讀取 PI 或註解後面的串連文字內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1216">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="3aee5-1217">移至下一個開始項目或結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1217">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3aee5-1218">實體參考會自動展開。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1218">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="3aee5-1219">空字串。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1219">An empty string.</span></span>|<span data-ttu-id="3aee5-1220">讀取器會保持在目前位置。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1220">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="3aee5-1221">擲回 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1221">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="3aee5-1222">未定義 (但讀取器通常會保持在目前位置)。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1222">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="3aee5-1223">如需詳細資訊，請參閱 <<c0> <xref:System.Xml.XmlReader> 參考頁面並[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1223">For more information, see the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="3aee5-1224">嘗試的轉換無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1224">The attempted cast is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="3aee5-1225">字串格式無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1225">The string format is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1226">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1226">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1227">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1227">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsDateTimeOffset">
      <MemberSignature Language="C#" Value="public virtual DateTimeOffset ReadContentAsDateTimeOffset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTimeOffset ReadContentAsDateTimeOffset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsDateTimeOffset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsDateTimeOffset () As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTimeOffset ReadContentAsDateTimeOffset();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsDateTimeOffset : unit -&gt; DateTimeOffset&#xA;override this.ReadContentAsDateTimeOffset : unit -&gt; DateTimeOffset" Usage="xmlReader.ReadContentAsDateTimeOffset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1228">以 <see cref="T:System.DateTimeOffset" /> 物件的形式，讀取目前位置的文字內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1228">Reads the text content at the current position as a <see cref="T:System.DateTimeOffset" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1229">
            <see cref="T:System.DateTimeOffset" /> 物件形式的文字內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1229">The text content as a <see cref="T:System.DateTimeOffset" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1230">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1230">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1231">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1231">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsDecimal">
      <MemberSignature Language="C#" Value="public virtual decimal ReadContentAsDecimal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Decimal ReadContentAsDecimal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsDecimal () As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Decimal ReadContentAsDecimal();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsDecimal : unit -&gt; decimal&#xA;override this.ReadContentAsDecimal : unit -&gt; decimal" Usage="xmlReader.ReadContentAsDecimal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1232">以 <see cref="T:System.Decimal" /> 物件的形式，讀取目前位置的文字內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1232">Reads the text content at the current position as a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1233">
            <see cref="T:System.Decimal" /> 物件形式的目前位置文字內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1233">The text content at the current position as a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1234">這個方法會串連文字、 泛空白字元、 顯著泛空白字元和 CDATA 區段，並略過任何註解或處理指示。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1234">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="3aee5-1235">會自動解析實體參考。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1235">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="3aee5-1236">如果內容的型別`xsd:decimal`，讀取器傳回 unboxed<xref:System.Decimal>物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1236">If the content is typed `xsd:decimal`, the reader returns an unboxed <xref:System.Decimal> object.</span></span> <span data-ttu-id="3aee5-1237">如果內容不具型別`xsd:decimal`，讀取器會嘗試將它轉換成<xref:System.Decimal>物件所定義的規則根據[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1237">If the content is not typed `xsd:decimal`, the reader attempts to convert it to a <xref:System.Decimal> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3aee5-1238">下表描述這個方法處理每個節點類型的方式。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1238">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="3aee5-1239">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="3aee5-1239">XmlNodeType</span></span>|<span data-ttu-id="3aee5-1240">傳回值</span><span class="sxs-lookup"><span data-stu-id="3aee5-1240">Return value</span></span>|<span data-ttu-id="3aee5-1241">讀取器行為</span><span class="sxs-lookup"><span data-stu-id="3aee5-1241">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="3aee5-1242">文字、CDATA、泛空白字元及顯著泛空白字元節點的串連內容會轉換為要求的型別。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1242">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="3aee5-1243">移至下一個開始項目或結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1243">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3aee5-1244">實體參考會自動展開。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1244">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="3aee5-1245">與呼叫相同`XmlConvert.ToXxx`屬性值。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1245">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="3aee5-1246">讀取器會保持在目前位置。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1246">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="3aee5-1247">忽略處理指示 (PI) 或註解，並讀取 PI 或註解後面的串連文字內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1247">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="3aee5-1248">移至下一個開始項目或結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1248">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3aee5-1249">實體參考會自動展開。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1249">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="3aee5-1250">空字串。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1250">An empty string.</span></span>|<span data-ttu-id="3aee5-1251">讀取器會保持在目前位置。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1251">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="3aee5-1252">擲回 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1252">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="3aee5-1253">未定義 (但讀取器通常會保持在目前位置)。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1253">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="3aee5-1254">如需詳細資訊，請參閱 <<c0> <xref:System.Xml.XmlReader> 參考頁面並[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1254">For more information, see the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="3aee5-1255">嘗試的轉換無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1255">The attempted cast is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="3aee5-1256">字串格式無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1256">The string format is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1257">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1257">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1258">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1258">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsDouble">
      <MemberSignature Language="C#" Value="public virtual double ReadContentAsDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ReadContentAsDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsDouble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsDouble () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double ReadContentAsDouble();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsDouble : unit -&gt; double&#xA;override this.ReadContentAsDouble : unit -&gt; double" Usage="xmlReader.ReadContentAsDouble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1259">以雙精確度浮點數的形式讀取目前位置的文字內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1259">Reads the text content at the current position as a double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1260">雙精確度浮點數形式的文字內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1260">The text content as a double-precision floating-point number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1261">這個方法會串連文字、 泛空白字元、 顯著泛空白字元和 CDATA 區段，並略過任何註解或處理指示。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1261">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="3aee5-1262">會自動解析實體參考。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1262">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="3aee5-1263">如果內容的型別`xsd:double`，讀取器傳回的雙精確度浮點數。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1263">If the content is typed `xsd:double`, the reader returns a double-precision floating-point number.</span></span> <span data-ttu-id="3aee5-1264">如果內容不具型別`xsd:double`，讀取器會嘗試將它轉換為雙精確度浮點數，根據所定義的規則[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1264">If the content is not typed `xsd:double`, the reader attempts to convert it to a double-precision floating-point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3aee5-1265">下表描述這個方法處理每個節點類型的方式。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1265">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="3aee5-1266">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="3aee5-1266">XmlNodeType</span></span>|<span data-ttu-id="3aee5-1267">傳回值</span><span class="sxs-lookup"><span data-stu-id="3aee5-1267">Return value</span></span>|<span data-ttu-id="3aee5-1268">讀取器行為</span><span class="sxs-lookup"><span data-stu-id="3aee5-1268">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="3aee5-1269">文字、CDATA、泛空白字元及顯著泛空白字元節點的串連內容會轉換為要求的型別。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1269">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="3aee5-1270">移至下一個開始項目或結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1270">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3aee5-1271">實體參考會自動展開。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1271">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="3aee5-1272">與呼叫相同`XmlConvert.ToXxx`屬性值。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1272">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="3aee5-1273">讀取器會保持在目前位置。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1273">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="3aee5-1274">忽略處理指示 (PI) 或註解，並讀取 PI 或註解後面的串連文字內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1274">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="3aee5-1275">移至下一個開始項目或結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1275">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3aee5-1276">實體參考會自動展開。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1276">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="3aee5-1277">空字串。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1277">An empty string.</span></span>|<span data-ttu-id="3aee5-1278">讀取器會保持在目前位置。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1278">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="3aee5-1279">擲回 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1279">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="3aee5-1280">未定義 (但讀取器通常會保持在目前位置)。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1280">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="3aee5-1281">如需詳細資訊，請參閱 <<c0> <xref:System.Xml.XmlReader> 參考頁面並[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1281">For more information, see the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="3aee5-1282">嘗試的轉換無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1282">The attempted cast is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="3aee5-1283">字串格式無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1283">The string format is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1284">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1284">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1285">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1285">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsFloat">
      <MemberSignature Language="C#" Value="public virtual float ReadContentAsFloat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 ReadContentAsFloat() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsFloat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsFloat () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual float ReadContentAsFloat();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsFloat : unit -&gt; single&#xA;override this.ReadContentAsFloat : unit -&gt; single" Usage="xmlReader.ReadContentAsFloat " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1286">以單精確度浮點數的形式讀取目前位置的文字內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1286">Reads the text content at the current position as a single-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1287">單精確度浮點數形式之目前位置的文字內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1287">The text content at the current position as a single-precision floating point number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1288">這個方法會串連文字、 泛空白字元、 顯著泛空白字元和 CDATA 區段，並略過任何註解或處理指示。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1288">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="3aee5-1289">會自動解析實體參考。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1289">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="3aee5-1290">如果內容的型別`xsd:float`，讀取器傳回 unboxed 單精確度浮點數。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1290">If the content is typed `xsd:float`, the reader returns an unboxed a single-precision floating point number.</span></span> <span data-ttu-id="3aee5-1291">如果內容不具型別`xsd:float`，讀取器會嘗試將它轉換成單精確度浮點數根據所定義的規則[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1291">If the content is not typed `xsd:float`, the reader attempts to convert it to a single-precision floating point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3aee5-1292">下表描述這個方法處理每個節點類型的方式。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1292">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="3aee5-1293">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="3aee5-1293">XmlNodeType</span></span>|<span data-ttu-id="3aee5-1294">傳回值</span><span class="sxs-lookup"><span data-stu-id="3aee5-1294">Return value</span></span>|<span data-ttu-id="3aee5-1295">讀取器行為</span><span class="sxs-lookup"><span data-stu-id="3aee5-1295">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="3aee5-1296">文字、CDATA、泛空白字元及顯著泛空白字元節點的串連內容會轉換為要求的型別。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1296">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="3aee5-1297">移至下一個開始項目或結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1297">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3aee5-1298">實體參考會自動展開。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1298">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="3aee5-1299">與呼叫相同`XmlConvert.ToXxx`屬性值。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1299">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="3aee5-1300">讀取器會保持在目前位置。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1300">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="3aee5-1301">忽略處理指示 (PI) 或註解，並讀取 PI 或註解後面的串連文字內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1301">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="3aee5-1302">移至下一個開始項目或結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1302">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3aee5-1303">實體參考會自動展開。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1303">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="3aee5-1304">空字串。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1304">An empty string.</span></span>|<span data-ttu-id="3aee5-1305">讀取器會保持在目前位置。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1305">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="3aee5-1306">擲回 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1306">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="3aee5-1307">未定義 (但讀取器通常會保持在目前位置)。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1307">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="3aee5-1308">如需詳細資訊，請參閱的 < 備註 > 一節<xref:System.Xml.XmlReader>參考頁面並[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1308">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="3aee5-1309">嘗試的轉換無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1309">The attempted cast is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="3aee5-1310">字串格式無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1310">The string format is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1311">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1311">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1312">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1312">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsInt">
      <MemberSignature Language="C#" Value="public virtual int ReadContentAsInt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadContentAsInt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsInt" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsInt () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadContentAsInt();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsInt : unit -&gt; int&#xA;override this.ReadContentAsInt : unit -&gt; int" Usage="xmlReader.ReadContentAsInt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1313">以 32 位元帶正負號之整數的形式讀取目前位置的文字內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1313">Reads the text content at the current position as a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1314">32 位元帶正負號之整數形式的文字內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1314">The text content as a 32-bit signed integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1315">這個方法會串連文字、 泛空白字元、 顯著泛空白字元和 CDATA 區段，並略過任何註解或處理指示。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1315">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="3aee5-1316">會自動解析實體參考。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1316">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="3aee5-1317">如果內容的型別`xsd:integer`，讀取器傳回的 unboxed 的 32 位元帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1317">If the content is typed `xsd:integer`, the reader returns an unboxed 32-bit signed integer.</span></span> <span data-ttu-id="3aee5-1318">如果內容不具型別`xsd:integer`，讀取器會嘗試將它轉換成 32 位元帶正負號的整數，根據所定義的規則[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1318">If the content is not typed `xsd:integer`, the reader attempts to convert it to a 32-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3aee5-1319">下表描述這個方法處理每個節點類型的方式。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1319">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="3aee5-1320">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="3aee5-1320">XmlNodeType</span></span>|<span data-ttu-id="3aee5-1321">傳回值</span><span class="sxs-lookup"><span data-stu-id="3aee5-1321">Return value</span></span>|<span data-ttu-id="3aee5-1322">讀取器行為</span><span class="sxs-lookup"><span data-stu-id="3aee5-1322">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="3aee5-1323">文字、CDATA、泛空白字元及顯著泛空白字元節點的串連內容會轉換為要求的型別。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1323">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="3aee5-1324">移至下一個開始項目或結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1324">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3aee5-1325">實體參考會自動展開。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1325">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="3aee5-1326">與呼叫相同`XmlConvert.ToXxx`屬性值。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1326">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="3aee5-1327">讀取器會保持在目前位置。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1327">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="3aee5-1328">忽略處理指示 (PI) 或註解，並讀取 PI 或註解後面的串連文字內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1328">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="3aee5-1329">移至下一個開始項目或結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1329">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3aee5-1330">實體參考會自動展開。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1330">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="3aee5-1331">空字串。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1331">An empty string.</span></span>|<span data-ttu-id="3aee5-1332">讀取器會保持在目前位置。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1332">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="3aee5-1333">擲回 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1333">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="3aee5-1334">未定義 (但讀取器通常會保持在目前位置)。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1334">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="3aee5-1335">如需詳細資訊，請參閱的 < 備註 > 一節<xref:System.Xml.XmlReader>參考頁面並[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1335">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="3aee5-1336">嘗試的轉換無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1336">The attempted cast is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="3aee5-1337">字串格式無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1337">The string format is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1338">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1338">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1339">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1339">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsLong">
      <MemberSignature Language="C#" Value="public virtual long ReadContentAsLong ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 ReadContentAsLong() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsLong" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsLong () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long ReadContentAsLong();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsLong : unit -&gt; int64&#xA;override this.ReadContentAsLong : unit -&gt; int64" Usage="xmlReader.ReadContentAsLong " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1340">以 64 位元帶正負號之整數的形式讀取目前位置的文字內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1340">Reads the text content at the current position as a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1341">64 位元帶正負號之整數形式的文字內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1341">The text content as a 64-bit signed integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1342">這個方法會串連文字、 泛空白字元、 顯著泛空白字元和 CDATA 區段，並略過任何註解或處理指示。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1342">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="3aee5-1343">會自動解析實體參考。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1343">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="3aee5-1344">如果內容的型別`xsd:long`，讀取器傳回的 unboxed 的 64 位元帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1344">If the content is typed `xsd:long`, the reader returns an unboxed 64-bit signed integer.</span></span> <span data-ttu-id="3aee5-1345">如果內容不具型別`xsd:long`，讀取器會嘗試將它轉換成 64 位元帶正負號的整數，根據所定義的規則[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1345">If the content is not typed `xsd:long`, the reader attempts to convert it to a 64-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3aee5-1346">下表描述這個方法會將每個節點類型。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1346">The following table describes this method treats each node type.</span></span>  
  
|<span data-ttu-id="3aee5-1347">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="3aee5-1347">XmlNodeType</span></span>|<span data-ttu-id="3aee5-1348">傳回值</span><span class="sxs-lookup"><span data-stu-id="3aee5-1348">Return value</span></span>|<span data-ttu-id="3aee5-1349">讀取器行為</span><span class="sxs-lookup"><span data-stu-id="3aee5-1349">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="3aee5-1350">文字、CDATA、泛空白字元及顯著泛空白字元節點的串連內容會轉換為要求的型別。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1350">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="3aee5-1351">移至下一個開始項目或結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1351">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3aee5-1352">實體參考會自動展開。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1352">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="3aee5-1353">與相同`XmlConvert.ToXxx`屬性值。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1353">Same as `XmlConvert.ToXxx` on attribute value.</span></span>|<span data-ttu-id="3aee5-1354">讀取器會保持在目前的位置</span><span class="sxs-lookup"><span data-stu-id="3aee5-1354">The reader remains in the current position</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="3aee5-1355">忽略處理指示 (PI) 或註解，並讀取 PI 或註解後面的串連文字內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1355">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="3aee5-1356">移至下一個開始項目或結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1356">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3aee5-1357">實體參考會自動展開。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1357">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="3aee5-1358">空字串。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1358">An empty string.</span></span>|<span data-ttu-id="3aee5-1359">讀取器會保持在目前位置。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1359">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="3aee5-1360">擲回 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1360">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="3aee5-1361">未定義 (但讀取器通常會保持在目前位置)。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1361">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="3aee5-1362">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1362">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="3aee5-1363">嘗試的轉換無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1363">The attempted cast is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="3aee5-1364">字串格式無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1364">The string format is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1365">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1365">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1366">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1366">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsObject">
      <MemberSignature Language="C#" Value="public virtual object ReadContentAsObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadContentAsObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadContentAsObject();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsObject : unit -&gt; obj&#xA;override this.ReadContentAsObject : unit -&gt; obj" Usage="xmlReader.ReadContentAsObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1367">以 <see cref="T:System.Object" /> 的形式，讀取目前位置的文字內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1367">Reads the text content at the current position as an <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1368">最合適之 Common Language Runtime (CLR) 物件形式的文字內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1368">The text content as the most appropriate common language runtime (CLR) object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1369">這個方法會串連文字、 泛空白字元、 顯著泛空白字元和 CDATA 區段，並略過任何註解或處理指示。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1369">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="3aee5-1370">會自動解析實體參考。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1370">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="3aee5-1371">如果內容的類型，讀取器會傳回所指定的最適當類型的 boxed 的 CLR<xref:System.Xml.XmlReader.ValueType%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1371">If the content is typed, the reader returns a boxed CLR of the most appropriate type, specified by the <xref:System.Xml.XmlReader.ValueType%2A> property.</span></span> <span data-ttu-id="3aee5-1372">如果內容是清單型別，讀取器就會傳回適當的型別之 boxed 物件的陣列。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1372">If the content is a list type, the reader returns an array of boxed objects of the appropriate type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3aee5-1373">如果剖析內容時，發生驗證錯誤而讀取器<xref:System.Xml.XmlReader>所建立的物件<xref:System.Xml.XmlReader.Create%2A>方法，讀取器會傳回字串形式的內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1373">If a validation error occurs while parsing the content and the reader is an <xref:System.Xml.XmlReader> object created by the <xref:System.Xml.XmlReader.Create%2A> method, the reader returns the content as a string.</span></span> <span data-ttu-id="3aee5-1374">亦即當發生驗證錯誤或警告，內容會被視為不具型別。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1374">In other words when a validation error or warning occurs, the content is considered to be untyped.</span></span>  
  
 <span data-ttu-id="3aee5-1375">如果內容不具型別，則讀取器會以字串形式傳回內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1375">If the content is not typed, the reader returns the content as a string.</span></span>  
  
 <span data-ttu-id="3aee5-1376">下表描述這個方法處理每個節點類型的方式。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1376">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="3aee5-1377">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="3aee5-1377">XmlNodeType</span></span>|<span data-ttu-id="3aee5-1378">傳回值</span><span class="sxs-lookup"><span data-stu-id="3aee5-1378">Return value</span></span>|<span data-ttu-id="3aee5-1379">讀取器行為</span><span class="sxs-lookup"><span data-stu-id="3aee5-1379">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="3aee5-1380">文字、CDATA、泛空白字元及顯著泛空白字元節點的串連內容會轉換為要求的型別。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1380">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="3aee5-1381">移至下一個開始項目或結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1381">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3aee5-1382">實體參考會自動展開。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1382">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="3aee5-1383">與呼叫相同`XmlConvert.ToXxx`屬性值。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1383">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="3aee5-1384">讀取器會保持在目前的位置</span><span class="sxs-lookup"><span data-stu-id="3aee5-1384">The reader remains in the current position</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="3aee5-1385">忽略處理指示 (PI) 或註解，並讀取 PI 或註解後面的串連文字內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1385">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="3aee5-1386">移至下一個開始項目或結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1386">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3aee5-1387">實體參考會自動展開。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1387">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="3aee5-1388">如果讀取器驗證讀取器的結構描述元素的值 (<xref:System.Xml.XmlReaderSettings.ValidationType%2A>設為<xref:System.Xml.ValidationType.Schema>)，否則為空字串。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1388">The value of the element if the reader is a schema validating reader (<xref:System.Xml.XmlReaderSettings.ValidationType%2A> is set to <xref:System.Xml.ValidationType.Schema>); otherwise an empty string.</span></span>|<span data-ttu-id="3aee5-1389">讀取器會保持在目前位置。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1389">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="3aee5-1390">擲回 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1390">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="3aee5-1391">未定義 (但讀取器通常會保持在目前位置)。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1391">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="3aee5-1392">如需詳細資訊，請參閱的 < 備註 > 一節<xref:System.Xml.XmlReader>參考頁面並[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1392">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3aee5-1393">這個方法的非同步版本，請參閱<xref:System.Xml.XmlReader.ReadContentAsObjectAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1393">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadContentAsObjectAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="3aee5-1394">嘗試的轉換無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1394">The attempted cast is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="3aee5-1395">字串格式無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1395">The string format is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1396">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1396">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1397">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1397">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsObjectAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;object&gt; ReadContentAsObjectAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ReadContentAsObjectAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsObjectAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsObjectAsync () As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ ReadContentAsObjectAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsObjectAsync : unit -&gt; System.Threading.Tasks.Task&lt;obj&gt;&#xA;override this.ReadContentAsObjectAsync : unit -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="xmlReader.ReadContentAsObjectAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlReader/&lt;ReadContentAsObjectAsync&gt;c__async0))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1398">以非同步方式與 <see cref="T:System.Object" /> 的形式，讀取目前位置的文字內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1398">Asynchronously reads the text content at the current position as an <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1399">最合適之 Common Language Runtime (CLR) 物件形式的文字內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1399">The text content as the most appropriate common language runtime (CLR) object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1400">這是非同步的<xref:System.Xml.XmlReader.ReadContentAsObject%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1400">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadContentAsObject%2A>, with the same functionality.</span></span> <span data-ttu-id="3aee5-1401">若要使用此方法，您必須設定<xref:System.Xml.XmlReaderSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1401">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1402">在未將 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlReader" /> 非同步方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1402">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="3aee5-1403">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1403">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsString">
      <MemberSignature Language="C#" Value="public virtual string ReadContentAsString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadContentAsString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadContentAsString();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsString : unit -&gt; string&#xA;override this.ReadContentAsString : unit -&gt; string" Usage="xmlReader.ReadContentAsString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1404">以 <see cref="T:System.String" /> 物件的形式，讀取目前位置的文字內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1404">Reads the text content at the current position as a <see cref="T:System.String" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1405">
            <see cref="T:System.String" /> 物件形式的文字內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1405">The text content as a <see cref="T:System.String" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1406">這個方法會串連文字、 泛空白字元、 顯著泛空白字元和 CDATA 區段，並略過任何註解或處理指示。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1406">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="3aee5-1407">會自動解析實體參考。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1407">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="3aee5-1408">可以使用這個方法將具類型的值轉換為字串，或略過註解和處理指示時，讀取的文字內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1408">This method can be used convert typed values to a string, or to read the text content while skipping comments and processing instructions.</span></span>  
  
 <span data-ttu-id="3aee5-1409">下表描述這個方法處理每個節點類型的方式。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1409">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="3aee5-1410">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="3aee5-1410">XmlNodeType</span></span>|<span data-ttu-id="3aee5-1411">傳回值</span><span class="sxs-lookup"><span data-stu-id="3aee5-1411">Return value</span></span>|<span data-ttu-id="3aee5-1412">讀取器行為</span><span class="sxs-lookup"><span data-stu-id="3aee5-1412">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="3aee5-1413">文字、CDATA、泛空白字元及顯著泛空白字元節點的串連內容會轉換為要求的型別。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1413">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="3aee5-1414">移至下一個開始項目或結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1414">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3aee5-1415">實體參考會自動展開。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1415">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="3aee5-1416">與呼叫相同`XmlConvert.ToXxx`屬性值。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1416">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="3aee5-1417">讀取器會保持在目前位置。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1417">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="3aee5-1418">忽略處理指示 (PI) 或註解，並讀取 PI 或註解後面的串連文字內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1418">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="3aee5-1419">移至下一個開始項目或結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1419">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="3aee5-1420">實體參考會自動展開。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1420">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="3aee5-1421">空字串。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1421">An empty string.</span></span>|<span data-ttu-id="3aee5-1422">讀取器會保持在目前位置。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1422">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="3aee5-1423">擲回 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1423">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="3aee5-1424">未定義 (但讀取器通常會保持在目前位置)。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1424">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="3aee5-1425">如需詳細資訊，請參閱的 < 備註 > 一節<xref:System.Xml.XmlReader>參考頁面並[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1425">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3aee5-1426">這個方法的非同步版本，請參閱<xref:System.Xml.XmlReader.ReadContentAsStringAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1426">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadContentAsStringAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="3aee5-1427">嘗試的轉換無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1427">The attempted cast is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="3aee5-1428">字串格式無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1428">The string format is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1429">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1429">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1430">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1430">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsStringAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadContentAsStringAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadContentAsStringAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsStringAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsStringAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadContentAsStringAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsStringAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.ReadContentAsStringAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="xmlReader.ReadContentAsStringAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1431">以非同步方式與 <see cref="T:System.String" /> 物件的形式，讀取目前位置的文字內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1431">Asynchronously reads the text content at the current position as a <see cref="T:System.String" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1432">
            <see cref="T:System.String" /> 物件形式的文字內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1432">The text content as a <see cref="T:System.String" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1433">這是非同步的<xref:System.Xml.XmlReader.ReadContentAsString%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1433">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadContentAsString%2A>, with the same functionality.</span></span> <span data-ttu-id="3aee5-1434">若要使用此方法，您必須設定<xref:System.Xml.XmlReaderSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1434">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1435">在未將 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlReader" /> 非同步方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1435">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="3aee5-1436">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1436">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAs">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1437">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1437">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1438">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <see cref="T:System.InvalidOperationException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1438">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="3aee5-1439">以指定類型之物件的形式，讀取目前的項目並傳回內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1439">Reads the current element and returns the contents as an object of the type specified.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAs">
      <MemberSignature Language="C#" Value="public virtual object ReadElementContentAs (Type returnType, System.Xml.IXmlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadElementContentAs(class System.Type returnType, class System.Xml.IXmlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAs (returnType As Type, namespaceResolver As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadElementContentAs(Type ^ returnType, System::Xml::IXmlNamespaceResolver ^ namespaceResolver);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAs : Type * System.Xml.IXmlNamespaceResolver -&gt; obj&#xA;override this.ReadElementContentAs : Type * System.Xml.IXmlNamespaceResolver -&gt; obj" Usage="xmlReader.ReadElementContentAs (returnType, namespaceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="returnType">
          <span data-ttu-id="3aee5-1440">要傳回的值型别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1440">The type of the value to be returned.</span>
          </span>
          <span data-ttu-id="3aee5-1441">**注意**：使用 .NET Framework 3.5 的版本時，<c>returnType</c> 參數的值現在可以是 <see cref="T:System.DateTimeOffset" /> 類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1441">**Note** With the release of the .NET Framework 3.5, the value of the <c>returnType</c> parameter can now be the <see cref="T:System.DateTimeOffset" /> type.</span>
          </span>
        </param>
        <param name="namespaceResolver">
          <span data-ttu-id="3aee5-1442">
            <see cref="T:System.Xml.IXmlNamespaceResolver" /> 物件，用來解析任何與型別轉換相關的命名空間前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1442">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> object that is used to resolve any namespace prefixes related to type conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-1443">以要求之類型的形式讀取項目內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1443">Reads the element content as the requested type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1444">轉換為要求之類型物件的項目內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1444">The element content converted to the requested typed object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1445">這個方法會讀取開始標記，元素的內容，並移動讀取超過結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1445">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3aee5-1446">它會展開實體，並忽略處理指示與註解。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1446">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3aee5-1447">項目只能包含簡單內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1447">The element can only contain simple content.</span></span> <span data-ttu-id="3aee5-1448">也就是說，它不能有子項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1448">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3aee5-1449">如需詳細資訊，請參閱的 < 備註 > 一節<xref:System.Xml.XmlReader>參考頁面並[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1449">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3aee5-1450">這個方法的非同步版本，請參閱<xref:System.Xml.XmlReader.ReadElementContentAsAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1450">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadElementContentAsAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-1451">下列範例會使用<xref:System.Xml.XmlReader.ReadElementContentAs%2A>方法，以讀取內容`date`節點。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1451">The following example uses the <xref:System.Xml.XmlReader.ReadElementContentAs%2A> method to read the content of the `date` node.</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#5](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#5)]
 [!code-vb[XmlReader.ReadElementContentAs#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#5)]  
  
 <span data-ttu-id="3aee5-1452">該範例使用 `dataFile.xml` 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1452">The example uses the `dataFile.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1453">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1453">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1454">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1454">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-1455">目前的項目包含子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1455">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="3aee5-1456">-或-  項目內容無法轉換成要求的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1456">-or-  The element content cannot be converted to the requested type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-1457">方法是以 <see langword="null" /> 引數呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1457">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="3aee5-1458">讀取 <see langword="Decimal.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1458">Read <see langword="Decimal.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAs">
      <MemberSignature Language="C#" Value="public virtual object ReadElementContentAs (Type returnType, System.Xml.IXmlNamespaceResolver namespaceResolver, string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadElementContentAs(class System.Type returnType, class System.Xml.IXmlNamespaceResolver namespaceResolver, string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAs (returnType As Type, namespaceResolver As IXmlNamespaceResolver, localName As String, namespaceURI As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadElementContentAs(Type ^ returnType, System::Xml::IXmlNamespaceResolver ^ namespaceResolver, System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAs : Type * System.Xml.IXmlNamespaceResolver * string * string -&gt; obj&#xA;override this.ReadElementContentAs : Type * System.Xml.IXmlNamespaceResolver * string * string -&gt; obj" Usage="xmlReader.ReadElementContentAs (returnType, namespaceResolver, localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="returnType">
          <span data-ttu-id="3aee5-1459">要傳回的值型别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1459">The type of the value to be returned.</span>
          </span>
          <span data-ttu-id="3aee5-1460">**注意**：使用 .NET Framework 3.5 的版本時，<c>returnType</c> 參數的值現在可以是 <see cref="T:System.DateTimeOffset" /> 類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1460">**Note** With the release of the .NET Framework 3.5, the value of the <c>returnType</c> parameter can now be the <see cref="T:System.DateTimeOffset" /> type.</span>
          </span>
        </param>
        <param name="namespaceResolver">
          <span data-ttu-id="3aee5-1461">
            <see cref="T:System.Xml.IXmlNamespaceResolver" /> 物件，用來解析任何與型別轉換相關的命名空間前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1461">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> object that is used to resolve any namespace prefixes related to type conversion.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="3aee5-1462">項目的本機名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1462">The local name of the element.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="3aee5-1463">項目的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1463">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-1464">檢查指定的區域名稱和命名空間 URI 是否與目前的項目相符，然後以要求之類型的形式讀取項目內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1464">Checks that the specified local name and namespace URI matches that of the current element, then reads the element content as the requested type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1465">轉換為要求之類型物件的項目內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1465">The element content converted to the requested typed object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1466">這個方法會讀取開始標記，元素的內容，並移動讀取超過結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1466">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3aee5-1467">它會展開實體，並忽略處理指示與註解。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1467">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3aee5-1468">項目只能包含簡單內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1468">The element can only contain simple content.</span></span> <span data-ttu-id="3aee5-1469">也就是說，它不能有子項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1469">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3aee5-1470">如需詳細資訊，請參閱的 < 備註 > 一節<xref:System.Xml.XmlReader>參考頁面並[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1470">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1471">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1471">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1472">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1472">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-1473">目前的項目包含子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1473">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="3aee5-1474">-或-  項目內容無法轉換成要求的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1474">-or-  The element content cannot be converted to the requested type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-1475">方法是以 <see langword="null" /> 引數呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1475">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3aee5-1476">指定的區域名稱和命名空間 URI，與目前正在讀取的項目不相符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1476">The specified local name and namespace URI do not match that of the current element being read.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="3aee5-1477">讀取 <see langword="Decimal.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1477">Read <see langword="Decimal.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;object&gt; ReadElementContentAsAsync (Type returnType, System.Xml.IXmlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ReadElementContentAsAsync(class System.Type returnType, class System.Xml.IXmlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsAsync (returnType As Type, namespaceResolver As IXmlNamespaceResolver) As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ ReadElementContentAsAsync(Type ^ returnType, System::Xml::IXmlNamespaceResolver ^ namespaceResolver);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsAsync : Type * System.Xml.IXmlNamespaceResolver -&gt; System.Threading.Tasks.Task&lt;obj&gt;&#xA;override this.ReadElementContentAsAsync : Type * System.Xml.IXmlNamespaceResolver -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="xmlReader.ReadElementContentAsAsync (returnType, namespaceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlReader/&lt;ReadElementContentAsAsync&gt;c__async4))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="returnType">
          <span data-ttu-id="3aee5-1478">要傳回的值型别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1478">The type of the value to be returned.</span>
          </span>
        </param>
        <param name="namespaceResolver">
          <span data-ttu-id="3aee5-1479">
            <see cref="T:System.Xml.IXmlNamespaceResolver" /> 物件，用來解析任何與型別轉換相關的命名空間前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1479">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> object that is used to resolve any namespace prefixes related to type conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-1480">以要求之類型的形式，非同步讀取項目內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1480">Asynchronously reads the element content as the requested type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1481">轉換為要求之類型物件的項目內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1481">The element content converted to the requested typed object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1482">這是非同步的<xref:System.Xml.XmlReader.ReadElementContentAs%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1482">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadElementContentAs%2A>, with the same functionality.</span></span> <span data-ttu-id="3aee5-1483">若要使用此方法，您必須設定<xref:System.Xml.XmlReaderSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1483">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1484">在未將 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlReader" /> 非同步方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1484">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="3aee5-1485">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1485">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBase64">
      <MemberSignature Language="C#" Value="public virtual int ReadElementContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadElementContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadElementContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsBase64 : byte[] * int * int -&gt; int&#xA;override this.ReadElementContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlReader.ReadElementContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3aee5-1486">將產生的文字複製到其中的緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1486">The buffer into which to copy the resulting text.</span>
          </span>
          <span data-ttu-id="3aee5-1487">這個值不能是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1487">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="3aee5-1488">緩衝區中開始複製結果的位移。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1488">The offset into the buffer where to start copying the result.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3aee5-1489">要複製至緩衝區中的最大位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1489">The maximum number of bytes to copy into the buffer.</span>
          </span>
          <span data-ttu-id="3aee5-1490">從這個方法傳回所複製的實際位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1490">The actual number of bytes copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-1491">讀取項目，並將 <see langword="Base64" /> 內容解碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1491">Reads the element and decodes the <see langword="Base64" /> content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1492">寫入緩衝區的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1492">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1493">此方法讀取項目內容中，使用將其解碼`Base64`編碼，並傳回已解碼二進位位元組 (例如，內嵌`Base64`-編碼的 GIF 影像) 到緩衝區。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1493">This method reads the element content, decodes it using `Base64` encoding, and returns the decoded binary bytes (for example, an inline `Base64`-encoded GIF image) into the buffer.</span></span> <span data-ttu-id="3aee5-1494">如需詳細資訊，請參閱 RFC 1521"MIME （多用途網際網路郵件延伸標準） 第一個： 機制來指定，並描述網際網路訊息內文的格式 」。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1494">For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</span></span> <span data-ttu-id="3aee5-1495">您可以取得從 Rfc[註解的網站要求](http://go.microsoft.com/fwlink/?LinkId=37119)。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1495">You can obtain RFCs from the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkId=37119).</span></span>  
  
 <span data-ttu-id="3aee5-1496"><xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A> 只能讀取簡單內容項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1496"><xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A> can only read simple-content elements.</span></span> <span data-ttu-id="3aee5-1497">元素可以包含文字、 泛空白字元、 顯著泛空白字元、 CDATA 區段中，註解和處理指示。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1497">The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions.</span></span> <span data-ttu-id="3aee5-1498">它也可以包含實體參考，會自動展開。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1498">It can also contain entity references, which are automatically expanded.</span></span> <span data-ttu-id="3aee5-1499">項目不能有子項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1499">The element cannot have child elements.</span></span>  
  
 <span data-ttu-id="3aee5-1500">此方式非常類似於<xref:System.Xml.XmlReader.ReadContentAsBase64%2A>方法，但它只能在項目節點型別上呼叫。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1500">This method is very similar to the <xref:System.Xml.XmlReader.ReadContentAsBase64%2A> method except that it can only be called on element node types.</span></span>  
  
 <span data-ttu-id="3aee5-1501">如果`count`值高於在文件中的位元組數目是否等於在文件中的位元組數目或<xref:System.Xml.XmlReader>讀取文件中所有剩餘的位元組，並傳回讀取的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1501">If the `count` value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlReader> reads all the remaining bytes in the document and returns the number of bytes read.</span></span> <span data-ttu-id="3aee5-1502">下一步<xref:System.Xml.XmlReader>方法呼叫會傳回零，並將讀取器移至節點下列`EndElement`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1502">The next <xref:System.Xml.XmlReader> method call returns a zero and moves the reader to the node following the `EndElement`.</span></span>  
  
 <span data-ttu-id="3aee5-1503">如果您呼叫<xref:System.Xml.XmlReader.Read%2A>會使用所有的項目內容之前，讀取器可能彷彿已在使用第一次的內容，然後<xref:System.Xml.XmlReader.Read%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1503">If you call <xref:System.Xml.XmlReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlReader.Read%2A> method was called.</span></span> <span data-ttu-id="3aee5-1504">這表示讀取器會讀取所有文字，直到遇到結束的項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1504">This means that the reader will read all the text until the end element is encountered.</span></span> <span data-ttu-id="3aee5-1505">它接著讀取結束標記節點，讀取下一個節點，並接著將本身置於下一個後續節點。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1505">It will then read the end tag node, read the next node, and then position itself on the next subsequent node.</span></span>  
  
 <span data-ttu-id="3aee5-1506">這個方法的非同步版本，請參閱<xref:System.Xml.XmlReader.ReadElementContentAsBase64Async%2A>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1506">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadElementContentAsBase64Async%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-1507">下列範例會讀取內嵌`Base64`編碼的影像。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1507">The following example reads an inline `Base64` encoded image.</span></span> <span data-ttu-id="3aee5-1508">`Base64`資料內嵌在`<image>`項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1508">The `Base64` data is embedded within the `<image>` element.</span></span> <span data-ttu-id="3aee5-1509">A<xref:System.IO.BinaryWriter>用來建立新的二進位資料檔案。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1509">A <xref:System.IO.BinaryWriter> is used to create a new binary data file.</span></span>  
  
 [!code-csharp[XmlReader_Read_Write_Binary#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Read_Write_Binary/CS/readBinary.cs#4)]
 [!code-vb[XmlReader_Read_Write_Binary#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Read_Write_Binary/VB/readBinary.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-1510">
            <paramref name="buffer" /> 值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1510">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1511">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1511">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1512">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1512">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3aee5-1513">緩衝區的索引或是索引 + 計數大於所配置的緩衝區大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1513">The index into the buffer or index + count is larger than the allocated buffer size.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3aee5-1514">
            <see cref="T:System.Xml.XmlReader" /> 實作不支援這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1514">The <see cref="T:System.Xml.XmlReader" /> implementation does not support this method.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-1515">項目包含混合內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1515">The element contains mixed-content.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="3aee5-1516">內容無法轉換成要求的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1516">The content cannot be converted to the requested type.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBase64Async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadElementContentAsBase64Async (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadElementContentAsBase64Async(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsBase64Async (buffer As Byte(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadElementContentAsBase64Async(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsBase64Async : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadElementContentAsBase64Async : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="xmlReader.ReadElementContentAsBase64Async (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3aee5-1517">將產生的文字複製到其中的緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1517">The buffer into which to copy the resulting text.</span>
          </span>
          <span data-ttu-id="3aee5-1518">這個值不能是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1518">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="3aee5-1519">緩衝區中開始複製結果的位移。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1519">The offset into the buffer where to start copying the result.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3aee5-1520">要複製至緩衝區中的最大位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1520">The maximum number of bytes to copy into the buffer.</span>
          </span>
          <span data-ttu-id="3aee5-1521">從這個方法傳回所複製的實際位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1521">The actual number of bytes copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-1522">以非同步的方式讀取項目，並將 <see langword="Base64" /> 內容解碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1522">Asynchronously reads the element and decodes the <see langword="Base64" /> content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1523">寫入緩衝區的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1523">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1524">這是非同步的<xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1524">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A>, with the same functionality.</span></span> <span data-ttu-id="3aee5-1525">若要使用此方法，您必須設定<xref:System.Xml.XmlReaderSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1525">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1526">在未將 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlReader" /> 非同步方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1526">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="3aee5-1527">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1527">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBinHex">
      <MemberSignature Language="C#" Value="public virtual int ReadElementContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadElementContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadElementContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsBinHex : byte[] * int * int -&gt; int&#xA;override this.ReadElementContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlReader.ReadElementContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3aee5-1528">將產生的文字複製到其中的緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1528">The buffer into which to copy the resulting text.</span>
          </span>
          <span data-ttu-id="3aee5-1529">這個值不能是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1529">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="3aee5-1530">緩衝區中開始複製結果的位移。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1530">The offset into the buffer where to start copying the result.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3aee5-1531">要複製至緩衝區中的最大位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1531">The maximum number of bytes to copy into the buffer.</span>
          </span>
          <span data-ttu-id="3aee5-1532">從這個方法傳回所複製的實際位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1532">The actual number of bytes copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-1533">讀取項目，並將 <see langword="BinHex" /> 內容解碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1533">Reads the element and decodes the <see langword="BinHex" /> content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1534">寫入緩衝區的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1534">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1535">此方法讀取項目內容中，使用將其解碼`BinHex`編碼，並傳回已解碼二進位位元組 (例如，內嵌`BinHex`-編碼的 GIF 影像) 到緩衝區。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1535">This method reads the element content, decodes it using `BinHex` encoding, and returns the decoded binary bytes (for example, an inline `BinHex`-encoded GIF image) into the buffer.</span></span>  
  
 <span data-ttu-id="3aee5-1536">這個方法只能讀取簡單內容項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1536">This method can only read simple-content elements.</span></span> <span data-ttu-id="3aee5-1537">元素可以包含文字、 泛空白字元、 顯著泛空白字元、 CDATA 區段中，註解和處理指示。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1537">The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions.</span></span> <span data-ttu-id="3aee5-1538">它也可以包含實體參考，會自動展開。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1538">It can also contain entity references, which are automatically expanded.</span></span> <span data-ttu-id="3aee5-1539">項目不能有子項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1539">The element cannot have child elements.</span></span>  
  
 <span data-ttu-id="3aee5-1540">此方式非常類似於<xref:System.Xml.XmlReader.ReadContentAsBinHex%2A>方法，但它只能在項目節點型別上呼叫。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1540">This method is very similar to the <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> method except that it can only be called on element node types.</span></span>  
  
 <span data-ttu-id="3aee5-1541">如果`count`值高於在文件中的位元組數目是否等於在文件中的位元組數目或<xref:System.Xml.XmlReader>讀取文件中所有剩餘的位元組，並傳回讀取的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1541">If the `count` value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlReader> reads all the remaining bytes in the document and returns the number of bytes read.</span></span> <span data-ttu-id="3aee5-1542">下一步<xref:System.Xml.XmlReader>方法呼叫會傳回零，並將讀取器移至節點下列`EndElement`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1542">The next <xref:System.Xml.XmlReader> method call returns a zero and moves the reader to the node following the `EndElement`.</span></span>  
  
 <span data-ttu-id="3aee5-1543">如果您呼叫<xref:System.Xml.XmlReader.Read%2A>會使用所有的項目內容之前，讀取器可能彷彿已在使用第一次的內容，然後<xref:System.Xml.XmlReader.Read%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1543">If you call <xref:System.Xml.XmlReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlReader.Read%2A> method was called.</span></span> <span data-ttu-id="3aee5-1544">這表示讀取器會讀取所有文字，直到遇到結束的項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1544">This means that the reader will read all the text until the end element is encountered.</span></span> <span data-ttu-id="3aee5-1545">它接著讀取結束標記節點，讀取下一個節點，並接著將本身置於下一個後續節點。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1545">It will then read the end tag node, read the next node, and then position itself on the next subsequent node.</span></span>  
  
 <span data-ttu-id="3aee5-1546">這個方法的非同步版本，請參閱<xref:System.Xml.XmlReader.ReadElementContentAsBinHexAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1546">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadElementContentAsBinHexAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-1547">下列範例會讀取內嵌`BinHex`編碼的影像。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1547">The following example reads an inline `BinHex` encoded image.</span></span> <span data-ttu-id="3aee5-1548">`BinHex`資料內嵌在`<image>`項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1548">The `BinHex` data is embedded within the `<image>` element.</span></span> <span data-ttu-id="3aee5-1549">A<xref:System.IO.BinaryWriter>用來建立新的二進位資料檔案。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1549">A <xref:System.IO.BinaryWriter> is used to create a new binary data file.</span></span>  
  
 [!code-csharp[XmlReader_Read_Write_Binary#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Read_Write_Binary/CS/readBinary.cs#2)]
 [!code-vb[XmlReader_Read_Write_Binary#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Read_Write_Binary/VB/readBinary.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-1550">
            <paramref name="buffer" /> 值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1550">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1551">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1551">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1552">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1552">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3aee5-1553">緩衝區的索引或是索引 + 計數大於所配置的緩衝區大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1553">The index into the buffer or index + count is larger than the allocated buffer size.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3aee5-1554">
            <see cref="T:System.Xml.XmlReader" /> 實作不支援這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1554">The <see cref="T:System.Xml.XmlReader" /> implementation does not support this method.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-1555">項目包含混合內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1555">The element contains mixed-content.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="3aee5-1556">內容無法轉換成要求的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1556">The content cannot be converted to the requested type.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBinHexAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadElementContentAsBinHexAsync (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadElementContentAsBinHexAsync(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsBinHexAsync (buffer As Byte(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadElementContentAsBinHexAsync(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsBinHexAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadElementContentAsBinHexAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="xmlReader.ReadElementContentAsBinHexAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3aee5-1557">將產生的文字複製到其中的緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1557">The buffer into which to copy the resulting text.</span>
          </span>
          <span data-ttu-id="3aee5-1558">這個值不能是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1558">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="3aee5-1559">緩衝區中開始複製結果的位移。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1559">The offset into the buffer where to start copying the result.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3aee5-1560">要複製至緩衝區中的最大位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1560">The maximum number of bytes to copy into the buffer.</span>
          </span>
          <span data-ttu-id="3aee5-1561">從這個方法傳回所複製的實際位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1561">The actual number of bytes copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-1562">以非同步的方式讀取項目，並將 <see langword="BinHex" /> 內容解碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1562">Asynchronously reads the element and decodes the <see langword="BinHex" /> content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1563">寫入緩衝區的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1563">The number of bytes written to the buffer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1564">這是非同步的<xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1564">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A>, with the same functionality.</span></span> <span data-ttu-id="3aee5-1565">若要使用此方法，您必須設定<xref:System.Xml.XmlReaderSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1565">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1566">在未將 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlReader" /> 非同步方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1566">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="3aee5-1567">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1567">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsBoolean">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1568">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1568">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1569">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <see cref="T:System.InvalidOperationException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1569">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="3aee5-1570">讀取目前的項目值做為<see cref="T:System.Boolean" />物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1570">Reads the current element value as a <see cref="T:System.Boolean" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsBoolean">
      <MemberSignature Language="C#" Value="public virtual bool ReadElementContentAsBoolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadElementContentAsBoolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsBoolean" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsBoolean () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadElementContentAsBoolean();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsBoolean : unit -&gt; bool&#xA;override this.ReadElementContentAsBoolean : unit -&gt; bool" Usage="xmlReader.ReadElementContentAsBoolean " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1571">以 <see cref="T:System.Boolean" /> 物件的形式，讀取目前項目並傳回內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1571">Reads the current element and returns the contents as a <see cref="T:System.Boolean" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1572">
            <see cref="T:System.Boolean" /> 物件形式的項目內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1572">The element content as a <see cref="T:System.Boolean" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1573">這個方法會讀取開始標記，元素的內容，並移動讀取超過結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1573">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3aee5-1574">它會展開實體，並忽略處理指示與註解。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1574">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3aee5-1575">項目只能包含簡單內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1575">The element can only contain simple content.</span></span> <span data-ttu-id="3aee5-1576">也就是說，它不能有子項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1576">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3aee5-1577">如果項目內容的型別`xsd:boolean`，讀取器傳回 unboxed<xref:System.Boolean>物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1577">If the element content is typed `xsd:boolean`, the reader returns an unboxed <xref:System.Boolean> object.</span></span> <span data-ttu-id="3aee5-1578">如果內容不具型別`xsd:boolean`，讀取器會嘗試將它轉換成<xref:System.Boolean>物件所定義的規則根據[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1578">If the content is not typed `xsd:boolean`, the reader attempts to convert it to a <xref:System.Boolean> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3aee5-1579">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1579">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1580">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1580">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1581">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1581">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-1582">目前的項目包含子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1582">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="3aee5-1583">-或-  項目內容不能轉換為 <see cref="T:System.Boolean" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1583">-or-  The element content cannot be converted to a <see cref="T:System.Boolean" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-1584">方法是以 <see langword="null" /> 引數呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1584">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBoolean">
      <MemberSignature Language="C#" Value="public virtual bool ReadElementContentAsBoolean (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadElementContentAsBoolean(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsBoolean (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadElementContentAsBoolean(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsBoolean : string * string -&gt; bool&#xA;override this.ReadElementContentAsBoolean : string * string -&gt; bool" Usage="xmlReader.ReadElementContentAsBoolean (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="3aee5-1585">項目的本機名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1585">The local name of the element.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="3aee5-1586">項目的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1586">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-1587">檢查指定的區域名稱和命名空間 URI 是否與目前的項目相符，然後以 <see cref="T:System.Boolean" /> 物件的形式，讀取目前的項目並傳回內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1587">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <see cref="T:System.Boolean" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1588">
            <see cref="T:System.Boolean" /> 物件形式的項目內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1588">The element content as a <see cref="T:System.Boolean" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1589">這個方法會讀取開始標記，元素的內容，並移動讀取超過結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1589">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3aee5-1590">它會展開實體，並忽略處理指示與註解。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1590">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3aee5-1591">項目只能包含簡單內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1591">The element can only contain simple content.</span></span> <span data-ttu-id="3aee5-1592">也就是說，它不能有子項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1592">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3aee5-1593">如果內容的型別`xsd:boolean`，讀取器傳回 unboxed<xref:System.Boolean>物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1593">If the content is typed `xsd:boolean`, the reader returns an unboxed <xref:System.Boolean> object.</span></span> <span data-ttu-id="3aee5-1594">如果內容不具型別`xsd:boolean`，讀取器會嘗試將它轉換成<xref:System.Boolean>物件所定義的規則根據[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1594">If the content is not typed `xsd:boolean`, the reader attempts to convert it to a <xref:System.Boolean> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3aee5-1595">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1595">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1596">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1596">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1597">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1597">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-1598">目前的項目包含子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1598">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="3aee5-1599">-或-  項目內容無法轉換成要求的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1599">-or-  The element content cannot be converted to the requested type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-1600">方法是以 <see langword="null" /> 引數呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1600">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3aee5-1601">指定的區域名稱和命名空間 URI，與目前正在讀取的項目不相符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1601">The specified local name and namespace URI do not match that of the current element being read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsDateTime">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1602">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1602">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1603">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <see cref="T:System.InvalidOperationException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1603">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="3aee5-1604">以 <see cref="T:System.DateTime" /> 物件的形式，讀取目前項目並傳回內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1604">Reads the current element and returns the contents as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsDateTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ReadElementContentAsDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ReadElementContentAsDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsDateTime () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ReadElementContentAsDateTime();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsDateTime : unit -&gt; DateTime&#xA;override this.ReadElementContentAsDateTime : unit -&gt; DateTime" Usage="xmlReader.ReadElementContentAsDateTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1605">以 <see cref="T:System.DateTime" /> 物件的形式，讀取目前項目並傳回內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1605">Reads the current element and returns the contents as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1606">
            <see cref="T:System.DateTime" /> 物件形式的項目內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1606">The element content as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1607">這個方法會讀取開始標記，元素的內容，並移動讀取超過結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1607">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3aee5-1608">它會展開實體，並忽略處理指示與註解。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1608">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3aee5-1609">項目只能包含簡單內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1609">The element can only contain simple content.</span></span> <span data-ttu-id="3aee5-1610">也就是說，它不能有子項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1610">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3aee5-1611">如果內容的型別`xsd:dateTime`，讀取器傳回 unboxed<xref:System.DateTime>物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1611">If the content is typed `xsd:dateTime`, the reader returns an unboxed <xref:System.DateTime> object.</span></span> <span data-ttu-id="3aee5-1612">如果內容不具型別`xsd:dateTime`，讀取器會嘗試將它轉換成<xref:System.DateTime>物件所定義的規則根據[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1612">If the content is not typed `xsd:dateTime`, the reader attempts to convert it to a <xref:System.DateTime> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3aee5-1613">當內容的型別為 <xref:System.DateTime.Year%2A?displayProperty=nameWithType> 時，無法依賴 `xsd:gMonthDay` 值。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1613">You cannot rely on the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> value when the content is typed as `xsd:gMonthDay`.</span></span> <span data-ttu-id="3aee5-1614"><xref:System.Xml.XmlReader> 一律設定<xref:System.DateTime.Year%2A?displayProperty=nameWithType>值在此例為 1904年。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1614"><xref:System.Xml.XmlReader> always sets the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> value to 1904 in this case.</span></span>  
  
 <span data-ttu-id="3aee5-1615">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1615">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-1616">下列範例會使用<xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A>方法，以讀取內容`date`項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1616">The following example uses the <xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A> method to read the content of the `date` element.</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#4)]
 [!code-vb[XmlReader.ReadElementContentAs#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#4)]  
  
 <span data-ttu-id="3aee5-1617">該範例使用 `dataFile.xml` 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1617">The example uses the `dataFile.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1618">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1618">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1619">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1619">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-1620">目前的項目包含子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1620">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="3aee5-1621">-或-  項目內容不能轉換為 <see cref="T:System.DateTime" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1621">-or-  The element content cannot be converted to a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-1622">方法是以 <see langword="null" /> 引數呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1622">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsDateTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ReadElementContentAsDateTime (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ReadElementContentAsDateTime(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsDateTime (localName As String, namespaceURI As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ReadElementContentAsDateTime(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsDateTime : string * string -&gt; DateTime&#xA;override this.ReadElementContentAsDateTime : string * string -&gt; DateTime" Usage="xmlReader.ReadElementContentAsDateTime (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="3aee5-1623">項目的本機名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1623">The local name of the element.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="3aee5-1624">項目的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1624">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-1625">檢查指定的區域名稱和命名空間 URI 是否與目前的項目相符，然後以 <see cref="T:System.DateTime" /> 物件的形式，讀取目前的項目並傳回內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1625">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1626">
            <see cref="T:System.DateTime" /> 物件形式的項目內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1626">The element contents as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1627">這個方法會讀取開始標記，元素的內容，並移動讀取超過結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1627">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3aee5-1628">它會展開實體，並忽略處理指示與註解。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1628">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3aee5-1629">項目只能包含簡單內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1629">The element can only contain simple content.</span></span> <span data-ttu-id="3aee5-1630">也就是說，它不能有子項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1630">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3aee5-1631">如果內容的型別`xsd:dateTime`，讀取器傳回 unboxed<xref:System.DateTime>物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1631">If the content is typed `xsd:dateTime`, the reader returns an unboxed <xref:System.DateTime> object.</span></span> <span data-ttu-id="3aee5-1632">如果內容不具型別`xsd:dateTime`，讀取器會嘗試將它轉換成<xref:System.DateTime>物件所定義的規則根據[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1632">If the content is not typed `xsd:dateTime`, the reader attempts to convert it to a <xref:System.DateTime> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3aee5-1633">當內容的型別為 <xref:System.DateTime.Year%2A?displayProperty=nameWithType> 時，無法依賴 `xsd:gMonthDay` 值。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1633">You cannot rely on the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> value when the content is typed as `xsd:gMonthDay`.</span></span> <span data-ttu-id="3aee5-1634"><xref:System.Xml.XmlReader> 一律設定<xref:System.DateTime.Year%2A?displayProperty=nameWithType>值在此例為 1904年。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1634"><xref:System.Xml.XmlReader> always sets the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> value to 1904 in this case.</span></span>  
  
 <span data-ttu-id="3aee5-1635">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1635">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1636">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1636">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1637">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1637">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-1638">目前的項目包含子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1638">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="3aee5-1639">-或-  項目內容無法轉換成要求的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1639">-or-  The element content cannot be converted to the requested type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-1640">方法是以 <see langword="null" /> 引數呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1640">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3aee5-1641">指定的區域名稱和命名空間 URI，與目前正在讀取的項目不相符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1641">The specified local name and namespace URI do not match that of the current element being read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsDecimal">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1642">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1642">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1643">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <see cref="T:System.InvalidOperationException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1643">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="3aee5-1644">讀取目前的項目值做為<see cref="T:System.Decimal" />物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1644">Reads the current element value as a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsDecimal">
      <MemberSignature Language="C#" Value="public virtual decimal ReadElementContentAsDecimal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Decimal ReadElementContentAsDecimal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsDecimal () As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Decimal ReadElementContentAsDecimal();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsDecimal : unit -&gt; decimal&#xA;override this.ReadElementContentAsDecimal : unit -&gt; decimal" Usage="xmlReader.ReadElementContentAsDecimal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1645">以 <see cref="T:System.Decimal" /> 物件的形式，讀取目前項目並傳回內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1645">Reads the current element and returns the contents as a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1646">
            <see cref="T:System.Decimal" /> 物件形式的項目內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1646">The element content as a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1647">這個方法會讀取開始標記，元素的內容，並移動讀取超過結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1647">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3aee5-1648">它會展開實體，並忽略處理指示與註解。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1648">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3aee5-1649">項目只能包含簡單內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1649">The element can only contain simple content.</span></span> <span data-ttu-id="3aee5-1650">也就是說，它不能有子項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1650">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3aee5-1651">讀取器會嘗試將轉換的項目內容來<xref:System.Decimal>根據所定義的規則的物件[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1651">The reader attempts to convert the element content to an <xref:System.Decimal> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3aee5-1652">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1652">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1653">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1653">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1654">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1654">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-1655">目前的項目包含子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1655">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="3aee5-1656">-或-  項目內容不能轉換為 <see cref="T:System.Decimal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1656">-or-  The element content cannot be converted to a <see cref="T:System.Decimal" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-1657">方法是以 <see langword="null" /> 引數呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1657">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsDecimal">
      <MemberSignature Language="C#" Value="public virtual decimal ReadElementContentAsDecimal (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Decimal ReadElementContentAsDecimal(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsDecimal (localName As String, namespaceURI As String) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Decimal ReadElementContentAsDecimal(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsDecimal : string * string -&gt; decimal&#xA;override this.ReadElementContentAsDecimal : string * string -&gt; decimal" Usage="xmlReader.ReadElementContentAsDecimal (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="3aee5-1658">項目的本機名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1658">The local name of the element.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="3aee5-1659">項目的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1659">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-1660">檢查指定的區域名稱和命名空間 URI 是否與目前的項目相符，然後以 <see cref="T:System.Decimal" /> 物件的形式，讀取目前的項目並傳回內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1660">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1661">
            <see cref="T:System.Decimal" /> 物件形式的項目內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1661">The element content as a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1662">這個方法會讀取開始標記，元素的內容，並移動讀取超過結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1662">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3aee5-1663">它會展開實體，並忽略處理指示與註解。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1663">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3aee5-1664">項目只能包含簡單內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1664">The element can only contain simple content.</span></span> <span data-ttu-id="3aee5-1665">也就是說，它不能有子項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1665">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3aee5-1666">讀取器會嘗試將轉換的項目內容來<xref:System.Decimal>根據所定義的規則的物件[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1666">The reader attempts to convert the element content to an <xref:System.Decimal> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3aee5-1667">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1667">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1668">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1668">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1669">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1669">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-1670">目前的項目包含子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1670">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="3aee5-1671">-或-  項目內容不能轉換為 <see cref="T:System.Decimal" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1671">-or-  The element content cannot be converted to a <see cref="T:System.Decimal" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-1672">方法是以 <see langword="null" /> 引數呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1672">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3aee5-1673">指定的區域名稱和命名空間 URI，與目前正在讀取的項目不相符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1673">The specified local name and namespace URI do not match that of the current element being read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsDouble">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1674">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1674">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1675">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <see cref="T:System.InvalidOperationException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1675">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="3aee5-1676">以雙精確度浮點數的形式，讀取目前的項目並傳回內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1676">Reads the current element and returns the contents as a double-precision floating-point number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsDouble">
      <MemberSignature Language="C#" Value="public virtual double ReadElementContentAsDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ReadElementContentAsDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsDouble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsDouble () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double ReadElementContentAsDouble();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsDouble : unit -&gt; double&#xA;override this.ReadElementContentAsDouble : unit -&gt; double" Usage="xmlReader.ReadElementContentAsDouble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1677">以雙精確度浮點數的形式，讀取目前的項目並傳回內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1677">Reads the current element and returns the contents as a double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1678">雙精確度浮點數形式的項目內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1678">The element content as a double-precision floating-point number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1679">這個方法會讀取開始標記，元素的內容，並移動讀取超過結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1679">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3aee5-1680">它會展開實體，並忽略處理指示與註解。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1680">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3aee5-1681">項目只能包含簡單內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1681">The element can only contain simple content.</span></span> <span data-ttu-id="3aee5-1682">也就是說，它不能有子項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1682">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3aee5-1683">如果內容的型別`xsd:double`，讀取器傳回的雙精確度浮點數。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1683">If the content is typed `xsd:double`, the reader returns a double-precision floating-point number.</span></span> <span data-ttu-id="3aee5-1684">如果內容不具型別`xsd:double`，讀取器會嘗試將它轉換為雙精確度浮點數，根據所定義的規則[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1684">If the content is not typed `xsd:double`, the reader attempts to convert it to a double-precision floating-point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3aee5-1685">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1685">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-1686">下列範例會使用此方法傳回的項目內容，做為雙精確度浮點數。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1686">The following example uses the method to return the element content as a double-precision floating-point number.</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#7](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#7)]
 [!code-vb[XmlReader.ReadElementContentAs#7](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#7)]  
  
 <span data-ttu-id="3aee5-1687">該範例使用 `dataFile.xml` 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1687">The example uses the `dataFile.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1688">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1688">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1689">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1689">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-1690">目前的項目包含子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1690">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="3aee5-1691">-或-  項目內容無法轉換為雙精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1691">-or-  The element content cannot be converted to a double-precision floating-point number.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-1692">方法是以 <see langword="null" /> 引數呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1692">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsDouble">
      <MemberSignature Language="C#" Value="public virtual double ReadElementContentAsDouble (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ReadElementContentAsDouble(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsDouble (localName As String, namespaceURI As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double ReadElementContentAsDouble(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsDouble : string * string -&gt; double&#xA;override this.ReadElementContentAsDouble : string * string -&gt; double" Usage="xmlReader.ReadElementContentAsDouble (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="3aee5-1693">項目的本機名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1693">The local name of the element.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="3aee5-1694">項目的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1694">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-1695">檢查指定的區域名稱和命名空間 URI 是否與目前的項目相符，然後以雙精確度浮點數的形式，讀取目前的項目並傳回內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1695">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a double-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1696">雙精確度浮點數形式的項目內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1696">The element content as a double-precision floating-point number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1697">這個方法會讀取開始標記，元素的內容，並移動讀取超過結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1697">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3aee5-1698">它會展開實體，並忽略處理指示與註解。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1698">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3aee5-1699">項目只能包含簡單內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1699">The element can only contain simple content.</span></span> <span data-ttu-id="3aee5-1700">也就是說，它不能有子項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1700">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3aee5-1701">如果內容的型別`xsd:double`，讀取器傳回的雙精確度浮點數。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1701">If the content is typed `xsd:double`, the reader returns a double-precision floating-point number.</span></span> <span data-ttu-id="3aee5-1702">如果內容不具型別`xsd:double`，讀取器會嘗試將它轉換為雙精確度浮點數，根據所定義的規則[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1702">If the content is not typed `xsd:double`, the reader attempts to convert it to a double-precision floating-point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3aee5-1703">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1703">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1704">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1704">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1705">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1705">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-1706">目前的項目包含子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1706">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="3aee5-1707">-或-  項目內容無法轉換成要求的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1707">-or-  The element content cannot be converted to the requested type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-1708">方法是以 <see langword="null" /> 引數呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1708">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3aee5-1709">指定的區域名稱和命名空間 URI，與目前正在讀取的項目不相符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1709">The specified local name and namespace URI do not match that of the current element being read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsFloat">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1710">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1710">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1711">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <see cref="T:System.InvalidOperationException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1711">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="3aee5-1712">以單精確度浮點數的形式讀取目前的項目值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1712">Reads the current element value as a single-precision floating-point number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsFloat">
      <MemberSignature Language="C#" Value="public virtual float ReadElementContentAsFloat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 ReadElementContentAsFloat() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsFloat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsFloat () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual float ReadElementContentAsFloat();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsFloat : unit -&gt; single&#xA;override this.ReadElementContentAsFloat : unit -&gt; single" Usage="xmlReader.ReadElementContentAsFloat " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1713">以單精確度浮點數的形式，讀取目前的項目並傳回內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1713">Reads the current element and returns the contents as single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1714">單精確度浮點數形式的項目內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1714">The element content as a single-precision floating point number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1715">這個方法會讀取開始標記，元素的內容，並移動讀取超過結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1715">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3aee5-1716">它會展開實體，並忽略處理指示與註解。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1716">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3aee5-1717">項目只能包含簡單內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1717">The element can only contain simple content.</span></span> <span data-ttu-id="3aee5-1718">也就是說，它不能有子項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1718">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3aee5-1719">讀取器會嘗試將項目內容轉換成單精確度浮點數根據所定義的規則[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1719">The reader attempts to convert the element content to a single-precision floating point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3aee5-1720">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1720">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1721">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1721">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1722">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1722">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-1723">目前的項目包含子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1723">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="3aee5-1724">-或-  項目內容無法轉換為單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1724">-or-  The element content cannot be converted to a single-precision floating-point number.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-1725">方法是以 <see langword="null" /> 引數呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1725">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsFloat">
      <MemberSignature Language="C#" Value="public virtual float ReadElementContentAsFloat (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 ReadElementContentAsFloat(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsFloat (localName As String, namespaceURI As String) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual float ReadElementContentAsFloat(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsFloat : string * string -&gt; single&#xA;override this.ReadElementContentAsFloat : string * string -&gt; single" Usage="xmlReader.ReadElementContentAsFloat (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="3aee5-1726">項目的本機名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1726">The local name of the element.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="3aee5-1727">項目的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1727">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-1728">檢查指定的區域名稱和命名空間 URI 是否與目前的項目相符，然後以單精確度浮點數的形式，讀取目前的項目並傳回內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1728">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a single-precision floating-point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1729">單精確度浮點數形式的項目內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1729">The element content as a single-precision floating point number.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1730">這個方法會讀取開始標記，元素的內容，並移動讀取超過結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1730">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3aee5-1731">它會展開實體，並忽略處理指示與註解。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1731">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3aee5-1732">項目只能包含簡單內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1732">The element can only contain simple content.</span></span> <span data-ttu-id="3aee5-1733">也就是說，它不能有子項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1733">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3aee5-1734">讀取器會嘗試將項目內容轉換成單精確度浮點數根據所定義的規則[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1734">The reader attempts to convert the element content to a single-precision floating point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3aee5-1735">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1735">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1736">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1736">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1737">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1737">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-1738">目前的項目包含子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1738">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="3aee5-1739">-或-  項目內容無法轉換為單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1739">-or-  The element content cannot be converted to a single-precision floating-point number.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-1740">方法是以 <see langword="null" /> 引數呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1740">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3aee5-1741">指定的區域名稱和命名空間 URI，與目前正在讀取的項目不相符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1741">The specified local name and namespace URI do not match that of the current element being read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsInt">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1742">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1742">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1743">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <see cref="T:System.InvalidOperationException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1743">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="3aee5-1744">以 32 位元帶正負號之整數的形式，讀取目前的項目並傳回內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1744">Reads the current element and returns the contents as a 32-bit signed integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsInt">
      <MemberSignature Language="C#" Value="public virtual int ReadElementContentAsInt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadElementContentAsInt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsInt" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsInt () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadElementContentAsInt();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsInt : unit -&gt; int&#xA;override this.ReadElementContentAsInt : unit -&gt; int" Usage="xmlReader.ReadElementContentAsInt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1745">以 32 位元帶正負號之整數的形式，讀取目前的項目並傳回內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1745">Reads the current element and returns the contents as a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1746">32 位元帶正負號之整數形式的項目內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1746">The element content as a 32-bit signed integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1747">這個方法會讀取開始標記，元素的內容，並移動讀取超過結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1747">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3aee5-1748">它會展開實體，並忽略處理指示與註解。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1748">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3aee5-1749">項目只能包含簡單內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1749">The element can only contain simple content.</span></span> <span data-ttu-id="3aee5-1750">也就是說，它不能有子項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1750">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3aee5-1751">如果內容的型別`xsd:integer`，讀取器傳回的 unboxed 的 32 位元帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1751">If the content is typed `xsd:integer`, the reader returns an unboxed 32-bit signed integer.</span></span> <span data-ttu-id="3aee5-1752">如果內容不具型別`xsd:integer`，讀取器會嘗試將它轉換成 32 位元帶正負號的整數，根據所定義的規則[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1752">If the content is not typed `xsd:integer`, the reader attempts to convert it to a 32-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3aee5-1753">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1753">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1754">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1754">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1755">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1755">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-1756">目前的項目包含子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1756">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="3aee5-1757">-或-  項目內容不能轉換為 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1757">-or-  The element content cannot be converted to a 32-bit signed integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-1758">方法是以 <see langword="null" /> 引數呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1758">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsInt">
      <MemberSignature Language="C#" Value="public virtual int ReadElementContentAsInt (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadElementContentAsInt(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsInt (localName As String, namespaceURI As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadElementContentAsInt(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsInt : string * string -&gt; int&#xA;override this.ReadElementContentAsInt : string * string -&gt; int" Usage="xmlReader.ReadElementContentAsInt (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="3aee5-1759">項目的本機名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1759">The local name of the element.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="3aee5-1760">項目的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1760">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-1761">檢查指定的區域名稱和命名空間 URI 是否與目前的項目相符，然後以 32 位元帶正負號之整數的形式，讀取目前的項目並傳回內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1761">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1762">32 位元帶正負號之整數形式的項目內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1762">The element content as a 32-bit signed integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1763">這個方法會讀取開始標記，元素的內容，並移動讀取超過結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1763">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3aee5-1764">它會展開實體，並忽略處理指示與註解。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1764">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3aee5-1765">項目只能包含簡單內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1765">The element can only contain simple content.</span></span> <span data-ttu-id="3aee5-1766">也就是說，它不能有子項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1766">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3aee5-1767">如果內容的型別`xsd:integer`，讀取器傳回的 unboxed 的 32 位元帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1767">If the content is typed `xsd:integer`, the reader returns an unboxed 32-bit signed integer.</span></span> <span data-ttu-id="3aee5-1768">如果內容不具型別`xsd:integer`，讀取器會嘗試將它轉換成 32 位元帶正負號的整數，根據所定義的規則[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1768">If the content is not typed `xsd:integer`, the reader attempts to convert it to a 32-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3aee5-1769">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1769">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1770">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1770">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1771">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1771">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-1772">目前的項目包含子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1772">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="3aee5-1773">-或-  項目內容不能轉換為 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1773">-or-  The element content cannot be converted to a 32-bit signed integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-1774">方法是以 <see langword="null" /> 引數呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1774">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3aee5-1775">指定的區域名稱和命名空間 URI，與目前正在讀取的項目不相符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1775">The specified local name and namespace URI do not match that of the current element being read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsLong">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1776">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1776">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1777">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <see cref="T:System.InvalidOperationException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1777">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="3aee5-1778">以 64 位元帶正負號之整數的形式，讀取目前的項目並傳回內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1778">Reads the current element and returns the contents as a 64-bit signed integer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsLong">
      <MemberSignature Language="C#" Value="public virtual long ReadElementContentAsLong ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 ReadElementContentAsLong() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsLong" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsLong () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long ReadElementContentAsLong();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsLong : unit -&gt; int64&#xA;override this.ReadElementContentAsLong : unit -&gt; int64" Usage="xmlReader.ReadElementContentAsLong " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1779">以 64 位元帶正負號之整數的形式，讀取目前的項目並傳回內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1779">Reads the current element and returns the contents as a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1780">64 位元帶正負號之整數形式的項目內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1780">The element content as a 64-bit signed integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1781">這個方法會讀取開始標記，元素的內容，並移動讀取超過結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1781">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3aee5-1782">它會展開實體，並忽略處理指示與註解。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1782">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3aee5-1783">項目只能包含簡單內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1783">The element can only contain simple content.</span></span> <span data-ttu-id="3aee5-1784">也就是說，它不能有子項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1784">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3aee5-1785">如果內容的型別`xsd:long`，讀取器傳回的 unboxed 的 64 位元帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1785">If the content is typed `xsd:long`, the reader returns an unboxed 64-bit signed integer.</span></span> <span data-ttu-id="3aee5-1786">如果內容不具型別`xsd:long`，讀取器會嘗試將它轉換成 64 位元帶正負號的整數，根據所定義的規則[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1786">If the content is not typed `xsd:long`, the reader attempts to convert it to a 64-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3aee5-1787">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1787">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-1788">下列範例會使用<xref:System.Xml.XmlReader.ReadElementContentAsLong%2A>方法，以讀取內容`longValue`項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1788">The following example uses the <xref:System.Xml.XmlReader.ReadElementContentAsLong%2A> method to read the content of the `longValue` element.</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#3)]
 [!code-vb[XmlReader.ReadElementContentAs#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#3)]  
  
 <span data-ttu-id="3aee5-1789">該範例使用 `dataFile.xml` 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1789">The example uses the `dataFile.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1790">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1790">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1791">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1791">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-1792">目前的項目包含子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1792">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="3aee5-1793">-或-  項目內容不能轉換為 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1793">-or-  The element content cannot be converted to a 64-bit signed integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-1794">方法是以 <see langword="null" /> 引數呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1794">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsLong">
      <MemberSignature Language="C#" Value="public virtual long ReadElementContentAsLong (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 ReadElementContentAsLong(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsLong (localName As String, namespaceURI As String) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long ReadElementContentAsLong(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsLong : string * string -&gt; int64&#xA;override this.ReadElementContentAsLong : string * string -&gt; int64" Usage="xmlReader.ReadElementContentAsLong (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="3aee5-1795">項目的本機名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1795">The local name of the element.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="3aee5-1796">項目的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1796">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-1797">檢查指定的區域名稱和命名空間 URI 是否與目前的項目相符，然後以 64 位元帶正負號之整數的形式，讀取目前的項目並傳回內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1797">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1798">64 位元帶正負號之整數形式的項目內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1798">The element content as a 64-bit signed integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1799">這個方法會讀取開始標記，元素的內容，並移動讀取超過結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1799">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3aee5-1800">它會展開實體，並忽略處理指示與註解。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1800">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3aee5-1801">項目只能包含簡單內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1801">The element can only contain simple content.</span></span> <span data-ttu-id="3aee5-1802">也就是說，它不能有子項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1802">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3aee5-1803">如果內容的型別`xsd:long`，讀取器傳回的 unboxed 的 64 位元帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1803">If the content is typed `xsd:long`, the reader returns an unboxed 64-bit signed integer.</span></span> <span data-ttu-id="3aee5-1804">如果內容不具型別`xsd:long`，讀取器會嘗試將它轉換成 64 位元帶正負號的整數，根據所定義的規則[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1804">If the content is not typed `xsd:long`, the reader attempts to convert it to a 64-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3aee5-1805">如需詳細資訊，請參閱 <xref:System.Xml.XmlReader> 參考頁面的＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1805">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1806">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1806">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1807">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1807">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-1808">目前的項目包含子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1808">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="3aee5-1809">-或-  項目內容不能轉換為 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1809">-or-  The element content cannot be converted to a 64-bit signed integer.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-1810">方法是以 <see langword="null" /> 引數呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1810">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3aee5-1811">指定的區域名稱和命名空間 URI，與目前正在讀取的項目不相符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1811">The specified local name and namespace URI do not match that of the current element being read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsObject">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1812">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1812">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1813">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <see cref="T:System.InvalidOperationException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1813">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="3aee5-1814">以 <see cref="T:System.Object" /> 的形式，讀取目前項目並傳回內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1814">Reads the current element and returns the contents as an <see cref="T:System.Object" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsObject">
      <MemberSignature Language="C#" Value="public virtual object ReadElementContentAsObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadElementContentAsObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadElementContentAsObject();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsObject : unit -&gt; obj&#xA;override this.ReadElementContentAsObject : unit -&gt; obj" Usage="xmlReader.ReadElementContentAsObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1815">以 <see cref="T:System.Object" /> 的形式，讀取目前項目並傳回內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1815">Reads the current element and returns the contents as an <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1816">最合適類型的 Boxed Common Language Runtime (CLR) 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1816">A boxed common language runtime (CLR) object of the most appropriate type.</span>
          </span>
          <span data-ttu-id="3aee5-1817">
            <see cref="P:System.Xml.XmlReader.ValueType" /> 屬性會判斷適當的 CLR 類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1817">The <see cref="P:System.Xml.XmlReader.ValueType" /> property determines the appropriate CLR type.</span>
          </span>
          <span data-ttu-id="3aee5-1818">如果內容的類型是清單類型，則這個方法會傳回適當類型之 Boxed 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1818">If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1819">這個方法會讀取開始標記，元素的內容，並移動讀取超過結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1819">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3aee5-1820">它會展開實體，並忽略處理指示與註解。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1820">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3aee5-1821">項目只能包含簡單內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1821">The element can only contain simple content.</span></span> <span data-ttu-id="3aee5-1822">也就是說，它不能有子項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1822">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3aee5-1823">如需詳細資訊，請參閱的 < 備註 > 一節<xref:System.Xml.XmlReader>參考頁面並[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1823">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3aee5-1824">這個方法的非同步版本，請參閱<xref:System.Xml.XmlReader.ReadElementContentAsObjectAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1824">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadElementContentAsObjectAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-1825">下列範例會使用此方法來讀取的內容`price`節點。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1825">The following example uses the method to read the content of the `price` node.</span></span> <span data-ttu-id="3aee5-1826">讀取器會使用結構描述中的資訊，以將內容對應至正確的資料類型。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1826">The reader uses the information in the schema to map the content to the correct data type.</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#6)]
 [!code-vb[XmlReader.ReadElementContentAs#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#6)]  
  
 <span data-ttu-id="3aee5-1827">此範例會使用下列兩個檔案，做為輸入。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1827">The example uses the following two files as input.</span></span>  
  
 `item.xml`  
  
 [!code-xml[XmlReader.ReadElementContentAs#11](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/item.xml#11)]  
  
 `item.xsd`  
  
 [!code-xml[XmlReader.ReadElementContentAs#12](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/item.xsd#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1828">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1828">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1829">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1829">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-1830">目前的項目包含子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1830">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="3aee5-1831">-或-  項目內容無法轉換為要求的類型</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1831">-or-  The element content cannot be converted to the requested type</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-1832">方法是以 <see langword="null" /> 引數呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1832">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsObject">
      <MemberSignature Language="C#" Value="public virtual object ReadElementContentAsObject (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadElementContentAsObject(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsObject (localName As String, namespaceURI As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadElementContentAsObject(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsObject : string * string -&gt; obj&#xA;override this.ReadElementContentAsObject : string * string -&gt; obj" Usage="xmlReader.ReadElementContentAsObject (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="3aee5-1833">項目的本機名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1833">The local name of the element.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="3aee5-1834">項目的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1834">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-1835">檢查指定的區域名稱和命名空間 URI 是否與目前的項目相符，然後以 <see cref="T:System.Object" /> 的形式，讀取目前的項目並傳回內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1835">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as an <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1836">最合適類型的 Boxed Common Language Runtime (CLR) 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1836">A boxed common language runtime (CLR) object of the most appropriate type.</span>
          </span>
          <span data-ttu-id="3aee5-1837">
            <see cref="P:System.Xml.XmlReader.ValueType" /> 屬性會判斷適當的 CLR 類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1837">The <see cref="P:System.Xml.XmlReader.ValueType" /> property determines the appropriate CLR type.</span>
          </span>
          <span data-ttu-id="3aee5-1838">如果內容的類型是清單類型，則這個方法會傳回適當類型之 Boxed 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1838">If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1839">這個方法會讀取開始標記，元素的內容，並移動讀取超過結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1839">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3aee5-1840">它會展開實體，並忽略處理指示與註解。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1840">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3aee5-1841">項目只能包含簡單內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1841">The element can only contain simple content.</span></span> <span data-ttu-id="3aee5-1842">也就是說，它不能有子項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1842">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3aee5-1843">如需詳細資訊，請參閱的 < 備註 > 一節<xref:System.Xml.XmlReader>參考頁面並[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1843">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1844">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1844">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1845">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1845">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-1846">目前的項目包含子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1846">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="3aee5-1847">-或-  項目內容無法轉換成要求的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1847">-or-  The element content cannot be converted to the requested type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-1848">方法是以 <see langword="null" /> 引數呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1848">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3aee5-1849">指定的區域名稱和命名空間 URI，與目前正在讀取的項目不相符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1849">The specified local name and namespace URI do not match that of the current element being read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsObjectAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;object&gt; ReadElementContentAsObjectAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ReadElementContentAsObjectAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsObjectAsync () As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ ReadElementContentAsObjectAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsObjectAsync : unit -&gt; System.Threading.Tasks.Task&lt;obj&gt;&#xA;override this.ReadElementContentAsObjectAsync : unit -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="xmlReader.ReadElementContentAsObjectAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlReader/&lt;ReadElementContentAsObjectAsync&gt;c__async2))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1850">以非同步方式與 <see cref="T:System.Object" /> 的形式，讀取目前項目並傳回內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1850">Asynchronously reads the current element and returns the contents as an <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1851">最合適類型的 Boxed Common Language Runtime (CLR) 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1851">A boxed common language runtime (CLR) object of the most appropriate type.</span>
          </span>
          <span data-ttu-id="3aee5-1852">
            <see cref="P:System.Xml.XmlReader.ValueType" /> 屬性會判斷適當的 CLR 類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1852">The <see cref="P:System.Xml.XmlReader.ValueType" /> property determines the appropriate CLR type.</span>
          </span>
          <span data-ttu-id="3aee5-1853">如果內容的類型是清單類型，則這個方法會傳回適當類型之 Boxed 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1853">If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1854">這是非同步的<xref:System.Xml.XmlReader.ReadElementContentAsObject%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1854">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadElementContentAsObject%2A>, with the same functionality.</span></span> <span data-ttu-id="3aee5-1855">若要使用此方法，您必須設定<xref:System.Xml.XmlReaderSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1855">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1856">在未將 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlReader" /> 非同步方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1856">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="3aee5-1857">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1857">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsString">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1858">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1858">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1859">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <see cref="T:System.InvalidOperationException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1859">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="3aee5-1860">以 <see cref="T:System.String" /> 物件的形式，讀取目前項目並傳回內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1860">Reads the current element and returns the contents as a <see cref="T:System.String" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsString">
      <MemberSignature Language="C#" Value="public virtual string ReadElementContentAsString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadElementContentAsString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadElementContentAsString();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsString : unit -&gt; string&#xA;override this.ReadElementContentAsString : unit -&gt; string" Usage="xmlReader.ReadElementContentAsString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1861">以 <see cref="T:System.String" /> 物件的形式，讀取目前項目並傳回內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1861">Reads the current element and returns the contents as a <see cref="T:System.String" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1862">
            <see cref="T:System.String" /> 物件形式的項目內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1862">The element content as a <see cref="T:System.String" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1863">這個方法會讀取開始標記，元素的內容，並移動讀取超過結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1863">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3aee5-1864">它會展開實體，並忽略處理指示與註解。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1864">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3aee5-1865">項目只能包含簡單內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1865">The element can only contain simple content.</span></span> <span data-ttu-id="3aee5-1866">也就是說，它不能有子項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1866">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3aee5-1867">如需詳細資訊，請參閱的 < 備註 > 一節<xref:System.Xml.XmlReader>參考頁面並[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1867">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="3aee5-1868">這個方法的非同步版本，請參閱<xref:System.Xml.XmlReader.ReadElementContentAsStringAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1868">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadElementContentAsStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-1869">下列範例會讀取`stringValue`項目，並傳回 （忽略註解和處理指示） 的文字內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1869">The following example reads the `stringValue` element and returns the text content (ignoring the comment and processing instruction).</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#1)]
 [!code-vb[XmlReader.ReadElementContentAs#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#1)]  
  
 <span data-ttu-id="3aee5-1870">該範例使用 `dataFile.xml` 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1870">The example uses the `dataFile.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1871">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1871">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1872">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1872">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-1873">目前的項目包含子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1873">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="3aee5-1874">-或-  項目內容不能轉換為 <see cref="T:System.String" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1874">-or-  The element content cannot be converted to a <see cref="T:System.String" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-1875">方法是以 <see langword="null" /> 引數呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1875">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsString">
      <MemberSignature Language="C#" Value="public virtual string ReadElementContentAsString (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadElementContentAsString(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsString (localName As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadElementContentAsString(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsString : string * string -&gt; string&#xA;override this.ReadElementContentAsString : string * string -&gt; string" Usage="xmlReader.ReadElementContentAsString (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="3aee5-1876">項目的本機名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1876">The local name of the element.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="3aee5-1877">項目的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1877">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-1878">檢查指定的區域名稱和命名空間 URI 是否與目前的項目相符，然後以 <see cref="T:System.String" /> 物件的形式，讀取目前的項目並傳回內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1878">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <see cref="T:System.String" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1879">
            <see cref="T:System.String" /> 物件形式的項目內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1879">The element content as a <see cref="T:System.String" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1880">這個方法會讀取開始標記，元素的內容，並移動讀取超過結尾項目標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1880">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="3aee5-1881">它會展開實體，並忽略處理指示與註解。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1881">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="3aee5-1882">項目只能包含簡單內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1882">The element can only contain simple content.</span></span> <span data-ttu-id="3aee5-1883">也就是說，它不能有子項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1883">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="3aee5-1884">如需詳細資訊，請參閱的 < 備註 > 一節<xref:System.Xml.XmlReader>參考頁面並[W3C XML 結構描述第 2 部分： 資料型別](http://go.microsoft.com/fwlink/?LinkId=4871)建議。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1884">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](http://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-1885">下列範例會讀取`stringValue`項目，並傳回 （忽略註解和處理指示） 的文字內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1885">The following example reads the `stringValue` element and returns the text content (ignoring the comment and processing instruction).</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#2)]
 [!code-vb[XmlReader.ReadElementContentAs#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#2)]  
  
 <span data-ttu-id="3aee5-1886">該範例使用 `dataFile.xml` 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1886">The example uses the `dataFile.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1887">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1887">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1888">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1888">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-1889">目前的項目包含子項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1889">The current element contains child elements.</span>
          </span>
          <span data-ttu-id="3aee5-1890">-或-  項目內容不能轉換為 <see cref="T:System.String" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1890">-or-  The element content cannot be converted to a <see cref="T:System.String" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-1891">方法是以 <see langword="null" /> 引數呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1891">The method is called with <see langword="null" /> arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3aee5-1892">指定的區域名稱和命名空間 URI，與目前正在讀取的項目不相符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1892">The specified local name and namespace URI do not match that of the current element being read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsStringAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadElementContentAsStringAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadElementContentAsStringAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsStringAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsStringAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadElementContentAsStringAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsStringAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.ReadElementContentAsStringAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="xmlReader.ReadElementContentAsStringAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlReader/&lt;ReadElementContentAsStringAsync&gt;c__async3))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1893">以非同步方式與 <see cref="T:System.String" /> 物件的形式，讀取目前項目並傳回內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1893">Asynchronously reads the current element and returns the contents as a <see cref="T:System.String" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1894">
            <see cref="T:System.String" /> 物件形式的項目內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1894">The element content as a <see cref="T:System.String" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1895">這是非同步的<xref:System.Xml.XmlReader.ReadElementContentAsString%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1895">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadElementContentAsString%2A>, with the same functionality.</span></span> <span data-ttu-id="3aee5-1896">若要使用此方法，您必須設定<xref:System.Xml.XmlReaderSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1896">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1897">在未將 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlReader" /> 非同步方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1897">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="3aee5-1898">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1898">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementString">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1899">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1899">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1900">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1900">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="3aee5-1901">讀取簡單純文字項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1901">Reads the simple text-only elements.</span>
          </span>
          <span data-ttu-id="3aee5-1902">不過，我們建議您改用<see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" />方法相反地，因為它會提供較簡單的方式來處理這項作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1902">However, we recommend that you use the <see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" /> method instead, because it provides a more straightforward way to handle this operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1903">我們建議您改用<xref:System.Xml.XmlReader.ReadElementContentAsString%2A>方法來讀取的文字項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1903">We recommend that you use the <xref:System.Xml.XmlReader.ReadElementContentAsString%2A> method to read a text element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementString">
      <MemberSignature Language="C#" Value="public virtual string ReadElementString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadElementString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadElementString();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementString : unit -&gt; string&#xA;override this.ReadElementString : unit -&gt; string" Usage="xmlReader.ReadElementString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1904">讀取純文字項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1904">Reads a text-only element.</span>
          </span>
          <span data-ttu-id="3aee5-1905">不過，我們建議您改用<see cref="M:System.Xml.XmlReader.ReadElementContentAsString" />方法相反地，因為它會提供較簡單的方式來處理這項作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1905">However, we recommend that you use the <see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /> method instead, because it provides a more straightforward way to handle this operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1906">讀取的項目中所含的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1906">The text contained in the element that was read.</span>
          </span>
          <span data-ttu-id="3aee5-1907">當項目為空白時，則為空字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1907">An empty string if the element is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1908">我們建議您改用<xref:System.Xml.XmlReader.ReadElementContentAsString>方法來讀取的文字項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1908">We recommend that you use the <xref:System.Xml.XmlReader.ReadElementContentAsString> method to read a text element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-1909">下一個內容節點不是開始標記。或找到的項目未包含簡單的文字值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1909">The next content node is not a start tag; or the element found does not contain a simple text value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1910">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1910">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1911">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1911">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementString">
      <MemberSignature Language="C#" Value="public virtual string ReadElementString (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadElementString(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementString (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadElementString(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementString : string -&gt; string&#xA;override this.ReadElementString : string -&gt; string" Usage="xmlReader.ReadElementString name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="3aee5-1912">要檢查的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1912">The name to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-1913">檢查<see cref="P:System.Xml.XmlReader.Name" />屬性找到的項目之前讀取純文字的項目符合指定的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1913">Checks that the <see cref="P:System.Xml.XmlReader.Name" /> property of the element found matches the given string before reading a text-only element.</span>
          </span>
          <span data-ttu-id="3aee5-1914">不過，我們建議您改用<see cref="M:System.Xml.XmlReader.ReadElementContentAsString" />方法相反地，因為它會提供較簡單的方式來處理這項作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1914">However, we recommend that you use the <see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /> method instead, because it provides a more straightforward way to handle this operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1915">讀取的項目中所含的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1915">The text contained in the element that was read.</span>
          </span>
          <span data-ttu-id="3aee5-1916">當項目為空白時，則為空字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1916">An empty string if the element is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1917">我們建議您改用<xref:System.Xml.XmlReader.ReadElementContentAsString>方法來讀取的文字項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1917">We recommend that you use the <xref:System.Xml.XmlReader.ReadElementContentAsString> method to read a text element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-1918">如果下一個內容節點不是開始標記。如果項目<see langword="Name" />不符合指定的引數; 或如果找到的項目不包含簡單的文字值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1918">If the next content node is not a start tag; if the element <see langword="Name" /> does not match the given argument; or if the element found does not contain a simple text value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1919">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1919">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1920">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1920">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementString">
      <MemberSignature Language="C#" Value="public virtual string ReadElementString (string localname, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadElementString(string localname, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementString (localname As String, ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadElementString(System::String ^ localname, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementString : string * string -&gt; string&#xA;override this.ReadElementString : string * string -&gt; string" Usage="xmlReader.ReadElementString (localname, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localname" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localname">
          <span data-ttu-id="3aee5-1921">要檢查的區域名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1921">The local name to check.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="3aee5-1922">要檢查的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1922">The namespace URI to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-1923">檢查<see cref="P:System.Xml.XmlReader.LocalName" />和<see cref="P:System.Xml.XmlReader.NamespaceURI" />項目的屬性找到符合的指定的字串之前讀取純文字的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1923">Checks that the <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" /> properties of the element found matches the given strings before reading a text-only element.</span>
          </span>
          <span data-ttu-id="3aee5-1924">不過，我們建議您改用<see cref="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)" />方法相反地，因為它會提供較簡單的方式來處理這項作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1924">However, we recommend that you use the <see cref="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)" /> method instead, because it provides a more straightforward way to handle this operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1925">讀取的項目中所含的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1925">The text contained in the element that was read.</span>
          </span>
          <span data-ttu-id="3aee5-1926">當項目為空白時，則為空字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1926">An empty string if the element is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1927">我們建議您改用<xref:System.Xml.XmlReader.ReadElementContentAsString%28System.String%2CSystem.String%29>方法來讀取的文字項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1927">We recommend that you use the <xref:System.Xml.XmlReader.ReadElementContentAsString%28System.String%2CSystem.String%29> method to read a text element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-1928">如果下一個內容節點不是開始標記。如果項目<see langword="LocalName" />或<see langword="NamespaceURI" />不符合指定的引數; 或如果找到的項目不包含簡單的文字值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1928">If the next content node is not a start tag; if the element <see langword="LocalName" /> or <see langword="NamespaceURI" /> do not match the given arguments; or if the element found does not contain a simple text value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1929">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1929">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1930">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1930">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadEndElement">
      <MemberSignature Language="C#" Value="public virtual void ReadEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReadEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReadEndElement();" />
      <MemberSignature Language="F#" Value="abstract member ReadEndElement : unit -&gt; unit&#xA;override this.ReadEndElement : unit -&gt; unit" Usage="xmlReader.ReadEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1931">檢查目前節點為結尾標記，並使讀取器前進至下一個節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1931">Checks that the current content node is an end tag and advances the reader to the next node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3aee5-1932">下列範例會顯示每個項目的文字內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1932">The following example displays the text content of each element.</span></span>  
  
 [!code-csharp[XmlReaderBasic#11](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#11)]
 [!code-vb[XmlReaderBasic#11](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#11)]  
  
 <span data-ttu-id="3aee5-1933">此範例會使用`book3.xml`檔案。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1933">The example uses the `book3.xml` file.</span></span>  
  
 [!code-xml[XML_Core_Files#6](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/book3.xml#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-1934">目前的節點不是結束標記，或如果輸入資料流中遇到不正確的 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1934">The current node is not an end tag or if incorrect XML is encountered in the input stream.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1935">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1935">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1936">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1936">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlReader.ReadStartElement" />
      </Docs>
    </Member>
    <Member MemberName="ReadInnerXml">
      <MemberSignature Language="C#" Value="public virtual string ReadInnerXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadInnerXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadInnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadInnerXml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadInnerXml();" />
      <MemberSignature Language="F#" Value="abstract member ReadInnerXml : unit -&gt; string&#xA;override this.ReadInnerXml : unit -&gt; string" Usage="xmlReader.ReadInnerXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1937">在衍生類別中覆寫時，將所有的內容當做字串讀取，包括標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1937">When overridden in a derived class, reads all the content, including markup, as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1938">目前節點中所有的 XML 內容，包括標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1938">All the XML content, including markup, in the current node.</span>
          </span>
          <span data-ttu-id="3aee5-1939">如果目前節點沒有子節點，則傳回空字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1939">If the current node has no children, an empty string is returned.</span>
          </span>
          <span data-ttu-id="3aee5-1940">如果目前節點既不是項目也不是屬性，則傳回空字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1940">If the current node is neither an element nor attribute, an empty string is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1941">這個方法會傳回目前的節點，包括標記的所有內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1941">This method returns all the content of the current node including the markup.</span></span> <span data-ttu-id="3aee5-1942">不會傳回目前節點 (開始標記) 及對應的結束節點 (結束標記)。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1942">The current node (start tag) and corresponding end node (end tag) are not returned.</span></span> <span data-ttu-id="3aee5-1943">例如，如果您有下列：</span><span class="sxs-lookup"><span data-stu-id="3aee5-1943">For example, if you had the following:</span></span>  
  
```xml  
<node>  
 this <child id="123"/>  
</node>  
```  
  
 <span data-ttu-id="3aee5-1944">`ReadInnerXml` 傳回 `this <child id="123"/>`</span><span class="sxs-lookup"><span data-stu-id="3aee5-1944">`ReadInnerXml` returns `this <child id="123"/>`</span></span>  
  
 <span data-ttu-id="3aee5-1945">這個方法會以下列方式處理項目和屬性的節點：</span><span class="sxs-lookup"><span data-stu-id="3aee5-1945">This method handles element and attribute nodes in the following manner:</span></span>  
  
|<span data-ttu-id="3aee5-1946">節點類型</span><span class="sxs-lookup"><span data-stu-id="3aee5-1946">Node type</span></span>|<span data-ttu-id="3aee5-1947">呼叫前的位置</span><span class="sxs-lookup"><span data-stu-id="3aee5-1947">Position before the call</span></span>|<span data-ttu-id="3aee5-1948">XML 片段</span><span class="sxs-lookup"><span data-stu-id="3aee5-1948">XML fragment</span></span>|<span data-ttu-id="3aee5-1949">傳回值</span><span class="sxs-lookup"><span data-stu-id="3aee5-1949">Return value</span></span>|<span data-ttu-id="3aee5-1950">在呼叫之後的位置</span><span class="sxs-lookup"><span data-stu-id="3aee5-1950">Position after the call</span></span>|  
|---------------|------------------------------|------------------|------------------|-----------------------------|  
|`Element`|<span data-ttu-id="3aee5-1951">在 `item1` 開始標記上。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1951">On the `item1` start tag.</span></span>|<span data-ttu-id="3aee5-1952">\<item1>text1\</item1>\<item2>text2\</item2></span><span class="sxs-lookup"><span data-stu-id="3aee5-1952">\<item1>text1\</item1>\<item2>text2\</item2></span></span>|<span data-ttu-id="3aee5-1953">text1</span><span class="sxs-lookup"><span data-stu-id="3aee5-1953">text1</span></span>|<span data-ttu-id="3aee5-1954">在 `item2` 開始標記上。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1954">On the `item2` start tag.</span></span>|  
|`Attribute`|<span data-ttu-id="3aee5-1955">在 `attr1` 屬性節點上。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1955">On the `attr1` attribute node.</span></span>|<span data-ttu-id="3aee5-1956">\<item attr1="val1" attr2="val2">text\</item></span><span class="sxs-lookup"><span data-stu-id="3aee5-1956">\<item attr1="val1" attr2="val2">text\</item></span></span>|<span data-ttu-id="3aee5-1957">val1</span><span class="sxs-lookup"><span data-stu-id="3aee5-1957">val1</span></span>|<span data-ttu-id="3aee5-1958">保留在 `attr1` 屬性節點上。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1958">Remains on the `attr1` attribute node.</span></span>|  
  
 <span data-ttu-id="3aee5-1959">如果讀取器定位於分葉節點上，則呼叫 `ReadInnerXml` 相當於呼叫 <xref:System.Xml.XmlReader.Read%2A>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1959">If the reader is positioned on a leaf node, calling `ReadInnerXml` is equivalent to calling <xref:System.Xml.XmlReader.Read%2A>.</span></span> <span data-ttu-id="3aee5-1960">此方法會傳回`String.Empty`（除非屬性節點屬性的值會傳回在此情況下）。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1960">The method returns `String.Empty` (except for attribute nodes, in which case the value of the attribute is returned).</span></span>  
  
 <span data-ttu-id="3aee5-1961">這個方法會檢查語式正確的 XML。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1961">This method checks for well-formed XML.</span></span> <span data-ttu-id="3aee5-1962">如果`ReadInnerXml`會從呼叫<xref:System.Xml.XmlValidatingReader>，這個方法也會驗證傳回的內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1962">If `ReadInnerXml` is called from an <xref:System.Xml.XmlValidatingReader>, this method also validates the content returned.</span></span>  
  
 <span data-ttu-id="3aee5-1963">中實作<xref:System.Xml.XmlNodeReader>，<xref:System.Xml.XmlTextReader>並`XmlValidatingReader`類別`ReadOuterXml`方法是命名空間感知。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1963">As implemented in the <xref:System.Xml.XmlNodeReader>, <xref:System.Xml.XmlTextReader> and `XmlValidatingReader` classes the `ReadOuterXml` method is namespace aware.</span></span>  
  
 <span data-ttu-id="3aee5-1964">這個方法的非同步版本，請參閱<xref:System.Xml.XmlReader.ReadInnerXmlAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1964">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadInnerXmlAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-1965">下列範例會比較`ReadInnerXml`和<xref:System.Xml.XmlReader.ReadOuterXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1965">The following example compares the `ReadInnerXml` and <xref:System.Xml.XmlReader.ReadOuterXml%2A> methods.</span></span>  
  
 [!code-csharp[XmlReaderBasic#12](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#12)]
 [!code-vb[XmlReaderBasic#12](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#12)]  
  
 <span data-ttu-id="3aee5-1966">此範例會使用`2books.xml`檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1966">The example uses `2books.xml` file as input.</span></span>  
  
 [!code-xml[XML_Core_Files#7](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/2books.xml#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-1967">XML 不是語式正確，或剖析 XML 時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1967">The XML was not well-formed, or an error occurred while parsing the XML.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1968">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1968">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-1969">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1969">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadInnerXmlAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadInnerXmlAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadInnerXmlAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadInnerXmlAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadInnerXmlAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadInnerXmlAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadInnerXmlAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.ReadInnerXmlAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="xmlReader.ReadInnerXmlAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlReader/&lt;ReadInnerXmlAsync&gt;c__async6))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1970">以字串形式非同步讀取所有內容，包括標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1970">Asynchronously reads all the content, including markup, as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1971">目前節點中所有的 XML 內容，包括標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1971">All the XML content, including markup, in the current node.</span>
          </span>
          <span data-ttu-id="3aee5-1972">如果目前節點沒有子節點，則傳回空字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1972">If the current node has no children, an empty string is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1973">這是非同步的<xref:System.Xml.XmlReader.ReadInnerXml%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1973">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadInnerXml%2A>, with the same functionality.</span></span> <span data-ttu-id="3aee5-1974">若要使用此方法，您必須設定<xref:System.Xml.XmlReaderSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1974">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-1975">在未將 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlReader" /> 非同步方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1975">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="3aee5-1976">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1976">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadOuterXml">
      <MemberSignature Language="C#" Value="public virtual string ReadOuterXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadOuterXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadOuterXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadOuterXml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadOuterXml();" />
      <MemberSignature Language="F#" Value="abstract member ReadOuterXml : unit -&gt; string&#xA;override this.ReadOuterXml : unit -&gt; string" Usage="xmlReader.ReadOuterXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-1977">在衍生類別中覆寫時，讀取代表這個節點及其所有子節點的內容，包括標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1977">When overridden in a derived class, reads the content, including markup, representing this node and all its children.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-1978">如果讀取器位於項目或屬性節點上，這個方法會傳回目前節點及其所有子節點的所有 XML 內容，包括標記；否則傳回空字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-1978">If the reader is positioned on an element or an attribute node, this method returns all the XML content, including markup, of the current node and all its children; otherwise, it returns an empty string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-1979">這個方法很類似<xref:System.Xml.XmlReader.ReadInnerXml%2A>但它也會傳回開始和結束標記。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1979">This method is similar to <xref:System.Xml.XmlReader.ReadInnerXml%2A> except it also returns the start and end tags.</span></span>  
  
 <span data-ttu-id="3aee5-1980">這個方法會以下列方式處理項目和屬性的節點：</span><span class="sxs-lookup"><span data-stu-id="3aee5-1980">This method handles element and attribute nodes in the following manner:</span></span>  
  
|<span data-ttu-id="3aee5-1981">節點類型</span><span class="sxs-lookup"><span data-stu-id="3aee5-1981">Node type</span></span>|<span data-ttu-id="3aee5-1982">呼叫前的位置</span><span class="sxs-lookup"><span data-stu-id="3aee5-1982">Position before the call</span></span>|<span data-ttu-id="3aee5-1983">XML 片段</span><span class="sxs-lookup"><span data-stu-id="3aee5-1983">XML fragment</span></span>|<span data-ttu-id="3aee5-1984">傳回值</span><span class="sxs-lookup"><span data-stu-id="3aee5-1984">Return value</span></span>|<span data-ttu-id="3aee5-1985">在呼叫之後的位置</span><span class="sxs-lookup"><span data-stu-id="3aee5-1985">Position After the Call</span></span>|  
|---------------|------------------------------|------------------|------------------|-----------------------------|  
|`Element`|<span data-ttu-id="3aee5-1986">在 `item1` 開始標記上。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1986">On the `item1` start tag.</span></span>|<span data-ttu-id="3aee5-1987">\<item1>text1\</item1>\<item2>text2\</item2></span><span class="sxs-lookup"><span data-stu-id="3aee5-1987">\<item1>text1\</item1>\<item2>text2\</item2></span></span>|<span data-ttu-id="3aee5-1988">\<item1>text1\</item1></span><span class="sxs-lookup"><span data-stu-id="3aee5-1988">\<item1>text1\</item1></span></span>|<span data-ttu-id="3aee5-1989">在 `item2` 開始標記上。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1989">On the `item2` start tag.</span></span>|  
|`Attribute`|<span data-ttu-id="3aee5-1990">在 `attr1` 屬性節點上。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1990">On the `attr1` attribute node.</span></span>|<span data-ttu-id="3aee5-1991">\<item attr1="val1" attr2="val2">text\</item></span><span class="sxs-lookup"><span data-stu-id="3aee5-1991">\<item attr1="val1" attr2="val2">text\</item></span></span>|<span data-ttu-id="3aee5-1992">attr1="val1"</span><span class="sxs-lookup"><span data-stu-id="3aee5-1992">attr1="val1"</span></span>|<span data-ttu-id="3aee5-1993">保留在 `attr1` 屬性節點上。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1993">Remains on the `attr1` attribute node.</span></span>|  
  
 <span data-ttu-id="3aee5-1994">如果讀取器定位於分葉節點上，則呼叫 `ReadOuterXml` 相當於呼叫 <xref:System.Xml.XmlReader.Read%2A>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1994">If the reader is positioned on a leaf node, calling `ReadOuterXml` is equivalent to calling <xref:System.Xml.XmlReader.Read%2A>.</span></span> <span data-ttu-id="3aee5-1995">此方法會傳回`String.Empty`（除非屬性節點的屬性標記會傳回在此情況下）。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1995">The method returns `String.Empty` (except for attribute nodes, in which case the attribute markup is returned).</span></span>  
  
 <span data-ttu-id="3aee5-1996">這個方法會檢查語式正確的 XML。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1996">This method checks for well-formed XML.</span></span> <span data-ttu-id="3aee5-1997">如果`ReadOuterXml`會從呼叫<xref:System.Xml.XmlValidatingReader>，這個方法也會驗證傳回的內容</span><span class="sxs-lookup"><span data-stu-id="3aee5-1997">If `ReadOuterXml` is called from an <xref:System.Xml.XmlValidatingReader>, this method also validates the content returned</span></span>  
  
 <span data-ttu-id="3aee5-1998">中實作<xref:System.Xml.XmlNodeReader>，<xref:System.Xml.XmlTextReader>並`XmlValidatingReader`類別`ReadOuterXml`方法是命名空間感知。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1998">As implemented in the <xref:System.Xml.XmlNodeReader>, <xref:System.Xml.XmlTextReader> and `XmlValidatingReader` classes the `ReadOuterXml` method is namespace aware.</span></span> <span data-ttu-id="3aee5-1999">指定下列 XML 文字`<A xmlns:S="urn:1"><S:B>hello</S:B></A>`，如果將讀取器置於上`S:B`開始標記，`ReadOuterXml`傳回`<S:B xmlns:S="urn:1">hello<S:B/>`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-1999">Given the following XML text `<A xmlns:S="urn:1"><S:B>hello</S:B></A>`, if the reader were positioned on the `S:B` start tag, `ReadOuterXml` returns `<S:B xmlns:S="urn:1">hello<S:B/>`.</span></span>  
  
 <span data-ttu-id="3aee5-2000">這個方法的非同步版本，請參閱<xref:System.Xml.XmlReader.ReadOuterXmlAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2000">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadOuterXmlAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-2001">下列範例會比較`ReadInnerXml`和`ReadOuterXml`方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2001">The following example compares the `ReadInnerXml` and `ReadOuterXml` methods.</span></span>  
  
 [!code-csharp[XmlReaderBasic#12](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#12)]
 [!code-vb[XmlReaderBasic#12](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#12)]  
  
 <span data-ttu-id="3aee5-2002">此範例會使用`2books.xml`檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2002">The example uses `2books.xml` file as input.</span></span>  
  
 [!code-xml[XML_Core_Files#7](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/2books.xml#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-2003">XML 不是語式正確，或剖析 XML 時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2003">The XML was not well-formed, or an error occurred while parsing the XML.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2004">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2004">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-2005">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2005">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadOuterXmlAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadOuterXmlAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadOuterXmlAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadOuterXmlAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadOuterXmlAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadOuterXmlAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadOuterXmlAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.ReadOuterXmlAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="xmlReader.ReadOuterXmlAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlReader/&lt;ReadOuterXmlAsync&gt;c__async8))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-2006">非同步讀取表示這個節點及其所有子系的內容，包括標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2006">Asynchronously reads the content, including markup, representing this node and all its children.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-2007">如果讀取器位於項目或屬性節點上，這個方法會傳回目前節點及其所有子節點的所有 XML 內容，包括標記；否則傳回空字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2007">If the reader is positioned on an element or an attribute node, this method returns all the XML content, including markup, of the current node and all its children; otherwise, it returns an empty string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-2008">這是非同步的<xref:System.Xml.XmlReader.ReadOuterXml%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2008">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadOuterXml%2A>, with the same functionality.</span></span> <span data-ttu-id="3aee5-2009">若要使用此方法，您必須設定<xref:System.Xml.XmlReaderSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2009">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2010">在未將 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlReader" /> 非同步方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2010">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="3aee5-2011">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2011">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadStartElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2012">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2012">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-2013">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <see cref="T:System.InvalidOperationException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2013">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="3aee5-2014">檢查以確定目前節點為項目，然後使讀取器前進至下一個節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2014">Checks that the current node is an element and advances the reader to the next node.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadStartElement">
      <MemberSignature Language="C#" Value="public virtual void ReadStartElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadStartElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadStartElement" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReadStartElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReadStartElement();" />
      <MemberSignature Language="F#" Value="abstract member ReadStartElement : unit -&gt; unit&#xA;override this.ReadStartElement : unit -&gt; unit" Usage="xmlReader.ReadStartElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-2015">檢查以確定目前節點為項目，然後使讀取器前進至下一個節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2015">Checks that the current node is an element and advances the reader to the next node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-2016">這個方法會呼叫<xref:System.Xml.XmlReader.IsStartElement%2A>後面接著<xref:System.Xml.XmlReader.Read%2A>您放置在輸入資料流中找到該項目的內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2016">This method calls <xref:System.Xml.XmlReader.IsStartElement%2A> followed by <xref:System.Xml.XmlReader.Read%2A> to position you on the content of that element found in the input stream.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-2017">輸入資料流中遇到不正確的 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2017">Incorrect XML was encountered in the input stream.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2018">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2018">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-2019">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2019">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlReader.ReadEndElement" />
      </Docs>
    </Member>
    <Member MemberName="ReadStartElement">
      <MemberSignature Language="C#" Value="public virtual void ReadStartElement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadStartElement(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadStartElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReadStartElement (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReadStartElement(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member ReadStartElement : string -&gt; unit&#xA;override this.ReadStartElement : string -&gt; unit" Usage="xmlReader.ReadStartElement name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="3aee5-2020">項目的限定名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2020">The qualified name of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-2021">檢查目前的內容節點是否具有的項目指定<see cref="P:System.Xml.XmlReader.Name" />並使讀取器前進至下一個節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2021">Checks that the current content node is an element with the given <see cref="P:System.Xml.XmlReader.Name" /> and advances the reader to the next node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-2022">呼叫此方法對應於呼叫<xref:System.Xml.XmlReader.IsStartElement%2A>後面接著呼叫<xref:System.Xml.XmlReader.Read%2A>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2022">A call to this method corresponds to a call to <xref:System.Xml.XmlReader.IsStartElement%2A> followed by a call to <xref:System.Xml.XmlReader.Read%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-2023">下列範例會顯示每個項目的文字內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2023">The following example displays the text content of each element.</span></span>  
  
 [!code-csharp[XmlReaderBasic#11](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#11)]
 [!code-vb[XmlReaderBasic#11](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#11)]  
  
 <span data-ttu-id="3aee5-2024">此範例會使用`book3.xml`檔案。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2024">The example uses the `book3.xml` file.</span></span>  
  
 [!code-xml[XML_Core_Files#6](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/book3.xml#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-2025">輸入資料流中遇到不正確的 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2025">Incorrect XML was encountered in the input stream.</span>
          </span>
          <span data-ttu-id="3aee5-2026">-或-  項目的 <see cref="P:System.Xml.XmlReader.Name" /> 不符合指定的 <paramref name="name" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2026">-or-  The <see cref="P:System.Xml.XmlReader.Name" /> of the element does not match the given <paramref name="name" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2027">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2027">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-2028">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2028">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlReader.ReadEndElement" />
      </Docs>
    </Member>
    <Member MemberName="ReadStartElement">
      <MemberSignature Language="C#" Value="public virtual void ReadStartElement (string localname, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadStartElement(string localname, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReadStartElement (localname As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReadStartElement(System::String ^ localname, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member ReadStartElement : string * string -&gt; unit&#xA;override this.ReadStartElement : string * string -&gt; unit" Usage="xmlReader.ReadStartElement (localname, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localname" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localname">
          <span data-ttu-id="3aee5-2029">項目的本機名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2029">The local name of the element.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="3aee5-2030">項目的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2030">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-2031">檢查目前的內容節點是否具有的項目指定<see cref="P:System.Xml.XmlReader.LocalName" />和<see cref="P:System.Xml.XmlReader.NamespaceURI" />並使讀取器前進至下一個節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2031">Checks that the current content node is an element with the given <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" /> and advances the reader to the next node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-2032">呼叫此方法對應於呼叫<xref:System.Xml.XmlReader.IsStartElement%2A>後面接著呼叫<xref:System.Xml.XmlReader.Read%2A>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2032">A call to this method corresponds to a call to <xref:System.Xml.XmlReader.IsStartElement%2A> followed by a call to <xref:System.Xml.XmlReader.Read%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-2033">輸入資料流中遇到不正確的 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2033">Incorrect XML was encountered in the input stream.</span>
          </span>
          <span data-ttu-id="3aee5-2034">-或-  找到項目的 <see cref="P:System.Xml.XmlReader.LocalName" /> 和 <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 屬性不符合指定的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2034">-or-  The <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" /> properties of the element found do not match the given arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2035">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2035">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-2036">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2036">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlReader.ReadEndElement" />
      </Docs>
    </Member>
    <Member MemberName="ReadState">
      <MemberSignature Language="C#" Value="public abstract System.Xml.ReadState ReadState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ReadState ReadState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.ReadState" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ReadState As ReadState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::ReadState ReadState { System::Xml::ReadState get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadState : System.Xml.ReadState" Usage="System.Xml.XmlReader.ReadState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.ReadState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-2037">在衍生類別中覆寫時，取得讀取器的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2037">When overridden in a derived class, gets the state of the reader.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aee5-2038">其中一個列舉值，這個值指定讀取器的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2038">One of the enumeration values that specifies the state of the reader.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-2039"><xref:System.Xml.XmlReader.ReadState%2A>屬性具有下列值之一：</span><span class="sxs-lookup"><span data-stu-id="3aee5-2039">The <xref:System.Xml.XmlReader.ReadState%2A> property has one of the following values:</span></span>  
  
-   <span data-ttu-id="3aee5-2040"><xref:System.Xml.ReadState.Initial>當<xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2040"><xref:System.Xml.ReadState.Initial>, when the <xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType> method is called.</span></span>  
  
-   <span data-ttu-id="3aee5-2041"><xref:System.Xml.ReadState.Interactive>當<xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType>呼叫的方法，並讀取器上無法呼叫其他方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2041"><xref:System.Xml.ReadState.Interactive>, when the <xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType> method has been called, and additional methods may be called on the reader.</span></span>  
  
-   <span data-ttu-id="3aee5-2042"><xref:System.Xml.ReadState.EndOfFile>當 XML 文件結尾已經順利到達。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2042"><xref:System.Xml.ReadState.EndOfFile>, when the end of the XML document has been reached successfully.</span></span>  
  
-   <span data-ttu-id="3aee5-2043"><xref:System.Xml.ReadState.Closed>當<xref:System.Xml.XmlReader.Close%2A?displayProperty=nameWithType>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2043"><xref:System.Xml.ReadState.Closed>, when the <xref:System.Xml.XmlReader.Close%2A?displayProperty=nameWithType> method is called.</span></span>  
  
-   <span data-ttu-id="3aee5-2044"><xref:System.Xml.ReadState.Error>當發生錯誤，無法讀取的作業無法繼續。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2044"><xref:System.Xml.ReadState.Error>, when an error is preventing the read operation from continuing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2045">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2045">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-2046">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2046">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadString">
      <MemberSignature Language="C#" Value="public virtual string ReadString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadString();" />
      <MemberSignature Language="F#" Value="abstract member ReadString : unit -&gt; string&#xA;override this.ReadString : unit -&gt; string" Usage="xmlReader.ReadString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-2047">在衍生類別中覆寫時，將項目或文字節點的內容當做字串讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2047">When overridden in a derived class, reads the contents of an element or text node as a string.</span>
          </span>
          <span data-ttu-id="3aee5-2048">不過，我們建議您改用<see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" />方法相反地，因為它會提供較簡單的方式來處理這項作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2048">However, we recommend that you use the <see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" /> method instead, because it provides a more straightforward way to handle this operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-2049">項目的內容或空字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2049">The contents of the element or an empty string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-2050">我們建議您改用<xref:System.Xml.XmlReader.ReadElementContentAsString%2A>方法來讀取項目或文字節點，做為字串的內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2050">We recommend that you use the <xref:System.Xml.XmlReader.ReadElementContentAsString%2A> method to read the contents of an element or text node as a string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-2051">剖析 XML 時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2051">An error occurred while parsing the XML.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2052">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2052">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-2053">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2053">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadSubtree">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlReader ReadSubtree ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlReader ReadSubtree() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadSubtree" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadSubtree () As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlReader ^ ReadSubtree();" />
      <MemberSignature Language="F#" Value="abstract member ReadSubtree : unit -&gt; System.Xml.XmlReader&#xA;override this.ReadSubtree : unit -&gt; System.Xml.XmlReader" Usage="xmlReader.ReadSubtree " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-2054">傳回新<see langword="XmlReader" />可以用來讀取目前的節點及其所有子系的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2054">Returns a new <see langword="XmlReader" /> instance that can be used to read the current node, and all its descendants.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-2055">新的 XML 讀取器執行個體設定為<see cref="F:System.Xml.ReadState.Initial" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2055">A new XML reader instance set to <see cref="F:System.Xml.ReadState.Initial" />.</span>
          </span>
          <span data-ttu-id="3aee5-2056">呼叫<see cref="M:System.Xml.XmlReader.Read" />方法前呼叫的節點上放置新讀取器<see cref="M:System.Xml.XmlReader.ReadSubtree" />方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2056">Calling the <see cref="M:System.Xml.XmlReader.Read" /> method positions the new reader on the node that was current before the call to the <see cref="M:System.Xml.XmlReader.ReadSubtree" /> method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-2057"><xref:System.Xml.XmlReader.ReadSubtree%2A> 可以呼叫只能在項目節點上。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2057"><xref:System.Xml.XmlReader.ReadSubtree%2A> can be called only on element nodes.</span></span> <span data-ttu-id="3aee5-2058">已讀取整個子樹狀目錄中，呼叫<xref:System.Xml.XmlReader.Read%2A>方法會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2058">When the entire sub-tree has been read, calls to the <xref:System.Xml.XmlReader.Read%2A> method returns `false`.</span></span> <span data-ttu-id="3aee5-2059">當新的 XML 讀取器已關閉，位於原始 readeris`EndElement`子樹狀結構的節點。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2059">When the new XML reader has been closed, the original readeris positioned on the `EndElement` node of the sub-tree.</span></span> <span data-ttu-id="3aee5-2060">因此，如果您呼叫<xref:System.Xml.XmlReader.ReadSubtree%2A>book 項目樹狀子目錄已讀取] 和 [新的 XML 讀取器後的開始標記上的方法已關閉，原始的 XML 讀取器定位於結束標記的書籍項目上。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2060">Thus, if you called the <xref:System.Xml.XmlReader.ReadSubtree%2A> method on the start tag of the book element, after the sub-tree has been read and the new XML reader has been closed, the original XML reader is positioned on the end tag of the book element.</span></span>  
  
 <span data-ttu-id="3aee5-2061">在關閉新讀取器之前，不應在原始讀取器上執行任何作業。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2061">You should not perform any operations on the original reader until the new reader has been closed.</span></span> <span data-ttu-id="3aee5-2062">此動作不受支援，並會導致無法預期的行為。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2062">This action is not supported and can result in unpredictable behavior.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3aee5-2063"><xref:System.Xml.XmlReader.ReadSubtree%2A>方法不適用於 creatingcopies，您可以使用獨立的 XML 資料。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2063">The <xref:System.Xml.XmlReader.ReadSubtree%2A> method isn't intended for creatingcopies of the XML data that you can work with independently.</span></span> <span data-ttu-id="3aee5-2064">它的專為建立的 XML 項目周圍的界限。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2064">It's designedto create a boundary around an XML element.</span></span> <span data-ttu-id="3aee5-2065">如果您想要將資料傳遞至另一個元件進行處理，而您想要限制您的元件可以存取的資料中有多少，這非常有用。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2065">This is useful if you want to pass data to another component for processing and you wish to limit how much of your data the component can access.</span></span> <span data-ttu-id="3aee5-2066">當您傳遞所傳回的 XML 讀取器<xref:System.Xml.XmlReader.ReadSubtree%2A>另一個應用程式，應用程式的方法可以存取只有該 XML 項目，不是整個 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2066">When you pass an XML reader returned by the <xref:System.Xml.XmlReader.ReadSubtree%2A> method to another application, the application can access only that XML element, not the entire XML document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-2067">下列範例會示範如何使用 <xref:System.Xml.XmlReader.ReadSubtree%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2067">The following example shows how to use the <xref:System.Xml.XmlReader.ReadSubtree%2A> method.</span></span>  
  
 [!code-csharp[XmlReaderBasic#13](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#13)]
 [!code-vb[XmlReaderBasic#13](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#13)]  
  
 <span data-ttu-id="3aee5-2068">您可以使用下列 XML 資料來執行本主題中的範例：</span><span class="sxs-lookup"><span data-stu-id="3aee5-2068">Use the following XML data to run the examples in this topic:</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<Books>  
  <Book>  
    <Title>A Brief History of Time</Title>  
  </Book>  
  <Book>  
    <Title>Principle Of Relativity</Title>  
  </Book>  
  <Book>  
    <Title>Victory of Reason</Title>  
  </Book>  
  <Book>  
    <Title>The Unicorn that did not Fail</Title>  
  </Book>  
  <Book>  
    <Title>Rational Ontology</Title>  
  </Book>  
  <Book>  
    <Title>The Meaning of Pizza</Title>  
  </Book>  
</Books>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2069">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2069">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-2070">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2070">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadToDescendant">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2071">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2071">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-2072">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <see cref="T:System.InvalidOperationException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2072">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="3aee5-2073">往前推進<see cref="T:System.Xml.XmlReader" />下一個相符的子系項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2073">Advances the <see cref="T:System.Xml.XmlReader" /> to the next matching descendant element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadToDescendant">
      <MemberSignature Language="C#" Value="public virtual bool ReadToDescendant (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadToDescendant(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadToDescendant(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToDescendant (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadToDescendant(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member ReadToDescendant : string -&gt; bool&#xA;override this.ReadToDescendant : string -&gt; bool" Usage="xmlReader.ReadToDescendant name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="3aee5-2074">您要移至之項目的限定名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2074">The qualified name of the element you wish to move to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-2075">往前推進<see cref="T:System.Xml.XmlReader" />下一個子系的項目，具有指定限定名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2075">Advances the <see cref="T:System.Xml.XmlReader" /> to the next descendant element with the specified qualified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-2076">
            <see langword="true" />如果找到相符的子系項目否則<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2076">
              <see langword="true" /> if a matching descendant element is found; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3aee5-2077">如果找不到相符的子元素，<see cref="T:System.Xml.XmlReader" />位於結束標記 (<see cref="P:System.Xml.XmlReader.NodeType" />是<see langword="XmlNodeType.EndElement" />) 的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2077">If a matching child element is not found, the <see cref="T:System.Xml.XmlReader" /> is positioned on the end tag (<see cref="P:System.Xml.XmlReader.NodeType" /> is <see langword="XmlNodeType.EndElement" />) of the element.</span>
          </span>
          <span data-ttu-id="3aee5-2078">如果<see cref="T:System.Xml.XmlReader" />不位於項目上時<see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String)" />呼叫，這個方法會傳回<see langword="false" />和位置<see cref="T:System.Xml.XmlReader" />則不會變更。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2078">If the <see cref="T:System.Xml.XmlReader" /> is not positioned on an element when <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String)" /> was called, this method returns <see langword="false" /> and the position of the <see cref="T:System.Xml.XmlReader" /> is not changed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3aee5-2079">下列範例會剖析第二個書籍節點。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2079">The following example parses the second book node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#14](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#14)]
 [!code-vb[XmlReaderBasic#14](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#14)]  
  
 <span data-ttu-id="3aee5-2080">此範例會使用該檔案，`2books.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2080">The example uses the file, `2books.xml`, as input.</span></span>  
  
 [!code-xml[XML_Core_Files#7](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/2books.xml#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2081">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2081">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-2082">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2082">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3aee5-2083">參數為空字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2083">The parameter is an empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToDescendant">
      <MemberSignature Language="C#" Value="public virtual bool ReadToDescendant (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadToDescendant(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToDescendant (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadToDescendant(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadToDescendant : string * string -&gt; bool&#xA;override this.ReadToDescendant : string * string -&gt; bool" Usage="xmlReader.ReadToDescendant (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="3aee5-2084">您要移至之項目的本機名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2084">The local name of the element you wish to move to.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="3aee5-2085">您要移至之項目的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2085">The namespace URI of the element you wish to move to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-2086">往前推進<see cref="T:System.Xml.XmlReader" />下一個子系的項目，使用指定的區域名稱和命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2086">Advances the <see cref="T:System.Xml.XmlReader" /> to the next descendant element with the specified local name and namespace URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-2087">
            <see langword="true" />如果找到相符的子系項目否則<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2087">
              <see langword="true" /> if a matching descendant element is found; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3aee5-2088">如果找不到相符的子元素，<see cref="T:System.Xml.XmlReader" />位於結束標記 (<see cref="P:System.Xml.XmlReader.NodeType" />是<see langword="XmlNodeType.EndElement" />) 的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2088">If a matching child element is not found, the <see cref="T:System.Xml.XmlReader" /> is positioned on the end tag (<see cref="P:System.Xml.XmlReader.NodeType" /> is <see langword="XmlNodeType.EndElement" />) of the element.</span>
          </span>
          <span data-ttu-id="3aee5-2089">如果<see cref="T:System.Xml.XmlReader" />不位於項目上時<see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" />呼叫，這個方法會傳回<see langword="false" />和位置<see cref="T:System.Xml.XmlReader" />則不會變更。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2089">If the <see cref="T:System.Xml.XmlReader" /> is not positioned on an element when <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" /> was called, this method returns <see langword="false" /> and the position of the <see cref="T:System.Xml.XmlReader" /> is not changed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2090">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2090">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-2091">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2091">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-2092">這兩個參數值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2092">Both parameter values are <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadToFollowing">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2093">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2093">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-2094">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <see cref="T:System.InvalidOperationException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2094">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="3aee5-2095">在找到具名項目之前讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2095">Reads until the named element is found.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadToFollowing">
      <MemberSignature Language="C#" Value="public virtual bool ReadToFollowing (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadToFollowing(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadToFollowing(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToFollowing (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadToFollowing(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member ReadToFollowing : string -&gt; bool&#xA;override this.ReadToFollowing : string -&gt; bool" Usage="xmlReader.ReadToFollowing name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="3aee5-2096">項目的限定名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2096">The qualified name of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-2097">在找到具有指定限定名稱的項目之前讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2097">Reads until an element with the specified qualified name is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-2098">
            <see langword="true" />如果找到相符的項目否則<see langword="false" />和<see cref="T:System.Xml.XmlReader" />是在檔案結尾的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2098">
              <see langword="true" /> if a matching element is found; otherwise <see langword="false" /> and the <see cref="T:System.Xml.XmlReader" /> is in an end of file state.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-2099">這個方法是設定執行的功能上相當`following::name`從目前節點的 XPath 運算式。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2099">This method is functionally equivalent executing the `following::name` XPath expression from the current node.</span></span> <span data-ttu-id="3aee5-2100">它提供快速的方式來尋找 XML 文件中的具名項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2100">It provides a quick way to find a named element in the XML document.</span></span> <span data-ttu-id="3aee5-2101">將讀取器前移至下一步 的下列項目符合指定的名稱，並傳回`true`如果找到相符的項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2101">It advances the reader to the next following element that matches the specified name and returns `true` if a matching element is found.</span></span> <span data-ttu-id="3aee5-2102">使用下列範例中，讀取器會讀取指定之項目的第一個執行個體同時向前讀取。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2102">Using the example below, the reader would read to the first instance of the specified element while reading forward.</span></span>  
  
```xml  
<!--"sample.xml"-->  
<?xmlversion="1.0">  
   <items>  
      <item xmls="urn:1"/>  
   </items>  
</xml>  
  
```  
  
```csharp  
XmlTextReader reader = newXmlTextReader("sample.xml");  
  
reader.ReadToFollowing("item");  
  
```  
  
 <span data-ttu-id="3aee5-2103">可以在所有節點類型上呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2103">This method can be called on all node types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2104">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2104">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-2105">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2105">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3aee5-2106">參數為空字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2106">The parameter is an empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToFollowing">
      <MemberSignature Language="C#" Value="public virtual bool ReadToFollowing (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadToFollowing(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToFollowing (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadToFollowing(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadToFollowing : string * string -&gt; bool&#xA;override this.ReadToFollowing : string * string -&gt; bool" Usage="xmlReader.ReadToFollowing (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="3aee5-2107">項目的本機名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2107">The local name of the element.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="3aee5-2108">項目的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2108">The namespace URI of the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-2109">在找到具有指定區域名稱和命名空間 URI 的項目之前讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2109">Reads until an element with the specified local name and namespace URI is found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-2110">
            <see langword="true" />如果找到相符的項目否則<see langword="false" />和<see cref="T:System.Xml.XmlReader" />是在檔案結尾的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2110">
              <see langword="true" /> if a matching element is found; otherwise <see langword="false" /> and the <see cref="T:System.Xml.XmlReader" /> is in an end of file state.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-2111">這個方法是設定執行的功能上相當`following::name`從目前節點的 XPath 運算式。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2111">This method is functionally equivalent executing the `following::name` XPath expression from the current node.</span></span> <span data-ttu-id="3aee5-2112">它提供快速的方式來尋找 XML 文件中的具名項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2112">It provides a quick way to find a named element in the XML document.</span></span> <span data-ttu-id="3aee5-2113">將讀取器前移至下一步 的下列項目符合指定的名稱，並傳回`true`如果找到相符的項目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2113">It advances the reader to the next following element that matches the specified name and returns `true` if a matching element is found.</span></span>  
  
```xml  
<!--"sample.xml"-->  
<?xmlversion="1.0">  
   <items>  
      <item xmls="urn:1"/>  
   </items>  
</xml>  
  
```  
  
```csharp  
XmlTextReader reader = newXmlTextReader("sample.xml");  
  
reader.ReadToFollowing("item", "urn:1");  
  
```  
  
 <span data-ttu-id="3aee5-2114">可以在所有節點類型上呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2114">This method can be called on all node types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2115">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2115">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-2116">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2116">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-2117">這兩個參數值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2117">Both parameter values are <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadToNextSibling">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2118">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2118">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-2119">在此情況下，會擲回包含「非同步作業已經在進行中」訊息的 <see cref="T:System.InvalidOperationException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2119">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message “An asynchronous operation is already in progress.”</span>
          </span>
        </exception>
        <summary>
          <span data-ttu-id="3aee5-2120">往前推進<see langword="XmlReader" />下一個相符的同層級項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2120">Advances the <see langword="XmlReader" /> to the next matching sibling element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadToNextSibling">
      <MemberSignature Language="C#" Value="public virtual bool ReadToNextSibling (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadToNextSibling(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadToNextSibling(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToNextSibling (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadToNextSibling(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member ReadToNextSibling : string -&gt; bool&#xA;override this.ReadToNextSibling : string -&gt; bool" Usage="xmlReader.ReadToNextSibling name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="3aee5-2121">您要移至之同層級項目的限定名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2121">The qualified name of the sibling element you wish to move to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-2122">往前推進<see langword="XmlReader" />指定限定名稱的下一個同層級項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2122">Advances the <see langword="XmlReader" /> to the next sibling element with the specified qualified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-2123">
            <see langword="true" />如果找到相符的同層級項目否則<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2123">
              <see langword="true" /> if a matching sibling element is found; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3aee5-2124">如果找不到相符的同層級項目，則 <see langword="XmlReader" /> 會置於父項目的結束標記上 (<see cref="P:System.Xml.XmlReader.NodeType" /> 為 <see langword="XmlNodeType.EndElement" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2124">If a matching sibling element is not found, the <see langword="XmlReader" /> is positioned on the end tag (<see cref="P:System.Xml.XmlReader.NodeType" /> is <see langword="XmlNodeType.EndElement" />) of the parent element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3aee5-2125">請勿呼叫<xref:System.Xml.XmlReader.ReadToNextSibling%2A>時`XmlReader`為初始狀態 (<xref:System.Xml.XmlReader.ReadState%2A>是<xref:System.Xml.ReadState.Initial>)。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2125">Do not call <xref:System.Xml.XmlReader.ReadToNextSibling%2A> when the `XmlReader` is an initial state (<xref:System.Xml.XmlReader.ReadState%2A> is <xref:System.Xml.ReadState.Initial>).</span></span> <span data-ttu-id="3aee5-2126">您可以呼叫<xref:System.Xml.XmlReader.Read%2A>前進`XmlReader`，然後呼叫<xref:System.Xml.XmlReader.ReadToNextSibling%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2126">You can call <xref:System.Xml.XmlReader.Read%2A> to advance the `XmlReader` and then call the <xref:System.Xml.XmlReader.ReadToNextSibling%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-2127">下列範例會讀取每個書籍節點上的 ISBN 屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2127">The following example reads the ISBN attribute on each book node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#15](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#15)]
 [!code-vb[XmlReaderBasic#15](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2128">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2128">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-2129">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2129">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3aee5-2130">參數為空字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2130">The parameter is an empty string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToNextSibling">
      <MemberSignature Language="C#" Value="public virtual bool ReadToNextSibling (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadToNextSibling(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToNextSibling (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadToNextSibling(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadToNextSibling : string * string -&gt; bool&#xA;override this.ReadToNextSibling : string * string -&gt; bool" Usage="xmlReader.ReadToNextSibling (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="3aee5-2131">您要移至之同層級項目的本機名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2131">The local name of the sibling element you wish to move to.</span>
          </span>
        </param>
        <param name="namespaceURI">
          <span data-ttu-id="3aee5-2132">您要移至之同層級項目的命名空間 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2132">The namespace URI of the sibling element you wish to move to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-2133">將 <see langword="XmlReader" /> 前移到下一個具有指定區域名稱和命名空間 URI 的同層級項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2133">Advances the <see langword="XmlReader" /> to the next sibling element with the specified local name and namespace URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-2134">如果找到相符的同層級項目，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2134">
              <see langword="true" /> if a matching sibling element is found; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3aee5-2135">如果找不到相符的同層級項目，則 <see langword="XmlReader" /> 會置於父項目的結束標記上 (<see cref="P:System.Xml.XmlReader.NodeType" /> 為 <see langword="XmlNodeType.EndElement" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2135">If a matching sibling element is not found, the <see langword="XmlReader" /> is positioned on the end tag (<see cref="P:System.Xml.XmlReader.NodeType" /> is <see langword="XmlNodeType.EndElement" />) of the parent element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="3aee5-2136">請勿呼叫<xref:System.Xml.XmlReader.ReadToNextSibling%2A>時`XmlReader`為初始狀態 (<xref:System.Xml.XmlReader.ReadState%2A>是<xref:System.Xml.ReadState.Initial>)。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2136">Do not call <xref:System.Xml.XmlReader.ReadToNextSibling%2A> when the `XmlReader` is an initial state (<xref:System.Xml.XmlReader.ReadState%2A> is <xref:System.Xml.ReadState.Initial>).</span></span> <span data-ttu-id="3aee5-2137">您可以呼叫<xref:System.Xml.XmlReader.Read%2A>前進`XmlReader`，然後呼叫<xref:System.Xml.XmlReader.ReadToNextSibling%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2137">You can call <xref:System.Xml.XmlReader.Read%2A> to advance the `XmlReader` and then call the <xref:System.Xml.XmlReader.ReadToNextSibling%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2138">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2138">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-2139">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2139">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-2140">這兩個參數值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2140">Both parameter values are <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadValueChunk">
      <MemberSignature Language="C#" Value="public virtual int ReadValueChunk (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadValueChunk(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadValueChunk (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadValueChunk(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadValueChunk : char[] * int * int -&gt; int&#xA;override this.ReadValueChunk : char[] * int * int -&gt; int" Usage="xmlReader.ReadValueChunk (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3aee5-2141">做為寫入文字內容之緩衝區的字元陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2141">The array of characters that serves as the buffer to which the text contents are written.</span>
          </span>
          <span data-ttu-id="3aee5-2142">這個值不能是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2142">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="3aee5-2143">緩衝區位移位置<see cref="T:System.Xml.XmlReader" />可以開始複製結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2143">The offset within the buffer where the <see cref="T:System.Xml.XmlReader" /> can start to copy the results.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3aee5-2144">要複製至緩衝區中的最大字元數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2144">The maximum number of characters to copy into the buffer.</span>
          </span>
          <span data-ttu-id="3aee5-2145">從這個方法傳回所複製的實際字元數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2145">The actual number of characters copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-2146">讀取 XML 文件中內嵌之大量文字資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2146">Reads large streams of text embedded in an XML document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-2147">讀入緩衝區的字元數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2147">The number of characters read into the buffer.</span>
          </span>
          <span data-ttu-id="3aee5-2148">當不再有文字內容時，會傳回零的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2148">The value zero is returned when there is no more text content.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-2149">這個方法可讓您的非常大型資料流處理方式，也就是在 XML 文件中內嵌的文字資料流讀取一次而不是整個值配置單一字串的字元數少。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2149">This method enables reading of very large streams of text embedded in an XML document in a streaming fashion, that is, a small number of characters at a time instead of allocating a single string for the whole value.</span></span> <span data-ttu-id="3aee5-2150">可以呼叫這個方法，其值的任何節點上 (<xref:System.Xml.XmlReader.HasValue%2A>是`true`)，但實際的節點值只會進行串流處理時呼叫的文字、 泛空白字元和顯著泛空白字元節點。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2150">This method can be called on any node that has a value (<xref:System.Xml.XmlReader.HasValue%2A> is `true`), however actual streaming of the node value only occurs when called on a text, white space and significant white space nodes.</span></span> <span data-ttu-id="3aee5-2151">其他節點型別值會快取，包括屬性和 CDATA 節點。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2151">Other node type values are cached, including attributes and CDATA nodes.</span></span>  
  
 <span data-ttu-id="3aee5-2152">這個方法傳回的內容<xref:System.Xml.XmlReader.Value%2A>屬性並不會移動<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2152">This method returns only the content of the <xref:System.Xml.XmlReader.Value%2A> property and does not move the <xref:System.Xml.XmlReader>.</span></span>  
  
 <span data-ttu-id="3aee5-2153">這個方法會讀取指定的字元數 (`count`) 的節點值的字元緩衝區 (`buffer`) 中的指定位移 (`index`)，並傳回寫入緩衝區的字元數。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2153">This method reads the specified number of characters (`count`) of the node value into a character buffer (`buffer`) at a specified offset (`index`) and returns the number of characters written to the buffer.</span></span> <span data-ttu-id="3aee5-2154">它會傳回`0`當它已達到此值的結尾。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2154">It returns the `0` when it has reached the end of the value.</span></span> <span data-ttu-id="3aee5-2155">它無法閱讀值重新啟動。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2155">It cannot be restarted to read through the value again.</span></span>  
  
 <span data-ttu-id="3aee5-2156">呼叫之間<xref:System.Xml.XmlReader.ReadValueChunk%2A><xref:System.Xml.XmlReader>屬性進行任何變更，除了<xref:System.Xml.XmlReader.Value%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2156">In between calls to <xref:System.Xml.XmlReader.ReadValueChunk%2A> the <xref:System.Xml.XmlReader> properties do no change except for the <xref:System.Xml.XmlReader.Value%2A> property.</span></span> <span data-ttu-id="3aee5-2157">當<xref:System.Xml.XmlReader.Value%2A>存取屬性時它可能會傳回部分的值 (尚未所傳回的字元<xref:System.Xml.XmlReader.ReadValueChunk%2A>) 或完整的值，視實作而定。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2157">When the <xref:System.Xml.XmlReader.Value%2A> property is accessed it may either return a partial value (with characters not yet returned by <xref:System.Xml.XmlReader.ReadValueChunk%2A>) or a full value depending on the implementation.</span></span> <span data-ttu-id="3aee5-2158">所有<xref:System.Xml.XmlReader>中的實作<xref:System.Xml>命名空間傳回的部分值<xref:System.Xml.XmlReader.Value%2A>屬性實作。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2158">All the <xref:System.Xml.XmlReader> implementations in the <xref:System.Xml> namespace return a partial value for the <xref:System.Xml.XmlReader.Value%2A> property implementation.</span></span>  
  
 <span data-ttu-id="3aee5-2159">任何讀取方法呼叫之間呼叫<xref:System.Xml.XmlReader.ReadValueChunk%2A>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2159">Any Read method can be called in between calls to <xref:System.Xml.XmlReader.ReadValueChunk%2A>.</span></span> <span data-ttu-id="3aee5-2160">如果發生這種情況<xref:System.Xml.XmlReader>移至下一個<xref:System.Xml.XmlNodeType>中的資料流和尚不傳回任何字元會略過。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2160">If this occurs, the <xref:System.Xml.XmlReader> moves to the next <xref:System.Xml.XmlNodeType> in the stream and any characters not yet returned are skipped.</span></span>  
  
 <span data-ttu-id="3aee5-2161">可能有案例當<xref:System.Xml.XmlReader.ReadValueChunk%2A>傳回少於所要求的字元數目。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2161">There may be a case when <xref:System.Xml.XmlReader.ReadValueChunk%2A> returns less than the requested number of characters.</span></span> <span data-ttu-id="3aee5-2162">例如，如果您有 200 個字元長的值將 surrogate 字組 127 和 128 的位置，而且您呼叫<xref:System.Xml.XmlReader.ReadValueChunk%2A>128 個字元的緩衝區中，使用方法呼叫會傳回 127 個字元，而不是要求 128。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2162">For example, if you had a 200-character long value with a surrogate pair at positions 127 and 128 and you called <xref:System.Xml.XmlReader.ReadValueChunk%2A> with a 128-character buffer, the method call would return 127 characters instead of the requested 128.</span></span> <span data-ttu-id="3aee5-2163">Surrogate 字組則會傳回在下一個<xref:System.Xml.XmlReader.ReadValueChunk%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2163">The surrogate pair would then be returned in the next <xref:System.Xml.XmlReader.ReadValueChunk%2A> call.</span></span> <span data-ttu-id="3aee5-2164">在此情況下，<xref:System.Xml.XmlReader.ReadValueChunk%2A>未傳回要求的 128 個字元，因為這樣做，可能會導致結尾的緩衝區不完整的 surrogate 字組。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2164">In this case, <xref:System.Xml.XmlReader.ReadValueChunk%2A> did not return the requested 128 characters because doing so would have resulted in an incomplete surrogate pair at the end of the buffer.</span></span>  
  
 <span data-ttu-id="3aee5-2165">這個方法的非同步版本，請參閱<xref:System.Xml.XmlReader.ReadValueChunkAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2165">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadValueChunkAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2166">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2166">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-2167">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2167">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3aee5-2168">
            <paramref name="buffer" /> 值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2168">The <paramref name="buffer" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3aee5-2169">緩衝區索引或索引 + count 大於配置的緩衝區大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2169">The index into the buffer, or index + count is larger than the allocated buffer size.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3aee5-2170">
            <see cref="T:System.Xml.XmlReader" /> 實作不支援這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2170">The <see cref="T:System.Xml.XmlReader" /> implementation does not support this method.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="3aee5-2171">XML 資料格式不正確。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2171">The XML data is not well-formed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadValueChunkAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadValueChunkAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadValueChunkAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadValueChunkAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadValueChunkAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadValueChunkAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadValueChunkAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="xmlReader.ReadValueChunkAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3aee5-2172">做為寫入文字內容之緩衝區的字元陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2172">The array of characters that serves as the buffer to which the text contents are written.</span>
          </span>
          <span data-ttu-id="3aee5-2173">這個值不能是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2173">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="3aee5-2174">緩衝區位移位置<see cref="T:System.Xml.XmlReader" />可以開始複製結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2174">The offset within the buffer where the <see cref="T:System.Xml.XmlReader" /> can start to copy the results.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="3aee5-2175">要複製至緩衝區中的最大字元數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2175">The maximum number of characters to copy into the buffer.</span>
          </span>
          <span data-ttu-id="3aee5-2176">從這個方法傳回所複製的實際字元數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2176">The actual number of characters copied is returned from this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3aee5-2177">以非同步的方式讀取 XML 文件中內嵌之大量文字資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2177">Asynchronously reads large streams of text embedded in an XML document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-2178">讀入緩衝區的字元數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2178">The number of characters read into the buffer.</span>
          </span>
          <span data-ttu-id="3aee5-2179">當不再有文字內容時，會傳回零的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2179">The value zero is returned when there is no more text content.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-2180">這是非同步的<xref:System.Xml.XmlReader.ReadValueChunk%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2180">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadValueChunk%2A>, with the same functionality.</span></span> <span data-ttu-id="3aee5-2181">若要使用此方法，您必須設定<xref:System.Xml.XmlReaderSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2181">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2182">在未將 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlReader" /> 非同步方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2182">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="3aee5-2183">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2183">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveEntity">
      <MemberSignature Language="C#" Value="public abstract void ResolveEntity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResolveEntity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResolveEntity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResolveEntity();" />
      <MemberSignature Language="F#" Value="abstract member ResolveEntity : unit -&gt; unit" Usage="xmlReader.ResolveEntity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-2184">當在衍生類別中覆寫時，會解析實體參考<see langword="EntityReference" />節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2184">When overridden in a derived class, resolves the entity reference for <see langword="EntityReference" /> nodes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-2185">如果讀取器置於`EntityReference`節點 (`XmlNodeType.EntityReference`)，如果<xref:System.Xml.XmlReader.Read%2A>之後的呼叫此方法中，實體取代的文字會剖析。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2185">If the reader is positioned on an `EntityReference` node (`XmlNodeType.EntityReference`), if <xref:System.Xml.XmlReader.Read%2A> is called after calling this method, the entity replacement text is parsed.</span></span> <span data-ttu-id="3aee5-2186">實體取代的文字完成時，`EndEntity`節點會傳回關閉的實體參考的範圍。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2186">When the entity replacement text is finished, an `EndEntity` node is returned to close the entity reference scope.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3aee5-2187">之後呼叫這個方法，如果實體是組件的屬性值，您必須呼叫<xref:System.Xml.XmlReader.ReadAttributeValue%2A>逐步執行至實體。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2187">After calling this method, if the entity is part of an attribute value, you must call <xref:System.Xml.XmlReader.ReadAttributeValue%2A> to step into the entity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2188">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2188">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-2189">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2189">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.EntityHandling" />
        <altmember cref="P:System.Xml.XmlReader.CanResolveEntity" />
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaInfo : System.Xml.Schema.IXmlSchemaInfo" Usage="System.Xml.XmlReader.SchemaInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-2190">取得在結構描述驗證之後已指派給目前節點的結構描述資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2190">Gets the schema information that has been assigned to the current node as a result of schema validation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aee5-2191">
            <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> 物件，包含目前節點的結構描述資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2191">An <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> object containing the schema information for the current node.</span>
          </span>
          <span data-ttu-id="3aee5-2192">可以在項目、屬性或具有非 null <see cref="P:System.Xml.XmlReader.ValueType" /> (具型別值) 之文字節點上設定結構描述資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2192">Schema information can be set on elements, attributes, or on text nodes with a non-null <see cref="P:System.Xml.XmlReader.ValueType" /> (typed values).</span>
          </span>
          <span data-ttu-id="3aee5-2193">如果目前節點不屬於上述其中一個節點型別，或 <see langword="XmlReader" /> 執行個體不會報告結構描述資訊，則這個屬性會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2193">If the current node is not one of the above node types, or if the <see langword="XmlReader" /> instance does not report schema information, this property returns <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3aee5-2194">如果這個屬性是從 <see cref="T:System.Xml.XmlTextReader" /> 或 <see cref="T:System.Xml.XmlValidatingReader" /> 物件呼叫的，則這個屬性一定會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2194">If this property is called from an <see cref="T:System.Xml.XmlTextReader" /> or an <see cref="T:System.Xml.XmlValidatingReader" /> object, this property always returns <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3aee5-2195">這些 <see langword="XmlReader" /> 實作不會透過 <see langword="SchemaInfo" /> 屬性公開結構描述資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2195">These <see langword="XmlReader" /> implementations do not expose schema information through the <see langword="SchemaInfo" /> property.</span>
          </span>
          <span data-ttu-id="3aee5-2196">
            <block subset="none" type="note">
              <para> 如果您必須取得後結構描述驗證資訊集 (PSVI) 的項目，將讀取器項目的結尾標記，而不是開始標記。透過取得 PSVI<see langword="SchemaInfo" />讀取器的屬性。驗證透過建立的讀取器<see cref="Overload:System.Xml.XmlReader.Create" />具有<see cref="P:System.Xml.XmlReaderSettings.ValidationType" />屬性設定為<see cref="F:System.Xml.ValidationType.Schema" />讀取器定位於項目的結束標記上時，才有項目的完整 PSVI。  </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2196">
              <block subset="none" type="note">
                <para> If you have to get the post-schema-validation information set (PSVI) for an element, position the reader on the end tag of the element, rather than on the start tag. You get the PSVI through the <see langword="SchemaInfo" /> property of a reader. The validating reader that is created through <see cref="Overload:System.Xml.XmlReader.Create" /> with the <see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> property set to <see cref="F:System.Xml.ValidationType.Schema" /> has complete PSVI for an element only when the reader is positioned on the end tag of an element.  </para>
              </block>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-2197"><xref:System.Xml.Schema.IXmlSchemaInfo>介面會公開的後結構描述驗證 Infoset (PSVI) 相關聯的 XML 節點的子集。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2197">The <xref:System.Xml.Schema.IXmlSchemaInfo> interface exposes a subset of the Post Schema Validation Infoset (PSVI) associated with an XML node.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2198">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2198">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-2199">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2199">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlReaderSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlReaderSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Settings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Settings As XmlReaderSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlReaderSettings ^ Settings { System::Xml::XmlReaderSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Settings : System.Xml.XmlReaderSettings" Usage="System.Xml.XmlReader.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReaderSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-2200">取得 <see cref="T:System.Xml.XmlReaderSettings" /> 物件，用於建立這個 <see cref="T:System.Xml.XmlReader" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2200">Gets the <see cref="T:System.Xml.XmlReaderSettings" /> object used to create this <see cref="T:System.Xml.XmlReader" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aee5-2201">
            <see cref="T:System.Xml.XmlReaderSettings" /> 物件，用於建立這個讀取器執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2201">The <see cref="T:System.Xml.XmlReaderSettings" /> object used to create this reader instance.</span>
          </span>
          <span data-ttu-id="3aee5-2202">如果未使用 <see cref="Overload:System.Xml.XmlReader.Create" /> 方法建立這個讀取器，則這個屬性會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2202">If this reader was not created using the <see cref="Overload:System.Xml.XmlReader.Create" /> method, this property returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3aee5-2203"><xref:System.Xml.XmlReaderSettings>物件可以包含機密資訊，例如使用者認證。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2203">The <xref:System.Xml.XmlReaderSettings> object can contain sensitive information such as user credentials.</span></span> <span data-ttu-id="3aee5-2204">應用程式必須非常小心，當快取此物件，或將它傳遞到另一個元件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2204">Applications must be careful when caching this object or passing it to another component.</span></span>  
  
 <span data-ttu-id="3aee5-2205"><xref:System.Xml.XmlReaderSettings>類別用來指定要建立的讀取器執行個體上支援的功能集。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2205">The <xref:System.Xml.XmlReaderSettings> class is used to specify the set of features to support on the created reader instance.</span></span> <span data-ttu-id="3aee5-2206"><xref:System.Xml.XmlReaderSettings>無法修改這個屬性所傳回的物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2206">The <xref:System.Xml.XmlReaderSettings> object returned by this property cannot be modified.</span></span> <span data-ttu-id="3aee5-2207">任何嘗試變更個別的設定會造成擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2207">Any attempt to change individual settings results in an exception being thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2208">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2208">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-2209">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2209">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public virtual void Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Skip ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Skip();" />
      <MemberSignature Language="F#" Value="abstract member Skip : unit -&gt; unit&#xA;override this.Skip : unit -&gt; unit" Usage="xmlReader.Skip " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-2210">略過目前節點的子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2210">Skips the children of the current node.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-2211">在下列 XML 程式碼中輸入 是否讀取器位於`<a>`節點，或其任意屬性，呼叫`Skip`位置的讀取器`<b>`節點。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2211">In the following XML input if the reader is positioned on the `<a>` node or any of its attributes, calling `Skip` positions the reader to the `<b>` node.</span></span>  
  
 <span data-ttu-id="3aee5-2212">如果讀取器定位於分葉節點上已 (例如`<x>`節點或文字節點`abc`)，則呼叫`Skip`等同於呼叫<xref:System.Xml.XmlReader.Read%2A>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2212">If the reader is positioned on a leaf node already (such as the `<x>` node or the text node `abc`), calling `Skip` is the same as calling <xref:System.Xml.XmlReader.Read%2A>.</span></span>  
  
```xml  
<a name="bob" age="123">  
 <x/>abc<y/>  
</a>  
<b>  
...  
</b>  
```  
  
 <span data-ttu-id="3aee5-2213">這個方法會檢查語式正確的 XML。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2213">This method checks for well-formed XML.</span></span>  
  
 <span data-ttu-id="3aee5-2214">如果讀取器<xref:System.Xml.XmlValidatingReader>，這個方法也會驗證已略過的內容。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2214">If the reader is an <xref:System.Xml.XmlValidatingReader>, this method also validates the skipped content.</span></span>  
  
 <span data-ttu-id="3aee5-2215">`XmlReader`實作會判定是否`Skip`方法會展開外部實體。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2215">The `XmlReader` implementation determines whether or not the `Skip` method will expand external entities.</span></span> <span data-ttu-id="3aee5-2216">下表描述各種類型是否會展開外部的實體`XmlReader`物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2216">The following table describes whether the external entities are expanded for the various types of `XmlReader` objects.</span></span>  
  
|<span data-ttu-id="3aee5-2217">XmlReader 的型別</span><span class="sxs-lookup"><span data-stu-id="3aee5-2217">Type of XmlReader</span></span>|<span data-ttu-id="3aee5-2218">展開外部的實體</span><span class="sxs-lookup"><span data-stu-id="3aee5-2218">Expands external entities</span></span>|  
|-----------------------|-------------------------------|  
|<xref:System.Xml.XmlTextReader>|<span data-ttu-id="3aee5-2219">否。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2219">No.</span></span>|  
|<span data-ttu-id="3aee5-2220"><xref:System.Xml.XmlReader> 所建立的執行個體<xref:System.Xml.XmlReader.Create%2A>讀取的文字資料的方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2220"><xref:System.Xml.XmlReader> instance created by the <xref:System.Xml.XmlReader.Create%2A> method that is reading text data.</span></span>|<span data-ttu-id="3aee5-2221">否。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2221">No.</span></span>|  
|<span data-ttu-id="3aee5-2222"><xref:System.Xml.XmlReader> 所建立的執行個體<xref:System.Xml.XmlReader.Create%2A>讀取二進位資料的方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2222"><xref:System.Xml.XmlReader> instance created by the <xref:System.Xml.XmlReader.Create%2A> method that is reading binary data.</span></span>|<span data-ttu-id="3aee5-2223">不適用。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2223">Not applicable.</span></span>|  
|<span data-ttu-id="3aee5-2224">結構描述，驗證<xref:System.Xml.XmlReader>所建立的執行個體<xref:System.Xml.XmlReader.Create%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2224">A schema validating <xref:System.Xml.XmlReader> instance created by the <xref:System.Xml.XmlReader.Create%2A> method.</span></span>|<span data-ttu-id="3aee5-2225">可以。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2225">Yes.</span></span>|  
|<xref:System.Xml.XmlValidatingReader>|<span data-ttu-id="3aee5-2226">可以。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2226">Yes.</span></span>|  
|<span data-ttu-id="3aee5-2227"><xref:System.Xml.XmlReader> 所傳回的執行個體<xref:System.Xml.XPath.XPathNavigator>物件。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2227"><xref:System.Xml.XmlReader> instance returned by a <xref:System.Xml.XPath.XPathNavigator> object.</span></span>|<span data-ttu-id="3aee5-2228">不適用。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2228">Not applicable.</span></span>|  
|<xref:System.Xml.XmlNodeReader>|<span data-ttu-id="3aee5-2229">否。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2229">No.</span></span>|  
|<span data-ttu-id="3aee5-2230"><xref:System.Xml.XmlReader> 包裝另一個執行個體<xref:System.Xml.XmlReader>執行個體。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2230"><xref:System.Xml.XmlReader> instance wrapped around another <xref:System.Xml.XmlReader> instance.</span></span>|<span data-ttu-id="3aee5-2231">取決於基礎實作<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2231">Depends on the implementation of the underlying <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="3aee5-2232">(`Skip`方法的基礎<xref:System.Xml.XmlReader>稱為)。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2232">(The `Skip` method on the underlying <xref:System.Xml.XmlReader> is called).</span></span>|  
  
 <span data-ttu-id="3aee5-2233">這個方法的非同步版本，請參閱<xref:System.Xml.XmlReader.SkipAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2233">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.SkipAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-2234">下列範例會剖析 XML 檔案的第二個書籍節點上啟動。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2234">The following example parses an XML file starting on the second book node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#14](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#14)]
 [!code-vb[XmlReaderBasic#14](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#14)]  
  
 <span data-ttu-id="3aee5-2235">此範例會使用該檔案，`2books.xml`作為輸入。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2235">The example uses the file, `2books.xml`, as input.</span></span>  
  
 [!code-xml[XML_Core_Files#7](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/2books.xml#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2236">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2236">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-2237">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2237">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SkipAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SkipAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SkipAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.SkipAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SkipAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SkipAsync();" />
      <MemberSignature Language="F#" Value="abstract member SkipAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SkipAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlReader.SkipAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-2238">以非同步的方式略過目前節點的子節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2238">Asynchronously skips the children of the current node.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3aee5-2239">目前節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2239">The current node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-2240">這是非同步的<xref:System.Xml.XmlReader.Skip%2A>，使用相同的功能。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2240">This is the asynchronous version of <xref:System.Xml.XmlReader.Skip%2A>, with the same functionality.</span></span> <span data-ttu-id="3aee5-2241">若要使用此方法，您必須設定<xref:System.Xml.XmlReaderSettings.Async%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2241">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2242">在未將 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 旗標設為 <see langword="true" />的情況下呼叫了 <see cref="T:System.Xml.XmlReader" /> 非同步方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2242">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="3aee5-2243">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「如果您想要使用非同步方法，請將 XmlReaderSettings.Async 設為 true」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2243">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public abstract string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Xml.XmlReader.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-2244">在衍生類別中覆寫時，取得目前節點的文字值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2244">When overridden in a derived class, gets the text value of the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aee5-2245">傳回值需視節點的 <see cref="P:System.Xml.XmlReader.NodeType" /> 而定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2245">The value returned depends on the <see cref="P:System.Xml.XmlReader.NodeType" /> of the node.</span>
          </span>
          <span data-ttu-id="3aee5-2246">下表列出具有傳回值的節點類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2246">The following table lists node types that have a value to return.</span>
          </span>
          <span data-ttu-id="3aee5-2247">有其他節點類型都會傳回 <see langword="String.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2247">All other node types return <see langword="String.Empty" />.</span>
          </span>
          <span data-ttu-id="3aee5-2248">
            <list type="table">
              <listheader>
                <term> 節點型別</term>
                <description>值</description>
              </listheader>
              <item>
                <term>
                  <see langword="Attribute" />
                </term>
                <description>屬性的值。</description>
              </item>
              <item>
                <term>
                  <see langword="CDATA" />
                </term>
                <description> CDATA 區段的內容。</description>
              </item>
              <item>
                <term>
                  <see langword="Comment" />
                </term>
                <description> 註解的內容。</description>
              </item>
              <item>
                <term>
                  <see langword="DocumentType" />
                </term>
                <description> 內部子集。</description>
              </item>
              <item>
                <term>
                  <see langword="ProcessingInstruction" />
                </term>
                <description> 整個內容，目標除外。</description>
              </item>
              <item>
                <term>
                  <see langword="SignificantWhitespace" />
                </term>
                <description> 在混合內容模型中標記間的泛空白字元。</description>
              </item>
              <item>
                <term>
                  <see langword="Text" />
                </term>
                <description> 文字節點的內容。</description>
              </item>
              <item>
                <term>
                  <see langword="Whitespace" />
                </term>
                <description> 標記間的泛空白字元。</description>
              </item>
              <item>
                <term>
                  <see langword="XmlDeclaration" />
                </term>
                <description> 宣告的內容。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2248">
              <list type="table">
                <listheader>
                  <term> Node type  </term>
                  <description> Value  </description>
                </listheader>
                <item>
                  <term>
                    <see langword="Attribute" />
                  </term>
                  <description> The value of the attribute.  </description>
                </item>
                <item>
                  <term>
                    <see langword="CDATA" />
                  </term>
                  <description> The content of the CDATA section.  </description>
                </item>
                <item>
                  <term>
                    <see langword="Comment" />
                  </term>
                  <description> The content of the comment.  </description>
                </item>
                <item>
                  <term>
                    <see langword="DocumentType" />
                  </term>
                  <description> The internal subset.  </description>
                </item>
                <item>
                  <term>
                    <see langword="ProcessingInstruction" />
                  </term>
                  <description> The entire content, excluding the target.  </description>
                </item>
                <item>
                  <term>
                    <see langword="SignificantWhitespace" />
                  </term>
                  <description> The white space between markup in a mixed content model.  </description>
                </item>
                <item>
                  <term>
                    <see langword="Text" />
                  </term>
                  <description> The content of the text node.  </description>
                </item>
                <item>
                  <term>
                    <see langword="Whitespace" />
                  </term>
                  <description> The white space between markup.  </description>
                </item>
                <item>
                  <term>
                    <see langword="XmlDeclaration" />
                  </term>
                  <description> The content of the declaration.  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-2249">這個屬性的非同步版本，請參閱<xref:System.Xml.XmlReader.GetValueAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2249">For the asynchronous version of this property, see the <xref:System.Xml.XmlReader.GetValueAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-2250">下列範例會讀取 XML 檔案，並顯示每個節點。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2250">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-csharp[XmlReaderBasic#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#8)]
 [!code-vb[XmlReaderBasic#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#8)]  
  
 <span data-ttu-id="3aee5-2251">此範例會使用`items.xml`檔案。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2251">The sample uses the `items.xml` file.</span></span>  
  
 [!code-xml[XML_Core_Files#2](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/items.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2252">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2252">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-2253">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2253">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public virtual Type ValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ValueType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueType : Type" Usage="System.Xml.XmlReader.ValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-2254">取得目前節點的 Common Language Runtime (CLR) 類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2254">Gets The Common Language Runtime (CLR) type for the current node.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aee5-2255">CLR 類型，對應至節點的具類型值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2255">The CLR type that corresponds to the typed value of the node.</span>
          </span>
          <span data-ttu-id="3aee5-2256">預設值為 <see langword="System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2256">The default is <see langword="System.String" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-2257">請參閱[System.Xml 類別中的型別支援](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)如需預設對應的清單。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2257">See [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md) for a list of the default mappings.</span></span>  
  
 <span data-ttu-id="3aee5-2258">類型的元素`xs:int`已經`ValueType`的`System.Int32`預設。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2258">An element of type `xs:int` has a `ValueType` of `System.Int32` by default.</span></span> <span data-ttu-id="3aee5-2259">不過，`ValueType`可能是其中一個有效型別可以對應至`xs:int`，例如`System.Int16`或`System.Double`。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2259">However, the `ValueType` could be one of the valid types that can be mapped to `xs:int`, such as `System.Int16` or `System.Double`.</span></span>  
  
 <span data-ttu-id="3aee5-2260">如果節點是不具類型，或如果該節點是項目包含混合的內容，節點的值會對應到`System.String`型別。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2260">If a node is un-typed, or if the node is an element that contains mixed content, the node value is mapped to the `System.String` type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2261">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2261">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-2262">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2262">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="3aee5-2263">
            <para>實作者必須提供<see langword="ValueType" />針對每個節點，即使只是<see langword="System.String" />型別。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2263">
              <para>Implementers must provide a <see langword="ValueType" /> for every node, even if it is only the <see langword="System.String" /> type.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public virtual string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlReader.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-2264">當在衍生類別中覆寫時，取得目前<see langword="xml:lang" />範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2264">When overridden in a derived class, gets the current <see langword="xml:lang" /> scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aee5-2265">目前的 <see langword="xml:lang" /> 範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2265">The current <see langword="xml:lang" /> scope.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aee5-2266">這個屬性代表`xml:lang`內目前的節點所在的範圍。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2266">This property represents the `xml:lang` scope within which the current node resides.</span></span> <span data-ttu-id="3aee5-2267">例如，以下是使用 XML 片段`xml:lang`設為 英文 （美國） 的根項目：</span><span class="sxs-lookup"><span data-stu-id="3aee5-2267">For example, here is an XML fragment with `xml:lang` set to US English in the root element:</span></span>  
  
```xml  
<root xml:lang="en-us">   
<name>Fred</name>   
</root>   
```  
  
 <span data-ttu-id="3aee5-2268">當讀取器位於`name`項目，您可以使用這個屬性來尋找它位於範圍內的美式英文`xml:lang`屬性。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2268">When the reader is positioned on the `name` element, you can use this property to find that it is in the scope of a US English `xml:lang` attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3aee5-2269">請參閱<xref:System.Xml.XmlTextReader.XmlLang%2A?displayProperty=nameWithType>如使用這個屬性的範例。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2269">See <xref:System.Xml.XmlTextReader.XmlLang%2A?displayProperty=nameWithType> for an example of using this property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2270">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2270">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-2271">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2271">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlReader.XmlSpace" />
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlReader.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3aee5-2272">當在衍生類別中覆寫時，取得目前<see langword="xml:space" />範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2272">When overridden in a derived class, gets the current <see langword="xml:space" /> scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3aee5-2273">其中一個 <see cref="T:System.Xml.XmlSpace" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2273">One of the <see cref="T:System.Xml.XmlSpace" /> values.</span>
          </span>
          <span data-ttu-id="3aee5-2274">如果 <see langword="xml:space" /> 範圍不存在，這個屬性預設值為 <see langword="XmlSpace.None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2274">If no <see langword="xml:space" /> scope exists, this property defaults to <see langword="XmlSpace.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3aee5-2275">請參閱<xref:System.Xml.XmlTextReader.XmlSpace%2A>(在`XmlTextReader`類別) 如需使用這個屬性的範例。</span><span class="sxs-lookup"><span data-stu-id="3aee5-2275">See <xref:System.Xml.XmlTextReader.XmlSpace%2A> (in the `XmlTextReader` class) for an example using this property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3aee5-2276">在先前的非同步作業完成前呼叫了 <see cref="T:System.Xml.XmlReader" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2276">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span>
          </span>
          <span data-ttu-id="3aee5-2277">在此情況下，會擲回 <see cref="T:System.InvalidOperationException" /> 與「非同步作業已經在進行中」的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3aee5-2277">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlReader.XmlLang" />
      </Docs>
    </Member>
  </Members>
</Type>