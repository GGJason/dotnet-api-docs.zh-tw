<Type Name="Task&lt;TResult&gt;" FullName="System.Threading.Tasks.Task&lt;TResult&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9fd79f3ec26ef17d5304934fdfd6ca0f8043ce7d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36606818" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Task&lt;TResult&gt; : System.Threading.Tasks.Task" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Task`1&lt;TResult&gt; extends System.Threading.Tasks.Task" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Task`1" />
  <TypeSignature Language="VB.NET" Value="Public Class Task(Of TResult)&#xA;Inherits Task" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TResult&gt;&#xA;public ref class Task : System::Threading::Tasks::Task" />
  <TypeSignature Language="F#" Value="type Task&lt;'Result&gt; = class&#xA;    inherit Task" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Threading.Tasks.Task</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Id = {Id}, Status = {Status}, Method = {DebuggerDisplayMethodDescription}, Result = {DebuggerDisplayResultDescription}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Threading.Tasks.SystemThreadingTasks_FutureDebugView`1))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TResult">
      <span data-ttu-id="040df-101">這個 <see cref="T:System.Threading.Tasks.Task`1" /> 所產生之結果的類型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="040df-101">The type of the result produced by this <see cref="T:System.Threading.Tasks.Task`1" />.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="040df-102">Represents an asynchronous operation that can return a value.</span>
      <span class="sxs-lookup">
        <span data-stu-id="040df-102">Represents an asynchronous operation that can return a value.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-103"><xref:System.Threading.Tasks.Task%601>類別的代表單一作業，這通常是傳回值，並以非同步方式執行。</span><span class="sxs-lookup"><span data-stu-id="040df-103">The <xref:System.Threading.Tasks.Task%601> class represents a single operation that returns a value and that usually executes asynchronously.</span></span> <span data-ttu-id="040df-104"><xref:System.Threading.Tasks.Task%601> 物件是其中一個的中央元件[工作架構非同步模式](~/docs/standard/asynchronous-programming-patterns/task-based-asynchronous-pattern-tap.md)首度引進.NET Framework 4 中。</span><span class="sxs-lookup"><span data-stu-id="040df-104"><xref:System.Threading.Tasks.Task%601> objects are one of the central components of the [task-based asynchronous pattern](~/docs/standard/asynchronous-programming-patterns/task-based-asynchronous-pattern-tap.md) first introduced in the .NET Framework 4.</span></span> <span data-ttu-id="040df-105">因為工作所執行<xref:System.Threading.Tasks.Task%601>物件通常是以非同步方式執行的執行緒集區執行緒上而不是以同步方式主應用程式執行緒，您可以使用<xref:System.Threading.Tasks.Task.Status%2A>屬性，並將<xref:System.Threading.Tasks.Task.IsCanceled%2A>， <xref:System.Threading.Tasks.Task.IsCompleted%2A>，和<xref:System.Threading.Tasks.Task.IsFaulted%2A>屬性，以判斷工作的狀態。</span><span class="sxs-lookup"><span data-stu-id="040df-105">Because the work performed by a <xref:System.Threading.Tasks.Task%601> object typically executes asynchronously on a thread pool thread rather than synchronously on the main application thread, you can use the <xref:System.Threading.Tasks.Task.Status%2A> property, as well as the <xref:System.Threading.Tasks.Task.IsCanceled%2A>, <xref:System.Threading.Tasks.Task.IsCompleted%2A>, and <xref:System.Threading.Tasks.Task.IsFaulted%2A> properties, to determine the   state of a task.</span></span> <span data-ttu-id="040df-106">大多數情況下，lambda 運算式用來指定的工作是將執行的工作。</span><span class="sxs-lookup"><span data-stu-id="040df-106">Most commonly, a lambda expression is used to specify the work that the task is to perform.</span></span>  
  
 <span data-ttu-id="040df-107"><xref:System.Threading.Tasks.Task%601> 可能在各種不同的方式建立執行個體。</span><span class="sxs-lookup"><span data-stu-id="040df-107"><xref:System.Threading.Tasks.Task%601> instances may be created in a variety of ways.</span></span> <span data-ttu-id="040df-108">最常見的方法，從開始提供[!INCLUDE[net_v45](~/includes/net-v45-md.md)]，是呼叫靜態<xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%29?displayProperty=nameWithType>或<xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="040df-108">The most common approach, which is available starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], is to call the static <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%29?displayProperty=nameWithType> or <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="040df-109">這些方法會提供簡單的方式來啟動工作是使用預設值，而不取得額外的參數。</span><span class="sxs-lookup"><span data-stu-id="040df-109">These methods provide a simple way to start a task by using default values and without acquiring additional parameters.</span></span> <span data-ttu-id="040df-110">下列範例會使用<xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%29?displayProperty=nameWithType>方法啟動的工作，執行迴圈，並接著會顯示迴圈反覆項目數目：</span><span class="sxs-lookup"><span data-stu-id="040df-110">The following example uses the <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%29?displayProperty=nameWithType> method to start a task that loops and then displays the number of loop iterations:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task\`1#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task`1/cs/run1.cs#6)]
 [!code-vb[System.Threading.Tasks.Task\`1#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task`1/vb/run1.vb#6)]  
  
 <span data-ttu-id="040df-111">或者，以及最常見的方式來啟動工作以[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]，是呼叫靜態<xref:System.Threading.Tasks.TaskFactory.StartNew%2A?displayProperty=nameWithType>或<xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="040df-111">An alternative, and the most common way to start a task in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], is to call the static <xref:System.Threading.Tasks.TaskFactory.StartNew%2A?displayProperty=nameWithType> or <xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="040df-112"><xref:System.Threading.Tasks.Task.Factory%2A?displayProperty=nameWithType>屬性會傳回<xref:System.Threading.Tasks.TaskFactory>物件，而<xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType>屬性會傳回<xref:System.Threading.Tasks.TaskFactory%601>物件。</span><span class="sxs-lookup"><span data-stu-id="040df-112">The <xref:System.Threading.Tasks.Task.Factory%2A?displayProperty=nameWithType> property returns a <xref:System.Threading.Tasks.TaskFactory> object, and the <xref:System.Threading.Tasks.Task%601.Factory%2A?displayProperty=nameWithType> property returns a <xref:System.Threading.Tasks.TaskFactory%601> object.</span></span> <span data-ttu-id="040df-113">多載其`StartNew`方法可讓您傳遞引數，定義工作建立選項，並指定工作排程器。</span><span class="sxs-lookup"><span data-stu-id="040df-113">Overloads of their `StartNew` method let you pass arguments, define task creation options, and specify a task scheduler.</span></span> <span data-ttu-id="040df-114">下列範例會使用<xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7B%600%7D%29?displayProperty=nameWithType>方法啟動工作。</span><span class="sxs-lookup"><span data-stu-id="040df-114">The following example uses the <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7B%600%7D%29?displayProperty=nameWithType> method to start a task.</span></span> <span data-ttu-id="040df-115">它在功能上相當於前一個範例中的程式碼。</span><span class="sxs-lookup"><span data-stu-id="040df-115">It is functionally equivalent to the code in the previous example.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task\`1#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task`1/cs/startnew1.cs#7)]
 [!code-vb[System.Threading.Tasks.Task\`1#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task`1/vb/startnew1.vb#7)]  
  
 <span data-ttu-id="040df-116">如需更完整的範例，請參閱[以工作為基礎的非同步程式設計](~/docs/standard/parallel-programming/task-based-asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="040df-116">For more complete examples, see [Task-based Asynchronous Programming](~/docs/standard/parallel-programming/task-based-asynchronous-programming.md).</span></span>  
  
 <span data-ttu-id="040df-117"><xref:System.Threading.Tasks.Task%601>類別也會提供建構函式所初始化的工作，但的未排程它執行。</span><span class="sxs-lookup"><span data-stu-id="040df-117">The <xref:System.Threading.Tasks.Task%601> class also provides constructors that initialize the task but that do not schedule it for execution.</span></span> <span data-ttu-id="040df-118">基於效能考量，<xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType>和`Task.Factory.StartNew`方法是建立和排定計算的工作的慣用的機制，但是其中必須以建立工作和排程的情況下，可能會使用建構函式，而工作的<xref:System.Threading.Tasks.Task.Start%2A>方法可能會再用來排定在稍後執行此工作。</span><span class="sxs-lookup"><span data-stu-id="040df-118">For performance reasons, the <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> and `Task.Factory.StartNew` methods are the preferred mechanisms for creating and scheduling computational tasks, but for scenarios where task creation and scheduling must be separated, the constructors may be used, and the task's <xref:System.Threading.Tasks.Task.Start%2A> method may then be used to schedule the task for execution at a later time.</span></span>  
  
 <span data-ttu-id="040df-119">從桌面應用程式開始目標[!INCLUDE[net_v46](~/includes/net-v46-md.md)]，建立與叫用工作之執行緒的文化特性會成為在執行緒內容的一部分。</span><span class="sxs-lookup"><span data-stu-id="040df-119">Starting with desktop apps that target the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], the culture of the thread that creates and invokes a task becomes part of the thread's context.</span></span> <span data-ttu-id="040df-120">也就是工作的工作所執行之執行緒的目前文化特性，不論目前的文化特性是工作的呼叫執行緒的文化特性。</span><span class="sxs-lookup"><span data-stu-id="040df-120">That is, regardless of the current culture of the thread on which the task executes, the current culture of the task is the culture of the calling thread.</span></span> <span data-ttu-id="040df-121">之前的.NET Framework 版本為目標的應用程式[!INCLUDE[net_v46](~/includes/net-v46-md.md)]，工作的文化特性為工作所執行之執行緒的文化特性。</span><span class="sxs-lookup"><span data-stu-id="040df-121">For apps that target versions of the .NET Framework prior to the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], the culture of the task is the culture of the thread on which the task executes.</span></span> <span data-ttu-id="040df-122">如需詳細資訊，請參閱中的 < 文化特性和以工作為基礎的非同步作業 」 一節<xref:System.Globalization.CultureInfo>主題。</span><span class="sxs-lookup"><span data-stu-id="040df-122">For more information, see the "Culture and task-based asynchronous operations" section in the <xref:System.Globalization.CultureInfo> topic.</span></span> <span data-ttu-id="040df-123">請注意，市集應用程式遵循 Windows 執行階段中設定和取得的預設文化特性。</span><span class="sxs-lookup"><span data-stu-id="040df-123">Note that Store apps follow the Windows Runtime in setting and getting the default culture.</span></span>  
  
<span data-ttu-id="040df-124">不會傳回值的作業，您使用<xref:System.Threading.Tasks.Task>類別。</span><span class="sxs-lookup"><span data-stu-id="040df-124">For operations that do not return a value, you use the <xref:System.Threading.Tasks.Task> class.</span></span> <span data-ttu-id="040df-125">如果您正在開發更輕量工作是實值類型，而不是參考類型，使用 C# 7，使用<xref:System.Threading.Tasks.ValueTask%601?displayProperty=nameWithType>結構; 它支援 C# 7。</span><span class="sxs-lookup"><span data-stu-id="040df-125">If you're developing with C# 7, for a more lightweight task that is a value type rather than a reference type, use the <xref:System.Threading.Tasks.ValueTask%601?displayProperty=nameWithType> structure; it is supported starting with C# 7.</span></span> 
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="040df-126">所有成員<see cref="T:System.Threading.Tasks.Task`1" />，除了<see cref="M:System.Threading.Tasks.Task.Dispose" />、 是安全執行緒，且可能會同時使用從多個執行緒。</span>
      <span class="sxs-lookup">
        <span data-stu-id="040df-126">All members of <see cref="T:System.Threading.Tasks.Task`1" />, except for <see cref="M:System.Threading.Tasks.Task.Dispose" />, are thread-safe and may be used from multiple threads concurrently.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Threading.Tasks.Task" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="040df-127">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-127">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Task (Func&lt;TResult&gt; function);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;!TResult&gt; function) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.#ctor(System.Func{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (function As Func(Of TResult))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Task(Func&lt;TResult&gt; ^ function);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Task&lt;'Result&gt; : Func&lt;'Result&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="new System.Threading.Tasks.Task&lt;'Result&gt; function" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="040df-128">The delegate that represents the code to execute in the task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-128">The delegate that represents the code to execute in the task.</span>
          </span>
          <span data-ttu-id="040df-129">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-129">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-130">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-130">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-131">而不是呼叫這個建構函式，最常見的方式，來具現化<xref:System.Threading.Tasks.Task%601>物件和啟動工作是藉由呼叫靜態<xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%29?displayProperty=nameWithType>和<xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7B%600%7D%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="040df-131">Rather than calling this constructor, the most common way to instantiate a <xref:System.Threading.Tasks.Task%601> object and launch a task is by calling the static <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%29?displayProperty=nameWithType> and <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7B%600%7D%29?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="040df-132">這個建構函式所提供的唯一優點是它可讓物件具現化，分隔從工作引動過程。</span><span class="sxs-lookup"><span data-stu-id="040df-132">The only advantage offered by this constructor is that it allows object instantiation to be separated from task invocation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="040df-133">下列範例會計算文字在文字檔案，代表已發行活頁簿中的近似數目。</span><span class="sxs-lookup"><span data-stu-id="040df-133">The following example counts the approximate number of words in text files that represent published books.</span></span> <span data-ttu-id="040df-134">每項工作負責開啟檔案，以非同步的方式，讀取其完整內容，而且使用規則運算式的計算字數統計。</span><span class="sxs-lookup"><span data-stu-id="040df-134">Each task is responsible for opening a file, reading its entire contents asynchronously, and calculating the word count by using a regular expression.</span></span> <span data-ttu-id="040df-135"><xref:System.Threading.Tasks.Task.WaitAll%28System.Threading.Tasks.Task%5B%5D%29?displayProperty=nameWithType>呼叫方法，請確定所有工作已都完成之後，主控台中顯示每本書的字數。</span><span class="sxs-lookup"><span data-stu-id="040df-135">The <xref:System.Threading.Tasks.Task.WaitAll%28System.Threading.Tasks.Task%5B%5D%29?displayProperty=nameWithType> method is called to ensure that all tasks have completed before displaying the word count of each book to the console.</span></span>  
  
 <span data-ttu-id="040df-136">物件具現化會與在此範例中的物件執行分開，如此範例可確保每個檔案存在。</span><span class="sxs-lookup"><span data-stu-id="040df-136">Object instantiation is separated from object execution in this example so that the example can ensure that each file exists.</span></span> <span data-ttu-id="040df-137">如果沒有，它會顯示遺漏之檔案的名稱。</span><span class="sxs-lookup"><span data-stu-id="040df-137">If they do not,  it displays the name of the missing file.</span></span> <span data-ttu-id="040df-138">否則，它會呼叫<xref:System.Threading.Tasks.Task.Start%2A?displayProperty=nameWithType>啟動每項工作的方法。</span><span class="sxs-lookup"><span data-stu-id="040df-138">Otherwise, it calls the <xref:System.Threading.Tasks.Task.Start%2A?displayProperty=nameWithType> method to launch each task.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task.ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task.ctor/cs/run3.cs#2)]
 [!code-vb[System.Threading.Tasks.Task.ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task.ctor/vb/run3.vb#2)]  
  
 <span data-ttu-id="040df-139">規則運算式模式`\p{P}*\s+`比對零個、 一個或多個標點符號字元後面接著一個或多個空格字元。</span><span class="sxs-lookup"><span data-stu-id="040df-139">The regular expression pattern `\p{P}*\s+` matches zero, one, or more punctuation characters followed by one or more whitespace characters.</span></span> <span data-ttu-id="040df-140">它會假設的相符項目總數等於大約字數。</span><span class="sxs-lookup"><span data-stu-id="040df-140">It assumes that the total number of matches equals the approximate word count.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="040df-141">The <paramref name="function" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-141">The <paramref name="function" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Task (Func&lt;object,TResult&gt; function, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;object, !TResult&gt; function, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (function As Func(Of Object, TResult), state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Task(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Task&lt;'Result&gt; : Func&lt;obj, 'Result&gt; * obj -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="new System.Threading.Tasks.Task&lt;'Result&gt; (function, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="040df-142">The delegate that represents the code to execute in the task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-142">The delegate that represents the code to execute in the task.</span>
          </span>
          <span data-ttu-id="040df-143">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-143">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="040df-144">An object representing data to be used by the action.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-144">An object representing data to be used by the action.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-145">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified function and state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-145">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified function and state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-146">而不是呼叫這個建構函式，最常見的方式，來具現化<xref:System.Threading.Tasks.Task%601>物件和啟動工作是藉由呼叫靜態<xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7BSystem.Object%2C%600%7D%2CSystem.Object%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="040df-146">Rather than calling this constructor, the most common way to instantiate a <xref:System.Threading.Tasks.Task%601> object and launch a task is by calling the static <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7BSystem.Object%2C%600%7D%2CSystem.Object%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="040df-147">這個建構函式所提供的唯一優點是它可讓物件具現化，分隔從工作引動過程。</span><span class="sxs-lookup"><span data-stu-id="040df-147">The only advantage offered by this constructor is that it allows object instantiation to be separated from task invocation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="040df-148">The <paramref name="function" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-148">The <paramref name="function" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Task (Func&lt;TResult&gt; function, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;!TResult&gt; function, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Task(Func&lt;TResult&gt; ^ function, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Task&lt;'Result&gt; : Func&lt;'Result&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="new System.Threading.Tasks.Task&lt;'Result&gt; (function, cancellationToken)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="040df-149">The delegate that represents the code to execute in the task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-149">The delegate that represents the code to execute in the task.</span>
          </span>
          <span data-ttu-id="040df-150">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-150">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="040df-151">The <see cref="T:System.Threading.CancellationToken" /> to be assigned to this task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-151">The <see cref="T:System.Threading.CancellationToken" /> to be assigned to this task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-152">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-152">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-153">而不是呼叫這個建構函式，最常見的方式，來具現化<xref:System.Threading.Tasks.Task%601>物件和啟動工作是藉由呼叫靜態<xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType>和<xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7B%600%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="040df-153">Rather than calling this constructor, the most common way to instantiate a <xref:System.Threading.Tasks.Task%601> object and launch a task is by calling the static <xref:System.Threading.Tasks.Task.Run%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> and <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7B%600%7D%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="040df-154">這個建構函式所提供的唯一優點是它可讓物件具現化，分隔從工作引動過程。</span><span class="sxs-lookup"><span data-stu-id="040df-154">The only advantage offered by this constructor is that it allows object instantiation to be separated from task invocation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="040df-155">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-155">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="040df-156">The <paramref name="function" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-156">The <paramref name="function" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Task (Func&lt;TResult&gt; function, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;!TResult&gt; function, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (function As Func(Of TResult), creationOptions As TaskCreationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Task(Func&lt;TResult&gt; ^ function, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Task&lt;'Result&gt; : Func&lt;'Result&gt; * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="new System.Threading.Tasks.Task&lt;'Result&gt; (function, creationOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="040df-157">The delegate that represents the code to execute in the task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-157">The delegate that represents the code to execute in the task.</span>
          </span>
          <span data-ttu-id="040df-158">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-158">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="040df-159">The <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> used to customize the task's behavior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-159">The <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> used to customize the task's behavior.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-160">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified function and creation options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-160">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified function and creation options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-161">而不是呼叫這個建構函式，最常見的方式，來具現化<xref:System.Threading.Tasks.Task%601>物件和啟動工作是藉由呼叫靜態<xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7B%600%7D%2CSystem.Threading.Tasks.TaskCreationOptions%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="040df-161">Rather than calling this constructor, the most common way to instantiate a <xref:System.Threading.Tasks.Task%601> object and launch a task is by calling the static <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7B%600%7D%2CSystem.Threading.Tasks.TaskCreationOptions%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="040df-162">這個建構函式所提供的唯一優點是它可讓物件具現化，分隔從工作引動過程。</span><span class="sxs-lookup"><span data-stu-id="040df-162">The only advantage offered by this constructor is that it allows object instantiation to be separated from task invocation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="040df-163">The <paramref name="creationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskCreationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-163">The <paramref name="creationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskCreationOptions" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="040df-164">The <paramref name="function" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-164">The <paramref name="function" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Task (Func&lt;object,TResult&gt; function, object state, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;object, !TResult&gt; function, object state, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Task(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Task&lt;'Result&gt; : Func&lt;obj, 'Result&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="new System.Threading.Tasks.Task&lt;'Result&gt; (function, state, cancellationToken)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="040df-165">The delegate that represents the code to execute in the task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-165">The delegate that represents the code to execute in the task.</span>
          </span>
          <span data-ttu-id="040df-166">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-166">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="040df-167">An object representing data to be used by the function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-167">An object representing data to be used by the function.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="040df-168">The <see cref="T:System.Threading.CancellationToken" /> to be assigned to the new task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-168">The <see cref="T:System.Threading.CancellationToken" /> to be assigned to the new task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-169">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified action, state, and options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-169">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified action, state, and options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-170">而不是呼叫這個建構函式，最常見的方式，來具現化<xref:System.Threading.Tasks.Task%601>物件和啟動工作是藉由呼叫靜態<xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7BSystem.Object%2C%600%7D%2CSystem.Object%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="040df-170">Rather than calling this constructor, the most common way to instantiate a <xref:System.Threading.Tasks.Task%601> object and launch a task is by calling the static <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7BSystem.Object%2C%600%7D%2CSystem.Object%2CSystem.Threading.CancellationToken%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="040df-171">這個建構函式所提供的唯一優點是它可讓物件具現化，分隔從工作引動過程。</span><span class="sxs-lookup"><span data-stu-id="040df-171">The only advantage offered by this constructor is that it allows object instantiation to be separated from task invocation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="040df-172">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-172">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="040df-173">The <paramref name="function" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-173">The <paramref name="function" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Task (Func&lt;object,TResult&gt; function, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;object, !TResult&gt; function, object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (function As Func(Of Object, TResult), state As Object, creationOptions As TaskCreationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Task(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Task&lt;'Result&gt; : Func&lt;obj, 'Result&gt; * obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="new System.Threading.Tasks.Task&lt;'Result&gt; (function, state, creationOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="040df-174">The delegate that represents the code to execute in the task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-174">The delegate that represents the code to execute in the task.</span>
          </span>
          <span data-ttu-id="040df-175">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-175">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="040df-176">An object representing data to be used by the function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-176">An object representing data to be used by the function.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="040df-177">The <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> used to customize the task's behavior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-177">The <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> used to customize the task's behavior.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-178">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified action, state, and options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-178">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified action, state, and options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-179">而不是呼叫這個建構函式，最常見的方式，來具現化<xref:System.Threading.Tasks.Task%601>物件和啟動工作是藉由呼叫靜態<xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7BSystem.Object%2C%600%7D%2CSystem.Object%2CSystem.Threading.Tasks.TaskCreationOptions%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="040df-179">Rather than calling this constructor, the most common way to instantiate a <xref:System.Threading.Tasks.Task%601> object and launch a task is by calling the static <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7BSystem.Object%2C%600%7D%2CSystem.Object%2CSystem.Threading.Tasks.TaskCreationOptions%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="040df-180">這個建構函式所提供的唯一優點是它可讓物件具現化，分隔從工作引動過程。</span><span class="sxs-lookup"><span data-stu-id="040df-180">The only advantage offered by this constructor is that it allows object instantiation to be separated from task invocation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="040df-181">The <paramref name="creationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskCreationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-181">The <paramref name="creationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskCreationOptions" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="040df-182">The <paramref name="function" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-182">The <paramref name="function" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Task (Func&lt;TResult&gt; function, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;!TResult&gt; function, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Task(Func&lt;TResult&gt; ^ function, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Task&lt;'Result&gt; : Func&lt;'Result&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="new System.Threading.Tasks.Task&lt;'Result&gt; (function, cancellationToken, creationOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;TResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="040df-183">The delegate that represents the code to execute in the task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-183">The delegate that represents the code to execute in the task.</span>
          </span>
          <span data-ttu-id="040df-184">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-184">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="040df-185">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-185">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new task.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="040df-186">The <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> used to customize the task's behavior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-186">The <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> used to customize the task's behavior.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-187">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified function and creation options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-187">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified function and creation options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-188">而不是呼叫這個建構函式，最常見的方式，來具現化<xref:System.Threading.Tasks.Task%601>物件和啟動工作是藉由呼叫靜態<xref:System.Threading.Tasks.TaskFactory.StartNew%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%2CSystem.Threading.Tasks.TaskCreationOptions%2CSystem.Threading.Tasks.TaskScheduler%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="040df-188">Rather than calling this constructor, the most common way to instantiate a <xref:System.Threading.Tasks.Task%601> object and launch a task is by calling the static <xref:System.Threading.Tasks.TaskFactory.StartNew%60%601%28System.Func%7B%60%600%7D%2CSystem.Threading.CancellationToken%2CSystem.Threading.Tasks.TaskCreationOptions%2CSystem.Threading.Tasks.TaskScheduler%29?displayProperty=nameWithType> method.</span></span>  <span data-ttu-id="040df-189">這個建構函式所提供的唯一優點是它可讓物件具現化，分隔從工作引動過程。</span><span class="sxs-lookup"><span data-stu-id="040df-189">The only advantage offered by this constructor is that it allows object instantiation to be separated from task invocation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="040df-190">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-190">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="040df-191">The <paramref name="creationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskCreationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-191">The <paramref name="creationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskCreationOptions" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="040df-192">The <paramref name="function" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-192">The <paramref name="function" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Task (Func&lt;object,TResult&gt; function, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;object, !TResult&gt; function, object state, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Task(Func&lt;System::Object ^, TResult&gt; ^ function, System::Object ^ state, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Task&lt;'Result&gt; : Func&lt;obj, 'Result&gt; * obj * System.Threading.CancellationToken * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="new System.Threading.Tasks.Task&lt;'Result&gt; (function, state, cancellationToken, creationOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="function" Type="System.Func&lt;System.Object,TResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="function">
          <span data-ttu-id="040df-193">The delegate that represents the code to execute in the task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-193">The delegate that represents the code to execute in the task.</span>
          </span>
          <span data-ttu-id="040df-194">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-194">When the function has completed, the task's <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="040df-195">An object representing data to be used by the function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-195">An object representing data to be used by the function.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="040df-196">The <see cref="T:System.Threading.CancellationToken" /> to be assigned to the new task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-196">The <see cref="T:System.Threading.CancellationToken" /> to be assigned to the new task.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="040df-197">The <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> used to customize the task's behavior.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-197">The <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> used to customize the task's behavior.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-198">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified action, state, and options.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-198">Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified action, state, and options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-199">而不是呼叫這個建構函式，最常見的方式，來具現化<xref:System.Threading.Tasks.Task%601>物件和啟動工作是藉由呼叫靜態<xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7BSystem.Object%2C%600%7D%2CSystem.Object%2CSystem.Threading.CancellationToken%2CSystem.Threading.Tasks.TaskCreationOptions%2CSystem.Threading.Tasks.TaskScheduler%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="040df-199">Rather than calling this constructor, the most common way to instantiate a <xref:System.Threading.Tasks.Task%601> object and launch a task is by calling the static <xref:System.Threading.Tasks.TaskFactory%601.StartNew%28System.Func%7BSystem.Object%2C%600%7D%2CSystem.Object%2CSystem.Threading.CancellationToken%2CSystem.Threading.Tasks.TaskCreationOptions%2CSystem.Threading.Tasks.TaskScheduler%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="040df-200">這個建構函式所提供的唯一優點是它可讓物件具現化，分隔從工作引動過程。</span><span class="sxs-lookup"><span data-stu-id="040df-200">The only advantage offered by this constructor is that it allows object instantiation to be separated from task invocation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="040df-201">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-201">The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="040df-202">The <paramref name="creationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskCreationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-202">The <paramref name="creationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskCreationOptions" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="040df-203">The <paramref name="function" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-203">The <paramref name="function" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConfigureAwait">
      <MemberSignature Language="C#" Value="public System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;TResult&gt; ConfigureAwait (bool continueOnCapturedContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1&lt;!TResult&gt; ConfigureAwait(bool continueOnCapturedContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ConfigureAwait(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConfigureAwait (continueOnCapturedContext As Boolean) As ConfiguredTaskAwaitable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::CompilerServices::ConfiguredTaskAwaitable&lt;TResult&gt; ConfigureAwait(bool continueOnCapturedContext);" />
      <MemberSignature Language="F#" Value="override this.ConfigureAwait : bool -&gt; System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;'Result&gt;" Usage="task.ConfigureAwait continueOnCapturedContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.ConfiguredTaskAwaitable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continueOnCapturedContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="continueOnCapturedContext">
          <span data-ttu-id="040df-204">true to attempt to marshal the continuation back to the original context captured; otherwise, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-204">true to attempt to marshal the continuation back to the original context captured; otherwise, false.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-205">Configures an awaiter used to await this <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-205">Configures an awaiter used to await this <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="040df-206">An object used to await this task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-206">An object used to await this task.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ContinueWith">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="040df-207">Creates a continuation task that executes when another task completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-207">Creates a continuation task that executes when another task completes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt; continuationAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;&gt; continuationAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith (continuationAction As Action(Of Task(Of TResult))) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^&gt; ^ continuationAction);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Action&lt;System.Threading.Tasks.Task&lt;'Result&gt;&gt; -&gt; System.Threading.Tasks.Task" Usage="task.ContinueWith continuationAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="continuationAction">
          <span data-ttu-id="040df-208">An action to run when the antecedent <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-208">An action to run when the antecedent <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="040df-209">When run, the delegate will be passed the completed task as an argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-209">When run, the delegate will be passed the completed task as an argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-210">Creates a continuation that executes asynchronously when the target task completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-210">Creates a continuation that executes asynchronously when the target task completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="040df-211">A new continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-211">A new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-212">傳回<xref:System.Threading.Tasks.Task>將不進行執行排程目前的工作完成為止，是否完成，因為成功執行到完成為止，判定為失敗，因為發生未處理的例外狀況，或因取消提早結束。</span><span class="sxs-lookup"><span data-stu-id="040df-212">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting early due to being canceled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="040df-213">下列範例會建立使用 Sieve Eratosthenes 計算介於 1 到由使用者所輸入的值之間的質數前項工作。</span><span class="sxs-lookup"><span data-stu-id="040df-213">The following example creates an antecedent task that uses the Sieve of Eratosthenes to calculate the prime numbers between 1 and a value entered by the user.</span></span> <span data-ttu-id="040df-214">陣列用來保存質數的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="040df-214">An array is used to hold information about the prime numbers.</span></span> <span data-ttu-id="040df-215">陣列索引代表數字，以及項目的值會指出該數字是複合 (其值是`true`) 或質數 (其值是`false`)。</span><span class="sxs-lookup"><span data-stu-id="040df-215">The array index represents the number, and the element's value indicates whether that number is composite (its value is `true`) or prime (its value is `false`).</span></span> <span data-ttu-id="040df-216">這項工作接著會傳遞給接續工作，也就是負責質數擷取整數陣列，並顯示它們。</span><span class="sxs-lookup"><span data-stu-id="040df-216">This task is then passed to a continuation task, which is responsible for extracting the prime numbers from the integer array and displaying them.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task\`1.ContinueWith#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task`1.continuewith/cs/continue2.cs#2)]
 [!code-vb[System.Threading.Tasks.Task\`1.ContinueWith#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task`1.continuewith/vb/continue2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="040df-217">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-217">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="040df-218">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-218">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object&gt; continuationAction, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object&gt; continuationAction, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith (continuationAction As Action(Of Task(Of TResult), Object), state As Object) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^&gt; ^ continuationAction, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Action&lt;System.Threading.Tasks.Task&lt;'Result&gt;, obj&gt; * obj -&gt; System.Threading.Tasks.Task" Usage="task.ContinueWith (continuationAction, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="continuationAction">
          <span data-ttu-id="040df-219">An action to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-219">An action to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="040df-220">When run, the delegate is   passed the completed task and the caller-supplied state object as arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-220">When run, the delegate is   passed the completed task and the caller-supplied state object as arguments.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="040df-221">An object representing data to be used by the continuation action.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-221">An object representing data to be used by the continuation action.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-222">Creates a continuation that that is passed state information and that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-222">Creates a continuation that that is passed state information and that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="040df-223">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-223">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-224">傳回<xref:System.Threading.Tasks.Task>將不進行執行排程目前的工作完成為止，是否因為成功執行到完成為止，判定為失敗，因為發生未處理的例外狀況，或因取消提早結束時完成。</span><span class="sxs-lookup"><span data-stu-id="040df-224">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="040df-225">下列範例會建立的工作，會傳遞介於 2 到 20 之間的整數，並傳回陣列，包含前十個指數 (n<sup>1</sup> n<sup>10</sup>) 該數字。</span><span class="sxs-lookup"><span data-stu-id="040df-225">The following example creates a task that is passed an integer between 2 and 20 and returns an array that contains the first ten exponents (from n<sup>1</sup> to n<sup>10</sup>) of that number.</span></span> <span data-ttu-id="040df-226">接續工作是則負責顯示指數。</span><span class="sxs-lookup"><span data-stu-id="040df-226">A continuation task is then responsible for displaying the exponents.</span></span> <span data-ttu-id="040df-227">它會傳遞前項和原始的編號前項所產生的指數。</span><span class="sxs-lookup"><span data-stu-id="040df-227">It is passed both the antecedent and the original number whose exponents the antecedent generates.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task\`1.ContinueWith#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task`1.continuewith/cs/continuewith3.cs#3)]
 [!code-vb[System.Threading.Tasks.Task\`1.ContinueWith#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task`1.continuewith/vb/continuewith3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="040df-228">The <paramref name="continuationAction" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-228">The <paramref name="continuationAction" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt; continuationAction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;&gt; continuationAction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^&gt; ^ continuationAction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Action&lt;System.Threading.Tasks.Task&lt;'Result&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="task.ContinueWith (continuationAction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="continuationAction">
          <span data-ttu-id="040df-229">An action to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-229">An action to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="040df-230">When run, the delegate is passed the completed task as an argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-230">When run, the delegate is passed the completed task as an argument.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="040df-231">The cancellation token that is passed to the new continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-231">The cancellation token that is passed to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-232">Creates a cancelable continuation that executes asynchronously when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-232">Creates a cancelable continuation that executes asynchronously when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="040df-233">A new continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-233">A new continuation task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-234">傳回<xref:System.Threading.Tasks.Task>將不進行執行排程目前的工作完成為止，是否因為成功執行到完成為止，判定為失敗，因為發生未處理的例外狀況，或因取消提早結束時完成。</span><span class="sxs-lookup"><span data-stu-id="040df-234">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="040df-235">下列範例會建立使用 Sieve Eratosthenes 計算介於 1 到由使用者所輸入的值之間的質數前項工作。</span><span class="sxs-lookup"><span data-stu-id="040df-235">The following example creates an antecedent task that uses the Sieve of Eratosthenes to calculate the prime numbers between 1 and a value entered by the user.</span></span> <span data-ttu-id="040df-236">陣列用來保存質數的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="040df-236">An array is used to hold information about the prime numbers.</span></span> <span data-ttu-id="040df-237">陣列索引代表數字，以及項目的值會指出該數字是複合 (其值是`true`) 或質數 (其值是`false`)。</span><span class="sxs-lookup"><span data-stu-id="040df-237">The array index represents the number, and the element's value indicates whether that number is composite (its value is `true`) or prime (its value is `false`).</span></span> <span data-ttu-id="040df-238">這項工作接著會傳遞給接續工作，也就是負責質數擷取整數陣列，並顯示它們。</span><span class="sxs-lookup"><span data-stu-id="040df-238">This task is then passed to a continuation task, which is responsible for extracting the prime numbers from the integer array and displaying them.</span></span>  
  
 <span data-ttu-id="040df-239">取消語彙基元傳遞至前項和接續工作。</span><span class="sxs-lookup"><span data-stu-id="040df-239">A cancellation token is passed to both the antecedent and the continuation task.</span></span> <span data-ttu-id="040df-240">A<xref:System.Timers.Timer?displayProperty=nameWithType>物件用來定義 100 毫秒的逾時值。</span><span class="sxs-lookup"><span data-stu-id="040df-240">A <xref:System.Timers.Timer?displayProperty=nameWithType> object is used to define a timeout value of 100 milliseconds.</span></span> <span data-ttu-id="040df-241">事件引發時，如果<xref:System.Threading.CancellationTokenSource.Cancel%2A?displayProperty=nameWithType>呼叫方法時，以及取消語彙基元可用來要求取消的工作。</span><span class="sxs-lookup"><span data-stu-id="040df-241">If the event fires, the <xref:System.Threading.CancellationTokenSource.Cancel%2A?displayProperty=nameWithType> method is called, and the cancellation token is used to request cancellation of the tasks.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task\`1.ContinueWith#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task`1.continuewith/cs/continue1.cs#1)]
 [!code-vb[System.Threading.Tasks.Task\`1.ContinueWith#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task`1.continuewith/vb/continue1.vb#1)]  
  
 <span data-ttu-id="040df-242">一般而言，提供關於 100000 的值會導致逾時間隔過期而<xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType>引發的事件以及取消要求設定。</span><span class="sxs-lookup"><span data-stu-id="040df-242">Typically, supplying a value of about 100,000 causes the timeout interval to expire and the <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event to fire, and the cancellation request to be set.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="040df-243">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-243">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          </span>
          <span data-ttu-id="040df-244">-or-  The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-244">-or-  The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="040df-245">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-245">The <paramref name="continuationAction" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt; continuationAction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;&gt; continuationAction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith (continuationAction As Action(Of Task(Of TResult)), continuationOptions As TaskContinuationOptions) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^&gt; ^ continuationAction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Action&lt;System.Threading.Tasks.Task&lt;'Result&gt;&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task" Usage="task.ContinueWith (continuationAction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="continuationAction">
          <span data-ttu-id="040df-246">An action to according the condition specified in <c>continuationOptions</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-246">An action to according the condition specified in <c>continuationOptions</c>.</span>
          </span>
          <span data-ttu-id="040df-247">When run, the delegate will be passed the completed task as an argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-247">When run, the delegate will be passed the completed task as an argument.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="040df-248">Options for when the continuation is scheduled and how it behaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-248">Options for when the continuation is scheduled and how it behaves.</span>
          </span>
          <span data-ttu-id="040df-249">This includes criteria, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-249">This includes criteria, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-250">Creates a continuation that executes according the condition specified in <paramref name="continuationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-250">Creates a continuation that executes according the condition specified in <paramref name="continuationOptions" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="040df-251">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-251">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-252">傳回<xref:System.Threading.Tasks.Task>將不會執行直到目前的工作已完成。</span><span class="sxs-lookup"><span data-stu-id="040df-252">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has completed.</span></span> <span data-ttu-id="040df-253">如果透過指定接續準則`continuationOptions`參數不符合，接續工作將會取消而不是排程。</span><span class="sxs-lookup"><span data-stu-id="040df-253">If the continuation criteria specified through the `continuationOptions` parameter are not met, the continuation task will be canceled instead of scheduled.</span></span>  
  
 <span data-ttu-id="040df-254">如需詳細資訊，請參閱[使用接續工作鏈結工作](~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="040df-254">For more information, see [Chaining Tasks by Using Continuation Tasks](~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="040df-255">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-255">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="040df-256">The <paramref name="continuationAction" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-256">The <paramref name="continuationAction" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="040df-257">The <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-257">The <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt; continuationAction, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;&gt; continuationAction, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith (continuationAction As Action(Of Task(Of TResult)), scheduler As TaskScheduler) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^&gt; ^ continuationAction, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Action&lt;System.Threading.Tasks.Task&lt;'Result&gt;&gt; * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task" Usage="task.ContinueWith (continuationAction, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt;" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="continuationAction">
          <span data-ttu-id="040df-258">An action to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-258">An action to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="040df-259">When run, the delegate will be passed the completed task as an argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-259">When run, the delegate will be passed the completed task as an argument.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="040df-260">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its execution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-260">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its execution.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-261">Creates a continuation that executes asynchronously when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-261">Creates a continuation that executes asynchronously when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="040df-262">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-262">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-263">傳回<xref:System.Threading.Tasks.Task>將不進行執行排程目前的工作完成為止，是否因為成功執行到完成為止，判定為失敗，因為發生未處理的例外狀況，或因取消提早結束時完成。</span><span class="sxs-lookup"><span data-stu-id="040df-263">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="040df-264">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-264">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="040df-265">The <paramref name="continuationAction" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-265">The <paramref name="continuationAction" /> argument is null.</span>
          </span>
          <span data-ttu-id="040df-266">-or-  The <paramref name="scheduler" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-266">-or-  The <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object&gt; continuationAction, object state, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object&gt; continuationAction, object state, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^&gt; ^ continuationAction, System::Object ^ state, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Action&lt;System.Threading.Tasks.Task&lt;'Result&gt;, obj&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="task.ContinueWith (continuationAction, state, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="continuationAction">
          <span data-ttu-id="040df-267">An action to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-267">An action to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="040df-268">When run, the delegate will be  passed the completed task and the caller-supplied state object as arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-268">When run, the delegate will be  passed the completed task and the caller-supplied state object as arguments.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="040df-269">An object representing data to be used by the continuation action.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-269">An object representing data to be used by the continuation action.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="040df-270">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-270">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-271">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-271">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="040df-272">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-272">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-273">傳回<xref:System.Threading.Tasks.Task>將不進行執行排程目前的工作完成為止，是否因為成功執行到完成為止，判定為失敗，因為發生未處理的例外狀況，或因取消提早結束時完成。</span><span class="sxs-lookup"><span data-stu-id="040df-273">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has  completed, whether it completes due to running to completion successfully, faulting due to an  unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="040df-274">The <paramref name="continuationAction" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-274">The <paramref name="continuationAction" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="040df-275">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-275">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object&gt; continuationAction, object state, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object&gt; continuationAction, object state, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith (continuationAction As Action(Of Task(Of TResult), Object), state As Object, continuationOptions As TaskContinuationOptions) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^&gt; ^ continuationAction, System::Object ^ state, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Action&lt;System.Threading.Tasks.Task&lt;'Result&gt;, obj&gt; * obj * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task" Usage="task.ContinueWith (continuationAction, state, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <param name="continuationAction">
          <span data-ttu-id="040df-276">An action to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-276">An action to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="040df-277">When run, the delegate will be  passed the completed task and the caller-supplied state object as arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-277">When run, the delegate will be  passed the completed task and the caller-supplied state object as arguments.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="040df-278">An object representing data to be used by the continuation action.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-278">An object representing data to be used by the continuation action.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="040df-279">Options for when the continuation is scheduled and how it behaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-279">Options for when the continuation is scheduled and how it behaves.</span>
          </span>
          <span data-ttu-id="040df-280">This includes criteria, such  as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-280">This includes criteria, such  as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-281">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-281">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="040df-282">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-282">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-283">傳回<xref:System.Threading.Tasks.Task>將不會執行直到目前的工作已完成。</span><span class="sxs-lookup"><span data-stu-id="040df-283">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has completed.</span></span> <span data-ttu-id="040df-284">如果透過指定接續準則`continuationOptions`參數不符合，接續工作將會取消而不是排程。</span><span class="sxs-lookup"><span data-stu-id="040df-284">If the continuation criteria specified through the `continuationOptions` parameter are not met, the continuation task will be canceled instead of scheduled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="040df-285">The <paramref name="continuationAction" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-285">The <paramref name="continuationAction" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="040df-286">The <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-286">The <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object&gt; continuationAction, object state, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object&gt; continuationAction, object state, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith (continuationAction As Action(Of Task(Of TResult), Object), state As Object, scheduler As TaskScheduler) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^&gt; ^ continuationAction, System::Object ^ state, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Action&lt;System.Threading.Tasks.Task&lt;'Result&gt;, obj&gt; * obj * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task" Usage="task.ContinueWith (continuationAction, state, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="continuationAction">
          <span data-ttu-id="040df-287">An action to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-287">An action to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="040df-288">When run, the delegate will be passed the completed task and the caller-supplied state object as arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-288">When run, the delegate will be passed the completed task and the caller-supplied state object as arguments.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="040df-289">An object representing data to be used by the continuation action.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-289">An object representing data to be used by the continuation action.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="040df-290">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its execution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-290">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its execution.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-291">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-291">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="040df-292">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-292">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-293">傳回<xref:System.Threading.Tasks.Task>將不進行執行排程目前的工作完成為止，是否因為成功執行到完成為止，判定為失敗，因為發生未處理的例外狀況，或因取消提早結束時完成。</span><span class="sxs-lookup"><span data-stu-id="040df-293">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="040df-294">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-294">The <paramref name="scheduler" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt; continuationAction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`1&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;&gt; continuationAction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^&gt; ^ continuationAction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Action&lt;System.Threading.Tasks.Task&lt;'Result&gt;&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task" Usage="task.ContinueWith (continuationAction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="continuationAction">
          <span data-ttu-id="040df-295">An action to run according the condition specified in <c>continuationOptions</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-295">An action to run according the condition specified in <c>continuationOptions</c>.</span>
          </span>
          <span data-ttu-id="040df-296">When run, the delegate will be passed the completed task as an argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-296">When run, the delegate will be passed the completed task as an argument.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="040df-297">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-297">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="040df-298">Options for when the continuation is scheduled and how it behaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-298">Options for when the continuation is scheduled and how it behaves.</span>
          </span>
          <span data-ttu-id="040df-299">This includes criteria, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-299">This includes criteria, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="040df-300">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its execution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-300">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its execution.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-301">Creates a continuation that executes according the condition specified in <paramref name="continuationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-301">Creates a continuation that executes according the condition specified in <paramref name="continuationOptions" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="040df-302">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-302">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-303">傳回<xref:System.Threading.Tasks.Task>將不會執行直到目前的工作已完成。</span><span class="sxs-lookup"><span data-stu-id="040df-303">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has completed.</span></span> <span data-ttu-id="040df-304">如果透過指定的準則`continuationOptions`參數不符合，接續工作將會取消而不是排程。</span><span class="sxs-lookup"><span data-stu-id="040df-304">If the criteria specified through the `continuationOptions` parameter are not met, the continuation task will be canceled instead of scheduled.</span></span> <span data-ttu-id="040df-305">如需詳細資訊，請參閱[使用接續工作鏈結工作](~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md)。</span><span class="sxs-lookup"><span data-stu-id="040df-305">For more information, see [Chaining Tasks by Using Continuation Tasks](~/docs/standard/parallel-programming/chaining-tasks-by-using-continuation-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="040df-306">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-306">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          </span>
          <span data-ttu-id="040df-307">-or-  The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-307">-or-  The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="040df-308">The <paramref name="continuationAction" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-308">The <paramref name="continuationAction" /> argument is null.</span>
          </span>
          <span data-ttu-id="040df-309">-or-  The <paramref name="scheduler" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-309">-or-  The <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="040df-310">The <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-310">The <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ContinueWith (Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object&gt; continuationAction, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ContinueWith(class System.Action`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object&gt; continuationAction, object state, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ContinueWith(Action&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^&gt; ^ continuationAction, System::Object ^ state, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Action&lt;System.Threading.Tasks.Task&lt;'Result&gt;, obj&gt; * obj * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task" Usage="task.ContinueWith (continuationAction, state, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuationAction" Type="System.Action&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <param name="continuationAction">
          <span data-ttu-id="040df-311">An action to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-311">An action to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="040df-312">When run, the delegate will be  passed the completed task and the caller-supplied state object as arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-312">When run, the delegate will be  passed the completed task and the caller-supplied state object as arguments.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="040df-313">An object representing data to be used by the continuation action.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-313">An object representing data to be used by the continuation action.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="040df-314">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new continuation task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-314">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new continuation task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="040df-315">Options for when the continuation is scheduled and how it behaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-315">Options for when the continuation is scheduled and how it behaves.</span>
          </span>
          <span data-ttu-id="040df-316">This includes criteria, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as  well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-316">This includes criteria, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as  well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="040df-317">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its  execution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-317">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its  execution.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-318">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-318">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="040df-319">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-319">A new continuation <see cref="T:System.Threading.Tasks.Task" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-320">傳回<xref:System.Threading.Tasks.Task>將不會執行直到目前的工作已完成。</span><span class="sxs-lookup"><span data-stu-id="040df-320">The returned <xref:System.Threading.Tasks.Task> will not be scheduled for execution until the current task has  completed.</span></span> <span data-ttu-id="040df-321">如果透過指定的準則`continuationOptions`參數不符合，接續工作將會取消而不是排程。</span><span class="sxs-lookup"><span data-stu-id="040df-321">If the criteria specified through the `continuationOptions` parameter  are not met, the continuation task will be canceled instead of scheduled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="040df-322">The <paramref name="scheduler" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-322">The <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="040df-323">The <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-323">The <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="040df-324">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-324">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt; continuationFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, !!TNewResult&gt; continuationFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith(Of TNewResult) (continuationFunction As Func(Of Task(Of TResult), TNewResult)) As Task(Of TNewResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, TNewResult&gt; ^ continuationFunction);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Func&lt;System.Threading.Tasks.Task&lt;'Result&gt;, 'NewResult&gt; -&gt; System.Threading.Tasks.Task&lt;'NewResult&gt;" Usage="task.ContinueWith continuationFunction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">
          <span data-ttu-id="040df-325">接續作業所產生的結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-325">The type of the result produced by the continuation.</span>
          </span>
        </typeparam>
        <param name="continuationFunction">
          <span data-ttu-id="040df-326">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-326">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="040df-327">When run, the delegate will be passed the completed task as an argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-327">When run, the delegate will be passed the completed task as an argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-328">Creates a continuation that executes asynchronously when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-328">Creates a continuation that executes asynchronously when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="040df-329">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-329">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-330">傳回<xref:System.Threading.Tasks.Task%601>將不進行執行排程目前的工作完成為止，是否因為成功執行到完成為止，判定為失敗，因為發生未處理的例外狀況，或因取消提早結束時完成。</span><span class="sxs-lookup"><span data-stu-id="040df-330">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="040df-331">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-331">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="040df-332">The <paramref name="continuationFunction" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-332">The <paramref name="continuationFunction" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object,TNewResult&gt; continuationFunction, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`3&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object, !!TNewResult&gt; continuationFunction, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith(Of TNewResult) (continuationFunction As Func(Of Task(Of TResult), Object, TNewResult), state As Object) As Task(Of TNewResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^, TNewResult&gt; ^ continuationFunction, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Func&lt;System.Threading.Tasks.Task&lt;'Result&gt;, obj, 'NewResult&gt; * obj -&gt; System.Threading.Tasks.Task&lt;'NewResult&gt;" Usage="task.ContinueWith (continuationFunction, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object,TNewResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">
          <span data-ttu-id="040df-333">接續作業所產生的結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-333">The type of the result produced by the continuation.</span>
          </span>
        </typeparam>
        <param name="continuationFunction">
          <span data-ttu-id="040df-334">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-334">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="040df-335">When run, the delegate will be passed the completed task and the caller-supplied state object as arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-335">When run, the delegate will be passed the completed task and the caller-supplied state object as arguments.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="040df-336">An object representing data to be used by the continuation function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-336">An object representing data to be used by the continuation function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-337">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-337">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="040df-338">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-338">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-339">傳回<xref:System.Threading.Tasks.Task%601>將不進行執行排程目前的工作完成為止，是否因為成功執行到完成為止，判定為失敗，因為發生未處理的例外狀況，或因取消提早結束時完成。</span><span class="sxs-lookup"><span data-stu-id="040df-339">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current  task has completed, whether it completes due to running to completion successfully, faulting due  to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="040df-340">下列範例會建立接續工作鏈結。</span><span class="sxs-lookup"><span data-stu-id="040df-340">The following example creates a chain of continuation tasks.</span></span> <span data-ttu-id="040df-341">每個工作提供目前的時間，<xref:System.DateTime>狀態引數的物件，<xref:System.Threading.Tasks.Task.ContinueWith%28System.Action%7BSystem.Threading.Tasks.Task%2CSystem.Object%7D%2CSystem.Object%29>方法。</span><span class="sxs-lookup"><span data-stu-id="040df-341">Each task provides the current time, a <xref:System.DateTime> object, for the state argument of the <xref:System.Threading.Tasks.Task.ContinueWith%28System.Action%7BSystem.Threading.Tasks.Task%2CSystem.Object%7D%2CSystem.Object%29> method.</span></span> <span data-ttu-id="040df-342">每個<xref:System.DateTime>值代表繼續工作建立時。</span><span class="sxs-lookup"><span data-stu-id="040df-342">Each <xref:System.DateTime> value represents the time at which the continue task is created.</span></span> <span data-ttu-id="040df-343">每個工作會產生做為其結果，第二個<xref:System.DateTime>值，表示工作完成時的時間。</span><span class="sxs-lookup"><span data-stu-id="040df-343">Each task produces as its result a second <xref:System.DateTime> value that represents the time at which the task finishes.</span></span> <span data-ttu-id="040df-344">所有工作都完成之後，這個範例會顯示的日期和時間每項接續工作會啟動並完成。</span><span class="sxs-lookup"><span data-stu-id="040df-344">After all tasks finish, the example displays the date and times at which each continuation task starts and finishes.</span></span>  
  
 [!code-csharp[TPL_ContinuationState#1](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_continuationstate/cs/continuationstate.cs#1)]
 [!code-vb[TPL_ContinuationState#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_continuationstate/vb/continuationstate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="040df-345">The <paramref name="continuationFunction" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-345">The <paramref name="continuationFunction" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, !!TNewResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, TNewResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Func&lt;System.Threading.Tasks.Task&lt;'Result&gt;, 'NewResult&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'NewResult&gt;" Usage="task.ContinueWith (continuationFunction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">
          <span data-ttu-id="040df-346">接續作業所產生的結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-346">The type of the result produced by the continuation.</span>
          </span>
        </typeparam>
        <param name="continuationFunction">
          <span data-ttu-id="040df-347">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-347">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="040df-348">When run, the delegate will be passed the completed task as an argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-348">When run, the delegate will be passed the completed task as an argument.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="040df-349">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-349">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-350">Creates a continuation that executes asynchronously when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-350">Creates a continuation that executes asynchronously when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="040df-351">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-351">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-352">傳回<xref:System.Threading.Tasks.Task%601>將不進行執行排程目前的工作完成為止，是否因為成功執行到完成為止，判定為失敗，因為發生未處理的例外狀況，或因取消提早結束時完成。</span><span class="sxs-lookup"><span data-stu-id="040df-352">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="040df-353">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-353">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          </span>
          <span data-ttu-id="040df-354">-or-  The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-354">-or-  The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="040df-355">The <paramref name="continuationFunction" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-355">The <paramref name="continuationFunction" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt; continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, !!TNewResult&gt; continuationFunction, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith(Of TNewResult) (continuationFunction As Func(Of Task(Of TResult), TNewResult), continuationOptions As TaskContinuationOptions) As Task(Of TNewResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, TNewResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Func&lt;System.Threading.Tasks.Task&lt;'Result&gt;, 'NewResult&gt; * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task&lt;'NewResult&gt;" Usage="task.ContinueWith (continuationFunction, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt;" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">
          <span data-ttu-id="040df-356">接續作業所產生的結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-356">The type of the result produced by the continuation.</span>
          </span>
        </typeparam>
        <param name="continuationFunction">
          <span data-ttu-id="040df-357">A function to run according the condition specified in <c>continuationOptions</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-357">A function to run according the condition specified in <c>continuationOptions</c>.</span>
          </span>
          <span data-ttu-id="040df-358">When run, the delegate will be passed the completed task as an argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-358">When run, the delegate will be passed the completed task as an argument.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="040df-359">Options for when the continuation is scheduled and how it behaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-359">Options for when the continuation is scheduled and how it behaves.</span>
          </span>
          <span data-ttu-id="040df-360">This includes criteria, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-360">This includes criteria, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-361">Creates a continuation that executes according the condition specified in <paramref name="continuationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-361">Creates a continuation that executes according the condition specified in <paramref name="continuationOptions" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="040df-362">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-362">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-363">傳回<xref:System.Threading.Tasks.Task%601>將不進行執行排程目前的工作完成為止，是否因為成功執行到完成為止，判定為失敗，因為發生未處理的例外狀況，或因取消提早結束時完成。</span><span class="sxs-lookup"><span data-stu-id="040df-363">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 <span data-ttu-id="040df-364">`continuationFunction`、 在執行時，應傳回<xref:System.Threading.Tasks.Task%601>...</span><span class="sxs-lookup"><span data-stu-id="040df-364">The `continuationFunction`, when executed, should return a <xref:System.Threading.Tasks.Task%601>..</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="040df-365">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-365">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="040df-366">The <paramref name="continuationFunction" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-366">The <paramref name="continuationFunction" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="040df-367">The <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-367">The <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt; continuationFunction, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, !!TNewResult&gt; continuationFunction, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith(Of TNewResult) (continuationFunction As Func(Of Task(Of TResult), TNewResult), scheduler As TaskScheduler) As Task(Of TNewResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, TNewResult&gt; ^ continuationFunction, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Func&lt;System.Threading.Tasks.Task&lt;'Result&gt;, 'NewResult&gt; * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'NewResult&gt;" Usage="task.ContinueWith (continuationFunction, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt;" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">
          <span data-ttu-id="040df-368">接續作業所產生的結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-368">The type of the result produced by the continuation.</span>
          </span>
        </typeparam>
        <param name="continuationFunction">
          <span data-ttu-id="040df-369">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-369">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="040df-370">When run, the delegate will be passed the completed task as an argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-370">When run, the delegate will be passed the completed task as an argument.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="040df-371">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its execution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-371">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its execution.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-372">Creates a continuation that executes asynchronously when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-372">Creates a continuation that executes asynchronously when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="040df-373">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-373">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-374">傳回<xref:System.Threading.Tasks.Task%601>將不進行執行排程目前的工作完成為止，是否因為成功執行到完成為止，判定為失敗，因為發生未處理的例外狀況，或因取消提早結束時完成。</span><span class="sxs-lookup"><span data-stu-id="040df-374">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="040df-375">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-375">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="040df-376">The <paramref name="continuationFunction" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-376">The <paramref name="continuationFunction" /> argument is null.</span>
          </span>
          <span data-ttu-id="040df-377">-or-  The <paramref name="scheduler" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-377">-or-  The <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object,TNewResult&gt; continuationFunction, object state, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`3&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object, !!TNewResult&gt; continuationFunction, object state, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^, TNewResult&gt; ^ continuationFunction, System::Object ^ state, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Func&lt;System.Threading.Tasks.Task&lt;'Result&gt;, obj, 'NewResult&gt; * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'NewResult&gt;" Usage="task.ContinueWith (continuationFunction, state, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object,TNewResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">
          <span data-ttu-id="040df-378">接續作業所產生的結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-378">The type of the result produced by the continuation.</span>
          </span>
        </typeparam>
        <param name="continuationFunction">
          <span data-ttu-id="040df-379">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-379">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="040df-380">When run, the delegate will be passed the completed task and the caller-supplied state object as arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-380">When run, the delegate will be passed the completed task and the caller-supplied state object as arguments.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="040df-381">An object representing data to be used by the continuation function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-381">An object representing data to be used by the continuation function.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="040df-382">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-382">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-383">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-383">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="040df-384">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-384">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-385">傳回<xref:System.Threading.Tasks.Task%601>將不進行執行排程目前的工作完成為止，是否因為成功執行到完成為止，判定為失敗，因為發生未處理的例外狀況，或因取消提早結束時完成。</span><span class="sxs-lookup"><span data-stu-id="040df-385">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current  task has completed, whether it completes due to running to completion successfully, faulting due  to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="040df-386">The <paramref name="continuationFunction" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-386">The <paramref name="continuationFunction" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="040df-387">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-387">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object,TNewResult&gt; continuationFunction, object state, System.Threading.Tasks.TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`3&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object, !!TNewResult&gt; continuationFunction, object state, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith(Of TNewResult) (continuationFunction As Func(Of Task(Of TResult), Object, TNewResult), state As Object, continuationOptions As TaskContinuationOptions) As Task(Of TNewResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^, TNewResult&gt; ^ continuationFunction, System::Object ^ state, System::Threading::Tasks::TaskContinuationOptions continuationOptions);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Func&lt;System.Threading.Tasks.Task&lt;'Result&gt;, obj, 'NewResult&gt; * obj * System.Threading.Tasks.TaskContinuationOptions -&gt; System.Threading.Tasks.Task&lt;'NewResult&gt;" Usage="task.ContinueWith (continuationFunction, state, continuationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object,TNewResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">
          <span data-ttu-id="040df-388">接續作業所產生的結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-388">The type of the result produced by the continuation.</span>
          </span>
        </typeparam>
        <param name="continuationFunction">
          <span data-ttu-id="040df-389">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-389">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="040df-390">When run, the delegate will be  passed the completed task and the caller-supplied state object as arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-390">When run, the delegate will be  passed the completed task and the caller-supplied state object as arguments.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="040df-391">An object representing data to be used by the continuation function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-391">An object representing data to be used by the continuation function.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="040df-392">Options for when the continuation is scheduled and how it behaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-392">Options for when the continuation is scheduled and how it behaves.</span>
          </span>
          <span data-ttu-id="040df-393">This includes criteria, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-393">This includes criteria, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-394">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-394">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="040df-395">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-395">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-396">傳回<xref:System.Threading.Tasks.Task%601>將不進行執行排程目前的工作完成為止，是否因為成功執行到完成為止，判定為失敗，因為發生未處理的例外狀況，或因取消提早結束時完成。</span><span class="sxs-lookup"><span data-stu-id="040df-396">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current  task has completed, whether it completes due to running to completion successfully, faulting due  to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 <span data-ttu-id="040df-397">`continuationFunction`、 在執行時，應傳回<xref:System.Threading.Tasks.Task%601>。</span><span class="sxs-lookup"><span data-stu-id="040df-397">The `continuationFunction`, when executed, should return a <xref:System.Threading.Tasks.Task%601>.</span></span> <span data-ttu-id="040df-398">此工作的完成狀態會傳輸至 ContinueWith 呼叫傳回的工作。</span><span class="sxs-lookup"><span data-stu-id="040df-398">This task's completion state will be transferred to the task returned from the ContinueWith call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="040df-399">The <paramref name="continuationFunction" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-399">The <paramref name="continuationFunction" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="040df-400">The <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-400">The <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object,TNewResult&gt; continuationFunction, object state, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`3&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object, !!TNewResult&gt; continuationFunction, object state, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueWith(Of TNewResult) (continuationFunction As Func(Of Task(Of TResult), Object, TNewResult), state As Object, scheduler As TaskScheduler) As Task(Of TNewResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^, TNewResult&gt; ^ continuationFunction, System::Object ^ state, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Func&lt;System.Threading.Tasks.Task&lt;'Result&gt;, obj, 'NewResult&gt; * obj * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'NewResult&gt;" Usage="task.ContinueWith (continuationFunction, state, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object,TNewResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">
          <span data-ttu-id="040df-401">接續作業所產生的結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-401">The type of the result produced by the continuation.</span>
          </span>
        </typeparam>
        <param name="continuationFunction">
          <span data-ttu-id="040df-402">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-402">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="040df-403">When run, the delegate will be passed the completed task and the caller-supplied state object as arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-403">When run, the delegate will be passed the completed task and the caller-supplied state object as arguments.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="040df-404">An object representing data to be used by the continuation function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-404">An object representing data to be used by the continuation function.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="040df-405">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its execution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-405">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its execution.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-406">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-406">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="040df-407">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-407">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-408">傳回<xref:System.Threading.Tasks.Task%601>將不進行執行排程目前的工作完成為止，是否因為成功執行到完成為止，判定為失敗，因為發生未處理的例外狀況，或因取消提早結束時完成。</span><span class="sxs-lookup"><span data-stu-id="040df-408">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current task has  completed, whether it completes due to running to completion successfully, faulting due to an  unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="040df-409">The <paramref name="scheduler" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-409">The <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt; continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`2&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, !!TNewResult&gt; continuationFunction, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, TNewResult&gt; ^ continuationFunction, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Func&lt;System.Threading.Tasks.Task&lt;'Result&gt;, 'NewResult&gt; * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'NewResult&gt;" Usage="task.ContinueWith (continuationFunction, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,TNewResult&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">
          <span data-ttu-id="040df-410">接續作業所產生的結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-410">The type of the result produced by the continuation.</span>
          </span>
        </typeparam>
        <param name="continuationFunction">
          <span data-ttu-id="040df-411">A function to run according the condition specified in <c>continuationOptions</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-411">A function to run according the condition specified in <c>continuationOptions</c>.</span>
          </span>
          <span data-ttu-id="040df-412">When run, the delegate will be passed as an argument this completed task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-412">When run, the delegate will be passed as an argument this completed task.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="040df-413">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-413">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="040df-414">Options for when the continuation is scheduled and how it behaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-414">Options for when the continuation is scheduled and how it behaves.</span>
          </span>
          <span data-ttu-id="040df-415">This includes criteria, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-415">This includes criteria, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="040df-416">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its execution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-416">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its execution.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-417">Creates a continuation that executes according the condition specified in <paramref name="continuationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-417">Creates a continuation that executes according the condition specified in <paramref name="continuationOptions" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="040df-418">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-418">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-419">傳回<xref:System.Threading.Tasks.Task%601>將不進行執行排程目前的工作完成為止，是否因為成功執行到完成為止，判定為失敗，因為發生未處理的例外狀況，或因取消提早結束時完成。</span><span class="sxs-lookup"><span data-stu-id="040df-419">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current task has completed, whether it completes due to running to completion successfully, faulting due to an unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 <span data-ttu-id="040df-420">`continuationFunction`、 在執行時，應傳回<xref:System.Threading.Tasks.Task%601>。</span><span class="sxs-lookup"><span data-stu-id="040df-420">The `continuationFunction`, when executed, should return a <xref:System.Threading.Tasks.Task%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="040df-421">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-421">The <see cref="T:System.Threading.Tasks.Task`1" /> has been disposed.</span>
          </span>
          <span data-ttu-id="040df-422">-or-  The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-422">-or-  The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="040df-423">The <paramref name="continuationFunction" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-423">The <paramref name="continuationFunction" /> argument is null.</span>
          </span>
          <span data-ttu-id="040df-424">-or-  The <paramref name="scheduler" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-424">-or-  The <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="040df-425">The <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-425">The <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueWith&lt;TNewResult&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TNewResult&gt; ContinueWith&lt;TNewResult&gt; (Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,object,TNewResult&gt; continuationFunction, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!!TNewResult&gt; ContinueWith&lt;TNewResult&gt;(class System.Func`3&lt;class System.Threading.Tasks.Task`1&lt;!TResult&gt;, object, !!TNewResult&gt; continuationFunction, object state, valuetype System.Threading.CancellationToken cancellationToken, valuetype System.Threading.Tasks.TaskContinuationOptions continuationOptions, class System.Threading.Tasks.TaskScheduler scheduler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNewResult&gt;&#xA; System::Threading::Tasks::Task&lt;TNewResult&gt; ^ ContinueWith(Func&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^, System::Object ^, TNewResult&gt; ^ continuationFunction, System::Object ^ state, System::Threading::CancellationToken cancellationToken, System::Threading::Tasks::TaskContinuationOptions continuationOptions, System::Threading::Tasks::TaskScheduler ^ scheduler);" />
      <MemberSignature Language="F#" Value="override this.ContinueWith : Func&lt;System.Threading.Tasks.Task&lt;'Result&gt;, obj, 'NewResult&gt; * obj * System.Threading.CancellationToken * System.Threading.Tasks.TaskContinuationOptions * System.Threading.Tasks.TaskScheduler -&gt; System.Threading.Tasks.Task&lt;'NewResult&gt;" Usage="task.ContinueWith (continuationFunction, state, cancellationToken, continuationOptions, scheduler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TNewResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNewResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuationFunction" Type="System.Func&lt;System.Threading.Tasks.Task&lt;TResult&gt;,System.Object,TNewResult&gt;" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      </Parameters>
      <Docs>
        <typeparam name="TNewResult">
          <span data-ttu-id="040df-426">接續作業所產生的結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-426">The type of the result produced by the continuation.</span>
          </span>
        </typeparam>
        <param name="continuationFunction">
          <span data-ttu-id="040df-427">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-427">A function to run when the <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
          <span data-ttu-id="040df-428">When run, the delegate will be  passed the completed task and the caller-supplied state object as arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-428">When run, the delegate will be  passed the completed task and the caller-supplied state object as arguments.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="040df-429">An object representing data to be used by the continuation function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-429">An object representing data to be used by the continuation function.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="040df-430">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-430">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new task.</span>
          </span>
        </param>
        <param name="continuationOptions">
          <span data-ttu-id="040df-431">Options for when the continuation is scheduled and how it behaves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-431">Options for when the continuation is scheduled and how it behaves.</span>
          </span>
          <span data-ttu-id="040df-432">This includes criteria, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-432">This includes criteria, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />, as well as execution options, such as <see cref="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />.</span>
          </span>
        </param>
        <param name="scheduler">
          <span data-ttu-id="040df-433">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its execution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-433">The <see cref="T:System.Threading.Tasks.TaskScheduler" /> to associate with the continuation task and to use for its execution.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="040df-434">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-434">Creates a continuation that executes when the target <see cref="T:System.Threading.Tasks.Task`1" /> completes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="040df-435">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-435">A new continuation <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-436">傳回<xref:System.Threading.Tasks.Task%601>將不進行執行排程目前的工作完成為止，是否因為成功執行到完成為止，判定為失敗，因為發生未處理的例外狀況，或因取消提早結束時完成。</span><span class="sxs-lookup"><span data-stu-id="040df-436">The returned <xref:System.Threading.Tasks.Task%601> will not be scheduled for execution until the current task has  completed, whether it completes due to running to completion successfully, faulting due to an  unhandled exception, or exiting out early due to being canceled.</span></span>  
  
 <span data-ttu-id="040df-437">`continuationFunction`、 在執行時，應傳回<xref:System.Threading.Tasks.Task%601>。</span><span class="sxs-lookup"><span data-stu-id="040df-437">The `continuationFunction`, when executed, should return a <xref:System.Threading.Tasks.Task%601>.</span></span> <span data-ttu-id="040df-438">此工作的完成狀態會傳送到從傳回的 task<xref:System.Threading.Tasks.Task%601.ContinueWith%2A?displayProperty=nameWithType>呼叫。</span><span class="sxs-lookup"><span data-stu-id="040df-438">This task's completion state will be transferred to the task returned from the <xref:System.Threading.Tasks.Task%601.ContinueWith%2A?displayProperty=nameWithType> call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="040df-439">The <paramref name="scheduler" /> argument is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-439">The <paramref name="scheduler" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="040df-440">The  <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-440">The  <paramref name="continuationOptions" /> argument specifies an invalid value for <see cref="T:System.Threading.Tasks.TaskContinuationOptions" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="040df-441">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-441">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Factory">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.TaskFactory&lt;TResult&gt; Factory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Threading.Tasks.TaskFactory`1&lt;!TResult&gt; Factory" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Task`1.Factory" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Factory As TaskFactory(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Threading::Tasks::TaskFactory&lt;TResult&gt; ^ Factory { System::Threading::Tasks::TaskFactory&lt;TResult&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Factory : System.Threading.Tasks.TaskFactory&lt;'Result&gt;" Usage="System.Threading.Tasks.Task&lt;'Result&gt;.Factory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.TaskFactory&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="040df-442">Provides access to factory methods for creating and configuring <see cref="T:System.Threading.Tasks.Task`1" /> instances.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-442">Provides access to factory methods for creating and configuring <see cref="T:System.Threading.Tasks.Task`1" /> instances.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="040df-443">Factory 物件，可以建立各種不同的 <see cref="T:System.Threading.Tasks.Task`1" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-443">A factory object that can create a variety of <see cref="T:System.Threading.Tasks.Task`1" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-444">這個屬性會傳回預設執行個體<xref:System.Threading.Tasks.TaskFactory%601>等同於呼叫的無參數所建立的類別<xref:System.Threading.Tasks.TaskFactory%601.%23ctor?displayProperty=nameWithType>建構函式。</span><span class="sxs-lookup"><span data-stu-id="040df-444">This property returns a default instance of the <xref:System.Threading.Tasks.TaskFactory%601> class that is identical to the one created by calling the parameterless <xref:System.Threading.Tasks.TaskFactory%601.%23ctor?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="040df-445">它有下列屬性值：</span><span class="sxs-lookup"><span data-stu-id="040df-445">It has the following property values:</span></span>  
  
|<span data-ttu-id="040df-446">屬性</span><span class="sxs-lookup"><span data-stu-id="040df-446">Property</span></span>|<span data-ttu-id="040df-447">值</span><span class="sxs-lookup"><span data-stu-id="040df-447">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Threading.Tasks.TaskFactory%601.CancellationToken%2A?displayProperty=nameWithType>|<xref:System.Threading.CancellationToken.None%2A?displayProperty=nameWithType>|  
|<xref:System.Threading.Tasks.TaskFactory%601.ContinuationOptions%2A?displayProperty=nameWithType>|<xref:System.Threading.Tasks.TaskContinuationOptions.None?displayProperty=nameWithType>|  
|<xref:System.Threading.Tasks.TaskFactory%601.CreationOptions%2A?displayProperty=nameWithType>|<xref:System.Threading.Tasks.TaskCreationOptions.None?displayProperty=nameWithType>|  
|<xref:System.Threading.Tasks.TaskFactory%601.Scheduler%2A?displayProperty=nameWithType>|<span data-ttu-id="040df-448">`null`或 <xref:System.Threading.Tasks.TaskScheduler.Current%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="040df-448">`null`, or <xref:System.Threading.Tasks.TaskScheduler.Current%2A?displayProperty=nameWithType></span></span>|  
  
 <span data-ttu-id="040df-449">這個屬性的最常見用法是以建立並啟動新工作的單一呼叫中<xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="040df-449">The most common use of this property is to create and start a new task in a single call to the <xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="040df-450">從開始[!INCLUDE[net_v45](~/includes/net-v45-md.md)]、<xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType>方法提供最簡單的方式建立<xref:System.Threading.Tasks.Task%601>使用預設組態值的物件。</span><span class="sxs-lookup"><span data-stu-id="040df-450">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Threading.Tasks.Task.Run%2A?displayProperty=nameWithType> method provides the easiest way to create a <xref:System.Threading.Tasks.Task%601> object with default configuration values.</span></span>  
  
 <span data-ttu-id="040df-451">下列範例會使用靜態<xref:System.Threading.Tasks.Task%601.Factory%2A>屬性使三次呼叫<xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="040df-451">The following example uses the static <xref:System.Threading.Tasks.Task%601.Factory%2A> property to make three calls to the <xref:System.Threading.Tasks.TaskFactory%601.StartNew%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="040df-452">在第一個啟動`Task<Int32>`物件，它會執行，則傳回 1 的 lambda 運算式。</span><span class="sxs-lookup"><span data-stu-id="040df-452">The first starts a `Task<Int32>` object, which executes a lambda expression that returns 1.</span></span> <span data-ttu-id="040df-453">在第二個啟動`Task<Test>`物件，它會執行具現化新的 lambda 運算式`Test`執行個體。</span><span class="sxs-lookup"><span data-stu-id="040df-453">The second starts a `Task<Test>` object, which executes a lambda expression that instantiates a new `Test` instance.</span></span> <span data-ttu-id="040df-454">在第三個啟動 ' 工作 < 字串</span><span class="sxs-lookup"><span data-stu-id="040df-454">The third starts a \`Task<String</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter">
      <MemberSignature Language="C#" Value="public System.Runtime.CompilerServices.TaskAwaiter&lt;TResult&gt; GetAwaiter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.TaskAwaiter`1&lt;!TResult&gt; GetAwaiter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Task`1.GetAwaiter" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAwaiter () As TaskAwaiter(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::CompilerServices::TaskAwaiter&lt;TResult&gt; GetAwaiter();" />
      <MemberSignature Language="F#" Value="override this.GetAwaiter : unit -&gt; System.Runtime.CompilerServices.TaskAwaiter&lt;'Result&gt;" Usage="task.GetAwaiter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.TaskAwaiter&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="040df-455">Gets an awaiter used to await this <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-455">Gets an awaiter used to await this <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="040df-456">An awaiter instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-456">An awaiter instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-457">這個方法僅供編譯器使用者，而不是程式碼中的直接使用。</span><span class="sxs-lookup"><span data-stu-id="040df-457">This method is intended for compiler user rather than use directly in code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public TResult Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TResult Result" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Task`1.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TResult Result { TResult get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : 'Result" Usage="System.Threading.Tasks.Task&lt;'Result&gt;.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="040df-458">Gets the result value of this <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-458">Gets the result value of this <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="040df-459">結果值，這個<see cref="T:System.Threading.Tasks.Task`1" />，它是工作的類型參數相同的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-459">The result value of this <see cref="T:System.Threading.Tasks.Task`1" />, which is of the same type as the task's type parameter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="040df-460">存取屬性的 get 存取子封鎖呼叫執行緒，直到非同步作業已完成。它相當於呼叫<xref:System.Threading.Tasks.Task.Wait%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="040df-460">Accessing the property's get accessor blocks the calling thread until the asynchronous operation is complete; it is equivalent to calling the <xref:System.Threading.Tasks.Task.Wait%2A> method.</span></span>  
  
 <span data-ttu-id="040df-461">一旦可以使用作業的結果，它已儲存，而且在後續呼叫會立即傳回<xref:System.Threading.Tasks.Task%601.Result%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="040df-461">Once the result of an operation is available, it is stored and is returned immediately on subsequent calls to the <xref:System.Threading.Tasks.Task%601.Result%2A> property.</span></span> <span data-ttu-id="040df-462">請注意，如果工作的作業期間發生例外狀況，或已取消工作，<xref:System.Threading.Tasks.Task%601.Result%2A>屬性不會傳回值。</span><span class="sxs-lookup"><span data-stu-id="040df-462">Note that, if an exception occurred during the operation of the task, or if the task has been cancelled, the <xref:System.Threading.Tasks.Task%601.Result%2A> property does not return a value.</span></span> <span data-ttu-id="040df-463">相反地，嘗試存取的屬性值會擲回<xref:System.AggregateException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="040df-463">Instead, attempting to access the property value throws an <xref:System.AggregateException> exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="040df-464">下列範例會計算每個名稱會當做命令列引數傳遞的目錄中的檔案中的位元組數的命令列公用程式。</span><span class="sxs-lookup"><span data-stu-id="040df-464">The following example is a command-line utility that calculates the number of bytes in the files in each directory whose name is passed as a command-line argument.</span></span> <span data-ttu-id="040df-465">如果目錄中包含的檔案，它會執行具現化的 lambda 運算式<xref:System.IO.FileStream>每個檔案的目錄中的物件，擷取的值和其<xref:System.IO.FileStream.Length%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="040df-465">If the directory contains files, it executes a lambda expression that instantiates a <xref:System.IO.FileStream> object for each file in the directory and retrieves the value of its <xref:System.IO.FileStream.Length%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="040df-466">如果目錄不包含任何檔案，則只會呼叫<xref:System.Threading.Tasks.Task.FromResult%2A>方法來建立工作的<xref:System.Threading.Tasks.Task%601.Result%2A?displayProperty=nameWithType>屬性為零 (0)。</span><span class="sxs-lookup"><span data-stu-id="040df-466">If a directory contains no files, it simply calls the <xref:System.Threading.Tasks.Task.FromResult%2A> method to create a task whose <xref:System.Threading.Tasks.Task%601.Result%2A?displayProperty=nameWithType> property is zero (0).</span></span> <span data-ttu-id="040df-467">在工作完成時，所有的目錄檔案中的位元組總數可用時，從<xref:System.Threading.Tasks.Task%601.Result%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="040df-467">When the tasks finish, the total number of bytes in all a directory's files is available from the <xref:System.Threading.Tasks.Task%601.Result%2A> property.</span></span>  
  
 [!code-csharp[System.Threading.Tasks.Task.FromResult#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.task.fromresult/cs/fromresult1.cs#1)]
 [!code-vb[System.Threading.Tasks.Task.FromResult#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.task.fromresult/vb/fromresult1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AggregateException">
          <span data-ttu-id="040df-468">The task was canceled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-468">The task was canceled.</span>
          </span>
          <span data-ttu-id="040df-469">The <see cref="P:System.AggregateException.InnerExceptions" /> collection contains a <see cref="T:System.Threading.Tasks.TaskCanceledException" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-469">The <see cref="P:System.AggregateException.InnerExceptions" /> collection contains a <see cref="T:System.Threading.Tasks.TaskCanceledException" /> object.</span>
          </span>
          <span data-ttu-id="040df-470">-or-  An exception was thrown during the execution of the task.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-470">-or-  An exception was thrown during the execution of the task.</span>
          </span>
          <span data-ttu-id="040df-471">The <see cref="P:System.AggregateException.InnerExceptions" /> collection contains information about the exception or exceptions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="040df-471">The <see cref="P:System.AggregateException.InnerExceptions" /> collection contains information about the exception or exceptions.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>