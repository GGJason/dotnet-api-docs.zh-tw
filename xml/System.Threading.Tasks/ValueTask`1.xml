<Type Name="ValueTask&lt;TResult&gt;" FullName="System.Threading.Tasks.ValueTask&lt;TResult&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="946e9ceec2676cfbc1b9aed30223dbac578baafd" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
    <Meta Name="ms.locfileid" Value="31910605" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct ValueTask&lt;TResult&gt; : IEquatable&lt;System.Threading.Tasks.ValueTask&lt;TResult&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ValueTask`1&lt;TResult&gt; extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Threading.Tasks.ValueTask`1&lt;!TResult&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.ValueTask`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure ValueTask(Of TResult)&#xA;Implements IEquatable(Of ValueTask(Of TResult))" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TResult&gt;&#xA;public value class ValueTask : IEquatable&lt;System::Threading::Tasks::ValueTask&lt;TResult&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Threading.Tasks.ValueTask&lt;TResult&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.AsyncMethodBuilder(typeof(System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TResult">
      <span data-ttu-id="9fd52-101">結果。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9fd52-101">The result.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="9fd52-102">提供包裝 <see cref="T:System.Threading.Tasks.Task`1" /> 和 <typeparamref name="TResult" /> 的實值型別，只會使用其中之一。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9fd52-102">Provides a value type that wraps a <see cref="T:System.Threading.Tasks.Task`1" /> and a <typeparamref name="TResult" />, only one of which is used.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[ 

## Remarks  
<span data-ttu-id="9fd52-103">方法可能會傳回這個實值類型時，它有可能其作業的結果，以同步方式，將可以使用，而且它有預計要叫用執行個體經常會配置新的成本<xref:System.Threading.Tasks.Task%601>每個呼叫將會是代價。</span><span class="sxs-lookup"><span data-stu-id="9fd52-103">A method may return an instance of this value type when it's likely that the result of its operation will be available synchronously, and when it's expected to be invoked so frequently that the cost of allocating a new <xref:System.Threading.Tasks.Task%601> for each call will be prohibitive.</span></span>   

<span data-ttu-id="9fd52-104">有其代價使用<xref:System.Threading.Tasks.ValueTask%601>而不是<xref:System.Threading.Tasks.Task%601>。</span><span class="sxs-lookup"><span data-stu-id="9fd52-104">There are tradeoffs to using a <xref:System.Threading.Tasks.ValueTask%601> instead of a <xref:System.Threading.Tasks.Task%601>.</span></span> <span data-ttu-id="9fd52-105">例如，雖然<xref:System.Threading.Tasks.ValueTask%601>有助於避免配置中的情況下成功的結果可用以同步方式，它也包含兩個欄位，而<xref:System.Threading.Tasks.Task%601>做為參考型別是單一欄位。</span><span class="sxs-lookup"><span data-stu-id="9fd52-105">For example, while a <xref:System.Threading.Tasks.ValueTask%601> can help avoid an allocation in the case where the successful result is available synchronously, it also contains two fields, whereas a <xref:System.Threading.Tasks.Task%601> as a reference type is a single field.</span></span> <span data-ttu-id="9fd52-106">這表示方法呼叫傳回值得的兩個欄位的資料，而非其中一個，這是要複製的詳細資料。</span><span class="sxs-lookup"><span data-stu-id="9fd52-106">This means that a method call returns two fields worth of data instead of one, which is more data to copy.</span></span> <span data-ttu-id="9fd52-107">它也表示，如果方法會傳回<xref:System.Threading.Tasks.ValueTask%601>等候非同步方法，狀態機器中的非同步方法將會是較大，因為它必須儲存結構包含兩個欄位，而非單一的參考。</span><span class="sxs-lookup"><span data-stu-id="9fd52-107">It also means, that if a method that returns a <xref:System.Threading.Tasks.ValueTask%601> is awaited within an async method, the state machine for that async method will be larger, because it must store a struct containing two fields instead of a single reference.</span></span>   

<span data-ttu-id="9fd52-108">針對以外耗用使用非同步作業的結果會使用 await，<xref:System.Threading.Tasks.ValueTask%601>可能會導致更錯綜複雜的程式設計模型需要更多的配置。</span><span class="sxs-lookup"><span data-stu-id="9fd52-108">For uses other than consuming the result of an asynchronous operation using await, <xref:System.Threading.Tasks.ValueTask%601> can lead to a more convoluted programming model that requires more allocations.</span></span> <span data-ttu-id="9fd52-109">例如，請考慮這個方法無法傳回<xref:System.Threading.Tasks.Task%601>與快取的工作，做為一般的結果或<xref:System.Threading.Tasks.ValueTask%601>。</span><span class="sxs-lookup"><span data-stu-id="9fd52-109">For example, consider a method that could return either a <xref:System.Threading.Tasks.Task%601> with a cached task as a common result or a <xref:System.Threading.Tasks.ValueTask%601>.</span></span> <span data-ttu-id="9fd52-110">如果結果的取用者想要使用它做為<xref:System.Threading.Tasks.Task%601>類似的方法中<xref:System.Threading.Tasks.Task.WhenAll%2A>或<xref:System.Threading.Tasks.Task.WhenAny%2A>、<xref:System.Threading.Tasks.ValueTask%601>必須先轉換成<xref:System.Threading.Tasks.Task%601>使用<xref:System.Threading.Tasks.ValueTask%601.AsTask%2A>，而導致就已消除如果配置快取<xref:System.Threading.Tasks.Task%601>完全在第一次使用。</span><span class="sxs-lookup"><span data-stu-id="9fd52-110">If the consumer of the result wants to use it as a <xref:System.Threading.Tasks.Task%601> in a method like <xref:System.Threading.Tasks.Task.WhenAll%2A> or <xref:System.Threading.Tasks.Task.WhenAny%2A>, the <xref:System.Threading.Tasks.ValueTask%601> must first be converted to a <xref:System.Threading.Tasks.Task%601> using <xref:System.Threading.Tasks.ValueTask%601.AsTask%2A>, leading to an allocation that would have been avoided if a cached <xref:System.Threading.Tasks.Task%601> had been used in the first place.</span></span>   

<span data-ttu-id="9fd52-111">因此，任何非同步方法的預設選項應該是要傳回<xref:System.Threading.Tasks.Task>或<xref:System.Threading.Tasks.Task%601>。</span><span class="sxs-lookup"><span data-stu-id="9fd52-111">As such, the default choice for any asynchronous method should be to return a <xref:System.Threading.Tasks.Task> or <xref:System.Threading.Tasks.Task%601>.</span></span> <span data-ttu-id="9fd52-112">只有當效能分析證明值得應該<xref:System.Threading.Tasks.ValueTask%601>來取代<xref:System.Threading.Tasks.Task%601>。</span><span class="sxs-lookup"><span data-stu-id="9fd52-112">Only if performance analysis proves it worthwhile should a <xref:System.Threading.Tasks.ValueTask%601> be used instead of a <xref:System.Threading.Tasks.Task%601>.</span></span> <span data-ttu-id="9fd52-113">沒有非泛型版本的<xref:System.Threading.Tasks.ValueTask%601>，做為<xref:System.Threading.Tasks.Task.CompletedTask>屬性可能用來成功完成的單一案例中的方法，傳回送<xref:System.Threading.Tasks.Task>同步且已順利完成。</span><span class="sxs-lookup"><span data-stu-id="9fd52-113">There is no non-generic version of <xref:System.Threading.Tasks.ValueTask%601>, as the <xref:System.Threading.Tasks.Task.CompletedTask> property may be used to hand back a successfully completed singleton in the case where a method returning a <xref:System.Threading.Tasks.Task> completes synchronously and successfully.</span></span>   

> [!NOTE]
>  <span data-ttu-id="9fd52-114">使用<xref:System.Threading.Tasks.ValueTask%601>C# 7，支援類型，而且不支援任何版本的 Visual Basic。</span><span class="sxs-lookup"><span data-stu-id="9fd52-114">The use of the <xref:System.Threading.Tasks.ValueTask%601> type is supported starting with C# 7, and is not supported by any version of Visual Basic.</span></span>
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValueTask (System.Threading.Tasks.Task&lt;TResult&gt; task);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.Task`1&lt;!TResult&gt; task) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.#ctor(System.Threading.Tasks.Task{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (task As Task(Of TResult))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValueTask(System::Threading::Tasks::Task&lt;TResult&gt; ^ task);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="task" Type="System.Threading.Tasks.Task&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="task">
          <span data-ttu-id="9fd52-115">工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-115">The task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9fd52-116">使用所提供之代表作業的工作，初始化 <see cref="T:System.Threading.Tasks.ValueTask`1" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-116">Initializes a new instance of the <see cref="T:System.Threading.Tasks.ValueTask`1" /> class using the supplied task that represents the operation.</span>
          </span>
        </summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9fd52-117">
            <paramref name="task" /> 引數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-117">The <paramref name="task" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValueTask (TResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!TResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (result As TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValueTask(TResult result);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="result" Type="TResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="9fd52-118">結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-118">The result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9fd52-119">使用所提供之成功作業的結果，初始化 <see cref="T:System.Threading.Tasks.ValueTask`1" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-119">Initializes a new instance of the <see cref="T:System.Threading.Tasks.ValueTask`1" /> class using the supplied result of a successful operation.</span>
          </span>
        </summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValueTask (System.Threading.Tasks.Sources.IValueTaskSource&lt;TResult&gt; source, short token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.Sources.IValueTaskSource`1&lt;!TResult&gt; source, int16 token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.#ctor(System.Threading.Tasks.Sources.IValueTaskSource{`0},System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As IValueTaskSource(Of TResult), token As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValueTask(System::Threading::Tasks::Sources::IValueTaskSource&lt;TResult&gt; ^ source, short token);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.Threading.Tasks.Sources.IValueTaskSource&lt;TResult&gt;" />
        <Parameter Name="token" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="token">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsTask">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; AsTask ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; AsTask() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.AsTask" />
      <MemberSignature Language="VB.NET" Value="Public Function AsTask () As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;TResult&gt; ^ AsTask();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9fd52-120">擷取代表這個 <see cref="T:System.Threading.Tasks.ValueTask`1" /> 的 <see cref="T:System.Threading.Tasks.Task`1" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-120">Retrieves a <see cref="T:System.Threading.Tasks.Task`1" /> object that represents this <see cref="T:System.Threading.Tasks.ValueTask`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9fd52-121">如果存在，則為包裝在這個 <see cref="T:System.Threading.Tasks.ValueTask`1" /> 中的 <see cref="T:System.Threading.Tasks.Task`1" /> 物件；否則為代表結果的新 <see cref="T:System.Threading.Tasks.Task`1" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-121">The <see cref="T:System.Threading.Tasks.Task`1" /> object that is wrapped in this <see cref="T:System.Threading.Tasks.ValueTask`1" /> if one exists, or a new <see cref="T:System.Threading.Tasks.Task`1" /> object that represents the result.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureAwait">
      <MemberSignature Language="C#" Value="public System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable&lt;TResult&gt; ConfigureAwait (bool continueOnCapturedContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1&lt;!TResult&gt; ConfigureAwait(bool continueOnCapturedContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.ConfigureAwait(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConfigureAwait (continueOnCapturedContext As Boolean) As ConfiguredValueTaskAwaitable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::CompilerServices::ConfiguredValueTaskAwaitable&lt;TResult&gt; ConfigureAwait(bool continueOnCapturedContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continueOnCapturedContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="continueOnCapturedContext">
          <span data-ttu-id="9fd52-122">
            <see langword="true" /> 表示嘗試將接續封送處理回擷取的內容，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-122">
              <see langword="true" /> to attempt to marshal the continuation back to the captured context; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9fd52-123">設定此值的 awaiter。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-123">Configures an awaiter for this value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9fd52-124">所設定的 awaiter。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-124">The configured awaiter.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsyncMethodBuilder">
      <MemberSignature Language="C#" Value="public static System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder&lt;TResult&gt; CreateAsyncMethodBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1&lt;!TResult&gt; CreateAsyncMethodBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.CreateAsyncMethodBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAsyncMethodBuilder () As AsyncValueTaskMethodBuilder(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::CompilerServices::AsyncValueTaskMethodBuilder&lt;TResult&gt; CreateAsyncMethodBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9fd52-125">建立搭配非同步方法使用的方法產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-125">Creates a method builder for use with an async method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9fd52-126">所建立的產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-126">The created builder.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="9fd52-127">要與目前物件比較的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-127">The object to compare with the current object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9fd52-128">判斷指定的物件是否等於目前的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-128">Determines whether the specified object is equal to the current object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9fd52-129">如果指定的物件等於目前的物件，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-129">
              <see langword="true" /> if the specified object is equal to the current object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Threading.Tasks.ValueTask&lt;TResult&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Threading.Tasks.ValueTask`1&lt;!TResult&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.Equals(System.Threading.Tasks.ValueTask{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ValueTask(Of TResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Threading::Tasks::ValueTask&lt;TResult&gt; other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Threading.Tasks.ValueTask&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="9fd52-130">要與目前物件比較的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-130">The object to compare with the current object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9fd52-131">判斷指定的 <see cref="T:System.Threading.Tasks.ValueTask`1" /> 物件是否等於目前的 <see cref="T:System.Threading.Tasks.ValueTask`1" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-131">Determines whether the specified <see cref="T:System.Threading.Tasks.ValueTask`1" /> object is equal to the current <see cref="T:System.Threading.Tasks.ValueTask`1" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9fd52-132">如果指定的物件等於目前的物件，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-132">
              <see langword="true" /> if the specified object is equal to the current object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter">
      <MemberSignature Language="C#" Value="public System.Runtime.CompilerServices.ValueTaskAwaiter&lt;TResult&gt; GetAwaiter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.CompilerServices.ValueTaskAwaiter`1&lt;!TResult&gt; GetAwaiter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.GetAwaiter" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAwaiter () As ValueTaskAwaiter(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::CompilerServices::ValueTaskAwaiter&lt;TResult&gt; GetAwaiter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.ValueTaskAwaiter&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9fd52-133">建立此值的 awaiter。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-133">Creates an awaiter for this value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9fd52-134">awaiter。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-134">The awaiter.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9fd52-135">傳回這個執行個體的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-135">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9fd52-136">目前物件的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-136">The hash code for the current object.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCanceled">
      <MemberSignature Language="C#" Value="public bool IsCanceled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCanceled" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask`1.IsCanceled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCanceled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCanceled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fd52-137">取得值，指出這個物件是否代表已取消的作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-137">Gets a value that indicates whether this object represents a canceled operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fd52-138">
            <see langword="true" /> 如果這個物件代表已取消的作業。否則， <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-138">
              <see langword="true" /> if this object represents a canceled operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask`1.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fd52-139">取得值，指出這個物件是否代表已完成的作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-139">Gets a value that indicates whether this object represents a completed operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fd52-140">
            <see langword="true" /> 如果這個物件代表已完成的作業。否則， <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-140">
              <see langword="true" /> if this object represents a completed operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompletedSuccessfully">
      <MemberSignature Language="C#" Value="public bool IsCompletedSuccessfully { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompletedSuccessfully" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask`1.IsCompletedSuccessfully" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompletedSuccessfully As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompletedSuccessfully { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fd52-141">取得值，指出這個物件是否代表已成功完成的作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-141">Gets a value that indicates whether this object represents a successfully completed operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fd52-142">
            <see langword="true" /> 如果這個物件代表已成功完成的作業。否則， <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-142">
              <see langword="true" /> if this object represents a successfully completed operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFaulted">
      <MemberSignature Language="C#" Value="public bool IsFaulted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFaulted" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask`1.IsFaulted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFaulted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFaulted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fd52-143">取得值，指出這個物件是否代表失敗的作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-143">Gets a value that indicates whether this object represents a failed operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fd52-144">
            <see langword="true" /> 如果這個物件代表失敗的作業。否則， <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-144">
              <see langword="true" /> if this object represents a failed operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Threading.Tasks.ValueTask&lt;TResult&gt; left, System.Threading.Tasks.ValueTask&lt;TResult&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Threading.Tasks.ValueTask`1&lt;!TResult&gt; left, valuetype System.Threading.Tasks.ValueTask`1&lt;!TResult&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.op_Equality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ValueTask(Of TResult), right As ValueTask(Of TResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Threading::Tasks::ValueTask&lt;TResult&gt; left, System::Threading::Tasks::ValueTask&lt;TResult&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Threading.Tasks.ValueTask&lt;TResult&gt;" />
        <Parameter Name="right" Type="System.Threading.Tasks.ValueTask&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="9fd52-145">要比較的第一個值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-145">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="9fd52-146">要比較的第二個值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-146">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9fd52-147">比較兩個值是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-147">Compares two values for equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9fd52-148">若兩個 <see cref="T:System.Threading.Tasks.ValueTask`1" /> 值相等則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-148">
              <see langword="true" /> if the two <see cref="T:System.Threading.Tasks.ValueTask`1" /> values are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Threading.Tasks.ValueTask&lt;TResult&gt; left, System.Threading.Tasks.ValueTask&lt;TResult&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Threading.Tasks.ValueTask`1&lt;!TResult&gt; left, valuetype System.Threading.Tasks.ValueTask`1&lt;!TResult&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.op_Inequality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ValueTask(Of TResult), right As ValueTask(Of TResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Threading::Tasks::ValueTask&lt;TResult&gt; left, System::Threading::Tasks::ValueTask&lt;TResult&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Threading.Tasks.ValueTask&lt;TResult&gt;" />
        <Parameter Name="right" Type="System.Threading.Tasks.ValueTask&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="9fd52-149">要比較的第一個值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-149">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="9fd52-150">要比較的第二個值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-150">The seconed value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9fd52-151">判斷兩個 <see cref="T:System.Threading.Tasks.ValueTask`1" /> 值是否不相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-151">Determines whether two <see cref="T:System.Threading.Tasks.ValueTask`1" /> values are unequal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9fd52-152">若兩個 <see cref="T:System.Threading.Tasks.ValueTask`1" /> 值不相等則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-152">
              <see langword="true" /> if the two <see cref="T:System.Threading.Tasks.ValueTask`1" /> values are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Preserve">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;TResult&gt; Preserve ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Threading.Tasks.ValueTask`1&lt;!TResult&gt; Preserve() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.Preserve" />
      <MemberSignature Language="VB.NET" Value="Public Function Preserve () As ValueTask(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::ValueTask&lt;TResult&gt; Preserve();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public TResult Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TResult Result" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.ValueTask`1.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TResult Result { TResult get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9fd52-153">取得結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-153">Gets the result.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9fd52-154">結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-154">The result.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
## Remarks  
 <span data-ttu-id="9fd52-155">如果這個<xref:System.Threading.Tasks.ValueTask%601>成功的結果，這個屬性就會直接傳回的換行。</span><span class="sxs-lookup"><span data-stu-id="9fd52-155">If this <xref:System.Threading.Tasks.ValueTask%601> wraps a successful result, this property returns it directly.</span></span>

 <span data-ttu-id="9fd52-156">如果它所包裝<xref:System.Threading.Tasks.Task%601>，行為<xref:System.Threading.Tasks.ValueTask%601.Result%2A>類似的存取行為<xref:System.Threading.Tasks.Task%601.Result%2A>已包裝工作上： 如果工作尚未完成，存取屬性封鎖呼叫執行緒，直到完成為止; 如果工作已完成成功，則屬性會傳回結果。如果工作已發生錯誤，或已 cancellecd，存取屬性會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="9fd52-156">If it wraps a <xref:System.Threading.Tasks.Task%601>, the behavior of <xref:System.Threading.Tasks.ValueTask%601.Result%2A> is similar to the behavior of accessing <xref:System.Threading.Tasks.Task%601.Result%2A> on the wrapped task: if the task hasn't completed, accessing the property blocks the calling thread until it completes; if the task has completed successfully, the property returns the result; if the task has faulted or was cancellecd, accessing the property throws an exception.</span></span> <span data-ttu-id="9fd52-157">擲回的例外狀況不會包裝在<xref:System.AggregateException>，這是不同的行為<xref:System.Threading.Tasks.Task%601.Result%2A>同樣的情況下。</span><span class="sxs-lookup"><span data-stu-id="9fd52-157">The thrown exception is not wrapped in an <xref:System.AggregateException>, which is different from the behavior of <xref:System.Threading.Tasks.Task%601.Result%2A> in the same situation.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.ValueTask`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9fd52-158">傳回代表目前物件的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-158">Returns a string that represents the current object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9fd52-159">表示目前物件的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fd52-159">A string that represents the current object.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>