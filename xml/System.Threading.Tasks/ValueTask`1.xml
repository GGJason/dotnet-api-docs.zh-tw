<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ValueTask`1.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55f78221c1b0cfa096a6ac681b4867a96f0e80e0e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5f78221c1b0cfa096a6ac681b4867a96f0e80e0e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ValueTask`1">
          <source>The result.</source>
          <target state="translated">結果。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Threading.Tasks.ValueTask`1">
          <source>Provides a value type that wraps a <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> and a <ph id="ph2">&lt;typeparamref name="TResult" /&gt;</ph>, only one of which is used.</source>
          <target state="translated">提供包裝 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> 和 <ph id="ph2">&lt;typeparamref name="TResult" /&gt;</ph> 的實值型別，只會使用其中之一。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ValueTask`1">
          <source>A method may return an instance of this value type when it's likely that the result of its operation will be available synchronously, and when it's expected to be invoked so frequently that the cost of allocating a new <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> for each call will be prohibitive.</source>
          <target state="translated">方法可能會傳回這個實值類型時，它有可能其作業的結果，以同步方式，將可以使用，而且它有預計要叫用執行個體經常會配置新的成本<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>每個呼叫將會是代價。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ValueTask`1">
          <source>There are tradeoffs to using a <ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph> instead of a <ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>.</source>
          <target state="translated">有其代價使用<ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph>而不是<ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ValueTask`1">
          <source>For example, while a <ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph> can help avoid an allocation in the case where the successful result is available synchronously, it also contains two fields, whereas a <ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> as a reference type is a single field.</source>
          <target state="translated">例如，雖然<ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph>有助於避免配置中的情況下成功的結果可用以同步方式，它也包含兩個欄位，而<ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>做為參考型別是單一欄位。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ValueTask`1">
          <source>This means that a method call returns two fields worth of data instead of one, which is more data to copy.</source>
          <target state="translated">這表示方法呼叫傳回值得的兩個欄位的資料，而非其中一個，這是要複製的詳細資料。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ValueTask`1">
          <source>It also means, that if a method that returns a <ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph> is awaited within an async method, the state machine for that async method will be larger, because it must store a struct containing two fields instead of a single reference.</source>
          <target state="translated">它也表示，如果方法會傳回<ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph>等候非同步方法，狀態機器中的非同步方法將會是較大，因為它必須儲存結構包含兩個欄位，而非單一的參考。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ValueTask`1">
          <source>For uses other than consuming the result of an asynchronous operation using await, <ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph> can lead to a more convoluted programming model that requires more allocations.</source>
          <target state="translated">針對以外耗用使用非同步作業的結果會使用 await，<ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph>可能會導致更錯綜複雜的程式設計模型需要更多的配置。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ValueTask`1">
          <source>For example, consider a method that could return either a <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> with a cached task as a common result or a <ph id="ph2">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph>.</source>
          <target state="translated">例如，請考慮這個方法無法傳回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>與快取的工作，做為一般的結果或<ph id="ph2">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ValueTask`1">
          <source>If the consumer of the result wants to use it as a <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> in a method like <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.WhenAll%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Threading.Tasks.Task.WhenAny%2A&gt;</ph>, the <ph id="ph4">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph> must first be converted to a <ph id="ph5">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> using <ph id="ph6">&lt;xref:System.Threading.Tasks.ValueTask%601.AsTask%2A&gt;</ph>, leading to an allocation that would have been avoided if a cached <ph id="ph7">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> had been used in the first place.</source>
          <target state="translated">如果結果的取用者想要使用它做為<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>類似的方法中<ph id="ph2">&lt;xref:System.Threading.Tasks.Task.WhenAll%2A&gt;</ph>或<ph id="ph3">&lt;xref:System.Threading.Tasks.Task.WhenAny%2A&gt;</ph>、<ph id="ph4">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph>必須先轉換成<ph id="ph5">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>使用<ph id="ph6">&lt;xref:System.Threading.Tasks.ValueTask%601.AsTask%2A&gt;</ph>，而導致就已消除如果配置快取<ph id="ph7">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>完全在第一次使用。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ValueTask`1">
          <source>As such, the default choice for any asynchronous method should be to return a <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> or <ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>.</source>
          <target state="translated">因此，任何非同步方法的預設選項應該是要傳回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph>或<ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ValueTask`1">
          <source>Only if performance analysis proves it worthwhile should a <ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph> be used instead of a <ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>.</source>
          <target state="translated">只有當效能分析證明值得應該<ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph>來取代<ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ValueTask`1">
          <source>There is no non-generic version of <ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph>, as the <ph id="ph2">&lt;xref:System.Threading.Tasks.Task.CompletedTask&gt;</ph> property may be used to hand back a successfully completed singleton in the case where a method returning a <ph id="ph3">&lt;xref:System.Threading.Tasks.Task&gt;</ph> completes synchronously and successfully.</source>
          <target state="translated">沒有非泛型版本的<ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph>，做為<ph id="ph2">&lt;xref:System.Threading.Tasks.Task.CompletedTask&gt;</ph>屬性可能用來成功完成的單一案例中的方法，傳回送<ph id="ph3">&lt;xref:System.Threading.Tasks.Task&gt;</ph>同步且已順利完成。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ValueTask`1">
          <source>The use of the <ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph> type is supported starting with C# 7, and is not supported by any version of Visual Basic.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph>C# 7，支援類型，而且不支援任何版本的 Visual Basic。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.#ctor(System.Threading.Tasks.Task{`0})">
          <source>The task.</source>
          <target state="translated">工作。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.#ctor(System.Threading.Tasks.Task{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph> class using the supplied task that represents the operation.</source>
          <target state="translated">使用所提供之代表作業的工作，初始化 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.#ctor(System.Threading.Tasks.Task{`0})">
          <source>The <ph id="ph1">&lt;paramref name="task" /&gt;</ph> argument is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="task" /&gt;</ph> 引數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.#ctor(`0)">
          <source>The result.</source>
          <target state="translated">結果。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.#ctor(`0)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph> class using the supplied result of a successful operation.</source>
          <target state="translated">使用所提供之成功作業的結果，初始化 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.AsTask">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> object that represents this <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph>.</source>
          <target state="translated">擷取代表這個 <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.AsTask">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> object that is wrapped in this <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph> if one exists, or a new <ph id="ph3">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> object that represents the result.</source>
          <target state="translated">如果存在，則為包裝在這個 <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph> 中的 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> 物件；否則為代表結果的新 <ph id="ph3">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.ConfigureAwait(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to attempt to marshal the continuation back to the captured context; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示嘗試將接續封送處理回擷取的內容，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.ConfigureAwait(System.Boolean)">
          <source>Configures an awaiter for this value.</source>
          <target state="translated">設定此值的 awaiter。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.ConfigureAwait(System.Boolean)">
          <source>The configured awaiter.</source>
          <target state="translated">所設定的 awaiter。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.CreateAsyncMethodBuilder">
          <source>Creates a method builder for use with an async method.</source>
          <target state="translated">建立搭配非同步方法使用的方法產生器。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.CreateAsyncMethodBuilder">
          <source>The created builder.</source>
          <target state="translated">所建立的產生器。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.Equals(System.Object)">
          <source>The object to compare with the current object.</source>
          <target state="translated">要與目前物件比較的物件。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.Equals(System.Object)">
          <source>Determines whether the specified object is equal to the current object.</source>
          <target state="translated">判斷指定的物件是否等於目前的物件。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified object is equal to the current object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定的物件等於目前的物件，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.Equals(System.Threading.Tasks.ValueTask{`0})">
          <source>The object to compare with the current object.</source>
          <target state="translated">要與目前物件比較的物件。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.Equals(System.Threading.Tasks.ValueTask{`0})">
          <source>Determines whether the specified <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph> object is equal to the current <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph> object.</source>
          <target state="translated">判斷指定的 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph> 物件是否等於目前的 <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.Equals(System.Threading.Tasks.ValueTask{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified object is equal to the current object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定的物件等於目前的物件，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.GetAwaiter">
          <source>Creates an awaiter for this value.</source>
          <target state="translated">建立此值的 awaiter。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.GetAwaiter">
          <source>The awaiter.</source>
          <target state="translated">awaiter。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">傳回這個執行個體的雜湊碼。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.GetHashCode">
          <source>The hash code for the current object.</source>
          <target state="translated">目前物件的雜湊碼。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.ValueTask`1.IsCanceled">
          <source>Gets a value that indicates whether this object represents a canceled operation.</source>
          <target state="translated">取得值，指出這個物件是否代表已取消的作業。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ValueTask`1.IsCanceled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this object represents a canceled operation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 如果這個物件代表已取消的作業。否則， <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.ValueTask`1.IsCompleted">
          <source>Gets a value that indicates whether this object represents a completed operation.</source>
          <target state="translated">取得值，指出這個物件是否代表已完成的作業。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ValueTask`1.IsCompleted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this object represents a completed operation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 如果這個物件代表已完成的作業。否則， <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.ValueTask`1.IsCompletedSuccessfully">
          <source>Gets a value that indicates whether this object represents a successfully completed operation.</source>
          <target state="translated">取得值，指出這個物件是否代表已成功完成的作業。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ValueTask`1.IsCompletedSuccessfully">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this object represents a successfully completed operation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 如果這個物件代表已成功完成的作業。否則， <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.ValueTask`1.IsFaulted">
          <source>Gets a value that indicates whether this object represents a failed operation.</source>
          <target state="translated">取得值，指出這個物件是否代表失敗的作業。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ValueTask`1.IsFaulted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this object represents a failed operation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 如果這個物件代表失敗的作業。否則， <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.op_Equality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.op_Equality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})">
          <source>The second value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.op_Equality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})">
          <source>Compares two values for equality.</source>
          <target state="translated">比較兩個值是否相等。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.op_Equality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph> values are equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若兩個 <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph> 值相等則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.op_Inequality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})">
          <source>The first value to compare.</source>
          <target state="translated">要比較的第一個值。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.op_Inequality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})">
          <source>The seconed value to compare.</source>
          <target state="translated">要比較的第二個值。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.op_Inequality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})">
          <source>Determines whether two <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph> values are unequal.</source>
          <target state="translated">判斷兩個 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph> 值是否不相等。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.op_Inequality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph> values are not equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若兩個 <ph id="ph2">&lt;see cref="T:System.Threading.Tasks.ValueTask`1" /&gt;</ph> 值不相等則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.ValueTask`1.Result">
          <source>Gets the result.</source>
          <target state="translated">取得結果。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ValueTask`1.Result">
          <source>The result.</source>
          <target state="translated">結果。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ValueTask`1.Result">
          <source>If this <ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph> wraps a successful result, this property returns it directly.</source>
          <target state="translated">如果這個<ph id="ph1">&lt;xref:System.Threading.Tasks.ValueTask%601&gt;</ph>成功的結果，這個屬性就會直接傳回的換行。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ValueTask`1.Result">
          <source>If it wraps a <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>, the behavior of <ph id="ph2">&lt;xref:System.Threading.Tasks.ValueTask%601.Result%2A&gt;</ph> is similar to the behavior of accessing <ph id="ph3">&lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt;</ph> on the wrapped task: if the task hasn't completed, accessing the property blocks the calling thread until it completes; if the task has completed successfully, the property returns the result; if the task has faulted or was cancellecd, accessing the property throws an exception.</source>
          <target state="translated">如果它所包裝<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>，行為<ph id="ph2">&lt;xref:System.Threading.Tasks.ValueTask%601.Result%2A&gt;</ph>類似的存取行為<ph id="ph3">&lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt;</ph>已包裝工作上： 如果工作尚未完成，存取屬性封鎖呼叫執行緒，直到完成為止; 如果工作已完成成功，則屬性會傳回結果。如果工作已發生錯誤，或已 cancellecd，存取屬性會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ValueTask`1.Result">
          <source>The thrown exception is not wrapped in an <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph>, which is different from the behavior of <ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt;</ph> in the same situation.</source>
          <target state="translated">擲回的例外狀況不會包裝在<ph id="ph1">&lt;xref:System.AggregateException&gt;</ph>，這是不同的行為<ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt;</ph>同樣的情況下。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.ToString">
          <source>Returns a string that represents the current object.</source>
          <target state="translated">傳回代表目前物件的字串。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Threading.Tasks.ValueTask`1.ToString">
          <source>A string that represents the current object.</source>
          <target state="translated">表示目前物件的字串。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>