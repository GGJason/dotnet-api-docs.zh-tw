<Type Name="TaskCompletionSource&lt;TResult&gt;" FullName="System.Threading.Tasks.TaskCompletionSource&lt;TResult&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bc9b76ac45a3adba3b58c992af42343621829666" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46605328" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TaskCompletionSource&lt;TResult&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TaskCompletionSource`1&lt;TResult&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.TaskCompletionSource`1" />
  <TypeSignature Language="VB.NET" Value="Public Class TaskCompletionSource(Of TResult)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TResult&gt;&#xA;public ref class TaskCompletionSource" />
  <TypeSignature Language="F#" Value="type TaskCompletionSource&lt;'Result&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TResult">
      <span data-ttu-id="7161b-101">與這個 <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> 相關聯之結果值的類型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7161b-101">The type of the result value assocatied with this <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="7161b-102">代表未與委派繫結之 <see cref="T:System.Threading.Tasks.Task`1" /> 的生產者端，可提供透過 <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> 屬性對消費者端的存取。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7161b-102">Represents the producer side of a <see cref="T:System.Threading.Tasks.Task`1" /> unbound to a delegate, providing access to the consumer side through the <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> property.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7161b-103">在許多情況下，最好讓<xref:System.Threading.Tasks.Task%601>來代表外部的非同步作業。</span><span class="sxs-lookup"><span data-stu-id="7161b-103">In many scenarios, it is useful to enable a <xref:System.Threading.Tasks.Task%601> to represent an external asynchronous operation.</span></span> <span data-ttu-id="7161b-104"><xref:System.Threading.Tasks.TaskCompletionSource%601> 提供此用途。</span><span class="sxs-lookup"><span data-stu-id="7161b-104"><xref:System.Threading.Tasks.TaskCompletionSource%601> is provided for this purpose.</span></span> <span data-ttu-id="7161b-105">它可讓可以分配給取用者工作的建立。</span><span class="sxs-lookup"><span data-stu-id="7161b-105">It enables the creation of a task that can be handed out to consumers.</span></span> <span data-ttu-id="7161b-106">取用者可以使用工作的成員相同的方式，就像在任何其他處理工作成員變數的案例中。</span><span class="sxs-lookup"><span data-stu-id="7161b-106">The consumers can use the members of the task the same way as they would in any other scenario handling task member variables.</span></span> <span data-ttu-id="7161b-107">不過，不同於大部分的工作，建立由 TaskCompletionSource 工作的狀態會受到明確 TaskCompletionSource 上的方法。</span><span class="sxs-lookup"><span data-stu-id="7161b-107">However, unlike most tasks, the state of a task created by a TaskCompletionSource is controlled explicitly by the methods on TaskCompletionSource.</span></span> <span data-ttu-id="7161b-108">這可讓外部的非同步作業，才能傳播到基礎的工作完成。</span><span class="sxs-lookup"><span data-stu-id="7161b-108">This enables the completion of the external asynchronous operation to be propagated to the underlying Task.</span></span> <span data-ttu-id="7161b-109">區隔也可確保取用者不能轉換而不需要對應 TaskCompletionSource 存取狀態。</span><span class="sxs-lookup"><span data-stu-id="7161b-109">The separation also ensures that consumers are not able to transition the state without access to the corresponding TaskCompletionSource.</span></span> <span data-ttu-id="7161b-110">如需詳細資訊，請參閱文章[TaskCompletionSource 本質\<TResult >](http://blogs.msdn.com/b/pfxteam/archive/2009/06/02/9685804.aspx)中平行程式設計與.NET 部落格。</span><span class="sxs-lookup"><span data-stu-id="7161b-110">For more information, see the entry [The Nature of TaskCompletionSource\<TResult>](http://blogs.msdn.com/b/pfxteam/archive/2009/06/02/9685804.aspx) in the Parallel Programming with .NET blog.</span></span>  
  
 <span data-ttu-id="7161b-111">[平行擴充功能範例](http://go.microsoft.com/fwlink/?LinkID=165717)也包含範例，示範如何使用<xref:System.Threading.Tasks.TaskCompletionSource%601>。</span><span class="sxs-lookup"><span data-stu-id="7161b-111">The [Parallel Extensions samples](http://go.microsoft.com/fwlink/?LinkID=165717) also contain examples of how to use <xref:System.Threading.Tasks.TaskCompletionSource%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7161b-112">下列範例示範如何使用<xref:System.Threading.Tasks.TaskCompletionSource%601>:</span><span class="sxs-lookup"><span data-stu-id="7161b-112">The following example shows how to use a <xref:System.Threading.Tasks.TaskCompletionSource%601>:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.TaskCompletionSource#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.taskcompletionsource/cs/taskcompletionsource.cs#01)]
 [!code-vb[System.Threading.Tasks.TaskCompletionSource#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.taskcompletionsource/vb/taskcompletionsource.vb#01)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="7161b-113">所有成員<see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />是安全執行緒，且可能會從多個執行緒同時使用。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7161b-113">All members of <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> are thread-safe and may be used from multiple threads concurrently.</span>
      </span>
    </threadsafe>
    <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
      <span data-ttu-id="7161b-114">使用具有其他非同步模式的 TPL</span>
      <span class="sxs-lookup">
        <span data-stu-id="7161b-114">Using TPL with Other Asynchronous Patterns</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md">
      <span data-ttu-id="7161b-115">如何：將 EAP 模式包裝在工作中</span>
      <span class="sxs-lookup">
        <span data-stu-id="7161b-115">How to: Wrap EAP Patterns in a Task</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7161b-116">建立 <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-116">Creates a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCompletionSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCompletionSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7161b-117">建立 <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-117">Creates a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="7161b-118">使用具有其他非同步模式的 TPL</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-118">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md">
          <span data-ttu-id="7161b-119">如何：將 EAP 模式包裝在工作中</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-119">How to: Wrap EAP Patterns in a Task</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCompletionSource (object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCompletionSource(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt; : obj -&gt; System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt; state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="7161b-120">要當成基礎 <see cref="T:System.Threading.Tasks.Task`1" /> 之 AsyncState 的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-120">The state to use as the underlying <see cref="T:System.Threading.Tasks.Task`1" />'s AsyncState.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7161b-121">使用指定的狀態，建立 <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-121">Creates a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> with the specified state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="7161b-122">使用具有其他非同步模式的 TPL</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-122">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md">
          <span data-ttu-id="7161b-123">如何：將 EAP 模式包裝在工作中</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-123">How to: Wrap EAP Patterns in a Task</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCompletionSource (System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (creationOptions As TaskCreationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCompletionSource(System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt; : System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt; creationOptions" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="creationOptions">
          <span data-ttu-id="7161b-124">建立基礎 <see cref="T:System.Threading.Tasks.Task`1" /> 時要使用的選項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-124">The options to use when creating the underlying <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7161b-125">使用指定的選項，建立 <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-125">Creates a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> with the specified options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7161b-126"><xref:System.Threading.Tasks.Task%601>這個執行個體所建立且可透過其<xref:System.Threading.Tasks.TaskCompletionSource%601.Task%2A>屬性將會使用具現化指定`creationOptions`。</span><span class="sxs-lookup"><span data-stu-id="7161b-126">The <xref:System.Threading.Tasks.Task%601> created by this instance and accessible through its <xref:System.Threading.Tasks.TaskCompletionSource%601.Task%2A> property will be instantiated using the specified `creationOptions`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7161b-127">
            <paramref name="creationOptions" /> 代表搭配 <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> 使用的選項無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-127">The <paramref name="creationOptions" /> represent options invalid for use with a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="7161b-128">使用具有其他非同步模式的 TPL</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-128">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md">
          <span data-ttu-id="7161b-129">如何：將 EAP 模式包裝在工作中</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-129">How to: Wrap EAP Patterns in a Task</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCompletionSource (object state, System.Threading.Tasks.TaskCreationOptions creationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object state, valuetype System.Threading.Tasks.TaskCreationOptions creationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As Object, creationOptions As TaskCreationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCompletionSource(System::Object ^ state, System::Threading::Tasks::TaskCreationOptions creationOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt; : obj * System.Threading.Tasks.TaskCreationOptions -&gt; System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt;" Usage="new System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt; (state, creationOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="7161b-130">要當成基礎 <see cref="T:System.Threading.Tasks.Task`1" /> 之 AsyncState 的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-130">The state to use as the underlying <see cref="T:System.Threading.Tasks.Task`1" />'s AsyncState.</span>
          </span>
        </param>
        <param name="creationOptions">
          <span data-ttu-id="7161b-131">建立基礎 <see cref="T:System.Threading.Tasks.Task`1" /> 時要使用的選項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-131">The options to use when creating the underlying <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7161b-132">使用指定的狀態和選項，建立 <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-132">Creates a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> with the specified state and options.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7161b-133">
            <paramref name="creationOptions" /> 代表搭配 <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" /> 使用的選項無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-133">The <paramref name="creationOptions" /> represent options invalid for use with a <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="7161b-134">使用具有其他非同步模式的 TPL</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-134">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md">
          <span data-ttu-id="7161b-135">如何：將 EAP 模式包裝在工作中</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-135">How to: Wrap EAP Patterns in a Task</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SetCanceled">
      <MemberSignature Language="C#" Value="public void SetCanceled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCanceled() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.SetCanceled" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCanceled ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCanceled();" />
      <MemberSignature Language="F#" Value="member this.SetCanceled : unit -&gt; unit" Usage="taskCompletionSource.SetCanceled " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7161b-136">將基礎 <see cref="T:System.Threading.Tasks.Task`1" /> 轉換為 <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> 狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-136">Transitions the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7161b-137">基礎 <see cref="T:System.Threading.Tasks.Task`1" /> 已處於三個最終狀態的其中一種：<see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />、<see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> 或 <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />，或是已經處置基礎 <see cref="T:System.Threading.Tasks.Task`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-137">The underlying <see cref="T:System.Threading.Tasks.Task`1" /> is already in one of the three final states: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />, or <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />, or if the underlying <see cref="T:System.Threading.Tasks.Task`1" /> has already been disposed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled" />
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="7161b-138">使用具有其他非同步模式的 TPL</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-138">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md">
          <span data-ttu-id="7161b-139">如何：將 EAP 模式包裝在工作中</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-139">How to: Wrap EAP Patterns in a Task</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md">
          <span data-ttu-id="7161b-140">工作取消</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-140">Task Cancellation</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetException">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7161b-141">將基礎 <see cref="T:System.Threading.Tasks.Task`1" /> 物件轉換為 <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> 狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-141">Transitions the underlying <see cref="T:System.Threading.Tasks.Task`1" /> object into the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetException">
      <MemberSignature Language="C#" Value="public void SetException (System.Collections.Generic.IEnumerable&lt;Exception&gt; exceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetException(class System.Collections.Generic.IEnumerable`1&lt;class System.Exception&gt; exceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Collections.Generic.IEnumerable{System.Exception})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetException (exceptions As IEnumerable(Of Exception))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetException(System::Collections::Generic::IEnumerable&lt;Exception ^&gt; ^ exceptions);" />
      <MemberSignature Language="F#" Value="member this.SetException : seq&lt;Exception&gt; -&gt; unit" Usage="taskCompletionSource.SetException exceptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exceptions" Type="System.Collections.Generic.IEnumerable&lt;System.Exception&gt;" />
      </Parameters>
      <Docs>
        <param name="exceptions">
          <span data-ttu-id="7161b-142">要繫結至這個 <see cref="T:System.Threading.Tasks.Task`1" /> 的例外狀況集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-142">The collection of exceptions to bind to this <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7161b-143">將基礎的 <see cref="T:System.Threading.Tasks.Task`1" /> 轉換到 <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> 狀態，並將它與例外狀況物件集合繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-143">Transitions the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and binds a collection of exception objects to it.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7161b-144">已處置 <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-144">The <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> was disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7161b-145">
            <paramref name="exceptions" /> 引數為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-145">The <paramref name="exceptions" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7161b-146">
            <paramref name="exceptions" /> 中有一或多個 Null 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-146">There are one or more null elements in <paramref name="exceptions" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7161b-147">基礎 <see cref="T:System.Threading.Tasks.Task`1" /> 已經為下列三種最終狀態之一：<see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />、<see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> 或 <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-147">The underlying <see cref="T:System.Threading.Tasks.Task`1" /> is already in one of the three final states: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />, or <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="7161b-148">使用具有其他非同步模式的 TPL</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-148">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md">
          <span data-ttu-id="7161b-149">如何：將 EAP 模式包裝在工作中</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-149">How to: Wrap EAP Patterns in a Task</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SetException">
      <MemberSignature Language="C#" Value="public void SetException (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetException(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetException(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="member this.SetException : Exception -&gt; unit" Usage="taskCompletionSource.SetException exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="7161b-150">要繫結至這個 <see cref="T:System.Threading.Tasks.Task`1" /> 的例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-150">The exception to bind to this <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7161b-151">嘗試將基礎的 <see cref="T:System.Threading.Tasks.Task`1" /> 轉換到 <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> 狀態，並將其與指定的例外狀況繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-151">Transitions the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and binds it to a specified exception.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7161b-152">已處置 <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-152">The <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> was disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7161b-153">
            <paramref name="exception" /> 引數為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-153">The <paramref name="exception" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7161b-154">基礎 <see cref="T:System.Threading.Tasks.Task`1" /> 已經為下列三種最終狀態之一：<see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />、<see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> 或 <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-154">The underlying <see cref="T:System.Threading.Tasks.Task`1" /> is already in one of the three final states: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />, or <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="7161b-155">使用具有其他非同步模式的 TPL</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-155">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md">
          <span data-ttu-id="7161b-156">如何：將 EAP 模式包裝在工作中</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-156">How to: Wrap EAP Patterns in a Task</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SetResult">
      <MemberSignature Language="C#" Value="public void SetResult (TResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResult(!TResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.SetResult(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResult (result As TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetResult(TResult result);" />
      <MemberSignature Language="F#" Value="member this.SetResult : 'Result -&gt; unit" Usage="taskCompletionSource.SetResult result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="TResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="7161b-157">要繫結至這個 <see cref="T:System.Threading.Tasks.Task`1" /> 的結果值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-157">The result value to bind to this <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7161b-158">將基礎 <see cref="T:System.Threading.Tasks.Task`1" /> 轉換為 <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" /> 狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-158">Transitions the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" /> state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7161b-159">已處置 <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-159">The <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> was disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7161b-160">基礎 <see cref="T:System.Threading.Tasks.Task`1" /> 已經為下列三種最終狀態之一：<see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />、<see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> 或 <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-160">The underlying <see cref="T:System.Threading.Tasks.Task`1" /> is already in one of the three final states: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />, <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />, or <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" />.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="7161b-161">使用具有其他非同步模式的 TPL</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-161">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md">
          <span data-ttu-id="7161b-162">如何：將 EAP 模式包裝在工作中</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-162">How to: Wrap EAP Patterns in a Task</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Task">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TResult&gt; Task { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task`1&lt;!TResult&gt; Task" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskCompletionSource`1.Task" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Task As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task&lt;TResult&gt; ^ Task { System::Threading::Tasks::Task&lt;TResult&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Task : System.Threading.Tasks.Task&lt;'Result&gt;" Usage="System.Threading.Tasks.TaskCompletionSource&lt;'Result&gt;.Task" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7161b-163">取得這個 <see cref="T:System.Threading.Tasks.Task`1" /> 所建立的 <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-163">Gets the <see cref="T:System.Threading.Tasks.Task`1" /> created by this <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7161b-164">傳回這個 <see cref="T:System.Threading.Tasks.Task`1" /> 所建立的 <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-164">Returns the <see cref="T:System.Threading.Tasks.Task`1" /> created by this <see cref="T:System.Threading.Tasks.TaskCompletionSource`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7161b-165">這個屬性可讓取用者存取<xref:System.Threading.Tasks.Task%601>，受到這個執行個體。</span><span class="sxs-lookup"><span data-stu-id="7161b-165">This property enables a consumer to access the <xref:System.Threading.Tasks.Task%601> that is controlled by this instance.</span></span> <span data-ttu-id="7161b-166">當您建立<xref:System.Threading.Tasks.TaskCompletionSource%601>物件，<xref:System.Threading.Tasks.Task.Status%2A>屬性的<xref:System.Threading.Tasks.Task%601>物件會傳回 <xref:System.Threading.Tasks.TaskStatus.WaitingForActivation></span><span class="sxs-lookup"><span data-stu-id="7161b-166">When you create a <xref:System.Threading.Tasks.TaskCompletionSource%601> object, the <xref:System.Threading.Tasks.Task.Status%2A> property of this <xref:System.Threading.Tasks.Task%601> object returns <xref:System.Threading.Tasks.TaskStatus.WaitingForActivation></span></span>  
  
 <span data-ttu-id="7161b-167"><xref:System.Threading.Tasks.TaskCompletionSource%601.SetResult%2A>， <xref:System.Threading.Tasks.TaskCompletionSource%601.SetException%2A>， <xref:System.Threading.Tasks.TaskCompletionSource%601.SetException%2A>，和<xref:System.Threading.Tasks.TaskCompletionSource%601.SetCanceled%2A>方法 （和其 「 試用 」 的變體） 在此執行個體上相關的狀態轉換中的所有結果基礎工作。</span><span class="sxs-lookup"><span data-stu-id="7161b-167">The <xref:System.Threading.Tasks.TaskCompletionSource%601.SetResult%2A>, <xref:System.Threading.Tasks.TaskCompletionSource%601.SetException%2A>, <xref:System.Threading.Tasks.TaskCompletionSource%601.SetException%2A>, and <xref:System.Threading.Tasks.TaskCompletionSource%601.SetCanceled%2A> methods (and their "Try" variants) on this instance all result in the relevant state transitions on this underlying Task.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="7161b-168">使用具有其他非同步模式的 TPL</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-168">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md">
          <span data-ttu-id="7161b-169">如何：將 EAP 模式包裝在工作中</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-169">How to: Wrap EAP Patterns in a Task</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md">
          <span data-ttu-id="7161b-170">以工作為基礎的非同步程式設計</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-170">Task-based Asynchronous Programming</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TrySetCanceled">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7161b-171">嘗試將基礎 <see cref="T:System.Threading.Tasks.Task`1" /> 轉換為 <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> 狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-171">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> state.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TrySetCanceled">
      <MemberSignature Language="C#" Value="public bool TrySetCanceled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySetCanceled() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled" />
      <MemberSignature Language="VB.NET" Value="Public Function TrySetCanceled () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrySetCanceled();" />
      <MemberSignature Language="F#" Value="member this.TrySetCanceled : unit -&gt; bool" Usage="taskCompletionSource.TrySetCanceled " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7161b-172">嘗試將基礎 <see cref="T:System.Threading.Tasks.Task`1" /> 轉換為 <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> 狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-172">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7161b-173">如果作業成功則為 true，如果作業未成功或物件已處置則為 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-173">True if the operation was successful; false if the operation was unsuccessful or the object has already been disposed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7161b-174">這項作業會傳回 false 如果<xref:System.Threading.Tasks.Task%601>已在其中三種最終狀態： <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>， <xref:System.Threading.Tasks.TaskStatus.Faulted>，或<xref:System.Threading.Tasks.TaskStatus.Canceled>。</span><span class="sxs-lookup"><span data-stu-id="7161b-174">This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span></span>  
  
 <span data-ttu-id="7161b-175">這個方法也會傳回 false，如果基礎<xref:System.Threading.Tasks.Task%601>已經過處置。</span><span class="sxs-lookup"><span data-stu-id="7161b-175">This method also returns false if the underlying <xref:System.Threading.Tasks.Task%601> has already been disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="7161b-176">使用具有其他非同步模式的 TPL</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-176">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md">
          <span data-ttu-id="7161b-177">如何：將 EAP 模式包裝在工作中</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-177">How to: Wrap EAP Patterns in a Task</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TrySetCanceled">
      <MemberSignature Language="C#" Value="public bool TrySetCanceled (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySetCanceled(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrySetCanceled(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.TrySetCanceled : System.Threading.CancellationToken -&gt; bool" Usage="taskCompletionSource.TrySetCanceled cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="7161b-178">取消語彙基元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-178">A cancellation token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7161b-179">嘗試將基礎 <see cref="T:System.Threading.Tasks.Task`1" /> 轉換為 <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> 狀態，並使取消語彙基元儲存於已取消的工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-179">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Canceled" /> state and enables a cancellation token to be stored in the canceled task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7161b-180">如果作業成功，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-180">
              <see langword="true" /> if the operation is successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7161b-181">方法會傳回 false，如果基礎<xref:System.Threading.Tasks.Task%601>物件已在下列三種最終狀態的其中一個。</span><span class="sxs-lookup"><span data-stu-id="7161b-181">The method returns false if the underlying <xref:System.Threading.Tasks.Task%601> object is already in one of the following three final states.</span></span>  
  
-   <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType>  
  
-   <xref:System.Threading.Tasks.TaskStatus.Faulted?displayProperty=nameWithType>  
  
-   <xref:System.Threading.Tasks.TaskStatus.RanToCompletion?displayProperty=nameWithType>  
  
 <span data-ttu-id="7161b-182">這個方法也會傳回`false`如果基礎<xref:System.Threading.Tasks.Task%601>物件已經過處置。</span><span class="sxs-lookup"><span data-stu-id="7161b-182">This method also returns `false` if the underlying <xref:System.Threading.Tasks.Task%601> object has already been disposed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TrySetException">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7161b-183">嘗試將基礎 <see cref="T:System.Threading.Tasks.Task`1" /> 物件轉換為 <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> 狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-183">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task`1" /> object into the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TrySetException">
      <MemberSignature Language="C#" Value="public bool TrySetException (System.Collections.Generic.IEnumerable&lt;Exception&gt; exceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySetException(class System.Collections.Generic.IEnumerable`1&lt;class System.Exception&gt; exceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Collections.Generic.IEnumerable{System.Exception})" />
      <MemberSignature Language="VB.NET" Value="Public Function TrySetException (exceptions As IEnumerable(Of Exception)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrySetException(System::Collections::Generic::IEnumerable&lt;Exception ^&gt; ^ exceptions);" />
      <MemberSignature Language="F#" Value="member this.TrySetException : seq&lt;Exception&gt; -&gt; bool" Usage="taskCompletionSource.TrySetException exceptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exceptions" Type="System.Collections.Generic.IEnumerable&lt;System.Exception&gt;" />
      </Parameters>
      <Docs>
        <param name="exceptions">
          <span data-ttu-id="7161b-184">要繫結至這個 <see cref="T:System.Threading.Tasks.Task`1" /> 的例外狀況集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-184">The collection of exceptions to bind to this <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7161b-185">嘗試將基礎的 <see cref="T:System.Threading.Tasks.Task`1" /> 轉換到 <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> 狀態，並將其與例外狀況物件集合繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-185">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and binds a collection of exception objects to it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7161b-186">如果作業成功則為 true，否則為 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-186">True if the operation was successful; otherwise, false.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7161b-187">這項作業會傳回 false 如果<xref:System.Threading.Tasks.Task%601>已在其中三種最終狀態： <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>， <xref:System.Threading.Tasks.TaskStatus.Faulted>，或<xref:System.Threading.Tasks.TaskStatus.Canceled>。</span><span class="sxs-lookup"><span data-stu-id="7161b-187">This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7161b-188">已處置 <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-188">The <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> was disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7161b-189">
            <paramref name="exceptions" /> 引數為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-189">The <paramref name="exceptions" /> argument is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7161b-190">
            <paramref name="exceptions" /> 中有一或多個 Null 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-190">There are one or more null elements in <paramref name="exceptions" />.</span>
          </span>
          <span data-ttu-id="7161b-191">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-191">-or-</span>
          </span>
          <span data-ttu-id="7161b-192">
            <paramref name="exceptions" /> 集合是空的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-192">The <paramref name="exceptions" /> collection is empty.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="7161b-193">使用具有其他非同步模式的 TPL</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-193">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md">
          <span data-ttu-id="7161b-194">如何：將 EAP 模式包裝在工作中</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-194">How to: Wrap EAP Patterns in a Task</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TrySetException">
      <MemberSignature Language="C#" Value="public bool TrySetException (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySetException(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrySetException(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="member this.TrySetException : Exception -&gt; bool" Usage="taskCompletionSource.TrySetException exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="7161b-195">要繫結至這個 <see cref="T:System.Threading.Tasks.Task`1" /> 的例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-195">The exception to bind to this <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7161b-196">嘗試將基礎的 <see cref="T:System.Threading.Tasks.Task`1" /> 轉換到 <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> 狀態，並將它與指定的例外狀況繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-196">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state and binds it to a specified exception.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7161b-197">如果作業成功則為 true，否則為 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-197">True if the operation was successful; otherwise, false.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7161b-198">這項作業會傳回 false 如果<xref:System.Threading.Tasks.Task%601>已在其中三種最終狀態： <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>， <xref:System.Threading.Tasks.TaskStatus.Faulted>，或<xref:System.Threading.Tasks.TaskStatus.Canceled>。</span><span class="sxs-lookup"><span data-stu-id="7161b-198">This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7161b-199">已處置 <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-199">The <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task" /> was disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7161b-200">
            <paramref name="exception" /> 引數為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-200">The <paramref name="exception" /> argument is null.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="7161b-201">使用具有其他非同步模式的 TPL</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-201">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md">
          <span data-ttu-id="7161b-202">如何：將 EAP 模式包裝在工作中</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-202">How to: Wrap EAP Patterns in a Task</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TrySetResult">
      <MemberSignature Language="C#" Value="public bool TrySetResult (TResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrySetResult(!TResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetResult(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function TrySetResult (result As TResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrySetResult(TResult result);" />
      <MemberSignature Language="F#" Value="member this.TrySetResult : 'Result -&gt; bool" Usage="taskCompletionSource.TrySetResult result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="TResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="7161b-203">要繫結至這個 <see cref="T:System.Threading.Tasks.Task`1" /> 的結果值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-203">The result value to bind to this <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7161b-204">嘗試將基礎 <see cref="T:System.Threading.Tasks.Task`1" /> 轉換為 <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" /> 狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-204">Attempts to transition the underlying <see cref="T:System.Threading.Tasks.Task`1" /> into the <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion" /> state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7161b-205">如果作業成功則為 true，否則為 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-205">True if the operation was successful; otherwise, false.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7161b-206">這項作業會傳回 false 如果<xref:System.Threading.Tasks.Task%601>已在其中三種最終狀態： <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>， <xref:System.Threading.Tasks.TaskStatus.Faulted>，或<xref:System.Threading.Tasks.TaskStatus.Canceled>。</span><span class="sxs-lookup"><span data-stu-id="7161b-206">This operation will return false if the <xref:System.Threading.Tasks.Task%601> is already in one of the three final states: <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>, <xref:System.Threading.Tasks.TaskStatus.Faulted>, or <xref:System.Threading.Tasks.TaskStatus.Canceled>.</span></span>  
  
 <span data-ttu-id="7161b-207">這個方法也會傳回 false，如果基礎<xref:System.Threading.Tasks.Task%601>已經過處置。</span><span class="sxs-lookup"><span data-stu-id="7161b-207">This method also returns false if the underlying <xref:System.Threading.Tasks.Task%601> has already been disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/parallel-programming/using-tpl-with-other-asynchronous-patterns.md">
          <span data-ttu-id="7161b-208">使用具有其他非同步模式的 TPL</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-208">Using TPL with Other Asynchronous Patterns</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-wrap-eap-patterns-in-a-task.md">
          <span data-ttu-id="7161b-209">如何：將 EAP 模式包裝在工作中</span>
          <span class="sxs-lookup">
            <span data-stu-id="7161b-209">How to: Wrap EAP Patterns in a Task</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>