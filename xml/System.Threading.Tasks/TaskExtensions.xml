<Type Name="TaskExtensions" FullName="System.Threading.Tasks.TaskExtensions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="55bcf5ba97a33c52a44d852a41790412db487f07" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46692183" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class TaskExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TaskExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.TaskExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module TaskExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class TaskExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type TaskExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="28441-101">提供一組 static (Visual Basic 中是 Shared) 方法，以處理特定類型的 <see cref="T:System.Threading.Tasks.Task" /> 執行個體。</span>
      <span class="sxs-lookup">
        <span data-stu-id="28441-101">Provides a set of static (Shared in Visual Basic) methods for working with specific kinds of <see cref="T:System.Threading.Tasks.Task" /> instances.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
      <span data-ttu-id="28441-102">工作平行程式庫 (TPL)</span>
      <span class="sxs-lookup">
        <span data-stu-id="28441-102">Task Parallel Library (TPL)</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md">
      <span data-ttu-id="28441-103">以工作為基礎的非同步程式設計</span>
      <span class="sxs-lookup">
        <span data-stu-id="28441-103">Task-based Asynchronous Programming</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/parallel-programming/how-to-unwrap-a-nested-task.md">
      <span data-ttu-id="28441-104">如何：解除包裝巢狀工作</span>
      <span class="sxs-lookup">
        <span data-stu-id="28441-104">How to: Unwrap a Nested Task</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="Unwrap">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task Unwrap (this System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt; task);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task Unwrap(class System.Threading.Tasks.Task`1&lt;class System.Threading.Tasks.Task&gt; task) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskExtensions.Unwrap(System.Threading.Tasks.Task{System.Threading.Tasks.Task})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task ^ Unwrap(System::Threading::Tasks::Task&lt;System::Threading::Tasks::Task ^&gt; ^ task);" />
      <MemberSignature Language="F#" Value="static member Unwrap : System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Task" Usage="System.Threading.Tasks.TaskExtensions.Unwrap task" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="task" Type="System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="task">
          <span data-ttu-id="28441-105">要解除包裝的 <see langword="Task&lt;Task&gt;" /> (C#) 或 <see langword="Task (Of Task)" /> (Visual Basic)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28441-105">The <see langword="Task&lt;Task&gt;" /> (C#) or <see langword="Task (Of Task)" /> (Visual Basic) to unwrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28441-106">建立 Proxy <see cref="T:System.Threading.Tasks.Task" />，表示 <see cref="M:System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)" /> 的非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28441-106">Creates a proxy <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation of a <see cref="M:System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28441-107">工作，表示提供之 <see langword="System.Threading.Tasks.Task(Of Task)" /> 的非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28441-107">A Task that represents the asynchronous operation of the provided <see langword="System.Threading.Tasks.Task(Of Task)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28441-108">它通常是相當實用，能傳回工作<xref:System.Threading.Tasks.Task%601>，其中內部工作代表工作過程中完成外部<xref:System.Threading.Tasks.Task%601>。</span><span class="sxs-lookup"><span data-stu-id="28441-108">It is often useful to be able to return a Task from a <xref:System.Threading.Tasks.Task%601>, where the inner Task represents work done as part of the outer <xref:System.Threading.Tasks.Task%601>.</span></span> <span data-ttu-id="28441-109">不過，這樣做會導致`Task<Task>`(C#) 或`Task (Of Task)`(Visual Basic)，如果不處理仔細，可能會產生非預期的行為。</span><span class="sxs-lookup"><span data-stu-id="28441-109">However, doing so results in a `Task<Task>` (C#) or `Task (Of Task)` (Visual Basic), which, if not dealt with carefully, could produce unexpected behavior.</span></span> <span data-ttu-id="28441-110">Unwrap 解決這個問題，透過建立 proxy，表示整個非同步作業，這類工作的工作。</span><span class="sxs-lookup"><span data-stu-id="28441-110">Unwrap solves this problem by creating a proxy Task that represents the entire asynchronous operation of such a task.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28441-111">下列範例示範如何解除包裝工作：</span><span class="sxs-lookup"><span data-stu-id="28441-111">The following example shows how to unwrap a task:</span></span>  
  
 [!code-csharp[System.Threading.Tasks.TaskExtensions#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.tasks.taskextensions/cs/unwrap.cs#01)]
 [!code-vb[System.Threading.Tasks.TaskExtensions#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.tasks.taskextensions/vb/unwrap.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28441-112">如果 <paramref name="task" /> 引數為 Null 時，所會擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28441-112">The exception that is thrown if the <paramref name="task" /> argument is null.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="28441-113">工作平行程式庫 (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28441-113">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md">
          <span data-ttu-id="28441-114">以工作為基礎的非同步程式設計</span>
          <span class="sxs-lookup">
            <span data-stu-id="28441-114">Task-based Asynchronous Programming</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-unwrap-a-nested-task.md">
          <span data-ttu-id="28441-115">如何：解除包裝巢狀工作</span>
          <span class="sxs-lookup">
            <span data-stu-id="28441-115">How to: Unwrap a Nested Task</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Unwrap&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;TResult&gt; Unwrap&lt;TResult&gt; (this System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt; task);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!TResult&gt; Unwrap&lt;TResult&gt;(class System.Threading.Tasks.Task`1&lt;class System.Threading.Tasks.Task`1&lt;!!TResult&gt;&gt; task) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskExtensions.Unwrap``1(System.Threading.Tasks.Task{System.Threading.Tasks.Task{``0}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Unwrap(Of TResult) (task As Task(Of Task(Of TResult))) As Task(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;TResult&gt; ^ Unwrap(System::Threading::Tasks::Task&lt;System::Threading::Tasks::Task&lt;TResult&gt; ^&gt; ^ task);" />
      <MemberSignature Language="F#" Value="static member Unwrap : System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&lt;'Result&gt;&gt; -&gt; System.Threading.Tasks.Task&lt;'Result&gt;" Usage="System.Threading.Tasks.TaskExtensions.Unwrap task" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="task" Type="System.Threading.Tasks.Task&lt;System.Threading.Tasks.Task&lt;TResult&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="28441-116">工作結果的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28441-116">The type of the task's result.</span>
          </span>
        </typeparam>
        <param name="task">
          <span data-ttu-id="28441-117">要解除包裝的 <see langword="Task&lt;Task&lt;T&gt;&gt;" /> (C#) 或 <see langword="Task (Of Task(Of T))" /> (Visual Basic)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28441-117">The <see langword="Task&lt;Task&lt;T&gt;&gt;" /> (C#) or <see langword="Task (Of Task(Of T))" /> (Visual Basic) to unwrap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="28441-118">建立 Proxy <see cref="T:System.Threading.Tasks.Task" />，表示 <see langword="Task&lt;Task&lt;T&gt;&gt;" /> (C#) 或 <see langword="Task (Of Task(Of T))" /> (Visual Basic) 的非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28441-118">Creates a proxy <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation of a <see langword="Task&lt;Task&lt;T&gt;&gt;" /> (C#) or <see langword="Task (Of Task(Of T))" /> (Visual Basic).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="28441-119">
            <see cref="T:System.Threading.Tasks.Task" />，表示提供之 <see langword="Task&lt;Task&lt;T&gt;&gt;" /> (C#) 或 <see langword="Task (Of Task(Of T))" /> (Visual Basic) 的非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28441-119">A <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation of the provided <see langword="Task&lt;Task&lt;T&gt;&gt;" /> (C#) or <see langword="Task (Of Task(Of T))" /> (Visual Basic).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28441-120">它通常是相當實用，能返回<xref:System.Threading.Tasks.Task>從<xref:System.Threading.Tasks.Task>，其中內部<xref:System.Threading.Tasks.Task>代表做為一部份的外部執行的工作<xref:System.Threading.Tasks.Task>。</span><span class="sxs-lookup"><span data-stu-id="28441-120">It is often useful to be able to return a <xref:System.Threading.Tasks.Task> from a <xref:System.Threading.Tasks.Task>, where the inner <xref:System.Threading.Tasks.Task> represents work done as part of the outer <xref:System.Threading.Tasks.Task>.</span></span> <span data-ttu-id="28441-121">不過，這樣做會導致`Task<Task<T>>`(C#) 或`Task (Of Task(Of T))`(Visual Basic)，如果不處理仔細，可能會產生非預期的行為。</span><span class="sxs-lookup"><span data-stu-id="28441-121">However, doing so results in a `Task<Task<T>>` (C#) or `Task (Of Task(Of T))` (Visual Basic), which, if not dealt with carefully, could produce unexpected behavior.</span></span> <span data-ttu-id="28441-122">Unwrap 解決此問題，請建立 proxy<xref:System.Threading.Tasks.Task%601>表示整個非同步作業，這類`Task<Task<T>>`(C#) 或`Task (Of Task(Of T))`(Visual Basic)。</span><span class="sxs-lookup"><span data-stu-id="28441-122">Unwrap solves this problem by creating a proxy <xref:System.Threading.Tasks.Task%601> that represents the entire asynchronous operation of such a `Task<Task<T>>` (C#) or `Task (Of Task(Of T))` (Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="28441-123">如果 <paramref name="task" /> 引數為 Null 時，所會擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="28441-123">The exception that is thrown if the <paramref name="task" /> argument is null.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/parallel-programming/task-parallel-library-tpl.md">
          <span data-ttu-id="28441-124">工作平行程式庫 (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="28441-124">Task Parallel Library (TPL)</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md">
          <span data-ttu-id="28441-125">以工作為基礎的非同步程式設計</span>
          <span class="sxs-lookup">
            <span data-stu-id="28441-125">Task-based Asynchronous Programming</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-unwrap-a-nested-task.md">
          <span data-ttu-id="28441-126">如何：解除包裝巢狀工作</span>
          <span class="sxs-lookup">
            <span data-stu-id="28441-126">How to: Unwrap a Nested Task</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>