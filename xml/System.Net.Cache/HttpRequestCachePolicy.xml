<Type Name="HttpRequestCachePolicy" FullName="System.Net.Cache.HttpRequestCachePolicy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2765c8c0d8f6d2510303adde3f7f0925627d5365" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36476750" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpRequestCachePolicy : System.Net.Cache.RequestCachePolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpRequestCachePolicy extends System.Net.Cache.RequestCachePolicy" />
  <TypeSignature Language="DocId" Value="T:System.Net.Cache.HttpRequestCachePolicy" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpRequestCachePolicy&#xA;Inherits RequestCachePolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequestCachePolicy : System::Net::Cache::RequestCachePolicy" />
  <TypeSignature Language="F#" Value="type HttpRequestCachePolicy = class&#xA;    inherit RequestCachePolicy" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Cache.RequestCachePolicy</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>定義使用 <see cref="T:System.Net.HttpWebRequest" /> 物件取得的資源的應用程式快取需求。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您也可以使用您的應用程式指定預設快取原則<xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A>屬性或應用程式或電腦組態檔。 如需詳細資訊，請參閱[ &lt;requestCaching&gt;項目 （網路設定）](~/docs/framework/configure-apps/file-schema/network/requestcaching-element-network-settings.md)。  
  
 您可以使用指定的個別要求的快取原則<xref:System.Net.WebRequest.CachePolicy%2A>屬性。  
  
 不支援 Web 服務的快取。  
  
   
  
## Examples  
 下列程式碼範例會建立應用程式定義域的預設快取原則，並會覆寫它的要求。  
  
 [!code-cpp[NclSimpleCache#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#2)]
 [!code-csharp[NclSimpleCache#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個建構函式會將 <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> 屬性初始化為 <xref:System.Net.Cache.HttpRequestCacheLevel.Default>。  
  
   
  
## Examples  
 下列程式碼範例示範如何設定使用這個建構函式的快取原則。  
  
 [!code-cpp[NclSimpleCache#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#11)]
 [!code-csharp[NclSimpleCache#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (DateTime cacheSyncDate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DateTime cacheSyncDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheSyncDate As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(DateTime cacheSyncDate);" />
      <MemberSignature Language="F#" Value="new System.Net.Cache.HttpRequestCachePolicy : DateTime -&gt; System.Net.Cache.HttpRequestCachePolicy" Usage="new System.Net.Cache.HttpRequestCachePolicy cacheSyncDate" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheSyncDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="cacheSyncDate">
          <see cref="T:System.DateTime" /> 物件，指定儲存在快取中的資源必須重新確認的時間。</param>
        <summary>使用指定的快取同步處理日期，初始化 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 快取同步處理日期可讓您指定必須重新驗證快取內容的絕對日期。 如果快取項目上次重新驗證快取同步處理日期之前，會發生與伺服器的重新驗證。 如果快取同步處理的日期之後重新確認快取項目，而且沒有任何伺服器重新驗證需求，讓快取的項目無效，則會使用從快取的項目。 如果快取同步處理日期設定為未來的日期，則每次要求時都會重新驗證項目，直到快取同步處理日期已過為止。  
  
 這個建構函式會將 <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> 屬性初始化為 <xref:System.Net.Cache.HttpRequestCacheLevel.Default>。 <xref:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate%2A> 屬性會初始化為 `cacheSyncDate`。  
  
   
  
## Examples  
 下列程式碼範例將示範如何建立根據快取同步處理日期的快取原則。  
  
 [!code-cpp[NclSimpleCache#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#3)]
 [!code-csharp[NclSimpleCache#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (System.Net.Cache.HttpRequestCacheLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Cache.HttpRequestCacheLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpRequestCacheLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (level As HttpRequestCacheLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(System::Net::Cache::HttpRequestCacheLevel level);" />
      <MemberSignature Language="F#" Value="new System.Net.Cache.HttpRequestCachePolicy : System.Net.Cache.HttpRequestCacheLevel -&gt; System.Net.Cache.HttpRequestCachePolicy" Usage="new System.Net.Cache.HttpRequestCachePolicy level" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="level" Type="System.Net.Cache.HttpRequestCacheLevel" />
      </Parameters>
      <Docs>
        <param name="level">
          <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> 值。</param>
        <summary>使用指定的快取原則，初始化 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個建構函式會將 <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> 屬性初始化為 `level`。  
  
 <xref:System.Net.Cache.HttpRequestCacheLevel>值控制是否啟用快取，以及何時可以使用快取。 如需詳細資訊，請參閱<xref:System.Net.Cache.HttpRequestCacheLevel>文件。  
  
   
  
## Examples  
 下列程式碼範例將示範如何建立的快取原則允許快取來從快取中找到的資源。  
  
 [!code-cpp[NclSimpleCache#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#12)]
 [!code-csharp[NclSimpleCache#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (System.Net.Cache.HttpCacheAgeControl cacheAgeControl, TimeSpan ageOrFreshOrStale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Cache.HttpCacheAgeControl cacheAgeControl, valuetype System.TimeSpan ageOrFreshOrStale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheAgeControl As HttpCacheAgeControl, ageOrFreshOrStale As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(System::Net::Cache::HttpCacheAgeControl cacheAgeControl, TimeSpan ageOrFreshOrStale);" />
      <MemberSignature Language="F#" Value="new System.Net.Cache.HttpRequestCachePolicy : System.Net.Cache.HttpCacheAgeControl * TimeSpan -&gt; System.Net.Cache.HttpRequestCachePolicy" Usage="new System.Net.Cache.HttpRequestCachePolicy (cacheAgeControl, ageOrFreshOrStale)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheAgeControl" Type="System.Net.Cache.HttpCacheAgeControl" />
        <Parameter Name="ageOrFreshOrStale" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="cacheAgeControl">下列其中一個 <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> 列舉值：<see cref="F:System.Net.Cache.HttpCacheAgeControl.MaxAge" />、<see cref="F:System.Net.Cache.HttpCacheAgeControl.MaxStale" /> 或 <see cref="F:System.Net.Cache.HttpCacheAgeControl.MinFresh" />。</param>
        <param name="ageOrFreshOrStale">
          <see cref="T:System.TimeSpan" /> 值，指定一段時間。</param>
        <summary>使用指定的保留期限控制和時間值，初始化 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `cacheAgeControl`值定義的意義`ageOrFreshOrStale`參數值，用來設定相關聯的屬性。 例如，當您指定<xref:System.Net.Cache.HttpCacheAgeControl.MaxStale>、<xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A>屬性設定的值為`ageOrFreshOrStale`參數。  
  
 這個建構函式會將 <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> 屬性初始化為 <xref:System.Net.Cache.HttpRequestCacheLevel.Default>。  
  
   
  
## Examples  
 下列程式碼範例將示範如何建立最小有效期限為基礎的快取原則。  
  
 [!code-cpp[NclSimpleCache#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#5)]
 [!code-csharp[NclSimpleCache#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">為 <paramref name="cacheAgeControl" /> 參數指定的值無法與這個建構函式同時使用。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (System.Net.Cache.HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Cache.HttpCacheAgeControl cacheAgeControl, valuetype System.TimeSpan maxAge, valuetype System.TimeSpan freshOrStale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheAgeControl As HttpCacheAgeControl, maxAge As TimeSpan, freshOrStale As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(System::Net::Cache::HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale);" />
      <MemberSignature Language="F#" Value="new System.Net.Cache.HttpRequestCachePolicy : System.Net.Cache.HttpCacheAgeControl * TimeSpan * TimeSpan -&gt; System.Net.Cache.HttpRequestCachePolicy" Usage="new System.Net.Cache.HttpRequestCachePolicy (cacheAgeControl, maxAge, freshOrStale)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheAgeControl" Type="System.Net.Cache.HttpCacheAgeControl" />
        <Parameter Name="maxAge" Type="System.TimeSpan" />
        <Parameter Name="freshOrStale" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="cacheAgeControl">
          <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> 值。</param>
        <param name="maxAge">
          <see cref="T:System.TimeSpan" /> 值，指定資源的最長保留期限。</param>
        <param name="freshOrStale">
          <see cref="T:System.TimeSpan" /> 值，指定一段時間。</param>
        <summary>使用指定的最長保留期限、保留期限選項和時間值，初始化 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `cacheAgeControl`值會用來解譯的意義`freshOrStale`參數值與集合相關聯的屬性。 例如，當您指定<xref:System.Net.Cache.HttpCacheAgeControl.MaxStale>、<xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A>屬性設定的值為`freshOrStale`參數。 當您指定<xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale>、<xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A>屬性使用的值設定`maxAge`參數和<xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A>屬性使用的值設定`freshOrStale`參數。  
  
 請注意，除非您指定<xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale>或<xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMinFresh>、<xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A>屬性未設定。  
  
 這個建構函式會將 <xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A> 屬性初始化為 <xref:System.Net.Cache.HttpRequestCacheLevel.Default>。  
  
   
  
## Examples  
 下列程式碼範例將示範如何建立根據最小有效期限和最長使用期限的快取原則。  
  
 [!code-cpp[NclSimpleCache#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#9)]
 [!code-csharp[NclSimpleCache#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定給 <paramref name="cacheAgeControl" /> 參數的值無效。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestCachePolicy (System.Net.Cache.HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale, DateTime cacheSyncDate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Cache.HttpCacheAgeControl cacheAgeControl, valuetype System.TimeSpan maxAge, valuetype System.TimeSpan freshOrStale, valuetype System.DateTime cacheSyncDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheAgeControl As HttpCacheAgeControl, maxAge As TimeSpan, freshOrStale As TimeSpan, cacheSyncDate As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestCachePolicy(System::Net::Cache::HttpCacheAgeControl cacheAgeControl, TimeSpan maxAge, TimeSpan freshOrStale, DateTime cacheSyncDate);" />
      <MemberSignature Language="F#" Value="new System.Net.Cache.HttpRequestCachePolicy : System.Net.Cache.HttpCacheAgeControl * TimeSpan * TimeSpan * DateTime -&gt; System.Net.Cache.HttpRequestCachePolicy" Usage="new System.Net.Cache.HttpRequestCachePolicy (cacheAgeControl, maxAge, freshOrStale, cacheSyncDate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheAgeControl" Type="System.Net.Cache.HttpCacheAgeControl" />
        <Parameter Name="maxAge" Type="System.TimeSpan" />
        <Parameter Name="freshOrStale" Type="System.TimeSpan" />
        <Parameter Name="cacheSyncDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="cacheAgeControl">
          <see cref="T:System.Net.Cache.HttpCacheAgeControl" /> 值。</param>
        <param name="maxAge">
          <see cref="T:System.TimeSpan" /> 值，指定資源的最長保留期限。</param>
        <param name="freshOrStale">
          <see cref="T:System.TimeSpan" /> 值，指定一段時間。</param>
        <param name="cacheSyncDate">
          <see cref="T:System.DateTime" /> 物件，指定儲存在快取中的資源必須重新確認的時間。</param>
        <summary>使用指定的最長保留期限、保留期限控制選項、時間值和快取同步處理日期，初始化 <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `cacheAgeControl`值會用來解譯的意義`freshOrStale`參數值與集合相關聯的屬性。 例如，當您指定<xref:System.Net.Cache.HttpCacheAgeControl.MaxStale>、<xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A>屬性設定的值為`freshOrStale`參數。 當您指定<xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale>、<xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A>屬性使用的值設定`maxAge`參數和<xref:System.Net.Cache.HttpRequestCachePolicy.MaxStale%2A>屬性使用的值設定`freshOrStale`參數。  
  
 請注意，除非您指定<xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale>或<xref:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMinFresh>、<xref:System.Net.Cache.HttpRequestCachePolicy.MaxAge%2A>屬性未設定。  
  
 這個建構函式初始化<xref:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate%2A>屬性`cacheSyncDate`，並初始化<xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A>屬性<xref:System.Net.Cache.HttpRequestCacheLevel.Default>。  
  
   
  
## Examples  
 下列程式碼範例將示範如何建立根據最小有效期限、 最長使用期限，以及快取同步處理日期的快取原則。  
  
 [!code-cpp[NclSimpleCache#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#10)]
 [!code-csharp[NclSimpleCache#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheSyncDate">
      <MemberSignature Language="C#" Value="public DateTime CacheSyncDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime CacheSyncDate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CacheSyncDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime CacheSyncDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheSyncDate : DateTime" Usage="System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個執行個體的快取同步處理日期。</summary>
        <value>
          <see cref="T:System.DateTime" /> 值，該值設為建立這個執行個體時指定的日期。 如果未指定日期，則這個屬性的值為 <see cref="F:System.DateTime.MinValue" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 快取同步處理日期可讓您指定必須重新驗證快取內容的絕對日期。 如果快取項目上次重新驗證快取同步處理日期之前，會發生與伺服器的重新驗證。 如果快取同步處理的日期之後重新確認快取項目，而且沒有任何伺服器重新驗證需求，讓快取的項目無效，則會使用從快取的項目。 如果快取同步處理日期設定為未來的日期，則每次要求時都會重新驗證項目，直到快取同步處理日期已過為止。  
  
   
  
## Examples  
 下列程式碼範例會顯示這個屬性的值。  
  
 [!code-cpp[NclSimpleCache#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#3)]
 [!code-csharp[NclSimpleCache#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public System.Net.Cache.HttpRequestCacheLevel Level { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Cache.HttpRequestCacheLevel Level" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.Level" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Level As HttpRequestCacheLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Cache::HttpRequestCacheLevel Level { System::Net::Cache::HttpRequestCacheLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.Level : System.Net.Cache.HttpRequestCacheLevel" Usage="System.Net.Cache.HttpRequestCachePolicy.Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Cache.HttpRequestCacheLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得建立這個執行個體時所指定的 <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> 值。</summary>
        <value>
          <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> 值，指定使用 <see cref="T:System.Net.HttpWebRequest" /> 物件取得之資源的快取行為。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 應用程式通常使用<xref:System.Net.Cache.HttpRequestCacheLevel.Default>做為其快取原則層級。 <xref:System.Net.WebRequest.CachePolicy%2A>屬性，如果不是`null`，判斷要求的作用中的快取原則。 可以使用設定的應用程式定義域的預設原則<xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A>屬性或機器中的設定或應用程式組態檔。 如需詳細資訊，請參閱[ &lt;requestCaching&gt;項目 （網路設定）](~/docs/framework/configure-apps/file-schema/network/requestcaching-element-network-settings.md)。  
  
   
  
## Examples  
 下列程式碼範例會示範如何顯示這個屬性的值。  
  
 [!code-cpp[NclSimpleCache#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#11)]
 [!code-csharp[NclSimpleCache#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAge">
      <MemberSignature Language="C#" Value="public TimeSpan MaxAge { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MaxAge" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.MaxAge" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxAge As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MaxAge { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxAge : TimeSpan" Usage="System.Net.Cache.HttpRequestCachePolicy.MaxAge" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得從快取傳回之資源所允許的最長保留期限。</summary>
        <value>
          <see cref="T:System.TimeSpan" /> 值，該值設為建立這個執行個體時指定的最長保留期限值。 如果未指定日期，則這個屬性的值為 <see cref="F:System.DateTime.MinValue" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果超過指定的時間值之資源的快取的副本，資源必須重新驗證。 建構執行個體時，會指定此屬性的值。  
  
   
  
## Examples  
 下列程式碼範例會示範如何顯示這個屬性的值。  
  
 [!code-cpp[NclSimpleCache#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#7)]
 [!code-csharp[NclSimpleCache#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxStale">
      <MemberSignature Language="C#" Value="public TimeSpan MaxStale { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MaxStale" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.MaxStale" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxStale As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MaxStale { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxStale : TimeSpan" Usage="System.Net.Cache.HttpRequestCachePolicy.MaxStale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得從快取傳回之資源所允許的最大過時值。</summary>
        <value>
          <see cref="T:System.TimeSpan" /> 值，該值設為建立這個執行個體時指定的最大過時值。 如果未指定日期，則這個屬性的值為 <see cref="F:System.DateTime.MinValue" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性指定的期間，快取的副本的資源是可接受的內容到期之後的時間量。 建構執行個體時，會指定此屬性的值。  
  
   
  
## Examples  
 下列程式碼範例會示範如何顯示這個屬性的值。  
  
 [!code-cpp[NclSimpleCache#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#6)]
 [!code-csharp[NclSimpleCache#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinFresh">
      <MemberSignature Language="C#" Value="public TimeSpan MinFresh { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MinFresh" />
      <MemberSignature Language="DocId" Value="P:System.Net.Cache.HttpRequestCachePolicy.MinFresh" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinFresh As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MinFresh { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.MinFresh : TimeSpan" Usage="System.Net.Cache.HttpRequestCachePolicy.MinFresh" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得從快取傳回之資源所允許的最短有效期限。</summary>
        <value>
          <see cref="T:System.TimeSpan" /> 值，指定建立這個執行個體時指定的最短有效期限。 如果未指定日期，則這個屬性的值為 <see cref="F:System.DateTime.MinValue" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個值會指定內容到期之前，在快取的副本的資源是可接受的時間量。 建構執行個體時，會指定此屬性的值。  
  
   
  
## Examples  
 下列程式碼範例會示範如何顯示這個屬性的值。  
  
 [!code-cpp[NclSimpleCache#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#5)]
 [!code-csharp[NclSimpleCache#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Cache.HttpRequestCachePolicy.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="httpRequestCachePolicy.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回這個執行個體的字串表示。</summary>
        <returns>
          <see cref="T:System.String" /> 值，包含這個執行個體的屬性值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此字串包含識別屬性，後面接著冒號的標籤 (":") 和值。 屬性會以單一空格分隔。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫這個方法。  
  
 [!code-cpp[NclSimpleCache#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#1)]
 [!code-csharp[NclSimpleCache#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>