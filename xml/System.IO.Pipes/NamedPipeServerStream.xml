<Type Name="NamedPipeServerStream" FullName="System.IO.Pipes.NamedPipeServerStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5227488f40fbac42cefb8e3bc168e443c0d92452" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30420242" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class NamedPipeServerStream : System.IO.Pipes.PipeStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NamedPipeServerStream extends System.IO.Pipes.PipeStream" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipes.NamedPipeServerStream" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NamedPipeServerStream&#xA;Inherits PipeStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NamedPipeServerStream sealed : System::IO::Pipes::PipeStream" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipes</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Pipes.PipeStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>公開具名管道的 <see cref="T:System.IO.Stream" />，兼具同步與非同步讀取與寫入操作的支援。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 具名的管道的管道伺服器和一或多個管道用戶端之間的通訊，提供單向或雙工的管道。 具名的管道可以用於處理序間通訊，在本機或網路。 可由多個共用單一的管道名稱<xref:System.IO.Pipes.NamedPipeClientStream>物件。  
  
 任何處理程序可做為具名的管道伺服器或用戶端，或兩者。  
  
> [!NOTE]
>  如[!INCLUDE[winxppro](~/includes/winxppro-md.md)]和[!INCLUDE[win2kserver](~/includes/win2kserver-md.md)]，最多 10 個管道同時可以透過網路連線。  
  
   
  
## Examples  
 下列範例會示範如何從父處理序的字串傳送至子系上的處理序在相同電腦中使用具名管道。 這個範例會建立<xref:System.IO.Pipes.NamedPipeServerStream>父處理序中的物件<xref:System.IO.Pipes.PipeDirection>值<xref:System.IO.Pipes.PipeDirection.Out>。 伺服器再等待<xref:System.IO.Pipes.NamedPipeClientStream>連接到它的子處理序中的物件。 在此範例中，這兩個處理程序是在相同電腦上和<xref:System.IO.Pipes.NamedPipeClientStream>物件具有<xref:System.IO.Pipes.PipeDirection>值<xref:System.IO.Pipes.PipeDirection.In>。 接著，父處理序會將使用者提供的字串傳送給子處理序。 字串會顯示到主控台。  
  
 這個範例適用於伺服器處理序，會使用<xref:System.IO.Pipes.NamedPipeServerStream>類別。 整個程式碼範例中，將程式碼管道用戶端和伺服器，請參閱[How to： 使用具名管道網路處理序間通訊](~/docs/standard/io/how-to-use-named-pipes-for-network-interprocess-communication.md)。  
  
 [!code-csharp[System.IO.Pipes.NamedPipeServerStream_Sample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_Sample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.NamedPipeServerStream_Sample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_Sample1/vb/program.vb#01)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (string pipeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pipeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeServerStream(System::String ^ pipeName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pipeName">管道的名稱。</param>
        <summary>使用指定的管道名稱，初始化 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個建構函式會建立<xref:System.IO.Pipes.NamedPipeServerStream>物件具有下列特性：  
  
-   預設管道方向<xref:System.IO.Pipes.PipeDirection.InOut>。  
  
-   共用相同名稱的伺服器執行個體的數目上限設定為 1。  
  
-   <xref:System.IO.Pipes.PipeTransmissionMode> 的 <xref:System.IO.Pipes.PipeTransmissionMode.Byte> 值。  
  
-   <xref:System.IO.Pipes.PipeOptions> 的 <xref:System.IO.Pipes.PipeOptions.None> 值。  
  
-   預設輸入和輸出緩衝區大小。  
  
-   沒有管道安全性。  
  
-   <xref:System.IO.HandleInheritability> 的 <xref:System.IO.HandleInheritability.None> 值。  
  
-   未指定其他<xref:System.IO.Pipes.PipeAccessRights>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> 是零長度字串。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          將 <paramref name="pipeName" /> 設定為「匿名」。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="pipeName" /> 包含冒號 (":")。</exception>
        <exception cref="T:System.PlatformNotSupportedException">作業系統為 Windows Millennium Edition、Windows 98 或 Windows 95，但這些均不支援。</exception>
        <exception cref="T:System.IO.IOException">已經超過伺服器執行個體的最大數目。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">針對完全信任立即呼叫者。 這個成員無法供部分信任的程式碼使用。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName, valuetype System.IO.Pipes.PipeDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pipeName As String, direction As PipeDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeServerStream(System::String ^ pipeName, System::IO::Pipes::PipeDirection direction);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
      </Parameters>
      <Docs>
        <param name="pipeName">管道的名稱。</param>
        <param name="direction">其中一個列舉值，決定管道的方向。</param>
        <summary>使用指定的管道名稱與管道方向，初始化 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個建構函式會建立<xref:System.IO.Pipes.NamedPipeServerStream>物件具有下列特性：  
  
-   <xref:System.IO.Pipes.PipeTransmissionMode> 的 <xref:System.IO.Pipes.PipeTransmissionMode.Byte> 值。  
  
-   <xref:System.IO.Pipes.PipeOptions> 的 <xref:System.IO.Pipes.PipeOptions.None> 值。  
  
-   預設輸入和輸出緩衝區大小。  
  
-   沒有管道安全性。  
  
-   <xref:System.IO.HandleInheritability> 的 <xref:System.IO.HandleInheritability.None> 值。  
  
-   未指定其他<xref:System.IO.Pipes.PipeAccessRights>。  
  
   
  
## Examples  
 下列範例會示範將從父處理序的字串傳送至子處理程序，使用具名管道的方法。 這個範例會建立<xref:System.IO.Pipes.NamedPipeServerStream>父處理序中的物件。 <xref:System.IO.Pipes.NamedPipeServerStream>物件具有<xref:System.IO.Pipes.PipeDirection>值<xref:System.IO.Pipes.PipeDirection.Out>，這會將會封鎖直到<xref:System.IO.Pipes.NamedPipeClientStream>物件建立連接至目前<xref:System.IO.Pipes.NamedPipeServerStream>物件。  
  
 [!code-csharp[System.IO.Pipes.NamedPipeServerStream_Sample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_Sample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.NamedPipeServerStream_Sample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_Sample1/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> 是零長度字串。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          將 <paramref name="pipeName" /> 設定為「匿名」。  
  
 -或-  
  
 <paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="pipeName" /> 包含冒號 (":")。</exception>
        <exception cref="T:System.PlatformNotSupportedException">作業系統為 Windows Millennium Edition、Windows 98 或 Windows 95，但這些均不支援。</exception>
        <exception cref="T:System.IO.IOException">已經超過伺服器執行個體的最大數目。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">針對完全信任立即呼叫者。 這個成員無法供部分信任的程式碼使用。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName, valuetype System.IO.Pipes.PipeDirection direction, int32 maxNumberOfServerInstances) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pipeName As String, direction As PipeDirection, maxNumberOfServerInstances As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeServerStream(System::String ^ pipeName, System::IO::Pipes::PipeDirection direction, int maxNumberOfServerInstances);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="maxNumberOfServerInstances" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pipeName">管道的名稱。</param>
        <param name="direction">其中一個列舉值，決定管道的方向。</param>
        <param name="maxNumberOfServerInstances">可共用相同名稱的最大伺服器執行個體數目。 您可以為這個值傳遞 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />。</param>
        <summary>使用指定的管道名稱、管道方向和伺服器執行個體數目上限，初始化 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個建構函式會建立<xref:System.IO.Pipes.NamedPipeServerStream>物件具有下列特性：  
  
-   預設值為 1，共用相同名稱的伺服器執行個體的數目上限。  
  
-   預設值<xref:System.IO.Pipes.PipeTransmissionMode>值<xref:System.IO.Pipes.PipeTransmissionMode.Byte>。  
  
-   <xref:System.IO.Pipes.PipeOptions> 的 <xref:System.IO.Pipes.PipeOptions.None> 值。  
  
-   預設輸入和輸出緩衝區大小。  
  
-   沒有管道安全性。  
  
-   <xref:System.IO.HandleInheritability> 的 <xref:System.IO.HandleInheritability.None> 值。  
  
-   未指定其他<xref:System.IO.Pipes.PipeAccessRights>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> 是零長度字串。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          將 <paramref name="pipeName" /> 設定為「匿名」。  
  
 -或-  
  
 <paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。  
  
 -或-  
  
 必須是非負數。  
  
 -或-  
  
 <paramref name="maxNumberofServerInstances" /> 小於 -1 或大於 254 (-1 代表 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />)  
  
 -或-  
  
 需要有 <see cref="F:System.IO.HandleInheritability.None" /> 或 <see cref="F:System.IO.HandleInheritability.Inheritable" />。  
  
 -或-  
  
 存取權限僅限於 <see cref="F:System.IO.Pipes.PipeAccessRights.ChangePermissions" />、<see cref="F:System.IO.Pipes.PipeAccessRights.TakeOwnership" /> 及 <see cref="F:System.IO.Pipes.PipeAccessRights.AccessSystemSecurity" /> 旗標。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="pipeName" /> 包含冒號 (":")。</exception>
        <exception cref="T:System.PlatformNotSupportedException">作業系統為 Windows Millennium Edition、Windows 98 或 Windows 95，但這些均不支援。</exception>
        <exception cref="T:System.IO.IOException">已經超過伺服器執行個體的最大數目。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">針對完全信任立即呼叫者。 這個成員無法供部分信任的程式碼使用。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (System.IO.Pipes.PipeDirection direction, bool isAsync, bool isConnected, Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, bool isAsync, bool isConnected, class Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeServerStream(System::IO::Pipes::PipeDirection direction, bool isAsync, bool isConnected, Microsoft::Win32::SafeHandles::SafePipeHandle ^ safePipeHandle);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="isAsync" Type="System.Boolean" />
        <Parameter Name="isConnected" Type="System.Boolean" />
        <Parameter Name="safePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" />
      </Parameters>
      <Docs>
        <param name="direction">其中一個列舉值，決定管道的方向。</param>
        <param name="isAsync">
          <see langword="true" /> 表示控制代碼為非同步開啟；否則為 <see langword="false" />。</param>
        <param name="isConnected">
          <see langword="true" /> 表示管道已連接，否則就是 <see langword="false" />。</param>
        <param name="safePipeHandle">安全控制代碼，用於這個 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 物件將會封裝的管道。</param>
        <summary>從指定的管道控制碼初始化 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="safePipeHandle" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="safePipeHandle" /> 不是有效的控制代碼。</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="safePipeHandle" /> 不是有效的管道控制碼。  
  
 -或-  
  
 已經超過伺服器執行個體的最大數目。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">針對完全信任立即呼叫者。 這個成員無法供部分信任的程式碼使用。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName, valuetype System.IO.Pipes.PipeDirection direction, int32 maxNumberOfServerInstances, valuetype System.IO.Pipes.PipeTransmissionMode transmissionMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pipeName As String, direction As PipeDirection, maxNumberOfServerInstances As Integer, transmissionMode As PipeTransmissionMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeServerStream(System::String ^ pipeName, System::IO::Pipes::PipeDirection direction, int maxNumberOfServerInstances, System::IO::Pipes::PipeTransmissionMode transmissionMode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="maxNumberOfServerInstances" Type="System.Int32" />
        <Parameter Name="transmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" />
      </Parameters>
      <Docs>
        <param name="pipeName">管道的名稱。</param>
        <param name="direction">其中一個列舉值，決定管道的方向。</param>
        <param name="maxNumberOfServerInstances">可共用相同名稱的最大伺服器執行個體數目。 您可以為這個值傳遞 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />。</param>
        <param name="transmissionMode">其中一個列舉值，決定管道的傳輸模式。</param>
        <summary>使用指定的管道名稱、管道方向、伺服器執行個體數目上限以及傳輸模式，初始化 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個建構函式會建立<xref:System.IO.Pipes.NamedPipeServerStream>物件具有下列特性：  
  
-   預設值<xref:System.IO.Pipes.PipeOptions>值<xref:System.IO.Pipes.PipeOptions.None>。  
  
-   預設輸入和輸出緩衝區大小。  
  
-   沒有管道安全性。  
  
-   <xref:System.IO.HandleInheritability> 的 <xref:System.IO.HandleInheritability.None> 值。  
  
-   未指定其他<xref:System.IO.Pipes.PipeAccessRights>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> 是零長度字串。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          將 <paramref name="pipeName" /> 設定為「匿名」。  
  
 -或-  
  
 <paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。  
  
 -或-  
  
 <paramref name="maxNumberofServerInstances" /> 小於 -1 或大於 254 (-1 代表 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />)</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="pipeName" /> 包含冒號 (":")。</exception>
        <exception cref="T:System.PlatformNotSupportedException">作業系統為 Windows Millennium Edition、Windows 98 或 Windows 95，但這些均不支援。</exception>
        <exception cref="T:System.IO.IOException">已經超過伺服器執行個體的最大數目。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">針對完全信任立即呼叫者。 這個成員無法供部分信任的程式碼使用。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode, System.IO.Pipes.PipeOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName, valuetype System.IO.Pipes.PipeDirection direction, int32 maxNumberOfServerInstances, valuetype System.IO.Pipes.PipeTransmissionMode transmissionMode, valuetype System.IO.Pipes.PipeOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pipeName As String, direction As PipeDirection, maxNumberOfServerInstances As Integer, transmissionMode As PipeTransmissionMode, options As PipeOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeServerStream(System::String ^ pipeName, System::IO::Pipes::PipeDirection direction, int maxNumberOfServerInstances, System::IO::Pipes::PipeTransmissionMode transmissionMode, System::IO::Pipes::PipeOptions options);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="maxNumberOfServerInstances" Type="System.Int32" />
        <Parameter Name="transmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" />
      </Parameters>
      <Docs>
        <param name="pipeName">管道的名稱。</param>
        <param name="direction">其中一個列舉值，決定管道的方向。</param>
        <param name="maxNumberOfServerInstances">可共用相同名稱的最大伺服器執行個體數目。 您可以為這個值傳遞 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />。</param>
        <param name="transmissionMode">其中一個列舉值，決定管道的傳輸模式。</param>
        <param name="options">其中一個列舉值，決定如何開啟或建立管道。</param>
        <summary>使用指定的管道名稱、管道方向、伺服器執行個體數目上限、傳輸模式，以及管道選項，初始化 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個建構函式會建立<xref:System.IO.Pipes.NamedPipeServerStream>物件具有下列特性：  
  
-   預設輸入和輸出緩衝區大小。  
  
-   沒有管道安全性。  
  
-   <xref:System.IO.HandleInheritability> 的 <xref:System.IO.HandleInheritability.None> 值。  
  
-   未指定其他<xref:System.IO.Pipes.PipeAccessRights>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> 是零長度字串。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          將 <paramref name="pipeName" /> 設定為「匿名」。  
  
 -或-  
  
 <paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。  
  
 -或-  
  
 <paramref name="maxNumberofServerInstances" /> 小於 -1 或大於 254 (-1 代表 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />)  
  
 -或-  
  
 <paramref name="options" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeOptions" /> 值。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="pipeName" /> 包含冒號 (":")。</exception>
        <exception cref="T:System.PlatformNotSupportedException">作業系統為 Windows Millennium Edition、Windows 98 或 Windows 95，但這些均不支援。</exception>
        <exception cref="T:System.IO.IOException">已經超過伺服器執行個體的最大數目。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">針對完全信任立即呼叫者。 這個成員無法供部分信任的程式碼使用。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode, System.IO.Pipes.PipeOptions options, int inBufferSize, int outBufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName, valuetype System.IO.Pipes.PipeDirection direction, int32 maxNumberOfServerInstances, valuetype System.IO.Pipes.PipeTransmissionMode transmissionMode, valuetype System.IO.Pipes.PipeOptions options, int32 inBufferSize, int32 outBufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pipeName As String, direction As PipeDirection, maxNumberOfServerInstances As Integer, transmissionMode As PipeTransmissionMode, options As PipeOptions, inBufferSize As Integer, outBufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeServerStream(System::String ^ pipeName, System::IO::Pipes::PipeDirection direction, int maxNumberOfServerInstances, System::IO::Pipes::PipeTransmissionMode transmissionMode, System::IO::Pipes::PipeOptions options, int inBufferSize, int outBufferSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="maxNumberOfServerInstances" Type="System.Int32" />
        <Parameter Name="transmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" />
        <Parameter Name="inBufferSize" Type="System.Int32" />
        <Parameter Name="outBufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pipeName">管道的名稱。</param>
        <param name="direction">其中一個列舉值，決定管道的方向。</param>
        <param name="maxNumberOfServerInstances">可共用相同名稱的最大伺服器執行個體數目。 您可以為這個值傳遞 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />。</param>
        <param name="transmissionMode">其中一個列舉值，決定管道的傳輸模式。</param>
        <param name="options">其中一個列舉值，決定如何開啟或建立管道。</param>
        <param name="inBufferSize">大於零的正值，指出輸入緩衝區大小。</param>
        <param name="outBufferSize">大於零的正值，指出輸出緩衝區大小。</param>
        <summary>使用指定的管道名稱、管道方向、伺服器執行個體數目上限、傳輸模式、管道選項，以及建議的輸入與輸出緩衝區大小，初始化 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個建構函式會建立<xref:System.IO.Pipes.NamedPipeServerStream>物件具有下列特性：  
  
-   沒有其他管道安全性。  
  
-   預設值<xref:System.IO.HandleInheritability>值<xref:System.IO.HandleInheritability.None>。  
  
-   未指定其他<xref:System.IO.Pipes.PipeAccessRights>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> 是零長度字串。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          將 <paramref name="pipeName" /> 設定為「匿名」。  
  
 -或-  
  
 <paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。  
  
 -或-  
  
 <paramref name="maxNumberofServerInstances" /> 小於 -1 或大於 254 (-1 代表 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />)  
  
 -或-  
  
 <paramref name="options" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeOptions" /> 值。  
  
 -或-  
  
 <paramref name="inBufferSize" /> 為負。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="pipeName" /> 包含冒號 (":")。</exception>
        <exception cref="T:System.PlatformNotSupportedException">作業系統為 Windows Millennium Edition、Windows 98 或 Windows 95，但這些均不支援。</exception>
        <exception cref="T:System.IO.IOException">已經超過伺服器執行個體的最大數目。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">針對完全信任立即呼叫者。 這個成員無法供部分信任的程式碼使用。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode, System.IO.Pipes.PipeOptions options, int inBufferSize, int outBufferSize, System.IO.Pipes.PipeSecurity pipeSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName, valuetype System.IO.Pipes.PipeDirection direction, int32 maxNumberOfServerInstances, valuetype System.IO.Pipes.PipeTransmissionMode transmissionMode, valuetype System.IO.Pipes.PipeOptions options, int32 inBufferSize, int32 outBufferSize, class System.IO.Pipes.PipeSecurity pipeSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeServerStream(System::String ^ pipeName, System::IO::Pipes::PipeDirection direction, int maxNumberOfServerInstances, System::IO::Pipes::PipeTransmissionMode transmissionMode, System::IO::Pipes::PipeOptions options, int inBufferSize, int outBufferSize, System::IO::Pipes::PipeSecurity ^ pipeSecurity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="maxNumberOfServerInstances" Type="System.Int32" />
        <Parameter Name="transmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" />
        <Parameter Name="inBufferSize" Type="System.Int32" />
        <Parameter Name="outBufferSize" Type="System.Int32" />
        <Parameter Name="pipeSecurity" Type="System.IO.Pipes.PipeSecurity" />
      </Parameters>
      <Docs>
        <param name="pipeName">管道的名稱。</param>
        <param name="direction">其中一個列舉值，決定管道的方向。</param>
        <param name="maxNumberOfServerInstances">可共用相同名稱的最大伺服器執行個體數目。 您可以為這個值傳遞 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />。</param>
        <param name="transmissionMode">其中一個列舉值，決定管道的傳輸模式。</param>
        <param name="options">其中一個列舉值，決定如何開啟或建立管道。</param>
        <param name="inBufferSize">大於零的正值，指出輸入緩衝區大小。</param>
        <param name="outBufferSize">大於零的正值，指出輸出緩衝區大小。</param>
        <param name="pipeSecurity">物件，判斷管道的存取控制和稽核安全性。</param>
        <summary>使用指定的管道名稱、管道方向、伺服器執行個體數目上限、傳輸模式、管道選項、建議的輸入與輸出緩衝區大小，以及管道安全性，初始化 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個建構函式會建立<xref:System.IO.Pipes.NamedPipeServerStream>物件具有下列特性：  
  
-   預設值<xref:System.IO.HandleInheritability>值<xref:System.IO.HandleInheritability.None>。  
  
-   未指定其他<xref:System.IO.Pipes.PipeAccessRights>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> 是零長度字串。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          將 <paramref name="pipeName" /> 設定為「匿名」。  
  
 -或-  
  
 <paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。  
  
 -或-  
  
 <paramref name="maxNumberofServerInstances" /> 小於 -1 或大於 254 (-1 代表 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />)  
  
 -或-  
  
 <paramref name="options" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeOptions" /> 值。  
  
 -或-  
  
 <paramref name="inBufferSize" /> 為負。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="pipeName" /> 包含冒號 (":")。</exception>
        <exception cref="T:System.PlatformNotSupportedException">作業系統為 Windows Millennium Edition、Windows 98 或 Windows 95，但這些均不支援。</exception>
        <exception cref="T:System.IO.IOException">已經超過伺服器執行個體的最大數目。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">針對完全信任立即呼叫者。 這個成員無法供部分信任的程式碼使用。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode, System.IO.Pipes.PipeOptions options, int inBufferSize, int outBufferSize, System.IO.Pipes.PipeSecurity pipeSecurity, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName, valuetype System.IO.Pipes.PipeDirection direction, int32 maxNumberOfServerInstances, valuetype System.IO.Pipes.PipeTransmissionMode transmissionMode, valuetype System.IO.Pipes.PipeOptions options, int32 inBufferSize, int32 outBufferSize, class System.IO.Pipes.PipeSecurity pipeSecurity, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeServerStream(System::String ^ pipeName, System::IO::Pipes::PipeDirection direction, int maxNumberOfServerInstances, System::IO::Pipes::PipeTransmissionMode transmissionMode, System::IO::Pipes::PipeOptions options, int inBufferSize, int outBufferSize, System::IO::Pipes::PipeSecurity ^ pipeSecurity, System::IO::HandleInheritability inheritability);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="maxNumberOfServerInstances" Type="System.Int32" />
        <Parameter Name="transmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" />
        <Parameter Name="inBufferSize" Type="System.Int32" />
        <Parameter Name="outBufferSize" Type="System.Int32" />
        <Parameter Name="pipeSecurity" Type="System.IO.Pipes.PipeSecurity" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="pipeName">管道的名稱。</param>
        <param name="direction">其中一個列舉值，決定管道的方向。</param>
        <param name="maxNumberOfServerInstances">可共用相同名稱的最大伺服器執行個體數目。 您可以為這個值傳遞 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />。</param>
        <param name="transmissionMode">其中一個列舉值，決定管道的傳輸模式。</param>
        <param name="options">其中一個列舉值，決定如何開啟或建立管道。</param>
        <param name="inBufferSize">大於零的正值，指出輸入緩衝區大小。</param>
        <param name="outBufferSize">大於零的正值，指出輸出緩衝區大小。</param>
        <param name="pipeSecurity">物件，判斷管道的存取控制和稽核安全性。</param>
        <param name="inheritability">其中一個列舉值，決定子處理序是否可以繼承基礎控制代碼。</param>
        <summary>使用指定的管道名稱、管道方向、伺服器執行個體數目上限、傳輸模式、管道選項、建議的輸入與輸出緩衝區大小、管道安全性，以及繼承模式，初始化 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個建構函式會建立<xref:System.IO.Pipes.NamedPipeServerStream>物件沒有指定其他<xref:System.IO.Pipes.PipeAccessRights>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> 是零長度字串。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          將 <paramref name="pipeName" /> 設定為「匿名」。  
  
 -或-  
  
 <paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。  
  
 -或-  
  
 <paramref name="maxNumberofServerInstances" /> 小於 -1 或大於 254 (-1 代表 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />)  
  
 -或-  
  
 <paramref name="options" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeOptions" /> 值。  
  
 -或-  
  
 <paramref name="inBufferSize" /> 為負。  
  
 -或-  
  
 <paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 值。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="pipeName" /> 包含冒號 (":")。</exception>
        <exception cref="T:System.PlatformNotSupportedException">作業系統為 Windows Millennium Edition、Windows 98 或 Windows 95，但這些均不支援。</exception>
        <exception cref="T:System.IO.IOException">已經超過伺服器執行個體的最大數目。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">針對完全信任立即呼叫者。 這個成員無法供部分信任的程式碼使用。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode, System.IO.Pipes.PipeOptions options, int inBufferSize, int outBufferSize, System.IO.Pipes.PipeSecurity pipeSecurity, System.IO.HandleInheritability inheritability, System.IO.Pipes.PipeAccessRights additionalAccessRights);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName, valuetype System.IO.Pipes.PipeDirection direction, int32 maxNumberOfServerInstances, valuetype System.IO.Pipes.PipeTransmissionMode transmissionMode, valuetype System.IO.Pipes.PipeOptions options, int32 inBufferSize, int32 outBufferSize, class System.IO.Pipes.PipeSecurity pipeSecurity, valuetype System.IO.HandleInheritability inheritability, valuetype System.IO.Pipes.PipeAccessRights additionalAccessRights) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability,System.IO.Pipes.PipeAccessRights)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeServerStream(System::String ^ pipeName, System::IO::Pipes::PipeDirection direction, int maxNumberOfServerInstances, System::IO::Pipes::PipeTransmissionMode transmissionMode, System::IO::Pipes::PipeOptions options, int inBufferSize, int outBufferSize, System::IO::Pipes::PipeSecurity ^ pipeSecurity, System::IO::HandleInheritability inheritability, System::IO::Pipes::PipeAccessRights additionalAccessRights);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="maxNumberOfServerInstances" Type="System.Int32" />
        <Parameter Name="transmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" />
        <Parameter Name="inBufferSize" Type="System.Int32" />
        <Parameter Name="outBufferSize" Type="System.Int32" />
        <Parameter Name="pipeSecurity" Type="System.IO.Pipes.PipeSecurity" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
        <Parameter Name="additionalAccessRights" Type="System.IO.Pipes.PipeAccessRights" />
      </Parameters>
      <Docs>
        <param name="pipeName">管道的名稱。</param>
        <param name="direction">其中一個列舉值，決定管道的方向。</param>
        <param name="maxNumberOfServerInstances">可共用相同名稱的最大伺服器執行個體數目。 您可以為這個值傳遞 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />。</param>
        <param name="transmissionMode">其中一個列舉值，決定管道的傳輸模式。</param>
        <param name="options">其中一個列舉值，決定如何開啟或建立管道。</param>
        <param name="inBufferSize">輸入緩衝區的大小。</param>
        <param name="outBufferSize">輸出緩衝區的大小。</param>
        <param name="pipeSecurity">物件，判斷管道的存取控制和稽核安全性。</param>
        <param name="inheritability">其中一個列舉值，決定子處理序是否可以繼承基礎控制代碼。</param>
        <param name="additionalAccessRights">一個列舉值，指定管道的存取權限。</param>
        <summary>使用指定的管道名稱、管道方向、伺服器執行個體數目上限、傳輸模式、管道選項、建議的輸入與輸出緩衝區大小、管道安全性、繼承模式以及管道存取權限，初始化 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> 是零長度字串。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          將 <paramref name="pipeName" /> 設定為「匿名」。  
  
 -或-  
  
 <paramref name="direction" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeDirection" /> 值。  
  
 -或-  
  
 <paramref name="maxNumberofServerInstances" /> 小於 -1 或大於 254 (-1 代表 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />)  
  
 -或-  
  
 <paramref name="options" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeOptions" /> 值。  
  
 -或-  
  
 <paramref name="inBufferSize" /> 為負。  
  
 -或-  
  
 <paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 值。  
  
 -或-  
  
 <paramref name="additionalAccessRights" /> 不是有效的 <see cref="T:System.IO.Pipes.PipeAccessRights" /> 值。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="pipeName" /> 包含冒號 (":")。</exception>
        <exception cref="T:System.PlatformNotSupportedException">作業系統為 Windows Millennium Edition、Windows 98 或 Windows 95，但這些均不支援。</exception>
        <exception cref="T:System.IO.IOException">已經超過伺服器執行個體的最大數目。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">針對完全信任立即呼叫者。 這個成員無法供部分信任的程式碼使用。</permission>
      </Docs>
    </Member>
    <Member MemberName="BeginWaitForConnection">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWaitForConnection (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginWaitForConnection(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWaitForConnection (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWaitForConnection(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">用戶端連接到 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 物件時所呼叫的方法。</param>
        <param name="state">使用者所提供的物件，可從其他要求中辨別這個特定的非同步要求。</param>
        <summary>開始非同步操作，等候用戶端連接。</summary>
        <returns>參考非同步要求的物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 非同步方法相當於<xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>。  
  
 <xref:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection%2A> 必須針對每次呼叫一次呼叫<xref:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">管道不是非同步開啟。  
  
 -或-  
  
 管道連接已經建立。  
  
 -或-  
  
 尚未設定管道控制代碼。</exception>
        <exception cref="T:System.IO.IOException">管道連線已中斷。</exception>
        <exception cref="T:System.ObjectDisposedException">管道已關閉。</exception>
      </Docs>
    </Member>
    <Member MemberName="Disconnect">
      <MemberSignature Language="C#" Value="public void Disconnect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Disconnect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.Disconnect" />
      <MemberSignature Language="VB.NET" Value="Public Sub Disconnect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Disconnect();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>中斷目前的連接。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫<xref:System.IO.Pipes.NamedPipeServerStream.Disconnect%2A>方法將會封鎖直到除非管道的傳輸模式設為已讀取已傳送的所有字元<xref:System.IO.Pipes.PipeTransmissionMode.Message>而建立的建構函式中設定的緩衝區大小<xref:System.IO.Pipes.NamedPipeServerStream>物件。 在此情況下，所有的訊息將會接收。 呼叫<xref:System.IO.Pipes.PipeStream.WaitForPipeDrain%2A>會導致封鎖，直到已從管道讀取所有資料的伺服器。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">尚未建立管道連線。  
  
 -或-  
  
 連接的管道已中斷連接。  
  
 -或-  
  
 尚未設定管道控制代碼。</exception>
        <exception cref="T:System.ObjectDisposedException">管道已關閉。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndWaitForConnection">
      <MemberSignature Language="C#" Value="public void EndWaitForConnection (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndWaitForConnection(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndWaitForConnection (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndWaitForConnection(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">暫止的非同步要求。</param>
        <summary>結束非同步操作，等候用戶端連接。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection%2A> 必須針對每次呼叫一次呼叫<xref:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">管道不是非同步開啟。  
  
 -或-  
  
 尚未設定管道控制代碼。</exception>
        <exception cref="T:System.IO.IOException">管道連線已中斷。</exception>
        <exception cref="T:System.ObjectDisposedException">管道已關閉。</exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~NamedPipeServerStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!NamedPipeServerStream ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>釋出 Unmanaged 資源並執行其他清除作業後，記憶體回收才能重新回收 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImpersonationUserName">
      <MemberSignature Language="C#" Value="public string GetImpersonationUserName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetImpersonationUserName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName" />
      <MemberSignature Language="VB.NET" Value="Public Function GetImpersonationUserName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetImpersonationUserName();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得管道另一端的用戶端之使用者名稱。</summary>
        <returns>管道另一端的用戶端之使用者名稱。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName%2A>方法會傳回`null`如果用戶端具有尚未寫入管道，或連線的用戶端未連接與<xref:System.Security.Principal.TokenImpersonationLevel>的<xref:System.Security.Principal.TokenImpersonationLevel.Impersonation>。  
  
   
  
## Examples  
 下列範例會示範方法來建立多個同時用戶端要求，可回應的管道伺服器和用戶端模擬的方法。 這個範例會建立<xref:System.IO.Pipes.NamedPipeServerStream>物件在父處理序，接著會建立多個執行緒等候<xref:System.IO.Pipes.NamedPipeClientStream>連接物件。 用戶端連線之後，會提供伺服器的檔案名稱，該檔案的內容會讀取並傳送回用戶端。 因為<xref:System.IO.Pipes.NamedPipeServerStream>模擬用戶端開啟檔案時，用戶端可以要求只確定它具有足夠的權限開啟的檔案。  
  
 [!code-cpp[System.IO.Pipes.NamedPipeServerStream_ImpersonationSample1#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_ImpersonationSample1/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.NamedPipeServerStream_ImpersonationSample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_ImpersonationSample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.NamedPipeServerStream_ImpersonationSample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_ImpersonationSample1/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">尚未建立管道連線。  
  
 -或-  
  
 連接的管道已中斷連接。  
  
 -或-  
  
 尚未設定管道控制代碼。</exception>
        <exception cref="T:System.ObjectDisposedException">管道已關閉。</exception>
        <exception cref="T:System.IO.IOException">管道連線已中斷。  
  
 -或-  
  
 用戶端的使用者名稱超過 19 個字元。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermissionFlag">提供操作主體物件的能力。 安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></permission>
      </Docs>
    </Member>
    <Member MemberName="MaxAllowedServerInstances">
      <MemberSignature Language="C#" Value="public const int MaxAllowedServerInstances = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxAllowedServerInstances = (-1)" />
      <MemberSignature Language="DocId" Value="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxAllowedServerInstances As Integer  = -1" />
      <MemberSignature Language="C++ CLI" Value="public: int MaxAllowedServerInstances = -1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>代表系統資源允許的伺服器執行個體數目上限。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances>建立時<xref:System.IO.Pipes.NamedPipeServerStream>物件來設定系統資源允許的伺服器執行個體的數目上限。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAsClient">
      <MemberSignature Language="C#" Value="public void RunAsClient (System.IO.Pipes.PipeStreamImpersonationWorker impersonationWorker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RunAsClient(class System.IO.Pipes.PipeStreamImpersonationWorker impersonationWorker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.RunAsClient(System.IO.Pipes.PipeStreamImpersonationWorker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunAsClient (impersonationWorker As PipeStreamImpersonationWorker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RunAsClient(System::IO::Pipes::PipeStreamImpersonationWorker ^ impersonationWorker);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="impersonationWorker" Type="System.IO.Pipes.PipeStreamImpersonationWorker" />
      </Parameters>
      <Docs>
        <param name="impersonationWorker">指定呼叫方法的委派。</param>
        <summary>在模擬用戶端時呼叫委派。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 連接的用戶端的權限會套用到遠端伺服器。 例如，如果連接的用戶端嘗試要求的伺服器上的檔案內容，用戶端可以要求它有足夠的權限開啟的檔案。  
  
   
  
## Examples  
 下列範例會示範方法來建立多個同時用戶端要求，可回應的管道伺服器和用戶端模擬的方法。 這個範例會建立<xref:System.IO.Pipes.NamedPipeServerStream>物件在父處理序，接著會建立多個執行緒等候<xref:System.IO.Pipes.NamedPipeClientStream>連接物件。 用戶端連線之後，會提供伺服器的檔案名稱，該檔案的內容會讀取並傳送回用戶端。 因為<xref:System.IO.Pipes.NamedPipeServerStream>模擬用戶端開啟檔案時，用戶端可以要求只確定它具有足夠的權限開啟的檔案。  
  
 [!code-cpp[System.IO.Pipes.NamedPipeServerStream_ImpersonationSample1#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_ImpersonationSample1/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.NamedPipeServerStream_ImpersonationSample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_ImpersonationSample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.NamedPipeServerStream_ImpersonationSample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_ImpersonationSample1/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">尚未建立管道連線。  
  
 -或-  
  
 連接的管道已中斷連接。  
  
 -或-  
  
 尚未設定管道控制代碼。</exception>
        <exception cref="T:System.ObjectDisposedException">管道已關閉。</exception>
        <exception cref="T:System.IO.IOException">管道連線已中斷。  
  
 -或-  
  
 發生 I/O 錯誤。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermissionFlag">提供操作主體物件的能力。 安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></permission>
      </Docs>
    </Member>
    <Member MemberName="WaitForConnection">
      <MemberSignature Language="C#" Value="public void WaitForConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WaitForConnection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnection" />
      <MemberSignature Language="VB.NET" Value="Public Sub WaitForConnection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WaitForConnection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>等候用戶端連接到這個 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫這個方法會導致<xref:System.IO.Pipes.NamedPipeServerStream>來封鎖，直到用戶端連線物件。  
  
   
  
## Examples  
 下列範例會示範將從父處理序的字串傳送至子處理程序，使用具名管道的方法。 這個範例會建立<xref:System.IO.Pipes.NamedPipeServerStream>父處理序中的物件。 此物件具有<xref:System.IO.Pipes.PipeDirection>值<xref:System.IO.Pipes.PipeDirection.Out>，這會將會封鎖直到<xref:System.IO.Pipes.NamedPipeClientStream>物件建立的連線<xref:System.IO.Pipes.NamedPipeServerStream>物件。 這個範例是針對所提供之較大範例的一部分<xref:System.IO.Pipes.NamedPipeServerStream>和<xref:System.IO.Pipes.NamedPipeClientStream>類別。  
  
 [!code-csharp[System.IO.Pipes.NamedPipeServerStream_Sample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_Sample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.NamedPipeServerStream_Sample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_Sample1/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">管道連接已經建立。  
  
 -或-  
  
 尚未設定管道控制代碼。</exception>
        <exception cref="T:System.ObjectDisposedException">管道已關閉。</exception>
        <exception cref="T:System.IO.IOException">管道連線已中斷。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitForConnectionAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>非同步等候用戶端連接到這個 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 物件。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitForConnectionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WaitForConnectionAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WaitForConnectionAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForConnectionAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WaitForConnectionAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>非同步等候用戶端連接到這個 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 物件。</summary>
        <returns>表示非同步等候作業的工作。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因為它是非同步的這個方法會立即傳回，但連線程序完成時用戶端呼叫<xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A>或<xref:System.IO.Pipes.NamedPipeClientStream.ConnectAsync%2A>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForConnectionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WaitForConnectionAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WaitForConnectionAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WaitForConnectionAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">用來監視是否有取消要求的語彙基元。</param>
        <summary>非同步等候用戶端連線到這個 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 物件，並且監視取消要求。</summary>
        <returns>表示非同步等候作業的工作。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因為它是非同步的這個方法會立即傳回，但連線程序完成時用戶端呼叫<xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A>或<xref:System.IO.Pipes.NamedPipeClientStream.ConnectAsync%2A>。  
  
 取消要求使用取消語彙基元才<xref:System.IO.Pipes.NamedPipeServerStream>管道選項值是建立物件<xref:System.IO.Pipes.PipeOptions.Asynchronous?displayProperty=nameWithType>或是取消之前發生<xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync%2A>方法呼叫。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>