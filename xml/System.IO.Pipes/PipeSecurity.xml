<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PipeSecurity.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51eead0220ae9da892b78cf71ae96a98169946116.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1eead0220ae9da892b78cf71ae96a98169946116</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.Pipes.PipeSecurity">
          <source>Represents the access control and audit security for a pipe.</source>
          <target state="translated">表示管道的存取控制 (Access Control) 和稽核安全性。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeSecurity">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> class specifies the access rights for a pipe and how access attempts are audited.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph>類別會指定管道和如何稽核嘗試存取的存取權限。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeSecurity">
          <source>This class represents access and audit rights as a set of rules.</source>
          <target state="translated">這個類別會表示為一組規則的存取和稽核 」 權限。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeSecurity">
          <source>Each access rule is represented by a <ph id="ph1">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph> object, while each audit rule is represented by a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAuditRule&gt;</ph> object.</source>
          <target state="translated">每個存取規則由<ph id="ph1">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph>物件，而每個稽核規則由<ph id="ph2">&lt;xref:System.IO.Pipes.PipeAuditRule&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeSecurity">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> class is an abstraction of the underlying Microsoft Windows file security system.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph>類別是抽象的基礎的 Microsoft Windows 檔案安全性系統。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeSecurity">
          <source>In this system, each pipe has a discretionary access control list (DACL), which controls access to the pipe, and a system access control list (SACL), which specifies the access control attempts that are audited.</source>
          <target state="translated">在此系統中，每個管道有判別存取控制清單 (DACL)，以控制存取管道和系統存取控制清單 (SACL)，其指定要稽核的存取控制嘗試。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeSecurity">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAuditRule&gt;</ph> classes are abstractions of the access control entries (ACEs) that comprise DACLs and SACLs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.Pipes.PipeAuditRule&gt;</ph>類別是由 Dacl 與 Sacl 組成存取控制項目 (Ace) 的抽象概念。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeSecurity">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> class hides many of the details of DACLs and SACLs; you do not have to worry about ACE ordering or null DACLS.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph>類別會隱藏許多 Dacl 及 Sacl 的詳細資訊，則您不必擔心 ACE 排序或 null 的 DACL。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeSecurity">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> class to retrieve, add, or change the access rules that represent the DACL and SACL of a pipe.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph>類別來擷取、 新增或變更代表 DACL 和 SACL 的管道的存取規則。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeSecurity">
          <source>To persist new or changed access or audit rules to a pipe, use the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.SetAccessControl%2A&gt;</ph> method.</source>
          <target state="translated">保存新的或變更存取或稽核規則至管道，請使用<ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.SetAccessControl%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.PipeSecurity">
          <source>To retrieve access or audit rules from an existing file, use the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.GetAccessControl%2A&gt;</ph> method.</source>
          <target state="translated">若要從現有的檔案擷取存取或稽核規則，請使用 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.GetAccessControl%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.#ctor">
          <source>This constructor creates an empty <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> object that is not based on an existing pipe.</source>
          <target state="translated">這個建構函式會建立空<ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph>不以現有的管道為基礎的物件。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.#ctor">
          <source>You can then populate the object with access control information and apply it to a pipe.</source>
          <target state="translated">您可以填入具有存取控制資訊的物件，並將它套用至管道。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.#ctor">
          <source>You can add access or audit rules to the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> object using the <ph id="ph2">&lt;xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A&gt;</ph> method.</source>
          <target state="translated">您可以新增存取或稽核規則<ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph>物件使用<ph id="ph2">&lt;xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.#ctor">
          <source>You can remove access or audit rules using the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</ph> method.</source>
          <target state="translated">您可以移除存取權或稽核規則使用<ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.#ctor">
          <source>To persist new or changed access or audit rules to a pipe, use the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.SetAccessControl%2A&gt;</ph> method.</source>
          <target state="translated">保存新的或變更存取或稽核規則至管道，請使用<ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.SetAccessControl%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.#ctor">
          <source>To retrieve access or audit rules from an existing file, use the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.GetAccessControl%2A&gt;</ph> method.</source>
          <target state="translated">若要從現有的檔案擷取存取或稽核規則，請使用 <ph id="ph1">&lt;xref:System.IO.Pipes.PipeStream.GetAccessControl%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeSecurity.AccessRightType">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the securable object that is associated with the current <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">取得與目前 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 物件相關聯之安全物件的 <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeSecurity.AccessRightType">
          <source>The type of the securable object that is associated with the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">與目前 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 物件相關聯之安全物件的型別。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeSecurity.AccessRightType">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> class override the <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt;</ph> property and return the type they use to represent access rights.</source>
          <target state="translated">類別衍生自<ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>類別覆寫<ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A&gt;</ph>屬性，並傳回它們以表示的存取權限的類型。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeSecurity.AccessRightType">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</source>
          <target state="translated">當您使用陣列或包含多個類型的安全性物件的集合時，使用這個屬性來判斷要用於每個安全性物件的正確的列舉類型。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The identity that the access rule applies to.</source>
          <target state="translated">存取規則適用的識別。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>It must be an object that can be cast as a <ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> object.</source>
          <target state="translated">這個識別必須是可以轉換為 <ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> 物件的物件。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The access mask of this rule.</source>
          <target state="translated">這個規則的存取遮罩。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators</source>
          <target state="translated">此存取遮罩為 32 位元的匿名位元集合，其意義是由個別的整合子所定義。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this rule is inherited from a parent container; otherwise false.</source>
          <target state="translated">如果這個規則是從父容器 (Container) 繼承，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 false。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.InheritanceFlags" /&gt;</ph> values that specifies the inheritance properties of the access rule.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.InheritanceFlags" /&gt;</ph> 值，其指定存取規則的繼承 (Inheritance) 屬性。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.PropagationFlags" /&gt;</ph> values that specifies whether inherited access rules are automatically propagated.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.PropagationFlags" /&gt;</ph> 值，其指定是否要自動傳播繼承的存取規則。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The propagation flags are ignored if <bpt id="p1">&lt;c&gt;</bpt>inheritanceFlags<ept id="p1">&lt;/c&gt;</ept> is set to <ph id="ph1">&lt;see cref="F:System.Security.AccessControl.InheritanceFlags.None" /&gt;</ph>.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>inheritanceFlags<ept id="p1">&lt;/c&gt;</ept> 設為 <ph id="ph1">&lt;see cref="F:System.Security.AccessControl.InheritanceFlags.None" /&gt;</ph>，則忽略傳播旗標。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Specifies the valid access control type.</source>
          <target state="translated">指定有效的存取控制類型。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessRule" /&gt;</ph> class with the specified values.</source>
          <target state="translated">使用指定的值，初始化 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessRule" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessRule" /&gt;</ph> object that this method creates.</source>
          <target state="translated">這個方法建立的 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessRule" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The recommended way to create access control rules is to use the constructors of the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph> class.</source>
          <target state="translated">建立存取控制規則的建議的方式是使用的建構函式<ph id="ph1">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph>, <ph id="ph2">&lt;paramref name="inheritanceFlags" /&gt;</ph>, <ph id="ph3">&lt;paramref name="propagationFlags" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="type" /&gt;</ph> specifies an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph>、<ph id="ph2">&lt;paramref name="inheritanceFlags" /&gt;</ph>、<ph id="ph3">&lt;paramref name="propagationFlags" /&gt;</ph> 或 <ph id="ph4">&lt;paramref name="type" /&gt;</ph> 會指定無效的值。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph> is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph> 為零。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> is neither of type <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> nor of a type, such as <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph>, that can be converted to type <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> 既不是 <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> 型別，也不是可以轉換成 <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> 型別的型別 (例如 <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeSecurity.AccessRuleType">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the object that is associated with the access rules of the current <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">取得與目前 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 物件之存取規則相關聯的物件 <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeSecurity.AccessRuleType">
          <source>The type of the object that is associated with the access rules of the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">與目前 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 物件之存取規則相關聯的物件型別。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeSecurity.AccessRuleType">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> class override the <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt;</ph> property and return the type they use to represent access rights.</source>
          <target state="translated">類別衍生自<ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>類別覆寫<ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A&gt;</ph>屬性，並傳回它們以表示的存取權限的類型。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeSecurity.AccessRuleType">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</source>
          <target state="translated">當您使用陣列或包含多個類型的安全性物件的集合時，使用這個屬性來判斷要用於每個安全性物件的正確的列舉類型。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>The access rule to add.</source>
          <target state="translated">要加入的存取規則。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>Adds an access rule to the Discretionary Access Control List (DACL) that is associated with the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">將存取規則加入至與目前 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 物件相關聯的 Discretionary 存取控制清單 (DACL)。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A&gt;</ph> method adds a new rule to the list of rules that a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> object contains.If an access control list (ACL) already exists for the specified rule, the <ph id="ph3">&lt;xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A&gt;</ph> method will still add the rule, with one exception: a <ph id="ph4">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph> object that is created using the <ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> value supersedes an object that is created using the <ph id="ph6">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A&gt;</ph>方法會將新規則的規則清單中加入的<ph id="ph2">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph>包含物件。如果指定的規則已存在的存取控制清單 (ACL)<ph id="ph3">&lt;xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A&gt;</ph>方法仍會加入規則，有一個例外狀況：<ph id="ph4">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph>使用建立的物件<ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph>值會取代使用建立的物件<ph id="ph6">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>The <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>The audit rule to add.</source>
          <target state="translated">要加入的稽核規則。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>Adds an audit rule to the System Access Control List (SACL)that is associated with the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">將稽核規則新增至與目前 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 物件建立關聯的系統存取控制清單 (SACL)。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A&gt;</ph> method adds a new audit rule to the list of rules that a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> object contains.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A&gt;</ph>方法會將新的稽核規則的規則清單中加入的<ph id="ph2">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph>包含物件。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>If an audit rule already exists for the specified rule, the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A&gt;</ph> method will still add the rule.</source>
          <target state="translated">如果稽核規則已經存在指定的規則，<ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A&gt;</ph>方法仍會加入規則。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>The <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The identity that the access rule applies to.</source>
          <target state="translated">存取規則適用的識別。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>It must be an object that can be cast as a <ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> object.</source>
          <target state="translated">這個識別必須是可以轉換為 <ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> 物件的物件。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The access mask of this rule.</source>
          <target state="translated">這個規則的存取遮罩。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators</source>
          <target state="translated">此存取遮罩為 32 位元的匿名位元集合，其意義是由個別的整合子所定義。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this rule is inherited from a parent container; otherwise, false..</source>
          <target state="translated">如果這個規則是從父容器繼承，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 false。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.InheritanceFlags" /&gt;</ph> values that specifies the inheritance properties of the access rule.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.InheritanceFlags" /&gt;</ph> 值，其指定存取規則的繼承 (Inheritance) 屬性。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.PropagationFlags" /&gt;</ph> values that specifies whether inherited access rules are automatically propagated.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.PropagationFlags" /&gt;</ph> 值，其指定是否要自動傳播繼承的存取規則。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The propagation flags are ignored if <bpt id="p1">&lt;c&gt;</bpt>inheritanceFlags<ept id="p1">&lt;/c&gt;</ept> is set to <ph id="ph1">&lt;see cref="F:System.Security.AccessControl.InheritanceFlags.None" /&gt;</ph>.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>inheritanceFlags<ept id="p1">&lt;/c&gt;</ept> 設為 <ph id="ph1">&lt;see cref="F:System.Security.AccessControl.InheritanceFlags.None" /&gt;</ph>，則忽略傳播旗標。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditFlags" /&gt;</ph> values that specifies the valid access control type.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditFlags" /&gt;</ph> 值，其指定有效的存取控制型別。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph> class with the specified values.</source>
          <target state="translated">使用指定的值，初始化 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph> object that this method creates.</source>
          <target state="translated">這個方法建立的 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The recommended way to create audit rules is to use the constructors of the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeAuditRule&gt;</ph> class.</source>
          <target state="translated">若要建立的稽核規則的建議的方式是使用的建構函式<ph id="ph1">&lt;xref:System.IO.Pipes.PipeAuditRule&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The <ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph>, <ph id="ph2">&lt;paramref name="inheritanceFlags" /&gt;</ph>, <ph id="ph3">&lt;paramref name="propagationFlags" /&gt;</ph>, or <ph id="ph4">&lt;paramref name="flags" /&gt;</ph> properties specify an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph>、<ph id="ph2">&lt;paramref name="inheritanceFlags" /&gt;</ph>、<ph id="ph3">&lt;paramref name="propagationFlags" /&gt;</ph> 或 <ph id="ph4">&lt;paramref name="flags" /&gt;</ph> 屬性指定了無效值。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The <ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> property is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> 屬性為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The <ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph> property is zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="accessMask" /&gt;</ph> 屬性為零。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The <ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> property is neither of type <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> nor of a type, such as <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph>, that can be converted to type <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="identityReference" /&gt;</ph> 屬性既不是 <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> 型別，也不是可以轉換成 <ph id="ph3">&lt;see cref="T:System.Security.Principal.NTAccount" /&gt;</ph> 型別的型別 (例如 <ph id="ph4">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.PipeSecurity.AuditRuleType">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object associated with the audit rules of the current <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">取得與目前 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 物件之稽核規則相關聯的 <ph id="ph2">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeSecurity.AuditRuleType">
          <source>The type of the object that is associated with the audit rules of the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">與目前 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 物件之稽核規則相關聯的物件型別。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeSecurity.AuditRuleType">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> class override the <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt;</ph> property and return the type they use to represent access rights.</source>
          <target state="translated">類別衍生自<ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>類別覆寫<ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A&gt;</ph>屬性，並傳回它們以表示的存取權限的類型。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.PipeSecurity.AuditRuleType">
          <source>When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</source>
          <target state="translated">當您使用陣列或包含多個類型的安全性物件的集合時，使用這個屬性來判斷要用於每個安全性物件的正確的列舉類型。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="T:System.IO.Pipes.PipeSecurity">
          <source>Saves the specified sections of the security descriptor that is associated with the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object to permanent storage.</source>
          <target state="translated">將與目前 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 物件相關聯之安全性描述元 (Security Descriptor) 的指定區段，儲存至永久儲存區 (Permanent Storage)。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)">
          <source>The handle of the securable object that the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object is associated with.</source>
          <target state="translated">與目前 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 物件相關聯之安全物件的控制代碼。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)">
          <source>Saves the specified sections of the security descriptor that is associated with the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object to permanent storage.</source>
          <target state="translated">將與目前 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 物件相關聯之安全性描述元 (Security Descriptor) 的指定區段，儲存至永久儲存區 (Permanent Storage)。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.Persist(System.String)">
          <source>The name of the securable object that the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object is associated with.</source>
          <target state="translated">與目前 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 物件相關聯之安全物件的名稱。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.Persist(System.String)">
          <source>Saves the specified sections of the security descriptor that is associated with the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object to permanent storage.</source>
          <target state="translated">將與目前 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 物件相關聯之安全性描述元 (Security Descriptor) 的指定區段，儲存至永久儲存區 (Permanent Storage)。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>The access rule to remove.</source>
          <target state="translated">要移除的存取規則。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>Removes an access rule from the Discretionary Access Control List (DACL) that is associated with the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">從與目前 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 物件相關聯的 Discretionary 存取控制清單 (DACL) 移除存取規則。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the operation is successful; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果作業成功，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</ph> method removes either all matching <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> access rules or all matching <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> access rules from the current <ph id="ph4">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</ph>方法會移除所有符合<ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph>存取規則或比對所有<ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>從目前的存取規則<ph id="ph4">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>For example, you can use this method to remove all <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> access rules for a user by passing a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph> object created using the <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> value, the <ph id="ph4">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value, and a user account.</source>
          <target state="translated">例如，您可以使用這個方法來移除所有<ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph>存取使用者的規則，藉由傳遞<ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph>使用建立物件<ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph>值，<ph id="ph4">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph>值和使用者帳戶。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</ph> method removes any deny rules that specify the <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value or the <ph id="ph3">&lt;xref:System.IO.Pipes.PipeAccessRights.Write&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</ph>方法會移除任何指定的拒絕規則<ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph>值或<ph id="ph3">&lt;xref:System.IO.Pipes.PipeAccessRights.Write&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>The <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)">
          <source>The access rule to remove.</source>
          <target state="translated">要移除的存取規則。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)">
          <source>Removes the specified access rule from the Discretionary Access Control List (DACL) that is associated with the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">從與目前 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 物件相關聯的 Discretionary 存取控制清單 (DACL) 移除指定的存取規則。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</ph> method removes either all matching <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> access rules or all matching <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> access rules from the current <ph id="ph4">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</ph>方法會移除所有符合<ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph>存取規則或比對所有<ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>從目前的存取規則<ph id="ph4">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)">
          <source>For example, you can use this method to remove all <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> access rules for a user by passing a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph> object created using the <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> value, the <ph id="ph4">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value, and a user account.</source>
          <target state="translated">例如，您可以使用這個方法來移除所有<ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph>存取使用者的規則，藉由傳遞<ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRule&gt;</ph>使用建立物件<ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph>值，<ph id="ph4">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph>值和使用者帳戶。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</ph> method removes any deny rules that specify the <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value or the <ph id="ph3">&lt;xref:System.IO.Pipes.PipeAccessRights.Write&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A&gt;</ph>方法會移除任何指定的拒絕規則<ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph>值或<ph id="ph3">&lt;xref:System.IO.Pipes.PipeAccessRights.Write&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)">
          <source>The <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>The audit rule to remove.</source>
          <target state="translated">要移除的稽核規則。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>Removes an audit rule from the System Access Control List (SACL) that is associated with the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">從與目前 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 物件相關聯的系統存取控制清單 (SACL) 移除稽核規則。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the audit rule was removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示已移除稽核規則；否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A&gt;</ph> method removes either all matching <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> audit rules or all matching <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> audit rules from the current <ph id="ph4">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A&gt;</ph>方法會移除所有符合<ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph>稽核規則或比對所有<ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>稽核規則從目前<ph id="ph4">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>For example, you can use this method to remove all <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> audit rules for a user by passing a <ph id="ph2">&lt;xref:System.Security.AccessControl.FileSystemAuditRule&gt;</ph> object created using the <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> value, the <ph id="ph4">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph> value, and a user account.</source>
          <target state="translated">例如，您可以使用這個方法來移除所有<ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph>稽核規則的使用者藉由傳遞<ph id="ph2">&lt;xref:System.Security.AccessControl.FileSystemAuditRule&gt;</ph>使用建立物件<ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph>值，<ph id="ph4">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph>值和使用者帳戶。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>When you do this, the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A&gt;</ph> method removes any deny rules that specify the <ph id="ph2">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph> value or the <ph id="ph3">&lt;xref:System.Security.AccessControl.AuditFlags.Success&gt;</ph> value.</source>
          <target state="translated">當您這樣做時，<ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A&gt;</ph>方法會移除任何指定的拒絕規則<ph id="ph2">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph>值或<ph id="ph3">&lt;xref:System.Security.AccessControl.AuditFlags.Success&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>The <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)">
          <source>The audit rule to remove.</source>
          <target state="translated">要移除的稽核規則。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)">
          <source>Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) that is associated with the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">從與目前 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 物件相關聯的系統存取控制清單 (SACL)，移除與指定的稽核規則具有相同安全識別項 (Security Identifier) 的所有稽核規則。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll%2A&gt;</ph> method removes all audit rules for the specified user.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll%2A&gt;</ph>方法中移除指定之使用者的所有稽核規則。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)">
          <source>It ignores all values in the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeAuditRule&gt;</ph> object except the user account.</source>
          <target state="translated">它會忽略中的所有值<ph id="ph1">&lt;xref:System.IO.Pipes.PipeAuditRule&gt;</ph>以外的使用者帳戶的物件。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)">
          <source>The <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)">
          <source>The audit rule to remove.</source>
          <target state="translated">要移除的稽核規則。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)">
          <source>Removes the specified audit rule from the System Access Control List (SACL) that is associated with the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">從與目前 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 物件相關聯的系統存取控制清單 (SACL) 移除指定的稽核規則。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A&gt;</ph> method removes the specified matching <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> audit rule or the specified matching <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph> audit rule from the current <ph id="ph4">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A&gt;</ph>方法中移除指定的比對<ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph>稽核規則，或指定的比對<ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Allow&gt;</ph>從目前的稽核規則<ph id="ph4">&lt;xref:System.IO.Pipes.PipeSecurity&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)">
          <source>For example, you can use this method to remove a specified <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> audit rule for a user by passing a <ph id="ph2">&lt;xref:System.Security.AccessControl.FileSystemAuditRule&gt;</ph> object created using the <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph> value, the <ph id="ph4">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph> value, and a user account.</source>
          <target state="translated">例如，您可以使用這個方法，若要移除指定<ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph>藉由傳遞使用者的稽核規則<ph id="ph2">&lt;xref:System.Security.AccessControl.FileSystemAuditRule&gt;</ph>使用建立物件<ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlType.Deny&gt;</ph>值<ph id="ph4">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph>值和使用者帳戶。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)">
          <source>When you do this, the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A&gt;</ph> method removes only a deny rule that specifies the <ph id="ph2">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph> value.</source>
          <target state="translated">當您這樣做時，<ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A&gt;</ph>方法會移除僅拒絕規則，以指定<ph id="ph2">&lt;xref:System.Security.AccessControl.AuditFlags.Failure&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)">
          <source>It does not remove any deny rules that specify the <ph id="ph1">&lt;xref:System.Security.AccessControl.AuditFlags.Success&gt;</ph> value.</source>
          <target state="translated">它不會移除任何指定的拒絕規則<ph id="ph1">&lt;xref:System.Security.AccessControl.AuditFlags.Success&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)">
          <source>The <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>The access rule to add.</source>
          <target state="translated">要加入的存取規則。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>Removes all access rules in the Discretionary Access Control List (DACL) that is associated with the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object and then adds the specified access rule.</source>
          <target state="translated">移除與目前 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 物件相關聯之 Discretionary 存取控制清單 (DACL) 中的所有存取規則，然後加入指定的存取規則。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A&gt;</ph> method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the <ph id="ph2">`rule`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A&gt;</ph>方法新增指定的存取控制清單 (ACL) 規則，或覆寫的比對任何相同 ACL 規則<ph id="ph2">`rule`</ph>參數。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>For example, if the <ph id="ph1">`rule`</ph> parameter specifies a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value and the <ph id="ph3">&lt;xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A&gt;</ph> method finds an identical ACL rule that specifies the <ph id="ph4">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value, the identical rule will be overwritten.</source>
          <target state="translated">例如，如果<ph id="ph1">`rule`</ph>參數會指定<ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph>值和<ph id="ph3">&lt;xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A&gt;</ph>方法找到相同的 ACL 規則，以指定<ph id="ph4">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph>值完全相同的規則就會覆寫。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>If the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A&gt;</ph> method finds an identical ACL rule that specifies the <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Write&gt;</ph> value, the identical rule will also be overwritten.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A&gt;</ph>方法找到相同的 ACL 規則，以指定<ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Write&gt;</ph>值完全相同的規則也會覆寫。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>The <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>The rule to set.</source>
          <target state="translated">要設定的規則。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>Sets an access rule in the Discretionary Access Control List (DACL) that is associated with the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">在與目前 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 物件相關聯的 Discretionary 存取控制清單 (DACL) 中設定存取規則。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A&gt;</ph> method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights&gt;</ph> value of the <ph id="ph3">`rule`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A&gt;</ph>方法新增指定的存取控制清單 (ACL) 規則，或覆寫的比對任何相同 ACL 規則<ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights&gt;</ph>值<ph id="ph3">`rule`</ph>參數。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>For example, if the <ph id="ph1">`rule`</ph> parameter specifies a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value and the <ph id="ph3">&lt;xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A&gt;</ph> method finds an identical ACL rule that specifies the <ph id="ph4">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value, the identical rule will be overwritten.</source>
          <target state="translated">例如，如果<ph id="ph1">`rule`</ph>參數會指定<ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph>值和<ph id="ph3">&lt;xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A&gt;</ph>方法找到相同的 ACL 規則，以指定<ph id="ph4">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph>值完全相同的規則就會覆寫。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>If the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A&gt;</ph> method finds an identical ACL rule that specifies the <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Write&gt;</ph> value, the identical rule will not be overwritten.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A&gt;</ph>方法找到相同的 ACL 規則，以指定<ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Write&gt;</ph>值完全相同的規則就不會覆寫。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)">
          <source>The <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>The rule to set.</source>
          <target state="translated">要設定的規則。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>Sets an audit rule in the System Access Control List (SACL) that is associated with the current <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> object.</source>
          <target state="translated">在與目前 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeSecurity" /&gt;</ph> 物件相關聯的系統存取控制清單 (SACL) 中設定稽核規則。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A&gt;</ph> method adds the specified audit rule or overwrites any identical audit rules that match the <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights&gt;</ph> value of the <ph id="ph3">`rule`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A&gt;</ph>方法新增指定的稽核規則，或覆寫比對任何相同的稽核規則<ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights&gt;</ph>值<ph id="ph3">`rule`</ph>參數。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>For example, if the <ph id="ph1">`rule`</ph> parameter specifies a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value and the <ph id="ph3">&lt;xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A&gt;</ph> method finds an identical audit rule that specifies the <ph id="ph4">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph> value, the identical rule will be overwritten.</source>
          <target state="translated">例如，如果<ph id="ph1">`rule`</ph>參數會指定<ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph>值和<ph id="ph3">&lt;xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A&gt;</ph>方法會尋找指定的完全相同的稽核規則<ph id="ph4">&lt;xref:System.IO.Pipes.PipeAccessRights.Read&gt;</ph>值完全相同的規則就會覆寫。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>If the <ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A&gt;</ph> method finds an identical audit rule that specifies the <ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Write&gt;</ph> value, the identical rule will not be overwritten.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A&gt;</ph>方法會尋找指定的完全相同的稽核規則<ph id="ph2">&lt;xref:System.IO.Pipes.PipeAccessRights.Write&gt;</ph>值完全相同的規則就不會覆寫。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)">
          <source>The <ph id="ph1">&lt;paramref name="rule" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="rule" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>