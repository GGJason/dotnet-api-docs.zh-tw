<Type Name="PipeSecurity" FullName="System.IO.Pipes.PipeSecurity">
  <TypeSignature Language="C#" Value="public class PipeSecurity : System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PipeSecurity extends System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipes.PipeSecurity" />
  <TypeSignature Language="VB.NET" Value="Public Class PipeSecurity&#xA;Inherits NativeObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class PipeSecurity : System::Security::AccessControl::NativeObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.NativeObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="31e50-101">表示管道的存取控制 (Access Control) 和稽核安全性。</span><span class="sxs-lookup"><span data-stu-id="31e50-101">Represents the access control and audit security for a pipe.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e50-102"><xref:System.IO.Pipes.PipeSecurity>類別會指定管道和如何稽核嘗試存取的存取權限。</span><span class="sxs-lookup"><span data-stu-id="31e50-102">The <xref:System.IO.Pipes.PipeSecurity> class specifies the access rights for a pipe and how access attempts are audited.</span></span>  <span data-ttu-id="31e50-103">這個類別會表示為一組規則的存取和稽核 」 權限。</span><span class="sxs-lookup"><span data-stu-id="31e50-103">This class represents access and audit rights as a set of rules.</span></span> <span data-ttu-id="31e50-104">每個存取規則由<xref:System.IO.Pipes.PipeAccessRule>物件，而每個稽核規則由<xref:System.IO.Pipes.PipeAuditRule>物件。</span><span class="sxs-lookup"><span data-stu-id="31e50-104">Each access rule is represented by a <xref:System.IO.Pipes.PipeAccessRule> object, while each audit rule is represented by a <xref:System.IO.Pipes.PipeAuditRule> object.</span></span>  
  
 <span data-ttu-id="31e50-105"><xref:System.IO.Pipes.PipeSecurity>類別是抽象的基礎的 Microsoft Windows 檔案安全性系統。</span><span class="sxs-lookup"><span data-stu-id="31e50-105">The <xref:System.IO.Pipes.PipeSecurity> class is an abstraction of the underlying Microsoft Windows file security system.</span></span> <span data-ttu-id="31e50-106">在此系統中，每個管道有判別存取控制清單 (DACL)，以控制存取管道和系統存取控制清單 (SACL)，其指定要稽核的存取控制嘗試。</span><span class="sxs-lookup"><span data-stu-id="31e50-106">In this system, each pipe has a discretionary access control list (DACL), which controls access to the pipe, and a system access control list (SACL), which specifies the access control attempts that are audited.</span></span>  <span data-ttu-id="31e50-107"><xref:System.IO.Pipes.PipeAccessRule>和<xref:System.IO.Pipes.PipeAuditRule>類別是由 Dacl 與 Sacl 組成存取控制項目 (Ace) 的抽象概念。</span><span class="sxs-lookup"><span data-stu-id="31e50-107">The <xref:System.IO.Pipes.PipeAccessRule> and <xref:System.IO.Pipes.PipeAuditRule> classes are abstractions of the access control entries (ACEs) that comprise DACLs and SACLs.</span></span>  
  
 <span data-ttu-id="31e50-108"><xref:System.IO.Pipes.PipeSecurity>類別會隱藏許多 Dacl 及 Sacl 的詳細資訊，則您不必擔心 ACE 排序或 null 的 DACL。</span><span class="sxs-lookup"><span data-stu-id="31e50-108">The <xref:System.IO.Pipes.PipeSecurity> class hides many of the details of DACLs and SACLs; you do not have to worry about ACE ordering or null DACLS.</span></span>  
  
 <span data-ttu-id="31e50-109">使用<xref:System.IO.Pipes.PipeSecurity>類別來擷取、 新增或變更代表 DACL 和 SACL 的管道的存取規則。</span><span class="sxs-lookup"><span data-stu-id="31e50-109">Use the <xref:System.IO.Pipes.PipeSecurity> class to retrieve, add, or change the access rules that represent the DACL and SACL of a pipe.</span></span>  
  
 <span data-ttu-id="31e50-110">保存新的或變更存取或稽核規則至管道，請使用<xref:System.IO.Pipes.PipeStream.SetAccessControl%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="31e50-110">To persist new or changed access or audit rules to a pipe, use the <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> method.</span></span> <span data-ttu-id="31e50-111">若要從現有的檔案擷取存取或稽核規則，請使用 <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="31e50-111">To retrieve access or audit rules from an existing file, use the <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> method.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PipeSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PipeSecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="31e50-112">初始化 <see cref="T:System.IO.Pipes.PipeSecurity" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="31e50-112">Initializes a new instance of the <see cref="T:System.IO.Pipes.PipeSecurity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e50-113">這個建構函式會建立空<xref:System.IO.Pipes.PipeSecurity>不以現有的管道為基礎的物件。</span><span class="sxs-lookup"><span data-stu-id="31e50-113">This constructor creates an empty <xref:System.IO.Pipes.PipeSecurity> object that is not based on an existing pipe.</span></span> <span data-ttu-id="31e50-114">您可以填入具有存取控制資訊的物件，並將它套用至管道。</span><span class="sxs-lookup"><span data-stu-id="31e50-114">You can then populate the object with access control information and apply it to a pipe.</span></span>  
  
 <span data-ttu-id="31e50-115">您可以新增存取或稽核規則<xref:System.IO.Pipes.PipeSecurity>物件使用<xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="31e50-115">You can add access or audit rules to the <xref:System.IO.Pipes.PipeSecurity> object using the <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> method.</span></span> <span data-ttu-id="31e50-116">您可以移除存取權或稽核規則使用<xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="31e50-116">You can remove access or audit rules using the <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method.</span></span>  
  
 <span data-ttu-id="31e50-117">保存新的或變更存取或稽核規則至管道，請使用<xref:System.IO.Pipes.PipeStream.SetAccessControl%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="31e50-117">To persist new or changed access or audit rules to a pipe, use the <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> method.</span></span> <span data-ttu-id="31e50-118">若要從現有的檔案擷取存取或稽核規則，請使用 <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="31e50-118">To retrieve access or audit rules from an existing file, use the <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeSecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31e50-119">取得與目前 <see cref="T:System.Type" /> 物件相關聯之安全物件的 <see cref="T:System.IO.Pipes.PipeSecurity" />。</span><span class="sxs-lookup"><span data-stu-id="31e50-119">Gets the <see cref="T:System.Type" /> of the securable object that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></summary>
        <value><span data-ttu-id="31e50-120">與目前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 物件相關聯之安全物件的型別。</span><span class="sxs-lookup"><span data-stu-id="31e50-120">The type of the securable object that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e50-121">類別衍生自<xref:System.Security.AccessControl.ObjectSecurity>類別覆寫<xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A>屬性，並傳回它們以表示的存取權限的類型。</span><span class="sxs-lookup"><span data-stu-id="31e50-121">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> property and return the type they use to represent access rights.</span></span> <span data-ttu-id="31e50-122">當您使用陣列或包含多個類型的安全性物件的集合時，使用這個屬性來判斷要用於每個安全性物件的正確的列舉類型。</span><span class="sxs-lookup"><span data-stu-id="31e50-122">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference"><span data-ttu-id="31e50-123">存取規則適用的識別。</span><span class="sxs-lookup"><span data-stu-id="31e50-123">The identity that the access rule applies to.</span></span> <span data-ttu-id="31e50-124">這個識別必須是可以轉換為 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 物件的物件。</span><span class="sxs-lookup"><span data-stu-id="31e50-124">It must be an object that can be cast as a <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</span></span></param>
        <param name="accessMask"><span data-ttu-id="31e50-125">這個規則的存取遮罩。</span><span class="sxs-lookup"><span data-stu-id="31e50-125">The access mask of this rule.</span></span> <span data-ttu-id="31e50-126">此存取遮罩為 32 位元的匿名位元集合，其意義是由個別的整合子所定義。</span><span class="sxs-lookup"><span data-stu-id="31e50-126">The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators</span></span></param>
        <param name="isInherited">
          <span data-ttu-id="31e50-127">如果這個規則是從父容器 (Container) 繼承，則為 <see langword="true" />，否則為 false。</span><span class="sxs-lookup"><span data-stu-id="31e50-127"><see langword="true" /> if this rule is inherited from a parent container; otherwise false.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="31e50-128">其中一個 <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 值，其指定存取規則的繼承 (Inheritance) 屬性。</span><span class="sxs-lookup"><span data-stu-id="31e50-128">One of the <see cref="T:System.Security.AccessControl.InheritanceFlags" /> values that specifies the inheritance properties of the access rule.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="31e50-129">其中一個 <see cref="T:System.Security.AccessControl.PropagationFlags" /> 值，其指定是否要自動傳播繼承的存取規則。</span><span class="sxs-lookup"><span data-stu-id="31e50-129">One of the <see cref="T:System.Security.AccessControl.PropagationFlags" /> values that specifies whether inherited access rules are automatically propagated.</span></span> <span data-ttu-id="31e50-130">如果 <c>inheritanceFlags</c> 設為 <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />，則忽略傳播旗標。</span><span class="sxs-lookup"><span data-stu-id="31e50-130">The propagation flags are ignored if <c>inheritanceFlags</c> is set to <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</span></span></param>
        <param name="type"><span data-ttu-id="31e50-131">指定有效的存取控制類型。</span><span class="sxs-lookup"><span data-stu-id="31e50-131">Specifies the valid access control type.</span></span></param>
        <summary><span data-ttu-id="31e50-132">使用指定的值，初始化 <see cref="T:System.Security.AccessControl.AccessRule" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="31e50-132">Initializes a new instance of the <see cref="T:System.Security.AccessControl.AccessRule" /> class with the specified values.</span></span></summary>
        <returns><span data-ttu-id="31e50-133">這個方法建立的 <see cref="T:System.Security.AccessControl.AccessRule" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="31e50-133">The <see cref="T:System.Security.AccessControl.AccessRule" /> object that this method creates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e50-134">建立存取控制規則的建議的方式是使用的建構函式<xref:System.IO.Pipes.PipeAccessRule>類別。</span><span class="sxs-lookup"><span data-stu-id="31e50-134">The recommended way to create access control rules is to use the constructors of the <xref:System.IO.Pipes.PipeAccessRule> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31e50-135"><paramref name="accessMask" />、<paramref name="inheritanceFlags" />、<paramref name="propagationFlags" /> 或 <paramref name="type" /> 會指定無效的值。</span><span class="sxs-lookup"><span data-stu-id="31e50-135"><paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31e50-136"><paramref name="identityReference" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31e50-136"><paramref name="identityReference" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="31e50-137">-或-</span><span class="sxs-lookup"><span data-stu-id="31e50-137">-or-</span></span>  
  
 <span data-ttu-id="31e50-138"><paramref name="accessMask" /> 為零。</span><span class="sxs-lookup"><span data-stu-id="31e50-138"><paramref name="accessMask" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="31e50-139"><paramref name="identityReference" /> 既不是 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型別，也不是可以轉換成 <see cref="T:System.Security.Principal.NTAccount" /> 型別的型別 (例如 <see cref="T:System.Security.Principal.SecurityIdentifier" />)。</span><span class="sxs-lookup"><span data-stu-id="31e50-139"><paramref name="identityReference" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type, such as <see cref="T:System.Security.Principal.NTAccount" />, that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeSecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31e50-140">取得與目前 <see cref="T:System.Type" /> 物件之存取規則相關聯的物件 <see cref="T:System.IO.Pipes.PipeSecurity" />。</span><span class="sxs-lookup"><span data-stu-id="31e50-140">Gets the <see cref="T:System.Type" /> of the object that is associated with the access rules of the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></summary>
        <value><span data-ttu-id="31e50-141">與目前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 物件之存取規則相關聯的物件型別。</span><span class="sxs-lookup"><span data-stu-id="31e50-141">The type of the object that is associated with the access rules of the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e50-142">類別衍生自<xref:System.Security.AccessControl.ObjectSecurity>類別覆寫<xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A>屬性，並傳回它們以表示的存取權限的類型。</span><span class="sxs-lookup"><span data-stu-id="31e50-142">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> property and return the type they use to represent access rights.</span></span> <span data-ttu-id="31e50-143">當您使用陣列或包含多個類型的安全性物件的集合時，使用這個屬性來判斷要用於每個安全性物件的正確的列舉類型。</span><span class="sxs-lookup"><span data-stu-id="31e50-143">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.IO.Pipes.PipeAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.IO.Pipes.PipeAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As PipeAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::IO::Pipes::PipeAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="31e50-144">要加入的存取規則。</span><span class="sxs-lookup"><span data-stu-id="31e50-144">The access rule to add.</span></span></param>
        <summary><span data-ttu-id="31e50-145">將存取規則加入至與目前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 物件相關聯的 Discretionary 存取控制清單 (DACL)。</span><span class="sxs-lookup"><span data-stu-id="31e50-145">Adds an access rule to the Discretionary Access Control List (DACL) that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e50-146"><xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A>方法會將新規則的規則清單中加入的<xref:System.IO.Pipes.PipeSecurity>包含物件。如果指定的規則已存在的存取控制清單 (ACL)<xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A>方法仍會加入規則，有一個例外狀況：<xref:System.IO.Pipes.PipeAccessRule>使用建立的物件<xref:System.Security.AccessControl.AccessControlType.Deny>值會取代使用建立的物件<xref:System.Security.AccessControl.AccessControlType.Allow>值。</span><span class="sxs-lookup"><span data-stu-id="31e50-146">The <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> method adds a new rule to the list of rules that a <xref:System.IO.Pipes.PipeSecurity> object contains.If an access control list (ACL) already exists for the specified rule, the <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> method will still add the rule, with one exception: a <xref:System.IO.Pipes.PipeAccessRule> object that is created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value supersedes an object that is created using the <xref:System.Security.AccessControl.AccessControlType.Allow> value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31e50-147"><paramref name="rule" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31e50-147">The <paramref name="rule" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.IO.Pipes.PipeAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.IO.Pipes.PipeAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As PipeAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::IO::Pipes::PipeAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="31e50-148">要加入的稽核規則。</span><span class="sxs-lookup"><span data-stu-id="31e50-148">The audit rule to add.</span></span></param>
        <summary><span data-ttu-id="31e50-149">將稽核規則新增至與目前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 物件建立關聯的系統存取控制清單 (SACL)。</span><span class="sxs-lookup"><span data-stu-id="31e50-149">Adds an audit rule to the System Access Control List (SACL)that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e50-150"><xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A>方法會將新的稽核規則的規則清單中加入的<xref:System.IO.Pipes.PipeSecurity>包含物件。</span><span class="sxs-lookup"><span data-stu-id="31e50-150">The <xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A> method adds a new audit rule to the list of rules that a <xref:System.IO.Pipes.PipeSecurity> object contains.</span></span>  
  
 <span data-ttu-id="31e50-151">如果稽核規則已經存在指定的規則，<xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A>方法仍會加入規則。</span><span class="sxs-lookup"><span data-stu-id="31e50-151">If an audit rule already exists for the specified rule, the <xref:System.IO.Pipes.PipeSecurity.AddAuditRule%2A> method will still add the rule.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31e50-152"><paramref name="rule" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31e50-152">The <paramref name="rule" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference"><span data-ttu-id="31e50-153">存取規則適用的識別。</span><span class="sxs-lookup"><span data-stu-id="31e50-153">The identity that the access rule applies to.</span></span> <span data-ttu-id="31e50-154">這個識別必須是可以轉換為 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 物件的物件。</span><span class="sxs-lookup"><span data-stu-id="31e50-154">It must be an object that can be cast as a <see cref="T:System.Security.Principal.SecurityIdentifier" /> object.</span></span></param>
        <param name="accessMask"><span data-ttu-id="31e50-155">這個規則的存取遮罩。</span><span class="sxs-lookup"><span data-stu-id="31e50-155">The access mask of this rule.</span></span> <span data-ttu-id="31e50-156">此存取遮罩為 32 位元的匿名位元集合，其意義是由個別的整合子所定義。</span><span class="sxs-lookup"><span data-stu-id="31e50-156">The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators</span></span></param>
        <param name="isInherited">
          <span data-ttu-id="31e50-157">如果這個規則是從父容器繼承，則為 <see langword="true" />，否則為 false。</span><span class="sxs-lookup"><span data-stu-id="31e50-157"><see langword="true" /> if this rule is inherited from a parent container; otherwise, false..</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="31e50-158">其中一個 <see cref="T:System.Security.AccessControl.InheritanceFlags" /> 值，其指定存取規則的繼承 (Inheritance) 屬性。</span><span class="sxs-lookup"><span data-stu-id="31e50-158">One of the <see cref="T:System.Security.AccessControl.InheritanceFlags" /> values that specifies the inheritance properties of the access rule.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="31e50-159">其中一個 <see cref="T:System.Security.AccessControl.PropagationFlags" /> 值，其指定是否要自動傳播繼承的存取規則。</span><span class="sxs-lookup"><span data-stu-id="31e50-159">One of the <see cref="T:System.Security.AccessControl.PropagationFlags" /> values that specifies whether inherited access rules are automatically propagated.</span></span> <span data-ttu-id="31e50-160">如果 <c>inheritanceFlags</c> 設為 <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />，則忽略傳播旗標。</span><span class="sxs-lookup"><span data-stu-id="31e50-160">The propagation flags are ignored if <c>inheritanceFlags</c> is set to <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</span></span></param>
        <param name="flags"><span data-ttu-id="31e50-161">其中一個 <see cref="T:System.Security.AccessControl.AuditFlags" /> 值，其指定有效的存取控制型別。</span><span class="sxs-lookup"><span data-stu-id="31e50-161">One of the <see cref="T:System.Security.AccessControl.AuditFlags" /> values that specifies the valid access control type.</span></span></param>
        <summary><span data-ttu-id="31e50-162">使用指定的值，初始化 <see cref="T:System.Security.AccessControl.AuditRule" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="31e50-162">Initializes a new instance of the <see cref="T:System.Security.AccessControl.AuditRule" /> class with the specified values.</span></span></summary>
        <returns><span data-ttu-id="31e50-163">這個方法建立的 <see cref="T:System.Security.AccessControl.AuditRule" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="31e50-163">The <see cref="T:System.Security.AccessControl.AuditRule" /> object that this method creates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e50-164">若要建立的稽核規則的建議的方式是使用的建構函式<xref:System.IO.Pipes.PipeAuditRule>類別。</span><span class="sxs-lookup"><span data-stu-id="31e50-164">The recommended way to create audit rules is to use the constructors of the <xref:System.IO.Pipes.PipeAuditRule> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="31e50-165"><paramref name="accessMask" />、<paramref name="inheritanceFlags" />、<paramref name="propagationFlags" /> 或 <paramref name="flags" /> 屬性指定了無效值。</span><span class="sxs-lookup"><span data-stu-id="31e50-165">The <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="flags" /> properties specify an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31e50-166"><paramref name="identityReference" /> 屬性為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31e50-166">The <paramref name="identityReference" /> property is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="31e50-167">-或-</span><span class="sxs-lookup"><span data-stu-id="31e50-167">-or-</span></span>  
  
 <span data-ttu-id="31e50-168"><paramref name="accessMask" /> 屬性為零。</span><span class="sxs-lookup"><span data-stu-id="31e50-168">The <paramref name="accessMask" /> property is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="31e50-169"><paramref name="identityReference" /> 屬性既不是 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型別，也不是可以轉換成 <see cref="T:System.Security.Principal.NTAccount" /> 型別的型別 (例如 <see cref="T:System.Security.Principal.SecurityIdentifier" />)。</span><span class="sxs-lookup"><span data-stu-id="31e50-169">The <paramref name="identityReference" /> property is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type, such as <see cref="T:System.Security.Principal.NTAccount" />, that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.PipeSecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="31e50-170">取得與目前 <see cref="T:System.Type" /> 物件之稽核規則相關聯的 <see cref="T:System.IO.Pipes.PipeSecurity" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="31e50-170">Gets the <see cref="T:System.Type" /> object associated with the audit rules of the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></summary>
        <value><span data-ttu-id="31e50-171">與目前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 物件之稽核規則相關聯的物件型別。</span><span class="sxs-lookup"><span data-stu-id="31e50-171">The type of the object that is associated with the audit rules of the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e50-172">類別衍生自<xref:System.Security.AccessControl.ObjectSecurity>類別覆寫<xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A>屬性，並傳回它們以表示的存取權限的類型。</span><span class="sxs-lookup"><span data-stu-id="31e50-172">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> property and return the type they use to represent access rights.</span></span> <span data-ttu-id="31e50-173">當您使用陣列或包含多個類型的安全性物件的集合時，使用這個屬性來判斷要用於每個安全性物件的正確的列舉類型。</span><span class="sxs-lookup"><span data-stu-id="31e50-173">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Persist">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="31e50-174">將與目前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 物件相關聯之安全性描述元 (Security Descriptor) 的指定區段，儲存至永久儲存區 (Permanent Storage)。</span><span class="sxs-lookup"><span data-stu-id="31e50-174">Saves the specified sections of the security descriptor that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object to permanent storage.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="protected internal void Persist (System.Runtime.InteropServices.SafeHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void Persist(class System.Runtime.InteropServices.SafeHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub Persist (handle As SafeHandle)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void Persist(System::Runtime::InteropServices::SafeHandle ^ handle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.InteropServices.SafeHandle" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="31e50-175">與目前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 物件相關聯之安全物件的控制代碼。</span><span class="sxs-lookup"><span data-stu-id="31e50-175">The handle of the securable object that the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object is associated with.</span></span></param>
        <summary><span data-ttu-id="31e50-176">將與目前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 物件相關聯之安全性描述元 (Security Descriptor) 的指定區段，儲存至永久儲存區 (Permanent Storage)。</span><span class="sxs-lookup"><span data-stu-id="31e50-176">Saves the specified sections of the security descriptor that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object to permanent storage.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="protected internal void Persist (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void Persist(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.Persist(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub Persist (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void Persist(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="31e50-177">與目前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 物件相關聯之安全物件的名稱。</span><span class="sxs-lookup"><span data-stu-id="31e50-177">The name of the securable object that the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object is associated with.</span></span></param>
        <summary><span data-ttu-id="31e50-178">將與目前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 物件相關聯之安全性描述元 (Security Descriptor) 的指定區段，儲存至永久儲存區 (Permanent Storage)。</span><span class="sxs-lookup"><span data-stu-id="31e50-178">Saves the specified sections of the security descriptor that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object to permanent storage.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.IO.Pipes.PipeAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.IO.Pipes.PipeAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As PipeAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::IO::Pipes::PipeAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="31e50-179">要移除的存取規則。</span><span class="sxs-lookup"><span data-stu-id="31e50-179">The access rule to remove.</span></span></param>
        <summary><span data-ttu-id="31e50-180">從與目前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 物件相關聯的 Discretionary 存取控制清單 (DACL) 移除存取規則。</span><span class="sxs-lookup"><span data-stu-id="31e50-180">Removes an access rule from the Discretionary Access Control List (DACL) that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></summary>
        <returns>
          <span data-ttu-id="31e50-181">如果作業成功，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="31e50-181"><see langword="true" /> if the operation is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e50-182"><xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>方法會移除所有符合<xref:System.Security.AccessControl.AccessControlType.Deny>存取規則或比對所有<xref:System.Security.AccessControl.AccessControlType.Allow>從目前的存取規則<xref:System.IO.Pipes.PipeSecurity>物件。</span><span class="sxs-lookup"><span data-stu-id="31e50-182">The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> access rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> access rules from the current <xref:System.IO.Pipes.PipeSecurity> object.</span></span> <span data-ttu-id="31e50-183">例如，您可以使用這個方法來移除所有<xref:System.Security.AccessControl.AccessControlType.Deny>存取使用者的規則，藉由傳遞<xref:System.IO.Pipes.PipeAccessRule>使用建立物件<xref:System.Security.AccessControl.AccessControlType.Deny>值，<xref:System.IO.Pipes.PipeAccessRights.Read>值和使用者帳戶。</span><span class="sxs-lookup"><span data-stu-id="31e50-183">For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> access rules for a user by passing a <xref:System.IO.Pipes.PipeAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.IO.Pipes.PipeAccessRights.Read> value, and a user account.</span></span> <span data-ttu-id="31e50-184"><xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>方法會移除任何指定的拒絕規則<xref:System.IO.Pipes.PipeAccessRights.Read>值或<xref:System.IO.Pipes.PipeAccessRights.Write>值。</span><span class="sxs-lookup"><span data-stu-id="31e50-184">The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes any deny rules that specify the <xref:System.IO.Pipes.PipeAccessRights.Read> value or the <xref:System.IO.Pipes.PipeAccessRights.Write> value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31e50-185"><paramref name="rule" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31e50-185">The <paramref name="rule" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.IO.Pipes.PipeAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.IO.Pipes.PipeAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As PipeAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::IO::Pipes::PipeAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="31e50-186">要移除的存取規則。</span><span class="sxs-lookup"><span data-stu-id="31e50-186">The access rule to remove.</span></span></param>
        <summary><span data-ttu-id="31e50-187">從與目前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 物件相關聯的 Discretionary 存取控制清單 (DACL) 移除指定的存取規則。</span><span class="sxs-lookup"><span data-stu-id="31e50-187">Removes the specified access rule from the Discretionary Access Control List (DACL) that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e50-188"><xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>方法會移除所有符合<xref:System.Security.AccessControl.AccessControlType.Deny>存取規則或比對所有<xref:System.Security.AccessControl.AccessControlType.Allow>從目前的存取規則<xref:System.IO.Pipes.PipeSecurity>物件。</span><span class="sxs-lookup"><span data-stu-id="31e50-188">The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> access rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> access rules from the current <xref:System.IO.Pipes.PipeSecurity> object.</span></span> <span data-ttu-id="31e50-189">例如，您可以使用這個方法來移除所有<xref:System.Security.AccessControl.AccessControlType.Deny>存取使用者的規則，藉由傳遞<xref:System.IO.Pipes.PipeAccessRule>使用建立物件<xref:System.Security.AccessControl.AccessControlType.Deny>值，<xref:System.IO.Pipes.PipeAccessRights.Read>值和使用者帳戶。</span><span class="sxs-lookup"><span data-stu-id="31e50-189">For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> access rules for a user by passing a <xref:System.IO.Pipes.PipeAccessRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.IO.Pipes.PipeAccessRights.Read> value, and a user account.</span></span> <span data-ttu-id="31e50-190"><xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>方法會移除任何指定的拒絕規則<xref:System.IO.Pipes.PipeAccessRights.Read>值或<xref:System.IO.Pipes.PipeAccessRights.Write>值。</span><span class="sxs-lookup"><span data-stu-id="31e50-190">The <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> method removes any deny rules that specify the <xref:System.IO.Pipes.PipeAccessRights.Read> value or the <xref:System.IO.Pipes.PipeAccessRights.Write> value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31e50-191"><paramref name="rule" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31e50-191">The <paramref name="rule" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.IO.Pipes.PipeAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.IO.Pipes.PipeAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As PipeAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::IO::Pipes::PipeAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="31e50-192">要移除的稽核規則。</span><span class="sxs-lookup"><span data-stu-id="31e50-192">The audit rule to remove.</span></span></param>
        <summary><span data-ttu-id="31e50-193">從與目前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 物件相關聯的系統存取控制清單 (SACL) 移除稽核規則。</span><span class="sxs-lookup"><span data-stu-id="31e50-193">Removes an audit rule from the System Access Control List (SACL) that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></summary>
        <returns>
          <span data-ttu-id="31e50-194"><see langword="true" /> 表示已移除稽核規則；否則為 <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="31e50-194"><see langword="true" /> if the audit rule was removed; otherwise, <see langword="false" /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e50-195"><xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A>方法會移除所有符合<xref:System.Security.AccessControl.AccessControlType.Deny>稽核規則或比對所有<xref:System.Security.AccessControl.AccessControlType.Allow>稽核規則從目前<xref:System.IO.Pipes.PipeSecurity>物件。</span><span class="sxs-lookup"><span data-stu-id="31e50-195">The <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A> method removes either all matching <xref:System.Security.AccessControl.AccessControlType.Deny> audit rules or all matching <xref:System.Security.AccessControl.AccessControlType.Allow> audit rules from the current <xref:System.IO.Pipes.PipeSecurity> object.</span></span>  <span data-ttu-id="31e50-196">例如，您可以使用這個方法來移除所有<xref:System.Security.AccessControl.AccessControlType.Deny>稽核規則的使用者藉由傳遞<xref:System.Security.AccessControl.FileSystemAuditRule>使用建立物件<xref:System.Security.AccessControl.AccessControlType.Deny>值，<xref:System.Security.AccessControl.AuditFlags.Failure>值和使用者帳戶。</span><span class="sxs-lookup"><span data-stu-id="31e50-196">For example, you can use this method to remove all <xref:System.Security.AccessControl.AccessControlType.Deny> audit rules for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.AuditFlags.Failure> value, and a user account.</span></span>  <span data-ttu-id="31e50-197">當您這樣做時，<xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A>方法會移除任何指定的拒絕規則<xref:System.Security.AccessControl.AuditFlags.Failure>值或<xref:System.Security.AccessControl.AuditFlags.Success>值。</span><span class="sxs-lookup"><span data-stu-id="31e50-197">When you do this, the <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRule%2A> method removes any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags.Failure> value or the <xref:System.Security.AccessControl.AuditFlags.Success> value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31e50-198"><paramref name="rule" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31e50-198">The <paramref name="rule" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleAll (System.IO.Pipes.PipeAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleAll(class System.IO.Pipes.PipeAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleAll (rule As PipeAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleAll(System::IO::Pipes::PipeAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="31e50-199">要移除的稽核規則。</span><span class="sxs-lookup"><span data-stu-id="31e50-199">The audit rule to remove.</span></span></param>
        <summary><span data-ttu-id="31e50-200">從與目前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 物件相關聯的系統存取控制清單 (SACL)，移除與指定的稽核規則具有相同安全識別項 (Security Identifier) 的所有稽核規則。</span><span class="sxs-lookup"><span data-stu-id="31e50-200">Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e50-201"><xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll%2A>方法中移除指定之使用者的所有稽核規則。</span><span class="sxs-lookup"><span data-stu-id="31e50-201">The <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll%2A> method removes all audit rules for the specified user.</span></span>  <span data-ttu-id="31e50-202">它會忽略中的所有值<xref:System.IO.Pipes.PipeAuditRule>以外的使用者帳戶的物件。</span><span class="sxs-lookup"><span data-stu-id="31e50-202">It ignores all values in the <xref:System.IO.Pipes.PipeAuditRule> object except the user account.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31e50-203"><paramref name="rule" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31e50-203">The <paramref name="rule" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.IO.Pipes.PipeAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.IO.Pipes.PipeAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As PipeAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::IO::Pipes::PipeAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="31e50-204">要移除的稽核規則。</span><span class="sxs-lookup"><span data-stu-id="31e50-204">The audit rule to remove.</span></span></param>
        <summary><span data-ttu-id="31e50-205">從與目前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 物件相關聯的系統存取控制清單 (SACL) 移除指定的稽核規則。</span><span class="sxs-lookup"><span data-stu-id="31e50-205">Removes the specified audit rule from the System Access Control List (SACL) that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e50-206"><xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A>方法中移除指定的比對<xref:System.Security.AccessControl.AccessControlType.Deny>稽核規則，或指定的比對<xref:System.Security.AccessControl.AccessControlType.Allow>從目前的稽核規則<xref:System.IO.Pipes.PipeSecurity>物件。</span><span class="sxs-lookup"><span data-stu-id="31e50-206">The <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A> method removes the specified matching <xref:System.Security.AccessControl.AccessControlType.Deny> audit rule or the specified matching <xref:System.Security.AccessControl.AccessControlType.Allow> audit rule from the current <xref:System.IO.Pipes.PipeSecurity> object.</span></span>  <span data-ttu-id="31e50-207">例如，您可以使用這個方法，若要移除指定<xref:System.Security.AccessControl.AccessControlType.Deny>藉由傳遞使用者的稽核規則<xref:System.Security.AccessControl.FileSystemAuditRule>使用建立物件<xref:System.Security.AccessControl.AccessControlType.Deny>值<xref:System.Security.AccessControl.AuditFlags.Failure>值和使用者帳戶。</span><span class="sxs-lookup"><span data-stu-id="31e50-207">For example, you can use this method to remove a specified <xref:System.Security.AccessControl.AccessControlType.Deny> audit rule for a user by passing a <xref:System.Security.AccessControl.FileSystemAuditRule> object created using the <xref:System.Security.AccessControl.AccessControlType.Deny> value, the <xref:System.Security.AccessControl.AuditFlags.Failure> value, and a user account.</span></span>  <span data-ttu-id="31e50-208">當您這樣做時，<xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A>方法會移除僅拒絕規則，以指定<xref:System.Security.AccessControl.AuditFlags.Failure>值。</span><span class="sxs-lookup"><span data-stu-id="31e50-208">When you do this, the <xref:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific%2A> method removes only a deny rule that specifies the <xref:System.Security.AccessControl.AuditFlags.Failure> value.</span></span>  <span data-ttu-id="31e50-209">它不會移除任何指定的拒絕規則<xref:System.Security.AccessControl.AuditFlags.Success>值。</span><span class="sxs-lookup"><span data-stu-id="31e50-209">It does not remove any deny rules that specify the <xref:System.Security.AccessControl.AuditFlags.Success> value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31e50-210"><paramref name="rule" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31e50-210">The <paramref name="rule" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.IO.Pipes.PipeAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.IO.Pipes.PipeAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As PipeAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::IO::Pipes::PipeAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="31e50-211">要加入的存取規則。</span><span class="sxs-lookup"><span data-stu-id="31e50-211">The access rule to add.</span></span></param>
        <summary><span data-ttu-id="31e50-212">移除與目前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 物件相關聯之 Discretionary 存取控制清單 (DACL) 中的所有存取規則，然後加入指定的存取規則。</span><span class="sxs-lookup"><span data-stu-id="31e50-212">Removes all access rules in the Discretionary Access Control List (DACL) that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object and then adds the specified access rule.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e50-213"><xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A>方法新增指定的存取控制清單 (ACL) 規則，或覆寫的比對任何相同 ACL 規則`rule`參數。</span><span class="sxs-lookup"><span data-stu-id="31e50-213">The <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A> method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the `rule` parameter.</span></span>  <span data-ttu-id="31e50-214">例如，如果`rule`參數會指定<xref:System.IO.Pipes.PipeAccessRights.Read>值和<xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A>方法找到相同的 ACL 規則，以指定<xref:System.IO.Pipes.PipeAccessRights.Read>值完全相同的規則就會覆寫。</span><span class="sxs-lookup"><span data-stu-id="31e50-214">For example, if the `rule` parameter specifies a <xref:System.IO.Pipes.PipeAccessRights.Read> value and the <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Read> value, the identical rule will be overwritten.</span></span>  <span data-ttu-id="31e50-215">如果<xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A>方法找到相同的 ACL 規則，以指定<xref:System.IO.Pipes.PipeAccessRights.Write>值完全相同的規則也會覆寫。</span><span class="sxs-lookup"><span data-stu-id="31e50-215">If the <xref:System.IO.Pipes.PipeSecurity.ResetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Write> value, the identical rule will also be overwritten.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31e50-216"><paramref name="rule" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31e50-216">The <paramref name="rule" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.IO.Pipes.PipeAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.IO.Pipes.PipeAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As PipeAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::IO::Pipes::PipeAccessRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="31e50-217">要設定的規則。</span><span class="sxs-lookup"><span data-stu-id="31e50-217">The rule to set.</span></span></param>
        <summary><span data-ttu-id="31e50-218">在與目前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 物件相關聯的 Discretionary 存取控制清單 (DACL) 中設定存取規則。</span><span class="sxs-lookup"><span data-stu-id="31e50-218">Sets an access rule in the Discretionary Access Control List (DACL) that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e50-219"><xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A>方法新增指定的存取控制清單 (ACL) 規則，或覆寫的比對任何相同 ACL 規則<xref:System.IO.Pipes.PipeAccessRights>值`rule`參數。</span><span class="sxs-lookup"><span data-stu-id="31e50-219">The <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A> method adds the specified access control list (ACL) rule or overwrites any identical ACL rules that match the <xref:System.IO.Pipes.PipeAccessRights> value of the `rule` parameter.</span></span>  <span data-ttu-id="31e50-220">例如，如果`rule`參數會指定<xref:System.IO.Pipes.PipeAccessRights.Read>值和<xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A>方法找到相同的 ACL 規則，以指定<xref:System.IO.Pipes.PipeAccessRights.Read>值完全相同的規則就會覆寫。</span><span class="sxs-lookup"><span data-stu-id="31e50-220">For example, if the `rule` parameter specifies a <xref:System.IO.Pipes.PipeAccessRights.Read> value and the <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Read> value, the identical rule will be overwritten.</span></span>  <span data-ttu-id="31e50-221">如果<xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A>方法找到相同的 ACL 規則，以指定<xref:System.IO.Pipes.PipeAccessRights.Write>值完全相同的規則就不會覆寫。</span><span class="sxs-lookup"><span data-stu-id="31e50-221">If the <xref:System.IO.Pipes.PipeSecurity.SetAccessRule%2A> method finds an identical ACL rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Write> value, the identical rule will not be overwritten.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31e50-222"><paramref name="rule" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31e50-222">The <paramref name="rule" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.IO.Pipes.PipeAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.IO.Pipes.PipeAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As PipeAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::IO::Pipes::PipeAuditRule ^ rule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.IO.Pipes.PipeAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="31e50-223">要設定的規則。</span><span class="sxs-lookup"><span data-stu-id="31e50-223">The rule to set.</span></span></param>
        <summary><span data-ttu-id="31e50-224">在與目前 <see cref="T:System.IO.Pipes.PipeSecurity" /> 物件相關聯的系統存取控制清單 (SACL) 中設定稽核規則。</span><span class="sxs-lookup"><span data-stu-id="31e50-224">Sets an audit rule in the System Access Control List (SACL) that is associated with the current <see cref="T:System.IO.Pipes.PipeSecurity" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31e50-225"><xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A>方法新增指定的稽核規則，或覆寫比對任何相同的稽核規則<xref:System.IO.Pipes.PipeAccessRights>值`rule`參數。</span><span class="sxs-lookup"><span data-stu-id="31e50-225">The <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A> method adds the specified audit rule or overwrites any identical audit rules that match the <xref:System.IO.Pipes.PipeAccessRights> value of the `rule` parameter.</span></span>  <span data-ttu-id="31e50-226">例如，如果`rule`參數會指定<xref:System.IO.Pipes.PipeAccessRights.Read>值和<xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A>方法會尋找指定的完全相同的稽核規則<xref:System.IO.Pipes.PipeAccessRights.Read>值完全相同的規則就會覆寫。</span><span class="sxs-lookup"><span data-stu-id="31e50-226">For example, if the `rule` parameter specifies a <xref:System.IO.Pipes.PipeAccessRights.Read> value and the <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A> method finds an identical audit rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Read> value, the identical rule will be overwritten.</span></span>  <span data-ttu-id="31e50-227">如果<xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A>方法會尋找指定的完全相同的稽核規則<xref:System.IO.Pipes.PipeAccessRights.Write>值完全相同的規則就不會覆寫。</span><span class="sxs-lookup"><span data-stu-id="31e50-227">If the <xref:System.IO.Pipes.PipeSecurity.SetAuditRule%2A> method finds an identical audit rule that specifies the <xref:System.IO.Pipes.PipeAccessRights.Write> value, the identical rule will not be overwritten.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="31e50-228"><paramref name="rule" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="31e50-228">The <paramref name="rule" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>