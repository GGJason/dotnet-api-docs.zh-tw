<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AnonymousPipeClientStream.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac558fff93e1a4bd2aab648e34c26bce216d9112d7a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">58fff93e1a4bd2aab648e34c26bce216d9112d7a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>Exposes the client side of an anonymous pipe stream, which supports both synchronous and asynchronous read and write operations.</source>
          <target state="translated">公開匿名管道資料流的用戶端，這個資料流兼具同步與非同步讀取與寫入操作的支援。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>Anonymous pipes help provide safe and secure interprocess communication between child and parent processes.</source>
          <target state="translated">匿名管道有助於提供安全子項與父代之間的處理序間通訊的處理程序。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>The <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> class enables a child process to connect to and exchange information with a parent process.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph>類別可讓您連接到並父處理序與交換資訊的子處理序。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>Anonymous pipes are unnamed, one-way pipes that typically transfer data between parent and child processes.</source>
          <target state="translated">匿名管道是未命名，但單向通常父和子處理序之間傳輸資料的管道。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>Anonymous pipes are always local; they cannot be used over a network.</source>
          <target state="translated">匿名管道永遠是本機。無法用在網路上。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>A <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> is not supported because anonymous pipes are defined to be one-way.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph>值<ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph>匿名管道定義為單向，所以不支援。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>Anonymous pipes do not support <ph id="ph1">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph> read modes.</source>
          <target state="translated">不支援匿名管道<ph id="ph1">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph>讀取模式。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>The client side of an anonymous pipe must be created from a pipe handle provided by the server side by calling the <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A&gt;</ph> method.</source>
          <target state="translated">匿名管道的用戶端必須從所呼叫的伺服器端提供的管道控制代碼建立<ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>The string is then passed as a parameter when creating the client process.</source>
          <target state="translated">然後，做為參數來傳遞的字串，建立用戶端處理序時。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>From the client process, it is passed to the <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> constructor as the <ph id="ph2">`pipeHandleAsString`</ph> parameter.</source>
          <target state="translated">從用戶端處理序，它會傳遞至<ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph>建構函式做為<ph id="ph2">`pipeHandleAsString`</ph>參數。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>For <ph id="ph1">[!INCLUDE[winxppro](~/includes/winxppro-md.md)]</ph> and <ph id="ph2">[!INCLUDE[win2kserver](~/includes/win2kserver-md.md)]</ph>, a maximum of 10 pipes can simultaneously connect over the network.</source>
          <target state="translated">如<ph id="ph1">[!INCLUDE[winxppro](~/includes/winxppro-md.md)]</ph>和<ph id="ph2">[!INCLUDE[win2kserver](~/includes/win2kserver-md.md)]</ph>，最多 10 個管道同時可以透過網路連線。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</source>
          <target state="translated">下列範例會示範如何使用匿名管道從父處理序傳送字串至子處理序。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>This example creates an <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> object in a parent process with a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.Out&gt;</ph>.</source>
          <target state="translated">此範例會在父處理序中，使用 <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.Out&gt;</ph> 的 <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> 值建立 <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeServerStream&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>It also creates an <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> object in a child process with a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.In&gt;</ph>.</source>
          <target state="translated">它也會建立<ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph>子處理序中的物件<ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph>值<ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.In&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>The parent process then sends a user-supplied string to the child process.</source>
          <target state="translated">接著，父處理序會將使用者提供的字串傳送給子處理序。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>The string is displayed to the console.</source>
          <target state="translated">字串會顯示到主控台。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>This example is for the client process, which is started by the server process.</source>
          <target state="translated">這個範例是由伺服器處理序已啟動用戶端處理程序。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>Name the resulting executable from the client code <ph id="ph1">`pipeClient.exe`</ph> and copy it to the same directory as the server executable when you run this example.</source>
          <target state="translated">用戶端程式碼產生可執行檔的名稱<ph id="ph1">`pipeClient.exe`</ph>並將它複製到相同的目錄伺服器可執行檔，當您執行此範例。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>For the entire code example, including the code for both the pipe client and server, see <bpt id="p1">[</bpt>How to: Use Anonymous Pipes for Local Interprocess Communication<ept id="p1">](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md)</ept>.</source>
          <target state="translated">整個程式碼範例中，將程式碼管道用戶端和伺服器，請參閱<bpt id="p1">[</bpt>How to： 使用匿名管道進行本機處理序間通訊<ept id="p1">](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md)</ept>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="T:System.IO.Pipes.AnonymousPipeClientStream">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)">
          <source>A string that represents the pipe handle.</source>
          <target state="translated">表示管道控制碼的字串。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> class with the specified string representation of the pipe handle.</source>
          <target state="translated">使用代表管道控制碼的指定字串，初始化 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)">
          <source>For constructors without a <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> parameter, the default direction is <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.In&gt;</ph>.</source>
          <target state="translated">建構函式不含<ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph>參數的預設方向是<ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.In&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)">
          <source>The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</source>
          <target state="translated">下列範例會示範如何使用匿名管道從父處理序傳送字串至子處理序。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)">
          <source>In this example, an <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> object is created in a child process.</source>
          <target state="translated">在此範例中，<ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph>子處理序中建立物件。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="pipeHandleAsString" /&gt;</ph> is not a valid pipe handle.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pipeHandleAsString" /&gt;</ph> 不是有效的管道控制碼。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
          <target state="translated">其中一個列舉值，決定管道的方向。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>Anonymous pipes can only be in one direction, so <bpt id="p1">&lt;c&gt;</bpt>direction<ept id="p1">&lt;/c&gt;</ept> cannot be set to <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</source>
          <target state="translated">因為匿名管線只能用於單一方向，所以 <bpt id="p1">&lt;c&gt;</bpt>方向<ept id="p1">&lt;/c&gt;</ept> 無法設定為 <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>A safe handle for the pipe that this <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> object will encapsulate.</source>
          <target state="translated">安全控制代碼，用於這個 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> 物件將會封裝的管道。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> class from the specified handle.</source>
          <target state="translated">從指定的控制代碼初始化 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>A <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> is not supported because anonymous pipes are defined to be one-way.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph>值<ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph>匿名管道定義為單向，所以不支援。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</source>
          <target state="translated">下列範例會示範如何使用匿名管道從父處理序傳送字串至子處理序。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>In this example, an <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> object is created in a child process with a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.In&gt;</ph>.</source>
          <target state="translated">在此範例中，<ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph>的子處理序中建立物件<ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph>值<ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.In&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source><ph id="ph1">&lt;paramref name="safePipeHandle" /&gt;</ph> is not a valid handle.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="safePipeHandle" /&gt;</ph> 不是有效的控制代碼。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source><ph id="ph1">&lt;paramref name="safePipeHandle" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="safePipeHandle" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source><ph id="ph1">&lt;paramref name="direction" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="direction" /&gt;</ph> 設定為 <ph id="ph2">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>An I/O error, such as a disk error, has occurred.</source>
          <target state="translated">發生 I/O 錯誤，例如磁碟錯誤。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>The stream has been closed.</source>
          <target state="translated">資料流已關閉。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
          <source>One of the enumeration values that determines the direction of the pipe.</source>
          <target state="translated">其中一個列舉值，決定管道的方向。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
          <source>Anonymous pipes can only be in one direction, so <bpt id="p1">&lt;c&gt;</bpt>direction<ept id="p1">&lt;/c&gt;</ept> cannot be set to <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</source>
          <target state="translated">因為匿名管線只能用於單一方向，所以 <bpt id="p1">&lt;c&gt;</bpt>方向<ept id="p1">&lt;/c&gt;</ept> 無法設定為 <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
          <source>A string that represents the pipe handle.</source>
          <target state="translated">表示管道控制碼的字串。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> class with the specified pipe direction and a string representation of the pipe handle.</source>
          <target state="translated">使用指定的管道方向以及管道控制碼的字串表示，初始化 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
          <source>A <ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph> is not supported because anonymous pipes are defined to be one-way.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph>值<ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection.InOut&gt;</ph>匿名管道定義為單向，所以不支援。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
          <source>The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</source>
          <target state="translated">下列範例會示範如何使用匿名管道從父處理序傳送字串至子處理序。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
          <source>In this example, an <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> object is created in a child process with a <ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph> value of <ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.In&gt;</ph>.</source>
          <target state="translated">在此範例中，<ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph>的子處理序中建立物件<ph id="ph2">&lt;xref:System.IO.Pipes.PipeDirection&gt;</ph>值<ph id="ph3">&lt;xref:System.IO.Pipes.PipeDirection.In&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
          <source><ph id="ph1">&lt;paramref name="pipeHandleAsString" /&gt;</ph> is an invalid handle.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pipeHandleAsString" /&gt;</ph> 不是有效的控制代碼。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
          <source><ph id="ph1">&lt;paramref name="pipeHandleAsString" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="pipeHandleAsString" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
          <source><ph id="ph1">&lt;paramref name="direction" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="direction" /&gt;</ph> 設定為 <ph id="ph2">&lt;see cref="F:System.IO.Pipes.PipeDirection.InOut" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">針對完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">這個成員無法供部分信任的程式碼使用。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IO.Pipes.AnonymousPipeClientStream.Finalize">
          <source>Releases unmanaged resources and performs other cleanup operations before the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> instance is reclaimed by garbage collection.</source>
          <target state="translated">釋出 Unmanaged 資源並執行其他清除作業後，記憶體回收才能重新回收 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
          <source>Sets the reading mode for the <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> object.</source>
          <target state="translated">設定 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> 物件的讀取模式。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeTransmissionMode" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeTransmissionMode" /&gt;</ph> 物件的 <ph id="ph2">&lt;see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
          <source>Anonymous pipes do not support <ph id="ph1">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph> read mode.</source>
          <target state="translated">不支援匿名管道<ph id="ph1">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph>讀取模式。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
          <source>The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</source>
          <target state="translated">下列範例會示範如何使用匿名管道從父處理序傳送字串至子處理序。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
          <source>In this example, an <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> object is created in a child process.</source>
          <target state="translated">在此範例中，<ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph>子處理序中建立物件。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
          <source>The <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> is caught when the <ph id="ph2">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream.ReadMode%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph>時攔截<ph id="ph2">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream.ReadMode%2A&gt;</ph>屬性設定為<ph id="ph3">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
          <source>The transmission mode is not valid.</source>
          <target state="translated">傳輸模式不正確。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
          <source>For anonymous pipes, only <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /&gt;</ph> is supported.</source>
          <target state="translated">匿名管道只支援 <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
          <source>The transmission mode is <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" /&gt;</ph>.</source>
          <target state="translated">傳輸模式是 <ph id="ph1">&lt;see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
          <source>The connection is broken or another I/O error occurs.</source>
          <target state="translated">連線已中斷，或發生其他 I/O 錯誤。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
          <source>The pipe is closed.</source>
          <target state="translated">管道已關閉。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode">
          <source>Gets the pipe transmission mode supported by the current pipe.</source>
          <target state="translated">取得目前管道支援的管道傳輸模式。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeTransmissionMode" /&gt;</ph> supported by the current pipe.</source>
          <target state="translated">目前管道支援的 <ph id="ph1">&lt;see cref="T:System.IO.Pipes.PipeTransmissionMode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode">
          <source>Anonymous pipes do not support <ph id="ph1">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph> read mode.</source>
          <target state="translated">不支援匿名管道<ph id="ph1">&lt;xref:System.IO.Pipes.PipeTransmissionMode.Message&gt;</ph>讀取模式。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode">
          <source>The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</source>
          <target state="translated">下列範例會示範如何使用匿名管道從父處理序傳送字串至子處理序。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode">
          <source>In this example, an <ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph> object is created in a child process and the <ph id="ph2">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode%2A&gt;</ph> is displayed to the console.</source>
          <target state="translated">在此範例中，<ph id="ph1">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream&gt;</ph>子處理序中建立物件和<ph id="ph2">&lt;xref:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode%2A&gt;</ph>顯示到主控台。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>