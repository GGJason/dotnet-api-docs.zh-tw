<Type Name="ProviderBase" FullName="System.Configuration.Provider.ProviderBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8ac4b3e2914d1d8ccd4f48a74612cd6abd56d602" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30378722" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ProviderBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProviderBase abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供可延伸提供者模型的基底實作。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 提供者模型會封裝所有或部分的多項 ASP.NET 功能，例如成員資格、 設定檔，以及受保護的組態功能。 它可讓開發人員建立支援類別，來提供多個封裝之功能的實作。 此外，開發人員可以撰寫使用提供者模型的新功能。 這可以支援多個實作的功能而不需要複製功能的程式碼，或如果必須變更實作方法記錄應用程式層的有效方式。  
  
 <xref:System.Configuration.Provider.ProviderBase>類別很簡單，只包含一些基本的方法和屬性通用於所有提供者。 特定功能的提供者 (例如<xref:System.Web.Security.MembershipProvider>) 繼承自<xref:System.Configuration.Provider.ProviderBase>並建立必要的方法，該功能的實作特定提供者必須支援的屬性。 實作特定提供者 (例如<xref:System.Web.Security.SqlMembershipProvider>) 依序繼承的特定功能的提供者 (在此情況下， <xref:System.Web.Security.MembershipProvider>)。  
  
 最重要的提供者模型是從應用程式程式碼，抽象 （例如，是否資料會保存為文字檔案或資料庫中） 的實作。 在組態檔中指定的特定功能的實作特定提供者類型。 功能層級提供者接著會讀取該類型，從組態檔，並做為功能程式碼中的處理站。 應用程式開發人員然後可以在應用程式程式碼中使用的功能類別。 實作類型可以交換出組態檔中，因而不須重寫程式碼，以配合不同的實作方法。  
  
 ASP.NET 所隨附的提供者是大部分的功能，例如設定檔或成員資格的資料持續性實作的抽象概念。 不過，此模型可以套用至任何其他類型的功能，可以區隔，實作多個方式。  
  
   
  
## Examples  
 如需如何使用的範例<xref:System.Configuration.Provider.ProviderBase>類別，請參閱[設定檔提供者實作範例](http://msdn.microsoft.com/library/c36e8a56-b416-40b7-95c1-c662cfb8f906)。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ProviderBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Provider.ProviderBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ProviderBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Configuration.Provider.ProviderBase" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Provider.ProviderBase.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得簡短、易讀的描述，適合顯示在管理工具或其他使用者介面 (UI) 中。</summary>
        <value>簡短、易讀的描述，適合顯示在管理工具或其他 UI 中。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果設定提供者並不提供的值，描述<xref:System.Configuration.Provider.ProviderBase.Name%2A>屬性會傳回做為預設值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">提供者的易記名稱。</param>
        <param name="config">名稱/值對集合，代表在此提供者設定中指定的提供者專屬屬性。</param>
        <summary>初始化設定產生器。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 基底類別實作內部追蹤的次數的提供者`Initialize`呼叫方法。 如果提供者初始化一次以上，`InvalidOperationException`指出已經初始化 提供者就會擲回。  
  
 因為大部分功能提供者呼叫<xref:System.Configuration.Provider.ProviderBase.Initialize%2A>執行特定的提供者初始化時，這個方法會防止 double 初始化中央位置。  
  
   
  
## Examples  
 如需如何使用的範例<xref:System.Configuration.Provider.ProviderBase.Initialize%2A>，請參閱[設定檔提供者實作範例](http://msdn.microsoft.com/library/c36e8a56-b416-40b7-95c1-c662cfb8f906)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">提供者名稱為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">提供者名稱的長度為零。</exception>
        <exception cref="T:System.InvalidOperationException">嘗試在初始化提供者後於提供者上呼叫 <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Provider.ProviderBase.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得用來在設定期間代表提供者的易記名稱。</summary>
        <value>用來在設定期間代表提供者的易記名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 建議的模式，這個字串是: [*提供者建立者*] [*實作類型*] [*功能*] 提供者。 雖然<xref:System.Configuration.Provider.ProviderBase.Description%2A>屬性也會提供好記的描述，<xref:System.Configuration.Provider.ProviderBase.Name%2A>屬性會當做識別碼使用的提供者。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>