<Type Name="ProviderBase" FullName="System.Configuration.Provider.ProviderBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9b7d85c08bfaed80ecff989ff455c2766e055dfa" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36698367" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ProviderBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProviderBase abstract" />
  <TypeSignature Language="F#" Value="type ProviderBase = class" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a6781-101">提供可延伸提供者模型的基底實作。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a6781-101">Provides a base implementation for the extensible provider model.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6781-102">提供者模型會封裝所有或部分的多項 ASP.NET 功能，例如成員資格、 設定檔，以及受保護的組態功能。</span><span class="sxs-lookup"><span data-stu-id="a6781-102">The provider model is intended to encapsulate all or part of the functionality of multiple ASP.NET features, such as membership, profiles, and protected configuration.</span></span> <span data-ttu-id="a6781-103">它可讓開發人員建立支援類別，來提供多個封裝之功能的實作。</span><span class="sxs-lookup"><span data-stu-id="a6781-103">It allows the developer to create supporting classes that provide multiple implementations of the encapsulated functionality.</span></span> <span data-ttu-id="a6781-104">此外，開發人員可以撰寫使用提供者模型的新功能。</span><span class="sxs-lookup"><span data-stu-id="a6781-104">In addition, developers can write new features using the provider model.</span></span> <span data-ttu-id="a6781-105">這可以支援多個實作的功能而不需要複製功能的程式碼，或如果必須變更實作方法記錄應用程式層的有效方式。</span><span class="sxs-lookup"><span data-stu-id="a6781-105">This can be an effective way to support multiple implementations of a feature's functionality without duplicating the feature code or recoding the application layer if the implementation method needs to be changed.</span></span>  
  
 <span data-ttu-id="a6781-106"><xref:System.Configuration.Provider.ProviderBase>類別很簡單，只包含一些基本的方法和屬性通用於所有提供者。</span><span class="sxs-lookup"><span data-stu-id="a6781-106">The <xref:System.Configuration.Provider.ProviderBase> class is simple, containing only a few basic methods and properties that are common to all providers.</span></span> <span data-ttu-id="a6781-107">特定功能的提供者 (例如<xref:System.Web.Security.MembershipProvider>) 繼承自<xref:System.Configuration.Provider.ProviderBase>並建立必要的方法，該功能的實作特定提供者必須支援的屬性。</span><span class="sxs-lookup"><span data-stu-id="a6781-107">Feature-specific providers (such as <xref:System.Web.Security.MembershipProvider>) inherit from <xref:System.Configuration.Provider.ProviderBase> and establish the necessary methods and properties that the implementation-specific providers for that feature must support.</span></span> <span data-ttu-id="a6781-108">實作特定提供者 (例如<xref:System.Web.Security.SqlMembershipProvider>) 依序繼承的特定功能的提供者 (在此情況下， <xref:System.Web.Security.MembershipProvider>)。</span><span class="sxs-lookup"><span data-stu-id="a6781-108">Implementation-specific providers (such as <xref:System.Web.Security.SqlMembershipProvider>) inherit in turn from a feature-specific provider (in this case, <xref:System.Web.Security.MembershipProvider>).</span></span>  
  
 <span data-ttu-id="a6781-109">最重要的提供者模型是從應用程式程式碼，抽象 （例如，是否資料會保存為文字檔案或資料庫中） 的實作。</span><span class="sxs-lookup"><span data-stu-id="a6781-109">The most important aspect of the provider model is that the implementation (for example, whether data is persisted as a text file or in a database) is abstracted from the application code.</span></span> <span data-ttu-id="a6781-110">在組態檔中指定的特定功能的實作特定提供者類型。</span><span class="sxs-lookup"><span data-stu-id="a6781-110">The type of the implementation-specific provider for the given feature is designated in a configuration file.</span></span> <span data-ttu-id="a6781-111">功能層級提供者接著會讀取該類型，從組態檔，並做為功能程式碼中的處理站。</span><span class="sxs-lookup"><span data-stu-id="a6781-111">The feature-level provider then reads in the type from the configuration file and acts as a factory to the feature code.</span></span> <span data-ttu-id="a6781-112">應用程式開發人員然後可以在應用程式程式碼中使用的功能類別。</span><span class="sxs-lookup"><span data-stu-id="a6781-112">The application developer can then use the feature classes in the application code.</span></span> <span data-ttu-id="a6781-113">實作類型可以交換出組態檔中，因而不須重寫程式碼，以配合不同的實作方法。</span><span class="sxs-lookup"><span data-stu-id="a6781-113">The implementation type can be swapped out in the configuration file, eliminating the need to rewrite the code to accommodate the different implementation methodology.</span></span>  
  
 <span data-ttu-id="a6781-114">ASP.NET 所隨附的提供者是大部分的功能，例如設定檔或成員資格的資料持續性實作的抽象概念。</span><span class="sxs-lookup"><span data-stu-id="a6781-114">The providers included with ASP.NET are mostly abstractions of data persistence implementations for features like profiles or membership.</span></span> <span data-ttu-id="a6781-115">不過，此模型可以套用至任何其他類型的功能，可以區隔，實作多個方式。</span><span class="sxs-lookup"><span data-stu-id="a6781-115">However, this model can be applied to any other kind of feature functionality that could be abstracted and implemented in multiple ways.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6781-116">如需如何使用的範例<xref:System.Configuration.Provider.ProviderBase>類別，請參閱[設定檔提供者實作範例](http://msdn.microsoft.com/library/c36e8a56-b416-40b7-95c1-c662cfb8f906)。</span><span class="sxs-lookup"><span data-stu-id="a6781-116">For an example of how to use the <xref:System.Configuration.Provider.ProviderBase> class, see [Profile Provider Implementation Example](http://msdn.microsoft.com/library/c36e8a56-b416-40b7-95c1-c662cfb8f906).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ProviderBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Provider.ProviderBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ProviderBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a6781-117">初始化 <see cref="T:System.Configuration.Provider.ProviderBase" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6781-117">Initializes a new instance of the <see cref="T:System.Configuration.Provider.ProviderBase" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Provider.ProviderBase.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Configuration.Provider.ProviderBase.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6781-118">取得簡短、易讀的描述，適合顯示在管理工具或其他使用者介面 (UI) 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6781-118">Gets a brief, friendly description suitable for display in administrative tools or other user interfaces (UIs).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6781-119">簡短、易讀的描述，適合顯示在管理工具或其他 UI 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6781-119">A brief, friendly description suitable for display in administrative tools or other UIs.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6781-120">如果設定提供者並不提供的值，描述<xref:System.Configuration.Provider.ProviderBase.Name%2A>屬性會傳回做為預設值。</span><span class="sxs-lookup"><span data-stu-id="a6781-120">If a configured provider does not supply a description, the value of the <xref:System.Configuration.Provider.ProviderBase.Name%2A> property is returned as a default.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit&#xA;override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="providerBase.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="a6781-121">提供者的易記名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6781-121">The friendly name of the provider.</span>
          </span>
        </param>
        <param name="config">
          <span data-ttu-id="a6781-122">名稱/值對集合，代表在此提供者設定中指定的提供者專屬屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6781-122">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a6781-123">初始化設定產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6781-123">Initializes the configuration builder.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6781-124">基底類別實作內部追蹤的次數的提供者`Initialize`呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="a6781-124">The base class implementation internally tracks the number of times the provider's `Initialize` method has been called.</span></span> <span data-ttu-id="a6781-125">如果提供者初始化一次以上，`InvalidOperationException`指出已經初始化 提供者就會擲回。</span><span class="sxs-lookup"><span data-stu-id="a6781-125">If a provider is initialized more than once, an `InvalidOperationException` is thrown stating that the provider is already initialized.</span></span>  
  
 <span data-ttu-id="a6781-126">因為大部分功能提供者呼叫<xref:System.Configuration.Provider.ProviderBase.Initialize%2A>執行特定的提供者初始化時，這個方法會防止 double 初始化中央位置。</span><span class="sxs-lookup"><span data-stu-id="a6781-126">Because most feature providers call <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> prior to performing provider-specific initialization, this method is a central location for preventing double initialization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a6781-127">如需如何使用的範例<xref:System.Configuration.Provider.ProviderBase.Initialize%2A>，請參閱[設定檔提供者實作範例](http://msdn.microsoft.com/library/c36e8a56-b416-40b7-95c1-c662cfb8f906)。</span><span class="sxs-lookup"><span data-stu-id="a6781-127">For an example of how to use <xref:System.Configuration.Provider.ProviderBase.Initialize%2A>, see [Profile Provider Implementation Example](http://msdn.microsoft.com/library/c36e8a56-b416-40b7-95c1-c662cfb8f906).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a6781-128">提供者名稱為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6781-128">The name of the provider is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a6781-129">提供者名稱的長度為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6781-129">The name of the provider has a length of zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a6781-130">嘗試在初始化提供者後於提供者上呼叫 <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6781-130">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> on a provider after the provider has already been initialized.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Provider.ProviderBase.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Configuration.Provider.ProviderBase.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a6781-131">取得用來在設定期間代表提供者的易記名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6781-131">Gets the friendly name used to refer to the provider during configuration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a6781-132">用來在設定期間代表提供者的易記名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a6781-132">The friendly name used to refer to the provider during configuration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a6781-133">建議的模式，這個字串是: [*提供者建立者*] [*實作類型*] [*功能*] 提供者。</span><span class="sxs-lookup"><span data-stu-id="a6781-133">The recommended pattern for this string is: [*Provider Creator*][*Implementation Type*][*Feature*]Provider.</span></span> <span data-ttu-id="a6781-134">雖然<xref:System.Configuration.Provider.ProviderBase.Description%2A>屬性也會提供好記的描述，<xref:System.Configuration.Provider.ProviderBase.Name%2A>屬性會當做識別碼使用的提供者。</span><span class="sxs-lookup"><span data-stu-id="a6781-134">Although the <xref:System.Configuration.Provider.ProviderBase.Description%2A> property also provides a friendly description, the <xref:System.Configuration.Provider.ProviderBase.Name%2A> property is used as an identifier for the provider.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>