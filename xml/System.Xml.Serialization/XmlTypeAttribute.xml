<Type Name="XmlTypeAttribute" FullName="System.Xml.Serialization.XmlTypeAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="97b0cd28832fddc0940d7af78110bfe9d4264b02" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48652407" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTypeAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Interface | System.AttributeTargets.Struct)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Interface)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e5c04-101">控制由 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化屬性 (Attribute) 目標後所產生的 XML 結構描述。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e5c04-101">Controls the XML schema that is generated when the attribute target is serialized by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5c04-102"><xref:System.Xml.Serialization.XmlTypeAttribute>屬於一系列屬性可控制如何<xref:System.Xml.Serialization.XmlSerializer>序列化或還原序列化物件。</span><span class="sxs-lookup"><span data-stu-id="e5c04-102">The <xref:System.Xml.Serialization.XmlTypeAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object.</span></span> <span data-ttu-id="e5c04-103">相似的屬性完整清單，請參閱 <<c0> [ 屬性控制 XML 序列化的](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="e5c04-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="e5c04-104">您可以套用<xref:System.Xml.Serialization.XmlTypeAttribute>類別、 結構、 列舉型別，或介面宣告。</span><span class="sxs-lookup"><span data-stu-id="e5c04-104">You can apply the <xref:System.Xml.Serialization.XmlTypeAttribute> to a class, structure, enumeration, or interface declaration.</span></span>  
  
 <span data-ttu-id="e5c04-105">套用<xref:System.Xml.Serialization.XmlTypeAttribute>至類別，以指定 XML 型別的命名空間、 XML 的型別名稱，以及是否要在 XML 結構描述文件中包含的類型。</span><span class="sxs-lookup"><span data-stu-id="e5c04-105">Apply the <xref:System.Xml.Serialization.XmlTypeAttribute> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML schema document.</span></span> <span data-ttu-id="e5c04-106">若要查看屬性的設定結果<xref:System.Xml.Serialization.XmlTypeAttribute>類別、 編譯您的應用程式可執行檔或 DLL，並將傳遞至產生的檔案[XML 結構描述定義工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)。</span><span class="sxs-lookup"><span data-stu-id="e5c04-106">To see the results of setting the properties of the <xref:System.Xml.Serialization.XmlTypeAttribute> class, compile your application as an executable or DLL, and pass the resulting file to the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md).</span></span> <span data-ttu-id="e5c04-107">此工具會將結構描述，包括型別定義。</span><span class="sxs-lookup"><span data-stu-id="e5c04-107">The tool writes the schema, including the type definition.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e5c04-108">如果您設定<xref:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema%2A>屬性，以`false`，則[XML 結構描述定義工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)不包含結構描述中的型別。</span><span class="sxs-lookup"><span data-stu-id="e5c04-108">If you set the <xref:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema%2A> property to `false`, the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) does not include the type in the schema.</span></span> <span data-ttu-id="e5c04-109">根據預設，每個公用類別，產生 XSD 工具`complexType`和該類型的項目。</span><span class="sxs-lookup"><span data-stu-id="e5c04-109">By default, for each public class, the XSD tool generates a `complexType` and an element of that type.</span></span>  
  
 <span data-ttu-id="e5c04-110">如需使用屬性的詳細資訊，請參閱[屬性](~/docs/standard/attributes/index.md)。</span><span class="sxs-lookup"><span data-stu-id="e5c04-110">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e5c04-111">您可以使用 word`XmlType`代替較長的程式碼中<xref:System.Xml.Serialization.XmlTypeAttribute>。</span><span class="sxs-lookup"><span data-stu-id="e5c04-111">You can use the word `XmlType` in your code instead of the longer <xref:System.Xml.Serialization.XmlTypeAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5c04-112">下列範例顯示兩個類別而<xref:System.Xml.Serialization.XmlTypeAttribute>已套用。</span><span class="sxs-lookup"><span data-stu-id="e5c04-112">The following example shows two classes to which the <xref:System.Xml.Serialization.XmlTypeAttribute> has been applied.</span></span>  
  
 [!code-cpp[Classic XmlTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTypeAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTypeAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlText" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">
      <span data-ttu-id="e5c04-113">XML 序列化簡介</span>
      <span class="sxs-lookup">
        <span data-stu-id="e5c04-113">Introducing XML Serialization</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">
      <span data-ttu-id="e5c04-114">HOW TO：指定 XML 資料流的替代元素名稱</span>
      <span class="sxs-lookup">
        <span data-stu-id="e5c04-114">How to: Specify an Alternate Element Name for an XML Stream</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">
      <span data-ttu-id="e5c04-115">使用屬性控制 XML 序列化</span>
      <span class="sxs-lookup">
        <span data-stu-id="e5c04-115">Controlling XML Serialization Using Attributes</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">
      <span data-ttu-id="e5c04-116">XML 序列化的範例</span>
      <span class="sxs-lookup">
        <span data-stu-id="e5c04-116">Examples of XML Serialization</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5c04-117">初始化 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5c04-117">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTypeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTypeAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTypeAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e5c04-118">初始化 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5c04-118">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e5c04-119">下列範例會建立兩個執行個體<xref:System.Xml.Serialization.XmlTypeAttribute>用來覆寫的兩個類別序列化的類別。</span><span class="sxs-lookup"><span data-stu-id="e5c04-119">The following example creates two instances of the <xref:System.Xml.Serialization.XmlTypeAttribute> class that are used to override the serialization of the two classes.</span></span>  
  
 [!code-cpp[XMLTypeAttribute1_2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/XMLTypeAttribute1_2/CPP/xmltypeattribute1_2.cpp#2)]
 [!code-csharp[XMLTypeAttribute1_2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/XMLTypeAttribute1_2/CS/xmltypeattribute1_2.cs#2)]
 [!code-vb[XMLTypeAttribute1_2#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XMLTypeAttribute1_2/VB/xmltypeattribute1_2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTypeAttribute (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTypeAttribute(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlTypeAttribute : string -&gt; System.Xml.Serialization.XmlTypeAttribute" Usage="new System.Xml.Serialization.XmlTypeAttribute typeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="e5c04-120">XML 型別的名稱，是 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化類別執行個體時所產生的 (並且對類別執行個體進行還原序列化時所辨識的)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5c04-120">The name of the XML type that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates when it serializes the class instance (and recognizes when it deserializes the class instance).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5c04-121">初始化 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 類別的新執行個體，並指定 XML 型別的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5c04-121">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> class and specifies the name of the XML type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5c04-122">套用<xref:System.Xml.Serialization.XmlTypeAttribute>至類別，以指定 XML 型別的命名空間、 XML 的型別名稱，以及是否要在 XML 結構描述文件中包含的類型。</span><span class="sxs-lookup"><span data-stu-id="e5c04-122">Apply the <xref:System.Xml.Serialization.XmlTypeAttribute> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML schema document.</span></span> <span data-ttu-id="e5c04-123">若要查看屬性的設定結果<xref:System.Xml.Serialization.XmlTypeAttribute>類別、 編譯您的應用程式可執行檔或 DLL，並將傳遞至產生的檔案[XML 結構描述定義工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)。</span><span class="sxs-lookup"><span data-stu-id="e5c04-123">To see the results of setting the properties of the <xref:System.Xml.Serialization.XmlTypeAttribute> class, compile your application as an executable or DLL, and pass the resulting file to the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md).</span></span> <span data-ttu-id="e5c04-124">此工具會將結構描述，包括型別定義。</span><span class="sxs-lookup"><span data-stu-id="e5c04-124">The tool writes the schema, including the type definition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5c04-125">下列範例會建立兩個執行個體<xref:System.Xml.Serialization.XmlTypeAttribute>用來覆寫的兩個類別序列化的類別。</span><span class="sxs-lookup"><span data-stu-id="e5c04-125">The following example creates two instances of the <xref:System.Xml.Serialization.XmlTypeAttribute> class that are used to override the serialization of the two classes.</span></span>  
  
 [!code-cpp[XMLTypeAttribute1_2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/XMLTypeAttribute1_2/CPP/xmltypeattribute1_2.cpp#2)]
 [!code-csharp[XMLTypeAttribute1_2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/XMLTypeAttribute1_2/CS/xmltypeattribute1_2.cs#2)]
 [!code-vb[XMLTypeAttribute1_2#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XMLTypeAttribute1_2/VB/xmltypeattribute1_2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousType">
      <MemberSignature Language="C#" Value="public bool AnonymousType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AnonymousType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType" />
      <MemberSignature Language="VB.NET" Value="Public Property AnonymousType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AnonymousType { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AnonymousType : bool with get, set" Usage="System.Xml.Serialization.XmlTypeAttribute.AnonymousType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5c04-126">取得或設定值，判斷產生的結構描述型別是否為 XSD 匿名型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5c04-126">Gets or sets a value that determines whether the resulting schema type is an XSD anonymous type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5c04-127">如果產生的結構描述型別是 XSD 匿名型別則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5c04-127">
              <see langword="true" />, if the resulting schema type is an XSD anonymous type; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeInSchema">
      <MemberSignature Language="C#" Value="public bool IncludeInSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeInSchema" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeInSchema As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeInSchema { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeInSchema : bool with get, set" Usage="System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5c04-128">取得或設定值，指出是否將型別包含在 XML 結構描述文件中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5c04-128">Gets or sets a value that indicates whether to include the type in XML schema documents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5c04-129">若要將型別包含於 XML 結構描述文件中，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5c04-129">
              <see langword="true" /> to include the type in XML schema documents; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5c04-130">套用<xref:System.Xml.Serialization.XmlTypeAttribute>至類別，以指定 XML 型別的命名空間、 XML 的型別名稱，以及是否要在 XML 結構描述文件中包含的類型。</span><span class="sxs-lookup"><span data-stu-id="e5c04-130">Apply the <xref:System.Xml.Serialization.XmlTypeAttribute> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML schema document.</span></span> <span data-ttu-id="e5c04-131">若要查看屬性的設定結果<xref:System.Xml.Serialization.XmlTypeAttribute>類別，請編譯您的應用程式可執行檔或 DLL，以及將所產生的檔案傳遞至 XML 結構描述定義工具 (XSD.exe)。</span><span class="sxs-lookup"><span data-stu-id="e5c04-131">To see the results of setting the properties of the <xref:System.Xml.Serialization.XmlTypeAttribute> class, compile your application as an executable or DLL, and pass the resulting file to the XML Schema Definition tool (XSD.exe).</span></span> <span data-ttu-id="e5c04-132">此工具會將結構描述，包括型別定義。</span><span class="sxs-lookup"><span data-stu-id="e5c04-132">The tool writes the schema, including the type definition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5c04-133">下列範例會套用<xref:System.Xml.Serialization.XmlTypeAttribute>要`ExtraneousInfo`類別，設定<xref:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema%2A>屬性設`false`。</span><span class="sxs-lookup"><span data-stu-id="e5c04-133">The following example applies the <xref:System.Xml.Serialization.XmlTypeAttribute> to the `ExtraneousInfo` class, setting the <xref:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema%2A> property to `false`.</span></span>  
  
 [!code-cpp[Classic XmlTypeAttribute.IncludeInSchema Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTypeAttribute.IncludeInSchema Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTypeAttribute.IncludeInSchema Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTypeAttribute.IncludeInSchema Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTypeAttribute.IncludeInSchema Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTypeAttribute.IncludeInSchema Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTypeAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlTypeAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5c04-134">取得或設定 XML 型別的命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5c04-134">Gets or sets the namespace of the XML type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5c04-135">XML 型別的命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5c04-135">The namespace of the XML type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e5c04-136">下列範例會套用<xref:System.Xml.Serialization.XmlTypeAttribute>類別，以設定<xref:System.Xml.Serialization.XmlTypeAttribute.Namespace%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="e5c04-136">The following example applies the <xref:System.Xml.Serialization.XmlTypeAttribute> to a class while setting the <xref:System.Xml.Serialization.XmlTypeAttribute.Namespace%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlTypeAttribute.Namespace Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTypeAttribute.Namespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTypeAttribute.Namespace Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTypeAttribute.Namespace Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTypeAttribute.Namespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTypeAttribute.Namespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTypeAttribute.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Xml.Serialization.XmlTypeAttribute.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5c04-137">取得或設定 XML 型別的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5c04-137">Gets or sets the name of the XML type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5c04-138">XML 型別的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5c04-138">The name of the XML type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5c04-139">套用<xref:System.Xml.Serialization.XmlTypeAttribute>至類別，以指定 XML 型別的命名空間、 XML 的型別名稱，以及是否要在 XML 結構描述文件中包含的類型。</span><span class="sxs-lookup"><span data-stu-id="e5c04-139">Apply the <xref:System.Xml.Serialization.XmlTypeAttribute> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML schema document.</span></span> <span data-ttu-id="e5c04-140">若要查看屬性的設定結果<xref:System.Xml.Serialization.XmlTypeAttribute>類別、 編譯您的應用程式可執行檔或 DLL，並將傳遞至產生的檔案[XML 結構描述定義工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)。</span><span class="sxs-lookup"><span data-stu-id="e5c04-140">To see the results of setting the properties of the <xref:System.Xml.Serialization.XmlTypeAttribute> class, compile your application as an executable or DLL, and pass the resulting file to the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md).</span></span> <span data-ttu-id="e5c04-141">此工具會將結構描述，包括型別定義。</span><span class="sxs-lookup"><span data-stu-id="e5c04-141">The tool writes the schema, including the type definition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5c04-142">下列範例會套用<xref:System.Xml.Serialization.XmlTypeAttribute>要`Person`和`Job`類別。</span><span class="sxs-lookup"><span data-stu-id="e5c04-142">The following example applies the <xref:System.Xml.Serialization.XmlTypeAttribute> to the `Person` and `Job` classes.</span></span> <span data-ttu-id="e5c04-143">如果您編譯類別，並將 XML 結構描述定義工具產生的可執行檔，結構描述會顯示在 [輸出] 區段中。</span><span class="sxs-lookup"><span data-stu-id="e5c04-143">If you compile the class and pass the resulting executable file to the XML Schema Definition tool, the schema is displayed in the Output section.</span></span>  
  
 [!code-cpp[Classic XmlTypeAttribute.TypeName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTypeAttribute.TypeName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTypeAttribute.TypeName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTypeAttribute.TypeName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTypeAttribute.TypeName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTypeAttribute.TypeName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>