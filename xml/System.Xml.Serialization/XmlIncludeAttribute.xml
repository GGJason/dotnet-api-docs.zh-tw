<Type Name="XmlIncludeAttribute" FullName="System.Xml.Serialization.XmlIncludeAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5499cb186e6e304a54d0775c57c2792e93437f81" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36439242" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlIncludeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlIncludeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlIncludeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlIncludeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlIncludeAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlIncludeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface | System.AttributeTargets.Method | System.AttributeTargets.Struct, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>讓 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 在對物件進行序列化或還原序列化時，能夠辨識型別。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Xml.Serialization.XmlIncludeAttribute>當您呼叫<xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>或<xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>方法<xref:System.Xml.Serialization.XmlSerializer>類別。  
  
 當套用<xref:System.Xml.Serialization.XmlIncludeAttribute>，指定<xref:System.Type>衍生類別。 當<xref:System.Xml.Serialization.XmlSerializer>序列化包含基底和衍生的類別中，物件就可以再識別這兩種物件類型。  
  
 您可以使用<xref:System.Xml.Serialization.XmlIncludeAttribute>加入衍生的類別中會寫入 Web 服務描述語言 (WSDL) 中的服務描述文件。 例如，如果方法會傳回<xref:System.Object>，套用<xref:System.Xml.Serialization.XmlIncludeAttribute>方法並指定要傳回的實際型別。  
  
 如需有關 WSDL 的詳細資訊，請參閱 「 Web 服務描述語言 (WSDL) 1.1 」 位於 www.w3.org。  
  
   
  
## Examples  
 下列範例示範三個類別，其中兩個繼承自第三個。 此範例套用<xref:System.Xml.Serialization.XmlIncludeAttribute>傳回的其中一個衍生的類別執行個體的方法。  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlIncludeAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlIncludeAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlIncludeAttribute : Type -&gt; System.Xml.Serialization.XmlIncludeAttribute" Usage="new System.Xml.Serialization.XmlIncludeAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">要包含的物件的 <see cref="T:System.Type" />。</param>
        <summary>初始化 <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範三個類別，其中兩個繼承自第三個。 此範例套用<xref:System.Xml.Serialization.XmlIncludeAttribute>以傳回的兩個的其中一個執行個體的方法在衍生類別。 範例會設定<xref:System.Xml.Serialization.XmlIncludeAttribute.Type%2A>傳回的物件類型的屬性。  
  
 [!code-cpp[Classic XmlIncludeAttribute.XmlIncludeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlIncludeAttribute.XmlIncludeAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlIncludeAttribute.XmlIncludeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlIncludeAttribute.XmlIncludeAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlIncludeAttribute.XmlIncludeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlIncludeAttribute.XmlIncludeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlIncludeAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.XmlIncludeAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要包含的物件的型別。</summary>
        <value>要包含的物件的 <see cref="T:System.Type" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會定義名為類別`Group`，其中包含名為的欄位`Employees`所傳回的陣列`Employee`物件。 此範例衍生`Manager`類別從`Employee`類別，並套用<xref:System.Xml.Serialization.XmlIncludeAttribute>至`Employee`類別。 此範例會建立當`Group`物件，它會插入`Manager`物件插入`Employee`陣列。 最後，此範例會序列化`Group`物件。  
  
 [!code-cpp[Classic XmlIncludeAttribute.Type Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlIncludeAttribute.Type Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlIncludeAttribute.Type Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlIncludeAttribute.Type Example/CS/source.cs#1)]
 [!code-vb[Classic XmlIncludeAttribute.Type Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlIncludeAttribute.Type Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>