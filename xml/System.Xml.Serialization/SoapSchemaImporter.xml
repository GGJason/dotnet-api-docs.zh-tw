<Type Name="SoapSchemaImporter" FullName="System.Xml.Serialization.SoapSchemaImporter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a668f5405895944369fed13071a954fe88d54a90" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720422" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SoapSchemaImporter : System.Xml.Serialization.SchemaImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapSchemaImporter extends System.Xml.Serialization.SchemaImporter" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapSchemaImporter" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapSchemaImporter&#xA;Inherits SchemaImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapSchemaImporter : System::Xml::Serialization::SchemaImporter" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Serialization.SchemaImporter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>在 .NET Framework 中使用，以便針對 WSDL 文件中的 SOAP 編碼訊息部分產生 .NET Framework 型別的內部對應。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapSchemaImporter>類別會由[Web 服務描述語言工具 (Wsdl.exe)](http://msdn.microsoft.com/library/b9210348-8bc2-4367-8c91-d1a04b403e88)，而<xref:System.Web.Services.Description.ServiceDescriptionImporter>類別，同時從 Web 服務描述語言 （產生用戶端 proxy 類別或抽象伺服器類別WSDL) 文件。 而不是直接使用這個類別，使用 Wsdl.exe。  
  
 <xref:System.Xml.Serialization.SoapSchemaImporter>類別具有要產生內部組件中定義之元素的 WSDL 文件的.NET Framework 類型對應的方法。 類別是只適用於 WSDL 文件會指定 SOAP 編碼的 SOAP 1.1 規格第 5 節中所述。  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Xml.Serialization.SoapCodeExporter" />
    <altmember cref="T:System.Xml.Serialization.XmlSchemaImporter" />
    <altmember cref="T:System.Web.Services.Description.ServiceDescriptionImporter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.SoapSchemaImporter" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapSchemaImporter (System.Xml.Serialization.XmlSchemas schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.XmlSchemas schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemas As XmlSchemas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapSchemaImporter(System::Xml::Serialization::XmlSchemas ^ schemas);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Serialization.XmlSchemas" />
      </Parameters>
      <Docs>
        <param name="schemas">
          <see cref="T:System.Xml.Schema.XmlSchema" /> 物件的集合。</param>
        <summary>初始化 <see cref="T:System.Xml.Serialization.SoapSchemaImporter" /> 類別的新執行個體，並指定 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件，表示 WSDL 文件中定義之 SOAP 編碼訊息所使用的 XML 結構描述。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SOAP 編碼方式，如 SOAP 1.1 規格中，第 5 節中所定義中指定的 WSDL 文件。  
  
 而不是建立的執行個體<xref:System.Xml.Serialization.SoapSchemaImporter>直接類別中，使用 Wsdl.exe。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapSchemaImporter (System.Xml.Serialization.XmlSchemas schemas, System.Xml.Serialization.CodeIdentifiers typeIdentifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.XmlSchemas schemas, class System.Xml.Serialization.CodeIdentifiers typeIdentifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemas As XmlSchemas, typeIdentifiers As CodeIdentifiers)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapSchemaImporter(System::Xml::Serialization::XmlSchemas ^ schemas, System::Xml::Serialization::CodeIdentifiers ^ typeIdentifiers);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Serialization.XmlSchemas" />
        <Parameter Name="typeIdentifiers" Type="System.Xml.Serialization.CodeIdentifiers" />
      </Parameters>
      <Docs>
        <param name="schemas">
          <see cref="T:System.Xml.Schema.XmlSchema" /> 物件的集合。</param>
        <param name="typeIdentifiers">
          <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 物件，其指定針對 WSDL 文件中定義的繫結所產生的類別集合。</param>
        <summary>初始化 <see cref="T:System.Xml.Serialization.SoapSchemaImporter" /> 類別的新執行個體，並指定 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件，表示由 SOAP 編碼訊息所使用的 XML 結構描述，再加上針對 WSDL 文件中定義的繫結所產生的類別。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SOAP 編碼方式，如 SOAP 1.1 規格中，第 5 節中所定義中指定的 WSDL 文件。  
  
 而不是建立的執行個體<xref:System.Xml.Serialization.SoapSchemaImporter>直接類別中，使用 Wsdl.exe。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapSchemaImporter (System.Xml.Serialization.XmlSchemas schemas, System.Xml.Serialization.CodeGenerationOptions options, System.Xml.Serialization.ImportContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.XmlSchemas schemas, valuetype System.Xml.Serialization.CodeGenerationOptions options, class System.Xml.Serialization.ImportContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeGenerationOptions,System.Xml.Serialization.ImportContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemas As XmlSchemas, options As CodeGenerationOptions, context As ImportContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapSchemaImporter(System::Xml::Serialization::XmlSchemas ^ schemas, System::Xml::Serialization::CodeGenerationOptions options, System::Xml::Serialization::ImportContext ^ context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Serialization.XmlSchemas" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" />
        <Parameter Name="context" Type="System.Xml.Serialization.ImportContext" />
      </Parameters>
      <Docs>
        <param name="schemas">
          <see cref="T:System.Xml.Schema.XmlSchema" /> 物件的集合。</param>
        <param name="options">其中一個 <see cref="T:System.Xml.Serialization.CodeGenerationOptions" />，可指定產生 .NET Framework 型別的各種選項。</param>
        <param name="context">
          <see cref="T:System.Xml.Serialization.ImportContext" />，其中描述結構描述集合要繫結至 .NET Framework 程式碼實體的內容。</param>
        <summary>初始化 <see cref="T:System.Xml.Serialization.SoapSchemaImporter" /> 類別的新執行個體，並指定結構描述、編譯器選項以及結構描述的內容。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapSchemaImporter (System.Xml.Serialization.XmlSchemas schemas, System.Xml.Serialization.CodeIdentifiers typeIdentifiers, System.Xml.Serialization.CodeGenerationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.XmlSchemas schemas, class System.Xml.Serialization.CodeIdentifiers typeIdentifiers, valuetype System.Xml.Serialization.CodeGenerationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.CodeGenerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemas As XmlSchemas, typeIdentifiers As CodeIdentifiers, options As CodeGenerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapSchemaImporter(System::Xml::Serialization::XmlSchemas ^ schemas, System::Xml::Serialization::CodeIdentifiers ^ typeIdentifiers, System::Xml::Serialization::CodeGenerationOptions options);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Serialization.XmlSchemas" />
        <Parameter Name="typeIdentifiers" Type="System.Xml.Serialization.CodeIdentifiers" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" />
      </Parameters>
      <Docs>
        <param name="schemas">
          <see cref="T:System.Xml.Schema.XmlSchema" /> 物件的集合。</param>
        <param name="typeIdentifiers">
          <see cref="T:System.Xml.Serialization.CodeIdentifiers" />，可針對由 .NET Framework 之 XML 序列化 (Serialization) 基礎結構所產生的相關程式碼實體或類型對應，維護名稱群組。</param>
        <param name="options">其中一個 <see cref="T:System.Xml.Serialization.CodeGenerationOptions" />，可指定產生 .NET Framework 型別的各種選項。</param>
        <summary>初始化 <see cref="T:System.Xml.Serialization.SoapSchemaImporter" /> 類別的新執行個體，並指定結構描述、編譯器選項以及相關程式碼實體的名稱。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapSchemaImporter (System.Xml.Serialization.XmlSchemas schemas, System.Xml.Serialization.CodeGenerationOptions options, System.CodeDom.Compiler.CodeDomProvider codeProvider, System.Xml.Serialization.ImportContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.XmlSchemas schemas, valuetype System.Xml.Serialization.CodeGenerationOptions options, class System.CodeDom.Compiler.CodeDomProvider codeProvider, class System.Xml.Serialization.ImportContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider,System.Xml.Serialization.ImportContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemas As XmlSchemas, options As CodeGenerationOptions, codeProvider As CodeDomProvider, context As ImportContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapSchemaImporter(System::Xml::Serialization::XmlSchemas ^ schemas, System::Xml::Serialization::CodeGenerationOptions options, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider, System::Xml::Serialization::ImportContext ^ context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Serialization.XmlSchemas" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
        <Parameter Name="context" Type="System.Xml.Serialization.ImportContext" />
      </Parameters>
      <Docs>
        <param name="schemas">包含 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 物件集合的 <see cref="T:System.Xml.Schema.XmlSchema" />。</param>
        <param name="options">其中一個 <see cref="T:System.Xml.Serialization.CodeGenerationOptions" />，可指定產生 .NET Framework 型別的各種選項。</param>
        <param name="codeProvider">用來產生序列化程式碼的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />。</param>
        <param name="context">
          <see cref="T:System.Xml.Serialization.ImportContext" />，其中描述結構描述集合要繫結至 .NET Framework 程式碼實體的內容。</param>
        <summary>初始化 <see cref="T:System.Xml.Serialization.SoapSchemaImporter" /> 類別的新執行個體，並指定結構描述、編譯器選項以及相關程式碼實體的名稱。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportDerivedTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportDerivedTypeMapping (System.Xml.XmlQualifiedName name, Type baseType, bool baseTypeCanBeIndirect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportDerivedTypeMapping(class System.Xml.XmlQualifiedName name, class System.Type baseType, bool baseTypeCanBeIndirect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportDerivedTypeMapping (name As XmlQualifiedName, baseType As Type, baseTypeCanBeIndirect As Boolean) As XmlTypeMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlTypeMapping ^ ImportDerivedTypeMapping(System::Xml::XmlQualifiedName ^ name, Type ^ baseType, bool baseTypeCanBeIndirect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Xml.XmlQualifiedName" />
        <Parameter Name="baseType" Type="System.Type" />
        <Parameter Name="baseTypeCanBeIndirect" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.Xml.XmlQualifiedName" />，其指定要產生 .NET Framework 型別之項目型別的名稱。</param>
        <param name="baseType">要產生 .NET Framework 型別的基底型別。</param>
        <param name="baseTypeCanBeIndirect">
          <see langword="true" /> 表示產生的型別可能會間接繼承自基底型別，否則為 <see langword="false" />。</param>
        <summary>針對 WSDL 文件 (指定基底型別 (Base Type) 的位置) 中定義之 SOAP 編碼項目部分的型別，產生內部型別對應資訊。</summary>
        <returns>對應至 WSDL 訊息部分之衍生型別 (Derived Type) 的 .NET Framework 型別對應資訊。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapSchemaImporter.ImportDerivedTypeMapping%2A>方法<xref:System.Xml.Serialization.SoapSchemaImporter>類別會由[Web 服務描述語言工具 (Wsdl.exe)](http://msdn.microsoft.com/library/b9210348-8bc2-4367-8c91-d1a04b403e88)時從 Web 服務描述語言 （產生用戶端 proxy 類別或抽象伺服器類別WSDL) 文件。 而不是直接呼叫這個方法，使用 Wsdl.exe。  
  
 <xref:System.Xml.Serialization.SoapSchemaImporter>類別只適用於 WSDL 文件會指定 SOAP 編碼的 SOAP 1.1 規格第 5 節中所述。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportMembersMapping">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>針對 WSDL 文件中定義的單一 SOAP 編碼項目部分，產生內部型別對應資訊。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string name, string ns, System.Xml.Serialization.SoapSchemaMember member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string name, string ns, class System.Xml.Serialization.SoapSchemaMember member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (name As String, ns As String, member As SoapSchemaMember) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ name, System::String ^ ns, System::Xml::Serialization::SoapSchemaMember ^ member);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="member" Type="System.Xml.Serialization.SoapSchemaMember" />
      </Parameters>
      <Docs>
        <param name="name">訊息名稱。</param>
        <param name="ns">訊息命名空間。</param>
        <param name="member">
          <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> 物件，可以提供有關父項目的資訊。</param>
        <summary>針對 WSDL 文件中定義的單一 SOAP 編碼項目部分，產生內部型別對應資訊。</summary>
        <returns>WSDL 訊息定義之單一項目部分的 .NET Framework 型別對應。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping%2A>方法<xref:System.Xml.Serialization.SoapSchemaImporter>類別使用 Wsdl.exe 工具所產生用戶端 proxy 類別或抽象伺服器類別，從 Web 服務描述語言 (WSDL) 文件時。 而不是直接呼叫這個方法，使用 Wsdl.exe。  
  
 <xref:System.Xml.Serialization.SoapSchemaImporter>類別只適用於 WSDL 文件會指定 SOAP 編碼的 SOAP 1.1 規格第 5 節中所述。 此簽章的<xref:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping%2A>WSDL 訊息會包裝元素內的單一組件時，會使用方法。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string name, string ns, System.Xml.Serialization.SoapSchemaMember[] members);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string name, string ns, class System.Xml.Serialization.SoapSchemaMember[] members) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (name As String, ns As String, members As SoapSchemaMember()) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ name, System::String ^ ns, cli::array &lt;System::Xml::Serialization::SoapSchemaMember ^&gt; ^ members);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.SoapSchemaMember[]" />
      </Parameters>
      <Docs>
        <param name="name">訊息名稱。</param>
        <param name="ns">訊息命名空間。</param>
        <param name="members">
          <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> 型別的陣列，可提供有關父項目的資訊。</param>
        <summary>針對在 WSDL 文件中定義之 SOAP 編碼訊息的項目部分，產生內部型別對應資訊。</summary>
        <returns>WSDL 訊息定義中項目部分的 .NET Framework 型別對應。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping%2A>方法<xref:System.Xml.Serialization.SoapSchemaImporter>類別使用 Wsdl.exe 工具所產生用戶端 proxy 類別或抽象伺服器類別，從 Web 服務描述語言 (WSDL) 文件時。 而不是直接呼叫這個方法，使用 Wsdl.exe。  
  
 <xref:System.Xml.Serialization.SoapSchemaImporter>類別只適用於 WSDL 文件會指定 SOAP 編碼的 SOAP 1.1 規格第 5 節中所述。 參數值至<xref:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping%2A>方法摘錄自 WSDL 文件，包括訊息項目包含的部分項目中的訊息定義。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string name, string ns, System.Xml.Serialization.SoapSchemaMember[] members, bool hasWrapperElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string name, string ns, class System.Xml.Serialization.SoapSchemaMember[] members, bool hasWrapperElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (name As String, ns As String, members As SoapSchemaMember(), hasWrapperElement As Boolean) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ name, System::String ^ ns, cli::array &lt;System::Xml::Serialization::SoapSchemaMember ^&gt; ^ members, bool hasWrapperElement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.SoapSchemaMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">訊息名稱。</param>
        <param name="ns">訊息命名空間。</param>
        <param name="members">
          <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> 型別的陣列，可提供有關父項目的資訊。</param>
        <param name="hasWrapperElement">
          <see langword="true" /> 表示要將部分所定義的項目封入 SOAP 訊息的額外包裝函式項目中，否則為 <see langword="false" />。</param>
        <summary>針對在 WSDL 文件中定義之 SOAP 編碼訊息的項目部分，產生內部型別對應資訊。</summary>
        <returns>WSDL 訊息定義中項目部分的 .NET Framework 型別對應。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping%2A>方法<xref:System.Xml.Serialization.SoapSchemaImporter>類別使用 Wsdl.exe 工具所產生用戶端 proxy 類別或抽象伺服器類別，從 Web 服務描述語言 (WSDL) 文件時。 而不是直接呼叫這個方法，使用 Wsdl.exe。  
  
 <xref:System.Xml.Serialization.SoapSchemaImporter>類別只適用於 WSDL 文件會指定 SOAP 編碼的 SOAP 1.1 規格第 5 節中所述。 參數值至<xref:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping%2A>方法摘錄自 WSDL 文件，包括訊息項目包含的部分項目中的訊息定義。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string name, string ns, System.Xml.Serialization.SoapSchemaMember[] members, bool hasWrapperElement, Type baseType, bool baseTypeCanBeIndirect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string name, string ns, class System.Xml.Serialization.SoapSchemaMember[] members, bool hasWrapperElement, class System.Type baseType, bool baseTypeCanBeIndirect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[],System.Boolean,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (name As String, ns As String, members As SoapSchemaMember(), hasWrapperElement As Boolean, baseType As Type, baseTypeCanBeIndirect As Boolean) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ name, System::String ^ ns, cli::array &lt;System::Xml::Serialization::SoapSchemaMember ^&gt; ^ members, bool hasWrapperElement, Type ^ baseType, bool baseTypeCanBeIndirect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.SoapSchemaMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
        <Parameter Name="baseType" Type="System.Type" />
        <Parameter Name="baseTypeCanBeIndirect" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">訊息名稱。</param>
        <param name="ns">訊息命名空間。</param>
        <param name="members">
          <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> 型別的陣列，可提供有關父項目的資訊。</param>
        <param name="hasWrapperElement">
          <see langword="true" /> 表示要將部分所定義的項目封入 SOAP 訊息的額外包裝函式項目中，否則為 <see langword="false" />。</param>
        <param name="baseType">要對應至訊息部分所產生之所有 .NET Framework 型別的基底型別。</param>
        <param name="baseTypeCanBeIndirect">
          <see langword="true" /> 表示對應至訊息部分的型別可以間接繼承自基底型別，否則為 <see langword="false" />。</param>
        <summary>針對在 WSDL 文件中定義之 SOAP 編碼訊息的項目部分，產生內部型別對應資訊。</summary>
        <returns>WSDL 訊息定義中項目部分的 .NET Framework 型別對應。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping%2A>方法<xref:System.Xml.Serialization.SoapSchemaImporter>類別使用 Wsdl.exe 工具所產生用戶端 proxy 類別或抽象伺服器類別，從 Web 服務描述語言 (WSDL) 文件時。 而不是直接呼叫這個方法，使用 Wsdl.exe。  
  
 <xref:System.Xml.Serialization.SoapSchemaImporter>類別只適用於 WSDL 文件會指定 SOAP 編碼的 SOAP 1.1 規格第 5 節中所述。 參數值至<xref:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping%2A>方法摘錄自 WSDL 文件，包括訊息項目包含的部分項目中的訊息定義。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>