<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SoapTypeAttribute.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5609244cc767a6d0fbfd5e2bc00ed90d337568072.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">609244cc767a6d0fbfd5e2bc00ed90d337568072</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.SoapTypeAttribute">
          <source>Controls the schema generated by the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> when a class instance is serialized as SOAP encoded XML.</source>
          <target state="translated">控制類別執行個體被序列化為 SOAP 編碼 XML 時，<ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 所產生的結構描述。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.SoapTypeAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph> class belongs to a family of attributes that controls how the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializes or deserializes an object as encoded SOAP XML.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph>類別屬於一系列屬性可控制如何<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>序列化或還原序列化的物件做為編碼的 SOAP XML。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.SoapTypeAttribute">
          <source>The resulting XML conforms to section 5 of the World Wide Web Consortium (www.w3.org) document, "Simple Object Access Protocol (SOAP) 1.1".</source>
          <target state="translated">所產生的 XML 符合全球資訊網協會 (www.w3.org) 文件，而 「 簡單物件存取通訊協定 (SOAP) 1.1 」 的第 5 節。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.SoapTypeAttribute">
          <source>For a complete list of similar attributes, see <bpt id="p1">[</bpt>Attributes That Control Encoded SOAP Serialization<ept id="p1">](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md)</ept>.</source>
          <target state="translated">如需類似屬性的完整清單，請參閱<bpt id="p1">[</bpt>屬性，控制編碼 SOAP 序列化<ept id="p1">](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md)</ept>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.SoapTypeAttribute">
          <source>To serialize an object as an encoded SOAP message, construct the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> using an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlTypeMapping&gt;</ph> created with the <ph id="ph3">&lt;xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.Xml.Serialization.SoapReflectionImporter&gt;</ph> class.</source>
          <target state="translated">若要序列化的物件做為編碼的 SOAP 訊息，建構<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>使用<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlTypeMapping&gt;</ph>以建立<ph id="ph3">&lt;xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A&gt;</ph>方法<ph id="ph4">&lt;xref:System.Xml.Serialization.SoapReflectionImporter&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.SoapTypeAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph> can only be applied to class declarations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph>只可以套用至類別宣告。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.SoapTypeAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema%2A&gt;</ph> property determines whether the resulting XML element type is included in the XML Schema document (.xsd) for the generated XML stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema%2A&gt;</ph>屬性會決定是否要產生的 XML 項目類型包含在產生的 XML 資料流的 XML 結構描述文件 (.xsd)。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.SoapTypeAttribute">
          <source>To see the schema, compile the class into a DLL file.</source>
          <target state="translated">若要查看結構描述，請將類別編譯為 DLL 檔案。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.SoapTypeAttribute">
          <source>Pass the resulting file as an argument to the <bpt id="p1">[</bpt>XML Schema Definition Tool (Xsd.exe)<ept id="p1">](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)</ept>.</source>
          <target state="translated">將所產生的檔案傳遞的引數為<bpt id="p1">[</bpt>XML 結構描述定義工具 (Xsd.exe)<ept id="p1">](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)</ept>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.SoapTypeAttribute">
          <source>The tool generates the XML Schema for the XML stream generated when the class is serialized by an instance of the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class.</source>
          <target state="translated">此工具會產生 XML 結構描述的執行個體所序列化的類別時產生的 XML 資料流<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.SoapTypeAttribute">
          <source>Setting a different namespace causes Xsd.exe to write a different schema (.xsd) file for the XML stream generated when the class is serialized.</source>
          <target state="translated">設定不同的命名空間會導致 Xsd.exe 寫入序列化類別時產生的 XML 資料流不同的結構描述 (.xsd) 檔案。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.SoapTypeAttribute">
          <source>The following example serializes a class named <ph id="ph1">`Group`</ph>.</source>
          <target state="translated">下列範例會序列化類別，名為<ph id="ph1">`Group`</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.SoapTypeAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph> is applied to the class, with the <ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A&gt;</ph> set to "SoapGroupType".</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph>與套用至類別、<ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A&gt;</ph>設為"SoapGroupType"。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.SoapTypeAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph> is also overridden, changing the <ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A&gt;</ph> to "Team".</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph>也覆寫，變更<ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A&gt;</ph>到 「 小組 」。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.SoapTypeAttribute">
          <source>Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.</source>
          <target state="translated">這兩個版本都會加以序列化，導致兩個檔案： SoapType.xml 和 SoapType2.xml。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.SoapTypeAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.SoapTypeAttribute" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.SoapTypeAttribute" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.SoapTypeAttribute" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.SoapTypeAttribute" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
          <source>Create a <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph> when overriding the serialization of a type.</source>
          <target state="translated">建立<ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph>時覆寫之型別的序列化。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
          <source>Assign the object to the <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapAttributes.SoapType%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Xml.Serialization.SoapAttributes&gt;</ph> and add the <ph id="ph3">&lt;xref:System.Xml.Serialization.SoapAttributes&gt;</ph> to a <ph id="ph4">&lt;xref:System.Xml.Serialization.SoapAttributeOverrides&gt;</ph>.</source>
          <target state="translated">若要將物件指派<ph id="ph1">&lt;xref:System.Xml.Serialization.SoapAttributes.SoapType%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Xml.Serialization.SoapAttributes&gt;</ph>並加入<ph id="ph3">&lt;xref:System.Xml.Serialization.SoapAttributes&gt;</ph>至<ph id="ph4">&lt;xref:System.Xml.Serialization.SoapAttributeOverrides&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
          <source>See the <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapAttributeOverrides&gt;</ph> class overview for more details about overriding SOAP serialization.</source>
          <target state="translated">請參閱<ph id="ph1">&lt;xref:System.Xml.Serialization.SoapAttributeOverrides&gt;</ph>如需詳細資訊覆寫 SOAP 序列化類別概觀。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
          <source>The following example serializes a class named <ph id="ph1">`Group`</ph>.</source>
          <target state="translated">下列範例會序列化類別，名為<ph id="ph1">`Group`</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph> is applied to the class with the <ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A&gt;</ph> set to "SoapGroupType".</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph>會套用到與類別<ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A&gt;</ph>設為"SoapGroupType"。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph> is also overridden, changing the <ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A&gt;</ph> to "Team".</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph>也覆寫，變更<ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A&gt;</ph>到 「 小組 」。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
          <source>Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.</source>
          <target state="translated">這兩個版本都會加以序列化，導致兩個檔案： SoapType.xml 和 SoapType2.xml。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
          <source>The name of the XML type that the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> generates when it serializes the class instance (and recognizes when it deserializes the class instance).</source>
          <target state="translated">XML 型別的名稱，是 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 序列化類別執行個體時所產生的 (並且對類別執行個體進行還原序列化時所辨識的)。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.SoapTypeAttribute" /&gt;</ph> class and specifies the name of the XML type.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.SoapTypeAttribute" /&gt;</ph> 類別的新執行個體，並指定 XML 型別的名稱。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
          <source>Create a <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph> when overriding the serialization of a type.</source>
          <target state="translated">建立<ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph>時覆寫之型別的序列化。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
          <source>Assign the object to the <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapAttributes.SoapType%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Xml.Serialization.SoapAttributes&gt;</ph> and add the <ph id="ph3">&lt;xref:System.Xml.Serialization.SoapAttributes&gt;</ph> to a <ph id="ph4">&lt;xref:System.Xml.Serialization.SoapAttributeOverrides&gt;</ph>.</source>
          <target state="translated">若要將物件指派<ph id="ph1">&lt;xref:System.Xml.Serialization.SoapAttributes.SoapType%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Xml.Serialization.SoapAttributes&gt;</ph>並加入<ph id="ph3">&lt;xref:System.Xml.Serialization.SoapAttributes&gt;</ph>至<ph id="ph4">&lt;xref:System.Xml.Serialization.SoapAttributeOverrides&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
          <source>See the <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapAttributeOverrides&gt;</ph> class overview for more details about overriding SOAP serialization.</source>
          <target state="translated">請參閱<ph id="ph1">&lt;xref:System.Xml.Serialization.SoapAttributeOverrides&gt;</ph>如需詳細資訊覆寫 SOAP 序列化類別概觀。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
          <source>The following example serializes a class named <ph id="ph1">`Group`</ph>.</source>
          <target state="translated">下列範例會序列化類別，名為<ph id="ph1">`Group`</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph> is applied to the class with the <ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A&gt;</ph> set to "SoapGroupType".</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph>會套用到與類別<ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A&gt;</ph>設為"SoapGroupType"。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph> is also overridden, changing the <ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A&gt;</ph> to "Team".</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph>也覆寫，變更<ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A&gt;</ph>到 「 小組 」。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
          <source>Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.</source>
          <target state="translated">這兩個版本都會加以序列化，導致兩個檔案： SoapType.xml 和 SoapType2.xml。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
          <source>The name of the XML type that the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> generates when it serializes the class instance (and recognizes when it deserializes the class instance).</source>
          <target state="translated">XML 型別的名稱，是 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 序列化類別執行個體時所產生的 (並且對類別執行個體進行還原序列化時所辨識的)。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
          <source>The XML namespace of the type.</source>
          <target state="translated">型別的 XML 命名空間。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.SoapTypeAttribute" /&gt;</ph> class and specifies the name and XML namespace of the type.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.SoapTypeAttribute" /&gt;</ph> 類別的新執行個體，並指定該型別的名稱和 XML 命名空間。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
          <source>Create a <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph> when overriding the serialization of a type.</source>
          <target state="translated">建立<ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph>時覆寫之型別的序列化。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
          <source>Assign the object to the <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapAttributes.SoapType%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Xml.Serialization.SoapAttributes&gt;</ph> and add the <ph id="ph3">&lt;xref:System.Xml.Serialization.SoapAttributes&gt;</ph> to a <ph id="ph4">&lt;xref:System.Xml.Serialization.SoapAttributeOverrides&gt;</ph>.</source>
          <target state="translated">若要將物件指派<ph id="ph1">&lt;xref:System.Xml.Serialization.SoapAttributes.SoapType%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Xml.Serialization.SoapAttributes&gt;</ph>並加入<ph id="ph3">&lt;xref:System.Xml.Serialization.SoapAttributes&gt;</ph>至<ph id="ph4">&lt;xref:System.Xml.Serialization.SoapAttributeOverrides&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
          <source>See the <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapAttributeOverrides&gt;</ph> class overview for more details on overriding SOAP serialization.</source>
          <target state="translated">請參閱<ph id="ph1">&lt;xref:System.Xml.Serialization.SoapAttributeOverrides&gt;</ph>如需有關覆寫 SOAP 序列化類別概觀。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
          <source>If you set a <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A&gt;</ph> value for more than one type (that is, if you apply the attribute to more than one class with a different <ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A&gt;</ph> value for each one), the <bpt id="p1">[</bpt>XML Schema Definition Tool (Xsd.exe)<ept id="p1">](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)</ept> generates a separate schema file (.xsd) for each type.</source>
          <target state="translated">如果您設定<ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A&gt;</ph>多個類型的值 (亦即，如果您將屬性套用至使用不同的多個類別<ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A&gt;</ph>每個值)，則<bpt id="p1">[</bpt>XML 結構描述定義工具 (Xsd.exe)<ept id="p1">](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)</ept>會產生不同的每個類型的結構描述檔案 (.xsd)。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
          <source>This is because setting a different namespace for each type renders each type distinct from the others, which makes it necessary for each type to be written out as an independent entity.</source>
          <target state="translated">這是因為每種類型的設定不同的命名空間呈現每個型別不同於其他項目，讓所需的每個型別寫出做為獨立的實體。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
          <source>The following example serializes a class named <ph id="ph1">`Group`</ph>.</source>
          <target state="translated">下列範例會序列化類別，名為<ph id="ph1">`Group`</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph> is applied to the class with the <ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A&gt;</ph> set to "SoapGroupType".</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph>會套用到與類別<ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A&gt;</ph>設為"SoapGroupType"。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph> is also overridden, changing the <ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A&gt;</ph> to "Team".</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph>也覆寫，變更<ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A&gt;</ph>到 「 小組 」。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
          <source>Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.</source>
          <target state="translated">這兩個版本都會加以序列化，導致兩個檔案： SoapType.xml 和 SoapType2.xml。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
          <source>Gets or sets a value that indicates whether to include the type in SOAP-encoded XML Schema documents.</source>
          <target state="translated">取得或設定值，指出是否將型別包含在 SOAP 編碼的 XML 結構描述文件中。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include the type in SOAP-encoded XML Schema documents; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要在 SOAP 編碼 XML 結構描述文件中包含型別，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
          <source>Apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph> to a class declaration to specify whether to include the type in the XML schema document.</source>
          <target state="translated">套用<ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph>至類別宣告中，指定是否要包含在 XML 結構描述文件中的型別。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
          <source>To see the results of setting the properties of the <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph> class, compile your application as an executable or DLL, and pass the resulting file to the <bpt id="p1">[</bpt>XML Schema Definition Tool (Xsd.exe)<ept id="p1">](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)</ept>.</source>
          <target state="translated">若要查看設定之屬性的結果<ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph>類別，並編譯為可執行檔或 DLL，應用程式同時傳遞至所產生的檔案<bpt id="p1">[</bpt>XML 結構描述定義工具 (Xsd.exe)<ept id="p1">](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)</ept>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
          <source>The tool writes the schema, including the type definition of the XML stream generated when the class is serialized.</source>
          <target state="translated">工具會將結構描述，包括 XML 資料流序列化類別時產生的型別定義。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
          <source>The following example serializes a class named <ph id="ph1">`Group`</ph>.</source>
          <target state="translated">下列範例會序列化類別，名為<ph id="ph1">`Group`</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph> is applied to the class with the <ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A&gt;</ph> set to "SoapGroupType".</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph>會套用到與類別<ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A&gt;</ph>設為"SoapGroupType"。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph> is also overridden, changing the <ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A&gt;</ph> to "Team".</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph>也覆寫，變更<ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A&gt;</ph>到 「 小組 」。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
          <source>Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.</source>
          <target state="translated">這兩個版本都會加以序列化，導致兩個檔案： SoapType.xml 和 SoapType2.xml。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
          <source>Gets or sets the namespace of the XML type.</source>
          <target state="translated">取得或設定 XML 型別的命名空間。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
          <source>The namespace of the XML type.</source>
          <target state="translated">XML 型別的命名空間。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
          <source>The default is an empty string ("").</source>
          <target state="translated">預設為空字串 ("")。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
          <source>If you set a <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A&gt;</ph> value for more than one type (that is, if you apply the attribute to more than one class with a different <ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A&gt;</ph> value for each one), the <bpt id="p1">[</bpt>XML Schema Definition Tool (Xsd.exe)<ept id="p1">](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)</ept> generates a separate schema file (.xsd) for each type.</source>
          <target state="translated">如果您設定<ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A&gt;</ph>多個類型的值 (亦即，如果您將屬性套用至使用不同的多個類別<ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A&gt;</ph>每個值)，則<bpt id="p1">[</bpt>XML 結構描述定義工具 (Xsd.exe)<ept id="p1">](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)</ept>會產生不同的每個類型的結構描述檔案 (.xsd)。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
          <source>This is because setting a different namespace for each type renders each type distinct from the others, which makes it necessary for each type to be written out as an independent entity.</source>
          <target state="translated">這是因為每種類型的設定不同的命名空間呈現每個型別不同於其他項目，讓所需的每個型別寫出做為獨立的實體。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
          <source>The following example serializes a class named <ph id="ph1">`Group`</ph>.</source>
          <target state="translated">下列範例會序列化類別，名為<ph id="ph1">`Group`</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph> is applied to the class with the <ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A&gt;</ph> set to "SoapGroupType".</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph>會套用到與類別<ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A&gt;</ph>設為"SoapGroupType"。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph> is also overridden, changing the <ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A&gt;</ph> to "Team".</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph>也覆寫，變更<ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A&gt;</ph>到 「 小組 」。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
          <source>Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.</source>
          <target state="translated">這兩個版本都會加以序列化，導致兩個檔案： SoapType.xml 和 SoapType2.xml。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
          <source>Gets or sets the name of the XML type.</source>
          <target state="translated">取得或設定 XML 型別的名稱。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
          <source>The name of the XML type.</source>
          <target state="translated">XML 型別的名稱。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
          <source>The default is the class name.</source>
          <target state="translated">預設為類別名稱。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
          <source>Apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML Schema document.</source>
          <target state="translated">套用<ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph>類別來指定 XML 類型的命名空間、 XML 的型別名稱，以及是否要包含在 XML 結構描述文件中的型別。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
          <source>To see the results of setting the <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph> object's properties, compile your application as an executable or DLL, and pass the resulting file to the <bpt id="p1">[</bpt>XML Schema Definition Tool (Xsd.exe)<ept id="p1">](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)</ept>.</source>
          <target state="translated">若要查看設定結果<ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph>物件的屬性，您應用程式編譯為可執行檔或 DLL，並傳遞至所產生的檔案<bpt id="p1">[</bpt>XML 結構描述定義工具 (Xsd.exe)<ept id="p1">](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)</ept>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
          <source>The tool writes the schema, including the type definition.</source>
          <target state="translated">工具會將結構描述，包括類型定義。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
          <source>The following example serializes a class named <ph id="ph1">`Group`</ph>.</source>
          <target state="translated">下列範例會序列化類別，名為<ph id="ph1">`Group`</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph> is applied to the class with the <ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A&gt;</ph> set to "SoapGroupType".</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph>會套用到與類別<ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A&gt;</ph>設為"SoapGroupType"。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph> is also overridden, changing the <ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A&gt;</ph> to "Team".</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.SoapTypeAttribute&gt;</ph>也覆寫，變更<ph id="ph2">&lt;xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A&gt;</ph>到 「 小組 」。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
          <source>Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.</source>
          <target state="translated">這兩個版本都會加以序列化，導致兩個檔案： SoapType.xml 和 SoapType2.xml。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>