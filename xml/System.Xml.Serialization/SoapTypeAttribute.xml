<Type Name="SoapTypeAttribute" FullName="System.Xml.Serialization.SoapTypeAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="609244cc767a6d0fbfd5e2bc00ed90d337568072" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SoapTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapTypeAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Interface | System.AttributeTargets.Struct)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0c9c9-101">控制類別執行個體被序列化為 SOAP 編碼 XML 時，<see cref="T:System.Xml.Serialization.XmlSerializer" /> 所產生的結構描述。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c9c9-101">Controls the schema generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> when a class instance is serialized as SOAP encoded XML.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c9c9-102"><xref:System.Xml.Serialization.SoapTypeAttribute>類別屬於一系列屬性可控制如何<xref:System.Xml.Serialization.XmlSerializer>序列化或還原序列化的物件做為編碼的 SOAP XML。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-102">The <xref:System.Xml.Serialization.SoapTypeAttribute> class belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object as encoded SOAP XML.</span></span> <span data-ttu-id="0c9c9-103">所產生的 XML 符合全球資訊網協會 (www.w3.org) 文件，而 「 簡單物件存取通訊協定 (SOAP) 1.1 」 的第 5 節。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-103">The resulting XML conforms to section 5 of the World Wide Web Consortium (www.w3.org) document, "Simple Object Access Protocol (SOAP) 1.1".</span></span> <span data-ttu-id="0c9c9-104">如需類似屬性的完整清單，請參閱[屬性，控制編碼 SOAP 序列化](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-104">For a complete list of similar attributes, see [Attributes That Control Encoded SOAP Serialization](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md).</span></span>  
  
 <span data-ttu-id="0c9c9-105">若要序列化的物件做為編碼的 SOAP 訊息，建構<xref:System.Xml.Serialization.XmlSerializer>使用<xref:System.Xml.Serialization.XmlTypeMapping>以建立<xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A>方法<xref:System.Xml.Serialization.SoapReflectionImporter>類別。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-105">To serialize an object as an encoded SOAP message, construct the <xref:System.Xml.Serialization.XmlSerializer> using an <xref:System.Xml.Serialization.XmlTypeMapping> created with the <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> method of the <xref:System.Xml.Serialization.SoapReflectionImporter> class.</span></span>  
  
 <span data-ttu-id="0c9c9-106"><xref:System.Xml.Serialization.SoapTypeAttribute>只可以套用至類別宣告。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-106">The <xref:System.Xml.Serialization.SoapTypeAttribute> can only be applied to class declarations.</span></span>  
  
 <span data-ttu-id="0c9c9-107"><xref:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema%2A>屬性會決定是否要產生的 XML 項目類型包含在產生的 XML 資料流的 XML 結構描述文件 (.xsd)。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-107">The <xref:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema%2A> property determines whether the resulting XML element type is included in the XML Schema document (.xsd) for the generated XML stream.</span></span> <span data-ttu-id="0c9c9-108">若要查看結構描述，請將類別編譯為 DLL 檔案。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-108">To see the schema, compile the class into a DLL file.</span></span> <span data-ttu-id="0c9c9-109">將所產生的檔案傳遞的引數為[XML 結構描述定義工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-109">Pass the resulting file as an argument to the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md).</span></span> <span data-ttu-id="0c9c9-110">此工具會產生 XML 結構描述的執行個體所序列化的類別時產生的 XML 資料流<xref:System.Xml.Serialization.XmlSerializer>類別。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-110">The tool generates the XML Schema for the XML stream generated when the class is serialized by an instance of the <xref:System.Xml.Serialization.XmlSerializer> class.</span></span>  
  
 <span data-ttu-id="0c9c9-111">設定不同的命名空間會導致 Xsd.exe 寫入序列化類別時產生的 XML 資料流不同的結構描述 (.xsd) 檔案。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-111">Setting a different namespace causes Xsd.exe to write a different schema (.xsd) file for the XML stream generated when the class is serialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c9c9-112">下列範例會序列化類別，名為`Group`。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-112">The following example serializes a class named `Group`.</span></span> <span data-ttu-id="0c9c9-113"><xref:System.Xml.Serialization.SoapTypeAttribute>與套用至類別、<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>設為"SoapGroupType"。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-113">The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class, with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to "SoapGroupType".</span></span> <span data-ttu-id="0c9c9-114"><xref:System.Xml.Serialization.SoapTypeAttribute>也覆寫，變更<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>到 「 小組 」。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-114">The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to "Team".</span></span> <span data-ttu-id="0c9c9-115">這兩個版本都會加以序列化，導致兩個檔案： SoapType.xml 和 SoapType2.xml。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-115">Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.</span></span>  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c9c9-116">初始化 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c9c9-116">Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c9c9-117">初始化 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c9c9-117">Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c9c9-118">建立<xref:System.Xml.Serialization.SoapTypeAttribute>時覆寫之型別的序列化。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-118">Create a <xref:System.Xml.Serialization.SoapTypeAttribute> when overriding the serialization of a type.</span></span> <span data-ttu-id="0c9c9-119">若要將物件指派<xref:System.Xml.Serialization.SoapAttributes.SoapType%2A>屬性<xref:System.Xml.Serialization.SoapAttributes>並加入<xref:System.Xml.Serialization.SoapAttributes>至<xref:System.Xml.Serialization.SoapAttributeOverrides>。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-119">Assign the object to the <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> and add the <xref:System.Xml.Serialization.SoapAttributes> to a <xref:System.Xml.Serialization.SoapAttributeOverrides>.</span></span> <span data-ttu-id="0c9c9-120">請參閱<xref:System.Xml.Serialization.SoapAttributeOverrides>如需詳細資訊覆寫 SOAP 序列化類別概觀。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-120">See the <xref:System.Xml.Serialization.SoapAttributeOverrides> class overview for more details about overriding SOAP serialization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c9c9-121">下列範例會序列化類別，名為`Group`。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-121">The following example serializes a class named `Group`.</span></span> <span data-ttu-id="0c9c9-122"><xref:System.Xml.Serialization.SoapTypeAttribute>會套用到與類別<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>設為"SoapGroupType"。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-122">The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to "SoapGroupType".</span></span> <span data-ttu-id="0c9c9-123"><xref:System.Xml.Serialization.SoapTypeAttribute>也覆寫，變更<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>到 「 小組 」。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-123">The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to "Team".</span></span> <span data-ttu-id="0c9c9-124">這兩個版本都會加以序列化，導致兩個檔案： SoapType.xml 和 SoapType2.xml。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-124">Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.</span></span>  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute(System::String ^ typeName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="0c9c9-125">XML 型別的名稱，是 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化類別執行個體時所產生的 (並且對類別執行個體進行還原序列化時所辨識的)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c9c9-125">The name of the XML type that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates when it serializes the class instance (and recognizes when it deserializes the class instance).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c9c9-126">初始化 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 類別的新執行個體，並指定 XML 型別的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c9c9-126">Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> class and specifies the name of the XML type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c9c9-127">建立<xref:System.Xml.Serialization.SoapTypeAttribute>時覆寫之型別的序列化。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-127">Create a <xref:System.Xml.Serialization.SoapTypeAttribute> when overriding the serialization of a type.</span></span> <span data-ttu-id="0c9c9-128">若要將物件指派<xref:System.Xml.Serialization.SoapAttributes.SoapType%2A>屬性<xref:System.Xml.Serialization.SoapAttributes>並加入<xref:System.Xml.Serialization.SoapAttributes>至<xref:System.Xml.Serialization.SoapAttributeOverrides>。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-128">Assign the object to the <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> and add the <xref:System.Xml.Serialization.SoapAttributes> to a <xref:System.Xml.Serialization.SoapAttributeOverrides>.</span></span> <span data-ttu-id="0c9c9-129">請參閱<xref:System.Xml.Serialization.SoapAttributeOverrides>如需詳細資訊覆寫 SOAP 序列化類別概觀。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-129">See the <xref:System.Xml.Serialization.SoapAttributeOverrides> class overview for more details about overriding SOAP serialization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c9c9-130">下列範例會序列化類別，名為`Group`。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-130">The following example serializes a class named `Group`.</span></span> <span data-ttu-id="0c9c9-131"><xref:System.Xml.Serialization.SoapTypeAttribute>會套用到與類別<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>設為"SoapGroupType"。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-131">The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to "SoapGroupType".</span></span> <span data-ttu-id="0c9c9-132"><xref:System.Xml.Serialization.SoapTypeAttribute>也覆寫，變更<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>到 「 小組 」。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-132">The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to "Team".</span></span> <span data-ttu-id="0c9c9-133">這兩個版本都會加以序列化，導致兩個檔案： SoapType.xml 和 SoapType2.xml。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-133">Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.</span></span>  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute (string typeName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapTypeAttribute(System::String ^ typeName, System::String ^ ns);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="0c9c9-134">XML 型別的名稱，是 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化類別執行個體時所產生的 (並且對類別執行個體進行還原序列化時所辨識的)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c9c9-134">The name of the XML type that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates when it serializes the class instance (and recognizes when it deserializes the class instance).</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="0c9c9-135">型別的 XML 命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c9c9-135">The XML namespace of the type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c9c9-136">初始化 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 類別的新執行個體，並指定該型別的名稱和 XML 命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c9c9-136">Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> class and specifies the name and XML namespace of the type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c9c9-137">建立<xref:System.Xml.Serialization.SoapTypeAttribute>時覆寫之型別的序列化。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-137">Create a <xref:System.Xml.Serialization.SoapTypeAttribute> when overriding the serialization of a type.</span></span> <span data-ttu-id="0c9c9-138">若要將物件指派<xref:System.Xml.Serialization.SoapAttributes.SoapType%2A>屬性<xref:System.Xml.Serialization.SoapAttributes>並加入<xref:System.Xml.Serialization.SoapAttributes>至<xref:System.Xml.Serialization.SoapAttributeOverrides>。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-138">Assign the object to the <xref:System.Xml.Serialization.SoapAttributes.SoapType%2A> property of a <xref:System.Xml.Serialization.SoapAttributes> and add the <xref:System.Xml.Serialization.SoapAttributes> to a <xref:System.Xml.Serialization.SoapAttributeOverrides>.</span></span> <span data-ttu-id="0c9c9-139">請參閱<xref:System.Xml.Serialization.SoapAttributeOverrides>如需有關覆寫 SOAP 序列化類別概觀。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-139">See the <xref:System.Xml.Serialization.SoapAttributeOverrides> class overview for more details on overriding SOAP serialization.</span></span>  
  
 <span data-ttu-id="0c9c9-140">如果您設定<xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A>多個類型的值 (亦即，如果您將屬性套用至使用不同的多個類別<xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A>每個值)，則[XML 結構描述定義工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)會產生不同的每個類型的結構描述檔案 (.xsd)。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-140">If you set a <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> value for more than one type (that is, if you apply the attribute to more than one class with a different <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> value for each one), the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) generates a separate schema file (.xsd) for each type.</span></span> <span data-ttu-id="0c9c9-141">這是因為每種類型的設定不同的命名空間呈現每個型別不同於其他項目，讓所需的每個型別寫出做為獨立的實體。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-141">This is because setting a different namespace for each type renders each type distinct from the others, which makes it necessary for each type to be written out as an independent entity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c9c9-142">下列範例會序列化類別，名為`Group`。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-142">The following example serializes a class named `Group`.</span></span> <span data-ttu-id="0c9c9-143"><xref:System.Xml.Serialization.SoapTypeAttribute>會套用到與類別<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>設為"SoapGroupType"。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-143">The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to "SoapGroupType".</span></span> <span data-ttu-id="0c9c9-144"><xref:System.Xml.Serialization.SoapTypeAttribute>也覆寫，變更<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>到 「 小組 」。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-144">The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to "Team".</span></span> <span data-ttu-id="0c9c9-145">這兩個版本都會加以序列化，導致兩個檔案： SoapType.xml 和 SoapType2.xml。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-145">Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.</span></span>  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeInSchema">
      <MemberSignature Language="C#" Value="public bool IncludeInSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeInSchema" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeInSchema As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeInSchema { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c9c9-146">取得或設定值，指出是否將型別包含在 SOAP 編碼的 XML 結構描述文件中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c9c9-146">Gets or sets a value that indicates whether to include the type in SOAP-encoded XML Schema documents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c9c9-147">若要在 SOAP 編碼 XML 結構描述文件中包含型別，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c9c9-147">
              <see langword="true" /> to include the type in SOAP-encoded XML Schema documents; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0c9c9-148">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c9c9-148">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c9c9-149">套用<xref:System.Xml.Serialization.SoapTypeAttribute>至類別宣告中，指定是否要包含在 XML 結構描述文件中的型別。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-149">Apply the <xref:System.Xml.Serialization.SoapTypeAttribute> to a class declaration to specify whether to include the type in the XML schema document.</span></span> <span data-ttu-id="0c9c9-150">若要查看設定之屬性的結果<xref:System.Xml.Serialization.SoapTypeAttribute>類別，並編譯為可執行檔或 DLL，應用程式同時傳遞至所產生的檔案[XML 結構描述定義工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-150">To see the results of setting the properties of the <xref:System.Xml.Serialization.SoapTypeAttribute> class, compile your application as an executable or DLL, and pass the resulting file to the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md).</span></span> <span data-ttu-id="0c9c9-151">工具會將結構描述，包括 XML 資料流序列化類別時產生的型別定義。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-151">The tool writes the schema, including the type definition of the XML stream generated when the class is serialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c9c9-152">下列範例會序列化類別，名為`Group`。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-152">The following example serializes a class named `Group`.</span></span> <span data-ttu-id="0c9c9-153"><xref:System.Xml.Serialization.SoapTypeAttribute>會套用到與類別<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>設為"SoapGroupType"。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-153">The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to "SoapGroupType".</span></span> <span data-ttu-id="0c9c9-154"><xref:System.Xml.Serialization.SoapTypeAttribute>也覆寫，變更<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>到 「 小組 」。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-154">The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to "Team".</span></span> <span data-ttu-id="0c9c9-155">這兩個版本都會加以序列化，導致兩個檔案： SoapType.xml 和 SoapType2.xml。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-155">Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.</span></span>  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c9c9-156">取得或設定 XML 型別的命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c9c9-156">Gets or sets the namespace of the XML type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c9c9-157">XML 型別的命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c9c9-157">The namespace of the XML type.</span>
          </span>
          <span data-ttu-id="0c9c9-158">預設為空字串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c9c9-158">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c9c9-159">如果您設定<xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A>多個類型的值 (亦即，如果您將屬性套用至使用不同的多個類別<xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A>每個值)，則[XML 結構描述定義工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)會產生不同的每個類型的結構描述檔案 (.xsd)。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-159">If you set a <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> value for more than one type (that is, if you apply the attribute to more than one class with a different <xref:System.Xml.Serialization.SoapTypeAttribute.Namespace%2A> value for each one), the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) generates a separate schema file (.xsd) for each type.</span></span> <span data-ttu-id="0c9c9-160">這是因為每種類型的設定不同的命名空間呈現每個型別不同於其他項目，讓所需的每個型別寫出做為獨立的實體。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-160">This is because setting a different namespace for each type renders each type distinct from the others, which makes it necessary for each type to be written out as an independent entity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c9c9-161">下列範例會序列化類別，名為`Group`。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-161">The following example serializes a class named `Group`.</span></span> <span data-ttu-id="0c9c9-162"><xref:System.Xml.Serialization.SoapTypeAttribute>會套用到與類別<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>設為"SoapGroupType"。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-162">The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to "SoapGroupType".</span></span> <span data-ttu-id="0c9c9-163"><xref:System.Xml.Serialization.SoapTypeAttribute>也覆寫，變更<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>到 「 小組 」。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-163">The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to "Team".</span></span> <span data-ttu-id="0c9c9-164">這兩個版本都會加以序列化，導致兩個檔案： SoapType.xml 和 SoapType2.xml。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-164">Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.</span></span>  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapTypeAttribute.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c9c9-165">取得或設定 XML 型別的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c9c9-165">Gets or sets the name of the XML type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c9c9-166">XML 型別的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c9c9-166">The name of the XML type.</span>
          </span>
          <span data-ttu-id="0c9c9-167">預設為類別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c9c9-167">The default is the class name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c9c9-168">套用<xref:System.Xml.Serialization.SoapTypeAttribute>類別來指定 XML 類型的命名空間、 XML 的型別名稱，以及是否要包含在 XML 結構描述文件中的型別。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-168">Apply the <xref:System.Xml.Serialization.SoapTypeAttribute> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML Schema document.</span></span> <span data-ttu-id="0c9c9-169">若要查看設定結果<xref:System.Xml.Serialization.SoapTypeAttribute>物件的屬性，您應用程式編譯為可執行檔或 DLL，並傳遞至所產生的檔案[XML 結構描述定義工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-169">To see the results of setting the <xref:System.Xml.Serialization.SoapTypeAttribute> object's properties, compile your application as an executable or DLL, and pass the resulting file to the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md).</span></span> <span data-ttu-id="0c9c9-170">工具會將結構描述，包括類型定義。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-170">The tool writes the schema, including the type definition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c9c9-171">下列範例會序列化類別，名為`Group`。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-171">The following example serializes a class named `Group`.</span></span> <span data-ttu-id="0c9c9-172"><xref:System.Xml.Serialization.SoapTypeAttribute>會套用到與類別<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>設為"SoapGroupType"。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-172">The <xref:System.Xml.Serialization.SoapTypeAttribute> is applied to the class with the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> set to "SoapGroupType".</span></span> <span data-ttu-id="0c9c9-173"><xref:System.Xml.Serialization.SoapTypeAttribute>也覆寫，變更<xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A>到 「 小組 」。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-173">The <xref:System.Xml.Serialization.SoapTypeAttribute> is also overridden, changing the <xref:System.Xml.Serialization.SoapTypeAttribute.TypeName%2A> to "Team".</span></span> <span data-ttu-id="0c9c9-174">這兩個版本都會加以序列化，導致兩個檔案： SoapType.xml 和 SoapType2.xml。</span><span class="sxs-lookup"><span data-stu-id="0c9c9-174">Both versions are serialized, resulting in two files: SoapType.xml and SoapType2.xml.</span></span>  
  
 [!code-cpp[SoapTypeAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapTypeAttribute Example/CPP/soaptype.cpp#1)]
 [!code-csharp[SoapTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapTypeAttribute Example/CS/soaptype.cs#1)]
 [!code-vb[SoapTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapTypeAttribute Example/VB/soaptype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>