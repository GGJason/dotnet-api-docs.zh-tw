<Type Name="CodeIdentifier" FullName="System.Xml.Serialization.CodeIdentifier">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9383276c061db15514bf8250038a7d101ca7c743" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36440662" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeIdentifier" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CodeIdentifier extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.CodeIdentifier" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeIdentifier" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeIdentifier" />
  <TypeSignature Language="F#" Value="type CodeIdentifier = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8a863-101">提供可將輸入文字轉換成程式碼實體 (Entity) 之名稱的靜態方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8a863-101">Provides static methods to convert input text into names for code entities.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a863-102">方法的<xref:System.Xml.Serialization.CodeIdentifier>使用時產生的 XML 項目和資料型別定義的.NET Framework 類型的 XML 序列化基礎結構類別。</span><span class="sxs-lookup"><span data-stu-id="8a863-102">The methods of the <xref:System.Xml.Serialization.CodeIdentifier> class are used by the XML serialization infrastructure while producing .NET Framework types from XML element and data type definitions.</span></span> <span data-ttu-id="8a863-103">XML 元素或屬性名稱通常會提供方法的輸入的文字。</span><span class="sxs-lookup"><span data-stu-id="8a863-103">XML element or attribute names typically provide the methods' input text.</span></span>  
  
 <span data-ttu-id="8a863-104">您不需要呼叫的方法<xref:System.Xml.Serialization.CodeIdentifier>直接從程式碼的類別。</span><span class="sxs-lookup"><span data-stu-id="8a863-104">You do not need to call the methods of the <xref:System.Xml.Serialization.CodeIdentifier> class directly from your code.</span></span> <span data-ttu-id="8a863-105">相反地，使用各種工具和應用程式開發介面所提供.NET Framework 進行 XML 序列化，例如<xref:System.Xml.Serialization.XmlSerializer>，或[XML 結構描述定義工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)工具。</span><span class="sxs-lookup"><span data-stu-id="8a863-105">Instead, use the various tools and APIs provided by the .NET Framework for XML serialization, such as the <xref:System.Xml.Serialization.XmlSerializer>, or the [XML Schema Definition Tool (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) tool.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeIdentifier ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifier.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeIdentifier();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This class should never get constructed as it contains only static methods.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a863-106">初始化 <see cref="T:System.Xml.Serialization.CodeIdentifier" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a863-106">Initializes a new instance of the <see cref="T:System.Xml.Serialization.CodeIdentifier" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MakeCamel">
      <MemberSignature Language="C#" Value="public static string MakeCamel (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MakeCamel(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifier.MakeCamel(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeCamel (identifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ MakeCamel(System::String ^ identifier);" />
      <MemberSignature Language="F#" Value="static member MakeCamel : string -&gt; string" Usage="System.Xml.Serialization.CodeIdentifier.MakeCamel identifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">
          <span data-ttu-id="8a863-107">程式碼實體 (例如方法參數) 的名稱，通常是從 XML 項目或屬性名稱取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a863-107">The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a863-108">從輸入字串產生 Camel 命名法之大小寫慣例的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a863-108">Produces a camel-case string from an input string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a863-109">Camel 命名法之大小寫慣例版本的參數字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a863-109">A camel-case version of the parameter string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a863-110"><xref:System.Xml.Serialization.CodeIdentifier.MakeCamel%2A>方法初始字元轉換成大寫的小寫字母，如有必要。</span><span class="sxs-lookup"><span data-stu-id="8a863-110">The <xref:System.Xml.Serialization.CodeIdentifier.MakeCamel%2A> method converts the initial character from an upper-case to lower-case letter, if necessary.</span></span>  
  
 <span data-ttu-id="8a863-111">您不需要直接呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="8a863-111">You do not need to call this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MakePascal">
      <MemberSignature Language="C#" Value="public static string MakePascal (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MakePascal(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifier.MakePascal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakePascal (identifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ MakePascal(System::String ^ identifier);" />
      <MemberSignature Language="F#" Value="static member MakePascal : string -&gt; string" Usage="System.Xml.Serialization.CodeIdentifier.MakePascal identifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">
          <span data-ttu-id="8a863-112">程式碼實體 (例如方法參數) 的名稱，通常是從 XML 項目或屬性名稱取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a863-112">The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a863-113">從輸入字串產生 Pascal 命名法之大小寫慣例的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a863-113">Produces a Pascal-case string from an input string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a863-114">Pascal 命名法之大小寫慣例版本的參數字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a863-114">A Pascal-case version of the parameter string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a863-115"><xref:System.Xml.Serialization.CodeIdentifier.MakePascal%2A>方法視需要轉換的起始字元從小寫英文大小寫字母。</span><span class="sxs-lookup"><span data-stu-id="8a863-115">The <xref:System.Xml.Serialization.CodeIdentifier.MakePascal%2A> method converts the initial character from a lower-case to upper-case letter, if necessary.</span></span>  
  
 <span data-ttu-id="8a863-116">您不需要直接呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="8a863-116">You do not need to call this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MakeValid">
      <MemberSignature Language="C#" Value="public static string MakeValid (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MakeValid(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifier.MakeValid(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeValid (identifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ MakeValid(System::String ^ identifier);" />
      <MemberSignature Language="F#" Value="static member MakeValid : string -&gt; string" Usage="System.Xml.Serialization.CodeIdentifier.MakeValid identifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">
          <span data-ttu-id="8a863-117">程式碼實體 (例如方法參數) 的名稱，通常是從 XML 項目或屬性名稱取得。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a863-117">The name of a code entity, such as a method parameter, typically taken from an XML element or attribute name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a863-118">從輸入字串產生有效的程式碼實體名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a863-118">Produces a valid code entity name from an input string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a863-119">可當做程式碼識別項使用的字串，例如方法參數的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a863-119">A string that can be used as a code identifier, such as the name of a method parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a863-120"><xref:System.Xml.Serialization.CodeIdentifier.MakeValid%2A>方法會在程式碼的識別項中移除不能出現的任何字元。</span><span class="sxs-lookup"><span data-stu-id="8a863-120">The <xref:System.Xml.Serialization.CodeIdentifier.MakeValid%2A> method removes any characters that cannot appear in a code identifier.</span></span> <span data-ttu-id="8a863-121">它會傳回字串"Item"如果不是有效的任何字元。</span><span class="sxs-lookup"><span data-stu-id="8a863-121">It returns the string "Item" if no characters are valid.</span></span> <span data-ttu-id="8a863-122">它是以無效的起始字元開頭，例如輸入、 數字或貨幣符號的字串"Item"前置詞。</span><span class="sxs-lookup"><span data-stu-id="8a863-122">It prefixes the string "Item" to an input that begins with an invalid start character, for example, a digit, or a currency symbol.</span></span>  
  
 <span data-ttu-id="8a863-123">您不需要直接呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="8a863-123">You do not need to call this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>