<Type Name="XmlCodeExporter" FullName="System.Xml.Serialization.XmlCodeExporter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="504dab9818522be4141ef883e91378ca3b6bf59c" /><Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/01/2018" /><Meta Name="ms.locfileid" Value="52736173" /></Metadata><TypeSignature Language="C#" Value="public class XmlCodeExporter : System.Xml.Serialization.CodeExporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlCodeExporter extends System.Xml.Serialization.CodeExporter" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlCodeExporter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlCodeExporter&#xA;Inherits CodeExporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlCodeExporter : System::Xml::Serialization::CodeExporter" />
  <TypeSignature Language="F#" Value="type XmlCodeExporter = class&#xA;    inherit CodeExporter" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Serialization.CodeExporter</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>從 XML 結構描述項目宣告的內部型別對應資訊，產生型別和屬性 (Attribute) 宣告。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlCodeExporter>類別會產生.NET Framework 型別或屬性宣告的內部對應至.NET Framework 型別。 這些內部對應所產生<xref:System.Xml.Serialization.XmlSchemaImporter>類別定義中的 XSD 文件，或做為 Web 服務描述語言 (WSDL) 文件中的組件的項目。 <xref:System.Xml.Serialization.XmlCodeExporter> 不會直接;它搭配 Web 服務描述語言工具 (Wsdl.exe) 或 XML 結構描述定義工具 (Xsd.exe)。  
  
 所產生的屬性宣告的型別，會使用 Wsdl.exe<xref:System.Xml.Serialization.XmlCodeExporter>和所產生的內部對應<xref:System.Xml.Serialization.XmlSchemaImporter>從 WSDL 文件產生用戶端 proxy 類別或抽象伺服器類別的類別。 使用 Wsdl.exe<xref:System.Xml.Serialization.XmlCodeExporter>而<xref:System.Web.Services.Description.ServiceDescriptionImporter>類別，在 WSDL 文件會指定：  
  
-   使用常值，表示 SOAP 訊息的參數和傳回值 （或要求和回應的文件） 的內容會解譯為常值指定使用 XML 結構描述定義。  
  
-   非 SOAP 的 Web 服務使用的 HTTP GET 與 HTTP POST 作業的實作。  
  
-   Xsd.exe 會使用<xref:System.Xml.Serialization.XmlCodeExporter>從 XML 結構描述定義 (XSD) 文件產生類別。  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Xml.Serialization.CodeGenerationOptions" />
    <altmember cref="T:System.Xml.Serialization.XmlSchemaImporter" />
    <altmember cref="T:System.Xml.Serialization.SoapCodeExporter" />
    <altmember cref="T:System.Web.Services.Description.ServiceDescriptionImporter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlCodeExporter (System.CodeDom.CodeNamespace codeNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeNamespace codeNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlCodeExporter(System::CodeDom::CodeNamespace ^ codeNamespace);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlCodeExporter : System.CodeDom.CodeNamespace -&gt; System.Xml.Serialization.XmlCodeExporter" Usage="new System.Xml.Serialization.XmlCodeExporter codeNamespace" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">要產生的型別命名空間。</param>
        <summary>使用指定的命名空間，初始化 <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 而不是建立的執行個體<xref:System.Xml.Serialization.XmlCodeExporter>直接類別中，使用 Web 服務描述語言工具 (Wsdl.exe) 或 XML 結構描述定義工具 (Xsd.exe)。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlCodeExporter (System.CodeDom.CodeNamespace codeNamespace, System.CodeDom.CodeCompileUnit codeCompileUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeNamespace codeNamespace, class System.CodeDom.CodeCompileUnit codeCompileUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlCodeExporter(System::CodeDom::CodeNamespace ^ codeNamespace, System::CodeDom::CodeCompileUnit ^ codeCompileUnit);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlCodeExporter : System.CodeDom.CodeNamespace * System.CodeDom.CodeCompileUnit -&gt; System.Xml.Serialization.XmlCodeExporter" Usage="new System.Xml.Serialization.XmlCodeExporter (codeNamespace, codeCompileUnit)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">要產生的型別命名空間。</param>
        <param name="codeCompileUnit">已用過之組件 (Assembly) 參考會自動加入其中的 CodeDOM 圖形容器。</param>
        <summary>使用指定的命名空間和程式碼編譯單位，初始化 <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 而不是建立的執行個體<xref:System.Xml.Serialization.XmlCodeExporter>直接類別中，使用 Web 服務描述語言工具 (Wsdl.exe) 或 XML 結構描述定義工具 (Xsd.exe)。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlCodeExporter (System.CodeDom.CodeNamespace codeNamespace, System.CodeDom.CodeCompileUnit codeCompileUnit, System.Xml.Serialization.CodeGenerationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeNamespace codeNamespace, class System.CodeDom.CodeCompileUnit codeCompileUnit, valuetype System.Xml.Serialization.CodeGenerationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlCodeExporter(System::CodeDom::CodeNamespace ^ codeNamespace, System::CodeDom::CodeCompileUnit ^ codeCompileUnit, System::Xml::Serialization::CodeGenerationOptions options);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlCodeExporter : System.CodeDom.CodeNamespace * System.CodeDom.CodeCompileUnit * System.Xml.Serialization.CodeGenerationOptions -&gt; System.Xml.Serialization.XmlCodeExporter" Usage="new System.Xml.Serialization.XmlCodeExporter (codeNamespace, codeCompileUnit, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">要產生的型別命名空間。</param>
        <param name="codeCompileUnit">已用過之組件參考會自動加入其中的 <see cref="T:System.CodeDom.CodeCompileUnit" /> 程式圖形容器。</param>
        <param name="options">列舉值，可提供選項以便從 XML 結構描述自訂資料型別產生 .NET Framework 型別。</param>
        <summary>使用指定的命名空間、程式碼編譯單位和程式碼產生選項，初始化 <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 而不是建立的執行個體<xref:System.Xml.Serialization.XmlCodeExporter>直接類別中，使用 Web 服務描述語言工具 (Wsdl.exe) 或 XML 結構描述定義工具 (Xsd.exe)。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlCodeExporter (System.CodeDom.CodeNamespace codeNamespace, System.CodeDom.CodeCompileUnit codeCompileUnit, System.Xml.Serialization.CodeGenerationOptions options, System.Collections.Hashtable mappings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeNamespace codeNamespace, class System.CodeDom.CodeCompileUnit codeCompileUnit, valuetype System.Xml.Serialization.CodeGenerationOptions options, class System.Collections.Hashtable mappings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlCodeExporter(System::CodeDom::CodeNamespace ^ codeNamespace, System::CodeDom::CodeCompileUnit ^ codeCompileUnit, System::Xml::Serialization::CodeGenerationOptions options, System::Collections::Hashtable ^ mappings);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlCodeExporter : System.CodeDom.CodeNamespace * System.CodeDom.CodeCompileUnit * System.Xml.Serialization.CodeGenerationOptions * System.Collections.Hashtable -&gt; System.Xml.Serialization.XmlCodeExporter" Usage="new System.Xml.Serialization.XmlCodeExporter (codeNamespace, codeCompileUnit, options, mappings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" />
        <Parameter Name="mappings" Type="System.Collections.Hashtable" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">要產生的型別命名空間。</param>
        <param name="codeCompileUnit">已用過之組件參考會自動加入其中的 <see cref="T:System.CodeDom.CodeCompileUnit" /> 程式圖形容器。</param>
        <param name="options">列舉值，可提供選項以便從 XML 結構描述自訂資料型別產生 .NET Framework 型別。</param>
        <param name="mappings">包含 <see cref="T:System.Collections.Hashtable" /> 物件的 <see cref="T:System.Xml.Serialization.XmlMapping" />。</param>
        <summary>使用指定的 .NET Framework 命名空間、含有物件圖形的程式碼編譯單位、表示程式碼產生選項的物件以及對應物件的集合，初始化 <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlCodeExporter (System.CodeDom.CodeNamespace codeNamespace, System.CodeDom.CodeCompileUnit codeCompileUnit, System.CodeDom.Compiler.CodeDomProvider codeProvider, System.Xml.Serialization.CodeGenerationOptions options, System.Collections.Hashtable mappings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeNamespace codeNamespace, class System.CodeDom.CodeCompileUnit codeCompileUnit, class System.CodeDom.Compiler.CodeDomProvider codeProvider, valuetype System.Xml.Serialization.CodeGenerationOptions options, class System.Collections.Hashtable mappings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.CodeDom.Compiler.CodeDomProvider,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlCodeExporter(System::CodeDom::CodeNamespace ^ codeNamespace, System::CodeDom::CodeCompileUnit ^ codeCompileUnit, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider, System::Xml::Serialization::CodeGenerationOptions options, System::Collections::Hashtable ^ mappings);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlCodeExporter : System.CodeDom.CodeNamespace * System.CodeDom.CodeCompileUnit * System.CodeDom.Compiler.CodeDomProvider * System.Xml.Serialization.CodeGenerationOptions * System.Collections.Hashtable -&gt; System.Xml.Serialization.XmlCodeExporter" Usage="new System.Xml.Serialization.XmlCodeExporter (codeNamespace, codeCompileUnit, codeProvider, options, mappings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" />
        <Parameter Name="mappings" Type="System.Collections.Hashtable" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">要產生的型別命名空間。</param>
        <param name="codeCompileUnit">已用過之組件參考會自動加入其中的 <see cref="T:System.CodeDom.CodeCompileUnit" /> 程式圖形容器。</param>
        <param name="codeProvider">列舉值，可提供選項以便從 XML 結構描述自訂資料型別產生 .NET Framework 型別。</param>
        <param name="options"><see cref="T:System.Xml.Serialization.CodeGenerationOptions" />，其中含有用於產生程式碼的特殊指令。</param>
        <param name="mappings">包含 <see cref="T:System.Collections.Hashtable" /> 物件的 <see cref="T:System.Xml.Serialization.XmlMapping" />。</param>
        <summary>使用指定的 .NET Framework 命名空間、含有物件圖形的程式碼編譯單位、指定程式碼選項的列舉型別以及對應物件的集合，初始化 <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddMappingMetadata">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>加入 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 宣告至方法參數，或傳回對應於 Web 服務描述語言 (WSDL) 文件中 SOAP 訊息定義之 <see langword="&amp;lt;part&amp;gt;" /> 項目的值。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddMappingMetadata">
      <MemberSignature Language="C#" Value="public void AddMappingMetadata (System.CodeDom.CodeAttributeDeclarationCollection metadata, System.Xml.Serialization.XmlMemberMapping member, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMappingMetadata(class System.CodeDom.CodeAttributeDeclarationCollection metadata, class System.Xml.Serialization.XmlMemberMapping member, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMappingMetadata (metadata As CodeAttributeDeclarationCollection, member As XmlMemberMapping, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMappingMetadata(System::CodeDom::CodeAttributeDeclarationCollection ^ metadata, System::Xml::Serialization::XmlMemberMapping ^ member, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="member this.AddMappingMetadata : System.CodeDom.CodeAttributeDeclarationCollection * System.Xml.Serialization.XmlMemberMapping * string -&gt; unit" Usage="xmlCodeExporter.AddMappingMetadata (metadata, member, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.CodeDom.CodeAttributeDeclarationCollection" />
        <Parameter Name="member" Type="System.Xml.Serialization.XmlMemberMapping" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="metadata">此方法會針對產生的型別將屬性宣告加入其中的 <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> 物件集合。</param>
        <param name="member">WSDL 訊息定義之單一項目部分的內部 .NET Framework 型別對應。</param>
        <param name="ns">SOAP 訊息部分的 XML 命名空間，已針對此部分產生成員參數中的型別對應資訊。</param>
        <summary>加入 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 宣告至方法參數，或傳回對應於 Web 服務描述語言 (WSDL) 文件中 SOAP 訊息定義之 <see langword="&lt;part&gt;" /> 項目的值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當 WSDL 文件指定常值使用時，表示 SOAP 訊息的參數和傳回值 （或要求和回應的文件） 的內容會解譯為常值指定 xml Web 服務描述語言工具 (Wsdl.exe) 便會使用此方法結構描述定義。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddMappingMetadata">
      <MemberSignature Language="C#" Value="public void AddMappingMetadata (System.CodeDom.CodeAttributeDeclarationCollection metadata, System.Xml.Serialization.XmlTypeMapping mapping, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMappingMetadata(class System.CodeDom.CodeAttributeDeclarationCollection metadata, class System.Xml.Serialization.XmlTypeMapping mapping, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlTypeMapping,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMappingMetadata (metadata As CodeAttributeDeclarationCollection, mapping As XmlTypeMapping, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMappingMetadata(System::CodeDom::CodeAttributeDeclarationCollection ^ metadata, System::Xml::Serialization::XmlTypeMapping ^ mapping, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="member this.AddMappingMetadata : System.CodeDom.CodeAttributeDeclarationCollection * System.Xml.Serialization.XmlTypeMapping * string -&gt; unit" Usage="xmlCodeExporter.AddMappingMetadata (metadata, mapping, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.CodeDom.CodeAttributeDeclarationCollection" />
        <Parameter Name="mapping" Type="System.Xml.Serialization.XmlTypeMapping" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="metadata">此方法會針對產生的型別將屬性宣告加入其中的 <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> 物件集合。</param>
        <param name="mapping">XML 結構描述項目的內部 .NET Framework 型別對應資訊。</param>
        <param name="ns">SOAP 訊息部分的 XML 命名空間，已針對此部分產生成員參數中的型別對應資訊。</param>
        <summary>加入 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 宣告至方法傳回值，以便對應於 Web 服務描述語言 (WSDL) 文件中非 SOAP 訊息定義的 <see langword="&lt;part&gt;" /> 項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當 WSDL 文件指定.NET Framework 的非 SOAP 實作使用 HTTP GET 與 HTTP POST 作業的 Web 服務時，Web 服務描述語言工具 (Wsdl.exe) 會使用這個方法。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddMappingMetadata">
      <MemberSignature Language="C#" Value="public void AddMappingMetadata (System.CodeDom.CodeAttributeDeclarationCollection metadata, System.Xml.Serialization.XmlMemberMapping member, string ns, bool forceUseMemberName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMappingMetadata(class System.CodeDom.CodeAttributeDeclarationCollection metadata, class System.Xml.Serialization.XmlMemberMapping member, string ns, bool forceUseMemberName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMappingMetadata (metadata As CodeAttributeDeclarationCollection, member As XmlMemberMapping, ns As String, forceUseMemberName As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMappingMetadata(System::CodeDom::CodeAttributeDeclarationCollection ^ metadata, System::Xml::Serialization::XmlMemberMapping ^ member, System::String ^ ns, bool forceUseMemberName);" />
      <MemberSignature Language="F#" Value="member this.AddMappingMetadata : System.CodeDom.CodeAttributeDeclarationCollection * System.Xml.Serialization.XmlMemberMapping * string * bool -&gt; unit" Usage="xmlCodeExporter.AddMappingMetadata (metadata, member, ns, forceUseMemberName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.CodeDom.CodeAttributeDeclarationCollection" />
        <Parameter Name="member" Type="System.Xml.Serialization.XmlMemberMapping" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="forceUseMemberName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadata">此方法會針對產生的型別將屬性宣告加入其中的 <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> 物件集合。</param>
        <param name="member">WSDL 訊息定義之單一項目部分的內部 .NET Framework 型別對應。</param>
        <param name="ns">SOAP 訊息部分的 XML 命名空間，已針對此部分產生成員參數中的型別對應資訊。</param>
        <param name="forceUseMemberName">旗標，可協助判斷是否要針對產生的屬性宣告，加入含有 XML 項目名稱的初始引數。</param>
        <summary>加入 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 宣告至方法參數，或傳回對應於 Web 服務描述語言 (WSDL) 文件中 SOAP 訊息定義之 <see langword="&lt;part&gt;" /> 項目的值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 服務描述語言工具 (Wsdl.exe) 會使用這個方法時的 WSDL 文件指定常值使用時，表示 SOAP 訊息參數的內容和 XML 常值指定傳回值 （或要求和回應的文件）結構描述定義。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExportMembersMapping">
      <MemberSignature Language="C#" Value="public void ExportMembersMapping (System.Xml.Serialization.XmlMembersMapping xmlMembersMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportMembersMapping(class System.Xml.Serialization.XmlMembersMapping xmlMembersMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportMembersMapping(System::Xml::Serialization::XmlMembersMapping ^ xmlMembersMapping);" />
      <MemberSignature Language="F#" Value="member this.ExportMembersMapping : System.Xml.Serialization.XmlMembersMapping -&gt; unit" Usage="xmlCodeExporter.ExportMembersMapping xmlMembersMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlMembersMapping" Type="System.Xml.Serialization.XmlMembersMapping" />
      </Parameters>
      <Docs>
        <param name="xmlMembersMapping">WSDL 訊息定義之項目部分的內部 .NET Framework 型別對應。</param>
        <summary>針對屬於 Web 服務描述語言 (WSDL) 文件中 SOAP 訊息定義的各部分，產生 .NET Framework 型別，再加上屬性宣告。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 服務描述語言工具 (Wsdl.exe) 會使用這個方法時的 WSDL 文件指定常值使用時，表示 SOAP 訊息參數的內容和 XML 常值指定傳回值 （或要求和回應的文件）結構描述定義。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExportTypeMapping">
      <MemberSignature Language="C#" Value="public void ExportTypeMapping (System.Xml.Serialization.XmlTypeMapping xmlTypeMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportTypeMapping(class System.Xml.Serialization.XmlTypeMapping xmlTypeMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportTypeMapping(System::Xml::Serialization::XmlTypeMapping ^ xmlTypeMapping);" />
      <MemberSignature Language="F#" Value="member this.ExportTypeMapping : System.Xml.Serialization.XmlTypeMapping -&gt; unit" Usage="xmlCodeExporter.ExportTypeMapping xmlTypeMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlTypeMapping" Type="System.Xml.Serialization.XmlTypeMapping" />
      </Parameters>
      <Docs>
        <param name="xmlTypeMapping">XML 結構描述項目的內部 .NET Framework 型別對應資訊。</param>
        <summary>針對 XML 結構描述項目，產生 .NET Framework 型別，再加上屬性宣告。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 服務描述語言工具 (Wsdl.exe) 會使用這個方法來產生 SOAP 訊息標頭和 Web 服務描述語言 (WSDL) 文件指定非 SOAP Web 服務使用 HTTP-GET 和 HTTP-POST 實作時，傳回型別作業。 XML 結構描述定義工具 (Xsd.exe) 來產生 XML 結構描述項目宣告的每個 XML 結構描述定義 (XSD) 文件中使用這個方法。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IncludeMetadata">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeAttributeDeclarationCollection IncludeMetadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeAttributeDeclarationCollection IncludeMetadata" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlCodeExporter.IncludeMetadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncludeMetadata As CodeAttributeDeclarationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeAttributeDeclarationCollection ^ IncludeMetadata { System::CodeDom::CodeAttributeDeclarationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncludeMetadata : System.CodeDom.CodeAttributeDeclarationCollection" Usage="System.Xml.Serialization.XmlCodeExporter.IncludeMetadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeAttributeDeclarationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>這個 API 支援 .NET Framework 基礎結構，並不適合直接從您的程式碼中使用。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>