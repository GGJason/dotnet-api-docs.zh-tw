<Type Name="XmlArrayItemAttribute" FullName="System.Xml.Serialization.XmlArrayItemAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="80ca3fa39ba0f64ffc0235a9a2f22b6f7e7298a0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720852" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlArrayItemAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlArrayItemAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlArrayItemAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlArrayItemAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlArrayItemAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8415c-101">表示屬性，這個屬性會指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 可置於序列化陣列中的衍生型別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8415c-101">Represents an attribute that specifies the derived types that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> can place in a serialized array.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8415c-102"><xref:System.Xml.Serialization.XmlArrayItemAttribute>屬於一系列屬性可控制如何<xref:System.Xml.Serialization.XmlSerializer>序列化或還原序列化物件。</span><span class="sxs-lookup"><span data-stu-id="8415c-102">The <xref:System.Xml.Serialization.XmlArrayItemAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object.</span></span> <span data-ttu-id="8415c-103">如需類似屬性的完整清單，請參閱[屬性，控制 XML 序列化](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="8415c-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="8415c-104">您可以套用<xref:System.Xml.Serialization.XmlArrayItemAttribute>傳回陣列，或提供存取任何公用讀取/寫入成員。</span><span class="sxs-lookup"><span data-stu-id="8415c-104">You can apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to any public read/write member that returns an array, or provides access to one.</span></span> <span data-ttu-id="8415c-105">例如，傳回的集合，集合的物件陣列的欄位<xref:System.Collections.ArrayList>，或任何實作類別<xref:System.Collections.IEnumerable>介面。</span><span class="sxs-lookup"><span data-stu-id="8415c-105">For example, a field that returns an array of objects, a collection, an <xref:System.Collections.ArrayList>, or any class that implements the <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 <span data-ttu-id="8415c-106"><xref:System.Xml.Serialization.XmlArrayItemAttribute>支援多型-也就是說，它可讓<xref:System.Xml.Serialization.XmlSerializer>將衍生的物件新增至陣列。</span><span class="sxs-lookup"><span data-stu-id="8415c-106">The <xref:System.Xml.Serialization.XmlArrayItemAttribute> supports polymorphism--in other words, it allows the <xref:System.Xml.Serialization.XmlSerializer> to add derived objects to an array.</span></span> <span data-ttu-id="8415c-107">例如，假設名為類別`Mammal`衍生自基底類別，名為`Animal`。</span><span class="sxs-lookup"><span data-stu-id="8415c-107">For example, suppose a class named `Mammal` is derived from a base class named `Animal`.</span></span> <span data-ttu-id="8415c-108">進一步假設具名的類別`MyAnimals`包含傳回陣列的欄位`Animal`物件。</span><span class="sxs-lookup"><span data-stu-id="8415c-108">Further suppose that a class named `MyAnimals` contains a field that returns an array of `Animal` objects.</span></span> <span data-ttu-id="8415c-109">允許<xref:System.Xml.Serialization.XmlSerializer>序列化兩者`Animal`和`Mammal`類型，套用<xref:System.Xml.Serialization.XmlArrayItemAttribute>欄位兩次，每次指定下列其中一種可接受。</span><span class="sxs-lookup"><span data-stu-id="8415c-109">To allow the <xref:System.Xml.Serialization.XmlSerializer> to serialize both the `Animal` and `Mammal` type, apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field twice, each time specifying one of the two acceptable types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8415c-110">您可以套用多個執行個體<xref:System.Xml.Serialization.XmlArrayItemAttribute>或<xref:System.Xml.Serialization.XmlElementAttribute>來指定可以插入陣列中的物件類型。</span><span class="sxs-lookup"><span data-stu-id="8415c-110">You can apply multiple instances of the <xref:System.Xml.Serialization.XmlArrayItemAttribute> or <xref:System.Xml.Serialization.XmlElementAttribute> to specify types of objects that can be inserted into the array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8415c-111">不支援序列化的欄位或屬性，傳回的介面的陣列。</span><span class="sxs-lookup"><span data-stu-id="8415c-111">The serialization of a field or property that returns an interface or array of interfaces is not supported.</span></span>  
  
 <span data-ttu-id="8415c-112">如需屬性用法的詳細資訊，請參閱[屬性](~/docs/standard/attributes/index.md)。</span><span class="sxs-lookup"><span data-stu-id="8415c-112">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8415c-113">您可以使用 word`XmlArrayItem`取代較長程式碼中<xref:System.Xml.Serialization.XmlArrayItemAttribute>。</span><span class="sxs-lookup"><span data-stu-id="8415c-113">You can use the word `XmlArrayItem` in your code instead of the longer <xref:System.Xml.Serialization.XmlArrayItemAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8415c-114">下列範例會序列化類別，名為`Group`，其中包含名為的欄位`Employees`所傳回的陣列`Employee`物件。</span><span class="sxs-lookup"><span data-stu-id="8415c-114">The following example serializes a class named `Group` that contains a field named `Employees` that returns an array of `Employee` objects.</span></span> <span data-ttu-id="8415c-115">範例會在套用<xref:System.Xml.Serialization.XmlArrayItemAttribute>到欄位，藉此指示<xref:System.Xml.Serialization.XmlSerializer>它可以插入基底類別的物件 (`Employee`) 型別和衍生的類別型別 (`Manager`) 序列化的陣列。</span><span class="sxs-lookup"><span data-stu-id="8415c-115">The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, thereby instructing the <xref:System.Xml.Serialization.XmlSerializer> that it can insert objects of both the base class (`Employee`) type and derived class type (`Manager`) into the serialized array.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlArrayAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8415c-116">初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8415c-116">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8415c-117">初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8415c-117">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8415c-118">下列範例會序列化類別，名為`Transportation`，其中包含名為的欄位`MyVehicles`所傳回的陣列`Vehicle`物件。</span><span class="sxs-lookup"><span data-stu-id="8415c-118">The following example serializes a class named `Transportation` that contains a field named `MyVehicles` that returns an array of `Vehicle` objects.</span></span> <span data-ttu-id="8415c-119">範例會在套用<xref:System.Xml.Serialization.XmlArrayItemAttribute>到欄位，讓<xref:System.Xml.Serialization.XmlSerializer>要插入的執行個體`Car`類別，衍生自`Vehicle`陣列中的類別。</span><span class="sxs-lookup"><span data-stu-id="8415c-119">The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, allowing the <xref:System.Xml.Serialization.XmlSerializer> to insert instances of the `Car` class, which is derived from the `Vehicle` class, into the array.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute(System::String ^ elementName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="8415c-120">XML 項目的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8415c-120">The name of the XML element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8415c-121">初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 類別的新執行個體，指定 XML 文件中產生的 XML 項目名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8415c-121">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class and specifies the name of the XML element generated in the XML document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8415c-122">這個多載設定<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8415c-122">This overload sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property.</span></span>  
  
 <span data-ttu-id="8415c-123">如果您想要不同的成員識別碼產生的 XML 項目的名稱，請使用此多載。</span><span class="sxs-lookup"><span data-stu-id="8415c-123">Use this overload if you want the name of the generated XML element to differ from the member's identifier.</span></span>  
  
 <span data-ttu-id="8415c-124">包含命名空間的 XML 文件可以包含多個版本的項目名稱。</span><span class="sxs-lookup"><span data-stu-id="8415c-124">An XML document that includes namespaces can contain more than one version of an element name.</span></span> <span data-ttu-id="8415c-125">如需詳細資訊，請參閱 <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> 屬性。</span><span class="sxs-lookup"><span data-stu-id="8415c-125">For details, see the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8415c-126">下列範例會序列化類別，名為`Transportation`，其中包含名為的欄位`MyVehicles`所傳回的陣列`Vehicle`物件。</span><span class="sxs-lookup"><span data-stu-id="8415c-126">The following example serializes a class named `Transportation` that contains a field named `MyVehicles` that returns an array of `Vehicle` objects.</span></span> <span data-ttu-id="8415c-127">範例會在套用<xref:System.Xml.Serialization.XmlArrayItemAttribute>到欄位，讓<xref:System.Xml.Serialization.XmlSerializer>要插入的執行個體`Car`類別，衍生自`Vehicle`陣列中的類別。</span><span class="sxs-lookup"><span data-stu-id="8415c-127">The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, allowing the <xref:System.Xml.Serialization.XmlSerializer> to insert instances of the `Car` class, which is derived from the `Vehicle` class, into the array.</span></span> <span data-ttu-id="8415c-128">同時套用此屬性，這個範例會設定<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>屬性使用`elementName`參數。</span><span class="sxs-lookup"><span data-stu-id="8415c-128">While applying the attribute, the example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property using the `elementName` parameter.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute(Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="8415c-129">要序列化的物件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8415c-129">The <see cref="T:System.Type" /> of the object to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8415c-130">初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 類別的新執行個體，指定可插入序列化陣列的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8415c-130">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class and specifies the <see cref="T:System.Type" /> that can be inserted into the serialized array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8415c-131">下列範例會序列化類別，名為`Transportation`，其中包含名為的欄位`MyVehicles`所傳回的陣列`Vehicle`物件。</span><span class="sxs-lookup"><span data-stu-id="8415c-131">The following example serializes a class named `Transportation` that contains a field named `MyVehicles` that returns an array of `Vehicle` objects.</span></span> <span data-ttu-id="8415c-132">範例會在套用<xref:System.Xml.Serialization.XmlArrayItemAttribute>到欄位，讓<xref:System.Xml.Serialization.XmlSerializer>要插入的執行個體`Car`類別，衍生自`Vehicle`陣列中的類別。</span><span class="sxs-lookup"><span data-stu-id="8415c-132">The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, allowing the <xref:System.Xml.Serialization.XmlSerializer> to insert instances of the `Car` class, which is derived from the `Vehicle` class, into the array.</span></span> <span data-ttu-id="8415c-133">同時套用此屬性，這個範例會設定<xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A>屬性使用`type`參數。</span><span class="sxs-lookup"><span data-stu-id="8415c-133">While applying the attribute, the example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> property using the `type` parameter.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute (string elementName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute(System::String ^ elementName, Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="8415c-134">XML 項目的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8415c-134">The name of the XML element.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="8415c-135">要序列化的物件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8415c-135">The <see cref="T:System.Type" /> of the object to serialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8415c-136">初始化 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 類別的新執行個體，指定 XML 文件中產生的 XML 項目名稱，以及可插入所產生之 XML 文件的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8415c-136">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> class and specifies the name of the XML element generated in the XML document and the <see cref="T:System.Type" /> that can be inserted into the generated XML document.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8415c-137">這個多載設定<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>和<xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8415c-137">This overload sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> and the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> properties.</span></span>  
  
 <span data-ttu-id="8415c-138">如果您想要不同的成員識別碼產生的 XML 項目的名稱，請使用此多載。</span><span class="sxs-lookup"><span data-stu-id="8415c-138">Use this overload if you want the name of the generated XML element to differ from the member's identifier.</span></span>  
  
 <span data-ttu-id="8415c-139">包含命名空間的 XML 文件可以包含多個版本的項目名稱。</span><span class="sxs-lookup"><span data-stu-id="8415c-139">An XML document that includes namespaces can contain more than one version of an element name.</span></span> <span data-ttu-id="8415c-140">如需詳細資訊，請參閱 <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> 屬性。</span><span class="sxs-lookup"><span data-stu-id="8415c-140">For details, see the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8415c-141">下列範例會序列化類別，名為`Transportation`，其中包含名為的欄位`MyVehicles`所傳回的陣列`Vehicle`物件。</span><span class="sxs-lookup"><span data-stu-id="8415c-141">The following example serializes a class named `Transportation` that contains a field named `MyVehicles` that returns an array of `Vehicle` objects.</span></span> <span data-ttu-id="8415c-142">範例會在套用<xref:System.Xml.Serialization.XmlArrayItemAttribute>到欄位，讓<xref:System.Xml.Serialization.XmlSerializer>要插入的執行個體`Car`類別，衍生自`Vehicle`陣列中的類別。</span><span class="sxs-lookup"><span data-stu-id="8415c-142">The example applies the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field, allowing the <xref:System.Xml.Serialization.XmlSerializer> to insert instances of the `Car` class, which is derived from the `Vehicle` class, into the array.</span></span> <span data-ttu-id="8415c-143">同時套用此屬性，這個範例會設定<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>屬性使用`elementName`參數，而<xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A>屬性使用`type`參數。</span><span class="sxs-lookup"><span data-stu-id="8415c-143">While applying the attribute, the example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property using the `elementName` parameter, and the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> property using the `type` parameter.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8415c-144">取得或設定產生的 XML 項目的 XML 資料型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8415c-144">Gets or sets the XML data type of the generated XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8415c-145">XML 結構描述定義 (XSD) 資料型別，如全球資訊網協會 (www.w3.org ) 文件＜XML Schema Part 2: DataTypes＞中所定義。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8415c-145">An XML schema definition (XSD) data type, as defined by the World Wide Web Consortium (www.w3.org) document "XML Schema Part 2: DataTypes".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8415c-146">下表列出與它們對應的.NET 之 XML 結構描述簡單資料類型。</span><span class="sxs-lookup"><span data-stu-id="8415c-146">The following table lists the XML Schema simple data types with their .NET equivalents.</span></span>  
  
 <span data-ttu-id="8415c-147">XML 結構描述`base64Binary`和`hexBinary`資料類型使用的陣列<xref:System.Byte>物件，並套用<xref:System.Xml.Serialization.XmlArrayItemAttribute>與<xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A>屬性設定為"base64Binary"或"hexBinary"，視需要。</span><span class="sxs-lookup"><span data-stu-id="8415c-147">For the XML Schema `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> objects, and apply an <xref:System.Xml.Serialization.XmlArrayItemAttribute> with the <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> property set to "base64Binary" or "hexBinary", as appropriate.</span></span> <span data-ttu-id="8415c-148">XML 結構描述`time`和`date`資料類型，使用<xref:System.DateTime>輸入和套用<xref:System.Xml.Serialization.XmlArrayItemAttribute>與<xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A>設為 「 日期 」 或 「 時間 」。</span><span class="sxs-lookup"><span data-stu-id="8415c-148">For the XML Schema `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute> with the <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> set to "date" or "time".</span></span>  
  
 <span data-ttu-id="8415c-149">對應到字串，每一個 XML 結構描述型別，套用<xref:System.Xml.Serialization.XmlArrayItemAttribute>具有其<xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A>屬性設定為 XML 結構描述類型。</span><span class="sxs-lookup"><span data-stu-id="8415c-149">For every XML Schema type that is mapped to a string, apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute> with its <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> property set to the XML Schema type.</span></span> <span data-ttu-id="8415c-150">不過，這不會變更序列化格式，只有該成員的結構描述。</span><span class="sxs-lookup"><span data-stu-id="8415c-150">However, this does not change the serialization format, only the schema for the member.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8415c-151">屬性是區分大小寫，，因此您必須將它設定於其中一個 XML 結構描述資料類型。</span><span class="sxs-lookup"><span data-stu-id="8415c-151">The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8415c-152">將二進位資料做為 XML 項目會更有效率再將它傳遞為 XML 屬性。</span><span class="sxs-lookup"><span data-stu-id="8415c-152">Passing binary data as an XML element is more efficient then passing it as an XML attribute.</span></span>  
  
 <span data-ttu-id="8415c-153">如需有關 XML 結構描述資料類型的詳細資訊，請參閱全球資訊網協會 (www.w3.org) 文件 「 XML 結構描述第 2 部分： 資料類型。 」</span><span class="sxs-lookup"><span data-stu-id="8415c-153">For more information about XML Schema data types, see the World Wide Web Consortium (www.w3.org) document "XML Schema Part 2: Datatypes."</span></span>  
  
|<span data-ttu-id="8415c-154">XSD 資料類型</span><span class="sxs-lookup"><span data-stu-id="8415c-154">XSD data type</span></span>|<span data-ttu-id="8415c-155">.NET 資料類型</span><span class="sxs-lookup"><span data-stu-id="8415c-155">.NET data type</span></span>|  
|-------------------|--------------------|  
|<span data-ttu-id="8415c-156">anyURI</span><span class="sxs-lookup"><span data-stu-id="8415c-156">anyURI</span></span>|<xref:System.String>|  
|<span data-ttu-id="8415c-157">base64Binary</span><span class="sxs-lookup"><span data-stu-id="8415c-157">base64Binary</span></span>|<span data-ttu-id="8415c-158">陣列<xref:System.Byte>物件</span><span class="sxs-lookup"><span data-stu-id="8415c-158">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="8415c-159">boolean</span><span class="sxs-lookup"><span data-stu-id="8415c-159">boolean</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="8415c-160">byte</span><span class="sxs-lookup"><span data-stu-id="8415c-160">byte</span></span>|<xref:System.SByte>|  
|<span data-ttu-id="8415c-161">date</span><span class="sxs-lookup"><span data-stu-id="8415c-161">date</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="8415c-162">dateTime</span><span class="sxs-lookup"><span data-stu-id="8415c-162">dateTime</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="8415c-163">decimal</span><span class="sxs-lookup"><span data-stu-id="8415c-163">decimal</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="8415c-164">double</span><span class="sxs-lookup"><span data-stu-id="8415c-164">double</span></span>|<xref:System.Double>|  
|<span data-ttu-id="8415c-165">ENTITY</span><span class="sxs-lookup"><span data-stu-id="8415c-165">ENTITY</span></span>|<xref:System.String>|  
|<span data-ttu-id="8415c-166">實體</span><span class="sxs-lookup"><span data-stu-id="8415c-166">ENTITIES</span></span>|<xref:System.String>|  
|<span data-ttu-id="8415c-167">float</span><span class="sxs-lookup"><span data-stu-id="8415c-167">float</span></span>|<xref:System.Single>|  
|<span data-ttu-id="8415c-168">gDay</span><span class="sxs-lookup"><span data-stu-id="8415c-168">gDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="8415c-169">gMonth</span><span class="sxs-lookup"><span data-stu-id="8415c-169">gMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="8415c-170">gMonthDay</span><span class="sxs-lookup"><span data-stu-id="8415c-170">gMonthDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="8415c-171">gYear</span><span class="sxs-lookup"><span data-stu-id="8415c-171">gYear</span></span>|<xref:System.String>|  
|<span data-ttu-id="8415c-172">gYearMonth</span><span class="sxs-lookup"><span data-stu-id="8415c-172">gYearMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="8415c-173">hexBinary</span><span class="sxs-lookup"><span data-stu-id="8415c-173">hexBinary</span></span>|<span data-ttu-id="8415c-174">陣列<xref:System.Byte>物件</span><span class="sxs-lookup"><span data-stu-id="8415c-174">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="8415c-175">識別碼</span><span class="sxs-lookup"><span data-stu-id="8415c-175">ID</span></span>|<xref:System.String>|  
|<span data-ttu-id="8415c-176">IDREF</span><span class="sxs-lookup"><span data-stu-id="8415c-176">IDREF</span></span>|<xref:System.String>|  
|<span data-ttu-id="8415c-177">IDREFS</span><span class="sxs-lookup"><span data-stu-id="8415c-177">IDREFS</span></span>|<xref:System.String>|  
|<span data-ttu-id="8415c-178">int</span><span class="sxs-lookup"><span data-stu-id="8415c-178">int</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="8415c-179">整數</span><span class="sxs-lookup"><span data-stu-id="8415c-179">integer</span></span>|<xref:System.String>|  
|<span data-ttu-id="8415c-180">語言</span><span class="sxs-lookup"><span data-stu-id="8415c-180">language</span></span>|<xref:System.String>|  
|<span data-ttu-id="8415c-181">long</span><span class="sxs-lookup"><span data-stu-id="8415c-181">long</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="8415c-182">名稱</span><span class="sxs-lookup"><span data-stu-id="8415c-182">Name</span></span>|<xref:System.String>|  
|<span data-ttu-id="8415c-183">NCName</span><span class="sxs-lookup"><span data-stu-id="8415c-183">NCName</span></span>|<xref:System.String>|  
|<span data-ttu-id="8415c-184">negativeInteger</span><span class="sxs-lookup"><span data-stu-id="8415c-184">negativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="8415c-185">NMTOKEN</span><span class="sxs-lookup"><span data-stu-id="8415c-185">NMTOKEN</span></span>|<xref:System.String>|  
|<span data-ttu-id="8415c-186">NMTOKENS</span><span class="sxs-lookup"><span data-stu-id="8415c-186">NMTOKENS</span></span>|<xref:System.String>|  
|<span data-ttu-id="8415c-187">normalizedString</span><span class="sxs-lookup"><span data-stu-id="8415c-187">normalizedString</span></span>|<xref:System.String>|  
|<span data-ttu-id="8415c-188">nonNegativeInteger</span><span class="sxs-lookup"><span data-stu-id="8415c-188">nonNegativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="8415c-189">nonPositiveInteger</span><span class="sxs-lookup"><span data-stu-id="8415c-189">nonPositiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="8415c-190">NOTATION</span><span class="sxs-lookup"><span data-stu-id="8415c-190">NOTATION</span></span>|<xref:System.String>|  
|<span data-ttu-id="8415c-191">positiveInteger</span><span class="sxs-lookup"><span data-stu-id="8415c-191">positiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="8415c-192">QName</span><span class="sxs-lookup"><span data-stu-id="8415c-192">QName</span></span>|<xref:System.Xml.XmlQualifiedName>|  
|<span data-ttu-id="8415c-193">持續期間</span><span class="sxs-lookup"><span data-stu-id="8415c-193">duration</span></span>|<xref:System.String>|  
|<span data-ttu-id="8415c-194">字串</span><span class="sxs-lookup"><span data-stu-id="8415c-194">string</span></span>|<xref:System.String>|  
|<span data-ttu-id="8415c-195">short</span><span class="sxs-lookup"><span data-stu-id="8415c-195">short</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="8415c-196">時間</span><span class="sxs-lookup"><span data-stu-id="8415c-196">time</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="8415c-197">token</span><span class="sxs-lookup"><span data-stu-id="8415c-197">token</span></span>|<xref:System.String>|  
|<span data-ttu-id="8415c-198">unsignedByte</span><span class="sxs-lookup"><span data-stu-id="8415c-198">unsignedByte</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="8415c-199">unsignedInt</span><span class="sxs-lookup"><span data-stu-id="8415c-199">unsignedInt</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="8415c-200">unsignedLong</span><span class="sxs-lookup"><span data-stu-id="8415c-200">unsignedLong</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="8415c-201">unsignedShort</span><span class="sxs-lookup"><span data-stu-id="8415c-201">unsignedShort</span></span>|<xref:System.UInt16>|  
  
   
  
## Examples  
 <span data-ttu-id="8415c-202">下列範例會序列化類別，名為`PurchaseOrder`。</span><span class="sxs-lookup"><span data-stu-id="8415c-202">The following example serializes a class named `PurchaseOrder`.</span></span> <span data-ttu-id="8415c-203">數個執行個體<xref:System.Xml.Serialization.XmlArrayItemAttribute>類別套用至三個成員，而<xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A>每個執行個體的屬性設定為允許在陣列中的型別。</span><span class="sxs-lookup"><span data-stu-id="8415c-203">Several instances of the <xref:System.Xml.Serialization.XmlArrayItemAttribute> class are applied to three members, and the <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> property for each instance is set to a type allowed in the array.</span></span>  
  
 [!code-cpp[XmlArrayItemAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlArrayItemAttribute Example/CPP/arrayitem.cpp#1)]
 [!code-csharp[XmlArrayItemAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlArrayItemAttribute Example/CS/arrayitem.cs#1)]
 [!code-vb[XmlArrayItemAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlArrayItemAttribute Example/VB/arrayitem.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8415c-204">取得或設定產生的 XML 項目的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8415c-204">Gets or sets the name of the generated XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8415c-205">產生的 XML 項目的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8415c-205">The name of the generated XML element.</span>
          </span>
          <span data-ttu-id="8415c-206">預設值為成員識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8415c-206">The default is the member identifier.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8415c-207">指定<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>如果您想要不同的成員識別碼產生的 XML 項目的名稱。</span><span class="sxs-lookup"><span data-stu-id="8415c-207">Specify an <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> if you want the name of the generated XML element to differ from the member's identifier.</span></span>  
  
 <span data-ttu-id="8415c-208">您可以將設定為相同<xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A>名為成員的多個類別成員，如果產生的 XML 文件會使用 XML 命名空間來區別具有相同的值。</span><span class="sxs-lookup"><span data-stu-id="8415c-208">You can set the same <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> value to more than one class member if the generated XML document uses XML namespaces to distinguish between identically named members.</span></span> <span data-ttu-id="8415c-209">如需有關如何使用 XML 文件中的命名空間和前置詞的名稱的詳細資訊，請參閱<xref:System.Xml.Serialization.XmlSerializerNamespaces>類別。</span><span class="sxs-lookup"><span data-stu-id="8415c-209">For details about how to use namespaces and prefixed names in the XML document, see the <xref:System.Xml.Serialization.XmlSerializerNamespaces> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8415c-210">下列範例會設定<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>屬性`Vehicle`和`Car`類別-藉此變更的 XML 項目名稱的<xref:System.Xml.Serialization.XmlSerializer>產生這些類別。</span><span class="sxs-lookup"><span data-stu-id="8415c-210">The following example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> property for the `Vehicle` and `Car` class--thereby changing the names of XML elements that the <xref:System.Xml.Serialization.XmlSerializer> generates for those classes.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.ElementName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.ElementName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.ElementName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.ElementName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.ElementName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.ElementName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" />
      <MemberSignature Language="VB.NET" Value="Public Property Form As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm Form { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8415c-211">取得或設定值，指出產生的 XML 項目名稱是否為限定的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8415c-211">Gets or sets a value that indicates whether the name of the generated XML element is qualified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8415c-212">其中一個 <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8415c-212">One of the <see cref="T:System.Xml.Schema.XmlSchemaForm" /> values.</span>
          </span>
          <span data-ttu-id="8415c-213">預設值為 <see langword="XmlSchemaForm.None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8415c-213">The default is <see langword="XmlSchemaForm.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8415c-214"><xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A>屬性會決定是否是 XML 元素名稱為限定，根據全球資訊網協會 (www.w3.org) 規格 」 中 XML 命名空間。 」</span><span class="sxs-lookup"><span data-stu-id="8415c-214">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property determines whether an XML element name is qualified, based on the World Wide Web Consortium (www.w3.org) specification "Namespaces in XML."</span></span>  
  
 <span data-ttu-id="8415c-215">如果<xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A>屬性設定為任何值，正在嘗試設定<xref:System.Xml.Serialization.XmlElementAttribute.Form%2A>屬性`XmlSchemaForm.Unqualified`擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8415c-215">If the <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property is set to any value, attempting to set the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified` throws an exception.</span></span>  
  
 <span data-ttu-id="8415c-216">預設值為`XmlSchemaForm.None`，指示<xref:System.Xml.Serialization.XmlSerializer>來檢查 XML 文件，以判斷是否為限定的命名空間的結構描述。</span><span class="sxs-lookup"><span data-stu-id="8415c-216">The default value, `XmlSchemaForm.None`, instructs the <xref:System.Xml.Serialization.XmlSerializer> to check the schema for the XML document to determine whether the namespace is qualified.</span></span> <span data-ttu-id="8415c-217">針對項目，<xref:System.Xml.Serialization.XmlSerializer>會檢查結構描述項目屬性的值`elementFormDefault`。</span><span class="sxs-lookup"><span data-stu-id="8415c-217">For elements, the <xref:System.Xml.Serialization.XmlSerializer> checks the value of the schema-element attribute `elementFormDefault`.</span></span> <span data-ttu-id="8415c-218">屬性，它會檢查結構描述項目屬性的值`attributeFormDefault`。</span><span class="sxs-lookup"><span data-stu-id="8415c-218">For attributes, it checks the value of the schema-element attribute `attributeFormDefault`.</span></span> <span data-ttu-id="8415c-219">例如，下列 XML 結構描述指出`Name`元素為限定，而`Number`項目是不合格。</span><span class="sxs-lookup"><span data-stu-id="8415c-219">For example, the following XML Schema indicates that the `Name` element is qualified, while the `Number` element is unqualified.</span></span>  
  
```  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified">  
   <element name="Name"/>  
   <attribute name="Number"/>  
</schema>  
```  
  
   
  
## Examples  
 <span data-ttu-id="8415c-220">下列範例會設定<xref:System.Xml.Serialization.XmlArrayItemAttribute.Form%2A>屬性`Vehicle`類別`XmlSchemaForm.Unqualified`，而<xref:System.Xml.Serialization.XmlArrayItemAttribute.Form%2A>屬性`Car`類別`XmlSchemaForm.Qualified`。</span><span class="sxs-lookup"><span data-stu-id="8415c-220">The following example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Form%2A> property for the `Vehicle` class to `XmlSchemaForm.Unqualified`, and the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Form%2A> property for the `Car` class to `XmlSchemaForm.Qualified`.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.Form Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.Form Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="8415c-221">
            <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> 屬性設定為 <see langword="XmlSchemaForm.Unqualified" />，並且指定 <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8415c-221">The <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> property is set to <see langword="XmlSchemaForm.Unqualified" /> and a <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> value is specified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8415c-222">取得或設定值，指出 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否必須將成員序列化為 <see langword="xsi:nil" /> 屬性設為 <see langword="true" /> 的空 XML 標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8415c-222">Gets or sets a value that indicates whether the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize a member as an empty XML tag with the <see langword="xsi:nil" /> attribute set to <see langword="true" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8415c-223">如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 產生 <see langword="true" /> 屬性，則為 <see langword="xsi:nil" />，否則為 <see langword="false" />，而且不會產生執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8415c-223">
              <see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates the <see langword="xsi:nil" /> attribute; otherwise, <see langword="false" />, and no instance is generated.</span>
          </span>
          <span data-ttu-id="8415c-224">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8415c-224">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8415c-225">結構的 XML 結構描述規格可讓 XML 文件明確表示項目的內容遺漏。</span><span class="sxs-lookup"><span data-stu-id="8415c-225">The XML schema specification for structures allows an XML document to explicitly signal that an element's content is missing.</span></span> <span data-ttu-id="8415c-226">這類項目包含屬性`xsi:nil`設`true`。</span><span class="sxs-lookup"><span data-stu-id="8415c-226">Such an element contains the attribute `xsi:nil` set to `true`.</span></span> <span data-ttu-id="8415c-227">如需詳細資訊，請參閱全球資訊網協會 (www.w3.org) 規格標題為 「 XML 結構描述第 1 部分： 結構。 」</span><span class="sxs-lookup"><span data-stu-id="8415c-227">For more information, see the World Wide Web Consortium (www.w3.org) specification titled "XML Schema Part 1: Structures."</span></span>  
  
 <span data-ttu-id="8415c-228">如果<xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A>屬性是`true`、`xsi:nil`屬性就會產生的類別成員，已設定成`null`。</span><span class="sxs-lookup"><span data-stu-id="8415c-228">If the <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> property is `true`, the `xsi:nil` attribute is generated for class members that have been set to `null`.</span></span> <span data-ttu-id="8415c-229">例如，如果您設定名為某個欄位`MyStringArray`至`null`、<xref:System.Xml.Serialization.XmlSerializer>會產生下列 XML 程式碼。</span><span class="sxs-lookup"><span data-stu-id="8415c-229">For example, if you set a field named `MyStringArray` to `null`, the <xref:System.Xml.Serialization.XmlSerializer> generates the following XML code.</span></span>  
  
```  
<MyStringArray xsi:nil = "true" />  
```  
  
 <span data-ttu-id="8415c-230">如果<xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A>屬性是`false`，會產生任何 XML 元素。</span><span class="sxs-lookup"><span data-stu-id="8415c-230">If the <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> property is `false`, no XML element is generated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8415c-231">您不能套用<xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A>成員的屬性型別為實值類型，因為實值類型不能包含`null`。</span><span class="sxs-lookup"><span data-stu-id="8415c-231">You cannot apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> property to a member typed as a value type because a value type cannot contain `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8415c-232">下列範例會序列化類別，名為`Group`，其中包含名為的欄位`Employees`所傳回的陣列`Employee`物件。</span><span class="sxs-lookup"><span data-stu-id="8415c-232">The following example serializes a class named `Group`, which contains a field named `Employees` that returns an array of `Employee` objects.</span></span> <span data-ttu-id="8415c-233">名為第二個類別`Manager`衍生自`Employee`。</span><span class="sxs-lookup"><span data-stu-id="8415c-233">A second class named `Manager` derives from `Employee`.</span></span> <span data-ttu-id="8415c-234"><xref:System.Xml.Serialization.XmlArrayItemAttribute>指定<xref:System.Xml.Serialization.XmlSerializer>插入兩者`Employee`和`Manager`陣列中的物件。</span><span class="sxs-lookup"><span data-stu-id="8415c-234">An <xref:System.Xml.Serialization.XmlArrayItemAttribute> specifies that the <xref:System.Xml.Serialization.XmlSerializer> can insert both `Employee` and `Manager` objects into the array.</span></span> <span data-ttu-id="8415c-235">範例會設定<xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A>屬性，藉此告知<xref:System.Xml.Serialization.XmlSerializer>不是用來產生`xsi:nil`陣列中的屬性物件設為`null`。</span><span class="sxs-lookup"><span data-stu-id="8415c-235">The example sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> property, thereby telling the <xref:System.Xml.Serialization.XmlSerializer> not to generate the `xsi:nil` attribute objects in the array set to `null`.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.IsNullable Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.IsNullable Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8415c-236">取得或設定產生的 XML 項目之的命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8415c-236">Gets or sets the namespace of the generated XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8415c-237">產生的 XML 項目的命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8415c-237">The namespace of the generated XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8415c-238"><xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A>屬性是否符合全球資訊網協會 (www.w3.org) 規格 」 中 XML 命名空間。 」</span><span class="sxs-lookup"><span data-stu-id="8415c-238">The <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> property conforms to the World Wide Web Consortium (www.w3.org) specification "Namespaces in XML."</span></span>  
  
 <span data-ttu-id="8415c-239">若要建立使用中的 XML 文件和相關聯的前置詞的命名空間，您必須建立<xref:System.Xml.Serialization.XmlSerializerNamespaces>其中包含所有的前置詞和命名空間組。</span><span class="sxs-lookup"><span data-stu-id="8415c-239">To create namespaces to use in the XML document and associated prefixes, you must create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> that contains all the prefix and namespace pairs.</span></span> <span data-ttu-id="8415c-240">設定每個命名空間<xref:System.Xml.Serialization.XmlArrayAttribute>必須包含在<xref:System.Xml.Serialization.XmlSerializerNamespaces>。</span><span class="sxs-lookup"><span data-stu-id="8415c-240">The namespace you set for each <xref:System.Xml.Serialization.XmlArrayAttribute> must be contained in the <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span></span> <span data-ttu-id="8415c-241">當<xref:System.Xml.Serialization.XmlSerializer>文件中，會產生正確前置詞的項目名稱，每個陣列項目。</span><span class="sxs-lookup"><span data-stu-id="8415c-241">When the <xref:System.Xml.Serialization.XmlSerializer> generates the document, it correctly prefixes the element name for each array item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8415c-242">下列範例會套用<xref:System.Xml.Serialization.XmlArrayItemAttribute>並設定<xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8415c-242">The following example applies an <xref:System.Xml.Serialization.XmlArrayItemAttribute> and sets the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.Namespace Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Namespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.Namespace Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Namespace Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.Namespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Namespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NestingLevel">
      <MemberSignature Language="C#" Value="public int NestingLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NestingLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property NestingLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NestingLevel { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8415c-243">取得或設定 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 影響的 XML 項目的階層架構中的層級。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8415c-243">Gets or sets the level in a hierarchy of XML elements that the <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> affects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8415c-244">在陣列組成之陣列的一組索引中，以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8415c-244">The zero-based index of a set of indexes in an array of arrays.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8415c-245">XML 文件可以包含階層的 XML 項目。</span><span class="sxs-lookup"><span data-stu-id="8415c-245">An XML document can contain hierarchies of XML elements.</span></span> <span data-ttu-id="8415c-246">若要表示這類階層，使用陣列的陣列。</span><span class="sxs-lookup"><span data-stu-id="8415c-246">To represent such a hierarchy, an array of arrays is used.</span></span> <span data-ttu-id="8415c-247">在這類陣列中，每個索引代表階層中的層級。</span><span class="sxs-lookup"><span data-stu-id="8415c-247">In such an array, each index represents a level in the hierarchy.</span></span> <span data-ttu-id="8415c-248">因此，<xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>套用時，才會使用屬性<xref:System.Xml.Serialization.XmlArrayItemAttribute>傳回陣列的陣列的欄位。</span><span class="sxs-lookup"><span data-stu-id="8415c-248">Therefore, the <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> property is only used when applying an <xref:System.Xml.Serialization.XmlArrayItemAttribute> to a field that returns an array of arrays.</span></span>  
  
 <span data-ttu-id="8415c-249">當套用此屬性，指定這個屬性會影響設定的階層層級<xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>。</span><span class="sxs-lookup"><span data-stu-id="8415c-249">When applying the attribute, specify which hierarchy level the attribute affects by setting the <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>.</span></span> <span data-ttu-id="8415c-250">第一個索引一律具有的值為 0;因此它是選擇性的以設定其<xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>--<xref:System.Xml.Serialization.XmlArrayItemAttribute>沒有<xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>值會套用到第一個陣列索引。</span><span class="sxs-lookup"><span data-stu-id="8415c-250">The first index always has the value of 0; therefore it is optional to set its <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> --an <xref:System.Xml.Serialization.XmlArrayItemAttribute> without a <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> value is applied to the first array index.</span></span> <span data-ttu-id="8415c-251">只有後續<xref:System.Xml.Serialization.XmlArrayItemAttribute>物件需要<xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>（做為 1、 2、 3，依此類推） 指定的值。</span><span class="sxs-lookup"><span data-stu-id="8415c-251">Only the subsequent <xref:System.Xml.Serialization.XmlArrayItemAttribute> objects require <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> values specified (as 1, 2, 3, and so forth).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8415c-252">下列範例會將三個<xref:System.Xml.Serialization.XmlArrayItemAttribute>屬性加入陣列的陣列。</span><span class="sxs-lookup"><span data-stu-id="8415c-252">The following example applies three <xref:System.Xml.Serialization.XmlArrayItemAttribute> attributes to an array of arrays.</span></span> <span data-ttu-id="8415c-253">若要指定的陣列的每個屬性會套用至，<xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>屬性設定為陣列的索引。</span><span class="sxs-lookup"><span data-stu-id="8415c-253">To specify which of the arrays each attribute applies to, the <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> property is set to the index of the arrays.</span></span>  
  
 [!code-cpp[NestingLevel#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NestingLevel/cpp/nestinglevel.cpp#1)]
 [!code-csharp[NestingLevel#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NestingLevel/CS/nestinglevel.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8415c-254">取得或設定陣列中允許的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8415c-254">Gets or sets the type allowed in an array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8415c-255">陣列中所允許的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8415c-255">A <see cref="T:System.Type" /> that is allowed in the array.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8415c-256">使用<xref:System.Xml.Serialization.XmlElementAttribute.Type%2A>覆寫針對指定類型的公用欄位或公用讀取/寫入屬性值的屬性。</span><span class="sxs-lookup"><span data-stu-id="8415c-256">Use the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify an overridden type for a public field or public read/write property value.</span></span>  
  
 <span data-ttu-id="8415c-257">如果欄位或屬性會傳回型別的陣列<xref:System.Object>，適用於多個執行個體<xref:System.Xml.Serialization.XmlArrayItemAttribute>欄位或屬性。</span><span class="sxs-lookup"><span data-stu-id="8415c-257">If a field or property returns an array of type <xref:System.Object>, apply multiple instances of the <xref:System.Xml.Serialization.XmlArrayItemAttribute> to the field or property.</span></span> <span data-ttu-id="8415c-258">每個執行個體，請設定<xref:System.Xml.Serialization.XmlElementAttribute.Type%2A>可以插入到陣列的物件類型的屬性。</span><span class="sxs-lookup"><span data-stu-id="8415c-258">For each instance, set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to a type of object that can be inserted into the array.</span></span>  
  
 <span data-ttu-id="8415c-259">如果陣列包含只有基本型別，您不需要套用<xref:System.Xml.Serialization.XmlArrayItemAttribute>。</span><span class="sxs-lookup"><span data-stu-id="8415c-259">If an array contains only primitive types, you do not need to apply the <xref:System.Xml.Serialization.XmlArrayItemAttribute>.</span></span> <span data-ttu-id="8415c-260">根據預設，<xref:System.Xml.Serialization.XmlSerializer>會產生一系列的元素，每個都有相同的項目名稱，每個值，但每個項目的型別設定為 XML 結構描述資料型別。</span><span class="sxs-lookup"><span data-stu-id="8415c-260">By default, the <xref:System.Xml.Serialization.XmlSerializer> generates a series of elements, each with the same element name, for each value, but the type of each element is set to the XML Schema data type.</span></span> <span data-ttu-id="8415c-261">例如，下列程式碼：</span><span class="sxs-lookup"><span data-stu-id="8415c-261">For example, the following code:</span></span>  
  
```  
' Visual Basic code  
Public Class Arrays  
   Public XSDTypes ()As Object= New Object(){"one", 2, 3.0}  
End Class  
// C# code  
public class MyArray{  
   // No XmlArrayItemAttribute is applied.  
   public object[] XSDTypes= new object[]{"one", 2, 3.2};  
}  
```  
  
 <span data-ttu-id="8415c-262">這段 XML 會產生結果：</span><span class="sxs-lookup"><span data-stu-id="8415c-262">results in this XML:</span></span>  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Arrays xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <XSDTypes>  
    <Object xsi:type="xsd:string">one</Object>  
    <Object xsi:type="xsd:int">2</Object>  
    <Object xsi:type="xsd:double">3</Object>  
  </XSDTypes>  
</Arrays>  
```  
  
 <span data-ttu-id="8415c-263">不過，如果您指定<xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A>使用.NET 型別名稱來產生每個基本類型，每個值的項目名稱的屬性。</span><span class="sxs-lookup"><span data-stu-id="8415c-263">However, if you specify the <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> property for each primitive type, the element name for each value is generated using the .NET type name.</span></span> <span data-ttu-id="8415c-264">例如下列程式碼：</span><span class="sxs-lookup"><span data-stu-id="8415c-264">For example this code:</span></span>  
  
```  
' Visual Basic code  
Public Class Arrays  
   <XmlArrayItem(GetType(String)), _  
   XmlArrayItem(GetType(Integer)), _  
   XmlArrayItem(GetType(Double))> _  
   Public PrimitiveTypes () As Object = New Object(){"one", 2, 3.0}  
End Class  
// C# code  
public class Arrays{  
   [XmlArrayItem(typeof(string))]  
   [XmlArrayItem(typeof(int))]  
   [XmlArrayItem(typeof(double))]  
   public object [] PrimitiveTypes = new object[]{"one", 2, 3.0};  
}  
```  
  
 <span data-ttu-id="8415c-265">這段 XML 會產生結果：</span><span class="sxs-lookup"><span data-stu-id="8415c-265">results in this XML:</span></span>  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Arrays xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <PrimitiveTypes>  
    <string>one</string>  
    <int>2</int>  
    <double>3</double>  
  </PrimitiveTypes>  
</Arrays>  
```  
  
   
  
## Examples  
 <span data-ttu-id="8415c-266">下列範例會序列化物件的陣列。</span><span class="sxs-lookup"><span data-stu-id="8415c-266">The following example serializes an array of objects.</span></span> <span data-ttu-id="8415c-267">傳回陣列的欄位屬性具有兩個<xref:System.Xml.Serialization.XmlArrayItemAttribute>執行個體。</span><span class="sxs-lookup"><span data-stu-id="8415c-267">The field that returns the array is attributed with two <xref:System.Xml.Serialization.XmlArrayItemAttribute> instances.</span></span> <span data-ttu-id="8415c-268">每個執行個體指示<xref:System.Xml.Serialization.XmlSerializer>接受指定<xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A>陣列中。</span><span class="sxs-lookup"><span data-stu-id="8415c-268">Each instance instructs the <xref:System.Xml.Serialization.XmlSerializer> to accept the specified <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> in the array.</span></span>  
  
 [!code-cpp[Classic XmlArrayItemAttribute.Type Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Type Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.Type Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Type Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.Type Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Type Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>