<Type Name="XmlSchemaExporter" FullName="System.Xml.Serialization.XmlSchemaExporter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="79af13a29366f0c5c6a42f9cea8243f8038a848b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720042" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlSchemaExporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSchemaExporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlSchemaExporter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSchemaExporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaExporter" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>使用在型別對應物件中找到的 XML 結構描述項目宣告，填入 (Populate) <see cref="T:System.Xml.Schema.XmlSchema" /> 物件中。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlSchemaExporter>類別提供的 XML 結構描述定義語言 (XSD) 文件的程式設計表示法。 而不是使用<xref:System.Xml.Serialization.XmlSchemaExporter>直接使用<xref:System.Web.Services.Description.ServiceDescriptionReflector>類別或[XML 結構描述定義工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)。  
  
 <xref:System.Web.Services.Description.ServiceDescriptionReflector>類別會建立<xref:System.Web.Services.Description.ServiceDescription>從識別為 Web 服務類別的物件。 它會使用<xref:System.Xml.Serialization.XmlSchemaExporter>類別時，Web 服務類別會指定：  
  
-   使用常值，表示 SOAP 訊息的參數和傳回值 （或要求和回應文件） 的內容依其字面指定使用 XML 結構描述定義。  
  
-   非 SOAP Web 服務使用的 HTTP GET 和 HTTP POST 作業的實作。  
  
 Xsd.exe 產生 XML 結構描述文件從一或多個型別，在執行階段組件的檔案使用<xref:System.Xml.Serialization.XmlSchemaExporter>類別 」 和 「 反映。  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Xml.Serialization.XmlSchemas" />
    <altmember cref="T:System.Xml.Schema.XmlSchema" />
    <altmember cref="T:System.Xml.Serialization.SoapSchemaExporter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaExporter (System.Xml.Serialization.XmlSchemas schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.XmlSchemas schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemas As XmlSchemas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaExporter(System::Xml::Serialization::XmlSchemas ^ schemas);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Serialization.XmlSchemas" />
      </Parameters>
      <Docs>
        <param name="schemas">要將從型別對應取得的項目宣告加入其中的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件集合。</param>
        <summary>初始化 <see cref="T:System.Xml.Serialization.XmlSchemaExporter" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlSchemaExporter>類別提供的集合<xref:System.Xml.Schema.XmlSchema>至哪一個 XML 結構描述元素宣告都是要加入的物件。 您不需要建立的執行個體<xref:System.Xml.Serialization.XmlSchemaExporter>直接類別。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="ExportAnyType">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將物件或型別的項目宣告加入 SOAP 訊息或 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件中。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExportAnyType">
      <MemberSignature Language="C#" Value="public string ExportAnyType (string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ExportAnyType(string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportAnyType (ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ExportAnyType(System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns">要新增 **&lt;any&gt;** 項目之 XML 結構描述文件的命名空間。</param>
        <summary>將 **&lt;any&gt;** 項目匯出至指定命名空間所識別的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件。</summary>
        <returns>指派給 **&lt;any&gt;** 項目宣告的任意名稱。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您不需要直接呼叫方法。  
  
 <xref:System.Web.Services.Description.ServiceDescriptionReflector>建立<xref:System.Web.Services.Description.ServiceDescription>從識別為 Web 服務類別的物件。  
  
 欄位或屬性的型別<xref:System.Xml.XmlElement>，具有屬性<xref:System.Xml.Serialization.XmlAnyElementAttribute>，轉譯成**\<任何 >** 項目。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExportAnyType">
      <MemberSignature Language="C#" Value="public string ExportAnyType (System.Xml.Serialization.XmlMembersMapping members);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ExportAnyType(class System.Xml.Serialization.XmlMembersMapping members) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.Xml.Serialization.XmlMembersMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportAnyType (members As XmlMembersMapping) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ExportAnyType(System::Xml::Serialization::XmlMembersMapping ^ members);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="members" Type="System.Xml.Serialization.XmlMembersMapping" />
      </Parameters>
      <Docs>
        <param name="members">包含要匯出之對應的 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</param>
        <summary>將物件或型別的項目宣告加入 SOAP 訊息或 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件中。</summary>
        <returns>含有附加整數的字串 "any"。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="ExportMembersMapping">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>針對常值 SOAP 訊息定義的每個項目部分，將項目宣告加入適用的 <see cref="T:System.Xml.Schema.XmlSchema" /> 中。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExportMembersMapping">
      <MemberSignature Language="C#" Value="public void ExportMembersMapping (System.Xml.Serialization.XmlMembersMapping xmlMembersMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportMembersMapping(class System.Xml.Serialization.XmlMembersMapping xmlMembersMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportMembersMapping(System::Xml::Serialization::XmlMembersMapping ^ xmlMembersMapping);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlMembersMapping" Type="System.Xml.Serialization.XmlMembersMapping" />
      </Parameters>
      <Docs>
        <param name="xmlMembersMapping">Web 服務描述語言 (WSDL) 訊息定義之項目部分的內部 .NET Framework 型別對應。</param>
        <summary>針對常值 SOAP 訊息定義的每個項目部分，將項目宣告加入適用的 <see cref="T:System.Xml.Schema.XmlSchema" /> 中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 每個 SOAP 訊息部分，<xref:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping%2A>方法會加入至 XML 結構描述項目宣告<xref:System.Xml.Schema.XmlSchema>做為部分使用相同的命名空間。 常值訊息定義通常會包含單一組件。  
  
 請改用 <xref:System.Web.Services.Description.ServiceDescriptionReflector> 類別。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExportMembersMapping">
      <MemberSignature Language="C#" Value="public void ExportMembersMapping (System.Xml.Serialization.XmlMembersMapping xmlMembersMapping, bool exportEnclosingType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportMembersMapping(class System.Xml.Serialization.XmlMembersMapping xmlMembersMapping, bool exportEnclosingType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportMembersMapping(System::Xml::Serialization::XmlMembersMapping ^ xmlMembersMapping, bool exportEnclosingType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlMembersMapping" Type="System.Xml.Serialization.XmlMembersMapping" />
        <Parameter Name="exportEnclosingType" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="xmlMembersMapping">.NET Framework 型別和 XML 結構描述項目之間的內部對應。</param>
        <param name="exportEnclosingType">
          如果要包括封入結構描述的結構描述項目，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>針對常值 SOAP 訊息定義的每個項目部分，將項目宣告加入適用的 <see cref="T:System.Xml.Schema.XmlSchema" /> 中，並指定是否包括封入項目。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="ExportTypeMapping">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將物件或型別的項目宣告加入 SOAP 訊息或 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件中。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.XmlQualifiedName ExportTypeMapping (System.Xml.Serialization.XmlMembersMapping xmlMembersMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlQualifiedName ExportTypeMapping(class System.Xml.Serialization.XmlMembersMapping xmlMembersMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlQualifiedName ^ ExportTypeMapping(System::Xml::Serialization::XmlMembersMapping ^ xmlMembersMapping);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlMembersMapping" Type="System.Xml.Serialization.XmlMembersMapping" />
      </Parameters>
      <Docs>
        <param name="xmlMembersMapping">Web 服務描述語言 (WSDL) 訊息定義之項目部分的內部 .NET Framework 型別對應。</param>
        <summary>針對常值 SOAP 訊息定義的單一項目部分，將項目宣告加入適用的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件中。</summary>
        <returns>
          <see cref="T:System.Xml.XmlQualifiedName" />，表示已匯出之項目宣告的限定 XML 名稱。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個多載加入至 XML 結構描述項目宣告<xref:System.Xml.Schema.XmlSchema>與 SOAP 訊息部分所使用的相同的命名空間。 常值訊息定義必須包含單一組件。  
  
 請改用 <xref:System.Web.Services.Description.ServiceDescriptionReflector> 類別。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExportTypeMapping">
      <MemberSignature Language="C#" Value="public void ExportTypeMapping (System.Xml.Serialization.XmlTypeMapping xmlTypeMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportTypeMapping(class System.Xml.Serialization.XmlTypeMapping xmlTypeMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportTypeMapping(System::Xml::Serialization::XmlTypeMapping ^ xmlTypeMapping);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlTypeMapping" Type="System.Xml.Serialization.XmlTypeMapping" />
      </Parameters>
      <Docs>
        <param name="xmlTypeMapping">.NET Framework 型別和 XML 結構描述項目之間的內部對應。</param>
        <summary>將 .NET Framework 型別的項目宣告加入適用的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件中。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>