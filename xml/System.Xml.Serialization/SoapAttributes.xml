<Type Name="SoapAttributes" FullName="System.Xml.Serialization.SoapAttributes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6a3a5effef0bc5e3c14546620a643019ddb5815a" /><Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="09/22/2018" /><Meta Name="ms.locfileid" Value="46688908" /></Metadata><TypeSignature Language="C#" Value="public class SoapAttributes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapAttributes extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapAttributes" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapAttributes" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapAttributes" />
  <TypeSignature Language="F#" Value="type SoapAttributes = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示用來控制 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化與還原序列化 SOAP 方法的屬性 (Attribute) 物件集合。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 建立<xref:System.Xml.Serialization.SoapAttributes>會覆寫預設值的程序方式<xref:System.Xml.Serialization.XmlSerializer>序列化類別執行個體。 例如，假設您想要序列化物件所建立的 dll 所無法存取的來源。 使用<xref:System.Xml.Serialization.SoapAttributeOverrides>類別，您可以擴充或控制如何將物件序列化。  
  
 成員<xref:System.Xml.Serialization.SoapAttributes>類別直接對應到一系列控制序列化的屬性類別。 例如，<xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A>屬性必須設為<xref:System.Xml.Serialization.SoapAttributeAttribute>，可讓您藉由指示會覆寫的欄位或屬性序列化<xref:System.Xml.Serialization.XmlSerializer>序列化為編碼 SOAP 屬性的屬性值。 控制編碼的 SOAP 序列化的屬性完整清單，請參閱 <<c0> [ 控制編碼 SOAP 序列化的屬性](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md)。  
  
 如需詳細資訊，新增的執行個體的相關<xref:System.Xml.Serialization.SoapAttributes>類別的執行個體<xref:System.Xml.Serialization.SoapAttributeOverrides>類別，請參閱<xref:System.Xml.Serialization.SoapAttributeOverrides>類別概觀。  
  
   
  
## Examples  
 下列範例會序列化類別，名為`Group`。 序列化`GroupName`並`IgnoreThis`欄位和成員`GroupType`列舉型別會覆寫。 中`CreateOverrideSerializer`方法中，<xref:System.Xml.Serialization.SoapAttributeOverrides>會建立，並針對每個覆寫的成員或列舉型別，則<xref:System.Xml.Serialization.SoapAttributes>會透過適當的屬性設定，並加入<xref:System.Xml.Serialization.SoapAttributeOverrides>。 <xref:System.Xml.Serialization.XmlTypeMapping>會使用建立<xref:System.Xml.Serialization.SoapAttributeOverrides>，且<xref:System.Xml.Serialization.XmlTypeMapping>用來建立<xref:System.Xml.Serialization.XmlSerializer>會覆寫預設序列化。  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <related type="Article" href="~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md">控制編碼 SOAP 序列化的屬性</related>
    <related type="Article" href="~/docs/standard/serialization/how-to-serialize-an-object-as-a-soap-encoded-xml-stream.md">HOW TO：將物件序列化為 SOAP 編碼的 XML 資料流</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapAttributes.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapAttributes();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 每個成員或類別執行個體正在覆寫其序列化，您必須建立新<xref:System.Xml.Serialization.SoapAttributes>。 設定的屬性<xref:System.Xml.Serialization.SoapAttributes>做為適當的成員或物件，然後新增<xref:System.Xml.Serialization.SoapAttributes>的執行個體<xref:System.Xml.Serialization.SoapAttributeOverrides>類別。  
  
   
  
## Examples  
 下列範例會序列化類別，名為`Group`。 序列化`GroupName`並`IgnoreThis`欄位和成員`GroupType`列舉型別會覆寫。 中`CreateOverrideSerializer`方法中，<xref:System.Xml.Serialization.SoapAttributeOverrides>會建立，並針對每個覆寫的成員或列舉型別，則<xref:System.Xml.Serialization.SoapAttributes>會透過適當的屬性設定，並加入<xref:System.Xml.Serialization.SoapAttributeOverrides>。 <xref:System.Xml.Serialization.XmlTypeMapping>會使用建立<xref:System.Xml.Serialization.SoapAttributeOverrides>，且<xref:System.Xml.Serialization.XmlTypeMapping>用來建立<xref:System.Xml.Serialization.XmlSerializer>會覆寫預設序列化。  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md">控制編碼 SOAP 序列化的屬性</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-serialize-an-object-as-a-soap-encoded-xml-stream.md">HOW TO：將物件序列化為 SOAP 編碼的 XML 資料流</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapAttributes (System.Reflection.ICustomAttributeProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ICustomAttributeProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As ICustomAttributeProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapAttributes(System::Reflection::ICustomAttributeProvider ^ provider);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapAttributes : System.Reflection.ICustomAttributeProvider -&gt; System.Xml.Serialization.SoapAttributes" Usage="new System.Xml.Serialization.SoapAttributes provider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="System.Reflection.ICustomAttributeProvider" />
      </Parameters>
      <Docs>
        <param name="provider">實作 <see cref="T:System.Reflection.ICustomAttributeProvider" /> 介面的物件，例如 <see cref="T:System.Type" /> 類別。</param>
        <summary>使用指定的自訂型別，初始化 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.SoapAttributeAttribute SoapAttribute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.SoapAttributeAttribute SoapAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapAttributes.SoapAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapAttribute As SoapAttributeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::SoapAttributeAttribute ^ SoapAttribute { System::Xml::Serialization::SoapAttributeAttribute ^ get(); void set(System::Xml::Serialization::SoapAttributeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SoapAttribute : System.Xml.Serialization.SoapAttributeAttribute with get, set" Usage="System.Xml.Serialization.SoapAttributes.SoapAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.SoapAttributeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要覆寫的 <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />。</summary>
        <value><see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />，會在成員序列化時覆寫 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 的行為。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 根據預設，如果沒有屬性會套用至公用欄位或公用讀取/寫入屬性，它會序列化為 XML 項目。 您也可以指示<xref:System.Xml.Serialization.XmlSerializer>序列化為編碼 SOAP XML 屬性的成員，藉由套用<xref:System.Xml.Serialization.SoapAttributeAttribute>欄位或屬性。 (<xref:System.Xml.Serialization.XmlSerializer>必須使用建立<xref:System.Xml.Serialization.XmlTypeMapping>才能序列化為編碼 SOAP XML 資料流物件。)  
  
 <xref:System.Xml.Serialization.SoapAttributes.SoapAttribute%2A>屬性可讓您覆寫已套用控制序列化<xref:System.Xml.Serialization.SoapAttributeAttribute>成員。 如需此程序的詳細資訊，請參閱<xref:System.Xml.Serialization.SoapAttributeOverrides>類別概觀。  
  
   
  
## Examples  
 下列範例會序列化類別，名為`Group`。 序列化`GroupName`並`IgnoreThis`欄位和成員`GroupType`列舉型別會覆寫。 中`CreateOverrideSerializer`方法中，<xref:System.Xml.Serialization.SoapAttributeOverrides>會建立，並針對每個覆寫的成員或列舉型別，則<xref:System.Xml.Serialization.SoapAttributes>會透過適當的屬性設定，並加入<xref:System.Xml.Serialization.SoapAttributeOverrides>。 <xref:System.Xml.Serialization.XmlTypeMapping>會使用建立<xref:System.Xml.Serialization.SoapAttributeOverrides>，且<xref:System.Xml.Serialization.XmlTypeMapping>用來建立<xref:System.Xml.Serialization.XmlSerializer>會覆寫預設序列化。  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md">控制編碼 SOAP 序列化的屬性</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-serialize-an-object-as-a-soap-encoded-xml-stream.md">HOW TO：將物件序列化為 SOAP 編碼的 XML 資料流</related>
      </Docs>
    </Member>
    <Member MemberName="SoapDefaultValue">
      <MemberSignature Language="C#" Value="public object SoapDefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SoapDefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapAttributes.SoapDefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapDefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SoapDefaultValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SoapDefaultValue : obj with get, set" Usage="System.Xml.Serialization.SoapAttributes.SoapDefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 XML 項目或屬性的預設值。</summary>
        <value>表示 XML 項目或屬性之預設值的物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定預設值的成員可以藉由套用<xref:System.ComponentModel.DefaultValueAttribute>屬性的成員。 如果成員序列化為編碼 SOAP 訊息，您可以變更預設值來建立新<xref:System.ComponentModel.DefaultValueAttribute>，將其<xref:System.ComponentModel.DefaultValueAttribute.Value%2A>屬性，並設定<xref:System.Xml.Serialization.SoapAttributes.SoapDefaultValue%2A>物件的屬性。 新增<xref:System.Xml.Serialization.SoapAttributes>至<xref:System.Xml.Serialization.SoapAttributeOverrides>。 如需詳細資訊，請參閱<xref:System.Xml.Serialization.SoapAttributeOverrides>類別概觀。  
  
   
  
## Examples  
 下列範例會序列化類別，名為`Group`包含一個名為欄位`GroupName`。 預設值設定使用<xref:System.ComponentModel.DefaultValueAttribute>以".NET"。 藉由不設定 欄位中，或將它設定為".NET"，（因為已經知道的預設值），則不會序列化值。 此範例也會覆寫中的預設值`CreateOverrideSerializer`方法，它會呼叫`SerializeOverride`方法。 此範例會呼叫這兩種方法中，`SerializeOriginal`並`SerializeOverride`，並設定相同的值 (".NET")`GroupName`欄位。 只有在呼叫時，將該值序列化覆寫時，由於`SerializeOverride`方法。  
  
 [!code-cpp[SoapAttribues.SoapDefaultValue#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttribues.SoapDefaultValue/CPP/defvalue.cpp#1)]
 [!code-csharp[SoapAttribues.SoapDefaultValue#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttribues.SoapDefaultValue/CS/defvalue.cs#1)]
 [!code-vb[SoapAttribues.SoapDefaultValue#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttribues.SoapDefaultValue/VB/defvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md">控制編碼 SOAP 序列化的屬性</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-serialize-an-object-as-a-soap-encoded-xml-stream.md">HOW TO：將物件序列化為 SOAP 編碼的 XML 資料流</related>
      </Docs>
    </Member>
    <Member MemberName="SoapElement">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.SoapElementAttribute SoapElement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.SoapElementAttribute SoapElement" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapAttributes.SoapElement" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapElement As SoapElementAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::SoapElementAttribute ^ SoapElement { System::Xml::Serialization::SoapElementAttribute ^ get(); void set(System::Xml::Serialization::SoapElementAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SoapElement : System.Xml.Serialization.SoapElementAttribute with get, set" Usage="System.Xml.Serialization.SoapAttributes.SoapElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.SoapElementAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要覆寫的 <see cref="T:System.Xml.Serialization.SoapElementAttribute" />。</summary>
        <value>要覆寫的 <see cref="T:System.Xml.Serialization.SoapElementAttribute" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapElementAttribute>用來控制類別成員序列化為 XML 項目。 設定<xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A>至新的屬性<xref:System.Xml.Serialization.SoapElementAttribute>，以覆寫類別成員序列化為 XML 項目建立新<xref:System.Xml.Serialization.SoapElementAttribute>並將它指派給屬性。 然後新增<xref:System.Xml.Serialization.SoapAttributes>至<xref:System.Xml.Serialization.SoapAttributeOverrides>。 建立<xref:System.Xml.Serialization.XmlTypeMapping>具有<xref:System.Xml.Serialization.SoapAttributeOverrides>，然後建構<xref:System.Xml.Serialization.XmlSerializer>使用<xref:System.Xml.Serialization.XmlTypeMapping>。  
  
 如需詳細資訊，請參閱<xref:System.Xml.Serialization.SoapAttributeOverrides>類別概觀。  
  
   
  
## Examples  
 下列範例會序列化類別，名為`Transportation`。 序列化`Vehicle`欄位已覆寫。 中`CreateOverrideSerializer`方法中，<xref:System.Xml.Serialization.SoapAttributeOverrides>會建立，並針對每個覆寫的成員或列舉型別，則<xref:System.Xml.Serialization.SoapAttributes>會透過適當的屬性設定，並加入<xref:System.Xml.Serialization.SoapAttributeOverrides>。 <xref:System.Xml.Serialization.XmlTypeMapping>會使用建立<xref:System.Xml.Serialization.SoapAttributeOverrides>，且<xref:System.Xml.Serialization.XmlTypeMapping>用來建立<xref:System.Xml.Serialization.XmlSerializer>會覆寫預設序列化。  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md">控制編碼 SOAP 序列化的屬性</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-serialize-an-object-as-a-soap-encoded-xml-stream.md">HOW TO：將物件序列化為 SOAP 編碼的 XML 資料流</related>
      </Docs>
    </Member>
    <Member MemberName="SoapEnum">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.SoapEnumAttribute SoapEnum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.SoapEnumAttribute SoapEnum" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapAttributes.SoapEnum" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapEnum As SoapEnumAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::SoapEnumAttribute ^ SoapEnum { System::Xml::Serialization::SoapEnumAttribute ^ get(); void set(System::Xml::Serialization::SoapEnumAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SoapEnum : System.Xml.Serialization.SoapEnumAttribute with get, set" Usage="System.Xml.Serialization.SoapAttributes.SoapEnum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.SoapEnumAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定物件，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化 SOAP 列舉型別的方式。</summary>
        <value>物件，這個物件會指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化列舉成員。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapEnumAttribute>用來控制序列化列舉成員。 設定<xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A>屬性，以新<xref:System.Xml.Serialization.SoapEnumAttribute>覆寫這類成員的序列化。  
  
 如需詳細資訊，請參閱<xref:System.Xml.Serialization.SoapAttributeOverrides>類別概觀。  
  
   
  
## Examples  
 下列範例會序列化兩大類別叫做`Food`和`FoodType`。 `FoodType`類別包含兩個列舉型別，會覆寫時，且每個列舉，此範例會建立<xref:System.Xml.Serialization.SoapEnumAttribute>會將指派給<xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A>屬性<xref:System.Xml.Serialization.SoapAttributes>。 範例接著會新增<xref:System.Xml.Serialization.SoapAttributes>要<xref:System.Xml.Serialization.SoapAttributeOverrides>，這用來建立<xref:System.Xml.Serialization.XmlSerializer>。  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md">控制編碼 SOAP 序列化的屬性</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-serialize-an-object-as-a-soap-encoded-xml-stream.md">HOW TO：將物件序列化為 SOAP 編碼的 XML 資料流</related>
      </Docs>
    </Member>
    <Member MemberName="SoapIgnore">
      <MemberSignature Language="C#" Value="public bool SoapIgnore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SoapIgnore" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapAttributes.SoapIgnore" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapIgnore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SoapIgnore { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SoapIgnore : bool with get, set" Usage="System.Xml.Serialization.SoapAttributes.SoapIgnore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定數值，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否會將公用欄位或屬性序列化為編碼 SOAP XML。</summary>
        <value>如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 必須不序列化欄位或屬性，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 根據預設，所有公用欄位或公用讀取/寫入屬性序列化的<xref:System.Xml.Serialization.XmlSerializer>。 也就是說，每個公用欄位或屬性的值會保存為 XML 項目或 XML 文件中的 XML 屬性。  
  
 若要覆寫欄位或屬性的預設序列化，請建立<xref:System.Xml.Serialization.SoapAttributes>，並將其<xref:System.Xml.Serialization.SoapAttributes.SoapIgnore%2A>屬性設`true`。 使用<xref:System.Xml.Serialization.SoapAttributeOverrides.Add%2A>方法將物件加入至<xref:System.Xml.Serialization.SoapAttributeOverrides>並指定包含要忽略的欄位或屬性的物件型別和欄位或屬性，以略過的名稱。  
  
 如果<xref:System.Xml.Serialization.SoapIgnoreAttribute>會套用至欄位或屬性中，欄位或屬性會被忽略。 不過您可以建立覆寫該行為<xref:System.Xml.Serialization.SoapAttributes>，將其<xref:System.Xml.Serialization.SoapAttributes.SoapIgnore%2A>屬性設`false`，並將它新增至<xref:System.Xml.Serialization.SoapAttributeOverrides>，指定包含的欄位或屬性的物件型別和欄位或屬性的名稱.  
  
   
  
## Examples  
 下列範例會序列化類別，名為`Group`。 序列化`GroupName`並`IgnoreThis`欄位和成員`GroupType`列舉型別會覆寫。 中`CreateOverrideSerializer`方法中，<xref:System.Xml.Serialization.SoapAttributeOverrides>會建立，並針對每個覆寫的成員或列舉型別，則<xref:System.Xml.Serialization.SoapAttributes>會透過適當的屬性設定，並加入<xref:System.Xml.Serialization.SoapAttributeOverrides>。 <xref:System.Xml.Serialization.XmlTypeMapping>會使用建立<xref:System.Xml.Serialization.SoapAttributeOverrides>，且<xref:System.Xml.Serialization.XmlTypeMapping>用來建立<xref:System.Xml.Serialization.XmlSerializer>會覆寫預設序列化。  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md">控制編碼 SOAP 序列化的屬性</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-serialize-an-object-as-a-soap-encoded-xml-stream.md">HOW TO：將物件序列化為 SOAP 編碼的 XML 資料流</related>
      </Docs>
    </Member>
    <Member MemberName="SoapType">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.SoapTypeAttribute SoapType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.SoapTypeAttribute SoapType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapAttributes.SoapType" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapType As SoapTypeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::SoapTypeAttribute ^ SoapType { System::Xml::Serialization::SoapTypeAttribute ^ get(); void set(System::Xml::Serialization::SoapTypeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SoapType : System.Xml.Serialization.SoapTypeAttribute with get, set" Usage="System.Xml.Serialization.SoapAttributes.SoapType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.SoapTypeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定物件，表示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何將物件型別序列化為 SOAP XML。</summary>
        <value><see cref="T:System.Xml.Serialization.SoapTypeAttribute" />，覆寫套用至類別宣告的 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />，或者套用至類別宣告。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapTypeAttribute>可用來控制所產生的 XML 資料流<xref:System.Xml.Serialization.XmlSerializer>。 設定<xref:System.Xml.Serialization.SoapAttributes.SoapType%2A>屬性，以新<xref:System.Xml.Serialization.SoapTypeAttribute>控制類別序列化時，會產生的 XML 結構描述。  
  
   
  
## Examples  
 下列範例會序列化類別，名為`Group`。 序列化`GroupName`並`IgnoreThis`欄位和成員`GroupType`列舉型別會覆寫。 中`CreateOverrideSerializer`方法中，<xref:System.Xml.Serialization.SoapAttributeOverrides>會建立，並針對每個覆寫的成員或列舉型別，則<xref:System.Xml.Serialization.SoapAttributes>會透過適當的屬性設定，並加入<xref:System.Xml.Serialization.SoapAttributeOverrides>。 <xref:System.Xml.Serialization.XmlTypeMapping>會使用建立<xref:System.Xml.Serialization.SoapAttributeOverrides>，且<xref:System.Xml.Serialization.XmlTypeMapping>用來建立<xref:System.Xml.Serialization.XmlSerializer>會覆寫預設序列化。  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md">控制編碼 SOAP 序列化的屬性</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-serialize-an-object-as-a-soap-encoded-xml-stream.md">HOW TO：將物件序列化為 SOAP 編碼的 XML 資料流</related>
      </Docs>
    </Member>
  </Members>
</Type>