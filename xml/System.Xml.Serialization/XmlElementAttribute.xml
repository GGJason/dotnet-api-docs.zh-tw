<Type Name="XmlElementAttribute" FullName="System.Xml.Serialization.XmlElementAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4b1af331815abd50b9f81c7fd0cf59a395b32169" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36439619" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlElementAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlElementAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="76315-101">表示在 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化或還原序列化包含 XML 項目的物件時，公用欄位或屬性表示該項目。</span>
      <span class="sxs-lookup">
        <span data-stu-id="76315-101">Indicates that a public field or property represents an XML element when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes or deserializes the object that contains it.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76315-102"><xref:System.Xml.Serialization.XmlElementAttribute>屬於一系列屬性可控制如何<xref:System.Xml.Serialization.XmlSerializer>序列化或還原序列化物件。</span><span class="sxs-lookup"><span data-stu-id="76315-102">The <xref:System.Xml.Serialization.XmlElementAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object.</span></span> <span data-ttu-id="76315-103">如需類似屬性的完整清單，請參閱[屬性，控制 XML 序列化](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="76315-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="76315-104">XML 文件通常包含 XML 元素，其中每一個都包含三個部分： 開頭的標記具有可能屬性、 結尾標記，並在標記之間的資料。</span><span class="sxs-lookup"><span data-stu-id="76315-104">An XML document usually contains XML elements, each of which consists of three parts: an opening tag with possible attributes, a closing tag, and the data between the tags.</span></span> <span data-ttu-id="76315-105">XML 標記可以巢狀-也就是說，標記之間的資料也可以是 XML 項目。</span><span class="sxs-lookup"><span data-stu-id="76315-105">XML tags can be nested--that is, the data between tags can also be XML elements.</span></span> <span data-ttu-id="76315-106">這個容量的一個項目可以包含其他可讓文件中包含資料的階層架構。</span><span class="sxs-lookup"><span data-stu-id="76315-106">This capacity of one element to enclose another allows the document to contain hierarchies of data.</span></span> <span data-ttu-id="76315-107">XML 項目也可以包含屬性。</span><span class="sxs-lookup"><span data-stu-id="76315-107">An XML element can also include attributes.</span></span>  
  
 <span data-ttu-id="76315-108">套用<xref:System.Xml.Serialization.XmlElementAttribute>公用欄位或公用讀取/寫入屬性，以控制等項目名稱和命名空間的 XML 元素的特性。</span><span class="sxs-lookup"><span data-stu-id="76315-108">Apply the <xref:System.Xml.Serialization.XmlElementAttribute> to public fields or public read/write properties to control characteristics of the XML elements such as the element name and namespace.</span></span>  
  
 <span data-ttu-id="76315-109"><xref:System.Xml.Serialization.XmlElementAttribute>的欄位，傳回物件的陣列，可以多次套用。</span><span class="sxs-lookup"><span data-stu-id="76315-109">The <xref:System.Xml.Serialization.XmlElementAttribute> can be applied multiple times to a field that returns an array of objects.</span></span> <span data-ttu-id="76315-110">這是指定 (透過<xref:System.Xml.Serialization.XmlElementAttribute.Type%2A>屬性) 可以插入到陣列的不同類型。</span><span class="sxs-lookup"><span data-stu-id="76315-110">The purpose of this is to specify (through the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property) different types that can be inserted into the array.</span></span> <span data-ttu-id="76315-111">例如，下列 C# 程式碼中的陣列會接受字串和整數。</span><span class="sxs-lookup"><span data-stu-id="76315-111">For example, the array in the following C# code accepts both strings and integers.</span></span>  
  
```  
public class Things{  
   [XmlElement(Type = typeof(string)),  
   XmlElement(Type = typeof(int))]  
   public object[] StringsAndInts;  
}  
```  
  
 <span data-ttu-id="76315-112">這會導致可能類似如下的 XML。</span><span class="sxs-lookup"><span data-stu-id="76315-112">This results in XML that might resemble the following.</span></span>  
  
```  
<Things>  
   <string>Hello</string>  
   <int>999</int>  
   <string>World</string>  
</Things>  
```  
  
 <span data-ttu-id="76315-113">請注意，當您套用<xref:System.Xml.Serialization.XmlElementAttribute>多次，而不指定<xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A>屬性值的元素名稱之後的可接受的物件類型。</span><span class="sxs-lookup"><span data-stu-id="76315-113">Note that when you apply the <xref:System.Xml.Serialization.XmlElementAttribute> multiple times without specifying an <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property value, the elements are named after the type of the acceptable objects.</span></span>  
  
 <span data-ttu-id="76315-114">如果您套用<xref:System.Xml.Serialization.XmlElementAttribute>欄位或屬性會傳回陣列，陣列中的項目會編碼為 XML 項目的序列。</span><span class="sxs-lookup"><span data-stu-id="76315-114">If you apply the <xref:System.Xml.Serialization.XmlElementAttribute> to a field or property that returns an array, the items in the array are encoded as a sequence of XML elements.</span></span>  
  
 <span data-ttu-id="76315-115">相較之下如果<xref:System.Xml.Serialization.XmlElementAttribute>不會套用至這類欄位或屬性，在陣列中的項目會編碼為一連串的項目，在名為之後的欄位或屬性的項目之下巢狀。</span><span class="sxs-lookup"><span data-stu-id="76315-115">In contrast if an <xref:System.Xml.Serialization.XmlElementAttribute> is not applied to such a field or property, the items in the array are encoded as a sequence of elements, nested under an element named after the field or property.</span></span> <span data-ttu-id="76315-116">(使用<xref:System.Xml.Serialization.XmlArrayAttribute>和<xref:System.Xml.Serialization.XmlArrayItemAttribute>屬性來控制如何序列化陣列。)</span><span class="sxs-lookup"><span data-stu-id="76315-116">(Use the <xref:System.Xml.Serialization.XmlArrayAttribute> and <xref:System.Xml.Serialization.XmlArrayItemAttribute> attributes to control how an array is serialized.)</span></span>  
  
 <span data-ttu-id="76315-117">您可以設定<xref:System.Xml.Serialization.XmlElementAttribute.Type%2A>屬性來指定類型，也就是衍生自原始欄位或屬性的-類型、 欄位或屬性已套用<xref:System.Xml.Serialization.XmlElementAttribute>。</span><span class="sxs-lookup"><span data-stu-id="76315-117">You can set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify a type that is derived from the type of the original field or property--that is, the field or property to which you have applied the <xref:System.Xml.Serialization.XmlElementAttribute>.</span></span>  
  
 <span data-ttu-id="76315-118">如果欄位或屬性傳回<xref:System.Collections.ArrayList>，您可以套用多個執行個體<xref:System.Xml.Serialization.XmlElementAttribute>的成員。</span><span class="sxs-lookup"><span data-stu-id="76315-118">If a field or property returns an <xref:System.Collections.ArrayList>, you can apply multiple instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to the member.</span></span> <span data-ttu-id="76315-119">每個執行個體，請設定<xref:System.Xml.Serialization.XmlElementAttribute.Type%2A>可以插入到陣列的物件類型的屬性。</span><span class="sxs-lookup"><span data-stu-id="76315-119">For each instance, set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to a type of object that can be inserted into the array.</span></span>  
  
 <span data-ttu-id="76315-120">如需屬性用法的詳細資訊，請參閱[屬性](~/docs/standard/attributes/index.md)。</span><span class="sxs-lookup"><span data-stu-id="76315-120">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76315-121">您可以使用 word`XmlElement`取代較長程式碼中<xref:System.Xml.Serialization.XmlElementAttribute>。</span><span class="sxs-lookup"><span data-stu-id="76315-121">You can use the word `XmlElement` in your code instead of the longer <xref:System.Xml.Serialization.XmlElementAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76315-122">下列範例會序列化類別，名為`Group`並套用<xref:System.Xml.Serialization.XmlElementAttribute>到這幾個其成員。</span><span class="sxs-lookup"><span data-stu-id="76315-122">The following example serializes a class named `Group` and applies the <xref:System.Xml.Serialization.XmlElementAttribute> to several of its members.</span></span> <span data-ttu-id="76315-123">名為欄位`Employees`傳回的陣列`Employee`物件。</span><span class="sxs-lookup"><span data-stu-id="76315-123">The field named `Employees` returns an array of `Employee` objects.</span></span> <span data-ttu-id="76315-124">在此情況下，<xref:System.Xml.Serialization.XmlElementAttribute>指定所產生的 XML 將不巢狀 （這是預設行為，陣列中的項目）。</span><span class="sxs-lookup"><span data-stu-id="76315-124">In this case, the <xref:System.Xml.Serialization.XmlElementAttribute> specifies that the resulting XML will not be nested (which is the default behavior of items in an array).</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlArrayAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlElementAttributes" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlElements" />
    <altmember cref="T:System.Xml.Serialization.XmlRootAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="76315-125">初始化 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="76315-125">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76315-126">初始化 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="76315-126">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="76315-127">下列範例會套用<xref:System.Xml.Serialization.XmlElementAttribute>類別。</span><span class="sxs-lookup"><span data-stu-id="76315-127">The following example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to a class.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlElementAttribute : string -&gt; System.Xml.Serialization.XmlElementAttribute" Usage="new System.Xml.Serialization.XmlElementAttribute elementName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="76315-128">序列成員的 XML 項目名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="76315-128">The XML element name of the serialized member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76315-129">初始化 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 類別的新執行個體，並且指定 XML 項目的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="76315-129">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class and specifies the name of the XML element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76315-130">根據預設，<xref:System.Xml.Serialization.XmlSerializer>序列化的類別執行個體時所使用的成員名稱做為 XML 項目名稱。</span><span class="sxs-lookup"><span data-stu-id="76315-130">By default, the <xref:System.Xml.Serialization.XmlSerializer> uses the member name as the XML element name when serializing a class instance.</span></span> <span data-ttu-id="76315-131">例如，名為的欄位`Vehicle`產生的 XML 項目，名為`Vehicle`。</span><span class="sxs-lookup"><span data-stu-id="76315-131">For example, a field named `Vehicle` generates an XML element named `Vehicle`.</span></span> <span data-ttu-id="76315-132">不過如果您需要不同的項目，例如`Cars`，將它傳入`elementName`參數。</span><span class="sxs-lookup"><span data-stu-id="76315-132">However if you need a different element, such as `Cars`, pass it in the `elementName` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76315-133">下列範例示範簡單的類別，其中包含名為的單一欄位`Vehicles`。</span><span class="sxs-lookup"><span data-stu-id="76315-133">The following example shows a simple class that contains a single field named `Vehicles`.</span></span> <span data-ttu-id="76315-134">範例會在套用<xref:System.Xml.Serialization.XmlElementAttribute>欄位，並包含`elementName`參數，藉此指示<xref:System.Xml.Serialization.XmlSerializer>產生名為 「 Cars 」，而不是 「 汽車 」 的 XML 項目。</span><span class="sxs-lookup"><span data-stu-id="76315-134">The example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to the field and includes the `elementName` parameter, thereby instructing the <xref:System.Xml.Serialization.XmlSerializer> to generate XML elements named "Cars" rather than "Vehicles".</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlElementAttribute : Type -&gt; System.Xml.Serialization.XmlElementAttribute" Usage="new System.Xml.Serialization.XmlElementAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="76315-135">衍生自成員型別的物件 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="76315-135">The <see cref="T:System.Type" /> of an object derived from the member's type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76315-136">初始化 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 類別的新執行個體，並針對套用 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 的成員指定型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="76315-136">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class and specifies a type for the member to which the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> is applied.</span>
          </span>
          <span data-ttu-id="76315-137">序列化或還原序列化包含這個型別的物件時，<see cref="T:System.Xml.Serialization.XmlSerializer" /> 會使用該型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="76315-137">This type is used by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> when serializing or deserializing object that contains it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76315-138">使用`type`參數來指定衍生自基底類別的類型。</span><span class="sxs-lookup"><span data-stu-id="76315-138">Use the `type` parameter to specify a type that is derived from a base class.</span></span> <span data-ttu-id="76315-139">例如，假設名為的屬性`MyAnimal`傳回`Animal`物件。</span><span class="sxs-lookup"><span data-stu-id="76315-139">For example, suppose a property named `MyAnimal` returns an `Animal` object.</span></span> <span data-ttu-id="76315-140">您要增強物件，讓您建立新的類別，名為`Mammal`繼承自`Animal`類別。</span><span class="sxs-lookup"><span data-stu-id="76315-140">You want to enhance the object, so you create a new class named `Mammal` that inherits from the `Animal` class.</span></span> <span data-ttu-id="76315-141">指示<xref:System.Xml.Serialization.XmlSerializer>接受`Mammal`類別時，它會序列化`MyAnimal`屬性，傳遞<xref:System.Type>的`Mammal`類別建構函式。</span><span class="sxs-lookup"><span data-stu-id="76315-141">To instruct the <xref:System.Xml.Serialization.XmlSerializer> to accept the `Mammal` class when it serializes the `MyAnimal` property, pass the <xref:System.Type> of the `Mammal` class to the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76315-142">下列範例會序列化類別，名為`Orchestra`，其中包含名為的單一欄位`Instruments`，它會傳回的陣列`Instrument`物件。</span><span class="sxs-lookup"><span data-stu-id="76315-142">The following example serializes a class named `Orchestra` that contains a single field named `Instruments`, which returns an array of `Instrument` objects.</span></span> <span data-ttu-id="76315-143">名為第二個類別`Brass`繼承自`Instrument`類別。</span><span class="sxs-lookup"><span data-stu-id="76315-143">A second class named `Brass` inherits from the `Instrument` class.</span></span> <span data-ttu-id="76315-144">範例會在套用<xref:System.Xml.Serialization.XmlElementAttribute>至`Instruments`欄位，並指定`Brass`類型，允許`Instruments`欄位接受`Brass`物件。</span><span class="sxs-lookup"><span data-stu-id="76315-144">The example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to the `Instruments` field, and specifies the `Brass` type, allowing the `Instruments` field to accept `Brass` objects.</span></span> <span data-ttu-id="76315-145">此範例也會指定 XML 項目的名稱設定<xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="76315-145">The example also specifies the name of the XML element by setting the <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute (string elementName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute(System::String ^ elementName, Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlElementAttribute : string * Type -&gt; System.Xml.Serialization.XmlElementAttribute" Usage="new System.Xml.Serialization.XmlElementAttribute (elementName, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="76315-146">序列成員的 XML 項目名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="76315-146">The XML element name of the serialized member.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="76315-147">衍生自成員型別的物件 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="76315-147">The <see cref="T:System.Type" /> of an object derived from the member's type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76315-148">初始化 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 的新執行個體，並針對套用 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 的成員指定 XML 項目名稱和衍生型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="76315-148">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> and specifies the name of the XML element and a derived type for the member to which the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> is applied.</span>
          </span>
          <span data-ttu-id="76315-149">這個成員型別用於 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化包含它的物件時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="76315-149">This member type is used when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes the object that contains it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76315-150">根據預設，<xref:System.Xml.Serialization.XmlSerializer>序列化的類別執行個體時所使用的成員名稱做為 XML 項目名稱。</span><span class="sxs-lookup"><span data-stu-id="76315-150">By default, the <xref:System.Xml.Serialization.XmlSerializer> uses the member name as the XML element name when serializing a class instance.</span></span> <span data-ttu-id="76315-151">例如，名為的欄位`Vehicle`產生的 XML 項目，名為`Vehicle`。</span><span class="sxs-lookup"><span data-stu-id="76315-151">For example, a field named `Vehicle` generates an XML element named `Vehicle`.</span></span> <span data-ttu-id="76315-152">不過，如果您需要不同的項目，例如`Cars`，將它傳入`elementName`參數。</span><span class="sxs-lookup"><span data-stu-id="76315-152">However, if you need a different element, such as `Cars`, pass it in the `elementName` parameter.</span></span>  
  
 <span data-ttu-id="76315-153">使用`type`參數來指定衍生自基底類別的類型。</span><span class="sxs-lookup"><span data-stu-id="76315-153">Use the `type` parameter to specify a type that is derived from a base class.</span></span> <span data-ttu-id="76315-154">例如，假設名為的屬性`MyAnimal`傳回`Animal`物件。</span><span class="sxs-lookup"><span data-stu-id="76315-154">For example, suppose a property named `MyAnimal` returns an `Animal` object.</span></span> <span data-ttu-id="76315-155">您要增強物件，讓您建立新的類別，名為`Mammal`繼承自`Animal`類別。</span><span class="sxs-lookup"><span data-stu-id="76315-155">You want to enhance the object, so you create a new class named `Mammal` that inherits from the `Animal` class.</span></span> <span data-ttu-id="76315-156">指示<xref:System.Xml.Serialization.XmlSerializer>接受`Mammal`類別時，它會序列化`MyAnimal`屬性，傳遞<xref:System.Type>的`Mammal`類別建構函式。</span><span class="sxs-lookup"><span data-stu-id="76315-156">To instruct the <xref:System.Xml.Serialization.XmlSerializer> to accept the `Mammal` class when it serializes the `MyAnimal` property, pass the <xref:System.Type> of the `Mammal` class to the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76315-157">下列範例會序列化類別，名為`Orchestra`，其中包含名為的單一欄位`Instruments`，它會傳回的陣列`Instrument`物件。</span><span class="sxs-lookup"><span data-stu-id="76315-157">The following example serializes a class named `Orchestra` that contains a single field named `Instruments`, which returns an array of `Instrument` objects.</span></span> <span data-ttu-id="76315-158">名為第二個類別`Brass`繼承自`Instrument`類別。</span><span class="sxs-lookup"><span data-stu-id="76315-158">A second class named `Brass` inherits from the `Instrument` class.</span></span> <span data-ttu-id="76315-159">範例會在套用<xref:System.Xml.Serialization.XmlElementAttribute>至`Instruments`欄位，並指定`Brass`類型，允許`Instruments`欄位接受`Brass`物件。</span><span class="sxs-lookup"><span data-stu-id="76315-159">The example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to the `Instruments` field, and specifies the `Brass` type, allowing the `Instruments` field to accept `Brass` objects.</span></span> <span data-ttu-id="76315-160">此範例也會指定 XML 項目的名稱設定<xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="76315-160">The example also specifies the name of the XML element by setting the <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76315-161">取得或設定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 所產生 XML 項目的 XML 結構描述定義 (XSD) 資料型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="76315-161">Gets or sets the XML Schema definition (XSD) data type of the XML element generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76315-162">XML 結構描述資料型別，如全球資訊網協會 (www.w3.org ) 文件＜XML Schema Part 2: Datatypes＞所定義。</span>
          <span class="sxs-lookup">
            <span data-stu-id="76315-162">An XML Schema data type, as defined by the World Wide Web Consortium (www.w3.org) document named "XML Schema Part 2: Datatypes".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76315-163">下表列出 XML 結構描述簡單資料類型及其.net 對等用法。</span><span class="sxs-lookup"><span data-stu-id="76315-163">The following table lists the XML Schema simple data types with their.NET equivalents.</span></span>  
  
 <span data-ttu-id="76315-164">XML 結構描述`base64Binary`和`hexBinary`資料類型使用的陣列<xref:System.Byte>結構，並套用<xref:System.Xml.Serialization.XmlElementAttribute>與<xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A>"base64Binary"或"hexBinary"，適當地設定。</span><span class="sxs-lookup"><span data-stu-id="76315-164">For the XML Schema `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> structures, and apply a <xref:System.Xml.Serialization.XmlElementAttribute> with the <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> set to "base64Binary" or "hexBinary", as appropriate.</span></span> <span data-ttu-id="76315-165">XML 結構描述`time`和`date`資料類型，使用<xref:System.DateTime>輸入和套用<xref:System.Xml.Serialization.XmlElementAttribute>與<xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A>設為 「 日期 」 或 「 時間 」。</span><span class="sxs-lookup"><span data-stu-id="76315-165">For the XML Schema `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.XmlElementAttribute> with the <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> set to "date" or "time".</span></span>  
  
 <span data-ttu-id="76315-166">對應到字串，每一個 XML 結構描述型別，套用<xref:System.Xml.Serialization.XmlElementAttribute>具有其<xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A>屬性設定為 XML 結構描述類型。</span><span class="sxs-lookup"><span data-stu-id="76315-166">For every XML Schema type that is mapped to a string, apply the <xref:System.Xml.Serialization.XmlElementAttribute> with its <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> property set to the XML Schema type.</span></span> <span data-ttu-id="76315-167">有可能，如此便可以變更序列化格式，而不只成員的結構描述。</span><span class="sxs-lookup"><span data-stu-id="76315-167">It is possible that this can change the serialization format, not only the schema for the member.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76315-168">屬性是區分大小寫，，因此您必須將它設定於其中一個 XML 結構描述資料類型。</span><span class="sxs-lookup"><span data-stu-id="76315-168">The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76315-169">將二進位資料做為 XML 項目會比傳遞做為 XML 結構描述屬性更有效率。</span><span class="sxs-lookup"><span data-stu-id="76315-169">Passing binary data as an XML element is more efficient than passing it as an XML Schema attribute.</span></span>  
  
 <span data-ttu-id="76315-170">如需有關 XML 資料類型的詳細資訊，請參閱全球資訊網協會 (www.w3.org) 文件名為 「 XML 結構描述組件 2:: 資料類型 」。</span><span class="sxs-lookup"><span data-stu-id="76315-170">For more information about XML data types, see the World Wide Web Consortium (www.w3.org) document named "XML Schema Part 2: Datatypes".</span></span>  
  
|<span data-ttu-id="76315-171">XSD 資料類型</span><span class="sxs-lookup"><span data-stu-id="76315-171">XSD data type</span></span>|<span data-ttu-id="76315-172">.NET 資料類型</span><span class="sxs-lookup"><span data-stu-id="76315-172">.NET data type</span></span>|  
|-------------------|--------------------|  
|<span data-ttu-id="76315-173">anyURI</span><span class="sxs-lookup"><span data-stu-id="76315-173">anyURI</span></span>|<xref:System.String>|  
|<span data-ttu-id="76315-174">base64Binary</span><span class="sxs-lookup"><span data-stu-id="76315-174">base64Binary</span></span>|<span data-ttu-id="76315-175">陣列<xref:System.Byte>物件</span><span class="sxs-lookup"><span data-stu-id="76315-175">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="76315-176">boolean</span><span class="sxs-lookup"><span data-stu-id="76315-176">boolean</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="76315-177">byte</span><span class="sxs-lookup"><span data-stu-id="76315-177">byte</span></span>|<xref:System.SByte>|  
|<span data-ttu-id="76315-178">date</span><span class="sxs-lookup"><span data-stu-id="76315-178">date</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="76315-179">dateTime</span><span class="sxs-lookup"><span data-stu-id="76315-179">dateTime</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="76315-180">decimal</span><span class="sxs-lookup"><span data-stu-id="76315-180">decimal</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="76315-181">double</span><span class="sxs-lookup"><span data-stu-id="76315-181">double</span></span>|<xref:System.Double>|  
|<span data-ttu-id="76315-182">ENTITY</span><span class="sxs-lookup"><span data-stu-id="76315-182">ENTITY</span></span>|<xref:System.String>|  
|<span data-ttu-id="76315-183">實體</span><span class="sxs-lookup"><span data-stu-id="76315-183">ENTITIES</span></span>|<xref:System.String>|  
|<span data-ttu-id="76315-184">float</span><span class="sxs-lookup"><span data-stu-id="76315-184">float</span></span>|<xref:System.Single>|  
|<span data-ttu-id="76315-185">gDay</span><span class="sxs-lookup"><span data-stu-id="76315-185">gDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="76315-186">gMonth</span><span class="sxs-lookup"><span data-stu-id="76315-186">gMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="76315-187">gMonthDay</span><span class="sxs-lookup"><span data-stu-id="76315-187">gMonthDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="76315-188">gYear</span><span class="sxs-lookup"><span data-stu-id="76315-188">gYear</span></span>|<xref:System.String>|  
|<span data-ttu-id="76315-189">gYearMonth</span><span class="sxs-lookup"><span data-stu-id="76315-189">gYearMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="76315-190">hexBinary</span><span class="sxs-lookup"><span data-stu-id="76315-190">hexBinary</span></span>|<span data-ttu-id="76315-191">陣列<xref:System.Byte>物件</span><span class="sxs-lookup"><span data-stu-id="76315-191">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="76315-192">識別碼</span><span class="sxs-lookup"><span data-stu-id="76315-192">ID</span></span>|<xref:System.String>|  
|<span data-ttu-id="76315-193">IDREF</span><span class="sxs-lookup"><span data-stu-id="76315-193">IDREF</span></span>|<xref:System.String>|  
|<span data-ttu-id="76315-194">IDREFS</span><span class="sxs-lookup"><span data-stu-id="76315-194">IDREFS</span></span>|<xref:System.String>|  
|<span data-ttu-id="76315-195">int</span><span class="sxs-lookup"><span data-stu-id="76315-195">int</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="76315-196">整數</span><span class="sxs-lookup"><span data-stu-id="76315-196">integer</span></span>|<xref:System.String>|  
|<span data-ttu-id="76315-197">語言</span><span class="sxs-lookup"><span data-stu-id="76315-197">language</span></span>|<xref:System.String>|  
|<span data-ttu-id="76315-198">long</span><span class="sxs-lookup"><span data-stu-id="76315-198">long</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="76315-199">名稱</span><span class="sxs-lookup"><span data-stu-id="76315-199">Name</span></span>|<xref:System.String>|  
|<span data-ttu-id="76315-200">NCName</span><span class="sxs-lookup"><span data-stu-id="76315-200">NCName</span></span>|<xref:System.String>|  
|<span data-ttu-id="76315-201">negativeInteger</span><span class="sxs-lookup"><span data-stu-id="76315-201">negativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="76315-202">NMTOKEN</span><span class="sxs-lookup"><span data-stu-id="76315-202">NMTOKEN</span></span>|<xref:System.String>|  
|<span data-ttu-id="76315-203">NMTOKENS</span><span class="sxs-lookup"><span data-stu-id="76315-203">NMTOKENS</span></span>|<xref:System.String>|  
|<span data-ttu-id="76315-204">normalizedString</span><span class="sxs-lookup"><span data-stu-id="76315-204">normalizedString</span></span>|<xref:System.String>|  
|<span data-ttu-id="76315-205">nonNegativeInteger</span><span class="sxs-lookup"><span data-stu-id="76315-205">nonNegativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="76315-206">nonPositiveInteger</span><span class="sxs-lookup"><span data-stu-id="76315-206">nonPositiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="76315-207">NOTATION</span><span class="sxs-lookup"><span data-stu-id="76315-207">NOTATION</span></span>|<xref:System.String>|  
|<span data-ttu-id="76315-208">positiveInteger</span><span class="sxs-lookup"><span data-stu-id="76315-208">positiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="76315-209">QName</span><span class="sxs-lookup"><span data-stu-id="76315-209">QName</span></span>|<xref:System.Xml.XmlQualifiedName>|  
|<span data-ttu-id="76315-210">持續期間</span><span class="sxs-lookup"><span data-stu-id="76315-210">duration</span></span>|<xref:System.String>|  
|<span data-ttu-id="76315-211">字串</span><span class="sxs-lookup"><span data-stu-id="76315-211">string</span></span>|<xref:System.String>|  
|<span data-ttu-id="76315-212">short</span><span class="sxs-lookup"><span data-stu-id="76315-212">short</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="76315-213">時間</span><span class="sxs-lookup"><span data-stu-id="76315-213">time</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="76315-214">token</span><span class="sxs-lookup"><span data-stu-id="76315-214">token</span></span>|<xref:System.String>|  
|<span data-ttu-id="76315-215">unsignedByte</span><span class="sxs-lookup"><span data-stu-id="76315-215">unsignedByte</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="76315-216">unsignedInt</span><span class="sxs-lookup"><span data-stu-id="76315-216">unsignedInt</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="76315-217">unsignedLong</span><span class="sxs-lookup"><span data-stu-id="76315-217">unsignedLong</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="76315-218">unsignedShort</span><span class="sxs-lookup"><span data-stu-id="76315-218">unsignedShort</span></span>|<xref:System.UInt16>|  
  
   
  
## Examples  
 <span data-ttu-id="76315-219">下列範例會序列化類別，名為`Group`，其中包含名為的欄位`ExtraInfo`，它會傳回<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="76315-219">The following example serializes a class named `Group` that contains a field named `ExtraInfo`, which returns an <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="76315-220">此範例適用於兩個執行個體<xref:System.Xml.Serialization.XmlElementAttribute>欄位，並指定不同<xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A>每個執行個體的值。</span><span class="sxs-lookup"><span data-stu-id="76315-220">The example applies two instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to the field and specifies different <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> values for each instance.</span></span> <span data-ttu-id="76315-221">每個執行個體讓<xref:System.Xml.Serialization.XmlSerializer>序列化陣列中插入指定的型別。</span><span class="sxs-lookup"><span data-stu-id="76315-221">Each instance enables the <xref:System.Xml.Serialization.XmlSerializer> to serialize the specified types inserted into the array.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.DataType Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.DataType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.DataType Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.DataType Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.DataType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.DataType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="76315-222">您指定的 XML 結構描述資料型別無法對應至 .NET 資料型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="76315-222">The XML Schema data type you have specified cannot be mapped to the.NET data type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76315-223">取得或設定產生的 XML 項目的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="76315-223">Gets or sets the name of the generated XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76315-224">產生的 XML 項目的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="76315-224">The name of the generated XML element.</span>
          </span>
          <span data-ttu-id="76315-225">預設值為成員識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="76315-225">The default is the member identifier.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76315-226">指定<xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>如果您想要不同的成員識別碼產生的 XML 項目的名稱。</span><span class="sxs-lookup"><span data-stu-id="76315-226">Specify an <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> if you want the name of the generated XML element to differ from the member's identifier.</span></span>  
  
 <span data-ttu-id="76315-227">您可以將設定為相同<xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A>至一個以上的類別成員值，如果產生的 XML 文件會使用 XML 命名空間來區別同名的成員。</span><span class="sxs-lookup"><span data-stu-id="76315-227">You can set the same <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> value to more than one class member if the generated XML document uses XML namespaces to distinguish between the identically named members.</span></span> <span data-ttu-id="76315-228">如需有關如何使用 XML 文件中的命名空間和前置詞的名稱的詳細資訊，請參閱<xref:System.Xml.Serialization.XmlSerializerNamespaces>類別。</span><span class="sxs-lookup"><span data-stu-id="76315-228">For details on how to use namespaces and prefixed names in the XML document, see the <xref:System.Xml.Serialization.XmlSerializerNamespaces> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76315-229">下列範例會設定<xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A>屬性<xref:System.Xml.Serialization.XmlElementAttribute>為新值。</span><span class="sxs-lookup"><span data-stu-id="76315-229">The following example sets the <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property of an <xref:System.Xml.Serialization.XmlElementAttribute> to a new value.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.ElementName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.ElementName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.ElementName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.ElementName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.ElementName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.ElementName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName" />
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Form" />
      <MemberSignature Language="VB.NET" Value="Public Property Form As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm Form { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Xml.Schema.XmlSchemaForm with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76315-230">取得或設定值，指出項目是否為限定的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="76315-230">Gets or sets a value that indicates whether the element is qualified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76315-231">其中一個 <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="76315-231">One of the <see cref="T:System.Xml.Schema.XmlSchemaForm" /> values.</span>
          </span>
          <span data-ttu-id="76315-232">預設值為 <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="76315-232">The default is <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76315-233"><xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A>屬性決定 XML 項目是限定或未限定。</span><span class="sxs-lookup"><span data-stu-id="76315-233">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property determines whether an XML element is qualified or unqualified.</span></span> <span data-ttu-id="76315-234"><xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A>屬性是否符合全球資訊網協會 (www.w3.org) 1999年規格，"命名空間中 XML"。</span><span class="sxs-lookup"><span data-stu-id="76315-234">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property conforms to the World Wide Web Consortium (www.w3.org) 1999 specification, "Namespaces in XML".</span></span>  
  
 <span data-ttu-id="76315-235">如果<xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A>屬性設定為任何值，正在嘗試設定<xref:System.Xml.Serialization.XmlElementAttribute.Form%2A>屬性`XmlSchemaForm.Unqualified`擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="76315-235">If the <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property is set to any value, attempting to set the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified` throws an exception.</span></span> <span data-ttu-id="76315-236">預設的設定， `XmlSchemaForm.None`，指示<xref:System.Xml.Serialization.XmlSerializer>來檢查 XML 文件，以判斷是否為限定的命名空間的結構描述。</span><span class="sxs-lookup"><span data-stu-id="76315-236">The default setting, `XmlSchemaForm.None`, instructs the <xref:System.Xml.Serialization.XmlSerializer> to check the schema for the XML document to determine whether the namespace is qualified.</span></span> <span data-ttu-id="76315-237">如果結構描述未指定個別的項目或屬性的值<xref:System.Xml.Serialization.XmlSerializer>使用`elementFormDefault`和`attributeFormDefault`用於判斷是否為限定的元素或屬性的值。</span><span class="sxs-lookup"><span data-stu-id="76315-237">If the schema does not specify a value for an individual element or attribute, the <xref:System.Xml.Serialization.XmlSerializer> uses the `elementFormDefault` and `attributeFormDefault` values to determine whether an element or attribute is qualified.</span></span> <span data-ttu-id="76315-238">下列 XML 程式碼會顯示結構描述：</span><span class="sxs-lookup"><span data-stu-id="76315-238">The following XML code shows a schema:</span></span>  
  
```  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified"... >  
 <element name="Name"/>  
 <attribute name="Number"/>  
</schema>  
```  
  
 <span data-ttu-id="76315-239">當<xref:System.Xml.Serialization.XmlSerializer>讀取結構描述，<xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A>值均`Name`和`Number`是`XmlSchemaForm.None`，但`Name`元素為限定，而`Number`項目是不合格。</span><span class="sxs-lookup"><span data-stu-id="76315-239">When the <xref:System.Xml.Serialization.XmlSerializer> reads the schema, the <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> value for both the `Name` and `Number` is `XmlSchemaForm.None`, but the `Name` element is qualified, while the `Number` element is unqualified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76315-240">下列範例會設定<xref:System.Xml.Serialization.XmlElementAttribute.Form%2A>屬性`XmlSchemaForm.Unqualified`。</span><span class="sxs-lookup"><span data-stu-id="76315-240">The following example sets the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified`.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.Form Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.Form Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76315-241">取得或設定值，指出 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否必須將設為 <see langword="null" /> 的成員序列化為 <see langword="xsi:nil" /> 屬性設為 <see langword="true" /> 的空標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="76315-241">Gets or sets a value that indicates whether the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize a member that is set to <see langword="null" /> as an empty tag with the <see langword="xsi:nil" /> attribute set to <see langword="true" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76315-242">如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 產生 <see langword="true" /> 屬性，則為 <see langword="xsi:nil" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="76315-242">
              <see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates the <see langword="xsi:nil" /> attribute; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76315-243">結構的 XML 結構描述規格可讓 XML 文件明確表示項目的內容遺漏。</span><span class="sxs-lookup"><span data-stu-id="76315-243">The XML schema specification for structures allows an XML document to explicitly signal that an element's content is missing.</span></span> <span data-ttu-id="76315-244">這類項目包含屬性`xsi:nil`設`true`。</span><span class="sxs-lookup"><span data-stu-id="76315-244">Such an element contains the attribute `xsi:nil` set to `true`.</span></span> <span data-ttu-id="76315-245">如需詳細資訊，請參閱全球資訊網協會 (www.w3.org) 規格，「 XML 結構描述組件 1:: 結構 」。</span><span class="sxs-lookup"><span data-stu-id="76315-245">For more information, see the World Wide Web Consortium (www.w3.org) specification, "XML Schema Part 1: Structures".</span></span>  
  
 <span data-ttu-id="76315-246">如果<xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A>屬性設定為`true`、`xsi:nil`屬性就會產生的類別成員，已設定成`null`。</span><span class="sxs-lookup"><span data-stu-id="76315-246">If the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property is set to `true`, the `xsi:nil` attribute is generated for class members that have been set to `null`.</span></span> <span data-ttu-id="76315-247">例如，如果您將名為的欄位`MyStringArray`至`null`、<xref:System.Xml.Serialization.XmlSerializer>會產生下列 XML 程式碼。</span><span class="sxs-lookup"><span data-stu-id="76315-247">For example if you set a field named `MyStringArray` to `null`, the <xref:System.Xml.Serialization.XmlSerializer> generates the following XML code.</span></span>  
  
```  
<MyStringArray xsi:nil = "true" />  
```  
  
 <span data-ttu-id="76315-248">如果<xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A>屬性是`false`，沒有任何 XML 項目為已設定成的類別成員產生`null`。</span><span class="sxs-lookup"><span data-stu-id="76315-248">If the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property is `false`, no XML element is generated for class members that have been set to `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76315-249">您不能套用<xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A>成員的屬性型別為實值類型，因為實值類型不能包含`null`。</span><span class="sxs-lookup"><span data-stu-id="76315-249">You cannot apply the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property to a member typed as a value type because a value type cannot contain `null`.</span></span> <span data-ttu-id="76315-250">此外，您無法將此屬性設定為`false`可為 null 的實值型別。</span><span class="sxs-lookup"><span data-stu-id="76315-250">Additionally, you cannot set this property to `false` for nullable value types.</span></span> <span data-ttu-id="76315-251">這種型別時`null`，它們會藉由設定序列化`xsi:nil`至`true`。</span><span class="sxs-lookup"><span data-stu-id="76315-251">When such types are `null`, they will be serialized by setting `xsi:nil` to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76315-252">下列範例示範具有欄位<xref:System.Xml.Serialization.XmlElementAttribute>套用至其中，而<xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A>屬性設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="76315-252">The following example shows a field with the <xref:System.Xml.Serialization.XmlElementAttribute> applied to it, and the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property set to `false`.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.IsNullable Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.IsNullable Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76315-253">取得或設定指派給類別序列化時所產生之 XML 項目的命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="76315-253">Gets or sets the namespace assigned to the XML element that results when the class is serialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76315-254">XML 項目的命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="76315-254">The namespace of the XML element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76315-255"><xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A>屬性是否符合全球資訊網協會 (www.w3.org) 規格，"命名空間中 XML"。</span><span class="sxs-lookup"><span data-stu-id="76315-255">The <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> property conforms to the World Wide Web Consortium (www.w3.org) specification, "Namespaces in XML".</span></span>  
  
 <span data-ttu-id="76315-256">若要建立具有前置詞相關聯的命名空間，您必須建立<xref:System.Xml.Serialization.XmlSerializerNamespaces>，其中包含的命名空間和 XML 文件中使用前置詞。</span><span class="sxs-lookup"><span data-stu-id="76315-256">To create namespaces that are associated with a prefix, you must create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> that contains the namespaces and prefixes used in the XML document.</span></span> <span data-ttu-id="76315-257">當您在每個設定命名空間<xref:System.Xml.Serialization.XmlArrayAttribute>，它必須符合其中一個命名空間中<xref:System.Xml.Serialization.XmlSerializerNamespaces>。</span><span class="sxs-lookup"><span data-stu-id="76315-257">As you set the namespace for each <xref:System.Xml.Serialization.XmlArrayAttribute>, it must match one of the namespaces in the <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span></span> <span data-ttu-id="76315-258">產生 XML 時，每個陣列已正確加上指定的命名空間相關聯的前置詞。</span><span class="sxs-lookup"><span data-stu-id="76315-258">When the XML is generated, each array is correctly prefixed with the prefix associated with the specified namespace.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Order : int with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Order" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76315-259">取得或設定項目序列化或還原序列化的明確順序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="76315-259">Gets or sets the explicit order in which the elements are serialized or deserialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76315-260">程式碼產生的順序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="76315-260">The order of the code generation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76315-261">使用<xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder>列舉型別，以指示<xref:System.Web.Services.Description.ServiceDescriptionImporter>來產生程式碼，以設定<xref:System.Xml.Serialization.XmlElementAttribute.Order%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="76315-261">Use the <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> enumeration to instruct the <xref:System.Web.Services.Description.ServiceDescriptionImporter> to generate code that sets the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="76315-262">一次<xref:System.Xml.Serialization.XmlElementAttribute.Order%2A>屬性已使用上一個公用屬性或欄位型別中的，它必須套用到所有的公用屬性和欄位，該型別和所有繼承的類型。</span><span class="sxs-lookup"><span data-stu-id="76315-262">Once the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property has been used on one public property or field in a type, it must be applied to all public properties and fields for that type and all inherited types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76315-263">取得或設定用來表示 XML 項目的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="76315-263">Gets or sets the object type used to represent the XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76315-264">成員的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="76315-264">The <see cref="T:System.Type" /> of the member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76315-265">使用<xref:System.Xml.Serialization.XmlElementAttribute.Type%2A>屬性來指定欄位或屬性的衍生型別。</span><span class="sxs-lookup"><span data-stu-id="76315-265">Use the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify a derived type for a field or property.</span></span>  
  
 <span data-ttu-id="76315-266">如果欄位或屬性傳回<xref:System.Collections.ArrayList>，您可以套用多個執行個體<xref:System.Xml.Serialization.XmlElementAttribute>的成員。</span><span class="sxs-lookup"><span data-stu-id="76315-266">If a field or property returns an <xref:System.Collections.ArrayList>, you can apply multiple instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to the member.</span></span> <span data-ttu-id="76315-267">每個執行個體，請設定<xref:System.Xml.Serialization.XmlElementAttribute.Type%2A>可以插入到陣列的物件類型的屬性。</span><span class="sxs-lookup"><span data-stu-id="76315-267">For each instance, set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to a type of object that can be inserted into the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76315-268">下列範例會使用<xref:System.Xml.Serialization.XmlElementAttribute.Type%2A>屬性，以指定的衍生的物件<xref:System.Xml.Serialization.XmlElementAttribute>。</span><span class="sxs-lookup"><span data-stu-id="76315-268">The following example uses the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify a derived object for an <xref:System.Xml.Serialization.XmlElementAttribute>.</span></span> <span data-ttu-id="76315-269">此範例也適用於三個執行個體<xref:System.Xml.Serialization.XmlElementAttribute>的欄位，傳回<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="76315-269">The example also applies three instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to a field that returns an <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="76315-270">每個執行個體指定的欄位中允許的類型。</span><span class="sxs-lookup"><span data-stu-id="76315-270">Each instance specifies a type allowed in the field.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.Type Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.Type Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.Type Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.Type Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.Type Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.Type Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>