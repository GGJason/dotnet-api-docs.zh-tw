<Type Name="XmlSchemaProviderAttribute" FullName="System.Xml.Serialization.XmlSchemaProviderAttribute">
  <TypeSignature Language="C#" Value="public sealed class XmlSchemaProviderAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlSchemaProviderAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlSchemaProviderAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlSchemaProviderAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaProviderAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface | System.AttributeTargets.Struct)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2c289-101">套用至型別後，儲存傳回 XML 結構描述之型別的靜態方法名稱以及控制型別之序列化 (Serialization) 的 <see cref="T:System.Xml.XmlQualifiedName" /> (或用於匿名型別的 <see cref="T:System.Xml.Schema.XmlSchemaType" />)。</span><span class="sxs-lookup"><span data-stu-id="2c289-101">When applied to a type, stores the name of a static method of the type that returns an XML schema and a <see cref="T:System.Xml.XmlQualifiedName" /> (or <see cref="T:System.Xml.Schema.XmlSchemaType" /> for anonymous types) that controls the serialization of the type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c289-102">主要目的<xref:System.Xml.Serialization.XmlSchemaProviderAttribute>是要讓<xref:System.Xml.Serialization.XmlSchemaExporter>類別，以傳回結構描述時查詢 Web 服務描述語言工具 (WSDL.exe)，或在使用**加入 Web 參考**Visual Studio 功能。</span><span class="sxs-lookup"><span data-stu-id="2c289-102">The main purpose of the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> is to enable the <xref:System.Xml.Serialization.XmlSchemaExporter> class to return a schema when queried by the Web Services Description Language tool (WSDL.exe), or when using the **Add Web Reference** feature of Visual Studio.</span></span> <span data-ttu-id="2c289-103">您可以控制實際的結構描述中的靜態方法的類型。</span><span class="sxs-lookup"><span data-stu-id="2c289-103">You can control the actual schema for the type in the static method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2c289-104">屬性的目標類別必須實作<xref:System.Xml.Serialization.IXmlSerializable>介面。</span><span class="sxs-lookup"><span data-stu-id="2c289-104">The target class of the attribute must implement the <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 <span data-ttu-id="2c289-105"><xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A>屬性會傳回透過反映的靜態方法名稱。</span><span class="sxs-lookup"><span data-stu-id="2c289-105">The <xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A> property returns the name of a static method through reflection.</span></span> <span data-ttu-id="2c289-106">必須實作的方法必須接受一個參數，<xref:System.Xml.Schema.XmlSchemaSet>物件，該方法填入<xref:System.Xml.Schema.XmlSchema>物件。</span><span class="sxs-lookup"><span data-stu-id="2c289-106">The method, which must be implemented, must take a single parameter, an <xref:System.Xml.Schema.XmlSchemaSet> object, which the method populates with an <xref:System.Xml.Schema.XmlSchema> object.</span></span> <span data-ttu-id="2c289-107">此方法也必須傳回<xref:System.Xml.XmlQualifiedName>識別資料類型的物件。</span><span class="sxs-lookup"><span data-stu-id="2c289-107">The method must also return an <xref:System.Xml.XmlQualifiedName> object that identifies the data type.</span></span>  
  
## <a name="returning-anonymous-types"></a><span data-ttu-id="2c289-108">傳回匿名型別</span><span class="sxs-lookup"><span data-stu-id="2c289-108">Returning Anonymous Types</span></span>  
 <span data-ttu-id="2c289-109">匿名的複雜型別無法使用的方法會傳回建立<xref:System.Xml.XmlQualifiedName>。</span><span class="sxs-lookup"><span data-stu-id="2c289-109">An anonymous complex type cannot be created using a method that returns <xref:System.Xml.XmlQualifiedName>.</span></span> <span data-ttu-id="2c289-110">因為匿名型別具有任何名稱，而且您無法將匿名型別加入結構描述，必須傳回匿名型別為<xref:System.Xml.Schema.XmlSchemaType>。</span><span class="sxs-lookup"><span data-stu-id="2c289-110">Because an anonymous type has no name, and you cannot add an anonymous type to a schema, the anonymous type must be returned as an <xref:System.Xml.Schema.XmlSchemaType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c289-111">下列範例會套用<xref:System.Xml.Serialization.XmlSchemaProviderAttribute>伺服器端類別。</span><span class="sxs-lookup"><span data-stu-id="2c289-111">The following example applies the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> to a server-side class.</span></span> <span data-ttu-id="2c289-112">方法叫用時，由命名<xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A>屬性建立結構描述。</span><span class="sxs-lookup"><span data-stu-id="2c289-112">When invoked, the method named by the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName%2A> property creates the schema.</span></span> <span data-ttu-id="2c289-113">這個簡單的實作，讀取磁碟關閉現有的結構描述。</span><span class="sxs-lookup"><span data-stu-id="2c289-113">This simple implementation reads an existing schema off the disk.</span></span> <span data-ttu-id="2c289-114">不過，您也可以建立自訂的結構描述中，如果有必要，使用型別中找到<xref:System.Xml.Schema>命名空間。</span><span class="sxs-lookup"><span data-stu-id="2c289-114">However, you can also create a custom schema, if necessary, using the types found in the <xref:System.Xml.Schema> namespace.</span></span>  
  
 [!code-csharp[HowToChunkSerializedData#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HowToChunkSerializedData/CS/SerializationChunk.cs#2)]
 [!code-vb[HowToChunkSerializedData#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HowToChunkSerializedData/VB/SerializationChunk.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Schema.XmlSchema" />
    <altmember cref="T:System.Xml.Schema.XmlSchemaSet" />
    <altmember cref="T:System.Xml.Serialization.XmlReflectionImporter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaProviderAttribute (string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (methodName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaProviderAttribute(System::String ^ methodName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="2c289-115">必須實作的靜態方法名稱。</span><span class="sxs-lookup"><span data-stu-id="2c289-115">The name of the static method that must be implemented.</span></span></param>
        <summary><span data-ttu-id="2c289-116">初始化 <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> 類別的新執行個體，並採用提供型別之 XML 結構描述的靜態方法名稱。</span><span class="sxs-lookup"><span data-stu-id="2c289-116">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> class, taking the name of the static method that supplies the type's XML schema.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAny">
      <MemberSignature Language="C#" Value="public bool IsAny { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAny" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAny As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAny { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c289-117">取得或設定值，以便判斷目標類別是否為萬用字元，或者該類別的結構描述是否僅含有 <see langword="xs:any" /> 項目。</span><span class="sxs-lookup"><span data-stu-id="2c289-117">Gets or sets a value that determines whether the target class is a wildcard, or that the schema for the class has contains only an <see langword="xs:any" /> element.</span></span></summary>
        <value>
          <span data-ttu-id="2c289-118">如果該類別為萬用字元，或者結構描述僅含有 <see langword="true" /> 項目，則為 <see langword="xs:any" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2c289-118"><see langword="true" />, if the class is a wildcard, or if the schema contains only the <see langword="xs:any" /> element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c289-119">屬性的目標類別可以是任何類別。</span><span class="sxs-lookup"><span data-stu-id="2c289-119">The target class of the attribute can be any class.</span></span> <span data-ttu-id="2c289-120">這可以透過下列方式來達成：</span><span class="sxs-lookup"><span data-stu-id="2c289-120">This can be achieved in the following ways:</span></span>  
  
-   <span data-ttu-id="2c289-121">屬性所命名的方法可以傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="2c289-121">The method named by the attribute can return `null`.</span></span>  
  
-   <span data-ttu-id="2c289-122">設定這個屬性的值`true`來防止方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="2c289-122">Set the value of this property to `true` to prevent the method from being called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public string MethodName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MethodName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2c289-123">取得靜態方法的名稱，這個名稱會提供類型的 XML 結構描述及其 XML 結構描述資料類型的名稱。</span><span class="sxs-lookup"><span data-stu-id="2c289-123">Gets the name of the static method that supplies the type's XML schema and the name of its XML Schema data type.</span></span></summary>
        <value><span data-ttu-id="2c289-124">由 XML 基礎結構叫用以傳回 XML 結構描述之方法的名稱。</span><span class="sxs-lookup"><span data-stu-id="2c289-124">The name of the method that is invoked by the XML infrastructure to return an XML schema.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>