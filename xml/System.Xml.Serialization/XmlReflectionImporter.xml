<Type Name="XmlReflectionImporter" FullName="System.Xml.Serialization.XmlReflectionImporter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0a081a43b028b0b4242d059c76d9aa004bce9cc3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720442" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlReflectionImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlReflectionImporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlReflectionImporter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlReflectionImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlReflectionImporter" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f7af2-101">針對 .NET Framework 類型或 Web 服務方法資訊產生 XML 結構描述項目宣告的對應，包括 Web 服務描述語言 (WSDL) 文件中的常值 XML 結構描述定義 (XSD) 訊息部分。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f7af2-101">Generates mappings to XML schema element declarations, including literal XML Schema Definition (XSD) message parts in a Web Services Description Language (WSDL) document, for .NET Framework types or Web service method information.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7af2-102"><xref:System.Xml.Serialization.XmlReflectionImporter>類別不會直接使用。</span><span class="sxs-lookup"><span data-stu-id="f7af2-102">The <xref:System.Xml.Serialization.XmlReflectionImporter> class is not used directly.</span></span> <span data-ttu-id="f7af2-103">相反地，它可用，如下所示：</span><span class="sxs-lookup"><span data-stu-id="f7af2-103">Instead, it is used as follows:</span></span>  
  
-   <span data-ttu-id="f7af2-104">由<xref:System.Web.Services.Description.ServiceDescriptionReflector>類別會在建立時<xref:System.Web.Services.Description.ServiceDescription>從識別為 Web 服務類別的物件。</span><span class="sxs-lookup"><span data-stu-id="f7af2-104">By the <xref:System.Web.Services.Description.ServiceDescriptionReflector> class while it creates <xref:System.Web.Services.Description.ServiceDescription> objects from classes that are identified as Web services.</span></span>  
  
-   <span data-ttu-id="f7af2-105">Web 服務或用戶端，包括在初始化期間。</span><span class="sxs-lookup"><span data-stu-id="f7af2-105">By a Web service or client, including during initialization.</span></span>  
  
-   <span data-ttu-id="f7af2-106">初始化<xref:System.Xml.Serialization.XmlSerializer>物件。</span><span class="sxs-lookup"><span data-stu-id="f7af2-106">To initialize an <xref:System.Xml.Serialization.XmlSerializer> object.</span></span>  
  
-   <span data-ttu-id="f7af2-107">根據 XML 結構描述定義工具 (Xsd.exe)，此工具時產生 XML 結構描述從執行階段組件檔案中的類型。</span><span class="sxs-lookup"><span data-stu-id="f7af2-107">By the XML Schema Definition tool (Xsd.exe) while the tool generates XML schemas from types in a run-time assembly file.</span></span>  
  
-   <span data-ttu-id="f7af2-108">Web 服務描述語言工具 (Wsdl.exe) 工具時所產生的用戶端 proxy 類別或抽象 server 類別從 WSDL 文件。</span><span class="sxs-lookup"><span data-stu-id="f7af2-108">By the Web Services Description Language tool (Wsdl.exe) while the tool generates client proxy classes or abstract server classes from a WSDL document.</span></span>  
  
 <span data-ttu-id="f7af2-109"><xref:System.Xml.Serialization.XmlReflectionImporter>類別用於時服務的 Web 服務或用戶端指定：</span><span class="sxs-lookup"><span data-stu-id="f7af2-109">The <xref:System.Xml.Serialization.XmlReflectionImporter> class is used for Web services when a service or client specifies:</span></span>  
  
-   <span data-ttu-id="f7af2-110">常值使用，表示 SOAP 訊息的參數和傳回值 （或要求和回應文件） 的內容依其字面指定使用 XML 結構描述定義。</span><span class="sxs-lookup"><span data-stu-id="f7af2-110">Literal use, which indicates that the contents of SOAP message parameters and return values (or request and response documents) are literally specified with XML schema definitions.</span></span>  
  
-   <span data-ttu-id="f7af2-111">非 SOAP Web 服務使用的 HTTP GET 和 HTTP POST 作業的實作。</span><span class="sxs-lookup"><span data-stu-id="f7af2-111">Non-SOAP implementations of Web services using the HTTP-GET and HTTP-POST operations.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f7af2-112">初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-112">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionImporter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReflectionImporter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f7af2-113">初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-113">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7af2-114">您不需要建立的執行個體<xref:System.Xml.Serialization.XmlReflectionImporter>直接物件。</span><span class="sxs-lookup"><span data-stu-id="f7af2-114">You do not need to create an instance of an <xref:System.Xml.Serialization.XmlReflectionImporter> object directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionImporter (string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (defaultNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReflectionImporter(System::String ^ defaultNamespace);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="defaultNamespace">
          <span data-ttu-id="f7af2-115">預設 XML 命名空間，用來對應匯入的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-115">The default XML namespace to use for imported type mappings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7af2-116">使用指定的預設 XML 命名空間，初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-116">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> class using the specified default XML namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7af2-117">不需要建立的執行個體<xref:System.Xml.Serialization.XmlReflectionImporter>直接類別。</span><span class="sxs-lookup"><span data-stu-id="f7af2-117">It is not necessary to create an instance of the <xref:System.Xml.Serialization.XmlReflectionImporter> class directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionImporter (System.Xml.Serialization.XmlAttributeOverrides attributeOverrides);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.XmlAttributeOverrides attributeOverrides) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attributeOverrides As XmlAttributeOverrides)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReflectionImporter(System::Xml::Serialization::XmlAttributeOverrides ^ attributeOverrides);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributeOverrides" Type="System.Xml.Serialization.XmlAttributeOverrides" />
      </Parameters>
      <Docs>
        <param name="attributeOverrides">
          <span data-ttu-id="f7af2-118">物件，其會覆寫 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別序列化對應類型的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-118">An object that overrides how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class serializes mapped types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7af2-119">使用指定的 XML 序列化覆寫，初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-119">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> class using the specified XML serialization overrides.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7af2-120">不需要建立的執行個體<xref:System.Xml.Serialization.XmlReflectionImporter>直接類別。</span><span class="sxs-lookup"><span data-stu-id="f7af2-120">It is not necessary to create an instance of the <xref:System.Xml.Serialization.XmlReflectionImporter> class directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReflectionImporter (System.Xml.Serialization.XmlAttributeOverrides attributeOverrides, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.XmlAttributeOverrides attributeOverrides, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attributeOverrides As XmlAttributeOverrides, defaultNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReflectionImporter(System::Xml::Serialization::XmlAttributeOverrides ^ attributeOverrides, System::String ^ defaultNamespace);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributeOverrides" Type="System.Xml.Serialization.XmlAttributeOverrides" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeOverrides">
          <span data-ttu-id="f7af2-121">物件，其會覆寫 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 類別序列化對應類型的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-121">An object that overrides how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class serializes mapped types.</span>
          </span>
        </param>
        <param name="defaultNamespace">
          <span data-ttu-id="f7af2-122">預設 XML 命名空間，用來對應匯入的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-122">The default XML namespace to use for imported type mappings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7af2-123">使用指定的 XML 序列化覆寫和預設 XML 命名空間，初始化 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-123">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> class using the specified XML serialization overrides and default XML namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7af2-124">不需要建立的執行個體<xref:System.Xml.Serialization.XmlReflectionImporter>直接類別。</span><span class="sxs-lookup"><span data-stu-id="f7af2-124">It is not necessary to create an instance of the <xref:System.Xml.Serialization.XmlReflectionImporter> class directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportMembersMapping">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f7af2-125">使用來自 Web 服務方法的資訊，傳回內部類型對應。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-125">Returns internal type mappings using information from a Web service method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (elementName As String, ns As String, members As XmlReflectionMember(), hasWrapperElement As Boolean) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ elementName, System::String ^ ns, cli::array &lt;System::Xml::Serialization::XmlReflectionMember ^&gt; ^ members, bool hasWrapperElement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="f7af2-126">從 Web 服務方法產生的 XML 項目名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-126">An XML element name produced from the Web service method.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="f7af2-127">從 Web 服務方法產生的 XML 項目命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-127">An XML element namespace produced from the Web service method.</span>
          </span>
        </param>
        <param name="members">
          <span data-ttu-id="f7af2-128">
            <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 物件的陣列，其中包含屬於 Web 服務方法的 .NET Framework 程式碼實體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-128">An array of <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> objects that contain .NET Framework code entities that belong to a Web service method.</span>
          </span>
        </param>
        <param name="hasWrapperElement">
          <span data-ttu-id="f7af2-129">如果 Web 服務描述語言 (WSDL) 訊息部分的對應項目應該封入 SOAP 訊息的額外包裝函式項目中，即為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-129">
              <see langword="true" /> if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7af2-130">針對來自 Web 服務方法的資訊，產生內部類型對應。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-130">Generates internal type mappings for information from a Web service method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7af2-131">
            <see cref="T:System.Xml.Serialization.XmlMembersMapping" />，其中含有 WSDL 訊息定義之項目部分的對應。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-131">An <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> with mappings to the element parts of a WSDL message definition.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7af2-132"><xref:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping%2A>初始化 Web 服務或用戶端，或反映的 Web 服務時呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="f7af2-132">The <xref:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping%2A> method is called while initializing a Web service or client, or reflecting a Web service.</span></span> <span data-ttu-id="f7af2-133">您不需要直接呼叫它。</span><span class="sxs-lookup"><span data-stu-id="f7af2-133">It is not necessary to call it directly.</span></span>  
  
 <span data-ttu-id="f7af2-134"><xref:System.Xml.Serialization.XmlReflectionMember>陣列參數可以包含下列任何一個：</span><span class="sxs-lookup"><span data-stu-id="f7af2-134">The <xref:System.Xml.Serialization.XmlReflectionMember> array parameter can consist of any one of the following:</span></span>  
  
-   <span data-ttu-id="f7af2-135">Web 服務方法的輸入的參數。</span><span class="sxs-lookup"><span data-stu-id="f7af2-135">Web service method input parameters.</span></span>  
  
-   <span data-ttu-id="f7af2-136">Web 服務方法輸出參數，加上傳回的型別，如果不是 void，位於索引 0。</span><span class="sxs-lookup"><span data-stu-id="f7af2-136">Web service method output parameters, plus the return type, if not void, at index 0.</span></span>  
  
-   <span data-ttu-id="f7af2-137">SOAP 標頭輸入。</span><span class="sxs-lookup"><span data-stu-id="f7af2-137">SOAP input headers.</span></span>  
  
-   <span data-ttu-id="f7af2-138">SOAP 輸出標頭。</span><span class="sxs-lookup"><span data-stu-id="f7af2-138">SOAP output headers.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (elementName As String, ns As String, members As XmlReflectionMember(), hasWrapperElement As Boolean, rpc As Boolean) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ elementName, System::String ^ ns, cli::array &lt;System::Xml::Serialization::XmlReflectionMember ^&gt; ^ members, bool hasWrapperElement, bool rpc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
        <Parameter Name="rpc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="f7af2-139">從 Web 服務方法產生的 XML 項目名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-139">An XML element name produced from the Web service method.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="f7af2-140">從 Web 服務方法產生的 XML 項目命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-140">An XML element namespace produced from the Web service method.</span>
          </span>
        </param>
        <param name="members">
          <span data-ttu-id="f7af2-141">
            <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 物件的陣列，其中包含屬於 Web 服務方法的 .NET Framework 程式碼實體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-141">An array of <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> objects that contain .NET Framework code entities that belong to a Web service method.</span>
          </span>
        </param>
        <param name="hasWrapperElement">
          <span data-ttu-id="f7af2-142">如果 Web 服務描述語言 (WSDL) 訊息部分的對應項目應該封入 SOAP 訊息的額外包裝函式項目中，即為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-142">
              <see langword="true" /> if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="rpc">
          <span data-ttu-id="f7af2-143">如果方法為遠端程序呼叫，即為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-143">
              <see langword="true" /> if the method is a remote procedure call; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7af2-144">使用來自 Web 服務方法的資訊，傳回內部類型對應，並讓您指定 XML 項目名稱、XML 命名空間及其他選項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-144">Returns internal type mappings using information from a Web service method, and allows you to specify an XML element name, XML namespace, and other options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7af2-145">包含對應的 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-145">An <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> that contains the mappings.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (elementName As String, ns As String, members As XmlReflectionMember(), hasWrapperElement As Boolean, rpc As Boolean, openModel As Boolean) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ elementName, System::String ^ ns, cli::array &lt;System::Xml::Serialization::XmlReflectionMember ^&gt; ^ members, bool hasWrapperElement, bool rpc, bool openModel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
        <Parameter Name="rpc" Type="System.Boolean" />
        <Parameter Name="openModel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="f7af2-146">從 Web 服務方法產生的 XML 項目名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-146">An XML element name produced from the Web service method.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="f7af2-147">從 Web 服務方法產生的 XML 項目命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-147">An XML element namespace produced from the Web service method.</span>
          </span>
        </param>
        <param name="members">
          <span data-ttu-id="f7af2-148">
            <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 物件的陣列，其中包含屬於 Web 服務方法的 .NET Framework 程式碼實體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-148">An array of <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> objects that contain .NET Framework code entities that belong to a Web service method.</span>
          </span>
        </param>
        <param name="hasWrapperElement">
          <span data-ttu-id="f7af2-149">如果 Web 服務描述語言 (WSDL) 訊息部分的對應項目應該封入 SOAP 訊息的額外包裝函式項目中，即為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-149">
              <see langword="true" /> if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="rpc">
          <span data-ttu-id="f7af2-150">如果方法為遠端程序呼叫，即為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-150">
              <see langword="true" /> if the method is a remote procedure call; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="openModel">
          <span data-ttu-id="f7af2-151">如果指定要將產生的結構描述類型以 <see langword="&lt;xs:anyAttribute&gt;" /> 項目標記，即為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-151">
              <see langword="true" /> to specify that the generated schema type will be marked with the <see langword="&lt;xs:anyAttribute&gt;" /> element; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7af2-152">使用來自 Web 服務方法的資訊，傳回內部類型對應，並讓您指定 XML 項目名稱、XML 命名空間及其他選項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-152">Returns internal type mappings using information from a Web service method, and allows you to specify an XML element name, XML namespace, and other options.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7af2-153">包含對應的 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-153">An <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> that contains the mappings.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel, System.Xml.Serialization.XmlMappingAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool rpc, bool openModel, valuetype System.Xml.Serialization.XmlMappingAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (elementName As String, ns As String, members As XmlReflectionMember(), hasWrapperElement As Boolean, rpc As Boolean, openModel As Boolean, access As XmlMappingAccess) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ elementName, System::String ^ ns, cli::array &lt;System::Xml::Serialization::XmlReflectionMember ^&gt; ^ members, bool hasWrapperElement, bool rpc, bool openModel, System::Xml::Serialization::XmlMappingAccess access);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
        <Parameter Name="rpc" Type="System.Boolean" />
        <Parameter Name="openModel" Type="System.Boolean" />
        <Parameter Name="access" Type="System.Xml.Serialization.XmlMappingAccess" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <span data-ttu-id="f7af2-154">從 Web 服務方法產生的 XML 項目名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-154">An XML element name produced from the Web service method.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="f7af2-155">從 Web 服務方法產生的 XML 項目命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-155">An XML element namespace produced from the Web service method.</span>
          </span>
        </param>
        <param name="members">
          <span data-ttu-id="f7af2-156">
            <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 物件的陣列，其中包含屬於 Web 服務方法的 .NET Framework 程式碼實體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-156">An array of <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> objects that contain .NET Framework code entities that belong to a Web service method.</span>
          </span>
        </param>
        <param name="hasWrapperElement">
          <span data-ttu-id="f7af2-157">如果 Web 服務描述語言 (WSDL) 訊息部分的對應項目應該封入 SOAP 訊息的額外包裝函式項目中，即為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-157">
              <see langword="true" /> if elements that correspond to Web Services Description Language (WSDL) message parts should be enclosed in an extra wrapper element in a SOAP message; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="rpc">
          <span data-ttu-id="f7af2-158">如果方法為遠端程序呼叫，即為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-158">
              <see langword="true" /> if the method is a remote procedure call; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="openModel">
          <span data-ttu-id="f7af2-159">如果指定要將產生的結構描述類型以 <see langword="&lt;xs:anyAttribute&gt;" /> 項目標記，即為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-159">
              <see langword="true" /> to specify that the generated schema type will be marked with the <see langword="&lt;xs:anyAttribute&gt;" /> element; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="f7af2-160">其中一個 <see cref="T:System.Xml.Serialization.XmlMappingAccess" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-160">One of the <see cref="T:System.Xml.Serialization.XmlMappingAccess" /> values.</span>
          </span>
          <span data-ttu-id="f7af2-161">預設值為 <see langword="None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-161">The default is <see langword="None" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7af2-162">針對來自 Web 服務方法的資訊，產生內部類型對應。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-162">Generates internal type mappings for information from a Web service method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7af2-163">包含對應的 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-163">An <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> that contains the mappings.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportTypeMapping">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f7af2-164">針對指定的 .NET Framework 類型，產生 XML 結構描述項目的對應。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-164">Generates a mapping to an XML Schema element for a specified .NET Framework type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlTypeMapping ^ ImportTypeMapping(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="f7af2-165">要為其產生類型對應的 .NET Framework 類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-165">The .NET Framework type for which to generate a type mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7af2-166">針對指定的 .NET Framework 類型，產生 XML 結構描述項目的對應。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-166">Generates a mapping to an XML Schema element for a specified .NET Framework type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7af2-167">某個類型與 XML 結構描述項目的內部 .NET Framework 對應。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-167">Internal .NET Framework mapping of a type to an XML Schema element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7af2-168">不需要呼叫<xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A>直接的方法。</span><span class="sxs-lookup"><span data-stu-id="f7af2-168">It is not necessary to call the <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlTypeMapping ^ ImportTypeMapping(Type ^ type, System::String ^ defaultNamespace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="f7af2-169">要為其產生類型對應的 .NET Framework 類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-169">The .NET Framework type for which to generate a type mapping.</span>
          </span>
        </param>
        <param name="defaultNamespace">
          <span data-ttu-id="f7af2-170">要使用的預設 XML 命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-170">The default XML namespace to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7af2-171">使用指定的類型和命名空間，針對 .NET Framework 類型產生 XML 結構描述項目的對應。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-171">Generates a mapping to an XML Schema element for a .NET Framework type, using the specified type and namespace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7af2-172">某個類型與 XML 結構描述項目的內部 .NET Framework 對應。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-172">Internal .NET Framework mapping of a type to an XML Schema element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7af2-173">不需要呼叫<xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A>直接的方法。</span><span class="sxs-lookup"><span data-stu-id="f7af2-173">It is not necessary to call the <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type, System.Xml.Serialization.XmlRootAttribute root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type, class System.Xml.Serialization.XmlRootAttribute root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlTypeMapping ^ ImportTypeMapping(Type ^ type, System::Xml::Serialization::XmlRootAttribute ^ root);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="f7af2-174">要為其產生類型對應的 .NET Framework 類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-174">The .NET Framework type for which to generate a type mapping.</span>
          </span>
        </param>
        <param name="root">
          <span data-ttu-id="f7af2-175">套用至此類型的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-175">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> attribute that is applied to the type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7af2-176">使用指定的類型和屬性，針對 .NET Framework 類型產生 XML 結構描述項目的對應。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-176">Generates a mapping to an XML Schema element for a .NET Framework type, using the specified type and attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7af2-177">
            <see cref="T:System.Xml.Serialization.XmlTypeMapping" />，代表 .NET Framework 類型與 XML 結構描述項目的對應。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-177">An <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> that represents a mapping of a .NET Framework type to an XML Schema element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7af2-178">不需要呼叫<xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A>直接的方法。</span><span class="sxs-lookup"><span data-stu-id="f7af2-178">It is not necessary to call the <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type, class System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlTypeMapping ^ ImportTypeMapping(Type ^ type, System::Xml::Serialization::XmlRootAttribute ^ root, System::String ^ defaultNamespace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="f7af2-179">要為其產生類型對應的 .NET Framework 類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-179">The .NET Framework type for which to generate a type mapping.</span>
          </span>
        </param>
        <param name="root">
          <span data-ttu-id="f7af2-180">套用至此類型的 <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-180">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> attribute that is applied to the type.</span>
          </span>
        </param>
        <param name="defaultNamespace">
          <span data-ttu-id="f7af2-181">要使用的預設 XML 命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-181">The default XML namespace to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7af2-182">使用指定的類型、屬性和命名空間，針對 .NET Framework 類型產生 XML 結構描述項目的對應。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-182">Generates a mapping to an XML Schema element for a .NET Framework type, using the specified type, attribute, and namespace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f7af2-183">
            <see cref="T:System.Xml.Serialization.XmlTypeMapping" />，其中含有某個類型與 XML 結構描述項目的內部 .NET Framework 對應。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-183">An <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> that contains the internal .NET Framework mapping of a type to an XML Schema element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7af2-184">不需要呼叫<xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A>直接的方法。</span><span class="sxs-lookup"><span data-stu-id="f7af2-184">It is not necessary to call the <xref:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping%2A> method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IncludeType">
      <MemberSignature Language="C#" Value="public void IncludeType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IncludeType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncludeType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="f7af2-185">要為其儲存類型對應資訊的 .NET Framework 類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-185">The .NET Framework type for which to save type mapping information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7af2-186">納入類型的對應，以便稍後叫用匯入方法時使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-186">Includes mappings for a type for later use when import methods are invoked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7af2-187">不需要呼叫<xref:System.Xml.Serialization.XmlReflectionImporter.IncludeType%2A>直接的方法。</span><span class="sxs-lookup"><span data-stu-id="f7af2-187">It is not necessary to call the <xref:System.Xml.Serialization.XmlReflectionImporter.IncludeType%2A> method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IncludeTypes">
      <MemberSignature Language="C#" Value="public void IncludeTypes (System.Reflection.ICustomAttributeProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IncludeTypes(class System.Reflection.ICustomAttributeProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncludeTypes (provider As ICustomAttributeProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncludeTypes(System::Reflection::ICustomAttributeProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Reflection.ICustomAttributeProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="f7af2-188">
            <see cref="T:System.Reflection.ICustomAttributeProvider" /> 類別的執行個體，其中包含衍生自 <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> 屬性的自訂屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-188">An instance of the <see cref="T:System.Reflection.ICustomAttributeProvider" /> class that contains custom attributes derived from the <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f7af2-189">納入衍生類型的對應，以便稍後叫用匯入方法時使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f7af2-189">Includes mappings for derived types for later use when import methods are invoked.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>