<Type Name="XmlTextAttribute" FullName="System.Xml.Serialization.XmlTextAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cd1d340d704f2f3871d98c0ff007f941da7ed18b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720762" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlTextAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlTextAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 在序列化或還原序列化包含它的類別之後，應該將成員視為 XML 文字。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlTextAttribute>屬於一系列屬性可控制如何<xref:System.Xml.Serialization.XmlSerializer>序列化和還原序列化物件 (透過其<xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>和<xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>方法)。 如需類似屬性的完整清單，請參閱[屬性，控制 XML 序列化](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)。  
  
 只有一個執行個體<xref:System.Xml.Serialization.XmlTextAttribute>類別，可套用在類別中。  
  
 您可以套用<xref:System.Xml.Serialization.XmlTextAttribute>公用欄位和公用讀取/寫入屬性會傳回基本類型和列舉型別。  
  
 您可以套用<xref:System.Xml.Serialization.XmlTextAttribute>欄位或屬性，傳回字串陣列。 您也可以套用屬性的型別陣列<xref:System.Object>，但是您必須設定<xref:System.Xml.Serialization.XmlTextAttribute.Type%2A>字串的屬性。 在此情況下，任何陣列中插入的字串會序列化為 XML 文字。  
  
 <xref:System.Xml.Serialization.XmlTextAttribute>也可以套用至傳回欄位<xref:System.Xml.XmlNode>或陣列<xref:System.Xml.XmlNode>物件。  
  
 根據預設，<xref:System.Xml.Serialization.XmlSerializer>序列化為 XML 項目類別成員。 不過，如果您套用<xref:System.Xml.Serialization.XmlTextAttribute>給成員，<xref:System.Xml.Serialization.XmlSerializer>它的值轉譯為 XML 文字。 這表示此值會編碼為 XML 項目的內容。  
  
 [XML 結構描述定義工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)偶爾會產生<xref:System.Xml.Serialization.XmlTextAttribute>時建立的類別從 XML 結構描述定義 (XSD) 檔案。 這會發生時的結構描述包含`complexType`具有混合內容; 在此情況下，對應的類別包含要傳回的字串陣列的成員<xref:System.Xml.Serialization.XmlTextAttribute>套用。 例如，當`Xml Schema Definition`工具就會處理此結構描述：  
  
```  
<xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace=""   
xmlns:xs="http://www.w3.org/2001/XMLSchema">  
  <xs:element name="LinkList" type="LinkList" />  
  <xs:complexType name="LinkList" mixed="true">  
    <xs:sequence>  
      <xs:element minOccurs="1" maxOccurs="1" name="id" type="xs:int" />  
      <xs:element minOccurs="0" maxOccurs="1" name="name" type="xs:string" />  
      <xs:element minOccurs="0" maxOccurs="1" name="next" type="LinkList" />  
    </xs:sequence>  
  </xs:complexType>  
</xs:schema>  
```  
  
 會產生下列類別 （額外的空格和註解已移除）：  
  
 [!code-csharp[XmlTextAttribute#0](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlTextAttribute/cs/source.cs#0)]
 [!code-vb[XmlTextAttribute#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlTextAttribute/vb/source.vb#0)]  
  
 如需屬性用法的詳細資訊，請參閱[屬性](~/docs/standard/attributes/index.md)。  
  
> [!NOTE]
>  您可以使用 word`XmlText`取代較長程式碼中<xref:System.Xml.Serialization.XmlTextAttribute>。  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlText" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTextAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以覆寫的方式，<xref:System.Xml.Serialization.XmlSerializer>序列化公用欄位或公用讀取/寫入屬性，藉由建立<xref:System.Xml.Serialization.XmlAttributes>，並設定其<xref:System.Xml.Serialization.XmlAttributes.XmlText%2A>屬性<xref:System.Xml.Serialization.XmlTextAttribute>。 如需詳細資訊，請參閱 <xref:System.Xml.Serialization.XmlAttributeOverrides> 類別。  
  
   
  
## Examples  
 下列範例會序列化類別，其中包含名為的公用欄位`Comment`。 此範例套用<xref:System.Xml.Serialization.XmlTextAttribute>到欄位，藉此覆寫其序列化為 XML 項目，並改為將它序列化為 XML 文字。  
  
 [!code-cpp[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute.XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute.XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextAttribute(Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">要序列化之成員的 <see cref="T:System.Type" />。</param>
        <summary>初始化 <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以覆寫的方式，<xref:System.Xml.Serialization.XmlSerializer>序列化公用欄位或公用讀取/寫入屬性，藉由建立<xref:System.Xml.Serialization.XmlAttributes>，並設定其<xref:System.Xml.Serialization.XmlAttributes.XmlText%2A>屬性<xref:System.Xml.Serialization.XmlTextAttribute>。 如需詳細資訊，請參閱 <xref:System.Xml.Serialization.XmlAttributeOverrides> 類別。  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTextAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 所產生之文字的XML 結構描述定義語言 (XSD) 資料型別。</summary>
        <value>XML 結構描述 (XSD) 資料型別，如全球資訊網協會 (www.w3.org ) 文件＜XML Schema Part 2: Datatypes＞中所定義。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定<xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A>到 XML 結構描述簡單資料類型的屬性會影響所產生的 XML 格式。 例如，將屬性設定為 「 日期 」 會造成產生的文字來格式化一般日期樣式，例如： 2001年-08-31。 相反地，將屬性設定為"dateTime"的結果，會導致由國際標準組織所定義的標準化文件 8601，「 表示相互轉換的日期和時間 」，例如： 2001年-08-15T06:59:11.0508456-07:00。  
  
 設定的效果<xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A>時使用，也會看到屬性[XML 結構描述定義工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)產生 XML 結構描述編譯的檔案。 如需有關如何使用工具的詳細資訊，請參閱[XML 結構描述定義工具和 XML 序列化](~/docs/standard/serialization/the-xml-schema-definition-tool-and-xml-serialization.md)。  
  
 下表列出與它們對應的.NET 之 XML 結構描述簡單資料類型。  
  
 XML 結構描述`base64Binary`和`hexBinary`資料類型使用的陣列<xref:System.Byte>結構，並套用<xref:System.Xml.Serialization.XmlTextAttribute>與<xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A>"base64Binary"或"hexBinary"，適當地設定。 XML 結構描述`time`和`date`資料類型，使用<xref:System.DateTime>輸入和套用<xref:System.Xml.Serialization.XmlTextAttribute>與<xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A>設為 「 日期 」 或 「 時間 」。  
  
 對應到字串，每一個 XML 結構描述資料型別，套用<xref:System.Xml.Serialization.XmlTextAttribute>具有其<xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A>屬性設定為 XML 結構描述資料類型。 請注意這不會變更序列化格式，只有該成員的結構描述。  
  
> [!NOTE]
>  屬性是區分大小寫，，因此您必須將它設定於其中一個 XML 結構描述資料類型。  
  
> [!NOTE]
>  將二進位資料做為 XML 項目會比將它傳遞為 XML 屬性更有效率。  
  
 如需有關 XML 結構描述資料類型的詳細資訊，請參閱全球資訊網協會 (www.w3.org) 文件名為 「 XML 結構描述組件 2:: 資料類型"。  
  
|XSD 資料類型|.NET 資料類型|  
|-------------------|--------------------|  
|anyURI|<xref:System.String>|  
|base64Binary|陣列<xref:System.Byte>物件|  
|boolean|<xref:System.Boolean>|  
|byte|<xref:System.SByte>|  
|date|<xref:System.DateTime>|  
|dateTime|<xref:System.DateTime>|  
|decimal|<xref:System.Decimal>|  
|double|<xref:System.Double>|  
|ENTITY|<xref:System.String>|  
|實體|<xref:System.String>|  
|float|<xref:System.Single>|  
|gDay|<xref:System.String>|  
|gMonth|<xref:System.String>|  
|gMonthDay|<xref:System.String>|  
|gYear|<xref:System.String>|  
|gYearMonth|<xref:System.String>|  
|hexBinary|陣列<xref:System.Byte>物件|  
|識別碼|<xref:System.String>|  
|IDREF|<xref:System.String>|  
|IDREFS|<xref:System.String>|  
|int|<xref:System.Int32>|  
|整數|<xref:System.String>|  
|語言|<xref:System.String>|  
|long|<xref:System.Int64>|  
|名稱|<xref:System.String>|  
|NCName|<xref:System.String>|  
|negativeInteger|<xref:System.String>|  
|NMTOKEN|<xref:System.String>|  
|NMTOKENS|<xref:System.String>|  
|normalizedString|<xref:System.String>|  
|nonNegativeInteger|<xref:System.String>|  
|nonPositiveInteger|<xref:System.String>|  
|NOTATION|<xref:System.String>|  
|positiveInteger|<xref:System.String>|  
|QName|<xref:System.Xml.XmlQualifiedName>|  
|持續期間|<xref:System.String>|  
|字串|<xref:System.String>|  
|short|<xref:System.Int16>|  
|時間|<xref:System.DateTime>|  
|token|<xref:System.String>|  
|unsignedByte|<xref:System.Byte>|  
|unsignedInt|<xref:System.UInt32>|  
|unsignedLong|<xref:System.UInt64>|  
|unsignedShort|<xref:System.UInt16>|  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">您指定的 XML 結構描述資料型別無法對應至 .NET 資料型別。</exception>
        <exception cref="T:System.InvalidOperationException">您指定的 XML 結構描述資料型別對於該屬性無效，且無法轉換為成員型別。</exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlTextAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定成員的型別。</summary>
        <value>成員的 <see cref="T:System.Type" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Type>屬性只能設定基本類型和列舉型別。  
  
 <xref:System.Xml.Serialization.XmlTextAttribute>也可以套用至傳回欄位<xref:System.Xml.XmlNode>或陣列<xref:System.Xml.XmlNode>物件。  
  
 您可以套用<xref:System.Xml.Serialization.XmlTextAttribute>欄位或屬性，傳回字串陣列。 您也可以套用屬性的型別陣列<xref:System.Object>，但是您必須設定<xref:System.Xml.Serialization.XmlTextAttribute.Type%2A>字串的屬性。 在此情況下，任何陣列中插入的字串會序列化為 XML 文字。  
  
   
  
## Examples  
 [!code-cpp[Classic XmlTextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlTextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlTextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlTextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlTextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>