<Type Name="XmlArrayAttribute" FullName="System.Xml.Serialization.XmlArrayAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ddef83aa2ea85604a1ecfd958fe2a6aeb21ffee4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720862" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlArrayAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlArrayAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlArrayAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlArrayAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlArrayAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 必須將特定類別成員序列化為 XML 項目的陣列。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlArrayAttribute>屬於一系列屬性可控制如何<xref:System.Xml.Serialization.XmlSerializer>序列化或還原序列化物件。 如需類似屬性的完整清單，請參閱[屬性，控制 XML 序列化](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)。  
  
 您可以套用<xref:System.Xml.Serialization.XmlArrayAttribute>至公用的欄位或讀取/寫入屬性，傳回物件的陣列。 您可以也將其套用至集合並傳回欄位<xref:System.Collections.ArrayList>或傳回該物件會實作任何欄位<xref:System.Collections.IEnumerable>介面。  
  
 當您將套用<xref:System.Xml.Serialization.XmlArrayAttribute>類別成員<xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>方法<xref:System.Xml.Serialization.XmlSerializer>類別產生的 XML 項目巢狀的序列從該成員。 XML 結構描述文件 （.xsd 檔案），表示這類陣列做為`complexType`。 例如，如果要序列化的類別代表訂單，您可以產生所購買的項目陣列藉由套用<xref:System.Xml.Serialization.XmlArrayAttribute>為公用的欄位，傳回物件的陣列，代表訂單項目。  
  
 如果沒有屬性會套用至公用欄位或屬性，傳回複雜或基本類型物件的陣列<xref:System.Xml.Serialization.XmlSerializer>依預設會產生巢狀的 XML 元素的順序。 若要更精確地控制產生了哪些 XML 項目，套用<xref:System.Xml.Serialization.XmlArrayItemAttribute>和<xref:System.Xml.Serialization.XmlArrayAttribute>欄位或屬性。 範例中，依預設，產生的 XML 元素名稱是衍生自成員識別項您可以藉由設定變更產生的 XML 元素名稱<xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A>屬性。  
  
 如果序列化的陣列，包含特定類型的項目，而且所有的類別衍生自該型別，您必須使用<xref:System.Xml.Serialization.XmlArrayItemAttribute>宣告每個型別。  
  
> [!NOTE]
>  您可以使用`XmlArray`取代較長程式碼中<xref:System.Xml.Serialization.XmlArrayAttribute>。  
  
 如需屬性用法的詳細資訊，請參閱[屬性](~/docs/standard/attributes/index.md)。  
  
   
  
## Examples  
 下列範例會序列化為 XML 文件，其中包含數個物件陣列的類別執行個體。 <xref:System.Xml.Serialization.XmlArrayAttribute>套用至成員成為 XML 項目陣列。  
  
 [!code-cpp[Classic XmlArrayAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlArray" />
    <altmember cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需屬性用法的詳細資訊，請參閱[屬性](~/docs/standard/attributes/index.md)。  
  
   
  
## Examples  
 下列範例會將指派<xref:System.Xml.Serialization.XmlArrayAttribute>至兩個陣列。  
  
 [!code-cpp[Classic XmlArrayAttribute.XmlArrayAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.XmlArrayAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.XmlArrayAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayAttribute(System::String ^ elementName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">
          <see cref="T:System.Xml.Serialization.XmlSerializer" /> 產生的 XML 項目名稱。</param>
        <summary>初始化 <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 類別的新執行個體，指定 XML 文件執行個體中產生的 XML 項目名稱。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需屬性用法的詳細資訊，請參閱[屬性](~/docs/standard/attributes/index.md)。  
  
   
  
## Examples  
 下列範例會將指派<xref:System.Xml.Serialization.XmlArrayAttribute>至兩個陣列，並且會序列化的類別執行個體，其中包含這些陣列。  
  
 [!code-cpp[Classic XmlArrayAttribute.XmlArrayAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.XmlArrayAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.XmlArrayAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute1 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlArrayAttribute.XmlArrayAttribute1 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlArrayAttribute.XmlArrayAttribute1 Example/Common/MyClass1.xml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定指定給序列化陣列的 XML 項目名稱。</summary>
        <value>序列化陣列的 XML 項目名稱。 預設值為被指派了 <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 的成員名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定<xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A>當您想以不同的成員識別碼產生的 XML 項目名稱。  
  
 您可以將設定為相同<xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A>值到一個以上的成員，只要產生的 XML 文件使用 XML 命名空間區別同名的成員。 如需有關使用命名空間和前置詞的名稱建立 XML 文件中的詳細資訊，請參閱<xref:System.Xml.Serialization.XmlSerializerNamespaces>。  
  
   
  
## Examples  
 下列範例會序列化的執行個體`Library`類別，其中包含一個名為屬性`Books`所傳回的陣列`Book`項目。 此範例會使用<xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A>屬性來指定 XML 元素的陣列應該命名為`My_Books`而不是`Books`。  
  
 [!code-cpp[Classic XmlArrayAttribute.ElementName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.ElementName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.ElementName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.ElementName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.ElementName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.ElementName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.Namespace" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.Form" />
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayAttribute.Form" />
      <MemberSignature Language="VB.NET" Value="Public Property Form As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm Form { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 產生的 XML 項目名稱是限定的還是非限定的。</summary>
        <value>其中一個 <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 值。 預設值為 <see langword="XmlSchemaForm.None" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlArrayAttribute.Form%2A>屬性會決定是否限定或未限定 XML 項目名稱。 <xref:System.Xml.Serialization.XmlArrayAttribute.Form%2A>屬性符合 1999年全球資訊網協會 (www.w3.org) 文件標題為 「 xml 命名空間。 」  
  
 如果<xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A>屬性設定為任何值，正在嘗試設定<xref:System.Xml.Serialization.XmlElementAttribute.Form%2A>屬性`XmlSchemaForm.Unqualified`擲回例外狀況。  
  
 預設的設定， `XmlSchemaForm.None`，指示<xref:System.Xml.Serialization.XmlSerializer>來檢查 XML 文件，以判斷是否為限定的命名空間的結構描述。 如果結構描述未指定個別的項目或屬性的值<xref:System.Xml.Serialization.XmlSerializer>使用`elementFormDefault`和`attributeFormDefault`用於判斷是否為限定的元素或屬性的值。 下列 XML 程式碼會顯示結構描述：  
  
```  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified"... >  
   <element name="Name"/>  
   <attribute name="Number"/>  
</schema>  
```  
  
 當<xref:System.Xml.Serialization.XmlSerializer>讀取結構描述，<xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A>值均`Name`和`Number`是`XmlSchemaForm.None`，但`Name`元素為限定，而`Number`項目是不合格。  
  
   
  
## Examples  
 下列範例會序列化的執行個體`Enterprises`類別。 兩個 XML 項目具有相同的本機名稱 (`Company`) 但不同的前置詞。 範例會設定<xref:System.Xml.Serialization.XmlArrayAttribute.Form%2A>屬性設定為`XmlForm.Qualified`可確保完整的名稱在 XML 執行個體。  
  
 [!code-cpp[Classic XmlArrayAttribute.Form Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.Form Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.ElementName" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.Namespace" />
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否必須將成員序列化為 <see langword="xsi:nil" /> 屬性設為 <see langword="true" /> 的空 XML 標記。</summary>
        <value>
          如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 產生 <see langword="true" /> 屬性，則為 <see langword="xsi:nil" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 結構的 XML 結構描述規格可讓 XML 文件明確表示項目的內容遺漏。 這類項目包含屬性`xsi:nil`設`true`。 如需詳細資訊，請參閱全球資訊網協會 (www.w3.org) 規格標題為 「 XML 結構描述第 1 部分： 結構。 」  
  
 如果<xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A>屬性設定為`true`、`xsi:nil`屬性就會產生的類別成員，已設定成`null`。 例如，如果您設定名為某個欄位`MyStringArray`至`null`、<xref:System.Xml.Serialization.XmlSerializer>會產生下列 XML 程式碼。  
  
```  
<MyStringArray xsi:nil = "true" />  
```  
  
 如果<xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A>屬性是`false`，會產生任何 XML 元素。  
  
> [!NOTE]
>  您不能套用<xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A>成員的屬性型別為實值類型，因為實值類型不能包含`null`。  
  
   
  
## Examples  
 下列範例包含兩個陣列： 一個包含<xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A>屬性設定為`true`，和另一個具有<xref:System.Xml.Serialization.XmlArrayAttribute.IsNullable%2A>屬性設定為`false`。  
  
 [!code-cpp[Classic XmlArrayAttribute.IsNullable Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.IsNullable Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 XML 項目的命名空間。</summary>
        <value>XML 項目的命名空間。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.XmlArrayAttribute.Namespace%2A>屬性可讓您建立完整的 XML 項目名稱。 <xref:System.Xml.Serialization.XmlArrayAttribute.Namespace%2A>屬性符合建立標題為 「 xml 命名空間。 「 1999年全球資訊網協會 (www.w3.org) 文件中找到的 XML 命名空間的規則  
  
 若要建立具有前置詞相關聯的命名空間，您必須建立的執行個體<xref:System.Xml.Serialization.XmlSerializerNamespaces>類別，其中包含的命名空間和 XML 文件中使用前置詞。 當您在每個設定命名空間<xref:System.Xml.Serialization.XmlArrayAttribute>，它必須符合其中一個命名空間中<xref:System.Xml.Serialization.XmlSerializerNamespaces>。 產生 XML 時，每個陣列已正確加上指定的命名空間相關聯的前置詞。  
  
   
  
## Examples  
 下列範例會序列化的執行個體`Library`包含兩個成員的類別，一個是包含書籍標題清單，另一個則包含期刊標題。 雖然這兩個 XML 元素名稱`Titles`，每個包含不同的前置詞。 此範例也會包含執行個體<xref:System.Xml.Serialization.XmlSerializerNamespaces>類別，其中包含的命名空間和前置詞，用來篩選的兩個項目名稱。  
  
 [!code-cpp[Classic XmlArrayAttribute.Namespace Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayAttribute.Namespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayAttribute.Namespace Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayAttribute.Namespace Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayAttribute.Namespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayAttribute.Namespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.ElementName" />
        <altmember cref="P:System.Xml.Serialization.XmlArrayAttribute.Form" />
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayAttribute.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定項目序列化或還原序列化的明確順序。</summary>
        <value>程式碼產生的順序。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder>列舉型別，以指示<xref:System.Web.Services.Description.ServiceDescriptionImporter>來產生程式碼，以設定<xref:System.Xml.Serialization.XmlElementAttribute.Order%2A>屬性。  
  
> [!IMPORTANT]
>  一次<xref:System.Xml.Serialization.XmlElementAttribute.Order%2A>屬性已使用上一個公用屬性或欄位型別中的，它必須套用到所有的公用屬性和欄位，該型別和所有繼承的類型。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>