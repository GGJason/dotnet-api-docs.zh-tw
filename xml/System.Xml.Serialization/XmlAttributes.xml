<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlAttributes.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5edc9671be617b74dce18228bd8abdf746446c9c8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">edc9671be617b74dce18228bd8abdf746446c9c8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>Represents a collection of attribute objects that control how the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes and deserializes an object.</source>
          <target state="translated">表示用來控制 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 序列化與還原序列化物件方式的屬性 (Attribute) 物件集合。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>Creating the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> is part of a process that overrides the default way the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializes class instances.</source>
          <target state="translated">建立<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>會覆寫預設值的程序方式<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>序列化類別執行個體。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>For example, suppose you want to serialize an object that is created from a DLL which has an inaccessible source.</source>
          <target state="translated">例如，假設您想要序列化的 dll 無法存取來源所建立的物件。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>By using the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>, you can augment or otherwise control how the object is serialized.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>，您可以加強，或是控制如何將物件序列化。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>The members of the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> class correspond directly to a family of attribute classes that control serialization.</source>
          <target state="translated">成員<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>類別直接對應到一系列控制序列化的屬性類別。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>For example, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlText%2A&gt;</ph> property must be set to an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph>, which allows you to override serialization of a field or property by instructing the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to serialize the property value as XML text.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlText%2A&gt;</ph>屬性必須設定為<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph>，可讓您覆寫序列化的欄位或屬性，藉由指示<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>序列化為 XML 文字的屬性值。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>For a complete list of attributes that control serialization, see the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
          <target state="translated">屬性，以控制序列化的完整清單，請參閱<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>For more details on using the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> with the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> class, see <bpt id="p1">[</bpt>How to: Specify an Alternate Element Name for an XML Stream<ept id="p1">](~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md)</ept>.</source>
          <target state="translated">如需有關使用<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>與<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>類別，請參閱<bpt id="p1">[</bpt>How to： 指定的 XML 資料流的替代項目名稱<ept id="p1">](~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md)</ept>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>The following example serializes an instance of a class named <ph id="ph1">`Orchestra`</ph>, which contains a single field named <ph id="ph2">`Instruments`</ph> that returns an array of <ph id="ph3">`Instrument`</ph> objects.</source>
          <target state="translated">下列範例會序列化類別的執行個體<ph id="ph1">`Orchestra`</ph>，其中包含名為的單一欄位<ph id="ph2">`Instruments`</ph>所傳回的陣列<ph id="ph3">`Instrument`</ph>物件。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>A second class named <ph id="ph1">`Brass`</ph> inherits from the <ph id="ph2">`Instrument`</ph> class.</source>
          <target state="translated">名為第二個類別<ph id="ph1">`Brass`</ph>繼承自<ph id="ph2">`Instrument`</ph>類別。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>The example creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to override the <ph id="ph2">`Instrument`</ph> field--allowing the field to accept <ph id="ph3">`Brass`</ph> objects--and adds the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to an instance of the <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> class.</source>
          <target state="translated">此範例會建立<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件來覆寫<ph id="ph2">`Instrument`</ph>欄位--允許欄位接受<ph id="ph3">`Brass`</ph>物件-，並將<ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件的執行個體<ph id="ph5">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlAttributes">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributes" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributes" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlAttributes.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributes" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributes" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlAttributes.#ctor">
          <source>The following example serializes an instance of a class named <ph id="ph1">`Orchestra`</ph>, which contains a single field named <ph id="ph2">`Instruments`</ph> that returns an array of <ph id="ph3">`Instrument`</ph> objects.</source>
          <target state="translated">下列範例會序列化類別的執行個體<ph id="ph1">`Orchestra`</ph>，其中包含名為的單一欄位<ph id="ph2">`Instruments`</ph>所傳回的陣列<ph id="ph3">`Instrument`</ph>物件。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlAttributes.#ctor">
          <source>A second class named <ph id="ph1">`Brass`</ph> inherits from the <ph id="ph2">`Instrument`</ph> class.</source>
          <target state="translated">名為第二個類別<ph id="ph1">`Brass`</ph>繼承自<ph id="ph2">`Instrument`</ph>類別。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlAttributes.#ctor">
          <source>The example creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to override the <ph id="ph2">`Instrument`</ph> field--allowing the field to accept <ph id="ph3">`Brass`</ph> objects--and adds the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to an instance of the <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> class.</source>
          <target state="translated">此範例會建立<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件來覆寫<ph id="ph2">`Instrument`</ph>欄位--允許欄位接受<ph id="ph3">`Brass`</ph>物件-，並將<ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件的執行個體<ph id="ph5">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
          <source>A class that can provide alternative implementations of attributes that control XML serialization.</source>
          <target state="translated">類別，可為控制 XML 序列化的屬性提供替代實作。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributes" /&gt;</ph> class and customizes how the <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes and deserializes an object.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributes" /&gt;</ph> 類別的新執行個體，並自訂 <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 如何序列化和還原序列化物件。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
          <source>Use the default constructor for the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> class, rather than using this constructor.</source>
          <target state="translated">使用的預設建構函式<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>類別，而不是使用這個建構函式。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /&gt;</ph> to override.</source>
          <target state="translated">取得或設定要覆寫的 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /&gt;</ph> to override.</source>
          <target state="translated">要覆寫的 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyAttributeAttribute&gt;</ph> can be applied to a member that returns an array of <ph id="ph2">&lt;xref:System.Xml.XmlAttribute&gt;</ph> objects on deserialization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyAttributeAttribute&gt;</ph>可以套用至成員傳回的陣列<ph id="ph2">&lt;xref:System.Xml.XmlAttribute&gt;</ph>上還原序列化的物件。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
          <source>This allows the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to deserialize any attributes that do not have a corresponding member in the object being deserialized--thus those elements are "unknown" to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
          <target state="translated">這可讓<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>還原序列化而沒有相對應的成員物件的任何屬性還原序列化-因此這些項目會以 「 不明 」 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
          <source>This is useful when the XML stream has been altered by an XML Web service, or when it is known that random data is always included with the XML stream.</source>
          <target state="translated">當 XML 資料流已改變由 XML Web 服務，或所知的隨機資料一定會包含 XML 資料流，這非常有用。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute%2A&gt;</ph> property allows you to override the serialization of a member to which the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyAttributeAttribute&gt;</ph> has been applied.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute%2A&gt;</ph>屬性可讓您覆寫的成員序列化<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyAttributeAttribute&gt;</ph>已套用。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>Gets the collection of <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /&gt;</ph> objects to override.</source>
          <target state="translated">取得要覆寫的 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /&gt;</ph> 物件的集合。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /&gt;</ph> object that represents the collection of <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /&gt;</ph> 物件，表示 <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /&gt;</ph> 物件的集合。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> can be applied to a member that returns an array of <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> objects on deserialization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph>可以套用至成員傳回的陣列<ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph>上還原序列化的物件。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>This allows the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to deserialize any elements that do not have a corresponding member in the object being deserialized--thus those elements are "unknown" to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
          <target state="translated">這可讓<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>還原序列化而沒有相對應的成員物件的任何項目還原序列化-因此這些項目會以 「 不明 」 <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>This is useful when the XML stream has been altered by an XML Web service, or when it is known that random data is always included with the XML stream.</source>
          <target state="translated">當 XML 資料流已改變由 XML Web 服務，或所知的隨機資料一定會包含 XML 資料流，這非常有用。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A&gt;</ph> property allows you to override the serialization of a member to function as a member to which the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> has been applied.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A&gt;</ph>屬性可讓您覆寫序列化成員，才能成為其成員函式的<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph>已套用。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> object and adds it to the collection of objects accessed through the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A&gt;</ph> property.</source>
          <target state="translated">下列範例會建立新<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph>物件，並將它加入至透過存取物件的集合<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object is then added to a <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object which is used to create an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件接著會新增至<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>物件用來建立<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> is used to serialize or deserialize an object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>用來序列化或還原序列化物件。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>To see the effect of using the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttributes&gt;</ph> property, create an XML document named "UnknownElements.xml" by running the <ph id="ph2">`SerializeObject`</ph> method in the <ph id="ph3">`Main`</ph> method.</source>
          <target state="translated">若要查看使用的效果<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttributes&gt;</ph>屬性，建立 XML 文件藉由執行名為"UnknownElements.xml"<ph id="ph2">`SerializeObject`</ph>方法中的<ph id="ph3">`Main`</ph>方法。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>Edit the resulting document to include other (unknown) elements.</source>
          <target state="translated">編輯產生的文件，包括其他 （未知） 的項目。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
          <source>Comment out the <ph id="ph1">`SerializeObject`</ph> call in the <ph id="ph2">`Main`</ph> method, and uncomment the call to the <ph id="ph3">`DeserializeObject`</ph> method, which prints out the name and value of any unknown XML element.</source>
          <target state="translated">標記為註解<ph id="ph1">`SerializeObject`</ph>呼叫中<ph id="ph2">`Main`</ph>方法，並取消註解的呼叫<ph id="ph3">`DeserializeObject`</ph>方法，會列印出的名稱和任何的值未知的 XML 項目。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>Gets or sets an object that specifies how the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes a public field or read/write property that returns an array.</source>
          <target state="translated">取得或設定物件，指定 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 如何序列化公用欄位或會傳回陣列的讀取/寫入屬性。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlArrayAttribute" /&gt;</ph> that specifies how the <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes a public field or read/write property that returns an array.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlArrayAttribute" /&gt;</ph>，指定 <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 如何序列化公用欄位或會傳回陣列的讀取/寫入屬性。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>There are two ways in which a public field or public read/write property that returns an array is serialized by the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>: the default serialization, and the controlled serialization.</source>
          <target state="translated">有兩種方式以公用欄位或公用讀取/寫入屬性，傳回陣列的已序列化<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>： 預設序列化，並控制的序列化。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>In the default serialization, no attribute is applied to the member.</source>
          <target state="translated">在預設序列化，沒有屬性會套用至成員。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>When serialized, the array is serialized as a nested sequence of XML elements with the XML element name of the nested sequence taken from the member name.</source>
          <target state="translated">當序列化時，陣列會序列化為 XML 元素的名稱取自成員名稱的巢狀序列巢狀序列的 XML 項目。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>To control the serialization more precisely, apply an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> to the field or property.</source>
          <target state="translated">若要更精確地控制序列化，套用<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph>欄位或屬性。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>For example, you can change the generated XML element name from the default to a different name by setting the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A&gt;</ph> property to a new value.</source>
          <target state="translated">比方說，您可以變更產生的 XML 項目名稱與預設值為另一個名稱藉由設定<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A&gt;</ph>屬性設為新值。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A&gt;</ph> property allows you to override the default serialization, as well as the serialization controlled by applying an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> to the member.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A&gt;</ph>屬性可讓您覆寫預設序列化，以及藉由套用控制序列化<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph>的成員。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>For example, you can change the XML element name generated from the default (the member identifier) to a new value.</source>
          <target state="translated">例如，您可以變更為新值從預設 （成員識別項） 產生的 XML 項目名稱。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>In addition, if you apply an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> to a member, it is overridden by any <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> that is assigned to the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A&gt;</ph> property.</source>
          <target state="translated">此外，如果您套用<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph>給成員，它會覆寫任何<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph>，指派給<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>The following example serializes a class that contains a field named <ph id="ph1">`Members`</ph> that returns an array of objects.</source>
          <target state="translated">下列範例會序列化類別，其中包含名為的欄位<ph id="ph1">`Members`</ph>傳回物件的陣列。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArray">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> is used to override the serialization of the field, and rename the element name to <ph id="ph2">`Staff`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph>用來覆寫欄位的序列化和重新命名的項目名稱<ph id="ph2">`Staff`</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
          <source>Gets or sets a collection of objects that specify how the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes items inserted into an array returned by a public field or read/write property.</source>
          <target state="translated">取得或設定物件集合，指定 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 如何序列化項目 (用來插入至公用欄位或讀取/寫入屬性所傳回的陣列)。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /&gt;</ph> object that contains a collection of <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /&gt;</ph> objects.</source>
          <target state="translated">包含 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /&gt;</ph> 物件集合的 <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A&gt;</ph> property allows you to specify the derived types that can be inserted into an array returned by a public field or public read/write property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A&gt;</ph>屬性可讓您指定的衍生的類型，可以插入到公用欄位或公用讀取/寫入屬性所傳回的陣列。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
          <source>For each new type you want the field or property to accept, create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute&gt;</ph> object and <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayItemAttributes.Add%2A&gt;</ph> it to the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlArrayItemAttributes&gt;</ph>) returned by the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A&gt;</ph> property.</source>
          <target state="translated">針對每個您想要的欄位或屬性以接受新的類型，建立<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute&gt;</ph>物件和<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayItemAttributes.Add%2A&gt;</ph>它<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlArrayItemAttributes&gt;</ph>) 所傳回<ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
          <source>(The new type must be derived from the type already accepted by the field or property.) <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A&gt;</ph> the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object and specify the type of the object that contains the field or property, and the name of the field or property.</source>
          <target state="translated">（新的類型必須衍生自已接受的欄位或屬性的型別）。<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A&gt;</ph> <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>物件，並指定欄位或屬性，包含的物件類型和欄位或屬性的名稱。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
          <source>Construct an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> with the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object before calling <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> method.</source>
          <target state="translated">建構<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>與<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>物件之前先呼叫<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph>或<ph id="ph4">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
          <source>The following example serializes a class that contains a field named <ph id="ph1">`Members`</ph> that returns an array of objects.</source>
          <target state="translated">下列範例會序列化類別，其中包含名為的欄位<ph id="ph1">`Members`</ph>傳回物件的陣列。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
          <source>Two <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute&gt;</ph> objects are created to allow the field to accept objects that derive from the base class named <ph id="ph2">`Member`</ph>.</source>
          <target state="translated">兩個<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute&gt;</ph>會建立物件，以便接受衍生自名為的基底類別的物件欄位<ph id="ph2">`Member`</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
          <source>Each object is added to the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> through the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A&gt;</ph> property.</source>
          <target state="translated">每個物件加入至<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>透過<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>Gets or sets an object that specifies how the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes a public field or public read/write property as an XML attribute.</source>
          <target state="translated">取得或設定物件，指定 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 如何將公用欄位或公用讀取/寫入屬性序列化為 XML 屬性。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /&gt;</ph> that controls the serialization of a public field or read/write property as an XML attribute.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /&gt;</ph>，控制將公用欄位或讀取/寫入屬性 (Property) 序列化為 XML 屬性 (Attribute)。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>By default, if no attribute is applied to a public field or public read/write property, it is serialized as an XML element.</source>
          <target state="translated">根據預設，如果沒有屬性會套用至公用欄位或公用讀取/寫入屬性，它會序列化為 XML 項目。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>You can also instruct the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to generate an XML attribute by applying an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph> to the field or property.</source>
          <target state="translated">您也可以指示<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>來產生 XML 屬性，藉由套用<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph>欄位或屬性。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A&gt;</ph> property allows you to override the default serialization, as well as the serialization controlled by applying an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph> to the member.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A&gt;</ph>屬性可讓您覆寫預設序列化，以及藉由套用控制序列化<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph>的成員。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>To do this, create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph> and set its properties (such as <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A&gt;</ph>).</source>
          <target state="translated">若要這樣做，請建立<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph>並設定其屬性 (例如<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>Assign the new object to the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object.</source>
          <target state="translated">若要將新物件指派<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>Add the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object and specify the type of the object that contains the field or property, and the name of the field or property.</source>
          <target state="translated">新增<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>物件，並指定欄位或屬性，包含的物件類型和欄位或屬性的名稱。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>Lastly, create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object and call the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> method.</source>
          <target state="translated">最後，建立<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>使用<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>物件並呼叫<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph>或<ph id="ph4">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>The following example serializes a class named <ph id="ph1">`Group`</ph> that contains a property named <ph id="ph2">`GroupName`</ph>; the <ph id="ph3">`GroupName`</ph> property is serialized as an XML attribute.</source>
          <target state="translated">下列範例會序列化類別，名為<ph id="ph1">`Group`</ph>，包含屬性，名為<ph id="ph2">`GroupName`</ph>;<ph id="ph3">`GroupName`</ph>屬性序列化為 XML 屬性。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>The example creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> and an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to override the default serialization of the field.</source>
          <target state="translated">此範例會建立<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>和<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>覆寫欄位的預設序列化的物件。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>The example then creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph> to specifically override the property, and the object is set to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A&gt;</ph> property The <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object is added to the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object with the name of the overridden member specified.</source>
          <target state="translated">這個範例會建立<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph>特別覆寫屬性，以及的物件設定為<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A&gt;</ph>屬性<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件加入至<ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>覆寫指定的成員名稱的物件。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
          <source>Finally, an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> is constructed and returned using the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object.</source>
          <target state="translated">最後，<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>是建構及傳回使用<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
          <source>Gets or sets an object that allows you to distinguish between a set of choices.</source>
          <target state="translated">取得或設定物件，讓您在一組選項間進行區別。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /&gt;</ph> that can be applied to a class member that is serialized as an <ph id="ph2">&lt;see langword="xsi:choice" /&gt;</ph> element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /&gt;</ph>，可以套用至序列化為 <ph id="ph2">&lt;see langword="xsi:choice" /&gt;</ph> 項目的類別成員。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>Gets or sets the default value of an XML element or attribute.</source>
          <target state="translated">取得或設定 XML 項目或屬性的預設值。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the default value of an XML element or attribute.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>，表示 XML 項目或屬性的預設值。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>You can specify the default value of an XML element or XML attribute by applying a <ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph> to a member.</source>
          <target state="translated">您可以藉由套用指定的 XML 項目或 XML 屬性的預設值<ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph>成員。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>To examine the result of applying the value, compile the application into a DLL or executable, and pass the resulting file as an argument to the XML Schema Definition tool (XSD.exe).</source>
          <target state="translated">若要檢查套用的值的結果，應用程式編譯為 DLL 或可執行檔，並將產生的檔案做為引數傳遞至 XML 結構描述定義工具 (XSD.exe)。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>In the XML schema document, a default value is assigned to the <ph id="ph1">`default`</ph> attribute.</source>
          <target state="translated">在 XML 結構描述文件中，預設值指派給<ph id="ph1">`default`</ph>屬性。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>In the following example, the default for the <ph id="ph1">\&lt;</ph>Animal&gt; element is "Dogs."</source>
          <target state="translated">在下列範例中的預設值為<ph id="ph1">\&lt;</ph>動物 &gt; 項目，則 「 Dogs。 」</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>To override the default value, create an <ph id="ph1">&lt;xref:System.Object&gt;</ph> and assign it to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A&gt;</ph>.</source>
          <target state="translated">若要覆寫預設值，建立<ph id="ph1">&lt;xref:System.Object&gt;</ph>並將它指派給<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>If the value assigned to a field or property is equal to the default value for that field or property, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> does not serialize the value to the XML-instance.</source>
          <target state="translated">如果指派給欄位或屬性的值等於該欄位或屬性的預設值<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>不會序列化至 XML 執行個體的值。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>This is because the assigned value can be recovered from the XML schema.</source>
          <target state="translated">這是因為指定的值可以復原從 XML 結構描述。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>In other words, setting a field or property to its own default value is equivalent of not setting it at all.</source>
          <target state="translated">換句話說，欄位或屬性設為預設值是未設定的對等。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>Likewise, if no value is set for the field or property, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> uses the default value found in the schema.</source>
          <target state="translated">同樣地，如果未不設定任何值的欄位或屬性，如<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>使用結構描述中找到的預設值。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>In both cases, (setting the property to its default, or not setting it at all), the XML-document instance does not contain any value for the property.</source>
          <target state="translated">同時案例、 （將屬性設定為其預設值，或未設定），在 XML 文件執行個體不包含任何屬性的值。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>You can use the class constructors instead of the schema to assign the default values.</source>
          <target state="translated">您可以指派預設值，而不是結構描述使用類別建構函式。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>If you are using Xsd.exe to generate a classes from schemas, you can comment out or remove all of the [System.ComponentModel.DefaultValueAttribute("myFieldName")] attributes from the class files.</source>
          <target state="translated">如果您使用 Xsd.exe 從結構描述產生類別，您可以標記為註解或移除的所有 [System.ComponentModel.DefaultValueAttribute("myFieldName")] 屬性的類別檔案。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>The following example shows a class named <ph id="ph1">`Pet`</ph> that contains a field that has a default value set to "Dog".</source>
          <target state="translated">下列範例會示範名為類別<ph id="ph1">`Pet`</ph>，其中包含具有預設值設定為"Dog"的欄位。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>However, the example also creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object, and sets its <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A&gt;</ph> property to a new default value ("Cat").</source>
          <target state="translated">不過，此範例也會建立<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件，並設定其<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A&gt;</ph>屬性為新的預設值 ("Cat")。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>This overrides the original default value.</source>
          <target state="translated">這會覆寫原始的預設值。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>Thus, if the field value is set to "Cat", the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> treats it as the default value, and not serialize it.</source>
          <target state="translated">因此，如果欄位值設定為"Cat"，<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>會將它視為預設值，並不將其序列化。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
          <source>If it is set to any other value, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializes the value.</source>
          <target state="translated">如果設定為任何其他值，<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>序列化值。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlElements">
          <source>Gets a collection of objects that specify how the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes a public field or read/write property as an XML element.</source>
          <target state="translated">取得物件的集合，指定 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 如何將公用欄位或讀取/寫入屬性序列化為 XML 項目。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlElements">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttributes" /&gt;</ph> that contains a collection of <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> objects.</source>
          <target state="translated">包含 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttributes" /&gt;</ph> 物件集合的 <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlElements">
          <source>For each overridden member that is serialized as an XML element, you must add a new <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttributes&gt;</ph> by calling the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlElementAttributes.Add%2A&gt;</ph> method.</source>
          <target state="translated">針對每個覆寫的成員序列化為 XML 項目，您必須加入新<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>至<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttributes&gt;</ph>藉由呼叫<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlElementAttributes.Add%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlElements">
          <source>By default, an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttributes&gt;</ph> object is created and assigned to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlElements%2A&gt;</ph> property.</source>
          <target state="translated">根據預設，<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttributes&gt;</ph>物件已建立並指派給<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlElements%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlElements">
          <source>The following example serializes the <ph id="ph1">`Transportation`</ph> class, which contains a single field named <ph id="ph2">`Vehicles`</ph> that returns an <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">下列範例會序列化<ph id="ph1">`Transportation`</ph>類別，其中包含名為的單一欄位<ph id="ph2">`Vehicles`</ph>傳回<ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlElements">
          <source>The example applies two <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> attributes to the <ph id="ph2">`Vehicles`</ph> field.</source>
          <target state="translated">此範例適用於兩個<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>屬性至<ph id="ph2">`Vehicles`</ph>欄位。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlElements">
          <source>The example creates two <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> objects and adds them to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttributes&gt;</ph> collection of an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object.</source>
          <target state="translated">此範例會建立兩個<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>物件，並將它們加入至<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttributes&gt;</ph>集合<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlElements">
          <source>To allow the array to accept different object types, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object is added to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object.</source>
          <target state="translated">若要允許要接受不同的物件類型的陣列<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件加入至<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
          <source>Gets or sets an object that specifies how the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes an enumeration member.</source>
          <target state="translated">取得或設定物件，指定 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 如何序列化列舉型別 (Enumeration) 成員。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlEnumAttribute" /&gt;</ph> that specifies how the <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes an enumeration member.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlEnumAttribute" /&gt;</ph>，指定 <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 如何序列化列舉型別成員。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
          <source>For each identifier you want to override, you must create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object, and set the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A&gt;</ph> property to an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlEnumAttribute&gt;</ph> that overrides the identifier.</source>
          <target state="translated">對於每個您想要覆寫的識別項，您必須建立<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件，並設定<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A&gt;</ph>屬性<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlEnumAttribute&gt;</ph>會覆寫的識別項。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
          <source>Add the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object and specify both the <ph id="ph3">&lt;xref:System.Type&gt;</ph> of the class that contains the enumeration, and the overridden member name.</source>
          <target state="translated">新增<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>物件，並同時指定<ph id="ph3">&lt;xref:System.Type&gt;</ph>的類別，其中包含列舉型別，並覆寫的成員名稱。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
          <source>The following example serializes two classes named <ph id="ph1">`Food`</ph> and <ph id="ph2">`FoodType`</ph>.</source>
          <target state="translated">下列範例會序列化名為兩個類別<ph id="ph1">`Food`</ph>和<ph id="ph2">`FoodType`</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
          <source>The <ph id="ph1">`FoodType`</ph> class contains two enumerations that are overridden and, for each enumeration, the example creates an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlEnumAttribute&gt;</ph> object that it assigns to the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A&gt;</ph> property of an <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`FoodType`</ph>類別包含兩個列舉型別，會覆寫，且每個列舉，此範例會建立<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlEnumAttribute&gt;</ph>物件，它會指派<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A&gt;</ph>屬性<ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
          <source>The example then adds the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object, which is used to create an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
          <target state="translated">此範例會接著將<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>物件，用來建立<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source>Gets or sets a value that specifies whether or not the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes a public field or public read/write property.</source>
          <target state="translated">取得或設定數值，指定 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 是否要序列化公用欄位或公用讀取/寫入屬性。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> must not serialize the field or property; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 必須不序列化欄位或屬性，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source>By default, all public fields and public read/write properties are serialized by the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
          <target state="translated">根據預設，所有公用欄位或公用讀取/寫入屬性會由序列化<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source>That is, the value of each public field or property is persisted as an XML element or XML attribute in an XML-document instance.</source>
          <target state="translated">也就是說，每個公用欄位或屬性的值會保存為 XML 項目或 XML 文件執行個體中的 XML 屬性。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source>To override the default serialization of a field or property, create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object, and set its <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">若要覆寫欄位或屬性的預設序列化，請建立<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件，並設定其<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A&gt;</ph>屬性<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A&gt;</ph> the object to an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object and specify the type of the object that contains the field or property to ignore, and the name of the field or property to ignore.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A&gt;</ph> 物件<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>物件，並指定包含的欄位或屬性，以略過的物件類型和欄位或屬性，以略過的名稱。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source>If an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph> is applied to a field or property, the field or property is ignored.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph>會套用至欄位或屬性中，欄位或屬性會被忽略。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source>However you can override that behavior by creating an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object, setting its <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A&gt;</ph> property to <ph id="ph3">`false`</ph>, adding it to an <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object specifying the type of the object that contains the field or property, and the name of the field or property.</source>
          <target state="translated">不過您可以建立覆寫該行為<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件，並設定其<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A&gt;</ph>屬性<ph id="ph3">`false`</ph>，將它加入至<ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>物件，指定的欄位或屬性，包含的物件類型和名稱欄位或屬性。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source>The following example serializes a class named <ph id="ph1">`Group`</ph>, which contains a member named <ph id="ph2">`Comment`</ph> to which the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph> is applied.</source>
          <target state="translated">下列範例會序列化類別，名為<ph id="ph1">`Group`</ph>，其中包含名為<ph id="ph2">`Comment`</ph>的<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph>套用。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
          <source>The example creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object, and sets the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A&gt;</ph> property to <ph id="ph3">`false`</ph>, thereby overriding the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph>.</source>
          <target state="translated">此範例會建立<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件和集合<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A&gt;</ph>屬性<ph id="ph3">`false`</ph>，藉此覆寫<ph id="ph4">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.Xmlns">
          <source>Gets or sets a value that specifies whether to keep all namespace declarations when an object containing a member that returns an <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /&gt;</ph> object is overridden.</source>
          <target state="translated">取得或設定數值，指定當物件包含傳回已覆寫 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /&gt;</ph> 物件的成員時，是否要保留所有的命名空間宣告。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.Xmlns">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the namespace declarations should be kept; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果應該保留命名空間宣告，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.Xmlns">
          <source>The following example contains a class named <ph id="ph1">`Student`</ph>.</source>
          <target state="translated">下列範例包含名為類別<ph id="ph1">`Student`</ph>。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.Xmlns">
          <source>The class contains a member named <ph id="ph1">`MyNamespaces`</ph> that returns an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> object.</source>
          <target state="translated">這個類別包含名為<ph id="ph1">`MyNamespaces`</ph>傳回<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.Xmlns">
          <source>The example creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object that is added to an instance of the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> class.</source>
          <target state="translated">此範例會建立<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件加入至執行個體<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.Xmlns">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.Xmlns%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, which instructs the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to preserve the namespaces when the serialization of the <ph id="ph4">`Student`</ph> object is overridden.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.Xmlns%2A&gt;</ph>屬性設定為<ph id="ph2">`true`</ph>，它會指示<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>保留命名空間時的序列化<ph id="ph4">`Student`</ph>物件會覆寫。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
          <source>Gets or sets an object that specifies how the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes a class as an XML root element.</source>
          <target state="translated">取得或設定物件，指定 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 如何將類別序列化為 XML (Root Element)。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlRootAttribute" /&gt;</ph> that overrides a class attributed as an XML root element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlRootAttribute" /&gt;</ph>，覆寫類別屬性為 XML 根項目。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object, an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object, and an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlRootAttribute&gt;</ph> object.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>物件<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件，和<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlRootAttribute&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
          <source>The example assigns the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlRootAttribute&gt;</ph> to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object, and adds the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to the <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object.</source>
          <target state="translated">此範例將指派<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlRootAttribute&gt;</ph>至<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A&gt;</ph>屬性<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件，並將加入<ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件<ph id="ph5">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
          <source>Lastly, the example gets the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object by passing the <ph id="ph2">&lt;xref:System.Type&gt;</ph> of the serialized class to the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object.</source>
          <target state="translated">最後，此範例會取得<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件，並傳遞<ph id="ph2">&lt;xref:System.Type&gt;</ph>要序列化的類別<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
          <source>(In this example, the <ph id="ph1">&lt;xref:System.Type&gt;</ph> is <ph id="ph2">`Group`</ph>.)</source>
          <target state="translated">(在此範例中，<ph id="ph1">&lt;xref:System.Type&gt;</ph>是<ph id="ph2">`Group`</ph>。)</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>Gets or sets an object that instructs the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> to serialize a public field or public read/write property as XML text.</source>
          <target state="translated">取得或設定物件，指定 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 將公用欄位或公用讀取/寫入屬性序列化為 XML 文字。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlTextAttribute" /&gt;</ph> that overrides the default serialization of a public property or field.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlTextAttribute" /&gt;</ph>，覆寫公用屬性或欄位的預設序列化。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>By default, a public field or public read/write property is serialized as an XML element by the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
          <target state="translated">根據預設，公用欄位或公用讀取/寫入屬性會序列化為 XML 項目由<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>However, it can force the field or property to be serialized as XML text by applying an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> to the field or property.</source>
          <target state="translated">不過，它可以強制的欄位或屬性序列化為 XML 文字，藉由套用<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph>欄位或屬性。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> cannot be applied to a field or property that returns an array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph>無法套用至欄位或屬性會傳回陣列。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>To override the default serialization of a field or property (that does not return an array), create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> and assign it to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlText%2A&gt;</ph> property of an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object.</source>
          <target state="translated">若要覆寫的欄位或屬性 （也就不會傳回陣列） 的預設序列化，請建立<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph>並將它指派給<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlText%2A&gt;</ph>屬性<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>Add the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object and specify the type of the object that contains the overridden field or property, and the name of the overridden field or property.</source>
          <target state="translated">新增<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>物件，指定類型的物件，其中包含覆寫的欄位或屬性，以及覆寫的欄位或屬性的名稱。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>The following example serializes the class named <ph id="ph1">`Group`</ph>, which contains a field named <ph id="ph2">`Comment`</ph>.</source>
          <target state="translated">下列範例會序列化命名的類別<ph id="ph1">`Group`</ph>，其中包含名為的欄位<ph id="ph2">`Comment`</ph>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>To override the default way the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializes the field, the example creates an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> and an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object.</source>
          <target state="translated">覆寫預設的方式<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>序列化 欄位中，此範例會建立<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>和<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>The example then creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> object, which it assigns to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlText%2A&gt;</ph> property, and adds the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object (with the name of the field to be serialized as XML text) to the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object.</source>
          <target state="translated">這個範例會建立<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph>物件，它會指派<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlText%2A&gt;</ph>屬性，並將<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件 （序列化為 XML 文字欄位的名稱） 來<ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlText">
          <source>Lastly the example creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object.</source>
          <target state="translated">此範例會建立最後<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>使用<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlAttributes.XmlType">
          <source>Gets or sets an object that specifies how the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes a class to which the <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlTypeAttribute" /&gt;</ph> has been applied.</source>
          <target state="translated">取得或設定物件，指定 <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> 如何序列化套用 <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlTypeAttribute" /&gt;</ph> 的類別。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlType">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlTypeAttribute" /&gt;</ph> that overrides an <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlTypeAttribute" /&gt;</ph> applied to a class declaration.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlTypeAttribute" /&gt;</ph>，會覆寫套用 <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlTypeAttribute" /&gt;</ph> 至類別宣告 (Class Declaration)。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlType">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTypeAttribute&gt;</ph> can be used to control how a type is serialized by the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTypeAttribute&gt;</ph>可以用來控制如何將類型序列化的<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlType">
          <source>For example, by default, when a type is serialized, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> uses the class name as the XML element name.</source>
          <target state="translated">例如，根據預設，當序列化的型別，<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>使用 XML 項目名稱與類別名稱。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlType">
          <source>By creating an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTypeAttribute&gt;</ph>, setting the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlType%2A&gt;</ph> property to it, and creating an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object, you can change the XML element name.</source>
          <target state="translated">藉由建立<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTypeAttribute&gt;</ph>，設定<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlType%2A&gt;</ph>屬性給它，而且建立<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>物件，您可以變更 XML 項目名稱。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlAttributes.XmlType">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTypeAttribute&gt;</ph> object, and assigns it to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlType%2A&gt;</ph> property of an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTypeAttribute&gt;</ph>物件，並將其指派給<ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlType%2A&gt;</ph>屬性<ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>物件。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>