<Type Name="XmlAttributes" FullName="System.Xml.Serialization.XmlAttributes">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="88826ac681c8ab7dd00adbc5ba788903fe781fdb" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37484689" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlAttributes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAttributes extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAttributes" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAttributes" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAttributes" />
  <TypeSignature Language="F#" Value="type XmlAttributes = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="44d48-101">表示用來控制 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化與還原序列化物件方式的屬性 (Attribute) 物件集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="44d48-101">Represents a collection of attribute objects that control how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes and deserializes an object.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44d48-102">建立<xref:System.Xml.Serialization.XmlAttributes>會覆寫預設值的程序方式<xref:System.Xml.Serialization.XmlSerializer>序列化類別執行個體。</span><span class="sxs-lookup"><span data-stu-id="44d48-102">Creating the <xref:System.Xml.Serialization.XmlAttributes> is part of a process that overrides the default way the <xref:System.Xml.Serialization.XmlSerializer> serializes class instances.</span></span> <span data-ttu-id="44d48-103">例如，假設您想要序列化物件所建立的 dll 所無法存取的來源。</span><span class="sxs-lookup"><span data-stu-id="44d48-103">For example, suppose you want to serialize an object that is created from a DLL which has an inaccessible source.</span></span> <span data-ttu-id="44d48-104">使用<xref:System.Xml.Serialization.XmlAttributeOverrides>，您可以擴充或控制如何將物件序列化。</span><span class="sxs-lookup"><span data-stu-id="44d48-104">By using the <xref:System.Xml.Serialization.XmlAttributeOverrides>, you can augment or otherwise control how the object is serialized.</span></span>  
  
 <span data-ttu-id="44d48-105">成員<xref:System.Xml.Serialization.XmlAttributes>類別直接對應到一系列控制序列化的屬性類別。</span><span class="sxs-lookup"><span data-stu-id="44d48-105">The members of the <xref:System.Xml.Serialization.XmlAttributes> class correspond directly to a family of attribute classes that control serialization.</span></span> <span data-ttu-id="44d48-106">例如，<xref:System.Xml.Serialization.XmlAttributes.XmlText%2A>屬性必須設為<xref:System.Xml.Serialization.XmlTextAttribute>，可讓您藉由指示會覆寫的欄位或屬性序列化<xref:System.Xml.Serialization.XmlSerializer>序列化為 XML 文字的屬性值。</span><span class="sxs-lookup"><span data-stu-id="44d48-106">For example, the <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> property must be set to an <xref:System.Xml.Serialization.XmlTextAttribute>, which allows you to override serialization of a field or property by instructing the <xref:System.Xml.Serialization.XmlSerializer> to serialize the property value as XML text.</span></span> <span data-ttu-id="44d48-107">如需控制序列化的屬性的完整清單，請參閱<xref:System.Xml.Serialization.XmlSerializer>。</span><span class="sxs-lookup"><span data-stu-id="44d48-107">For a complete list of attributes that control serialization, see the <xref:System.Xml.Serialization.XmlSerializer>.</span></span>  
  
 <span data-ttu-id="44d48-108">如需使用詳細<xref:System.Xml.Serialization.XmlAttributeOverrides>具有<xref:System.Xml.Serialization.XmlAttributes>類別，請參閱[如何： 指定 XML Stream 替代項目名稱](~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md)。</span><span class="sxs-lookup"><span data-stu-id="44d48-108">For more details on using the <xref:System.Xml.Serialization.XmlAttributeOverrides> with the <xref:System.Xml.Serialization.XmlAttributes> class, see [How to: Specify an Alternate Element Name for an XML Stream](~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44d48-109">下列範例會序列化名為類別的執行個體`Orchestra`，其中包含名為的單一欄位`Instruments`所傳回的陣列`Instrument`物件。</span><span class="sxs-lookup"><span data-stu-id="44d48-109">The following example serializes an instance of a class named `Orchestra`, which contains a single field named `Instruments` that returns an array of `Instrument` objects.</span></span> <span data-ttu-id="44d48-110">名為第二個類別`Brass`繼承自`Instrument`類別。</span><span class="sxs-lookup"><span data-stu-id="44d48-110">A second class named `Brass` inherits from the `Instrument` class.</span></span> <span data-ttu-id="44d48-111">此範例會建立<xref:System.Xml.Serialization.XmlAttributes>物件來覆寫`Instrument`欄位--允許欄位接受`Brass`物件，並新增<xref:System.Xml.Serialization.XmlAttributes>物件的執行個體<xref:System.Xml.Serialization.XmlAttributeOverrides>類別。</span><span class="sxs-lookup"><span data-stu-id="44d48-111">The example creates an <xref:System.Xml.Serialization.XmlAttributes> object to override the `Instrument` field--allowing the field to accept `Brass` objects--and adds the <xref:System.Xml.Serialization.XmlAttributes> object to an instance of the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="44d48-112">初始化 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-112">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributes" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributes.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributes();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="44d48-113">初始化 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-113">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributes" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="44d48-114">下列範例會序列化名為類別的執行個體`Orchestra`，其中包含名為的單一欄位`Instruments`所傳回的陣列`Instrument`物件。</span><span class="sxs-lookup"><span data-stu-id="44d48-114">The following example serializes an instance of a class named `Orchestra`, which contains a single field named `Instruments` that returns an array of `Instrument` objects.</span></span> <span data-ttu-id="44d48-115">名為第二個類別`Brass`繼承自`Instrument`類別。</span><span class="sxs-lookup"><span data-stu-id="44d48-115">A second class named `Brass` inherits from the `Instrument` class.</span></span> <span data-ttu-id="44d48-116">此範例會建立<xref:System.Xml.Serialization.XmlAttributes>物件來覆寫`Instrument`欄位--允許欄位接受`Brass`物件，並新增<xref:System.Xml.Serialization.XmlAttributes>物件的執行個體<xref:System.Xml.Serialization.XmlAttributeOverrides>類別。</span><span class="sxs-lookup"><span data-stu-id="44d48-116">The example creates an <xref:System.Xml.Serialization.XmlAttributes> object to override the `Instrument` field--allowing the field to accept `Brass` objects--and adds the <xref:System.Xml.Serialization.XmlAttributes> object to an instance of the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAttributes (System.Reflection.ICustomAttributeProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ICustomAttributeProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (provider As ICustomAttributeProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAttributes(System::Reflection::ICustomAttributeProvider ^ provider);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAttributes : System.Reflection.ICustomAttributeProvider -&gt; System.Xml.Serialization.XmlAttributes" Usage="new System.Xml.Serialization.XmlAttributes provider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="provider" Type="System.Reflection.ICustomAttributeProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="44d48-117">類別，可為控制 XML 序列化的屬性提供替代實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-117">A class that can provide alternative implementations of attributes that control XML serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44d48-118">初始化 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 類別的新執行個體，並自訂 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化和還原序列化物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-118">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlAttributes" /> class and customizes how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes and deserializes an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44d48-119">使用預設建構函式<xref:System.Xml.Serialization.XmlAttributes>類別，而不是使用這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="44d48-119">Use the default constructor for the <xref:System.Xml.Serialization.XmlAttributes> class, rather than using this constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAnyAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAnyAttributeAttribute XmlAnyAttribute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAnyAttributeAttribute XmlAnyAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlAnyAttribute As XmlAnyAttributeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAnyAttributeAttribute ^ XmlAnyAttribute { System::Xml::Serialization::XmlAnyAttributeAttribute ^ get(); void set(System::Xml::Serialization::XmlAnyAttributeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlAnyAttribute : System.Xml.Serialization.XmlAnyAttributeAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAnyAttributeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44d48-120">取得或設定要覆寫的 <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-120">Gets or sets the <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> to override.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44d48-121">要覆寫的 <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-121">The <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> to override.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44d48-122"><xref:System.Xml.Serialization.XmlAnyAttributeAttribute>可以套用至傳回陣列的成員<xref:System.Xml.XmlAttribute>在還原序列化的物件。</span><span class="sxs-lookup"><span data-stu-id="44d48-122">The <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> can be applied to a member that returns an array of <xref:System.Xml.XmlAttribute> objects on deserialization.</span></span> <span data-ttu-id="44d48-123">這可讓<xref:System.Xml.Serialization.XmlSerializer>還原序列化並沒有對應的成員，在物件被任何屬性還原序列化，因此這些項目是 「 未知 」 到<xref:System.Xml.Serialization.XmlSerializer>。</span><span class="sxs-lookup"><span data-stu-id="44d48-123">This allows the <xref:System.Xml.Serialization.XmlSerializer> to deserialize any attributes that do not have a corresponding member in the object being deserialized--thus those elements are "unknown" to the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="44d48-124">當 XML 資料流已遭到改變的 XML Web service，或稱為隨機資料一律會包含 XML 資料流，這非常有用。</span><span class="sxs-lookup"><span data-stu-id="44d48-124">This is useful when the XML stream has been altered by an XML Web service, or when it is known that random data is always included with the XML stream.</span></span>  
  
 <span data-ttu-id="44d48-125"><xref:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute%2A>屬性可讓您覆寫的成員序列化<xref:System.Xml.Serialization.XmlAnyAttributeAttribute>已套用。</span><span class="sxs-lookup"><span data-stu-id="44d48-125">The <xref:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute%2A> property allows you to override the serialization of a member to which the <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> has been applied.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAnyElements">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAnyElementAttributes XmlAnyElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAnyElementAttributes XmlAnyElements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlAnyElements As XmlAnyElementAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAnyElementAttributes ^ XmlAnyElements { System::Xml::Serialization::XmlAnyElementAttributes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlAnyElements : System.Xml.Serialization.XmlAnyElementAttributes" Usage="System.Xml.Serialization.XmlAttributes.XmlAnyElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAnyElementAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44d48-126">取得要覆寫的 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 物件的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-126">Gets the collection of <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> objects to override.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44d48-127">
            <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> 物件，表示 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 物件的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-127">An <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> object that represents the collection of <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44d48-128"><xref:System.Xml.Serialization.XmlAnyElementAttribute>可以套用至傳回陣列的成員<xref:System.Xml.XmlElement>在還原序列化的物件。</span><span class="sxs-lookup"><span data-stu-id="44d48-128">The <xref:System.Xml.Serialization.XmlAnyElementAttribute> can be applied to a member that returns an array of <xref:System.Xml.XmlElement> objects on deserialization.</span></span> <span data-ttu-id="44d48-129">這可讓<xref:System.Xml.Serialization.XmlSerializer>還原序列化並沒有對應的成員，在物件被任何項目還原序列化，因此這些項目是 「 未知 」 到<xref:System.Xml.Serialization.XmlSerializer>。</span><span class="sxs-lookup"><span data-stu-id="44d48-129">This allows the <xref:System.Xml.Serialization.XmlSerializer> to deserialize any elements that do not have a corresponding member in the object being deserialized--thus those elements are "unknown" to the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="44d48-130">當 XML 資料流已遭到改變的 XML Web service，或稱為隨機資料一律會包含 XML 資料流，這非常有用。</span><span class="sxs-lookup"><span data-stu-id="44d48-130">This is useful when the XML stream has been altered by an XML Web service, or when it is known that random data is always included with the XML stream.</span></span>  
  
 <span data-ttu-id="44d48-131"><xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A>屬性可讓您覆寫序列化成員函式的成員身分的<xref:System.Xml.Serialization.XmlAnyElementAttribute>已套用。</span><span class="sxs-lookup"><span data-stu-id="44d48-131">The <xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A> property allows you to override the serialization of a member to function as a member to which the <xref:System.Xml.Serialization.XmlAnyElementAttribute> has been applied.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44d48-132">下列範例會建立新<xref:System.Xml.Serialization.XmlAnyElementAttribute>物件，並將它新增至透過存取物件的集合<xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="44d48-132">The following example creates a new <xref:System.Xml.Serialization.XmlAnyElementAttribute> object and adds it to the collection of objects accessed through the <xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A> property.</span></span> <span data-ttu-id="44d48-133"><xref:System.Xml.Serialization.XmlAttributes>接著會新增至物件<xref:System.Xml.Serialization.XmlAttributeOverrides>物件，用以建立<xref:System.Xml.Serialization.XmlSerializer>物件。</span><span class="sxs-lookup"><span data-stu-id="44d48-133">The <xref:System.Xml.Serialization.XmlAttributes> object is then added to a <xref:System.Xml.Serialization.XmlAttributeOverrides> object which is used to create an <xref:System.Xml.Serialization.XmlSerializer> object.</span></span> <span data-ttu-id="44d48-134"><xref:System.Xml.Serialization.XmlSerializer>用來序列化或還原序列化物件。</span><span class="sxs-lookup"><span data-stu-id="44d48-134">The <xref:System.Xml.Serialization.XmlSerializer> is used to serialize or deserialize an object.</span></span> <span data-ttu-id="44d48-135">若要查看使用的效果<xref:System.Xml.Serialization.XmlAnyElementAttributes>屬性，建立名為"UnknownElements.xml 」，藉由執行 XML 文件`SerializeObject`方法中的`Main`方法。</span><span class="sxs-lookup"><span data-stu-id="44d48-135">To see the effect of using the <xref:System.Xml.Serialization.XmlAnyElementAttributes> property, create an XML document named "UnknownElements.xml" by running the `SerializeObject` method in the `Main` method.</span></span> <span data-ttu-id="44d48-136">編輯產生的文件，包括其他 （未知） 的項目。</span><span class="sxs-lookup"><span data-stu-id="44d48-136">Edit the resulting document to include other (unknown) elements.</span></span> <span data-ttu-id="44d48-137">標記為註解`SerializeObject`呼叫中的`Main`方法，並取消註解的呼叫`DeserializeObject`方法，它會列印出的名稱和任何的值未知的 XML 項目。</span><span class="sxs-lookup"><span data-stu-id="44d48-137">Comment out the `SerializeObject` call in the `Main` method, and uncomment the call to the `DeserializeObject` method, which prints out the name and value of any unknown XML element.</span></span>  
  
 [!code-cpp[XmlAttributes.XmlAnyElements#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/CPP/xmlanyover.cpp#1)]
 [!code-csharp[XmlAttributes.XmlAnyElements#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/CS/xmlanyover.cs#1)]
 [!code-vb[XmlAttributes.XmlAnyElements#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAttributes.XmlAnyElements/VB/xmlanyover.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="XmlArray">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlArrayAttribute XmlArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlArrayAttribute XmlArray" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlArray" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlArray As XmlArrayAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlArrayAttribute ^ XmlArray { System::Xml::Serialization::XmlArrayAttribute ^ get(); void set(System::Xml::Serialization::XmlArrayAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlArray : System.Xml.Serialization.XmlArrayAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlArrayAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44d48-138">取得或設定物件，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化公用欄位或會傳回陣列的讀取/寫入屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-138">Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or read/write property that returns an array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44d48-139">
            <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化公用欄位或會傳回陣列的讀取/寫入屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-139">An <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or read/write property that returns an array.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44d48-140">有兩種方式，在其中的公用欄位或公用讀取/寫入屬性會傳回陣列序列化<xref:System.Xml.Serialization.XmlSerializer>： 預設的序列化，並控制的序列化。</span><span class="sxs-lookup"><span data-stu-id="44d48-140">There are two ways in which a public field or public read/write property that returns an array is serialized by the <xref:System.Xml.Serialization.XmlSerializer>: the default serialization, and the controlled serialization.</span></span>  
  
 <span data-ttu-id="44d48-141">在預設的序列化，沒有屬性會套用至成員。</span><span class="sxs-lookup"><span data-stu-id="44d48-141">In the default serialization, no attribute is applied to the member.</span></span> <span data-ttu-id="44d48-142">當序列化時，陣列會序列化為 XML 項目名稱，取自成員名稱的巢狀序列的巢狀序列的 XML 項目中。</span><span class="sxs-lookup"><span data-stu-id="44d48-142">When serialized, the array is serialized as a nested sequence of XML elements with the XML element name of the nested sequence taken from the member name.</span></span>  
  
 <span data-ttu-id="44d48-143">若要更精確地控制序列化，套用<xref:System.Xml.Serialization.XmlArrayAttribute>欄位或屬性。</span><span class="sxs-lookup"><span data-stu-id="44d48-143">To control the serialization more precisely, apply an <xref:System.Xml.Serialization.XmlArrayAttribute> to the field or property.</span></span> <span data-ttu-id="44d48-144">比方說，您可以變更產生的 XML 項目名稱從預設值為另一個名稱設定<xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A>屬性設為新值。</span><span class="sxs-lookup"><span data-stu-id="44d48-144">For example, you can change the generated XML element name from the default to a different name by setting the <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> property to a new value.</span></span>  
  
 <span data-ttu-id="44d48-145"><xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A>屬性可讓您覆寫預設序列化，以及藉由套用控制序列化<xref:System.Xml.Serialization.XmlArrayAttribute>成員。</span><span class="sxs-lookup"><span data-stu-id="44d48-145">The <xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A> property allows you to override the default serialization, as well as the serialization controlled by applying an <xref:System.Xml.Serialization.XmlArrayAttribute> to the member.</span></span> <span data-ttu-id="44d48-146">例如，您可以變更為新值從預設值 （成員識別項） 產生的 XML 項目名稱。</span><span class="sxs-lookup"><span data-stu-id="44d48-146">For example, you can change the XML element name generated from the default (the member identifier) to a new value.</span></span> <span data-ttu-id="44d48-147">此外，如果您套用<xref:System.Xml.Serialization.XmlArrayAttribute>成員，就會覆寫任何<xref:System.Xml.Serialization.XmlArrayAttribute>指派給<xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="44d48-147">In addition, if you apply an <xref:System.Xml.Serialization.XmlArrayAttribute> to a member, it is overridden by any <xref:System.Xml.Serialization.XmlArrayAttribute> that is assigned to the <xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44d48-148">下列範例會序列化類別，其中包含一個名為欄位`Members`傳回物件的陣列。</span><span class="sxs-lookup"><span data-stu-id="44d48-148">The following example serializes a class that contains a field named `Members` that returns an array of objects.</span></span> <span data-ttu-id="44d48-149"><xref:System.Xml.Serialization.XmlArrayAttribute>用來覆寫序列化的欄位，並重新命名的項目名稱`Staff`。</span><span class="sxs-lookup"><span data-stu-id="44d48-149">The <xref:System.Xml.Serialization.XmlArrayAttribute> is used to override the serialization of the field, and rename the element name to `Staff`.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlArray Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlArrayItems">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlArrayItemAttributes XmlArrayItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlArrayItemAttributes XmlArrayItems" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlArrayItems As XmlArrayItemAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlArrayItemAttributes ^ XmlArrayItems { System::Xml::Serialization::XmlArrayItemAttributes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlArrayItems : System.Xml.Serialization.XmlArrayItemAttributes" Usage="System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlArrayItemAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44d48-150">取得或設定物件集合，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化項目 (用來插入至公用欄位或讀取/寫入屬性所傳回的陣列)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-150">Gets or sets a collection of objects that specify how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes items inserted into an array returned by a public field or read/write property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44d48-151">包含 <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> 物件集合的 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-151">An <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> object that contains a collection of <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44d48-152"><xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A>屬性可讓您指定可插入陣列公用欄位或公用讀取/寫入屬性所傳回的衍生型別。</span><span class="sxs-lookup"><span data-stu-id="44d48-152">The <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> property allows you to specify the derived types that can be inserted into an array returned by a public field or public read/write property.</span></span> <span data-ttu-id="44d48-153">針對您想要的欄位或屬性，以接受每個新類型，建立<xref:System.Xml.Serialization.XmlArrayItemAttribute>物件和<xref:System.Xml.Serialization.XmlArrayItemAttributes.Add%2A>以便<xref:System.Xml.Serialization.XmlArrayItemAttributes>) 所傳回<xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="44d48-153">For each new type you want the field or property to accept, create an <xref:System.Xml.Serialization.XmlArrayItemAttribute> object and <xref:System.Xml.Serialization.XmlArrayItemAttributes.Add%2A> it to the <xref:System.Xml.Serialization.XmlArrayItemAttributes>) returned by the <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> property.</span></span> <span data-ttu-id="44d48-154">（新的類型必須衍生自已接受的欄位或屬性的型別）。<xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> <xref:System.Xml.Serialization.XmlAttributes>物件到<xref:System.Xml.Serialization.XmlAttributeOverrides>物件，並指定包含的欄位或屬性的物件型別和欄位或屬性的名稱。</span><span class="sxs-lookup"><span data-stu-id="44d48-154">(The new type must be derived from the type already accepted by the field or property.) <xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> the <xref:System.Xml.Serialization.XmlAttributes> object to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object and specify the type of the object that contains the field or property, and the name of the field or property.</span></span> <span data-ttu-id="44d48-155">建構<xref:System.Xml.Serialization.XmlSerializer>具有<xref:System.Xml.Serialization.XmlAttributeOverrides>物件，再呼叫<xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>或<xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="44d48-155">Construct an <xref:System.Xml.Serialization.XmlSerializer> with the <xref:System.Xml.Serialization.XmlAttributeOverrides> object before calling <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> or <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44d48-156">下列範例會序列化類別，其中包含一個名為欄位`Members`傳回物件的陣列。</span><span class="sxs-lookup"><span data-stu-id="44d48-156">The following example serializes a class that contains a field named `Members` that returns an array of objects.</span></span> <span data-ttu-id="44d48-157">兩個<xref:System.Xml.Serialization.XmlArrayItemAttribute>物件會建立以允許接受衍生自名為的基底類別的物件欄位`Member`。</span><span class="sxs-lookup"><span data-stu-id="44d48-157">Two <xref:System.Xml.Serialization.XmlArrayItemAttribute> objects are created to allow the field to accept objects that derive from the base class named `Member`.</span></span> <span data-ttu-id="44d48-158">每個物件加入至<xref:System.Xml.Serialization.XmlAttributes>透過<xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="44d48-158">Each object is added to the <xref:System.Xml.Serialization.XmlAttributes> through the <xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlArrayItems Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlArrayItems Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlAttribute">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlAttributeAttribute XmlAttribute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlAttributeAttribute XmlAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlAttribute As XmlAttributeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlAttributeAttribute ^ XmlAttribute { System::Xml::Serialization::XmlAttributeAttribute ^ get(); void set(System::Xml::Serialization::XmlAttributeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlAttribute : System.Xml.Serialization.XmlAttributeAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAttributeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44d48-159">取得或設定物件，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何將公用欄位或公用讀取/寫入屬性序列化為 XML 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-159">Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or public read/write property as an XML attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44d48-160">
            <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />，控制將公用欄位或讀取/寫入屬性 (Property) 序列化為 XML 屬性 (Attribute)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-160">An <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> that controls the serialization of a public field or read/write property as an XML attribute.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44d48-161">根據預設，如果沒有屬性會套用至公用欄位或公用讀取/寫入屬性，它會序列化為 XML 項目。</span><span class="sxs-lookup"><span data-stu-id="44d48-161">By default, if no attribute is applied to a public field or public read/write property, it is serialized as an XML element.</span></span> <span data-ttu-id="44d48-162">您也可以指示<xref:System.Xml.Serialization.XmlSerializer>來產生 XML 屬性，藉由套用<xref:System.Xml.Serialization.XmlAttributeAttribute>欄位或屬性。</span><span class="sxs-lookup"><span data-stu-id="44d48-162">You can also instruct the <xref:System.Xml.Serialization.XmlSerializer> to generate an XML attribute by applying an <xref:System.Xml.Serialization.XmlAttributeAttribute> to the field or property.</span></span>  
  
 <span data-ttu-id="44d48-163"><xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A>屬性可讓您覆寫預設序列化，以及藉由套用控制序列化<xref:System.Xml.Serialization.XmlAttributeAttribute>成員。</span><span class="sxs-lookup"><span data-stu-id="44d48-163">The <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> property allows you to override the default serialization, as well as the serialization controlled by applying an <xref:System.Xml.Serialization.XmlAttributeAttribute> to the member.</span></span> <span data-ttu-id="44d48-164">若要這樣做，請建立<xref:System.Xml.Serialization.XmlAttributeAttribute>並設定其屬性 (例如<xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A>)。</span><span class="sxs-lookup"><span data-stu-id="44d48-164">To do this, create an <xref:System.Xml.Serialization.XmlAttributeAttribute> and set its properties (such as <xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A>).</span></span> <span data-ttu-id="44d48-165">指派新的物件，來<xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A>屬性<xref:System.Xml.Serialization.XmlAttributes>物件。</span><span class="sxs-lookup"><span data-stu-id="44d48-165">Assign the new object to the <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> property of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="44d48-166">新增<xref:System.Xml.Serialization.XmlAttributes>物件至<xref:System.Xml.Serialization.XmlAttributeOverrides>物件，並指定包含的欄位或屬性的物件型別和欄位或屬性的名稱。</span><span class="sxs-lookup"><span data-stu-id="44d48-166">Add the <xref:System.Xml.Serialization.XmlAttributes> object to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object and specify the type of the object that contains the field or property, and the name of the field or property.</span></span> <span data-ttu-id="44d48-167">最後，建立<xref:System.Xml.Serialization.XmlSerializer>使用<xref:System.Xml.Serialization.XmlAttributeOverrides>物件，然後呼叫<xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>或<xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="44d48-167">Lastly, create an <xref:System.Xml.Serialization.XmlSerializer> using the <xref:System.Xml.Serialization.XmlAttributeOverrides> object and call the <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> or <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44d48-168">下列範例會序列化類別，名為`Group`，其中包含名為的屬性`GroupName`;`GroupName`屬性序列化為 XML 屬性。</span><span class="sxs-lookup"><span data-stu-id="44d48-168">The following example serializes a class named `Group` that contains a property named `GroupName`; the `GroupName` property is serialized as an XML attribute.</span></span> <span data-ttu-id="44d48-169">此範例會建立<xref:System.Xml.Serialization.XmlAttributeOverrides>和<xref:System.Xml.Serialization.XmlAttributes>覆寫欄位的預設序列化的物件。</span><span class="sxs-lookup"><span data-stu-id="44d48-169">The example creates an <xref:System.Xml.Serialization.XmlAttributeOverrides> and an <xref:System.Xml.Serialization.XmlAttributes> object to override the default serialization of the field.</span></span> <span data-ttu-id="44d48-170">這個範例會建立<xref:System.Xml.Serialization.XmlAttributeAttribute>為了特別覆寫屬性，而且該物件會設定為<xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A>屬性<xref:System.Xml.Serialization.XmlAttributes>物件加入至<xref:System.Xml.Serialization.XmlAttributeOverrides>的覆寫的成員，指定名稱的物件。</span><span class="sxs-lookup"><span data-stu-id="44d48-170">The example then creates an <xref:System.Xml.Serialization.XmlAttributeAttribute> to specifically override the property, and the object is set to the <xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A> property The <xref:System.Xml.Serialization.XmlAttributes> object is added to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object with the name of the overridden member specified.</span></span> <span data-ttu-id="44d48-171">最後，<xref:System.Xml.Serialization.XmlSerializer>是建構及傳回使用<xref:System.Xml.Serialization.XmlAttributeOverrides>物件。</span><span class="sxs-lookup"><span data-stu-id="44d48-171">Finally, an <xref:System.Xml.Serialization.XmlSerializer> is constructed and returned using the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlChoiceIdentifier">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlChoiceIdentifierAttribute XmlChoiceIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlChoiceIdentifierAttribute XmlChoiceIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlChoiceIdentifier As XmlChoiceIdentifierAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlChoiceIdentifierAttribute ^ XmlChoiceIdentifier { System::Xml::Serialization::XmlChoiceIdentifierAttribute ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlChoiceIdentifier : System.Xml.Serialization.XmlChoiceIdentifierAttribute" Usage="System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlChoiceIdentifierAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44d48-172">取得或設定物件，讓您在一組選項間進行區別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-172">Gets or sets an object that allows you to distinguish between a set of choices.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44d48-173">
            <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />，可以套用至序列化為 <see langword="xsi:choice" /> 項目的類別成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-173">An <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> that can be applied to a class member that is serialized as an <see langword="xsi:choice" /> element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDefaultValue">
      <MemberSignature Language="C#" Value="public object XmlDefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object XmlDefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ XmlDefaultValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlDefaultValue : obj with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlDefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44d48-174">取得或設定 XML 項目或屬性的預設值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-174">Gets or sets the default value of an XML element or attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44d48-175">
            <see cref="T:System.Object" />，表示 XML 項目或屬性的預設值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-175">An <see cref="T:System.Object" /> that represents the default value of an XML element or attribute.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44d48-176">您可以藉由套用指定的 XML 項目或 XML 屬性的預設值<xref:System.ComponentModel.DefaultValueAttribute>成員。</span><span class="sxs-lookup"><span data-stu-id="44d48-176">You can specify the default value of an XML element or XML attribute by applying a <xref:System.ComponentModel.DefaultValueAttribute> to a member.</span></span> <span data-ttu-id="44d48-177">若要檢查套用的值的結果，應用程式編譯為 DLL 或可執行檔，並將產生的檔案做為引數傳遞至 XML 結構描述定義工具 (XSD.exe)。</span><span class="sxs-lookup"><span data-stu-id="44d48-177">To examine the result of applying the value, compile the application into a DLL or executable, and pass the resulting file as an argument to the XML Schema Definition tool (XSD.exe).</span></span> <span data-ttu-id="44d48-178">在 XML 結構描述文件中，預設值會指派給`default`屬性。</span><span class="sxs-lookup"><span data-stu-id="44d48-178">In the XML schema document, a default value is assigned to the `default` attribute.</span></span> <span data-ttu-id="44d48-179">在下列範例中的預設值為\<Animal > 項目是 「 Dogs 」。</span><span class="sxs-lookup"><span data-stu-id="44d48-179">In the following example, the default for the \<Animal> element is "Dogs."</span></span>  
  
```  
<?xml version="1.0"?>  
 <schema attributeFormDefault="qualified"   
 elementFormDefault="qualified" targetNamespace=""   
 xmlns="http://www.w3.org/2000/10/XMLSchema">  
   <element name="Pets" nullable="true" type="Pets"/>  
   <complexType name="Pets">  
     <sequence>  
       <element default="Dogs" name="Animal" nullable="true"   
        type="string" minOccurs="0"/>  
     </sequence>  
   </complexType>  
 </schema>  
```  
  
 <span data-ttu-id="44d48-180">若要覆寫預設值，建立<xref:System.Object>並將它指派給<xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A>。</span><span class="sxs-lookup"><span data-stu-id="44d48-180">To override the default value, create an <xref:System.Object> and assign it to the <xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A>.</span></span>  
  
 <span data-ttu-id="44d48-181">如果指派給欄位或屬性的值等於該欄位或屬性的預設值<xref:System.Xml.Serialization.XmlSerializer>不會序列化至 XML 執行個體的值。</span><span class="sxs-lookup"><span data-stu-id="44d48-181">If the value assigned to a field or property is equal to the default value for that field or property, the <xref:System.Xml.Serialization.XmlSerializer> does not serialize the value to the XML-instance.</span></span> <span data-ttu-id="44d48-182">這是因為指派的值可以復原從 XML 結構描述。</span><span class="sxs-lookup"><span data-stu-id="44d48-182">This is because the assigned value can be recovered from the XML schema.</span></span> <span data-ttu-id="44d48-183">換句話說，將欄位或屬性設定為預設值相當於未進行設定。</span><span class="sxs-lookup"><span data-stu-id="44d48-183">In other words, setting a field or property to its own default value is equivalent of not setting it at all.</span></span> <span data-ttu-id="44d48-184">同樣地，如果未不設定任何值的欄位或屬性，如<xref:System.Xml.Serialization.XmlSerializer>使用結構描述中找到的預設值。</span><span class="sxs-lookup"><span data-stu-id="44d48-184">Likewise, if no value is set for the field or property, the <xref:System.Xml.Serialization.XmlSerializer> uses the default value found in the schema.</span></span> <span data-ttu-id="44d48-185">同時的情況下，（將屬性設定為其預設值，或未設定），在 XML 文件執行個體不包含任何屬性的值。</span><span class="sxs-lookup"><span data-stu-id="44d48-185">In both cases, (setting the property to its default, or not setting it at all), the XML-document instance does not contain any value for the property.</span></span>  
  
 <span data-ttu-id="44d48-186">您可以指派預設值，而不是結構描述使用類別建構函式。</span><span class="sxs-lookup"><span data-stu-id="44d48-186">You can use the class constructors instead of the schema to assign the default values.</span></span> <span data-ttu-id="44d48-187">如果您使用 Xsd.exe 從結構描述產生類別，您可以標記為註解或移除的所有 [System.ComponentModel.DefaultValueAttribute("myFieldName")] 屬性的類別檔案。</span><span class="sxs-lookup"><span data-stu-id="44d48-187">If you are using Xsd.exe to generate a classes from schemas, you can comment out or remove all of the [System.ComponentModel.DefaultValueAttribute("myFieldName")] attributes from the class files.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44d48-188">下列範例顯示名為類別`Pet`，其中包含具有預設值設為"Dog"的欄位。</span><span class="sxs-lookup"><span data-stu-id="44d48-188">The following example shows a class named `Pet` that contains a field that has a default value set to "Dog".</span></span> <span data-ttu-id="44d48-189">不過，此範例也會建立<xref:System.Xml.Serialization.XmlAttributes>物件，以及設定其<xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A>屬性設為新的預設值 ("Cat")。</span><span class="sxs-lookup"><span data-stu-id="44d48-189">However, the example also creates an <xref:System.Xml.Serialization.XmlAttributes> object, and sets its <xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A> property to a new default value ("Cat").</span></span> <span data-ttu-id="44d48-190">這會覆寫原始的預設值。</span><span class="sxs-lookup"><span data-stu-id="44d48-190">This overrides the original default value.</span></span> <span data-ttu-id="44d48-191">因此，如果欄位值設為"Cat"，<xref:System.Xml.Serialization.XmlSerializer>會將其視為預設值，並不將其序列化。</span><span class="sxs-lookup"><span data-stu-id="44d48-191">Thus, if the field value is set to "Cat", the <xref:System.Xml.Serialization.XmlSerializer> treats it as the default value, and not serialize it.</span></span> <span data-ttu-id="44d48-192">如果設定為任何其他值，<xref:System.Xml.Serialization.XmlSerializer>序列化值。</span><span class="sxs-lookup"><span data-stu-id="44d48-192">If it is set to any other value, the <xref:System.Xml.Serialization.XmlSerializer> serializes the value.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlDefaultValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlDefaultValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlElements">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlElementAttributes XmlElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlElementAttributes XmlElements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlElements As XmlElementAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlElementAttributes ^ XmlElements { System::Xml::Serialization::XmlElementAttributes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlElements : System.Xml.Serialization.XmlElementAttributes" Usage="System.Xml.Serialization.XmlAttributes.XmlElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlElementAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44d48-193">取得物件的集合，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何將公用欄位或讀取/寫入屬性序列化為 XML 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-193">Gets a collection of objects that specify how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or read/write property as an XML element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44d48-194">包含 <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 物件集合的 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-194">An <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> that contains a collection of <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44d48-195">針對每個覆寫的成員序列化為 XML 項目，您必須新增<xref:System.Xml.Serialization.XmlElementAttribute>要<xref:System.Xml.Serialization.XmlElementAttributes>藉由呼叫<xref:System.Xml.Serialization.XmlElementAttributes.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="44d48-195">For each overridden member that is serialized as an XML element, you must add a new <xref:System.Xml.Serialization.XmlElementAttribute> to an <xref:System.Xml.Serialization.XmlElementAttributes> by calling the <xref:System.Xml.Serialization.XmlElementAttributes.Add%2A> method.</span></span> <span data-ttu-id="44d48-196">根據預設，<xref:System.Xml.Serialization.XmlElementAttributes>是建立物件，並將其指派給<xref:System.Xml.Serialization.XmlAttributes.XmlElements%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="44d48-196">By default, an <xref:System.Xml.Serialization.XmlElementAttributes> object is created and assigned to the <xref:System.Xml.Serialization.XmlAttributes.XmlElements%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44d48-197">下列範例會序列化`Transportation`類別，其中包含名為的單一欄位`Vehicles`傳回<xref:System.Collections.ArrayList>。</span><span class="sxs-lookup"><span data-stu-id="44d48-197">The following example serializes the `Transportation` class, which contains a single field named `Vehicles` that returns an <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="44d48-198">此範例適用於兩個<xref:System.Xml.Serialization.XmlElementAttribute>屬性到`Vehicles`欄位。</span><span class="sxs-lookup"><span data-stu-id="44d48-198">The example applies two <xref:System.Xml.Serialization.XmlElementAttribute> attributes to the `Vehicles` field.</span></span> <span data-ttu-id="44d48-199">此範例會建立兩個<xref:System.Xml.Serialization.XmlElementAttribute>物件，並將它們加入至<xref:System.Xml.Serialization.XmlElementAttributes>的集合<xref:System.Xml.Serialization.XmlAttributes>物件。</span><span class="sxs-lookup"><span data-stu-id="44d48-199">The example creates two <xref:System.Xml.Serialization.XmlElementAttribute> objects and adds them to the <xref:System.Xml.Serialization.XmlElementAttributes> collection of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="44d48-200">若要允許要接受不同的物件類型的陣列<xref:System.Xml.Serialization.XmlAttributes>物件加入至<xref:System.Xml.Serialization.XmlAttributeOverrides>物件。</span><span class="sxs-lookup"><span data-stu-id="44d48-200">To allow the array to accept different object types, the <xref:System.Xml.Serialization.XmlAttributes> object is added to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlElements Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlElements Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlEnum">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlEnumAttribute XmlEnum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlEnumAttribute XmlEnum" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlEnum" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlEnum As XmlEnumAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlEnumAttribute ^ XmlEnum { System::Xml::Serialization::XmlEnumAttribute ^ get(); void set(System::Xml::Serialization::XmlEnumAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlEnum : System.Xml.Serialization.XmlEnumAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlEnum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlEnumAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44d48-201">取得或設定物件，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化列舉型別 (Enumeration) 成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-201">Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes an enumeration member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44d48-202">
            <see cref="T:System.Xml.Serialization.XmlEnumAttribute" />，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化列舉型別成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-202">An <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes an enumeration member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44d48-203">針對每個您想要覆寫的識別項，您必須建立<xref:System.Xml.Serialization.XmlAttributes>物件，然後設定<xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A>屬性設<xref:System.Xml.Serialization.XmlEnumAttribute>會覆寫的識別項。</span><span class="sxs-lookup"><span data-stu-id="44d48-203">For each identifier you want to override, you must create an <xref:System.Xml.Serialization.XmlAttributes> object, and set the <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> property to an <xref:System.Xml.Serialization.XmlEnumAttribute> that overrides the identifier.</span></span> <span data-ttu-id="44d48-204">新增<xref:System.Xml.Serialization.XmlAttributes>物件至<xref:System.Xml.Serialization.XmlAttributeOverrides>物件，並同時指定<xref:System.Type>的類別，其中包含列舉型別，並覆寫的成員名稱。</span><span class="sxs-lookup"><span data-stu-id="44d48-204">Add the <xref:System.Xml.Serialization.XmlAttributes> object to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object and specify both the <xref:System.Type> of the class that contains the enumeration, and the overridden member name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44d48-205">下列範例會序列化兩大類別叫做`Food`和`FoodType`。</span><span class="sxs-lookup"><span data-stu-id="44d48-205">The following example serializes two classes named `Food` and `FoodType`.</span></span> <span data-ttu-id="44d48-206">`FoodType`類別包含兩個列舉型別，會覆寫，且每個列舉，此範例會建立<xref:System.Xml.Serialization.XmlEnumAttribute>物件，它會指派給<xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A>屬性<xref:System.Xml.Serialization.XmlAttributes>物件。</span><span class="sxs-lookup"><span data-stu-id="44d48-206">The `FoodType` class contains two enumerations that are overridden and, for each enumeration, the example creates an <xref:System.Xml.Serialization.XmlEnumAttribute> object that it assigns to the <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> property of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="44d48-207">範例接著會新增<xref:System.Xml.Serialization.XmlAttributes>物件至<xref:System.Xml.Serialization.XmlAttributeOverrides>物件，用來建立<xref:System.Xml.Serialization.XmlSerializer>。</span><span class="sxs-lookup"><span data-stu-id="44d48-207">The example then adds the <xref:System.Xml.Serialization.XmlAttributes> object to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object, which is used to create an <xref:System.Xml.Serialization.XmlSerializer>.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlEnum Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlEnum Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlIgnore">
      <MemberSignature Language="C#" Value="public bool XmlIgnore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool XmlIgnore" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlIgnore" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlIgnore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool XmlIgnore { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.XmlIgnore : bool with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlIgnore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44d48-208">取得或設定數值，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否要序列化公用欄位或公用讀取/寫入屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-208">Gets or sets a value that specifies whether or not the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a public field or public read/write property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44d48-209">如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 必須不序列化欄位或屬性，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-209">
              <see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must not serialize the field or property; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44d48-210">根據預設，所有公用欄位或公用讀取/寫入屬性序列化的<xref:System.Xml.Serialization.XmlSerializer>。</span><span class="sxs-lookup"><span data-stu-id="44d48-210">By default, all public fields and public read/write properties are serialized by the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="44d48-211">也就是說，每個公用欄位或屬性的值會保存為 XML 項目或 XML 文件執行個體中的 XML 屬性。</span><span class="sxs-lookup"><span data-stu-id="44d48-211">That is, the value of each public field or property is persisted as an XML element or XML attribute in an XML-document instance.</span></span>  
  
 <span data-ttu-id="44d48-212">若要覆寫欄位或屬性的預設序列化，請建立<xref:System.Xml.Serialization.XmlAttributes>物件，然後設定其<xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A>屬性設`true`。</span><span class="sxs-lookup"><span data-stu-id="44d48-212">To override the default serialization of a field or property, create an <xref:System.Xml.Serialization.XmlAttributes> object, and set its <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> property to `true`.</span></span> <span data-ttu-id="44d48-213"><xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> 物件<xref:System.Xml.Serialization.XmlAttributeOverrides>物件，並指定包含的欄位或屬性，以略過的物件型別和名稱的欄位或屬性，以略過。</span><span class="sxs-lookup"><span data-stu-id="44d48-213"><xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A> the object to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object and specify the type of the object that contains the field or property to ignore, and the name of the field or property to ignore.</span></span>  
  
 <span data-ttu-id="44d48-214">如果<xref:System.Xml.Serialization.XmlIgnoreAttribute>會套用至欄位或屬性中，欄位或屬性會被忽略。</span><span class="sxs-lookup"><span data-stu-id="44d48-214">If an <xref:System.Xml.Serialization.XmlIgnoreAttribute> is applied to a field or property, the field or property is ignored.</span></span> <span data-ttu-id="44d48-215">不過您可以建立覆寫該行為<xref:System.Xml.Serialization.XmlAttributes>物件，設定其<xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A>屬性設`false`，將它新增至<xref:System.Xml.Serialization.XmlAttributeOverrides>物件，指定包含的欄位或屬性的物件型別和名稱欄位或屬性。</span><span class="sxs-lookup"><span data-stu-id="44d48-215">However you can override that behavior by creating an <xref:System.Xml.Serialization.XmlAttributes> object, setting its <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> property to `false`, adding it to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object specifying the type of the object that contains the field or property, and the name of the field or property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44d48-216">下列範例會序列化類別，名為`Group`，其中包含名為成員`Comment`要<xref:System.Xml.Serialization.XmlIgnoreAttribute>套用。</span><span class="sxs-lookup"><span data-stu-id="44d48-216">The following example serializes a class named `Group`, which contains a member named `Comment` to which the <xref:System.Xml.Serialization.XmlIgnoreAttribute> is applied.</span></span> <span data-ttu-id="44d48-217">此範例會建立<xref:System.Xml.Serialization.XmlAttributes>物件，以及設定<xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A>屬性設`false`，藉此覆寫<xref:System.Xml.Serialization.XmlIgnoreAttribute>。</span><span class="sxs-lookup"><span data-stu-id="44d48-217">The example creates an <xref:System.Xml.Serialization.XmlAttributes> object, and sets the <xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A> property to `false`, thereby overriding the <xref:System.Xml.Serialization.XmlIgnoreAttribute>.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlIgnore Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlIgnore Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlIgnoreAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Xmlns">
      <MemberSignature Language="C#" Value="public bool Xmlns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Xmlns" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.Xmlns" />
      <MemberSignature Language="VB.NET" Value="Public Property Xmlns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Xmlns { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Xmlns : bool with get, set" Usage="System.Xml.Serialization.XmlAttributes.Xmlns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44d48-218">取得或設定數值，指定當物件包含傳回已覆寫 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 物件的成員時，是否要保留所有的命名空間宣告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-218">Gets or sets a value that specifies whether to keep all namespace declarations when an object containing a member that returns an <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> object is overridden.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44d48-219">如果應該保留命名空間宣告，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-219">
              <see langword="true" /> if the namespace declarations should be kept; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="44d48-220">下列範例包含類別，名為`Student`。</span><span class="sxs-lookup"><span data-stu-id="44d48-220">The following example contains a class named `Student`.</span></span> <span data-ttu-id="44d48-221">此類別包含名為的成員`MyNamespaces`傳回<xref:System.Xml.Serialization.XmlSerializerNamespaces>物件。</span><span class="sxs-lookup"><span data-stu-id="44d48-221">The class contains a member named `MyNamespaces` that returns an <xref:System.Xml.Serialization.XmlSerializerNamespaces> object.</span></span> <span data-ttu-id="44d48-222">此範例會建立<xref:System.Xml.Serialization.XmlAttributes>物件的執行個體加入<xref:System.Xml.Serialization.XmlAttributeOverrides>類別。</span><span class="sxs-lookup"><span data-stu-id="44d48-222">The example creates an <xref:System.Xml.Serialization.XmlAttributes> object that is added to an instance of the <xref:System.Xml.Serialization.XmlAttributeOverrides> class.</span></span> <span data-ttu-id="44d48-223"><xref:System.Xml.Serialization.XmlAttributes.Xmlns%2A>屬性設定為`true`，這個值會指示<xref:System.Xml.Serialization.XmlSerializer>若要保留的命名空間時的序列化`Student`物件覆寫。</span><span class="sxs-lookup"><span data-stu-id="44d48-223">The <xref:System.Xml.Serialization.XmlAttributes.Xmlns%2A> property is set to `true`, which instructs the <xref:System.Xml.Serialization.XmlSerializer> to preserve the namespaces when the serialization of the `Student` object is overridden.</span></span>  
  
 [!code-cpp[XmlAttributes.Xmlns property example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/CPP/xmlns.cpp#1)]
 [!code-csharp[XmlAttributes.Xmlns property example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/CS/xmlns.cs#1)]
 [!code-vb[XmlAttributes.Xmlns property example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAttributes.Xmlns property example/VB/xmlns.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlRoot">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlRootAttribute XmlRoot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlRootAttribute XmlRoot" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlRoot" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlRoot As XmlRootAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlRootAttribute ^ XmlRoot { System::Xml::Serialization::XmlRootAttribute ^ get(); void set(System::Xml::Serialization::XmlRootAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlRoot : System.Xml.Serialization.XmlRootAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlRootAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44d48-224">取得或設定物件，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何將類別序列化為 XML (Root Element)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-224">Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a class as an XML root element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44d48-225">
            <see cref="T:System.Xml.Serialization.XmlRootAttribute" />，覆寫類別屬性為 XML 根項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-225">An <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> that overrides a class attributed as an XML root element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="44d48-226">下列範例會建立<xref:System.Xml.Serialization.XmlAttributeOverrides>物件，<xref:System.Xml.Serialization.XmlAttributes>物件，和<xref:System.Xml.Serialization.XmlRootAttribute>物件。</span><span class="sxs-lookup"><span data-stu-id="44d48-226">The following example creates an <xref:System.Xml.Serialization.XmlAttributeOverrides> object, an <xref:System.Xml.Serialization.XmlAttributes> object, and an <xref:System.Xml.Serialization.XmlRootAttribute> object.</span></span> <span data-ttu-id="44d48-227">此範例將指派<xref:System.Xml.Serialization.XmlRootAttribute>要<xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A>屬性<xref:System.Xml.Serialization.XmlAttributes>物件，並將加入<xref:System.Xml.Serialization.XmlAttributes>物件<xref:System.Xml.Serialization.XmlAttributeOverrides>物件。</span><span class="sxs-lookup"><span data-stu-id="44d48-227">The example assigns the <xref:System.Xml.Serialization.XmlRootAttribute> to the <xref:System.Xml.Serialization.XmlAttributes.XmlRoot%2A> property of the <xref:System.Xml.Serialization.XmlAttributes> object, and adds the <xref:System.Xml.Serialization.XmlAttributes> object to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span> <span data-ttu-id="44d48-228">最後，此範例會取得<xref:System.Xml.Serialization.XmlAttributes>物件，並傳遞<xref:System.Type>要序列化的類別<xref:System.Xml.Serialization.XmlAttributeOverrides>物件。</span><span class="sxs-lookup"><span data-stu-id="44d48-228">Lastly, the example gets the <xref:System.Xml.Serialization.XmlAttributes> object by passing the <xref:System.Type> of the serialized class to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span> <span data-ttu-id="44d48-229">(在此範例中，<xref:System.Type>是`Group`。)</span><span class="sxs-lookup"><span data-stu-id="44d48-229">(In this example, the <xref:System.Type> is `Group`.)</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlRoot Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlRoot Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlText">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTextAttribute XmlText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlTextAttribute XmlText" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlText" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlText As XmlTextAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlTextAttribute ^ XmlText { System::Xml::Serialization::XmlTextAttribute ^ get(); void set(System::Xml::Serialization::XmlTextAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlText : System.Xml.Serialization.XmlTextAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTextAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44d48-230">取得或設定物件，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 將公用欄位或公用讀取/寫入屬性序列化為 XML 文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-230">Gets or sets an object that instructs the <see cref="T:System.Xml.Serialization.XmlSerializer" /> to serialize a public field or public read/write property as XML text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44d48-231">
            <see cref="T:System.Xml.Serialization.XmlTextAttribute" />，覆寫公用屬性或欄位的預設序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-231">An <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> that overrides the default serialization of a public property or field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44d48-232">根據預設，公用欄位或公用讀取/寫入屬性序列化為 XML 項目由<xref:System.Xml.Serialization.XmlSerializer>。</span><span class="sxs-lookup"><span data-stu-id="44d48-232">By default, a public field or public read/write property is serialized as an XML element by the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="44d48-233">不過，它可以在其中強制欄位或屬性序列化為 XML 文字，藉由套用<xref:System.Xml.Serialization.XmlTextAttribute>欄位或屬性。</span><span class="sxs-lookup"><span data-stu-id="44d48-233">However, it can force the field or property to be serialized as XML text by applying an <xref:System.Xml.Serialization.XmlTextAttribute> to the field or property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="44d48-234"><xref:System.Xml.Serialization.XmlTextAttribute>無法套用至欄位或屬性會傳回陣列。</span><span class="sxs-lookup"><span data-stu-id="44d48-234">The <xref:System.Xml.Serialization.XmlTextAttribute> cannot be applied to a field or property that returns an array.</span></span>  
  
 <span data-ttu-id="44d48-235">若要覆寫預設的序列化欄位或屬性 （也就不會傳回陣列），建立<xref:System.Xml.Serialization.XmlTextAttribute>並將它指派給<xref:System.Xml.Serialization.XmlAttributes.XmlText%2A>屬性<xref:System.Xml.Serialization.XmlAttributes>物件。</span><span class="sxs-lookup"><span data-stu-id="44d48-235">To override the default serialization of a field or property (that does not return an array), create an <xref:System.Xml.Serialization.XmlTextAttribute> and assign it to the <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> property of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="44d48-236">新增<xref:System.Xml.Serialization.XmlAttributes>物件至<xref:System.Xml.Serialization.XmlAttributeOverrides>物件，並指定類型的物件，其中包含覆寫的欄位或屬性，並覆寫的欄位或屬性的名稱。</span><span class="sxs-lookup"><span data-stu-id="44d48-236">Add the <xref:System.Xml.Serialization.XmlAttributes> object to an <xref:System.Xml.Serialization.XmlAttributeOverrides> object and specify the type of the object that contains the overridden field or property, and the name of the overridden field or property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44d48-237">下列範例會序列化名為的類別`Group`，其中包含一個名為欄位`Comment`。</span><span class="sxs-lookup"><span data-stu-id="44d48-237">The following example serializes the class named `Group`, which contains a field named `Comment`.</span></span> <span data-ttu-id="44d48-238">若要覆寫預設方式<xref:System.Xml.Serialization.XmlSerializer>序列化欄位中，此範例會建立<xref:System.Xml.Serialization.XmlAttributeOverrides>和<xref:System.Xml.Serialization.XmlAttributes>物件。</span><span class="sxs-lookup"><span data-stu-id="44d48-238">To override the default way the <xref:System.Xml.Serialization.XmlSerializer> serializes the field, the example creates an <xref:System.Xml.Serialization.XmlAttributeOverrides> and an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span> <span data-ttu-id="44d48-239">這個範例會建立<xref:System.Xml.Serialization.XmlTextAttribute>物件，它會指派給<xref:System.Xml.Serialization.XmlAttributes.XmlText%2A>屬性，並將<xref:System.Xml.Serialization.XmlAttributes>物件 （具有要序列化成 XML 文字的欄位名稱）<xref:System.Xml.Serialization.XmlAttributeOverrides>物件。</span><span class="sxs-lookup"><span data-stu-id="44d48-239">The example then creates an <xref:System.Xml.Serialization.XmlTextAttribute> object, which it assigns to the <xref:System.Xml.Serialization.XmlAttributes.XmlText%2A> property, and adds the <xref:System.Xml.Serialization.XmlAttributes> object (with the name of the field to be serialized as XML text) to the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span> <span data-ttu-id="44d48-240">此範例會建立最後<xref:System.Xml.Serialization.XmlSerializer>使用<xref:System.Xml.Serialization.XmlAttributeOverrides>物件。</span><span class="sxs-lookup"><span data-stu-id="44d48-240">Lastly the example creates an <xref:System.Xml.Serialization.XmlSerializer> using the <xref:System.Xml.Serialization.XmlAttributeOverrides> object.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlText Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlType">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeAttribute XmlType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Serialization.XmlTypeAttribute XmlType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAttributes.XmlType" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlType As XmlTypeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Serialization::XmlTypeAttribute ^ XmlType { System::Xml::Serialization::XmlTypeAttribute ^ get(); void set(System::Xml::Serialization::XmlTypeAttribute ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlType : System.Xml.Serialization.XmlTypeAttribute with get, set" Usage="System.Xml.Serialization.XmlAttributes.XmlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44d48-241">取得或設定物件，指定 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 如何序列化套用 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 的類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-241">Gets or sets an object that specifies how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes a class to which the <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> has been applied.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44d48-242">
            <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />，會覆寫套用 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 至類別宣告 (Class Declaration)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44d48-242">An <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> that overrides an <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> applied to a class declaration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44d48-243"><xref:System.Xml.Serialization.XmlTypeAttribute>可用來控制如何將類型序列化的<xref:System.Xml.Serialization.XmlSerializer>。</span><span class="sxs-lookup"><span data-stu-id="44d48-243">The <xref:System.Xml.Serialization.XmlTypeAttribute> can be used to control how a type is serialized by the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="44d48-244">例如，根據預設，當型別會序列化，<xref:System.Xml.Serialization.XmlSerializer>類別名稱做為 XML 項目名稱。</span><span class="sxs-lookup"><span data-stu-id="44d48-244">For example, by default, when a type is serialized, the <xref:System.Xml.Serialization.XmlSerializer> uses the class name as the XML element name.</span></span> <span data-ttu-id="44d48-245">藉由建立<xref:System.Xml.Serialization.XmlTypeAttribute>，將<xref:System.Xml.Serialization.XmlAttributes.XmlType%2A>屬性，並建立<xref:System.Xml.Serialization.XmlAttributeOverrides>物件時，您可以變更 XML 項目名稱。</span><span class="sxs-lookup"><span data-stu-id="44d48-245">By creating an <xref:System.Xml.Serialization.XmlTypeAttribute>, setting the <xref:System.Xml.Serialization.XmlAttributes.XmlType%2A> property to it, and creating an <xref:System.Xml.Serialization.XmlAttributeOverrides> object, you can change the XML element name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44d48-246">下列範例會建立<xref:System.Xml.Serialization.XmlTypeAttribute>物件，並將其指派給<xref:System.Xml.Serialization.XmlAttributes.XmlType%2A>屬性<xref:System.Xml.Serialization.XmlAttributes>物件。</span><span class="sxs-lookup"><span data-stu-id="44d48-246">The following example creates an <xref:System.Xml.Serialization.XmlTypeAttribute> object, and assigns it to the <xref:System.Xml.Serialization.XmlAttributes.XmlType%2A> property of an <xref:System.Xml.Serialization.XmlAttributes> object.</span></span>  
  
 [!code-cpp[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAttributes.XmlType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAttributes.XmlType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>