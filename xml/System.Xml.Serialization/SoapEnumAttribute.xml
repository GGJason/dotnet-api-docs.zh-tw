<Type Name="SoapEnumAttribute" FullName="System.Xml.Serialization.SoapEnumAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a7e0d9787cd9f566f989d28a3e7a591da101eeb1" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52224930" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SoapEnumAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapEnumAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapEnumAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapEnumAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapEnumAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type SoapEnumAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>控制 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化列舉型別 (Enumeration) 成員的方式。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapEnumAttribute>類別都屬於一系列屬性可控制如何<xref:System.Xml.Serialization.XmlSerializer>序列化或還原序列化為編碼 SOAP XML 物件。 產生的 XML 會與全球資訊網協會 (www.w3.org) 之＜Simple Object Access Protocol (SOAP) 1.1＞文件中的第 5 節相符。 相似的屬性完整清單，請參閱 <<c0> [ 控制編碼 SOAP 序列化的屬性](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md)。  
  
 若要將物件序列化為編碼的 SOAP 訊息，您必須建構<xref:System.Xml.Serialization.XmlSerializer>使用<xref:System.Xml.Serialization.XmlTypeMapping>以建立<xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A>方法<xref:System.Xml.Serialization.SoapReflectionImporter>類別。  
  
 使用<xref:System.Xml.Serialization.SoapEnumAttribute>若要變更列舉型別，<xref:System.Xml.Serialization.XmlSerializer>所產生或識別 （當序列化或還原序列化的類別，分別）。 比方說，如果列舉型別包含名為的成員`One`，但您偏好的 XML 輸出，會命名為`Single`，將套用<xref:System.Xml.Serialization.SoapEnumAttribute>為列舉成員，並將<xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A>"Single"的屬性。  
  
 您可以覆寫<xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A>屬性值<xref:System.Xml.Serialization.SoapEnumAttribute>所建立的執行個體<xref:System.Xml.Serialization.SoapEnumAttribute>類別，並將它指派給<xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A>屬性<xref:System.Xml.Serialization.SoapAttributes>。 如需詳細資訊，請參閱<xref:System.Xml.Serialization.SoapAttributeOverrides>類別概觀。  
  
 若要將物件序列化為編碼的 SOAP 訊息，您必須建構<xref:System.Xml.Serialization.XmlSerializer>使用<xref:System.Xml.Serialization.XmlTypeMapping>以建立<xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A>方法<xref:System.Xml.Serialization.SoapReflectionImporter>類別。  
  
> [!NOTE]
>  您可以使用 word`SoapEnum`代替較長的程式碼中<xref:System.Xml.Serialization.SoapEnumAttribute>。  
  
 如需使用屬性的詳細資訊，請參閱[屬性](~/docs/standard/attributes/index.md)。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Xml.Serialization.XmlSerializer>來序列化類別，名為`Food`，其中包含名為列舉型別`FoodType`。 `FoodType`列舉型別會透過建立覆寫<xref:System.Xml.Serialization.SoapEnumAttribute>的每個列舉型別和設定<xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A>屬性<xref:System.Xml.Serialization.SoapAttributes>到<xref:System.Xml.Serialization.SoapEnumAttribute>。 <xref:System.Xml.Serialization.SoapAttributes>新增至<xref:System.Xml.Serialization.SoapAttributeOverrides>用來建立<xref:System.Xml.Serialization.XmlSerializer>。  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapEnumAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapEnumAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapEnumAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Xml.Serialization.SoapEnumAttribute.%23ctor%2A>覆寫現有的列舉型別。 建立新<xref:System.Xml.Serialization.SoapEnumAttribute>、 設定其屬性，以及將物件指派給<xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A>屬性<xref:System.Xml.Serialization.SoapAttributes>。 針對每個列舉的成員，您必須建立新<xref:System.Xml.Serialization.SoapAttributes>並將它加入<xref:System.Xml.Serialization.SoapAttributeOverrides>。 如需詳細資訊，請參閱<xref:System.Xml.Serialization.SoapAttributeOverrides>類別概觀。  
  
> [!NOTE]
>  您可以使用 word`SoapEnum`代替較長的程式碼中<xref:System.Xml.Serialization.SoapEnumAttribute>。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Xml.Serialization.XmlSerializer>來序列化類別，名為`Food`，其中包含名為列舉型別`FoodType`。 `FoodType`列舉型別會透過建立覆寫<xref:System.Xml.Serialization.SoapEnumAttribute>的每個列舉型別和設定<xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A>屬性<xref:System.Xml.Serialization.SoapAttributes>到<xref:System.Xml.Serialization.SoapEnumAttribute>。 <xref:System.Xml.Serialization.SoapAttributes>新增至<xref:System.Xml.Serialization.SoapAttributeOverrides>用來建立<xref:System.Xml.Serialization.XmlSerializer>。  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapEnumAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapEnumAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapEnumAttribute : string -&gt; System.Xml.Serialization.SoapEnumAttribute" Usage="new System.Xml.Serialization.SoapEnumAttribute name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.Xml.Serialization.XmlSerializer" /> 產生的 XML 項目名稱。</param>
        <summary>使用指定的項目名稱，初始化 <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定<xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A>當您想要產生的 XML 列舉值，不同於列舉值的列舉型別中找到。  
  
> [!NOTE]
>  您可以使用 word`SoapEnum`代替較長的程式碼中<xref:System.Xml.Serialization.SoapEnumAttribute>。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Xml.Serialization.XmlSerializer>來序列化類別，名為`Food`，其中包含名為列舉型別`FoodType`。 `FoodType`列舉型別會透過建立覆寫<xref:System.Xml.Serialization.SoapEnumAttribute>的每個列舉型別和設定<xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A>屬性<xref:System.Xml.Serialization.SoapAttributes>到<xref:System.Xml.Serialization.SoapEnumAttribute>。 <xref:System.Xml.Serialization.SoapAttributes>新增至<xref:System.Xml.Serialization.SoapAttributeOverrides>用來建立<xref:System.Xml.Serialization.XmlSerializer>。  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapEnumAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Xml.Serialization.SoapEnumAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定當 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化列舉型別時，在 XML 文件中所產生的值，或是當它還原序列化列舉型別成員時所識別的值。</summary>
        <value>
          <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化列舉型別時，在 XML 文件中產生的值，或是它還原序列化列舉型別成員時識別的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定<xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A>當您想要產生的 XML 列舉值，不同於列舉值的列舉型別中找到。  
  
> [!NOTE]
>  您可以使用 word`SoapEnum`代替較長<xref:System.Xml.Serialization.SoapEnumAttribute>。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Xml.Serialization.XmlSerializer>來序列化類別，名為`Food`，其中包含名為列舉型別`FoodType`。 `FoodType`列舉型別會透過建立覆寫<xref:System.Xml.Serialization.SoapEnumAttribute>的每個列舉型別和設定<xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A>屬性<xref:System.Xml.Serialization.SoapAttributes>到<xref:System.Xml.Serialization.SoapEnumAttribute>。 <xref:System.Xml.Serialization.SoapAttributes>新增至<xref:System.Xml.Serialization.SoapAttributeOverrides>用來建立<xref:System.Xml.Serialization.XmlSerializer>。  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>