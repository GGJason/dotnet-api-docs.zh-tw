<Type Name="CodeIdentifiers" FullName="System.Xml.Serialization.CodeIdentifiers">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="16b1c25698b0afa3fb04d166b9e98816c76600d1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720362" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeIdentifiers" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CodeIdentifiers extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.CodeIdentifiers" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeIdentifiers" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeIdentifiers" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>針對由 .NET Framework 之 XML 序列化 (Serialization) 基礎結構所產生的相關程式碼實體 (Entity) 或型別對應，維護名稱群組。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下列清單識別工具和類別，使用<xref:System.Xml.Serialization.CodeIdentifiers>:  
  
-   [Web 服務描述語言工具 (Wsdl.exe)](http://msdn.microsoft.com/library/b9210348-8bc2-4367-8c91-d1a04b403e88)，或<xref:System.Web.Services.Description.ServiceDescriptionImporter>類別，從 Web 服務描述語言 (WSDL) 文件產生用戶端 proxy 類別或抽象伺服器類別時。  
  
-   [XML 結構描述定義工具 (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md)時產生類別，從 XML 結構描述定義 (XSD) 文件的工具。  
  
-   <xref:System.Web.Services.Description.ServiceDescriptionReflector>類別建立時<xref:System.Web.Services.Description.ServiceDescription>物件類別識別為 Web 服務，透過從<xref:System.Web.Services.WebServiceAttribute>屬性。  
  
 而不是使用<xref:System.Xml.Serialization.CodeIdentifiers>直接類別中，使用上述的工具或類別。 如果您想要控制的繫結至 XML 結構描述或 Web 服務定義的程式碼實體名稱，使用相關聯的屬性。  
  
 其範圍中，根據<xref:System.Xml.Serialization.CodeIdentifiers>執行個體可用於維護的任何下列清單中的項目名稱：  
  
-   型別、 方法或欄位。  
  
-   參數和傳回值的方法，對應至 WSDL 輸入和輸出訊息。  
  
-   物件內<xref:System.Web.Services.Description.ServiceDescription>可以序列化為 WSDL 文件的執行個體。  
  
 通常，類別用來避免命名在特定範圍，包括包含實體的名稱衝突的程式碼實體之間發生衝突。  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeIdentifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifiers.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeIdentifiers();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeIdentifiers (bool caseSensitive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool caseSensitive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (caseSensitive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeIdentifiers(bool caseSensitive);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="caseSensitive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="caseSensitive">
          如果識別項要區分大小寫，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>初始化 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 類別的新執行個體，並判斷程式碼識別項是否要區分大小寫。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string identifier, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string identifier, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (identifier As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ identifier, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="identifier">用於索引程式碼實體的名稱。</param>
        <param name="value">程式碼實體或型別對應資訊。</param>
        <summary>將具名的程式碼實體或型別對應加入至 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體的範圍中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不同於<xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A>方法，<xref:System.Xml.Serialization.CodeIdentifiers.Add%2A>方法不會防止命名衝突。  
  
 如果您想要控制的繫結至 XML 結構描述或 Web 服務定義的程式碼實體名稱，使用相關聯的屬性而建立的執行個體<xref:System.Xml.Serialization.CodeIdentifiers>類別。 如需完整清單，請參閱[屬性，控制 XML 序列化](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddReserved">
      <MemberSignature Language="C#" Value="public void AddReserved (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddReserved(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddReserved (identifier As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddReserved(System::String ^ identifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">無法用於 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體之範圍內的名稱。</param>
        <summary>防止在 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體的範圍內使用指定的名稱。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 保留的名稱可以屬於包含的程式碼實體，例如產生的型別為其成員名稱必須也是。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddUnique">
      <MemberSignature Language="C#" Value="public string AddUnique (string identifier, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string AddUnique(string identifier, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddUnique (identifier As String, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ AddUnique(System::String ^ identifier, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="identifier">用於索引程式碼實體的候選名稱。</param>
        <param name="value">程式碼實體或型別對應資訊。</param>
        <summary>將具名的程式碼實體或型別對應加入至 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體的範圍內，並確保該名稱在範圍內是唯一的。</summary>
        <returns>識別項參數值，但如果發生名稱衝突，則為修改的字串。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果識別項參數值不是唯一內<xref:System.Xml.Serialization.CodeIdentifiers>產生並使用其所在位置執行個體的範圍內，新的、 唯一的字串。 產生新的字串附加至輸入的名稱。 原始名稱不是唯一，如果它先前傳遞至<xref:System.Xml.Serialization.CodeIdentifiers.Add%2A>， <xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A>，或<xref:System.Xml.Serialization.CodeIdentifiers.AddReserved%2A>方法，或如果它由先前呼叫產生<xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A>方法。 在每個案例中，如果新的識別項不是唯一的它會先傳送到<xref:System.Xml.Serialization.CodeIdentifiers.MakeUnique%2A>方法來建立新的唯一識別碼。  
  
 如果您想要控制的繫結至 XML 結構描述或 Web 服務定義的程式碼實體名稱，使用相關聯的屬性而建立的執行個體<xref:System.Xml.Serialization.CodeIdentifiers>類別。 如需完整清單，請參閱[屬性，控制 XML 序列化](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifiers.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>從 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體的範圍中移除所有程式碼實體或型別對應，包括其名稱。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 保留名稱，透過加入<xref:System.Xml.Serialization.CodeIdentifiers.AddReserved%2A>方法，不會移除。  
  
 如果您想要控制的繫結至 XML 結構描述或 Web 服務定義的程式碼實體名稱，使用相關聯的屬性而建立的執行個體<xref:System.Xml.Serialization.CodeIdentifiers>類別。 如需完整清單，請參閱[屬性，控制 XML 序列化](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsInUse">
      <MemberSignature Language="C#" Value="public bool IsInUse (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInUse(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInUse (identifier As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInUse(System::String ^ identifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">要檢查是否在 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體之範圍內使用的名稱。</param>
        <summary>判斷指定的名稱是否已經在 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體的範圍內使用。</summary>
        <returns>
          如果名稱已經在使用中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 輸入的名稱不是唯一，如果它先前傳遞至<xref:System.Xml.Serialization.CodeIdentifiers.Add%2A>， <xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A>，或<xref:System.Xml.Serialization.CodeIdentifiers.AddReserved%2A>方法，或如果它由產生<xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A>方法。  
  
 如果您想要控制的繫結至 XML 結構描述或 Web 服務定義的程式碼實體名稱，使用相關聯的屬性而建立的執行個體<xref:System.Xml.Serialization.CodeIdentifiers>類別。 如需完整清單，請參閱[屬性，控制 XML 序列化](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MakeRightCase">
      <MemberSignature Language="C#" Value="public string MakeRightCase (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MakeRightCase(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MakeRightCase (identifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MakeRightCase(System::String ^ identifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">可能要修改的名稱。</param>
        <summary>根據 <see cref="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" /> 屬性的值來修改名稱，藉以確保輸入的大小寫是正確的。</summary>
        <returns>與輸入識別項相同的字串，或已修改第一個字母大小寫的字串。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果值<xref:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing%2A>屬性是`true`和輸入的第一個字元是字母，則由小寫，如有必要。 如果值<xref:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing%2A>是`false`、 Pascal 案例作用中，第一個字元，如果是字母、 大寫，如有必要。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MakeUnique">
      <MemberSignature Language="C#" Value="public string MakeUnique (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MakeUnique(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MakeUnique (identifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MakeUnique(System::String ^ identifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">要修改的名稱 (如果原本不是唯一的話)。</param>
        <summary>判斷輸入名稱是否與 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體之範圍內的其他名稱發生衝突，如果有的話，則產生修改的字串。</summary>
        <returns>識別項參數值，但如果發生名稱衝突，則為修改的字串。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 輸入的名稱不是唯一，如果它先前傳遞至<xref:System.Xml.Serialization.CodeIdentifiers.Add%2A>， <xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A>，或<xref:System.Xml.Serialization.CodeIdentifiers.AddReserved%2A>方法，或如果它由產生<xref:System.Xml.Serialization.CodeIdentifiers.AddUnique%2A>方法。 如果名稱不是唯一的會產生新的字串附加至原始的字串。  
  
 如果您想要控制的繫結至 XML 結構描述或 Web 服務定義的程式碼實體名稱，使用相關聯的屬性而建立的執行個體<xref:System.Xml.Serialization.CodeIdentifiers>類別。 如需完整清單，請參閱[屬性，控制 XML 序列化](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (identifier As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ identifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">要移除之程式碼實體或型別對應資訊的名稱。</param>
        <summary>從 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體的範圍中移除由輸入名稱所識別的程式碼實體或型別對應。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您想要控制的繫結至 XML 結構描述或 Web 服務定義的程式碼實體名稱，使用相關聯的屬性而建立的執行個體<xref:System.Xml.Serialization.CodeIdentifiers>類別。 如需完整清單，請參閱[屬性，控制 XML 序列化](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RemoveReserved">
      <MemberSignature Language="C#" Value="public void RemoveReserved (string identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveReserved(string identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveReserved (identifier As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveReserved(System::String ^ identifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identifier">將在 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體之範圍內成為可用的名稱。</param>
        <summary>從 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體的保留名稱中移除輸入名稱。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您想要控制的繫結至 XML 結構描述或 Web 服務定義的程式碼實體名稱，使用相關聯的屬性而建立的執行個體<xref:System.Xml.Serialization.CodeIdentifiers>類別。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public object ToArray (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ToArray(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ToArray(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">執行個體之所有程式碼實體或型別對應的型別。</param>
        <summary>傳回 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 執行個體之範圍內的程式碼實體或型別對應陣列。</summary>
        <returns>由 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 物件所儲存之程式碼實體或型別對應的陣列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您想要控制的繫結至 XML 結構描述或 Web 服務定義的程式碼實體名稱，使用相關聯的屬性而建立的執行個體<xref:System.Xml.Serialization.CodeIdentifiers>類別。 如需完整清單，請參閱[屬性，控制 XML 序列化](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="UseCamelCasing">
      <MemberSignature Language="C#" Value="public bool UseCamelCasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCamelCasing" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCamelCasing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCamelCasing { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出執行個體是否會使用 Camel 命名法的大小寫慣例。</summary>
        <value>
          <see langword="true" /> 表示執行個體會使用 Camel 命名法的大小寫慣例，而 <see langword="false" /> 則表示執行個體會使用 Pascal 命名法的大小寫慣例。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 camel 命名法的情況下，如果識別項的第一個字元是字母，就必須是小寫。 使用 pascal 命名法的情況下，如果第一個字元是字母，就必須是大寫。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>