<Type Name="SoapElementAttribute" FullName="System.Xml.Serialization.SoapElementAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="91cdb222dd45ef82821e898ea38da131ebd49906" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52199606" /></Metadata><TypeSignature Language="C#" Value="public class SoapElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapElementAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type SoapElementAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定公用成員值由 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 序列化為編碼 SOAP XML 項目。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.SoapElementAttribute>類別都屬於一系列屬性可控制如何<xref:System.Xml.Serialization.XmlSerializer>序列化或還原序列化為編碼 SOAP XML 物件。 產生的 XML 符合全球資訊網協會 (www.w3.org) 文件 < Simple Object Access Protocol (SOAP) 1.1 」 的第 5 節。 相似的屬性完整清單，請參閱 <<c0> [ 控制編碼 SOAP 序列化的屬性](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md)。  
  
 若要將物件序列化為編碼的 SOAP 訊息，您必須建構<xref:System.Xml.Serialization.XmlSerializer>使用<xref:System.Xml.Serialization.XmlTypeMapping>以建立<xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A>方法<xref:System.Xml.Serialization.SoapReflectionImporter>類別。  
  
 適用於<xref:System.Xml.Serialization.SoapElementAttribute>為公用欄位，以便直接<xref:System.Xml.Serialization.XmlSerializer>序列化為編碼 SOAP XML 項目欄位。  
  
 如需使用屬性的詳細資訊，請參閱[屬性](~/docs/standard/attributes/index.md)。  
  
   
  
## Examples  
 下列範例會序列化名為類別的執行個體`Transportation`，其中包含一個名為欄位`Vehicle`。 A<xref:System.Xml.Serialization.SoapElementAttribute>套用至欄位。 當序列化欄位時，XML 項目名稱會是"Wheel"，而不是"Vehicle"。 `SerializeOverride`方法會建立<xref:System.Xml.Serialization.SoapElementAttribute>並設定<xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A>屬性<xref:System.Xml.Serialization.SoapAttributes>到<xref:System.Xml.Serialization.SoapElementAttribute>。 <xref:System.Xml.Serialization.SoapAttributes>新增至<xref:System.Xml.Serialization.SoapAttributeOverrides>用來建立<xref:System.Xml.Serialization.XmlTypeMapping>。 <xref:System.Xml.Serialization.XmlSerializer>建構<xref:System.Xml.Serialization.XmlTypeMapping>，和執行個體`Transportation`類別再次序列化。 因為<xref:System.Xml.Serialization.SoapElementAttribute>是用來覆寫序列化，產生的 XML 項目名稱現在是"Truck"，而不是"Wheel"。  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會序列化名為類別的執行個體`Transportation`，其中包含一個名為欄位`Vehicle`。 A<xref:System.Xml.Serialization.SoapElementAttribute>套用至欄位。 當序列化欄位時，XML 項目名稱會是"Wheel"，而不是"Vehicle"。 `SerializeOverride`方法會建立<xref:System.Xml.Serialization.SoapElementAttribute>並設定<xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A>屬性<xref:System.Xml.Serialization.SoapAttributes>到<xref:System.Xml.Serialization.SoapElementAttribute>。 <xref:System.Xml.Serialization.SoapAttributes>新增至<xref:System.Xml.Serialization.SoapAttributeOverrides>用來建立<xref:System.Xml.Serialization.XmlTypeMapping>。 <xref:System.Xml.Serialization.XmlSerializer>建構<xref:System.Xml.Serialization.XmlTypeMapping>，和執行個體`Transportation`類別再次序列化。 因為<xref:System.Xml.Serialization.SoapElementAttribute>是用來覆寫序列化，產生的 XML 項目名稱現在是"Truck"，而不是"Wheel"。  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapElementAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapElementAttribute(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.SoapElementAttribute : string -&gt; System.Xml.Serialization.SoapElementAttribute" Usage="new System.Xml.Serialization.SoapElementAttribute elementName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">序列成員的 XML 項目名稱。</param>
        <summary>初始化 <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> 類別的新執行個體，並且指定 XML 項目的名稱。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會序列化名為類別的執行個體`Transportation`，其中包含一個名為欄位`Vehicle`。 A<xref:System.Xml.Serialization.SoapElementAttribute>套用至欄位。 當序列化欄位時，XML 項目名稱會是"Wheel"，而不是"Vehicle"。 `SerializeOverride`方法會建立<xref:System.Xml.Serialization.SoapElementAttribute>並設定<xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A>屬性<xref:System.Xml.Serialization.SoapAttributes>到<xref:System.Xml.Serialization.SoapElementAttribute>。 <xref:System.Xml.Serialization.SoapAttributes>新增至<xref:System.Xml.Serialization.SoapAttributeOverrides>用來建立<xref:System.Xml.Serialization.XmlTypeMapping>。 <xref:System.Xml.Serialization.XmlSerializer>建構<xref:System.Xml.Serialization.XmlTypeMapping>，和執行個體`Transportation`類別再次序列化。 因為<xref:System.Xml.Serialization.SoapElementAttribute>是用來覆寫序列化，產生的 XML 項目名稱現在是"Truck"，而不是"Wheel"。  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapElementAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.SoapElementAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定產生之 XML 項目的 XML 結構描述定義語言 (XSD) 資料型別。</summary>
        <value>其中一個 XML 結構描述資料型別。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表列出與及其.NET 對等項目之 XML 結構描述簡單資料類型。  
  
 XML 結構描述`base64Binary`並`hexBinary`資料類型使用的陣列<xref:System.Byte>結構，並套用<xref:System.Xml.Serialization.SoapElementAttribute>使用<xref:System.Xml.Serialization.SoapAttributeAttribute.DataType%2A>"base64Binary 」 或 「 hexBinary"，適當地設定。 XML 結構描述`time`並`date`資料類型，使用<xref:System.DateTime>型別並套用<xref:System.Xml.Serialization.SoapElementAttribute>使用<xref:System.Xml.Serialization.SoapElementAttribute.DataType%2A>設為 「 日期 」 或 「 時間 」。  
  
 對應至字串的每個 XML 結構描述資料類型，適用於<xref:System.Xml.Serialization.SoapElementAttribute>具有其<xref:System.Xml.Serialization.SoapElementAttribute.DataType%2A>屬性設定為 XML 結構描述型別。 請注意這不會變更序列化格式，只有該成員的結構描述。  
  
> [!NOTE]
>  因此您必須將它設定為其中一個 XML 結構描述資料型別完全區分大小寫屬性。  
  
> [!NOTE]
>  將二進位資料做為 XML 項目是比傳遞做為 XML 屬性更有效率。  
  
 如需 XML 資料類型的詳細資訊，請參閱全球資訊網協會 (www.w3.org) 文件 < XML 結構描述組件 2: Datatypes >。  
  
|XSD 資料型別|.NET 資料類型|  
|-------------------|--------------------|  
|anyURI|<xref:System.String>|  
|base64Binary|陣列<xref:System.Byte>物件|  
|boolean|<xref:System.Boolean>|  
|byte|<xref:System.SByte>|  
|date|<xref:System.DateTime>|  
|dateTime|<xref:System.DateTime>|  
|decimal|<xref:System.Decimal>|  
|double|<xref:System.Double>|  
|ENTITY|<xref:System.String>|  
|實體|<xref:System.String>|  
|float|<xref:System.Single>|  
|gDay|<xref:System.String>|  
|gMonth|<xref:System.String>|  
|gMonthDay|<xref:System.String>|  
|gYear|<xref:System.String>|  
|gYearMonth|<xref:System.String>|  
|hexBinary|陣列<xref:System.Byte>物件|  
|識別碼|<xref:System.String>|  
|IDREF|<xref:System.String>|  
|IDREFS|<xref:System.String>|  
|int|<xref:System.Int32>|  
|整數|<xref:System.String>|  
|語言|<xref:System.String>|  
|long|<xref:System.Int64>|  
|名稱|<xref:System.String>|  
|NCName|<xref:System.String>|  
|negativeInteger|<xref:System.String>|  
|NMTOKEN|<xref:System.String>|  
|NMTOKENS|<xref:System.String>|  
|normalizedString|<xref:System.String>|  
|nonNegativeInteger|<xref:System.String>|  
|nonPositiveInteger|<xref:System.String>|  
|NOTATION|<xref:System.String>|  
|positiveInteger|<xref:System.String>|  
|QName|<xref:System.Xml.XmlQualifiedName>|  
|持續期間|<xref:System.String>|  
|字串|<xref:System.String>|  
|short|<xref:System.Int16>|  
|時間|<xref:System.DateTime>|  
|token|<xref:System.String>|  
|unsignedByte|<xref:System.Byte>|  
|unsignedInt|<xref:System.UInt32>|  
|unsignedLong|<xref:System.UInt64>|  
|unsignedShort|<xref:System.UInt16>|  
  
   
  
## Examples  
 下列範例會序列化名為類別的執行個體`Transportation`，其中包含一個名為欄位`Vehicle`。 A<xref:System.Xml.Serialization.SoapElementAttribute>套用至欄位。 當序列化欄位時，XML 項目名稱會是"Wheel"，而不是"Vehicle"。 `SerializeOverride`方法會建立<xref:System.Xml.Serialization.SoapElementAttribute>並設定<xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A>屬性<xref:System.Xml.Serialization.SoapAttributes>到<xref:System.Xml.Serialization.SoapElementAttribute>。 <xref:System.Xml.Serialization.SoapAttributes>新增至<xref:System.Xml.Serialization.SoapAttributeOverrides>用來建立<xref:System.Xml.Serialization.XmlTypeMapping>。 <xref:System.Xml.Serialization.XmlSerializer>建構<xref:System.Xml.Serialization.XmlTypeMapping>，和執行個體`Transportation`類別再次序列化。 因為<xref:System.Xml.Serialization.SoapElementAttribute>是用來覆寫序列化，產生的 XML 項目名稱現在是"Truck"，而不是"Wheel"。  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapElementAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Xml.Serialization.SoapElementAttribute.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定產生的 XML 項目的名稱。</summary>
        <value>產生的 XML 項目的名稱。 預設值為成員識別項。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會序列化名為類別的執行個體`Transportation`，其中包含一個名為欄位`Vehicle`。 A<xref:System.Xml.Serialization.SoapElementAttribute>套用至欄位。 當序列化欄位時，XML 項目名稱會是"Wheel"，而不是"Vehicle"。 `SerializeOverride`方法會建立<xref:System.Xml.Serialization.SoapElementAttribute>並設定<xref:System.Xml.Serialization.SoapAttributes.SoapElement%2A>屬性<xref:System.Xml.Serialization.SoapAttributes>到<xref:System.Xml.Serialization.SoapElementAttribute>。 <xref:System.Xml.Serialization.SoapAttributes>新增至<xref:System.Xml.Serialization.SoapAttributeOverrides>用來建立<xref:System.Xml.Serialization.XmlTypeMapping>。 <xref:System.Xml.Serialization.XmlSerializer>建構<xref:System.Xml.Serialization.XmlTypeMapping>，和執行個體`Transportation`類別再次序列化。 因為<xref:System.Xml.Serialization.SoapElementAttribute>是用來覆寫序列化，產生的 XML 項目名稱現在是"Truck"，而不是"Wheel"。  
  
 [!code-cpp[SoapElementOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapElementOverrides/CPP/soapelementoverrides.cpp#1)]
 [!code-csharp[SoapElementOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapElementOverrides/CS/soapelementoverrides.cs#1)]
 [!code-vb[SoapElementOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapElementOverrides/VB/soapelementoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapElementAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Xml.Serialization.SoapElementAttribute.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 是否必須要序列化 <see langword="xsi:null" /> 屬性設為 "1" 的成員。</summary>
        <value>如果 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 產生 <see langword="true" /> 屬性，則為 <see langword="xsi:null" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 結構的 XML 結構描述規格允許明確指示項目的內容遺漏 XML 文件。 這類項目包含屬性`xsi:null`設為"1"。 如需詳細資訊，請參閱全球資訊網協會 (www.w3.org) 規格名為 「 XML 結構描述組件 1:: 結構 」。  
  
 如果<xref:System.Xml.Serialization.SoapElementAttribute.IsNullable%2A>屬性設定為`true`，則`xsi:null`屬性就會產生已設成的類別成員的`null`。 例如，如果您設定一個名為欄位`MyStringArray`要`null`，則<xref:System.Xml.Serialization.XmlSerializer>會產生下列 XML 程式碼。  
  
```  
<MyStringArray xsi:null = "1" />  
```  
  
 如果<xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A>屬性是`false`，就會產生任何 XML 元素。  
  
> [!NOTE]
>  您不能套用<xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A>成員的屬性型別為實值型別，因為實值型別不能包含`null`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>