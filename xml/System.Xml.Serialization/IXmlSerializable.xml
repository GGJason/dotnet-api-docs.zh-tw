<Type Name="IXmlSerializable" FullName="System.Xml.Serialization.IXmlSerializable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8155c578ca3a365629ee4d705a95789ebfd67428" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IXmlSerializable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXmlSerializable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXmlSerializable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXmlSerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8c97a-101">為 XML 序列化和還原序列化提供自訂格式。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8c97a-101">Provides custom formatting for XML serialization and deserialization.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c97a-102">有兩個原因，若要實作這個介面。</span><span class="sxs-lookup"><span data-stu-id="8c97a-102">There are two reasons to implement this interface.</span></span> <span data-ttu-id="8c97a-103">第一個方法是控制如何序列化或還原序列化的物件<xref:System.Xml.Serialization.XmlSerializer>。</span><span class="sxs-lookup"><span data-stu-id="8c97a-103">The first is to control how your object is serialized or deserialized by the <xref:System.Xml.Serialization.XmlSerializer>.</span></span> <span data-ttu-id="8c97a-104">例如，您可以資料分成而不是緩衝處理大型資料集，位元組區塊，並還可避免對資料進行編碼使用 Base64 編碼時所發生的擴大。</span><span class="sxs-lookup"><span data-stu-id="8c97a-104">For example, you can chunk data into bytes instead of buffering large data sets, and also avoid the inflation that occurs when the data is encoded using Base64 encoding.</span></span> <span data-ttu-id="8c97a-105">若要控制序列化，實作<xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A>和<xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A>方法來控制<xref:System.Xml.XmlReader>和<xref:System.Xml.XmlWriter>類別用來讀取和寫入 XML。</span><span class="sxs-lookup"><span data-stu-id="8c97a-105">To control the serialization, implement the <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> and <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> methods to control the <xref:System.Xml.XmlReader> and <xref:System.Xml.XmlWriter> classes used to read and write the XML.</span></span> <span data-ttu-id="8c97a-106">這個範例，請參閱[How to： 區塊序列化資料](~/docs/standard/serialization/how-to-chunk-serialized-data.md)。</span><span class="sxs-lookup"><span data-stu-id="8c97a-106">For an example of this, see [How to: Chunk Serialized Data](~/docs/standard/serialization/how-to-chunk-serialized-data.md).</span></span>  
  
 <span data-ttu-id="8c97a-107">第二個原因是要能夠控制結構描述。</span><span class="sxs-lookup"><span data-stu-id="8c97a-107">The second reason is to be able to control the schema.</span></span> <span data-ttu-id="8c97a-108">若要啟用此功能，您必須套用<xref:System.Xml.Serialization.XmlSchemaProviderAttribute>以可序列化類型，並指定傳回的結構描述之靜態成員的名稱。</span><span class="sxs-lookup"><span data-stu-id="8c97a-108">To enable this, you must apply the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> to the serializable type, and specify the name of the static member that returns the schema.</span></span> <span data-ttu-id="8c97a-109">請參閱<xref:System.Xml.Serialization.XmlSchemaProviderAttribute>的範例。</span><span class="sxs-lookup"><span data-stu-id="8c97a-109">See the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> for an example.</span></span>  
  
 <span data-ttu-id="8c97a-110">實作介面的類別必須具有無參數建構函式。</span><span class="sxs-lookup"><span data-stu-id="8c97a-110">A class that implements the interface must have a parameterless constructor.</span></span> <span data-ttu-id="8c97a-111">這是一個必要條件<xref:System.Xml.Serialization.XmlSerializer>類別。</span><span class="sxs-lookup"><span data-stu-id="8c97a-111">This is a requirement of the <xref:System.Xml.Serialization.XmlSerializer> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c97a-112">下列範例程式碼顯示實作<xref:System.Xml.Serialization.IXmlSerializable>序列化私用欄位的介面。</span><span class="sxs-lookup"><span data-stu-id="8c97a-112">The following example code shows an implementation of the <xref:System.Xml.Serialization.IXmlSerializable> interface that serializes a private field.</span></span>  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#0](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#0)]
 [!code-csharp[XmlSerialization_IXmlSerializable#0](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.Schema.XmlSchema GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSchema () As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ GetSchema();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8c97a-113">這個方法已保留且不應使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c97a-113">This method is reserved and should not be used.</span>
          </span>
          <span data-ttu-id="8c97a-114">實作 <see langword="IXmlSerializable" /> 介面時，您應該從這個方法傳回 <see langword="null" /> (在 Visual Basic 中為 <see langword="Nothing" />)，而且如果需要指定自訂結構描述，請改為將 <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> 套用至類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c97a-114">When implementing the <see langword="IXmlSerializable" /> interface, you should return <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> to the class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8c97a-115">
            <see cref="T:System.Xml.Schema.XmlSchema" />，描述物件的 XML 表示，該物件由 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> 方法產生，由 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> 方法取用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c97a-115">An <see cref="T:System.Xml.Schema.XmlSchema" /> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c97a-116">當序列化或還原序列化物件，<xref:System.Xml.Serialization.XmlSerializer>類別不會執行 XML 驗證。</span><span class="sxs-lookup"><span data-stu-id="8c97a-116">When serializing or deserializing an object, the <xref:System.Xml.Serialization.XmlSerializer> class does not perform XML validation.</span></span> <span data-ttu-id="8c97a-117">基於這個理由，通常很安全，使其省略結構描述資訊提供一般實作這個方法，例如藉由傳回`null`(`Nothing`在 Visual Basic 中)。</span><span class="sxs-lookup"><span data-stu-id="8c97a-117">For this reason, it is often safe to omit schema information by providing a trivial implementation of this method, for example by returning `null` (`Nothing` in Visual Basic).</span></span>  
  
 <span data-ttu-id="8c97a-118">如果您不需要提供結構描述資訊，您應該使用<xref:System.Xml.Serialization.XmlSchemaProviderAttribute>屬性。</span><span class="sxs-lookup"><span data-stu-id="8c97a-118">If providing schema information is necessary, you should use the <xref:System.Xml.Serialization.XmlSchemaProviderAttribute> attribute.</span></span> <span data-ttu-id="8c97a-119">`GetSchema`方法仍應傳回`null`(或`Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="8c97a-119">The `GetSchema` method should still return `null` (or `Nothing`).</span></span>  
  
 <span data-ttu-id="8c97a-120">某些[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]型別以及舊版實作的自訂型別`IXmlSerializable`可能使用介面`GetSchema`而不是`XmlSchemaProvider`。</span><span class="sxs-lookup"><span data-stu-id="8c97a-120">Some [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] types as well as legacy custom types implementing the `IXmlSerializable` interface may be using `GetSchema` instead of `XmlSchemaProvider`.</span></span> <span data-ttu-id="8c97a-121">在此情況下，方法會傳回正確的 XML 結構描述，描述所產生之物件的 XML 表示<xref:System.Data.DataSet.WriteXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8c97a-121">In this case, the method returns an accurate XML schema that describes the XML representation of the object generated by the <xref:System.Data.DataSet.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public void ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXml (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXml(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="8c97a-122">還原序列化物件的 <see cref="T:System.Xml.XmlReader" /> 資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c97a-122">The <see cref="T:System.Xml.XmlReader" /> stream from which the object is deserialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c97a-123">從物件的 XML 表示產生該物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c97a-123">Generates an object from its XML representation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c97a-124"><xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A>方法必須 deserialization 物件使用的資訊，由寫入<xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8c97a-124">The <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> method must reconstitute your object using the information that was written by the <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="8c97a-125">呼叫這個方法時，讀取器位於包裝您的類型資訊的開始標記上。</span><span class="sxs-lookup"><span data-stu-id="8c97a-125">When this method is called, the reader is positioned on the start tag that wraps the information for your type.</span></span> <span data-ttu-id="8c97a-126">也就是直接在開始標記上，表示已序列化物件的開頭。</span><span class="sxs-lookup"><span data-stu-id="8c97a-126">That is, directly on the start tag that indicates the beginning of a serialized object.</span></span> <span data-ttu-id="8c97a-127">此方法傳回時，它必須有讀取整個項目從開始到結束，包括其所有內容。</span><span class="sxs-lookup"><span data-stu-id="8c97a-127">When this method returns, it must have read the entire element from beginning to end, including all of its contents.</span></span> <span data-ttu-id="8c97a-128">不同於<xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A>方法，此架構不會自動處理的包裝函式項目。</span><span class="sxs-lookup"><span data-stu-id="8c97a-128">Unlike the <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> method, the framework does not handle the wrapper element automatically.</span></span> <span data-ttu-id="8c97a-129">您的實作必須這麼做。</span><span class="sxs-lookup"><span data-stu-id="8c97a-129">Your implementation must do so.</span></span> <span data-ttu-id="8c97a-130">無法看到這些位置的規則可能會導致程式碼來產生意外發生執行階段例外狀況或損毀的資料。</span><span class="sxs-lookup"><span data-stu-id="8c97a-130">Failing to observe these positioning rules may cause code to generate unexpected runtime exceptions or corrupt data.</span></span>  
  
 <span data-ttu-id="8c97a-131">當實作這個方法，您應該考慮可能性惡意使用者可能會提供格式正確，但不正確的 XML 表示，以停用或變更您的應用程式的行為。</span><span class="sxs-lookup"><span data-stu-id="8c97a-131">When implementing this method, you should consider the possibility that a malicious user might provide a well-formed but invalid XML representation in order to disable or otherwise alter the behavior of your application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c97a-132">下列範例說明實作<xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8c97a-132">The following example illustrates an implementation of the <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> method.</span></span>  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#2](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#2)]
 [!code-csharp[XmlSerialization_IXmlSerializable#2](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#2)]  
  
 <span data-ttu-id="8c97a-133">下列範例說明使用<xref:System.Xml.Serialization.XmlSerializer>還原序列化此物件的類別。</span><span class="sxs-lookup"><span data-stu-id="8c97a-133">The following example illustrates the use of the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize this object.</span></span>  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#20](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/reader.cpp#20)]
 [!code-csharp[XmlSerialization_IXmlSerializable#20](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/reader.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="8c97a-134">序列化物件的目標 <see cref="T:System.Xml.XmlWriter" /> 資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c97a-134">The <see cref="T:System.Xml.XmlWriter" /> stream to which the object is serialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8c97a-135">將物件轉換成其 XML 表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8c97a-135">Converts an object into its XML representation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c97a-136"><xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A>您提供的實作應該寫出物件的 XML 表示法。</span><span class="sxs-lookup"><span data-stu-id="8c97a-136">The <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> implementation you provide should write out the XML representation of the object.</span></span> <span data-ttu-id="8c97a-137">架構會寫入包裝函式項目並放在其開始之後的 XML 寫入器。</span><span class="sxs-lookup"><span data-stu-id="8c97a-137">The framework writes a wrapper element and positions the XML writer after its start.</span></span> <span data-ttu-id="8c97a-138">您的實作可能會撰寫其內容，包括子項目。</span><span class="sxs-lookup"><span data-stu-id="8c97a-138">Your implementation may write its contents, including child elements.</span></span> <span data-ttu-id="8c97a-139">架構，然後關閉包裝函式項目。</span><span class="sxs-lookup"><span data-stu-id="8c97a-139">The framework then closes the wrapper element.</span></span>  
  
 <span data-ttu-id="8c97a-140">將足夠的資訊寫入<xref:System.Xml.XmlWriter>允許的資料流<xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A>以重新構成您物件的方法。</span><span class="sxs-lookup"><span data-stu-id="8c97a-140">Write sufficient information to the <xref:System.Xml.XmlWriter> stream to allow the <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A> method to reconstitute your object.</span></span>  
  
 <span data-ttu-id="8c97a-141">比方說，如果您的物件狀態會包括陣列變數，務必要寫入的陣列長度或用於父項目包含描述陣列值的項目，好讓您知道要讀取時重新組成物件的多少值。</span><span class="sxs-lookup"><span data-stu-id="8c97a-141">For example, if your object state includes an array variable, be sure to write the length of the array, or use a parent element to contain the elements that describe the array values, so that you know how many values to read when the object is reconstituted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c97a-142">下列範例說明實作<xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8c97a-142">The following example illustrates an implementation of the <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A> method.</span></span>  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#1)]
 [!code-csharp[XmlSerialization_IXmlSerializable#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#1)]  
  
 <span data-ttu-id="8c97a-143">下列範例說明使用<xref:System.Xml.Serialization.XmlSerializer>還原序列化此物件的類別。</span><span class="sxs-lookup"><span data-stu-id="8c97a-143">The following example illustrates the use of the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize this object.</span></span>  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#10](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/writer.cpp#10)]
 [!code-csharp[XmlSerialization_IXmlSerializable#10](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/writer.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>