<Type Name="IXmlSerializable" FullName="System.Xml.Serialization.IXmlSerializable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6b7fc94bb14f6a03040ba51e51b69ae4a5a92699" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48712493" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IXmlSerializable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXmlSerializable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXmlSerializable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXmlSerializable" />
  <TypeSignature Language="F#" Value="type IXmlSerializable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>為 XML 序列化和還原序列化提供自訂格式。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有兩個原因，若要實作這個介面。 第一個是控制如何將物件序列化或還原序列化<xref:System.Xml.Serialization.XmlSerializer>。 比方說，您可以資料分成而非緩衝處理大型資料集，位元組區塊，並也避免資料進行編碼使用 Base64 編碼方式時，就會發生擴大。 若要控制序列化，實作<xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A>並<xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A>方法來控制<xref:System.Xml.XmlReader>和<xref:System.Xml.XmlWriter>類別用來讀取和寫入 XML。 這個範例，請參閱[如何： 區塊序列化資料](~/docs/standard/serialization/how-to-chunk-serialized-data.md)。  
  
 第二個原因是要能夠控制的結構描述。 若要啟用此功能，您必須套用<xref:System.Xml.Serialization.XmlSchemaProviderAttribute>設為可序列化類型，並指定傳回的結構描述之靜態成員的名稱。 請參閱<xref:System.Xml.Serialization.XmlSchemaProviderAttribute>的範例。  
  
 實作介面的類別必須具有無參數建構函式。 這是需求<xref:System.Xml.Serialization.XmlSerializer>類別。  
  
   
  
## Examples  
 下列程式碼範例示範如何實作<xref:System.Xml.Serialization.IXmlSerializable>序列化的私用欄位的介面。  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#0](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#0)]
 [!code-csharp[XmlSerialization_IXmlSerializable#0](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#0)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">XML 序列化簡介</related>
  </Docs>
  <Members>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.Schema.XmlSchema GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSchema () As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ GetSchema();" />
      <MemberSignature Language="F#" Value="abstract member GetSchema : unit -&gt; System.Xml.Schema.XmlSchema" Usage="iXmlSerializable.GetSchema " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>這個方法已保留且不應使用。 實作 <see langword="IXmlSerializable" /> 介面時，您應該從這個方法傳回 <see langword="null" /> (在 Visual Basic 中為 <see langword="Nothing" />)，而且如果需要指定自訂結構描述，請改為將 <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> 套用至類別。</summary>
        <returns>
          <see cref="T:System.Xml.Schema.XmlSchema" />，描述物件的 XML 表示，該物件由 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> 方法產生，由 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> 方法取用。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當序列化或還原序列化物件，<xref:System.Xml.Serialization.XmlSerializer>類別不會執行 XML 驗證。 基於這個理由，通常很放心地省略結構描述資訊提供一般的實作，這個方法，例如藉由傳回`null`(`Nothing` Visual Basic 中)。  
  
 如果提供的結構描述資訊是必要的您應該使用<xref:System.Xml.Serialization.XmlSchemaProviderAttribute>屬性。 `GetSchema`方法應該仍會傳回`null`(或`Nothing`)。  
  
 有些[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]類型，以及舊版實作的自訂型別`IXmlSerializable`可能會使用介面`GetSchema`而不是`XmlSchemaProvider`。 在此情況下，方法會傳回正確的 XML 結構描述，描述所產生之物件的 XML 表示<xref:System.Data.DataSet.WriteXml%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public void ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXml (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXml(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadXml : System.Xml.XmlReader -&gt; unit" Usage="iXmlSerializable.ReadXml reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">還原序列化物件的 <see cref="T:System.Xml.XmlReader" /> 資料流。</param>
        <summary>從物件的 XML 表示產生該物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A>方法必須重新建構您的物件使用的資訊來寫入<xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A>方法。  
  
 呼叫這個方法時，讀取器定位於包裝您的型別資訊的開始標記上。 也就是直接在開始標記上，表示已序列化物件的開頭。 當這個方法傳回時，它必須擁有讀取整個項目從開始到結束，包括其所有內容。 不同於<xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A>方法，此架構不會自動處理的包裝函式項目。 您的實作必須這麼做。 無法看到這些位置的規則可能會導致意外發生執行階段例外狀況或損毀的資料產生的程式碼。  
  
 在實作這個方法時，您應該考慮可能的惡意使用者可能會提供格式正確，但不正確的 XML 表示，若要停用或變更您的應用程式的行為，則。  
  
   
  
## Examples  
 下列範例說明實作<xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A>方法。  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#2](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#2)]
 [!code-csharp[XmlSerialization_IXmlSerializable#2](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#2)]  
  
 下列範例示範如何將<xref:System.Xml.Serialization.XmlSerializer>還原序列化此物件的類別。  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#20](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/reader.cpp#20)]
 [!code-csharp[XmlSerialization_IXmlSerializable#20](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/reader.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member WriteXml : System.Xml.XmlWriter -&gt; unit" Usage="iXmlSerializable.WriteXml writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">序列化物件的目標 <see cref="T:System.Xml.XmlWriter" /> 資料流。</param>
        <summary>將物件轉換成其 XML 表示。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A>您提供的實作應該寫出物件的 XML 表示法。 架構會寫入包裝函式項目，並放置在其開始之後的 XML 寫入器。 您的實作可能會寫入其內容，包括子項目。 Framework 便會關閉包裝函式項目。  
  
 將足夠的資訊寫入<xref:System.Xml.XmlWriter>允許的資料流<xref:System.Xml.Serialization.IXmlSerializable.ReadXml%2A>以重新構成您物件的方法。  
  
 比方說，如果您的物件狀態包含陣列變數，務必撰寫陣列的長度，或使用父項目包含描述陣列值的項目，好讓您知道要讀取時重新組成物件的多少值。  
  
   
  
## Examples  
 下列範例說明實作<xref:System.Xml.Serialization.IXmlSerializable.WriteXml%2A>方法。  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/person.cpp#1)]
 [!code-csharp[XmlSerialization_IXmlSerializable#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/person.cs#1)]  
  
 下列範例示範如何將<xref:System.Xml.Serialization.XmlSerializer>還原序列化此物件的類別。  
  
 [!code-cpp[XmlSerialization_IXmlSerializable#10](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CPP/writer.cpp#10)]
 [!code-csharp[XmlSerialization_IXmlSerializable#10](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerialization_IXmlSerializable/CS/writer.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>