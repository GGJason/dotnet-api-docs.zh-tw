<Type Name="ExpressionMorphHelper" FullName="System.Activities.Presentation.Expressions.ExpressionMorphHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d366ff9475d8a954aa354d1a88afcd7cd7243784" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30348812" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ExpressionMorphHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionMorphHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Expressions.ExpressionMorphHelper" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionMorphHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionMorphHelper abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示運算式 morph 協助程式。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionMorphHelper ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Expressions.ExpressionMorphHelper.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionMorphHelper();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Activities.Presentation.Expressions.ExpressionMorphHelper" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryInferReturnType">
      <MemberSignature Language="C#" Value="public virtual bool TryInferReturnType (System.Activities.ActivityWithResult expression, System.Activities.Presentation.EditingContext context, out Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryInferReturnType(class System.Activities.ActivityWithResult expression, class System.Activities.Presentation.EditingContext context, [out] class System.Type&amp; returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Expressions.ExpressionMorphHelper.TryInferReturnType(System.Activities.ActivityWithResult,System.Activities.Presentation.EditingContext,System.Type@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryInferReturnType (expression As ActivityWithResult, context As EditingContext, ByRef returnType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryInferReturnType(System::Activities::ActivityWithResult ^ expression, System::Activities::Presentation::EditingContext ^ context, [Runtime::InteropServices::Out] Type ^ % returnType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Activities.ActivityWithResult" />
        <Parameter Name="context" Type="System.Activities.Presentation.EditingContext" />
        <Parameter Name="returnType" Type="System.Type&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="expression">使用的運算式。</param>
        <param name="context">內容。</param>
        <param name="returnType">運算式的傳回型別。</param>
        <summary>傳回運算式是否會嘗試推斷傳回型別。</summary>
        <returns>
          如果運算式會嘗試推斷傳回型別，則為 <see langword="True" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryMorphExpression">
      <MemberSignature Language="C#" Value="public abstract bool TryMorphExpression (System.Activities.ActivityWithResult expression, bool isLocationExpression, Type newType, System.Activities.Presentation.EditingContext context, out System.Activities.ActivityWithResult newExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryMorphExpression(class System.Activities.ActivityWithResult expression, bool isLocationExpression, class System.Type newType, class System.Activities.Presentation.EditingContext context, [out] class System.Activities.ActivityWithResult&amp; newExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Expressions.ExpressionMorphHelper.TryMorphExpression(System.Activities.ActivityWithResult,System.Boolean,System.Type,System.Activities.Presentation.EditingContext,System.Activities.ActivityWithResult@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryMorphExpression (expression As ActivityWithResult, isLocationExpression As Boolean, newType As Type, context As EditingContext, ByRef newExpression As ActivityWithResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool TryMorphExpression(System::Activities::ActivityWithResult ^ expression, bool isLocationExpression, Type ^ newType, System::Activities::Presentation::EditingContext ^ context, [Runtime::InteropServices::Out] System::Activities::ActivityWithResult ^ % newExpression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Activities.ActivityWithResult" />
        <Parameter Name="isLocationExpression" Type="System.Boolean" />
        <Parameter Name="newType" Type="System.Type" />
        <Parameter Name="context" Type="System.Activities.Presentation.EditingContext" />
        <Parameter Name="newExpression" Type="System.Activities.ActivityWithResult&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="expression">要變形的運算式。</param>
        <param name="isLocationExpression">
          如果運算式是位置運算式，則為 <see langword="True" />，否則為 <see langword="false" />。</param>
        <param name="newType">運算式的新型別。</param>
        <param name="context">內容。</param>
        <param name="newExpression">新的運算式。</param>
        <summary>傳回運算式是否嘗試變形。</summary>
        <returns>已變形的運算式。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>