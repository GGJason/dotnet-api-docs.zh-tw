<Type Name="Graphics+DrawImageAbort" FullName="System.Drawing.Graphics+DrawImageAbort">
  <Metadata><Meta Name="ms.openlocfilehash" Value="32b7da5b1dd1abc559cb9769b54c47f9c310e841" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56766677" /></Metadata><TypeSignature Language="C#" Value="public delegate bool Graphics.DrawImageAbort(IntPtr callbackdata);" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed Graphics/DrawImageAbort extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Graphics.DrawImageAbort" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Graphics.DrawImageAbort(callbackdata As IntPtr) As Boolean " />
  <TypeSignature Language="C++ CLI" Value="public: delegate bool Graphics::DrawImageAbort(IntPtr callbackdata);" />
  <TypeSignature Language="F#" Value="type Graphics.DrawImageAbort = delegate of nativeint -&gt; bool" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="callbackdata" Type="System.IntPtr" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="callbackdata">內部指標，指定回呼方法的資料。 這個參數不會由所有的 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 多載來傳遞。 您可以藉由檢查 <see cref="F:System.IntPtr.Zero" /> 值來測試它是否存在。</param>
    <summary>提供回呼 (Callback) 方法來決定 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 方法應該在何時提前取消執行並停止繪製影像。</summary>
    <returns>如果這個方法決定 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 方法應該提前停止執行，則這個方法會傳回 <see langword="true" />。 否則它會傳回 <see langword="false" /> 來指示 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 方法應該繼續執行。</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法用於搭配<xref:System.Drawing.Graphics.DrawImage%2A>方法的<xref:System.Drawing.Graphics>類別。 特定多載<xref:System.Drawing.Graphics.DrawImage%2A>方法呼叫來了解多載應該停止或繼續執行此類型的應用程式定義的回呼方法。  
  
 在執行期間，相關<xref:System.Drawing.Graphics.DrawImage%2A>多載經常會呼叫這個回呼方法，以了解他們應該停止繪製指定的映像，或它們應該繼續繪製影像。 <xref:System.Drawing.Graphics.DrawImageAbort>回呼方法可以判斷是否要繼續，或未根據包含在其中選擇演算法，選擇性地使用資料 callbackdata 參數傳遞給它。 比方說，演算法可能會判斷映像已捲動超出螢幕，並發出信號以取消<xref:System.Drawing.Graphics.DrawImage%2A>方法來停止繪圖。  
  
 這個事件處理方法的使用者宣告必須具有相同的參數<xref:System.Drawing.Graphics.DrawImageAbort>委派宣告。  
  
   
  
## Examples  
 此範例中是以簡單的實作<xref:System.Drawing.Graphics.DrawImageAbort>委派。 它只會檢查是否<xref:System.Drawing.Graphics.DrawImage%2A>方法已傳遞它使用 callbackdata 參數的資料。 (有些<xref:System.Drawing.Graphics.DrawImage%2A>多載只有`DrawImageAbort`參數並不傳遞任何資料; 有些多載同時擁有`DrawImageAbort`和`callbackdata`參數也可以傳遞資料。)如果傳遞任何資料，它會傳回`true`來表示呼叫<xref:System.Drawing.Graphics.DrawImage%2A>方法，它應該取消繪圖。 如果已傳遞資料，它會傳回`false`來表示繪製應該繼續。  
  
 此回呼中的實際實作牽涉到的某些準則，以取消或繼續執行實際的審查。  
  
```vb  
Private Function DrawImageCallback(callBackData As IntPtr) As Boolean  
     ' Test for call that passes callBackData parameter.  
     If callBackData.Equals(IntPtr.Zero) Then  
         ' If no callBackData passed, abort DrawImage method.  
         Return True  
     Else  
         ' If callBackData passed, continue DrawImage method.  
         Return False  
     End If  
 End Function 'DrawImageCallback  
```  
  
```csharp  
// Define DrawImageAbort callback method.  
 private bool DrawImageCallback(IntPtr callbackdata)  
 {  
    // Test for call that passes callBackData parameter.  
    if(callbackdata==IntPtr.Zero)  
    {  
       // If no callbackdata passed, cancel DrawImage method.  
       return true;  
    }  
    else  
    {  
       // If callbackdata passed, continue DrawImage method.  
       return false;  
    }  
 }  
```  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>