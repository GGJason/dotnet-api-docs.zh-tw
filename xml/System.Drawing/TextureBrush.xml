<Type Name="TextureBrush" FullName="System.Drawing.TextureBrush">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="72a560cb5387fa7e94c93363525362ea5975aa51" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37656382" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TextureBrush : System.Drawing.Brush" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TextureBrush extends System.Drawing.Brush" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.TextureBrush" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TextureBrush&#xA;Inherits Brush" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextureBrush sealed : System::Drawing::Brush" />
  <TypeSignature Language="F#" Value="type TextureBrush = class&#xA;    inherit Brush" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Brush</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Drawing.TextureBrush" /> 類別的每一個屬性都是 <see cref="T:System.Drawing.Brush" /> 物件，這個物件會使用影像來填滿形狀的內部。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何取得新的點陣圖使用<xref:System.Drawing.Image.FromFile%2A>方法。 它也會示範<xref:System.Drawing.TextureBrush>。  
  
 這個範例被設計來搭配 Windows Form。 建立表單，其中包含名為 Button2 的按鈕。 程式碼貼入表單和按鈕的相關聯的 Button2_Click 方法`Click`事件。  
  
 [!code-cpp[System.Drawing.ImageExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ImageExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ImageExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化使用指定影像的 <see cref="T:System.Drawing.TextureBrush" /> 物件。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextureBrush (System.Drawing.Image bitmap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image bitmap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bitmap As Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextureBrush(System::Drawing::Image ^ bitmap);" />
      <MemberSignature Language="F#" Value="new System.Drawing.TextureBrush : System.Drawing.Image -&gt; System.Drawing.TextureBrush" Usage="new System.Drawing.TextureBrush bitmap" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bitmap" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="bitmap">這個 <see cref="T:System.Drawing.Image" /> 物件用來填滿內部的 <see cref="T:System.Drawing.TextureBrush" /> 物件。</param>
        <summary>初始化使用指定影像的 <see cref="T:System.Drawing.TextureBrush" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何取得新的點陣圖使用<xref:System.Drawing.Image.FromFile%2A>方法。 它也會示範<xref:System.Drawing.TextureBrush>。  
  
 這個範例被設計來搭配 Windows Form。 建立表單，其中包含名為 Button2 的按鈕。 程式碼貼入表單和按鈕的相關聯的 Button2_Click 方法`Click`事件。  
  
 [!code-cpp[System.Drawing.ImageExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ImageExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ImageExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextureBrush (System.Drawing.Image image, System.Drawing.Drawing2D.WrapMode wrapMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image image, valuetype System.Drawing.Drawing2D.WrapMode wrapMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextureBrush(System::Drawing::Image ^ image, System::Drawing::Drawing2D::WrapMode wrapMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.TextureBrush : System.Drawing.Image * System.Drawing.Drawing2D.WrapMode -&gt; System.Drawing.TextureBrush" Usage="new System.Drawing.TextureBrush (image, wrapMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="wrapMode" Type="System.Drawing.Drawing2D.WrapMode" />
      </Parameters>
      <Docs>
        <param name="image">這個 <see cref="T:System.Drawing.Image" /> 物件用來填滿內部的 <see cref="T:System.Drawing.TextureBrush" /> 物件。</param>
        <param name="wrapMode">
          <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 列舉型別，指定如何並排這個 <see cref="T:System.Drawing.TextureBrush" /> 物件。</param>
        <summary>初始化新的 <see cref="T:System.Drawing.TextureBrush" /> 物件，這個物件會使用指定的影像和環繞模式。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextureBrush (System.Drawing.Image image, System.Drawing.Rectangle dstRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image image, valuetype System.Drawing.Rectangle dstRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextureBrush(System::Drawing::Image ^ image, System::Drawing::Rectangle dstRect);" />
      <MemberSignature Language="F#" Value="new System.Drawing.TextureBrush : System.Drawing.Image * System.Drawing.Rectangle -&gt; System.Drawing.TextureBrush" Usage="new System.Drawing.TextureBrush (image, dstRect)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="dstRect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="image">這個 <see cref="T:System.Drawing.Image" /> 物件用來填滿內部的 <see cref="T:System.Drawing.TextureBrush" /> 物件。</param>
        <param name="dstRect">
          <see cref="T:System.Drawing.Rectangle" /> 結構，表示這個 <see cref="T:System.Drawing.TextureBrush" /> 物件的週框。</param>
        <summary>初始化新的 <see cref="T:System.Drawing.TextureBrush" /> 物件，這個物件會使用指定的影像和週框。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextureBrush (System.Drawing.Image image, System.Drawing.RectangleF dstRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image image, valuetype System.Drawing.RectangleF dstRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextureBrush(System::Drawing::Image ^ image, System::Drawing::RectangleF dstRect);" />
      <MemberSignature Language="F#" Value="new System.Drawing.TextureBrush : System.Drawing.Image * System.Drawing.RectangleF -&gt; System.Drawing.TextureBrush" Usage="new System.Drawing.TextureBrush (image, dstRect)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="dstRect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="image">這個 <see cref="T:System.Drawing.Image" /> 物件用來填滿內部的 <see cref="T:System.Drawing.TextureBrush" /> 物件。</param>
        <param name="dstRect">
          <see cref="T:System.Drawing.RectangleF" /> 結構，表示這個 <see cref="T:System.Drawing.TextureBrush" /> 物件的週框。</param>
        <summary>初始化新的 <see cref="T:System.Drawing.TextureBrush" /> 物件，這個物件會使用指定的影像和週框。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextureBrush (System.Drawing.Image image, System.Drawing.Drawing2D.WrapMode wrapMode, System.Drawing.Rectangle dstRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image image, valuetype System.Drawing.Drawing2D.WrapMode wrapMode, valuetype System.Drawing.Rectangle dstRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextureBrush(System::Drawing::Image ^ image, System::Drawing::Drawing2D::WrapMode wrapMode, System::Drawing::Rectangle dstRect);" />
      <MemberSignature Language="F#" Value="new System.Drawing.TextureBrush : System.Drawing.Image * System.Drawing.Drawing2D.WrapMode * System.Drawing.Rectangle -&gt; System.Drawing.TextureBrush" Usage="new System.Drawing.TextureBrush (image, wrapMode, dstRect)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="wrapMode" Type="System.Drawing.Drawing2D.WrapMode" />
        <Parameter Name="dstRect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="image">這個 <see cref="T:System.Drawing.Image" /> 物件用來填滿內部的 <see cref="T:System.Drawing.TextureBrush" /> 物件。</param>
        <param name="wrapMode">
          <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 列舉型別，指定如何並排這個 <see cref="T:System.Drawing.TextureBrush" /> 物件。</param>
        <param name="dstRect">
          <see cref="T:System.Drawing.Rectangle" /> 結構，表示這個 <see cref="T:System.Drawing.TextureBrush" /> 物件的週框。</param>
        <summary>初始化新的 <see cref="T:System.Drawing.TextureBrush" /> 物件，這個物件會使用指定的影像、環繞模式和週框。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextureBrush (System.Drawing.Image image, System.Drawing.Drawing2D.WrapMode wrapMode, System.Drawing.RectangleF dstRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image image, valuetype System.Drawing.Drawing2D.WrapMode wrapMode, valuetype System.Drawing.RectangleF dstRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode,System.Drawing.RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextureBrush(System::Drawing::Image ^ image, System::Drawing::Drawing2D::WrapMode wrapMode, System::Drawing::RectangleF dstRect);" />
      <MemberSignature Language="F#" Value="new System.Drawing.TextureBrush : System.Drawing.Image * System.Drawing.Drawing2D.WrapMode * System.Drawing.RectangleF -&gt; System.Drawing.TextureBrush" Usage="new System.Drawing.TextureBrush (image, wrapMode, dstRect)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="wrapMode" Type="System.Drawing.Drawing2D.WrapMode" />
        <Parameter Name="dstRect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="image">這個 <see cref="T:System.Drawing.Image" /> 物件用來填滿內部的 <see cref="T:System.Drawing.TextureBrush" /> 物件。</param>
        <param name="wrapMode">
          <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 列舉型別，指定如何並排這個 <see cref="T:System.Drawing.TextureBrush" /> 物件。</param>
        <param name="dstRect">
          <see cref="T:System.Drawing.RectangleF" /> 結構，表示這個 <see cref="T:System.Drawing.TextureBrush" /> 物件的週框。</param>
        <summary>初始化新的 <see cref="T:System.Drawing.TextureBrush" /> 物件，這個物件會使用指定的影像、環繞模式和週框。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextureBrush (System.Drawing.Image image, System.Drawing.Rectangle dstRect, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image image, valuetype System.Drawing.Rectangle dstRect, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextureBrush(System::Drawing::Image ^ image, System::Drawing::Rectangle dstRect, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="new System.Drawing.TextureBrush : System.Drawing.Image * System.Drawing.Rectangle * System.Drawing.Imaging.ImageAttributes -&gt; System.Drawing.TextureBrush" Usage="new System.Drawing.TextureBrush (image, dstRect, imageAttr)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="dstRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="image">這個 <see cref="T:System.Drawing.Image" /> 物件用來填滿內部的 <see cref="T:System.Drawing.TextureBrush" /> 物件。</param>
        <param name="dstRect">
          <see cref="T:System.Drawing.Rectangle" /> 結構，表示這個 <see cref="T:System.Drawing.TextureBrush" /> 物件的週框。</param>
        <param name="imageAttr">
          <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 物件，包含這個 <see cref="T:System.Drawing.TextureBrush" /> 物件所使用影像的相關額外資訊。</param>
        <summary>初始化新的 <see cref="T:System.Drawing.TextureBrush" /> 物件，這個物件會使用指定的影像、週框和影像屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextureBrush (System.Drawing.Image image, System.Drawing.RectangleF dstRect, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image image, valuetype System.Drawing.RectangleF dstRect, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextureBrush(System::Drawing::Image ^ image, System::Drawing::RectangleF dstRect, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="new System.Drawing.TextureBrush : System.Drawing.Image * System.Drawing.RectangleF * System.Drawing.Imaging.ImageAttributes -&gt; System.Drawing.TextureBrush" Usage="new System.Drawing.TextureBrush (image, dstRect, imageAttr)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="dstRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="image">這個 <see cref="T:System.Drawing.Image" /> 物件用來填滿內部的 <see cref="T:System.Drawing.TextureBrush" /> 物件。</param>
        <param name="dstRect">
          <see cref="T:System.Drawing.RectangleF" /> 結構，表示這個 <see cref="T:System.Drawing.TextureBrush" /> 物件的週框。</param>
        <param name="imageAttr">
          <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 物件，包含這個 <see cref="T:System.Drawing.TextureBrush" /> 物件所使用影像的相關額外資訊。</param>
        <summary>初始化新的 <see cref="T:System.Drawing.TextureBrush" /> 物件，這個物件會使用指定的影像、週框和影像屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; obj" Usage="textureBrush.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立這個 <see cref="T:System.Drawing.TextureBrush" /> 物件的完全相同複本。</summary>
        <returns>這個方法所建立的 <see cref="T:System.Drawing.TextureBrush" /> 物件，其轉型為 <see cref="T:System.Object" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例專為搭配 Windows Form 使用，而且需要<xref:System.Windows.Forms.PaintEventArgs> `e`，這是參數的`Paint`事件處理常式。 程式碼會建立<xref:System.Drawing.TextureBrush>物件和該材質筆刷的完全相同複本，然後使用以填滿的矩形在畫面上的複本。  
  
 [!code-cpp[System.Drawing.ClassicTextureBrushExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicTextureBrushExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicTextureBrushExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Image">
      <MemberSignature Language="C#" Value="public System.Drawing.Image Image { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image Image" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.TextureBrush.Image" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Image As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Image ^ Image { System::Drawing::Image ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Image : System.Drawing.Image" Usage="System.Drawing.TextureBrush.Image" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與這個 <see cref="T:System.Drawing.Image" /> 物件關聯的 <see cref="T:System.Drawing.TextureBrush" /> 物件。</summary>
        <value>
          <see cref="T:System.Drawing.Image" /> 物件，表示這個 <see cref="T:System.Drawing.TextureBrush" /> 物件填滿形狀所用的影像。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MultiplyTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>依照指定的順序，根據指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 物件來乘以代表這個 <see cref="T:System.Drawing.TextureBrush" /> 物件之局部幾何轉換的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 物件。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.MultiplyTransform : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="textureBrush.MultiplyTransform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">幾何轉換所要乘以的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 物件。</param>
        <summary>藉由將指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 物件附加在前面，根據指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 物件來乘以代表這個 <see cref="T:System.Drawing.TextureBrush" /> 物件之局部幾何轉換的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 轉換矩陣<xref:System.Drawing.TextureBrush>物件會指定如何轉換定義紋理的影像。 比方說，如果轉換矩陣中指定的順時針旋轉 90 度旋轉，紋理的影像會旋轉 90 度順時針旋轉。  
  
   
  
## Examples  
 下列範例專為搭配 Windows Form 使用，而且需要<xref:System.Windows.Forms.PaintEventArgs> `e`，這是參數的`Paint`事件處理常式。 該程式碼執行下列動作：  
  
-   建立 <xref:System.Drawing.TextureBrush> 物件。  
  
-   建立新的矩陣，在 x 方向指定 50 個單位的翻譯。  
  
-   將材質筆刷的轉換矩陣與矩陣的相乘。  
  
-   填滿矩形，其使用的材質筆刷。  
  
 [!code-cpp[System.Drawing.ClassicTextureBrushExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicTextureBrushExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicTextureBrushExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.MultiplyTransform : System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="textureBrush.MultiplyTransform (matrix, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="matrix">幾何轉換所要乘以的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 物件。</param>
        <param name="order">
          <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 列舉，指定要乘以兩個矩陣的順序。</param>
        <summary>依照指定的順序，根據指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 物件來乘以代表這個 <see cref="T:System.Drawing.TextureBrush" /> 物件之局部幾何轉換的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 轉換矩陣<xref:System.Drawing.TextureBrush>物件會指定如何轉換定義紋理的影像。 比方說，如果轉換矩陣中指定的順時針旋轉 90 度旋轉，紋理的影像會旋轉 90 度順時針旋轉。  
  
   
  
## Examples  
 下列範例專為搭配 Windows Form 使用，而且需要<xref:System.Windows.Forms.PaintEventArgs> `e`，這是參數的`Paint`事件處理常式。 該程式碼執行下列動作：  
  
-   建立 <xref:System.Drawing.TextureBrush> 物件。  
  
-   建立新的矩陣，在 x 方向指定 50 個單位的翻譯。  
  
-   將材質筆刷的轉換矩陣與矩陣的相乘。  
  
-   填滿矩形，其使用的材質筆刷。  
  
 [!code-cpp[System.Drawing.ClassicTextureBrushExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicTextureBrushExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicTextureBrushExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTransform">
      <MemberSignature Language="C#" Value="public void ResetTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetTransform() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.ResetTransform" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetTransform ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetTransform();" />
      <MemberSignature Language="F#" Value="member this.ResetTransform : unit -&gt; unit" Usage="textureBrush.ResetTransform " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將此 <see cref="T:System.Drawing.TextureBrush" /> 物件的 <see langword="Transform" /> 屬性重設為單位矩陣。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例專為搭配 Windows Form 使用，而且需要<xref:System.Windows.Forms.PaintEventArgs> `e`，這是參數的`Paint`事件處理常式。 該程式碼執行下列動作：  
  
-   建立 <xref:System.Drawing.TextureBrush> 物件。  
  
-   旋轉 90 度的材質影像。  
  
-   填滿的矩形。  
  
-   重設識別轉換矩陣。  
  
-   填滿第二個矩形。  
  
 [!code-cpp[System.Drawing.ClassicTextureBrushExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicTextureBrushExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicTextureBrushExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RotateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>根據指定的角度來旋轉此 <see cref="T:System.Drawing.TextureBrush" /> 物件的局部幾何轉換。 這個方法會將旋轉附加到轉換之前。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.RotateTransform(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle);" />
      <MemberSignature Language="F#" Value="member this.RotateTransform : single -&gt; unit" Usage="textureBrush.RotateTransform angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle">旋轉的角度。</param>
        <summary>根據指定的角度來旋轉此 <see cref="T:System.Drawing.TextureBrush" /> 物件的局部幾何轉換。 這個方法會將旋轉附加到轉換之前。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例專為搭配 Windows Form 使用，而且需要<xref:System.Windows.Forms.PaintEventArgs> `e`，這是參數的`Paint`事件處理常式。 該程式碼執行下列動作：  
  
-   建立 <xref:System.Drawing.TextureBrush> 物件。  
  
-   旋轉 90 度的材質影像。  
  
-   填滿的矩形。  
  
 [!code-cpp[System.Drawing.ClassicTextureBrushExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicTextureBrushExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicTextureBrushExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.RotateTransform : single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="textureBrush.RotateTransform (angle, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle">旋轉的角度。</param>
        <param name="order">
          <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 列舉，指定要在之後或之前附加旋轉矩陣。</param>
        <summary>依照指定的順序，根據指定的量來旋轉此 <see cref="T:System.Drawing.TextureBrush" /> 物件的局部幾何轉換。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例專為搭配 Windows Form 使用，而且需要<xref:System.Windows.Forms.PaintEventArgs> `e`，這是參數的`Paint`事件處理常式。 該程式碼執行下列動作：  
  
-   建立 <xref:System.Drawing.TextureBrush> 物件。  
  
-   旋轉 90 度的材質影像。  
  
-   填滿的矩形。  
  
 [!code-cpp[System.Drawing.ClassicTextureBrushExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicTextureBrushExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicTextureBrushExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ScaleTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>以指定的數量來縮放這個 <see cref="T:System.Drawing.TextureBrush" /> 物件的局部幾何轉換。 這個方法會將縮放矩陣附加到轉換之前。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.ScaleTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy);" />
      <MemberSignature Language="F#" Value="member this.ScaleTransform : single * single -&gt; unit" Usage="textureBrush.ScaleTransform (sx, sy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="sx">X 方向縮放轉換的量。</param>
        <param name="sy">Y 方向縮放轉換的量。</param>
        <summary>以指定的數量來縮放這個 <see cref="T:System.Drawing.TextureBrush" /> 物件的局部幾何轉換。 這個方法會將縮放矩陣附加到轉換之前。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例專為搭配 Windows Form 使用，而且需要<xref:System.Windows.Forms.PaintEventArgs> `e`，這是參數的`Paint`事件處理常式。 該程式碼執行下列動作：  
  
-   建立 <xref:System.Drawing.TextureBrush> 物件。  
  
-   影像的調整紋理 x 方向的兩倍。  
  
-   填滿矩形在畫面上，使用的材質筆刷。  
  
 [!code-cpp[System.Drawing.ClassicTextureBrushExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicTextureBrushExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicTextureBrushExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.ScaleTransform : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="textureBrush.ScaleTransform (sx, sy, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="sx">X 方向縮放轉換的量。</param>
        <param name="sy">Y 方向縮放轉換的量。</param>
        <param name="order">
          <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 列舉，指定要在之後或之前附加縮放矩陣。</param>
        <summary>依照指定的順序，根據指定的量來縮放此 <see cref="T:System.Drawing.TextureBrush" /> 物件的局部幾何轉換。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例專為搭配 Windows Form 使用，而且需要<xref:System.Windows.Forms.PaintEventArgs> `e`，這是參數的`Paint`事件處理常式。 該程式碼執行下列動作：  
  
-   建立 <xref:System.Drawing.TextureBrush> 物件。  
  
-   影像的調整紋理 x 方向的兩倍。  
  
-   填滿矩形在畫面上，使用的材質筆刷。  
  
 [!code-cpp[System.Drawing.ClassicTextureBrushExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicTextureBrushExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicTextureBrushExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Matrix Transform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.Matrix Transform" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.TextureBrush.Transform" />
      <MemberSignature Language="VB.NET" Value="Public Property Transform As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::Matrix ^ Transform { System::Drawing::Drawing2D::Matrix ^ get(); void set(System::Drawing::Drawing2D::Matrix ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Drawing.Drawing2D.Matrix with get, set" Usage="System.Drawing.TextureBrush.Transform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 物件的複本，這個複本會為與這個 <see cref="T:System.Drawing.TextureBrush" /> 物件相關聯的影像定義局部幾何轉換。</summary>
        <value>
          <see cref="T:System.Drawing.Drawing2D.Matrix" /> 物件的複本，定義只套用至藉由使用這個 <see cref="T:System.Drawing.TextureBrush" /> 物件所繪製填色的幾何轉換。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 要轉譯、 調整、 旋轉或扭曲的映像，這個筆刷的紋理會定義可用的幾何轉換。 因為矩陣傳回和<xref:System.Drawing.TextureBrush.Transform%2A>屬性是筆刷的幾何轉換的複本，當您不再需要時，您應該處置的矩陣。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TranslateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>依照指定的順序，根據指定的維度來轉換此 <see cref="T:System.Drawing.TextureBrush" />物件的局部幾何轉換。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.TranslateTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy);" />
      <MemberSignature Language="F#" Value="member this.TranslateTransform : single * single -&gt; unit" Usage="textureBrush.TranslateTransform (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx">以 x 方向轉譯轉換所根據的維度。</param>
        <param name="dy">以 y 方向轉譯轉換所根據的維度。</param>
        <summary>根據指定的維度來轉譯此 <see cref="T:System.Drawing.TextureBrush" /> 物件的局部幾何轉換。 這個方法會將轉譯附加到轉換之前。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例專為搭配 Windows Form 使用，而且需要<xref:System.Windows.Forms.PaintEventArgs> `e`，這是參數的`Paint`事件處理常式。 該程式碼執行下列動作：  
  
-   建立 <xref:System.Drawing.TextureBrush> 物件。  
  
-   將材質的映像 50 個單位 x 方向的轉譯。  
  
-   填滿矩形在畫面上，使用的材質筆刷。  
  
 [!code-cpp[System.Drawing.ClassicTextureBrushExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.ClassicTextureBrushExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.ClassicTextureBrushExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.TextureBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.TranslateTransform : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="textureBrush.TranslateTransform (dx, dy, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="dx">以 x 方向轉譯轉換所根據的維度。</param>
        <param name="dy">以 y 方向轉譯轉換所根據的維度。</param>
        <param name="order">用來套用轉譯的順序 (附加在前端或後端)。</param>
        <summary>依照指定的順序，根據指定的維度來轉換此 <see cref="T:System.Drawing.TextureBrush" />物件的局部幾何轉換。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例專為搭配 Windows Form 使用，而且需要<xref:System.Windows.Forms.PaintEventArgs> `e`，這是參數的`Paint`事件處理常式。 該程式碼執行下列動作：  
  
-   建立 <xref:System.Drawing.TextureBrush> 物件。  
  
-   將材質的映像 50 個單位 x 方向的轉譯。  
  
-   填滿矩形在畫面上，使用的材質筆刷。  
  
 [!code-cpp[System.Drawing.ClassicTextureBrushExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.ClassicTextureBrushExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.ClassicTextureBrushExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicTextureBrushExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.WrapMode WrapMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.WrapMode WrapMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.TextureBrush.WrapMode" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapMode As WrapMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::WrapMode WrapMode { System::Drawing::Drawing2D::WrapMode get(); void set(System::Drawing::Drawing2D::WrapMode value); };" />
      <MemberSignature Language="F#" Value="member this.WrapMode : System.Drawing.Drawing2D.WrapMode with get, set" Usage="System.Drawing.TextureBrush.WrapMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.WrapMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 列舉型別 (Enumeration)，表示這個 <see cref="T:System.Drawing.TextureBrush" /> 物件的環繞模式。</summary>
        <value>
          <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 列舉型別，指定如何並排使用藉由使用這個 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 物件所繪製的填色。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何取得新的點陣圖使用<xref:System.Drawing.Image.FromFile%2A>方法。 它也會示範<xref:System.Drawing.TextureBrush.WrapMode%2A>屬性和<xref:System.Drawing.Drawing2D.WrapMode>列舉型別。  
  
 這個範例被設計來搭配 Windows Form。 建立表單，其中包含名為 Button2 的按鈕。 程式碼貼入表單和按鈕的相關聯的 Button2_Click 方法`Click`事件。  
  
 [!code-cpp[System.Drawing.ImageExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ImageExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ImageExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>