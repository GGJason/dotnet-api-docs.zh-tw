<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BufferedGraphicsContext.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56cebe4384e5215400e3718cf0dc794274c63580a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6cebe4384e5215400e3718cf0dc794274c63580a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>Provides methods for creating graphics buffers that can be used for double buffering.</source>
          <target state="translated">提供建立圖形緩衝區的方法，該緩衝區可用於雙重緩衝 (Double Buffering)。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> class allows you to implement custom double buffering for your graphics.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>類別可讓您實作自訂雙重緩衝的圖形。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.</source>
          <target state="translated">使用雙重緩衝的圖形可以減少或消除閃爍因重繪顯示介面的。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>The simplest way to use double buffering is to set the <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> control style flag on a control using the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method.</source>
          <target state="translated">使用雙重緩衝的最簡單方式是設定<ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph>控制樣式旗標控制使用<ph id="ph2">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> control styles flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph>控制項的控制項樣式旗標將所有繪製控制項的預設圖形緩衝區中，透過重新都導向而不需要任何額外的程式碼。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>This flag is set to <ph id="ph1">`true`</ph> by default.</source>
          <target state="translated">若要設定此旗標<ph id="ph1">`true`</ph>預設。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> class provides methods for creating and configuring a graphics buffer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>類別會提供用於建立及設定圖形緩衝區的方法。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method creates a <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>, which is a wrapper for a graphics buffer that also provides methods you can use to write to the buffer and render its contents to an output device.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph>方法會建立<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>，即也提供的方法來寫入緩衝區以及轉譯其內容至輸出裝置，您可以使用圖形緩衝區的包裝函式。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>You can retrieve the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> for the current application domain from the static <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">您可以擷取<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>目前應用程式定義域靜態<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>For graphically intensive applications such as animation, you can create a dedicated <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> using the constructor, but for most applications the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType&gt;</ph> property will be sufficient.</source>
          <target state="translated">等動畫大量繪圖功能的應用程式，您可以建立專用<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>使用建構函式，但大部分的應用程式<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType&gt;</ph>屬性會是足夠。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>For more information on drawing buffered graphics and custom buffering implementations, see <bpt id="p1">[</bpt>Double Buffered Graphics<ept id="p1">](~/docs/framework/winforms/advanced/double-buffered-graphics.md)</ept> and <bpt id="p2">[</bpt>How to: Manually Manage Buffered Graphics<ept id="p2">](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md)</ept>.</source>
          <target state="translated">如需有關繪圖已緩衝的圖形和緩衝處理的自訂實作的詳細資訊，請參閱<bpt id="p1">[</bpt>雙重緩衝的圖形<ept id="p1">](~/docs/framework/winforms/advanced/double-buffered-graphics.md)</ept>和<bpt id="p2">[</bpt>How to： 手動管理已緩衝的圖形<ept id="p2">](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md)</ept>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>The following code example demonstrates how to acquire the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> for the current application domain.</source>
          <target state="translated">下列程式碼範例示範如何取得<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>目前的應用程式定義域。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>This code is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class.</source>
          <target state="translated">這段程式碼是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphicsContext" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphicsContext" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.#ctor">
          <source>For graphically intensive applications such as animation, you can sometimes improve performance by using a dedicated <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> instead of the default instance provided by the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsManager&gt;</ph>.</source>
          <target state="translated">等動畫大量繪圖功能的應用程式，您有時可以改善效能使用專用<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>而不是所提供的預設執行個體<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsManager&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.#ctor">
          <source>This allows you to create and manage graphics buffers individually.</source>
          <target state="translated">這可讓您建立及管理個別的圖形緩衝區。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.#ctor">
          <source>You should always call <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph> when you finish using a dedicated <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>.</source>
          <target state="translated">您應該一律呼叫<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph>當您完成使用專用<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.#ctor">
          <source>For more information about dedicated graphics buffers, see <bpt id="p1">[</bpt>How to: Manually Manage Buffered Graphics<ept id="p1">](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md)</ept>.</source>
          <target state="translated">如需專用的圖形緩衝區的詳細資訊，請參閱<bpt id="p1">[</bpt>How to： 手動管理已緩衝的圖形<ept id="p1">](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md)</ept>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.Drawing.BufferedGraphicsContext">
          <source>Creates a graphics buffer.</source>
          <target state="translated">建立圖形緩衝區。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> to match the pixel format for the new buffer to.</source>
          <target state="translated">要與新緩衝區的像素格式相符之 <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> indicating the size of the buffer to create.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>，指出要建立的緩衝區大小。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>Creates a graphics buffer of the specified size using the pixel format of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">使用指定 <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> 的像素格式，建立指定大小的圖形緩衝區。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphics" /&gt;</ph> that can be used to draw to a buffer of the specified dimensions.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphics" /&gt;</ph>，可用於繪製到指定維度的緩衝區。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>When you call the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method with a rectangle whose size exceeds the value of the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt;</ph> property, a temporary <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> is created to allocate the buffer and provide a temporary context for the buffer.</source>
          <target state="translated">當您呼叫<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph>方法，其大小超過此值以矩形的<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt;</ph>屬性、 暫存<ph id="ph3">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>是用來配置緩衝區，並提供暫時的內容緩衝區。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The new <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> is distinct from the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> for the application domain and it is disposed automatically when the <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> returned by the <ph id="ph4">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method is disposed.</source>
          <target state="translated">新<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>不同<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>應用程式網域和它會自動公開當<ph id="ph3">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>傳回<ph id="ph4">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph>處置方法。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The following code example demonstrates creating a graphics buffer using the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method.</source>
          <target state="translated">下列程式碼範例將示範如何建立使用圖形緩衝區<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>This code is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class.</source>
          <target state="translated">這段程式碼是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> to a device context to match the pixel format of the new buffer to.</source>
          <target state="translated">一個指到裝置內容的 <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>，要與新緩衝區的像素格式相符。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> indicating the size of the buffer to create.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph>，指出要建立的緩衝區大小。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>Creates a graphics buffer of the specified size using the pixel format of the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph>.</source>
          <target state="translated">使用指定 <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> 的像素格式，建立指定大小的圖形緩衝區。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphics" /&gt;</ph> that can be used to draw to a buffer of the specified dimensions.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphics" /&gt;</ph>，可用於繪製到指定維度的緩衝區。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>When you call the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method with a rectangle whose size exceeds the value of the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt;</ph> property, a temporary <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> is created to allocate the buffer and provide a temporary context for the buffer.</source>
          <target state="translated">當您呼叫<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph>方法，其大小超過此值以矩形的<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt;</ph>屬性、 暫存<ph id="ph3">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>是用來配置緩衝區，並提供暫時的內容緩衝區。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>The new <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> is distinct from the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> for the application domain and it is disposed automatically when the <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> returned by the <ph id="ph4">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method is disposed.</source>
          <target state="translated">新<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>不同<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>應用程式網域和它會自動公開當<ph id="ph3">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>傳回<ph id="ph4">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph>處置方法。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>The following code example demonstrates creating a graphics buffer using the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method.</source>
          <target state="translated">下列程式碼範例將示範如何建立使用圖形緩衝區<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>This code is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class.</source>
          <target state="translated">這段程式碼是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>for access to unmanaged code.</source>
          <target state="translated">用於存取 unmanaged 程式碼。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
          <source>Related enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關的列舉： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphicsContext" /&gt;</ph>.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphicsContext" /&gt;</ph> 所使用的所有資源。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph> 使用完畢時，請呼叫 <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph> 方法會將 <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> 保留在無法使用的狀態。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> was occupying.</source>
          <target state="translated">在呼叫<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph>，您必須釋放所有參考<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>讓記憶體回收行程可以回收記憶體的<ph id="ph3">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>所佔用。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>實作 Dispose 方法<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>.</source>
          <target state="translated">在您釋放最後一個 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Dispose%2A&gt;</ph> 參考之前，請務必呼叫 <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>.</source>
          <target state="translated">否則，它所使用的資源將不會釋放直到記憶體回收行程呼叫<ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Finalize">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">在記憶體回收開始前，允許物件嘗試釋放資源，並執行其他清除作業。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphicsContext.Invalidate">
          <source>Disposes of the current graphics buffer, if a buffer has been allocated and has not yet been disposed.</source>
          <target state="translated">處置目前的圖形緩衝區，如果已配置緩衝區但尚未處置的話。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphicsContext.Invalidate">
          <source>If the graphics buffer is in use, it will be marked for disposal as soon as it is free; otherwise, it will be disposed immediately.</source>
          <target state="translated">如果正在使用中的圖形緩衝區，它會被標示為處置只要是完全免費。否則，它會處置立即。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
          <source>Gets or sets the maximum size of the buffer to use.</source>
          <target state="translated">取得或設定要使用之緩衝區的大小上限。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> indicating the maximum size of the buffer dimensions.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> 指出緩衝區維度的最大值。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
          <source>This property allows you to get or set the maximum dimensions for a buffer that should be retained in memory.</source>
          <target state="translated">這個屬性可讓您取得或設定應該保留在記憶體中緩衝區的最大維度。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
          <source>You can allocate a buffer of any size, however any buffer with dimensions greater than the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt;</ph> size will be used temporarily and then discarded when the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object is released.</source>
          <target state="translated">可讓您配置的緩衝區大小，不過任何維度大於緩衝區<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A&gt;</ph>大小會暫時使用後即捨棄時<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>釋放物件。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
          <source>The following example demonstrates setting the maximum size for the buffer for a <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>.</source>
          <target state="translated">下列範例會示範設定的緩衝區大小上限<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
          <source>This code is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class.</source>
          <target state="translated">這段程式碼是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
          <source>The height or width of the size is less than or equal to zero.</source>
          <target state="translated">大小的高度或寬度小於或等於零。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
          <source>for allowing user access to all windows.</source>
          <target state="translated">允許使用者存取權給所有視窗。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
          <source>Related enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">相關的列舉： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>