<Type Name="BufferedGraphicsContext" FullName="System.Drawing.BufferedGraphicsContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3cd33420e3c9ab1872718713285569f6c1365879" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52908912" /></Metadata><TypeSignature Language="C#" Value="public sealed class BufferedGraphicsContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BufferedGraphicsContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.BufferedGraphicsContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BufferedGraphicsContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BufferedGraphicsContext sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type BufferedGraphicsContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="afc2e-101">提供建立圖形緩衝區的方法，該緩衝區可用於雙重緩衝 (Double Buffering)。</span><span class="sxs-lookup"><span data-stu-id="afc2e-101">Provides methods for creating graphics buffers that can be used for double buffering.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afc2e-102"><xref:System.Drawing.BufferedGraphicsContext>類別可讓您實作圖形的自訂雙重緩衝。</span><span class="sxs-lookup"><span data-stu-id="afc2e-102">The <xref:System.Drawing.BufferedGraphicsContext> class allows you to implement custom double buffering for your graphics.</span></span> <span data-ttu-id="afc2e-103">使用雙重緩衝的圖形可以減少或消除因重繪顯示表面的閃爍。</span><span class="sxs-lookup"><span data-stu-id="afc2e-103">Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="afc2e-104">使用雙重緩衝的最簡單方式是設定<xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer>控制項上使用控制項的樣式旗標<xref:System.Windows.Forms.Control.SetStyle%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="afc2e-104">The simplest way to use double buffering is to set the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style flag on a control using the <xref:System.Windows.Forms.Control.SetStyle%2A> method.</span></span> <span data-ttu-id="afc2e-105">設定<xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer>控制控制項的樣式旗標將所有繪製控制項的預設圖形緩衝區中，透過重新都導向而不需要任何額外的程式碼。</span><span class="sxs-lookup"><span data-stu-id="afc2e-105">Setting the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control styles flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code.</span></span> <span data-ttu-id="afc2e-106">若要設定此旗標`true`預設。</span><span class="sxs-lookup"><span data-stu-id="afc2e-106">This flag is set to `true` by default.</span></span>  
  
 <span data-ttu-id="afc2e-107"><xref:System.Drawing.BufferedGraphicsContext>類別提供方法來建立和設定的圖形緩衝區。</span><span class="sxs-lookup"><span data-stu-id="afc2e-107">The <xref:System.Drawing.BufferedGraphicsContext> class provides methods for creating and configuring a graphics buffer.</span></span> <span data-ttu-id="afc2e-108"><xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>方法會建立<xref:System.Drawing.BufferedGraphics>，這是也會提供您可用來寫入至緩衝區以及轉譯其內容以輸出裝置方法的圖形緩衝區的包裝函式。</span><span class="sxs-lookup"><span data-stu-id="afc2e-108">The <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method creates a <xref:System.Drawing.BufferedGraphics>, which is a wrapper for a graphics buffer that also provides methods you can use to write to the buffer and render its contents to an output device.</span></span>  
  
 <span data-ttu-id="afc2e-109">您可以擷取<xref:System.Drawing.BufferedGraphicsContext>目前的應用程式定義域，靜態<xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="afc2e-109">You can retrieve the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="afc2e-110">對於大量繪圖應用程式，例如動畫，您可以建立專用<xref:System.Drawing.BufferedGraphicsContext>使用建構函式，但大部分的應用程式<xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType>屬性即可。</span><span class="sxs-lookup"><span data-stu-id="afc2e-110">For graphically intensive applications such as animation, you can create a dedicated <xref:System.Drawing.BufferedGraphicsContext> using the constructor, but for most applications the <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> property will be sufficient.</span></span>  
  
 <span data-ttu-id="afc2e-111">如需有關繪圖已緩衝的圖形和緩衝處理的自訂實作的詳細資訊，請參閱[雙重緩衝的圖形](~/docs/framework/winforms/advanced/double-buffered-graphics.md)和[How to:手動管理已緩衝的圖形](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md)。</span><span class="sxs-lookup"><span data-stu-id="afc2e-111">For more information on drawing buffered graphics and custom buffering implementations, see [Double Buffered Graphics](~/docs/framework/winforms/advanced/double-buffered-graphics.md) and [How to: Manually Manage Buffered Graphics](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afc2e-112">下列程式碼範例示範如何取得<xref:System.Drawing.BufferedGraphicsContext>目前的應用程式定義域。</span><span class="sxs-lookup"><span data-stu-id="afc2e-112">The following code example demonstrates how to acquire the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain.</span></span> <span data-ttu-id="afc2e-113">此程式碼是針對提供之較大範例的一部分<xref:System.Drawing.BufferedGraphics>類別。</span><span class="sxs-lookup"><span data-stu-id="afc2e-113">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#1)]
 [!code-csharp[BufferingExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#1)]
 [!code-vb[BufferingExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.BufferedGraphics" />
    <altmember cref="T:System.Drawing.BufferedGraphicsManager" />
    <altmember cref="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer" />
    <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="afc2e-114">雙重緩衝的圖形</span><span class="sxs-lookup"><span data-stu-id="afc2e-114">Double Buffered Graphics</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BufferedGraphicsContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BufferedGraphicsContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="afc2e-115">初始化 <see cref="T:System.Drawing.BufferedGraphicsContext" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="afc2e-115">Initializes a new instance of the <see cref="T:System.Drawing.BufferedGraphicsContext" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afc2e-116">大量繪圖應用程式，例如動畫，您有時可以改善效能使用專用<xref:System.Drawing.BufferedGraphicsContext>而不是所提供的預設執行個體<xref:System.Drawing.BufferedGraphicsManager>。</span><span class="sxs-lookup"><span data-stu-id="afc2e-116">For graphically intensive applications such as animation, you can sometimes improve performance by using a dedicated <xref:System.Drawing.BufferedGraphicsContext> instead of the default instance provided by the <xref:System.Drawing.BufferedGraphicsManager>.</span></span> <span data-ttu-id="afc2e-117">這可讓您建立和管理個別的圖形緩衝區。</span><span class="sxs-lookup"><span data-stu-id="afc2e-117">This allows you to create and manage graphics buffers individually.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="afc2e-118">您應該一律呼叫<xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>當您完成使用專用<xref:System.Drawing.BufferedGraphicsContext>。</span><span class="sxs-lookup"><span data-stu-id="afc2e-118">You should always call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> when you finish using a dedicated <xref:System.Drawing.BufferedGraphicsContext>.</span></span>  
  
 <span data-ttu-id="afc2e-119">如需專用的圖形緩衝區的詳細資訊，請參閱[How to:手動管理已緩衝的圖形](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md)。</span><span class="sxs-lookup"><span data-stu-id="afc2e-119">For more information about dedicated graphics buffers, see [How to: Manually Manage Buffered Graphics](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="afc2e-120">雙重緩衝的圖形</span><span class="sxs-lookup"><span data-stu-id="afc2e-120">Double Buffered Graphics</span></span></related>
        <related type="Article" href="~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md"><span data-ttu-id="afc2e-121">如何：手動管理已緩衝的圖形</span><span class="sxs-lookup"><span data-stu-id="afc2e-121">How to: Manually Manage Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Allocate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="afc2e-122">建立圖形緩衝區。</span><span class="sxs-lookup"><span data-stu-id="afc2e-122">Creates a graphics buffer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Allocate">
      <MemberSignature Language="C#" Value="public System.Drawing.BufferedGraphics Allocate (System.Drawing.Graphics targetGraphics, System.Drawing.Rectangle targetRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.BufferedGraphics Allocate(class System.Drawing.Graphics targetGraphics, valuetype System.Drawing.Rectangle targetRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Allocate (targetGraphics As Graphics, targetRectangle As Rectangle) As BufferedGraphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::BufferedGraphics ^ Allocate(System::Drawing::Graphics ^ targetGraphics, System::Drawing::Rectangle targetRectangle);" />
      <MemberSignature Language="F#" Value="member this.Allocate : System.Drawing.Graphics * System.Drawing.Rectangle -&gt; System.Drawing.BufferedGraphics" Usage="bufferedGraphicsContext.Allocate (targetGraphics, targetRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.BufferedGraphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetGraphics" Type="System.Drawing.Graphics" />
        <Parameter Name="targetRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="targetGraphics"><span data-ttu-id="afc2e-123">要與新緩衝區的像素格式相符之 <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="afc2e-123">The <see cref="T:System.Drawing.Graphics" /> to match the pixel format for the new buffer to.</span></span></param>
        <param name="targetRectangle"><span data-ttu-id="afc2e-124"><see cref="T:System.Drawing.Rectangle" />，指出要建立的緩衝區大小。</span><span class="sxs-lookup"><span data-stu-id="afc2e-124">A <see cref="T:System.Drawing.Rectangle" /> indicating the size of the buffer to create.</span></span></param>
        <summary><span data-ttu-id="afc2e-125">使用指定 <see cref="T:System.Drawing.Graphics" /> 的像素格式，建立指定大小的圖形緩衝區。</span><span class="sxs-lookup"><span data-stu-id="afc2e-125">Creates a graphics buffer of the specified size using the pixel format of the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="afc2e-126"><see cref="T:System.Drawing.BufferedGraphics" />，可用於繪製到指定維度的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="afc2e-126">A <see cref="T:System.Drawing.BufferedGraphics" /> that can be used to draw to a buffer of the specified dimensions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afc2e-127">當您呼叫<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>方法以矩形大小超過此值的<xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A>屬性中，暫存<xref:System.Drawing.BufferedGraphicsContext>會建立以配置緩衝區，並提供暫時的內容緩衝區。</span><span class="sxs-lookup"><span data-stu-id="afc2e-127">When you call the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer.</span></span> <span data-ttu-id="afc2e-128">新<xref:System.Drawing.BufferedGraphicsContext>有所區別<xref:System.Drawing.BufferedGraphicsContext>應用程式網域，而且自動公開當<xref:System.Drawing.BufferedGraphics>所傳回<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>處置方法。</span><span class="sxs-lookup"><span data-stu-id="afc2e-128">The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method is disposed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afc2e-129">下列程式碼範例將示範如何建立圖形緩衝區使用<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="afc2e-129">The following code example demonstrates creating a graphics buffer using the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method.</span></span> <span data-ttu-id="afc2e-130">此程式碼是針對提供之較大範例的一部分<xref:System.Drawing.BufferedGraphics>類別。</span><span class="sxs-lookup"><span data-stu-id="afc2e-130">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#3)]
 [!code-csharp[BufferingExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#3)]
 [!code-vb[BufferingExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.BufferedGraphics" />
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Drawing.Rectangle" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="afc2e-131">雙重緩衝的圖形</span><span class="sxs-lookup"><span data-stu-id="afc2e-131">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Allocate">
      <MemberSignature Language="C#" Value="public System.Drawing.BufferedGraphics Allocate (IntPtr targetDC, System.Drawing.Rectangle targetRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.BufferedGraphics Allocate(native int targetDC, valuetype System.Drawing.Rectangle targetRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Allocate (targetDC As IntPtr, targetRectangle As Rectangle) As BufferedGraphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::BufferedGraphics ^ Allocate(IntPtr targetDC, System::Drawing::Rectangle targetRectangle);" />
      <MemberSignature Language="F#" Value="member this.Allocate : nativeint * System.Drawing.Rectangle -&gt; System.Drawing.BufferedGraphics" Usage="bufferedGraphicsContext.Allocate (targetDC, targetRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.BufferedGraphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDC" Type="System.IntPtr" />
        <Parameter Name="targetRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="targetDC"><span data-ttu-id="afc2e-132">一個指到裝置內容的 <see cref="T:System.IntPtr" />，要與新緩衝區的像素格式相符。</span><span class="sxs-lookup"><span data-stu-id="afc2e-132">An <see cref="T:System.IntPtr" /> to a device context to match the pixel format of the new buffer to.</span></span></param>
        <param name="targetRectangle"><span data-ttu-id="afc2e-133"><see cref="T:System.Drawing.Rectangle" />，指出要建立的緩衝區大小。</span><span class="sxs-lookup"><span data-stu-id="afc2e-133">A <see cref="T:System.Drawing.Rectangle" /> indicating the size of the buffer to create.</span></span></param>
        <summary><span data-ttu-id="afc2e-134">使用指定 <see cref="T:System.Drawing.Graphics" /> 的像素格式，建立指定大小的圖形緩衝區。</span><span class="sxs-lookup"><span data-stu-id="afc2e-134">Creates a graphics buffer of the specified size using the pixel format of the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="afc2e-135"><see cref="T:System.Drawing.BufferedGraphics" />，可用於繪製到指定維度的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="afc2e-135">A <see cref="T:System.Drawing.BufferedGraphics" /> that can be used to draw to a buffer of the specified dimensions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afc2e-136">當您呼叫<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>方法以矩形大小超過此值的<xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A>屬性中，暫存<xref:System.Drawing.BufferedGraphicsContext>會建立以配置緩衝區，並提供暫時的內容緩衝區。</span><span class="sxs-lookup"><span data-stu-id="afc2e-136">When you call the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer.</span></span> <span data-ttu-id="afc2e-137">新<xref:System.Drawing.BufferedGraphicsContext>有所區別<xref:System.Drawing.BufferedGraphicsContext>應用程式網域，而且自動公開當<xref:System.Drawing.BufferedGraphics>所傳回<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>處置方法。</span><span class="sxs-lookup"><span data-stu-id="afc2e-137">The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method is disposed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afc2e-138">下列程式碼範例將示範如何建立圖形緩衝區使用<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="afc2e-138">The following code example demonstrates creating a graphics buffer using the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method.</span></span> <span data-ttu-id="afc2e-139">此程式碼是針對提供之較大範例的一部分<xref:System.Drawing.BufferedGraphics>類別。</span><span class="sxs-lookup"><span data-stu-id="afc2e-139">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#4)]
 [!code-csharp[BufferingExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#4)]
 [!code-vb[BufferingExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="afc2e-140">用於存取 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="afc2e-140">for access to unmanaged code.</span></span> <span data-ttu-id="afc2e-141">相關的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="afc2e-141">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.Drawing.BufferedGraphics" />
        <altmember cref="T:System.IntPtr" />
        <altmember cref="T:System.Drawing.Rectangle" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="afc2e-142">雙重緩衝的圖形</span><span class="sxs-lookup"><span data-stu-id="afc2e-142">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="bufferedGraphicsContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="afc2e-143">釋放 <see cref="T:System.Drawing.BufferedGraphicsContext" /> 所使用的所有資源。</span><span class="sxs-lookup"><span data-stu-id="afc2e-143">Releases all resources used by the <see cref="T:System.Drawing.BufferedGraphicsContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afc2e-144"><xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> 使用完畢時，請呼叫 <xref:System.Drawing.BufferedGraphicsContext>。</span><span class="sxs-lookup"><span data-stu-id="afc2e-144">Call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> when you are finished using the <xref:System.Drawing.BufferedGraphicsContext>.</span></span> <span data-ttu-id="afc2e-145"><xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> 方法會將 <xref:System.Drawing.BufferedGraphicsContext> 保留在無法使用的狀態。</span><span class="sxs-lookup"><span data-stu-id="afc2e-145">The <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> method leaves the <xref:System.Drawing.BufferedGraphicsContext> in an unusable state.</span></span> <span data-ttu-id="afc2e-146">之後呼叫<xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>，您必須釋放所有的參考<xref:System.Drawing.BufferedGraphicsContext>讓記憶體回收行程可以回收記憶體，<xref:System.Drawing.BufferedGraphicsContext>所佔用。</span><span class="sxs-lookup"><span data-stu-id="afc2e-146">After calling <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>, you must release all references to the <xref:System.Drawing.BufferedGraphicsContext> so the garbage collector can reclaim the memory that the <xref:System.Drawing.BufferedGraphicsContext> was occupying.</span></span> <span data-ttu-id="afc2e-147">如需詳細資訊，請參閱 <<c0> [ 清除 Unmanaged 資源向上](~/docs/standard/garbage-collection/unmanaged.md)並[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="afc2e-147">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="afc2e-148">在您釋放最後一個 <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> 參考之前，請務必呼叫 <xref:System.Drawing.BufferedGraphicsContext>。</span><span class="sxs-lookup"><span data-stu-id="afc2e-148">Always call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> before you release your last reference to the <xref:System.Drawing.BufferedGraphicsContext>.</span></span> <span data-ttu-id="afc2e-149">否則，它所使用的資源將之前不會釋放記憶體回收行程呼叫<xref:System.Object.Finalize%2A>方法的<xref:System.Drawing.BufferedGraphicsContext>。</span><span class="sxs-lookup"><span data-stu-id="afc2e-149">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Object.Finalize%2A> method of the <xref:System.Drawing.BufferedGraphicsContext>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="afc2e-150">雙重緩衝的圖形</span><span class="sxs-lookup"><span data-stu-id="afc2e-150">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~BufferedGraphicsContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!BufferedGraphicsContext ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="bufferedGraphicsContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="afc2e-151">允許物件在記憶體回收進行回收之前，嘗試釋放資源並執行其他清除作業。</span><span class="sxs-lookup"><span data-stu-id="afc2e-151">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberSignature Language="F#" Value="member this.Invalidate : unit -&gt; unit" Usage="bufferedGraphicsContext.Invalidate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="afc2e-152">處置目前的圖形緩衝區，如果已配置緩衝區但尚未處置的話。</span><span class="sxs-lookup"><span data-stu-id="afc2e-152">Disposes of the current graphics buffer, if a buffer has been allocated and has not yet been disposed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afc2e-153">如果正在使用中的圖形緩衝區，它會被標示為可供使用免費; 如否則，它將會處置立即。</span><span class="sxs-lookup"><span data-stu-id="afc2e-153">If the graphics buffer is in use, it will be marked for disposal as soon as it is free; otherwise, it will be disposed immediately.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="afc2e-154">雙重緩衝的圖形</span><span class="sxs-lookup"><span data-stu-id="afc2e-154">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MaximumBuffer">
      <MemberSignature Language="C#" Value="public System.Drawing.Size MaximumBuffer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MaximumBuffer" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumBuffer As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size MaximumBuffer { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumBuffer : System.Drawing.Size with get, set" Usage="System.Drawing.BufferedGraphicsContext.MaximumBuffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="afc2e-155">取得或設定要使用之緩衝區的大小上限。</span><span class="sxs-lookup"><span data-stu-id="afc2e-155">Gets or sets the maximum size of the buffer to use.</span></span></summary>
        <value><span data-ttu-id="afc2e-156"><see cref="T:System.Drawing.Size" /> 指出緩衝區維度的最大值。</span><span class="sxs-lookup"><span data-stu-id="afc2e-156">A <see cref="T:System.Drawing.Size" /> indicating the maximum size of the buffer dimensions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="afc2e-157">這個屬性可讓您取得或設定應該保留在記憶體中緩衝區的最大維度。</span><span class="sxs-lookup"><span data-stu-id="afc2e-157">This property allows you to get or set the maximum dimensions for a buffer that should be retained in memory.</span></span> <span data-ttu-id="afc2e-158">您可以配置的任何大小的緩衝區，不過任何緩衝處理的維度大於<xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A>大小會是暫時使用，則會捨棄時<xref:System.Drawing.BufferedGraphics>釋放物件。</span><span class="sxs-lookup"><span data-stu-id="afc2e-158">You can allocate a buffer of any size, however any buffer with dimensions greater than the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> size will be used temporarily and then discarded when the <xref:System.Drawing.BufferedGraphics> object is released.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="afc2e-159">下列範例將示範如何設定的最大大小的緩衝區<xref:System.Drawing.BufferedGraphicsContext>。</span><span class="sxs-lookup"><span data-stu-id="afc2e-159">The following example demonstrates setting the maximum size for the buffer for a <xref:System.Drawing.BufferedGraphicsContext>.</span></span> <span data-ttu-id="afc2e-160">此程式碼是針對提供之較大範例的一部分<xref:System.Drawing.BufferedGraphics>類別。</span><span class="sxs-lookup"><span data-stu-id="afc2e-160">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#2)]
 [!code-csharp[BufferingExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#2)]
 [!code-vb[BufferingExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="afc2e-161">大小的高度或寬度小於或等於零。</span><span class="sxs-lookup"><span data-stu-id="afc2e-161">The height or width of the size is less than or equal to zero.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="afc2e-162">允許使用者存取所有的 windows。</span><span class="sxs-lookup"><span data-stu-id="afc2e-162">for allowing user access to all windows.</span></span> <span data-ttu-id="afc2e-163">相關的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="afc2e-163">Related enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="afc2e-164">雙重緩衝的圖形</span><span class="sxs-lookup"><span data-stu-id="afc2e-164">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>