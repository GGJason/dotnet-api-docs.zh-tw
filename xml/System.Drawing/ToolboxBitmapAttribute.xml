<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ToolboxBitmapAttribute.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58e7e3baddc7823e3a9d97c1cce31418160f7e4a9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e7e3baddc7823e3a9d97c1cce31418160f7e4a9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>Allows you to specify an icon to represent a control in a container, such as the Microsoft Visual Studio Form Designer.</source>
          <target state="translated">可讓您指定圖示以表示容器中的控制項，例如 Microsoft Visual Studio 表單設計工具。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>You can apply a <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> to a control so that containers, such as Microsoft Visual Studio Form Designer, can retrieve an icon that represents the control.</source>
          <target state="translated">您可以套用<ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph>至控制項，讓容器，例如 Microsoft Visual Studio 表單設計工具，可以擷取圖示表示的控制項。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>The bitmap for the icon can be in a file by itself or embedded in the assembly that contains the control.</source>
          <target state="translated">圖示的點陣圖單獨使用時，可以在檔案中或內嵌在組件，其中包含此控制項。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>The size of the bitmap that you embed in the control's assembly (or store in a separate file) should be 16 by 16.</source>
          <target state="translated">您在中內嵌之點陣圖的大小控制項的組件 （或在不同的檔案存放區） 應該是 16 x 16。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A&gt;</ph> method of a <ph id="ph2">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> object can return the small 16 by 16 image or a large 32 by 32 image that it creates by scaling the small image.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph>物件可傳回小型 16 x 16 映像或大型 32 由 32 映像，它會建立會藉由調整小型影像。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>If you want to use different versions of your icons with different versions of your assembly, you do not have to modify the <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> for each version.</source>
          <target state="translated">如果您想要使用不同版本的組件的不同版本的圖示，您不需要修改<ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph>每個版本。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>Instead, you can declare the assembly with a <ph id="ph1">&lt;xref:System.Drawing.BitmapSuffixInSameAssemblyAttribute&gt;</ph> or a <ph id="ph2">&lt;xref:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute&gt;</ph>, and specify a <ph id="ph3">&lt;xref:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix%2A&gt;</ph> configuration value for each assembly version.</source>
          <target state="translated">相反地，您可以宣告具有組件<ph id="ph1">&lt;xref:System.Drawing.BitmapSuffixInSameAssemblyAttribute&gt;</ph>或<ph id="ph2">&lt;xref:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute&gt;</ph>，並指定<ph id="ph3">&lt;xref:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix%2A&gt;</ph>每個組件版本的組態值。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>In this case, a file name indicated by a <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> is interpreted with the bitmap suffix appended.</source>
          <target state="translated">在此情況下，檔案名稱會由<ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph>解譯點陣圖後置詞附加。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> class to set <ph id="ph2">`stop.bmp`</ph> as the toolbox icon for the <ph id="ph3">`StopSignControl`</ph>.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph>類別來設定<ph id="ph2">`stop.bmp`</ph>的工具箱圖示<ph id="ph3">`StopSignControl`</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>This example assumes the existence of a 16-by-16-pixel bitmap named <ph id="ph1">`stop.bmp`</ph> at c:<ph id="ph2">\\</ph>.</source>
          <target state="translated">這個範例假設名為 16 x 16 像素點陣圖存在<ph id="ph1">`stop.bmp`</ph>在 c:<ph id="ph2">\\</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">初始化新的 <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)">
          <source>The name of a file that contains a 16 by 16 bitmap.</source>
          <target state="translated">含有 16 x 16 點陣圖的檔案的名稱。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object with an image from a specified file.</source>
          <target state="translated">使用來自指定檔案的影像，初始化新的 <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A&gt;</ph> constructor to set <ph id="ph2">`stop.bmp`</ph> as the toolbox icon for the <ph id="ph3">`StopSignControl`</ph>.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A&gt;</ph>建構函式來設定<ph id="ph2">`stop.bmp`</ph>的工具箱圖示<ph id="ph3">`StopSignControl`</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)">
          <source>This example assumes the existence of a 16-by-16-pixel bitmap named <ph id="ph1">`stop.bmp`</ph> at c:<ph id="ph2">\\</ph>.</source>
          <target state="translated">這個範例假設名為 16 x 16 像素點陣圖存在<ph id="ph1">`stop.bmp`</ph>在 c:<ph id="ph2">\\</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> whose defining assembly is searched for the bitmap resource.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>，程式碼會在其定義組件中搜尋點陣圖資源。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object based on a 16 x 16 bitmap that is embedded as a resource in a specified assembly.</source>
          <target state="translated">根據指定組件中內嵌為資源的 16 x 16 點陣圖，初始化新的 <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
          <source>This constructor searches for an embedded resource in the assembly that defines the type specified by the <ph id="ph1">`t`</ph> parameter.</source>
          <target state="translated">這個建構函式定義所指定之類型的組件中的內嵌資源中搜尋<ph id="ph1">`t`</ph>參數。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
          <source>The constructor searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the class specified by the <ph id="ph1">`t`</ph> parameter.</source>
          <target state="translated">建構函式搜尋的資源，名為的 namespace.classname.bmp，其中命名空間是包含所指定的類別定義<ph id="ph1">`t`</ph>參數。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
          <source>For example, if ControlA is in NamespaceA in AssemblyA.dll, then the constructor searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.</source>
          <target state="translated">例如，如果 ControlA 處於 NamespaceA AssemblyA.dll 中，然後建構函式搜尋 AssemblyA.dll 名為 NamespaceA.ControlA.bmp 的資源。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A&gt;</ph> constructor to set the icon of the button control to the toolbox icon for a <ph id="ph2">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> named <ph id="ph3">`StopSignControl3`</ph>.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A&gt;</ph>建構函式以設為 [工具箱] 圖示的按鈕控制項的圖示<ph id="ph2">&lt;xref:System.Windows.Forms.UserControl&gt;</ph>名為<ph id="ph3">`StopSignControl3`</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> whose defining assembly is searched for the bitmap resource.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>，程式碼會在其定義組件中搜尋點陣圖資源。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>The name of the embedded bitmap resource.</source>
          <target state="translated">內嵌點陣圖資源的名稱。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object based on a 16 by 16 bitmap that is embedded as a resource in a specified assembly.</source>
          <target state="translated">根據指定組件中內嵌為資源的 16 x 16 點陣圖，初始化新的 <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>This constructor searches for an embedded resource in the assembly that defines the type specified by the <ph id="ph1">`t`</ph> parameter.</source>
          <target state="translated">這個建構函式定義所指定之類型的組件中的內嵌資源中搜尋<ph id="ph1">`t`</ph>參數。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>The constructor searches for a resource named namespace.name, where namespace is the namespace containing the definition of the class specified by the <ph id="ph1">`t`</ph> parameter.</source>
          <target state="translated">建構函式搜尋的資源，名為的 namespace.name，其中命名空間是包含所指定的類別定義<ph id="ph1">`t`</ph>參數。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>For example, suppose that ControlA is a class in NamespaceA in AssemblyA.dll and that you passed "MyBitmap.bmp" to the <ph id="ph1">`name`</ph> parameter.</source>
          <target state="translated">例如，假設表示 ControlA 中 AssemblyA.dll NamespaceA 中的類別，而您傳遞"MyBitmap.bmp 」，以<ph id="ph1">`name`</ph>參數。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>Then the constructor searches AssemblyA.dll for a resource named NamespaceA.MyBitmap.bmp.</source>
          <target state="translated">然後建構函式會將 AssemblyA.dll 搜尋名為 NamespaceA.MyBitmap.bmp 的資源。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>'The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A&gt;</ph> constructor to set <ph id="ph2">`StopSignControl2.bmp`</ph> as a toolbox icon for the <ph id="ph3">`StopSignControl2`</ph>.</source>
          <target state="translated">' 下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A&gt;</ph>建構函式來設定<ph id="ph2">`StopSignControl2.bmp`</ph>的工具箱圖示為<ph id="ph3">`StopSignControl2`</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>This example assumes the existence of a 16-by-16-pixel bitmap named <ph id="ph1">`StopSignControl2.bmp`</ph> with its <bpt id="p1">**</bpt>BuildAction<ept id="p1">**</ept> property set to <bpt id="p2">**</bpt>EmbeddedResource<ept id="p2">**</ept>.</source>
          <target state="translated">這個範例假設名為 16 x 16 像素點陣圖存在<ph id="ph1">`StopSignControl2.bmp`</ph>具有其<bpt id="p1">**</bpt>BuildAction<ept id="p1">**</ept>屬性設定為<bpt id="p2">**</bpt>EmbeddedResource<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="F:System.Drawing.ToolboxBitmapAttribute.Default">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object that has its small image and its large image set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 物件，具有小型影像，而其大型影像設定為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to test.</source>
          <target state="translated">要測試的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)">
          <source>Indicates whether the specified object is a <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object and is identical to this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">指示指定物件是否為 <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 物件，並且和這個 <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 物件相同。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is both a <ph id="ph3">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object and is identical to this <ph id="ph4">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 是 <ph id="ph3">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 物件，並且和這個 <ph id="ph4">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 物件相同，則這個方法會傳回 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetHashCode">
          <source>Gets a hash code for this <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">取得這個 <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 物件的雜湊程式碼。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetHashCode">
          <source>The hash code for this <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">這個 <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 物件的雜湊程式碼。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>Gets the small or large <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">取得與這個 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> 物件相關的小型或大型 <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>If this <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type of the object specified by the component parameter.</source>
          <target state="translated">如果這個 <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 物件尚未有小型影像，這個方法會在定義元件參數所指定物件型別的組件中搜尋點陣圖資源。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>For example, if you pass an object of type ControlA to the component parameter, then this method searches the assembly that defines ControlA.</source>
          <target state="translated">例如，如果您傳遞 ControlA 型別的物件至元件參數，那麼這個方法會在定義 ControlA 的組件中搜尋。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>Gets the small <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">取得與這個 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> 物件相關的小型 <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>The small <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">與這個 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> 物件相關的小型 <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type of the object specified by the <ph id="ph1">`component`</ph> parameter.</source>
          <target state="translated">這個方法會搜尋資源，名為的 namespace.classname.bmp，其中命名空間是包含所指定的物件類型的定義<ph id="ph1">`component`</ph>參數。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>For example, suppose you pass an object of type ControlA to the <ph id="ph1">`component`</ph> parameter.</source>
          <target state="translated">例如，假設您傳遞的型別 ControlA 物件至<ph id="ph1">`component`</ph>參數。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.</source>
          <target state="translated">如果 ControlA 處於 NamespaceA AssemblyA.dll 中，這個方法會搜尋 AssemblyA.dll 名為 NamespaceA.ControlA.bmp 資源。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A&gt;</ph> method.</source>
          <target state="translated">下列範例示範如何使用 <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
          <source>If this <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type specified by the type parameter.</source>
          <target state="translated">如果這個 <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 物件尚未有小型影像，這個方法會在定義型別參數所指定型別的組件中搜尋點陣圖資源。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
          <source>For example, if you pass typeof(ControlA) to the type parameter, then this method searches the assembly that defines ControlA.</source>
          <target state="translated">例如，如果您傳遞 typeof(ControlA) 至型別參數，那麼這個方法會在定義 ControlA 的組件中搜尋。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
          <source>Gets the small <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">取得與這個 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> 物件相關的小型 <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
          <source>The small <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">與這個 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> 物件相關的小型 <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
          <source>This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type specified by the <ph id="ph1">`type`</ph> parameter.</source>
          <target state="translated">這個方法會搜尋資源，名為的 namespace.classname.bmp，其中命名空間是包含所指定之類型定義<ph id="ph1">`type`</ph>參數。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
          <source>For example, suppose you pass typeof(ControlA) to the <ph id="ph1">`type`</ph> parameter.</source>
          <target state="translated">例如，假設您傳遞至 typeof(ControlA)<ph id="ph1">`type`</ph>參數。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
          <source>If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.</source>
          <target state="translated">如果 ControlA 處於 NamespaceA AssemblyA.dll 中，這個方法會搜尋 AssemblyA.dll 名為 NamespaceA.ControlA.bmp 資源。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>If this <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type of the object specified by the component parameter.</source>
          <target state="translated">如果這個 <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 物件尚未有小型影像，這個方法會在定義元件參數所指定物件型別的組件中搜尋點陣圖資源。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>For example, if you pass an object of type ControlA to the component parameter, then this method searches the assembly that defines ControlA.</source>
          <target state="translated">例如，如果您傳遞 ControlA 型別的物件至元件參數，那麼這個方法會在定義 ControlA 的組件中搜尋。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>Specifies whether this method returns a large image (<ph id="ph1">&lt;see langword="true" /&gt;</ph>) or a small image (<ph id="ph2">&lt;see langword="false" /&gt;</ph>).</source>
          <target state="translated">指定這個方法是否傳回大型影像 (<ph id="ph1">&lt;see langword="true" /&gt;</ph>) 或小型影像 (<ph id="ph2">&lt;see langword="false" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>The small image is 16 by 16, and the large image is 32 by 32.</source>
          <target state="translated">小型影像為 16 x 16，而大型影像為 32 x 32。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>Gets the small or large <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">取得與這個 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> 物件相關的小型或大型 <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> object associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">與這個 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> 物件關聯的 <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type of the object specified by the <ph id="ph1">`component`</ph> parameter.</source>
          <target state="translated">這個方法會搜尋資源，名為的 namespace.classname.bmp，其中命名空間是包含所指定的物件類型的定義<ph id="ph1">`component`</ph>參數。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>For example, suppose you pass an object of type ControlA to the <ph id="ph1">`component`</ph> parameter.</source>
          <target state="translated">例如，假設您傳遞的型別 ControlA 物件至<ph id="ph1">`component`</ph>參數。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.</source>
          <target state="translated">如果 ControlA 處於 NamespaceA AssemblyA.dll 中，這個方法會搜尋 AssemblyA.dll 名為 NamespaceA.ControlA.bmp 資源。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>If this <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> object does not already have a large image, this method creates a large image by scaling the small image.</source>
          <target state="translated">如果這個<ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph>物件還沒有大型影像，這個方法會建立一個大型影像會藉由調整小型影像。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>If this <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type specified by the component type.</source>
          <target state="translated">如果這個 <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 物件尚未有小型影像，這個方法會在定義元件型別所指定型別的組件中搜尋點陣圖資源。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>For example, if you pass typeof(ControlA) to the type parameter, then this method searches the assembly that defines ControlA.</source>
          <target state="translated">例如，如果您傳遞 typeof(ControlA) 至型別參數，那麼這個方法會在定義 ControlA 的組件中搜尋。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>Specifies whether this method returns a large image (<ph id="ph1">&lt;see langword="true" /&gt;</ph>) or a small image (<ph id="ph2">&lt;see langword="false" /&gt;</ph>).</source>
          <target state="translated">指定這個方法是否傳回大型影像 (<ph id="ph1">&lt;see langword="true" /&gt;</ph>) 或小型影像 (<ph id="ph2">&lt;see langword="false" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>The small image is 16 by 16, and the large image is 32 by 32.</source>
          <target state="translated">小型影像為 16 x 16，而大型影像為 32 x 32。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>Gets the small or large <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">取得與這個 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> 物件相關的小型或大型 <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">與這個 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> 物件關聯的 <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type specified by the <ph id="ph1">`type`</ph> parameter.</source>
          <target state="translated">這個方法會搜尋資源，名為的 namespace.classname.bmp，其中命名空間是包含所指定之類型定義<ph id="ph1">`type`</ph>參數。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>For example, suppose you pass an typeof(ControlA) to the <ph id="ph1">`type`</ph> parameter.</source>
          <target state="translated">例如，假設您傳遞至 typeof(ControlA)<ph id="ph1">`type`</ph>參數。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.</source>
          <target state="translated">如果 ControlA 處於 NamespaceA AssemblyA.dll 中，這個方法會搜尋 AssemblyA.dll 名為 NamespaceA.ControlA.bmp 資源。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>If this <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> object does not already have a large image, this method creates a large image by scaling the small image.</source>
          <target state="translated">如果這個<ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph>物件還沒有大型影像，這個方法會建立一個大型影像會藉由調整小型影像。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>If this <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object does not already have a small image, this method searches for an embedded bitmap resource in the assembly that defines the type specified by the component type.</source>
          <target state="translated">如果這個 <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 物件尚未有小型影像，這個方法會在定義元件型別所指定型別的組件中搜尋內嵌點陣圖資源。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>For example, if you pass typeof(ControlA) to the type parameter, then this method searches the assembly that defines ControlA.</source>
          <target state="translated">例如，如果您傳遞 typeof(ControlA) 至型別參數，那麼這個方法會在定義 ControlA 的組件中搜尋。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>The name of the embedded bitmap resource.</source>
          <target state="translated">內嵌點陣圖資源的名稱。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>Specifies whether this method returns a large image (<ph id="ph1">&lt;see langword="true" /&gt;</ph>) or a small image (<ph id="ph2">&lt;see langword="false" /&gt;</ph>).</source>
          <target state="translated">指定這個方法是否傳回大型影像 (<ph id="ph1">&lt;see langword="true" /&gt;</ph>) 或小型影像 (<ph id="ph2">&lt;see langword="false" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>The small image is 16 by 16, and the large image is 32 by 32.</source>
          <target state="translated">小型影像為 16 x 16，而大型影像為 32 x 32。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>Gets the small or large <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">取得與這個 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> 物件相關的小型或大型 <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">與這個 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> 物件關聯的 <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>This method searches for a resource named namespace.imgName, where namespace is the namespace containing the definition of the type specified by the <ph id="ph1">`type`</ph> parameter.</source>
          <target state="translated">這個方法會搜尋資源，名為的 namespace.imgName，其中命名空間是包含所指定之類型定義<ph id="ph1">`type`</ph>參數。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>For example, suppose you pass typeof(ControlA) to the <ph id="ph1">`type`</ph> parameter and that you passed "MyBitmap.bmp" to the imgName parameter.</source>
          <target state="translated">例如，假設您傳遞至 typeof(ControlA)<ph id="ph1">`type`</ph>參數，而且您將"MyBitmap.bmp"傳遞至 imgName 參數。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.MyBitmap.bmp.</source>
          <target state="translated">如果 ControlA 處於 NamespaceA AssemblyA.dll 中，這個方法會搜尋 AssemblyA.dll 名為 NamespaceA.MyBitmap.bmp 資源。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>If this <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> object does not already have a large image, this method creates a large image by scaling the small image.</source>
          <target state="translated">如果這個<ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph>物件還沒有大型影像，這個方法會建立一個大型影像會藉由調整小型影像。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>This method searches for an embedded bitmap resource in the assembly that defines the type specified by the t parameter.</source>
          <target state="translated">這個方法會在定義 t 參數所指定型別的組件搜尋內嵌點陣圖資源。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>For example, if you pass typeof(ControlA) to the t parameter, then this method searches the assembly that defines ControlA.</source>
          <target state="translated">例如，如果您傳遞 typeof(ControlA) 至 t 參數，那麼這個方法會在定義 ControlA 的組件中搜尋。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>The name of the embedded bitmap resource.</source>
          <target state="translated">內嵌點陣圖資源的名稱。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>Specifies whether this method returns a large image (true)or a small image (false).</source>
          <target state="translated">指定這個方法是否傳回大型影像 (true) 或小型影像 (false)。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>The small image is 16 by 16, and the large image is 32 x 32.</source>
          <target state="translated">小型影像為 16 x 16，而大型影像為 32 x 32。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> object based on a bitmap resource that is embedded in an assembly.</source>
          <target state="translated">根據嵌入組件的點陣圖資源傳回 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> object based on the retrieved bitmap.</source>
          <target state="translated">以擷取的點陣圖為基礎的 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>This method searches for a resource named namespace.imgName, where namespace is the namespace containing the definition of the type specified by the <ph id="ph1">`t`</ph> parameter.</source>
          <target state="translated">這個方法會搜尋資源，名為的 namespace.imgName，其中命名空間是包含所指定之類型定義<ph id="ph1">`t`</ph>參數。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>For example, suppose you pass typeof(ControlA) to the <ph id="ph1">`t`</ph> parameter and you pass "MyBitmap.bmp" to the imgName parameter.</source>
          <target state="translated">例如，假設您傳遞至 typeof(ControlA)<ph id="ph1">`t`</ph>參數，而且 「 MyBitmap.bmp"傳遞給 imgName 參數。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.MyBitmap.bmp.</source>
          <target state="translated">如果 ControlA 處於 NamespaceA AssemblyA.dll 中，這個方法會搜尋 AssemblyA.dll 名為 NamespaceA.MyBitmap.bmp 資源。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>This method is intended to retrieve a 16 x 16 bitmap resource that is embedded in an assembly.</source>
          <target state="translated">這個方法會擷取內嵌在組件中的 16x16 點陣圖資源。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>However, there is no requirement that the embedded bitmap has a size of 16 x 16.</source>
          <target state="translated">不過，沒有內嵌的點陣圖具有大小為 16 x 16 的需求。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>The bitmap that is retrieved from the assembly (no matter what size) is considered the small image.</source>
          <target state="translated">擷取從組件 （不論何種大小） 之點陣圖會被視為小型影像。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>The large image is created by scaling the "small" image to a size of 32 x 32.</source>
          <target state="translated">大型影像會建立會藉由調整 「 小型 」 影像的大小為 32 x 32。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>So the large image will always be 32 by 32, regardless of the size of the bitmap retrieved from the assembly.</source>
          <target state="translated">因此大型影像一律為 32 x 32，不論點陣圖擷取從組件的大小。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>