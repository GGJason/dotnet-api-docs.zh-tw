<Type Name="Bitmap" FullName="System.Drawing.Bitmap">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="38d9a47c3be3553a9154f3be704836828bc64d80" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30410632" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Bitmap : System.Drawing.Image" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit Bitmap extends System.Drawing.Image" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Bitmap" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Bitmap&#xA;Inherits Image" />
  <TypeSignature Language="C++ CLI" Value="public ref class Bitmap sealed : System::Drawing::Image" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Image</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.BitmapEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>封裝 GDI+ 點陣圖，這個點陣圖是由圖形影像的像素資料及其屬性所組成。 <see cref="T:System.Drawing.Bitmap" /> 是用來處理像素資料所定義影像的物件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 點陣圖的像素資料的圖形映像和其屬性所組成。 有許多標準格式將點陣圖儲存至檔案。 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] 支援下列檔案格式： BMP、 GIF、 EXIF、 JPG、 PNG 和 TIFF。 如需有關支援之格式的詳細資訊，請參閱[類型的點陣圖](~/docs/framework/winforms/advanced/types-of-bitmaps.md)。  
  
 您可以從檔案、 資料流和其他來源建立映像使用其中一種<xref:System.Drawing.Bitmap.%23ctor%2A>建構函式並將它們儲存至資料流或檔案系統與<xref:System.Drawing.Image.Save%2A>方法。 映像會使用來繪製到螢幕或記憶體<xref:System.Drawing.Graphics.DrawImage%2A>方法<xref:System.Drawing.Graphics>物件。 如需使用映像檔的相關主題的清單，請參閱[使用影像、 點陣圖、 圖示和中繼檔](~/docs/framework/winforms/advanced/working-with-images-bitmaps-icons-and-metafiles.md)。  
  
> [!NOTE]
>  <xref:System.Drawing.Bitmap>類別不能存取跨應用程式定義域。 例如，如果您建立動態<xref:System.AppDomain>和該網域，然後傳遞這些物件會回到主要的應用程式定義域中建立幾筆刷、 畫筆與點陣圖，您可以成功地使用畫筆和筆刷。 不過，如果您呼叫<xref:System.Drawing.Graphics.DrawImage%2A>方法來封送處理繪製<xref:System.Drawing.Bitmap>，您會收到下列例外狀況。  
>   
>  遠端處理類型 」 System.Drawing.Image"上找不到欄位 「 原生映像 」。  
  
   
  
## Examples  
 下列程式碼範例示範如何建構新<xref:System.Drawing.Bitmap>從檔案、 使用<xref:System.Drawing.Bitmap.GetPixel%2A>和<xref:System.Drawing.Bitmap.SetPixel%2A>方法，以將影像重新著色。 它也會使用<xref:System.Drawing.Image.PixelFormat%2A>， <xref:System.Drawing.Image.Width%2A>，和<xref:System.Drawing.Image.Height%2A>屬性。  
  
 這個範例為了搭配 Windows Form 包含<xref:System.Windows.Forms.Label>， <xref:System.Windows.Forms.PictureBox>，和<xref:System.Windows.Forms.Button>名為`Label1`， `PictureBox1`，和`Button1`分別。 程式碼貼到表單，並將關聯`Button1_Click`方法按鈕之<xref:System.Windows.Forms.Control.Click>事件。  
  
 [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.PictureBox" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Drawing.Bitmap" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.Drawing.Image original);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (original As Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::Drawing::Image ^ original);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="original">
          <see cref="T:System.Drawing.Image" />，用於建立新的 <see cref="T:System.Drawing.Bitmap" />。</param>
        <summary>從指定的現有影像初始化 <see cref="T:System.Drawing.Bitmap" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">用來載入影像的資料流。</param>
        <summary>從指定的資料流，初始化 <see cref="T:System.Drawing.Bitmap" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您必須維持資料流開啟的存留期<xref:System.Drawing.Bitmap>。  
  
 因為限制的[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]解碼器，<xref:System.ArgumentException?displayProperty=nameWithType>建構具有單一維度大於 65,535 個像素的.png 映像檔從點陣圖會擲回。  
  
   
  
## Examples  
 下列程式碼範例示範如何從資料流載入點陣圖。  
  
 這個範例被為了搭配 Windows Form。 建立表單，其中包含<xref:System.Windows.Forms.PictureBox>名為`PictureBox1`。 程式碼貼到表單，並呼叫`InitializeStreamBitmap`從表單的建構函式的方法或<xref:System.Windows.Forms.Form.Load>事件處理方法。  
  
 [!code-cpp[System.Drawing.BitmapMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.BitmapMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#2)]
 [!code-vb[System.Drawing.BitmapMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="stream" /> 未含有影像資料或為 <see langword="null" />。  
  
 -或-  
  
 <paramref name="stream" /> 含有一個 PNG 影像檔案，其中有一個維度超過 65,535 個像素。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::String ^ filename);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">點陣圖檔名稱和路徑。</param>
        <summary>從指定的檔案，初始化 <see cref="T:System.Drawing.Bitmap" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 檔案名稱和路徑可以相對於應用程式或絕對路徑。 使用這個建構函式以來開啟映像下列的檔案格式： BMP、 GIF、 EXIF、 JPG、 PNG 和 TIFF。 如需有關支援之格式的詳細資訊，請參閱[類型的點陣圖](~/docs/framework/winforms/advanced/types-of-bitmaps.md)。 檔案仍會鎖定，直到<xref:System.Drawing.Bitmap>處置。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">找不到指定的檔案。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.Drawing.Image original, System.Drawing.Size newSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image original, valuetype System.Drawing.Size newSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (original As Image, newSize As Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::Drawing::Image ^ original, System::Drawing::Size newSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Drawing.Image" />
        <Parameter Name="newSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="original">
          <see cref="T:System.Drawing.Image" />，用於建立新的 <see cref="T:System.Drawing.Bitmap" />。</param>
        <param name="newSize">
          <see cref="T:System.Drawing.Size" /> 結構，表示新 <see cref="T:System.Drawing.Bitmap" /> 的大小。</param>
        <summary>從指定的現有影像 (已縮放至指定之大小)，初始化 <see cref="T:System.Drawing.Bitmap" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception">作業失敗。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(int width, int height);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">新 <see cref="T:System.Drawing.Bitmap" /> 的寬度 (以像素為單位)。</param>
        <param name="height">新 <see cref="T:System.Drawing.Bitmap" /> 的高度 (以像素為單位)。</param>
        <summary>使用指定的大小，初始化 <see cref="T:System.Drawing.Bitmap" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個建構函式會建立<xref:System.Drawing.Bitmap>與<xref:System.Drawing.Imaging.PixelFormat>列舉值<xref:System.Drawing.Imaging.PixelFormat.Format32bppArgb>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">作業失敗。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.IO.Stream stream, bool useIcm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, bool useIcm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::IO::Stream ^ stream, bool useIcm);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="useIcm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">用來載入影像的資料流。</param>
        <param name="useIcm">
          <see langword="true" /> 表示要對此 <see cref="T:System.Drawing.Bitmap" /> 進行色彩修正，否則為 <see langword="false" />。</param>
        <summary>從指定的資料流，初始化 <see cref="T:System.Drawing.Bitmap" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您必須維持資料流開啟的存留期<xref:System.Drawing.Bitmap>。  
  
 因為限制的[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]解碼器，<xref:System.ArgumentException?displayProperty=nameWithType>建構具有單一維度大於 65,535 個像素的.png 映像檔從點陣圖會擲回。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="stream" /> 未含有影像資料或為 <see langword="null" />。  
  
 -或-  
  
 <paramref name="stream" /> 含有一個 PNG 影像檔案，其中有一個維度超過 65,535 個像素。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (string filename, bool useIcm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, bool useIcm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, useIcm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::String ^ filename, bool useIcm);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="useIcm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename">點陣圖檔的名稱。</param>
        <param name="useIcm">
          <see langword="true" /> 表示要對此 <see cref="T:System.Drawing.Bitmap" /> 進行色彩修正，否則為 <see langword="false" />。</param>
        <summary>從指定的檔案，初始化 <see cref="T:System.Drawing.Bitmap" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個建構函式以來開啟映像下列的檔案格式： BMP、 GIF、 EXIF、 JPG、 PNG 和 TIFF。 如需有關支援之格式的詳細資訊，請參閱[類型的點陣圖](~/docs/framework/winforms/advanced/types-of-bitmaps.md)。 檔案仍會鎖定，直到<xref:System.Drawing.Bitmap>處置。  
  
   
  
## Examples  
 下列程式碼範例示範如何建構新的點陣圖檔案。 此範例會使用<xref:System.Drawing.Bitmap.GetPixel%2A>和<xref:System.Drawing.Bitmap.SetPixel%2A>方法，以將影像重新著色。 它也會使用<xref:System.Drawing.Image.PixelFormat%2A>屬性。  
  
 這個範例為了搭配 Windows Form 包含<xref:System.Windows.Forms.Label>，<xref:System.Windows.Forms.PictureBox>和<xref:System.Windows.Forms.Button>名為`Label1`，`PictureBox1`和`Button1`分別。 程式碼貼到表單，並將關聯`Button1_Click`方法按鈕之<xref:System.Windows.Forms.Control.Click>事件。  
  
 [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">用於 unmanaged 程式碼呼叫。 相關的列舉： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (Type type, string resource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string resource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(Type ^ type, System::String ^ resource);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resource" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">用來擷取資源的類別。</param>
        <param name="resource">資源名稱。</param>
        <summary>從指定的資源，初始化 <see cref="T:System.Drawing.Bitmap" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個建構函式指定型別的命名空間結合字串資源的名稱，並尋找組件資訊清單中的相符項目。 例如您在傳遞<xref:System.Windows.Forms.Button>型別和`Button.bmp`至這個建構函式，它會尋找名為的資源`System.Windows.Forms.Button.bmp`。  
  
   
  
## Examples  
 下列程式碼範例示範如何建構點陣圖，以從型別，以及如何使用<xref:System.Drawing.Image.Save%2A>方法。 若要執行此範例中，貼在 Windows Form 中的程式碼。 處理表單的<xref:System.Windows.Forms.Control.Paint>事件和呼叫`ConstructFromResourceSaveAsGif`方法，傳遞`e`為 <xref:System.Windows.Forms.PaintEventArgs>  
  
 [!code-cpp[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/cpp/form1.cpp#1)]
 [!code-csharp[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/CS/form1.cs#1)]
 [!code-vb[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.Drawing.Image original, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image original, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (original As Image, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::Drawing::Image ^ original, int width, int height);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Drawing.Image" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="original">
          <see cref="T:System.Drawing.Image" />，用於建立新的 <see cref="T:System.Drawing.Bitmap" />。</param>
        <param name="width">新 <see cref="T:System.Drawing.Bitmap" /> 的寬度 (以像素為單位)。</param>
        <param name="height">新 <see cref="T:System.Drawing.Bitmap" /> 的高度 (以像素為單位)。</param>
        <summary>從指定的現有影像 (已縮放至指定之大小)，初始化 <see cref="T:System.Drawing.Bitmap" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception">作業失敗。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer, g As Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(int width, int height, System::Drawing::Graphics ^ g);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="width">新 <see cref="T:System.Drawing.Bitmap" /> 的寬度 (以像素為單位)。</param>
        <param name="height">新 <see cref="T:System.Drawing.Bitmap" /> 的高度 (以像素為單位)。</param>
        <param name="g">設定新 <see cref="T:System.Drawing.Graphics" /> 解析度的 <see cref="T:System.Drawing.Bitmap" /> 物件。</param>
        <summary>使用指定的大小，並使用指定 <see cref="T:System.Drawing.Bitmap" /> 物件的解析度，初始化 <see cref="T:System.Drawing.Graphics" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新<xref:System.Drawing.Bitmap>這個方法會建立會從其水平和垂直解析度<xref:System.Drawing.Graphics.DpiX%2A>和<xref:System.Drawing.Graphics.DpiY%2A>屬性`g`分別。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="g" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer, format As PixelFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(int width, int height, System::Drawing::Imaging::PixelFormat format);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="width">新 <see cref="T:System.Drawing.Bitmap" /> 的寬度 (以像素為單位)。</param>
        <param name="height">新 <see cref="T:System.Drawing.Bitmap" /> 的高度 (以像素為單位)。</param>
        <param name="format">新 <see cref="T:System.Drawing.Bitmap" /> 的像素格式。 這必須指定以「格式」<c></c> 開頭的值。</param>
        <summary>使用指定的大小和格式，初始化 <see cref="T:System.Drawing.Bitmap" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">指定了 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 值，其名稱不是以「格式」開頭。 例如，指定 <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> 會導致 <see cref="T:System.ArgumentException" />，但 <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> 不會。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height, int stride, System.Drawing.Imaging.PixelFormat format, IntPtr scan0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height, int32 stride, valuetype System.Drawing.Imaging.PixelFormat format, native int scan0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer, stride As Integer, format As PixelFormat, scan0 As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(int width, int height, int stride, System::Drawing::Imaging::PixelFormat format, IntPtr scan0);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
        <Parameter Name="scan0" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="width">新 <see cref="T:System.Drawing.Bitmap" /> 的寬度 (以像素為單位)。</param>
        <param name="height">新 <see cref="T:System.Drawing.Bitmap" /> 的高度 (以像素為單位)。</param>
        <param name="stride">整數，指定一條掃描線 (Scan Line) 的開頭和下一條之間的位元組位移 (Offset)。 這通常 (但不一定) 是像素格式的位元組數目 (例如，16 位元/像素為 2) 乘以點陣圖寬度。 傳遞至這個參數的值必須是四的倍數。</param>
        <param name="format">新 <see cref="T:System.Drawing.Bitmap" /> 的像素格式。 這必須指定以「格式」<c></c> 開頭的值。</param>
        <param name="scan0">包含像素資料之位元組陣列的指標。</param>
        <summary>使用指定的大小、像素格式和像素資料，初始化 <see cref="T:System.Drawing.Bitmap" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫端會負責配置和釋放記憶體所指定的區塊`scan0`參數。 不過，記憶體應該不會釋出直到相關<xref:System.Drawing.Bitmap>釋放。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Drawing.Bitmap.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Drawing.Imaging.PixelFormat%2CSystem.IntPtr%29>建構函式。 這個範例為了搭配 Windows Form 並需要<xref:System.Windows.Forms.PaintEventArgs>參數，也就是參數的<xref:System.Windows.Forms.Control.Paint>事件。  
  
 [!code-csharp[System.Drawing.MiscExamples#Constructor](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#constructor)]
 [!code-vb[System.Drawing.MiscExamples#Constructor](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#constructor)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定了 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 值，其名稱不是以「格式」開頭。 例如，指定 <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> 會導致 <see cref="T:System.ArgumentException" />，但 <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> 不會。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">用於 unmanaged 程式碼呼叫。 相關的列舉： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Clone">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>建立使用指定 <see cref="T:System.Drawing.Bitmap" /> 定義的這個 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 之區段複本。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Drawing.Bitmap Clone (System.Drawing.Rectangle rect, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Bitmap Clone(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.Clone(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone (rect As Rectangle, format As PixelFormat) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Bitmap ^ Clone(System::Drawing::Rectangle rect, System::Drawing::Imaging::PixelFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="rect">定義要複製的這個 <see cref="T:System.Drawing.Bitmap" /> 的部分。 座標相對於這個 <see cref="T:System.Drawing.Bitmap" />。</param>
        <param name="format">新 <see cref="T:System.Drawing.Bitmap" /> 的像素格式。 這必須指定以「格式」<c></c> 開頭的值。</param>
        <summary>建立藉由 <see cref="T:System.Drawing.Bitmap" /> 結構和使用指定 <see cref="T:System.Drawing.Rectangle" /> 列舉型別定義的 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 之區段複本。</summary>
        <returns>這個方法建立的新 <see cref="T:System.Drawing.Bitmap" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例設計用於搭配 Windows Form，且其需要<xref:System.Windows.Forms.PaintEventArgs> `e`，這是參數的<xref:System.Windows.Forms.Control.Paint>事件處理常式。 該程式碼執行下列動作：  
  
-   建立<xref:System.Drawing.Bitmap>從檔案。  
  
-   複製部分<xref:System.Drawing.Bitmap>。  
  
-   將複製的部分繪製到螢幕。  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <paramref name="rect" /> 落在來源點陣圖的外框之外。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="rect" /> 的高度或寬度為 0。  
  
 -或-  
  
 指定了 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 值，其名稱不是以「格式」開頭。 例如，指定 <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> 會導致 <see cref="T:System.ArgumentException" />，但 <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> 不會。</exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Drawing.Bitmap Clone (System.Drawing.RectangleF rect, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Bitmap Clone(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.Clone(System.Drawing.RectangleF,System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone (rect As RectangleF, format As PixelFormat) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Bitmap ^ Clone(System::Drawing::RectangleF rect, System::Drawing::Imaging::PixelFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="rect">定義要複製的這個 <see cref="T:System.Drawing.Bitmap" /> 的部分。</param>
        <param name="format">指定目的 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 的 <see cref="T:System.Drawing.Bitmap" /> 列舉。</param>
        <summary>建立使用指定 <see cref="T:System.Drawing.Bitmap" /> 定義的這個 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 之區段複本。</summary>
        <returns>這個方法建立的 <see cref="T:System.Drawing.Bitmap" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例設計用於搭配 Windows Form，且其需要<xref:System.Windows.Forms.PaintEventArgs> `e`，這是參數的<xref:System.Windows.Forms.Control.Paint>事件處理常式。 該程式碼執行下列動作：  
  
-   建立<xref:System.Drawing.Bitmap>從檔案。  
  
-   複製部分<xref:System.Drawing.Bitmap>。  
  
-   將複製的部分繪製到螢幕。  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <paramref name="rect" /> 落在來源點陣圖的外框之外。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="rect" /> 的高度或寬度為 0。</exception>
      </Docs>
    </Member>
    <Member MemberName="FromHicon">
      <MemberSignature Language="C#" Value="public static System.Drawing.Bitmap FromHicon (IntPtr hicon);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Bitmap FromHicon(native int hicon) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.FromHicon(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHicon (hicon As IntPtr) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Bitmap ^ FromHicon(IntPtr hicon);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hicon" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hicon">圖示的控制代碼。</param>
        <summary>從圖示的 Windows 控制代碼建立 <see cref="T:System.Drawing.Bitmap" />。</summary>
        <returns>這個方法建立的 <see cref="T:System.Drawing.Bitmap" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例設計用於搭配 Windows Form，且其需要<xref:System.Windows.Forms.PaintEventArgs> `e`，這是參數的<xref:System.Windows.Forms.Control.Paint>事件處理常式。 該程式碼執行下列動作：  
  
-   取得現有的圖示影像的控制代碼。  
  
-   建立<xref:System.Drawing.Bitmap>從控制代碼。  
  
-   繪製<xref:System.Drawing.Bitmap>至螢幕。  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">用於 unmanaged 程式碼呼叫。 相關的列舉： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="FromResource">
      <MemberSignature Language="C#" Value="public static System.Drawing.Bitmap FromResource (IntPtr hinstance, string bitmapName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Bitmap FromResource(native int hinstance, string bitmapName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.FromResource(System.IntPtr,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromResource (hinstance As IntPtr, bitmapName As String) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Bitmap ^ FromResource(IntPtr hinstance, System::String ^ bitmapName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hinstance" Type="System.IntPtr" />
        <Parameter Name="bitmapName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hinstance">含有資源之執行檔執行個體的控制代碼。</param>
        <param name="bitmapName">字串，包含資源點陣圖的名稱。</param>
        <summary>從指定的 Windows 資源建立 <see cref="T:System.Drawing.Bitmap" />。</summary>
        <returns>這個方法建立的 <see cref="T:System.Drawing.Bitmap" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Bitmap.FromResource%2A> 需要呼叫 unmanaged 程式碼的安全性權限。 從內嵌資源建立點陣圖的 managed 替代用法，請參閱<xref:System.Drawing.Bitmap.%23ctor%28System.Type%2CSystem.String%29?displayProperty=nameWithType>。 <xref:System.Drawing.Bitmap.FromResource%2A> 只適用於名為資源的 DLL 中的點陣圖。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">用於 unmanaged 程式碼呼叫。 相關的列舉： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHbitmap">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>從 GDI+ <see cref="T:System.Drawing.Bitmap" /> 建立 GDI 點陣圖物件。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHbitmap">
      <MemberSignature Language="C#" Value="public IntPtr GetHbitmap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHbitmap() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetHbitmap" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHbitmap () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHbitmap();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>從這個 <see cref="T:System.Drawing.Bitmap" /> 建立 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 點陣圖物件。</summary>
        <returns>這個方法所建立的 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 點陣圖物件的控制代碼。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您必須負責呼叫[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]`DeleteObject`方法來釋放所使用的記憶體[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]bitmap 物件。 如需 GDI 點陣圖的詳細資訊，請參閱[點陣圖](http://go.microsoft.com/fwlink/?LinkId=205685)Windows GDI 文件中。  
  
   
  
## Examples  
 下列程式碼範例會示範如何使用 <xref:System.Drawing.Bitmap.GetHbitmap%2A> 方法。  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">點陣圖的寬度或高度大於 <see cref="F:System.Int16.MaxValue" />。</exception>
        <exception cref="T:System.Exception">作業失敗。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">用於 unmanaged 程式碼呼叫。 相關的列舉： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHbitmap">
      <MemberSignature Language="C#" Value="public IntPtr GetHbitmap (System.Drawing.Color background);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHbitmap(valuetype System.Drawing.Color background) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetHbitmap(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHbitmap (background As Color) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHbitmap(System::Drawing::Color background);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="background" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="background">
          <see cref="T:System.Drawing.Color" /> 結構，指定背景色彩。 如果點陣圖完全不透明，這個參數會被忽略。</param>
        <summary>從這個 <see cref="T:System.Drawing.Bitmap" /> 建立 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 點陣圖物件。</summary>
        <returns>這個方法所建立的 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 點陣圖物件的控制代碼。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您必須負責呼叫[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]`DeleteObject`方法來釋放所使用的記憶體[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]bitmap 物件。 如需 GDI 點陣圖的詳細資訊，請參閱[點陣圖](http://go.microsoft.com/fwlink/?LinkId=205685)Windows GDI 文件中。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Drawing.Bitmap.GetHbitmap%2A>.method。  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">點陣圖的寬度或高度大於 <see cref="F:System.Int16.MaxValue" />。</exception>
        <exception cref="T:System.Exception">作業失敗。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">用於 unmanaged 程式碼呼叫。 相關的列舉： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHicon">
      <MemberSignature Language="C#" Value="public IntPtr GetHicon ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHicon() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetHicon" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHicon () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHicon();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回圖示的控制代碼。</summary>
        <returns>擁有與 <see cref="T:System.Drawing.Bitmap" /> 相同影像之圖示的 Windows 控制代碼。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一開始，建立從控制代碼的圖示會有相同的大小與原始的點陣圖。  
  
   
  
## Examples  
 下列程式碼範例設計用於搭配 Windows Form，且其需要<xref:System.Windows.Forms.PaintEventArgs> `e`，這是參數的<xref:System.Windows.Forms.Control.Paint>事件處理常式。 該程式碼執行下列動作：  
  
-   建立 <xref:System.Drawing.Bitmap>。  
  
-   將該物件繪製到螢幕。  
  
-   取得圖示控制代碼<xref:System.Drawing.Bitmap>。  
  
-   設定<xref:System.Windows.Forms.Form.Icon%2A?displayProperty=nameWithType>圖示從控制代碼建立表單的屬性。  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">作業失敗。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">用於 unmanaged 程式碼呼叫。 相關的列舉： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetPixel">
      <MemberSignature Language="C#" Value="public System.Drawing.Color GetPixel (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Color GetPixel(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetPixel(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPixel (x As Integer, y As Integer) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Color GetPixel(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">要擷取的像素 X 座標。</param>
        <param name="y">要擷取的像素 Y 座標。</param>
        <summary>取得這個 <see cref="T:System.Drawing.Bitmap" /> 中指定像素的色彩。</summary>
        <returns>
          <see cref="T:System.Drawing.Color" /> 結構，表示指定像素的色彩。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例設計用於搭配 Windows Form，且其需要<xref:System.Windows.Forms.PaintEventArgs> `e`，這是參數的<xref:System.Windows.Forms.Control.Paint>事件處理常式。 程式碼取得像素色彩的點陣圖，，然後使用該色彩填滿的矩形。  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="x" /> 小於零，或大於等於 <see cref="P:System.Drawing.Image.Width" />。  
  
 -或-  
  
 <paramref name="y" /> 小於零，或大於等於 <see cref="P:System.Drawing.Image.Height" />。</exception>
        <exception cref="T:System.Exception">作業失敗。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LockBits">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將 <see cref="T:System.Drawing.Bitmap" /> 鎖定在系統記憶體內。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LockBits">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.BitmapData LockBits (System.Drawing.Rectangle rect, System.Drawing.Imaging.ImageLockMode flags, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Imaging.BitmapData LockBits(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Imaging.ImageLockMode flags, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function LockBits (rect As Rectangle, flags As ImageLockMode, format As PixelFormat) As BitmapData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Imaging::BitmapData ^ LockBits(System::Drawing::Rectangle rect, System::Drawing::Imaging::ImageLockMode flags, System::Drawing::Imaging::PixelFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.BitmapData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ImageLockMode" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="rect">
          <see cref="T:System.Drawing.Rectangle" /> 結構，指定要鎖定的 <see cref="T:System.Drawing.Bitmap" /> 部分。</param>
        <param name="flags">
          <see cref="T:System.Drawing.Imaging.ImageLockMode" /> 列舉，指定 <see cref="T:System.Drawing.Bitmap" /> 的存取層級 (讀取/寫入)。</param>
        <param name="format">
          <see cref="T:System.Drawing.Imaging.PixelFormat" /> 列舉，指定這個 <see cref="T:System.Drawing.Bitmap" /> 的資料格式。</param>
        <summary>將 <see cref="T:System.Drawing.Bitmap" /> 鎖定在系統記憶體內。</summary>
        <returns>
          <see cref="T:System.Drawing.Imaging.BitmapData" />，包含這個鎖定作業的相關資訊。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Drawing.Bitmap.LockBits%2A>方法，以將現有點陣圖鎖定在系統記憶體中，以便以程式設計方式變更。 您可以變更的色彩與影像<xref:System.Drawing.Bitmap.SetPixel%2A>方法中，雖然<xref:System.Drawing.Bitmap.LockBits%2A>方法個別提供較佳的效能，大規模的變更。  
  
 <xref:System.Drawing.Imaging.BitmapData>指定屬性的<xref:System.Drawing.Bitmap>，例如大小、 像素格式、 在記憶體中，像素資料的起始位址和長度為每個掃描線 （分散）。  
  
 呼叫此方法時，您應該使用的成員<xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType>列舉，其中包含特定位元-每個像素 (BPP) 值。 使用<xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType>值例如<xref:System.Drawing.Imaging.PixelFormat.Indexed>和<xref:System.Drawing.Imaging.PixelFormat.Gdi>將會擲回<xref:System.ArgumentException?displayProperty=nameWithType>。 此外，傳遞點陣圖的不正確的像素格式將會擲回<xref:System.ArgumentException?displayProperty=nameWithType>。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Drawing.Image.PixelFormat%2A>， <xref:System.Drawing.Image.Height%2A>， <xref:System.Drawing.Image.Width%2A>，和<xref:System.Drawing.Imaging.BitmapData.Scan0%2A>屬性;<xref:System.Drawing.Bitmap.LockBits%2A>和<xref:System.Drawing.Bitmap.UnlockBits%2A>方法; 而<xref:System.Drawing.Imaging.ImageLockMode>列舉型別。 這個範例被為了搭配 Windows Form。 此範例不是所有的像素格式中正常運作，但提供使用方式的範例<xref:System.Drawing.Bitmap.LockBits%2A>方法。 若要執行此範例中，將它貼到表單，並處理表單的<xref:System.Windows.Forms.Control.Paint>藉由呼叫事件`LockUnlockBitsExample`方法，傳遞`e`為<xref:System.Windows.Forms.PaintEventArgs>。  
  
 [!code-cpp[System.Drawing.BitmapMembers#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.BitmapMembers#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#5)]
 [!code-vb[System.Drawing.BitmapMembers#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Drawing.Imaging.PixelFormat" /> 並不是代表每一個像素含有幾個位元的有效值。  
  
 -或-  
  
 傳入點陣圖的 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 不正確。</exception>
        <exception cref="T:System.Exception">作業失敗。</exception>
      </Docs>
    </Member>
    <Member MemberName="LockBits">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.BitmapData LockBits (System.Drawing.Rectangle rect, System.Drawing.Imaging.ImageLockMode flags, System.Drawing.Imaging.PixelFormat format, System.Drawing.Imaging.BitmapData bitmapData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Imaging.BitmapData LockBits(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Imaging.ImageLockMode flags, valuetype System.Drawing.Imaging.PixelFormat format, class System.Drawing.Imaging.BitmapData bitmapData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.BitmapData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Imaging::BitmapData ^ LockBits(System::Drawing::Rectangle rect, System::Drawing::Imaging::ImageLockMode flags, System::Drawing::Imaging::PixelFormat format, System::Drawing::Imaging::BitmapData ^ bitmapData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.BitmapData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ImageLockMode" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
        <Parameter Name="bitmapData" Type="System.Drawing.Imaging.BitmapData" />
      </Parameters>
      <Docs>
        <param name="rect">矩形結構，指定要鎖定的 <see cref="T:System.Drawing.Bitmap" /> 部分。</param>
        <param name="flags">一個 <see cref="T:System.Drawing.Imaging.ImageLockMode" /> 值，指定 <see cref="T:System.Drawing.Bitmap" /> 的存取層級 (讀取/寫入)。</param>
        <param name="format">一個 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 值，指定 <see cref="T:System.Drawing.Bitmap" /> 的資料格式。</param>
        <param name="bitmapData">
          <see cref="T:System.Drawing.Imaging.BitmapData" />，包含鎖定作業的相關資訊。</param>
        <summary>將 <see cref="T:System.Drawing.Bitmap" /> 鎖定在系統記憶體內。</summary>
        <returns>
          <see cref="T:System.Drawing.Imaging.BitmapData" />，包含鎖定作業的相關資訊。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Drawing.Bitmap.LockBits%2A>方法，以將現有點陣圖鎖定在系統記憶體中，以便以程式設計方式變更。 您可以變更的色彩與影像<xref:System.Drawing.Bitmap.SetPixel%2A>方法中，雖然<xref:System.Drawing.Bitmap.LockBits%2A>方法個別提供較佳的效能，大規模的變更。  
  
 呼叫此方法時，您應該使用的成員<xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType>列舉，其中包含特定位元-每個像素 (BPP) 值。 使用<xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType>值，例如<xref:System.Drawing.Imaging.PixelFormat.Indexed>和<xref:System.Drawing.Imaging.PixelFormat.Gdi>，將會擲回<xref:System.ArgumentException?displayProperty=nameWithType>。 此外，傳遞點陣圖的不正確的像素格式將會擲回<xref:System.ArgumentException?displayProperty=nameWithType>。  
  
 這個版本的<xref:System.Drawing.Bitmap.LockBits%2A>方法用來搭配`flags`值<xref:System.Drawing.Imaging.ImageLockMode.UserInputBuffer?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Drawing.Imaging.PixelFormat" /> 並不是代表每一個像素含有幾個位元的有效值。  
  
 -或-  
  
 傳入點陣圖的 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 不正確。</exception>
        <exception cref="T:System.Exception">作業失敗。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MakeTransparent">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>可讓這個 <see cref="T:System.Drawing.Bitmap" />的預設透明色彩為透明。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MakeTransparent">
      <MemberSignature Language="C#" Value="public void MakeTransparent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeTransparent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.MakeTransparent" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeTransparent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeTransparent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>可讓這個 <see cref="T:System.Drawing.Bitmap" />的預設透明色彩為透明。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 系統調色盤會定義為預設透明，或 alpha 色彩的一種色彩。 此方法讓預設的透明色彩透明這個<xref:System.Drawing.Bitmap>。 如果不透明的色彩由系統所指定<xref:System.Drawing.Color.LightGray%2A>是透明的色彩。  
  
 當您呼叫<xref:System.Drawing.Bitmap.MakeTransparent%2A>，點陣圖都會轉換成<xref:System.Drawing.Imaging.PixelFormat.Format32bppArgb>格式，此格式支援 alpha 色板。  
  
   
  
## Examples  
 下列程式碼範例設計用於搭配 Windows Form，且其需要<xref:System.Windows.Forms.PaintEventArgs> `e`，這是參數的<xref:System.Windows.Forms.Control.Paint>事件處理常式。 程式碼，讓系統預設的透明色彩透明`myBitmap`，，然後繪製<xref:System.Drawing.Bitmap>至螢幕。  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Drawing.Bitmap" /> 的影像格式為圖示格式。</exception>
        <exception cref="T:System.Exception">作業失敗。</exception>
      </Docs>
    </Member>
    <Member MemberName="MakeTransparent">
      <MemberSignature Language="C#" Value="public void MakeTransparent (System.Drawing.Color transparentColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeTransparent(valuetype System.Drawing.Color transparentColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.MakeTransparent(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeTransparent (transparentColor As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeTransparent(System::Drawing::Color transparentColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transparentColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="transparentColor">
          <see cref="T:System.Drawing.Color" /> 結構，表示要變為透明的色彩。</param>
        <summary>將此 <see cref="T:System.Drawing.Bitmap" /> 的指定色彩變為透明。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您呼叫<xref:System.Drawing.Bitmap.MakeTransparent%2A>，點陣圖都會轉換成<xref:System.Drawing.Imaging.PixelFormat.Format32bppArgb>格式，此格式支援 alpha 色板。  
  
   
  
## Examples  
 下列程式碼範例設計用於搭配 Windows Form，且其需要<xref:System.Windows.Forms.PaintEventArgs> `e`，這是參數的<xref:System.Windows.Forms.Control.Paint>事件處理常式。 該程式碼執行下列動作：  
  
-   取得中的像素色彩<xref:System.Drawing.Bitmap>。  
  
-   將點陣圖透明該色彩。  
  
-   繪製<xref:System.Drawing.Bitmap>至螢幕。  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Drawing.Bitmap" /> 的影像格式為圖示格式。</exception>
        <exception cref="T:System.Exception">作業失敗。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPixel">
      <MemberSignature Language="C#" Value="public void SetPixel (int x, int y, System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPixel(int32 x, int32 y, valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPixel(int x, int y, System::Drawing::Color color);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="x">要設定之像素的 X 座標。</param>
        <param name="y">要設定之像素的 Y 座標。</param>
        <param name="color">代表要指派給指定像素的 <see cref="T:System.Drawing.Color" /> 結構。</param>
        <summary>設定此 <see cref="T:System.Drawing.Bitmap" /> 中指定之像素的色彩。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Drawing.Bitmap.SetPixel%2A>方法來以程式設計方式設定映像中的個別像素的色彩。 您也可以變更映像以程式設計方式使用<xref:System.Drawing.Bitmap.LockBits%2A>方法。 通常是針對大規模的變更，<xref:System.Drawing.Bitmap.LockBits%2A>方法個別提供較佳的效能。  
  
   
  
## Examples  
 下列程式碼範例設計用於搭配 Windows Form，且其需要<xref:System.Windows.Forms.PaintEventArgs> `e`，這是參數的<xref:System.Windows.Forms.Control.Paint>事件處理常式。 該程式碼執行下列動作：  
  
-   建立 <xref:System.Drawing.Bitmap>。  
  
-   設定每個像素的色彩為黑色，點陣圖中。  
  
-   繪製點陣圖。  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">作業失敗。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetResolution">
      <MemberSignature Language="C#" Value="public void SetResolution (float xDpi, float yDpi);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResolution(float32 xDpi, float32 yDpi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.SetResolution(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResolution (xDpi As Single, yDpi As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetResolution(float xDpi, float yDpi);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xDpi" Type="System.Single" />
        <Parameter Name="yDpi" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="xDpi">
          <see cref="T:System.Drawing.Bitmap" /> 的水平解析度 (單位為 DPI)。</param>
        <param name="yDpi">
          <see cref="T:System.Drawing.Bitmap" /> 的垂直解析度 (單位為 DPI)。</param>
        <summary>設定這個 <see cref="T:System.Drawing.Bitmap" /> 的解析度。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個方法來設定所需的解析度上新建立的點陣圖。 變更影像的解析度不會變更實體大小。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Drawing.Bitmap.SetResolution%2A>方法。  
  
 [!code-csharp[System.Drawing.Misc3#SetResolution](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#setresolution)]
 [!code-vb[System.Drawing.Misc3#SetResolution](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#setresolution)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">作業失敗。</exception>
      </Docs>
    </Member>
    <Member MemberName="UnlockBits">
      <MemberSignature Language="C#" Value="public void UnlockBits (System.Drawing.Imaging.BitmapData bitmapdata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnlockBits(class System.Drawing.Imaging.BitmapData bitmapdata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnlockBits(System::Drawing::Imaging::BitmapData ^ bitmapdata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmapdata" Type="System.Drawing.Imaging.BitmapData" />
      </Parameters>
      <Docs>
        <param name="bitmapdata">
          <see cref="T:System.Drawing.Imaging.BitmapData" />，指定鎖定作業的相關資訊。</param>
        <summary>從系統記憶體解除鎖定這個 <see cref="T:System.Drawing.Bitmap" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Imaging.BitmapData>指定屬性的<xref:System.Drawing.Bitmap>，例如大小、 像素格式、 在記憶體中，像素資料的起始位址和長度為每個掃描線 （分散）。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Drawing.Image.PixelFormat%2A>， <xref:System.Drawing.Image.Height%2A>， <xref:System.Drawing.Image.Width%2A>，和<xref:System.Drawing.Imaging.BitmapData.Scan0%2A>屬性;<xref:System.Drawing.Bitmap.LockBits%2A>和<xref:System.Drawing.Bitmap.UnlockBits%2A>方法; 而<xref:System.Drawing.Imaging.ImageLockMode>列舉型別。 此範例不是所有的像素格式中正常運作，但提供使用方式的範例<xref:System.Drawing.Bitmap.LockBits%2A>方法。 這個範例被為了搭配 Windows Form。 若要執行此範例中，將它貼到表單，並處理表單的<xref:System.Windows.Forms.Control.Paint>藉由呼叫事件`LockUnlockBitsExample`方法，傳遞`e`為<xref:System.Windows.Forms.PaintEventArgs>。  
  
 [!code-cpp[System.Drawing.BitmapMembers#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.BitmapMembers#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#5)]
 [!code-vb[System.Drawing.BitmapMembers#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">作業失敗。</exception>
      </Docs>
    </Member>
  </Members>
</Type>