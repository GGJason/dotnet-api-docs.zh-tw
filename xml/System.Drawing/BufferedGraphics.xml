<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BufferedGraphics.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58eb376f4bda7764bd0c534a86c20b084960c4a7d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8eb376f4bda7764bd0c534a86c20b084960c4a7d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.BufferedGraphics">
          <source>Provides a graphics buffer for double buffering.</source>
          <target state="translated">提供雙重緩衝的圖形緩衝區。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class allows you to implement custom double buffering for your graphics.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>類別可讓您實作自訂雙重緩衝的圖形。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>It provides a wrapper for a graphics buffer, along with methods that you can use to write to the buffer and render its contents to an output device.</source>
          <target state="translated">它提供圖形緩衝區，以及可用來寫入緩衝區以及轉譯其內容至輸出裝置的方法包裝函式。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.</source>
          <target state="translated">使用雙重緩衝的圖形可以減少或消除閃爍因重繪顯示介面的。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>When you use double buffering, updated graphics are first drawn to a buffer in memory, and the contents of this buffer are then quickly written to some or all of the displayed surface.</source>
          <target state="translated">當您使用雙重緩衝時，緩衝區在記憶體中，會先繪製更新的圖形和這個緩衝區的內容會接著快速寫入部分或所有顯示的介面。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>This relatively brief overwrite of the displayed graphics typically reduces or eliminates the flicker that sometimes occurs when graphics are updated.</source>
          <target state="translated">顯示圖形這相當簡短覆寫通常會減少，或完全排除，有時會發生更新時，圖形會閃爍。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The simplest way to use double buffering is to set the <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> control style flag on a control using the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method.</source>
          <target state="translated">使用雙重緩衝的最簡單方式是設定<ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph>控制樣式旗標控制使用<ph id="ph2">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph>旗標的控制項將所有繪製控制項的預設圖形緩衝區中，透過重新都導向而不需要任何額外的程式碼。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>This flag is set to <ph id="ph1">`true`</ph> by default.</source>
          <target state="translated">若要設定此旗標<ph id="ph1">`true`</ph>預設。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class has no public constructor and must be created by the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> for an application domain using its <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>類別沒有公用建構函式，而且必須先建立<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>應用程式網域使用其<ph id="ph3">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>You can retrieve the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> for the current application domain from the static <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">您可以擷取<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>目前應用程式定義域靜態<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Graphics%2A&gt;</ph> property can be used for drawing to the graphics buffer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Graphics%2A&gt;</ph>屬性可用於繪圖至圖形緩衝區。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>This property provides access to the <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object that draws to the graphics buffer allocated for this <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object.</source>
          <target state="translated">此屬性可存取<ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph>繪製至這個已配置的圖形緩衝區的物件<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Render%2A&gt;</ph> method with no arguments draws the contents of the graphics buffer to the surface specified when the buffer was allocated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Render%2A&gt;</ph>與任何引數繪製的圖形內容的緩衝區至介面方法可讓您指定當已配置的緩衝區。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Other overloads of the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Render%2A&gt;</ph> method allow you to specify a <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> object or an <ph id="ph3">&lt;xref:System.IntPtr&gt;</ph> object that points to a device context to which to draw the contents of the graphics buffer.</source>
          <target state="translated">其他多載<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Render%2A&gt;</ph>方法可讓您指定<ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph>物件或<ph id="ph3">&lt;xref:System.IntPtr&gt;</ph>指向要繪製圖形緩衝區的內容的裝置內容物件。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>For more information about drawing double-buffered graphics, see <bpt id="p1">[</bpt>Double Buffered Graphics<ept id="p1">](~/docs/framework/winforms/advanced/double-buffered-graphics.md)</ept>.</source>
          <target state="translated">如需繪製雙重緩衝的圖形的詳細資訊，請參閱<bpt id="p1">[</bpt>雙重緩衝的圖形<ept id="p1">](~/docs/framework/winforms/advanced/double-buffered-graphics.md)</ept>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The following code example demonstrates using a <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object to draw graphics using several types of buffering implementations.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>繪製圖形使用緩衝實作的幾種類型的物件。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Clicking the form alternately starts and stops a timer that causes draw updates.</source>
          <target state="translated">按一下表單，或者啟動然後停止計時器，導致繪製更新。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The draw updates allow you to observe the effect of double buffering.</source>
          <target state="translated">繪製更新可讓您觀察雙重緩衝的效果。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Right-clicking the form cycles through the following drawing modes:</source>
          <target state="translated">以滑鼠右鍵按一下下列的繪圖模式中表單的迴圈：</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Drawing directly to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> for a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">直接繪圖<ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph>如<ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Drawing by overriding the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> method using the <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> control style.</source>
          <target state="translated">藉由覆寫繪製<ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph>方法使用<ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph>控制樣式。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Drawing by overriding the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> method for the form method without using the <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> control style.</source>
          <target state="translated">藉由覆寫繪製<ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph>表單方法，而不需要使用方法<ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph>控制樣式。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>In each mode, text is drawn that identifies the current mode and describes the behavior that occurs when each mouse button is pressed.</source>
          <target state="translated">在每個模式中，會繪製文字，以識別目前的模式，並描述每個已按下滑鼠按鈕時所發生的行為。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphics" /&gt;</ph> class is not thread safe.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphics" /&gt;</ph> 類別不具備執行緒安全。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>When accessing a graphics buffer from separate threads, it is important to use a thread-access control mechanism to prevent conflicts.</source>
          <target state="translated">當存取圖形緩衝區從不同的執行緒，請務必使用執行緒存取控制機制，以避免衝突。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphics.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphics" /&gt;</ph> object.</source>
          <target state="translated">釋放由 <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphics" /&gt;</ph> 物件使用的所有資源。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph>完畢時使用<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph>方法會使<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>中無法使用的狀態物件。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object was occupying.</source>
          <target state="translated">在呼叫<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph>，您必須釋放所有參考<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>物件，以便記憶體回收行程可以回收的記憶體，<ph id="ph3">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>物件所佔用。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>實作 Dispose 方法<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object.</source>
          <target state="translated">請務必呼叫<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph>您釋放最後一個參考之前<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> 物件的 <ph id="ph2">`Finalize`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphics.Finalize">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">在記憶體回收開始前，允許物件嘗試釋放資源，並執行其他清除作業。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Drawing.BufferedGraphics.Graphics">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> object that outputs to the graphics buffer.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> 物件，該物件輸出至圖形緩衝區。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphics.Graphics">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> object that outputs to the graphics buffer.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> 物件，該物件輸出至圖形緩衝區。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphics.Graphics">
          <source>This property provides a <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object that draws to the graphics buffer allocated for this <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object.</source>
          <target state="translated">這個屬性提供<ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph>繪製至這個已配置的圖形緩衝區的物件<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="T:System.Drawing.BufferedGraphics">
          <source>Writes the contents of the graphics buffer.</source>
          <target state="translated">寫入圖形緩衝區的內容。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphics.Render">
          <source>Writes the contents of the graphics buffer to the default device.</source>
          <target state="translated">將圖形緩衝區的內容寫入預設裝置。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render">
          <source>This method writes the contents of the graphics buffer to the device specified by calling the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> used to create this <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object.</source>
          <target state="translated">這個方法會寫入圖形緩衝區的內容，藉由呼叫指定的裝置<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph>用來建立此<ph id="ph3">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> object to which to write the contents of the graphics buffer.</source>
          <target state="translated">要將圖形緩衝區的內容寫入的 <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)">
          <source>Writes the contents of the graphics buffer to the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> object.</source>
          <target state="translated">將圖形緩衝區的內容寫入指定的 <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)">
          <source>This method writes the contents of the graphics buffer to the specified <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object.</source>
          <target state="translated">這個方法會將圖形緩衝區的內容寫入指定<ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)">
          <source>The following code example demonstrates rendering the contents of the graphics buffer to a specified <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object.</source>
          <target state="translated">下列程式碼範例示範如何呈現圖形緩衝區的內容與指定<ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)">
          <source>This code is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class.</source>
          <target state="translated">這段程式碼是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> that points to the device context to which to write the contents of the graphics buffer.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph>，指向要將圖形緩衝區的內容寫入的裝置內容。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
          <source>Writes the contents of the graphics buffer to the device context associated with the specified <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> handle.</source>
          <target state="translated">將圖形緩衝區的內容寫入與指定 <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> 控制代碼關聯的裝置內容。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
          <source>This method writes the contents of the graphics buffer to the device context associated with the specified <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> handle.</source>
          <target state="translated">這個方法會將圖形緩衝區的內容寫入指定相關聯的裝置內容<ph id="ph1">&lt;xref:System.IntPtr&gt;</ph>處理。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
          <source>The following code example demonstrates how to render the contents of the graphics buffer <ph id="ph1">`grafx`</ph> to a specified device context.</source>
          <target state="translated">下列程式碼範例示範如何呈現圖形緩衝區的內容<ph id="ph1">`grafx`</ph>指定的裝置內容。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
          <source>This code is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class.</source>
          <target state="translated">這段程式碼是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
          <source>for access to unmanaged code.</source>
          <target state="translated">用於存取 unmanaged 程式碼。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
          <source>Related enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">相關的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>