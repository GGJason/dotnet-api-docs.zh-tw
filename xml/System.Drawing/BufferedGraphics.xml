<Type Name="BufferedGraphics" FullName="System.Drawing.BufferedGraphics">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4af7a1a27ce31436d9a69db2ccf4d9c470a2f8ee" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37657175" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class BufferedGraphics : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BufferedGraphics extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.BufferedGraphics" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BufferedGraphics&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BufferedGraphics sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type BufferedGraphics = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="430e2-101">提供雙重緩衝 (Double Buffering) 的圖形緩衝區。</span>
      <span class="sxs-lookup">
        <span data-stu-id="430e2-101">Provides a graphics buffer for double buffering.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="430e2-102"><xref:System.Drawing.BufferedGraphics>類別可讓您實作圖形的自訂雙重緩衝。</span><span class="sxs-lookup"><span data-stu-id="430e2-102">The <xref:System.Drawing.BufferedGraphics> class allows you to implement custom double buffering for your graphics.</span></span> <span data-ttu-id="430e2-103">它提供的圖形緩衝區，以及可用來寫入至緩衝區以及轉譯其內容以輸出裝置的方法包裝函式。</span><span class="sxs-lookup"><span data-stu-id="430e2-103">It provides a wrapper for a graphics buffer, along with methods that you can use to write to the buffer and render its contents to an output device.</span></span>  
  
 <span data-ttu-id="430e2-104">使用雙重緩衝的圖形可以減少或消除因重繪顯示表面的閃爍。</span><span class="sxs-lookup"><span data-stu-id="430e2-104">Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.</span></span> <span data-ttu-id="430e2-105">當您使用雙重緩衝時，更新的圖形會先繪製到緩衝區在記憶體中，而這個緩衝區的內容會再快速寫入部分或所有顯示的介面。</span><span class="sxs-lookup"><span data-stu-id="430e2-105">When you use double buffering, updated graphics are first drawn to a buffer in memory, and the contents of this buffer are then quickly written to some or all of the displayed surface.</span></span> <span data-ttu-id="430e2-106">顯示圖形這相當簡短覆寫通常會減少，或排除有時發生於更新圖形重繪閃動。</span><span class="sxs-lookup"><span data-stu-id="430e2-106">This relatively brief overwrite of the displayed graphics typically reduces or eliminates the flicker that sometimes occurs when graphics are updated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="430e2-107">使用雙重緩衝的最簡單方式是設定<xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer>控制項上使用控制項的樣式旗標<xref:System.Windows.Forms.Control.SetStyle%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="430e2-107">The simplest way to use double buffering is to set the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style flag on a control using the <xref:System.Windows.Forms.Control.SetStyle%2A> method.</span></span> <span data-ttu-id="430e2-108">設定<xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer>旗標的控制項將所有繪製控制項的預設圖形緩衝區中，透過重新都導向而不需要任何額外的程式碼。</span><span class="sxs-lookup"><span data-stu-id="430e2-108">Setting the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code.</span></span> <span data-ttu-id="430e2-109">若要設定此旗標`true`預設。</span><span class="sxs-lookup"><span data-stu-id="430e2-109">This flag is set to `true` by default.</span></span>  
  
 <span data-ttu-id="430e2-110"><xref:System.Drawing.BufferedGraphics>類別沒有公用建構函式，而且必須由<xref:System.Drawing.BufferedGraphicsContext>應用程式網域使用其<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="430e2-110">The <xref:System.Drawing.BufferedGraphics> class has no public constructor and must be created by the <xref:System.Drawing.BufferedGraphicsContext> for an application domain using its <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method.</span></span> <span data-ttu-id="430e2-111">您可以擷取<xref:System.Drawing.BufferedGraphicsContext>目前的應用程式定義域，靜態<xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="430e2-111">You can retrieve the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="430e2-112"><xref:System.Drawing.BufferedGraphics.Graphics%2A>屬性可用來繪製至圖形緩衝區。</span><span class="sxs-lookup"><span data-stu-id="430e2-112">The <xref:System.Drawing.BufferedGraphics.Graphics%2A> property can be used for drawing to the graphics buffer.</span></span> <span data-ttu-id="430e2-113">這個屬性會提供存取權<xref:System.Drawing.Graphics>繪製至這個配置的圖形緩衝區的物件<xref:System.Drawing.BufferedGraphics>物件。</span><span class="sxs-lookup"><span data-stu-id="430e2-113">This property provides access to the <xref:System.Drawing.Graphics> object that draws to the graphics buffer allocated for this <xref:System.Drawing.BufferedGraphics> object.</span></span>  
  
 <span data-ttu-id="430e2-114"><xref:System.Drawing.BufferedGraphics.Render%2A>與任何引數繪製的圖形內容緩衝至介面的方法可讓您指定當已配置的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="430e2-114">The <xref:System.Drawing.BufferedGraphics.Render%2A> method with no arguments draws the contents of the graphics buffer to the surface specified when the buffer was allocated.</span></span> <span data-ttu-id="430e2-115">其他多載<xref:System.Drawing.BufferedGraphics.Render%2A>方法可讓您指定<xref:System.Drawing.Graphics>物件或<xref:System.IntPtr>物件，指向 裝置內容，以便用來繪製圖形緩衝區的內容。</span><span class="sxs-lookup"><span data-stu-id="430e2-115">Other overloads of the <xref:System.Drawing.BufferedGraphics.Render%2A> method allow you to specify a <xref:System.Drawing.Graphics> object or an <xref:System.IntPtr> object that points to a device context to which to draw the contents of the graphics buffer.</span></span>  
  
 <span data-ttu-id="430e2-116">如需繪製雙重緩衝的圖形的詳細資訊，請參閱[雙重緩衝的圖形](~/docs/framework/winforms/advanced/double-buffered-graphics.md)。</span><span class="sxs-lookup"><span data-stu-id="430e2-116">For more information about drawing double-buffered graphics, see [Double Buffered Graphics](~/docs/framework/winforms/advanced/double-buffered-graphics.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="430e2-117">下列程式碼範例示範如何使用<xref:System.Drawing.BufferedGraphics>物件來繪製圖形使用數種類型的緩衝處理實作。</span><span class="sxs-lookup"><span data-stu-id="430e2-117">The following code example demonstrates using a <xref:System.Drawing.BufferedGraphics> object to draw graphics using several types of buffering implementations.</span></span> <span data-ttu-id="430e2-118">按一下表單或者會啟動和停止計時器，導致繪製更新。</span><span class="sxs-lookup"><span data-stu-id="430e2-118">Clicking the form alternately starts and stops a timer that causes draw updates.</span></span> <span data-ttu-id="430e2-119">繪製更新可讓您觀察的雙重緩衝的效果。</span><span class="sxs-lookup"><span data-stu-id="430e2-119">The draw updates allow you to observe the effect of double buffering.</span></span> <span data-ttu-id="430e2-120">以滑鼠右鍵按一下下列的繪製模式中表單的迴圈：</span><span class="sxs-lookup"><span data-stu-id="430e2-120">Right-clicking the form cycles through the following drawing modes:</span></span>  
  
-   <span data-ttu-id="430e2-121">直接繪圖<xref:System.Windows.Forms.Control.Handle%2A>針對<xref:System.Windows.Forms.Form>。</span><span class="sxs-lookup"><span data-stu-id="430e2-121">Drawing directly to the <xref:System.Windows.Forms.Control.Handle%2A> for a <xref:System.Windows.Forms.Form>.</span></span>  
  
-   <span data-ttu-id="430e2-122">藉由覆寫繪製<xref:System.Windows.Forms.Form.OnPaint%2A>方法使用<xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer>控制樣式。</span><span class="sxs-lookup"><span data-stu-id="430e2-122">Drawing by overriding the <xref:System.Windows.Forms.Form.OnPaint%2A> method using the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style.</span></span>  
  
-   <span data-ttu-id="430e2-123">藉由覆寫繪製<xref:System.Windows.Forms.Form.OnPaint%2A>表單方法，而不需使用方法<xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer>控制樣式。</span><span class="sxs-lookup"><span data-stu-id="430e2-123">Drawing by overriding the <xref:System.Windows.Forms.Form.OnPaint%2A> method for the form method without using the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style.</span></span>  
  
 <span data-ttu-id="430e2-124">在每個模式中，繪製文字，以識別目前的模式，並說明每個已按下滑鼠按鈕時所發生的行為。</span><span class="sxs-lookup"><span data-stu-id="430e2-124">In each mode, text is drawn that identifies the current mode and describes the behavior that occurs when each mouse button is pressed.</span></span>  
  
 [!code-cpp[BufferedGraphicsExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferedGraphicsExample/CPP/bufferingtest.cpp#1)]
 [!code-csharp[BufferedGraphicsExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferedGraphicsExample/CS/bufferingtest.cs#1)]
 [!code-vb[BufferedGraphicsExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferedGraphicsExample/VB/bufferingtest.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="430e2-125">
        <see cref="T:System.Drawing.BufferedGraphics" /> 類別不具備執行緒安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="430e2-125">The <see cref="T:System.Drawing.BufferedGraphics" /> class is not thread safe.</span>
      </span>
      <span data-ttu-id="430e2-126">存取時的圖形緩衝區從個別的執行緒，請務必使用執行緒存取控制機制來避免發生衝突。</span>
      <span class="sxs-lookup">
        <span data-stu-id="430e2-126">When accessing a graphics buffer from separate threads, it is important to use a thread-access control mechanism to prevent conflicts.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="bufferedGraphics.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="430e2-127">釋放由 <see cref="T:System.Drawing.BufferedGraphics" /> 物件使用的所有資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="430e2-127">Releases all resources used by the <see cref="T:System.Drawing.BufferedGraphics" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="430e2-128">呼叫<xref:System.Drawing.BufferedGraphics.Dispose%2A>完畢時使用<xref:System.Drawing.BufferedGraphics>物件。</span><span class="sxs-lookup"><span data-stu-id="430e2-128">Call <xref:System.Drawing.BufferedGraphics.Dispose%2A> when you are finished using the <xref:System.Drawing.BufferedGraphics> object.</span></span> <span data-ttu-id="430e2-129"><xref:System.Drawing.BufferedGraphics.Dispose%2A>方法會<xref:System.Drawing.BufferedGraphics>中無法使用的狀態物件。</span><span class="sxs-lookup"><span data-stu-id="430e2-129">The <xref:System.Drawing.BufferedGraphics.Dispose%2A> method leaves the <xref:System.Drawing.BufferedGraphics> object in an unusable state.</span></span> <span data-ttu-id="430e2-130">之後呼叫<xref:System.Drawing.BufferedGraphics.Dispose%2A>，您必須釋放所有的參考<xref:System.Drawing.BufferedGraphics>物件，以便記憶體回收行程可以回收的記憶體，<xref:System.Drawing.BufferedGraphics>物件所佔用。</span><span class="sxs-lookup"><span data-stu-id="430e2-130">After calling <xref:System.Drawing.BufferedGraphics.Dispose%2A>, you must release all references to the <xref:System.Drawing.BufferedGraphics> object so the garbage collector can reclaim the memory that the <xref:System.Drawing.BufferedGraphics> object was occupying.</span></span> <span data-ttu-id="430e2-131">如需詳細資訊，請參閱 <<c0> [ 清除 Unmanaged 資源向上](~/docs/standard/garbage-collection/unmanaged.md)並[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="430e2-131">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="430e2-132">請務必呼叫<xref:System.Drawing.BufferedGraphics.Dispose%2A>您釋放最後一個參考之前<xref:System.Drawing.BufferedGraphics>物件。</span><span class="sxs-lookup"><span data-stu-id="430e2-132">Always call <xref:System.Drawing.BufferedGraphics.Dispose%2A> before you release your last reference to the <xref:System.Drawing.BufferedGraphics> object.</span></span> <span data-ttu-id="430e2-133">否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <xref:System.Drawing.BufferedGraphics> 物件的 `Finalize` 方法。</span><span class="sxs-lookup"><span data-stu-id="430e2-133">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.BufferedGraphics> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~BufferedGraphics ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!BufferedGraphics ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="bufferedGraphics.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="430e2-134">允許物件在記憶體回收進行回收之前，嘗試釋放資源並執行其他清除作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="430e2-134">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.BufferedGraphics.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Drawing.BufferedGraphics.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="430e2-135">取得 <see cref="T:System.Drawing.Graphics" /> 物件，該物件輸出至圖形緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="430e2-135">Gets a <see cref="T:System.Drawing.Graphics" /> object that outputs to the graphics buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="430e2-136">
            <see cref="T:System.Drawing.Graphics" /> 物件，該物件輸出至圖形緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="430e2-136">A <see cref="T:System.Drawing.Graphics" /> object that outputs to the graphics buffer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="430e2-137">這個屬性會提供<xref:System.Drawing.Graphics>繪製至這個配置的圖形緩衝區的物件<xref:System.Drawing.BufferedGraphics>物件。</span><span class="sxs-lookup"><span data-stu-id="430e2-137">This property provides a <xref:System.Drawing.Graphics> object that draws to the graphics buffer allocated for this <xref:System.Drawing.BufferedGraphics> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Render">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="430e2-138">寫入圖形緩衝區的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="430e2-138">Writes the contents of the graphics buffer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render();" />
      <MemberSignature Language="F#" Value="member this.Render : unit -&gt; unit" Usage="bufferedGraphics.Render " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="430e2-139">將圖形緩衝區的內容寫入預設裝置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="430e2-139">Writes the contents of the graphics buffer to the default device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="430e2-140">這個方法會將圖形緩衝區的內容寫入藉由呼叫指定的裝置<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>方法<xref:System.Drawing.BufferedGraphicsContext>用以建立此<xref:System.Drawing.BufferedGraphics>物件。</span><span class="sxs-lookup"><span data-stu-id="430e2-140">This method writes the contents of the graphics buffer to the device specified by calling the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method of the <xref:System.Drawing.BufferedGraphicsContext> used to create this <xref:System.Drawing.BufferedGraphics> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (System.Drawing.Graphics target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(class System.Drawing.Graphics target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (target As Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(System::Drawing::Graphics ^ target);" />
      <MemberSignature Language="F#" Value="member this.Render : System.Drawing.Graphics -&gt; unit" Usage="bufferedGraphics.Render target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="430e2-141">要將圖形緩衝區的內容寫入的 <see cref="T:System.Drawing.Graphics" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="430e2-141">A <see cref="T:System.Drawing.Graphics" /> object to which to write the contents of the graphics buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="430e2-142">將圖形緩衝區的內容寫入指定的 <see cref="T:System.Drawing.Graphics" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="430e2-142">Writes the contents of the graphics buffer to the specified <see cref="T:System.Drawing.Graphics" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="430e2-143">這個方法會將圖形緩衝區的內容寫入至指定<xref:System.Drawing.Graphics>物件。</span><span class="sxs-lookup"><span data-stu-id="430e2-143">This method writes the contents of the graphics buffer to the specified <xref:System.Drawing.Graphics> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="430e2-144">下列程式碼範例示範如何呈現圖形緩衝區的內容與指定<xref:System.Drawing.Graphics>物件。</span><span class="sxs-lookup"><span data-stu-id="430e2-144">The following code example demonstrates rendering the contents of the graphics buffer to a specified <xref:System.Drawing.Graphics> object.</span></span> <span data-ttu-id="430e2-145">此程式碼是針對提供之較大範例的一部分<xref:System.Drawing.BufferedGraphics>類別。</span><span class="sxs-lookup"><span data-stu-id="430e2-145">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#5)]
 [!code-csharp[BufferingExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#5)]
 [!code-vb[BufferingExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (IntPtr targetDC);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(native int targetDC) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (targetDC As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(IntPtr targetDC);" />
      <MemberSignature Language="F#" Value="member this.Render : nativeint -&gt; unit" Usage="bufferedGraphics.Render targetDC" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDC" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="targetDC">
          <span data-ttu-id="430e2-146">
            <see cref="T:System.IntPtr" />，指向要將圖形緩衝區的內容寫入的裝置內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="430e2-146">An <see cref="T:System.IntPtr" /> that points to the device context to which to write the contents of the graphics buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="430e2-147">將圖形緩衝區的內容寫入與指定 <see cref="T:System.IntPtr" /> 控制代碼關聯的裝置內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="430e2-147">Writes the contents of the graphics buffer to the device context associated with the specified <see cref="T:System.IntPtr" /> handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="430e2-148">這個方法會將圖形緩衝區的內容寫入指定相關聯的裝置內容<xref:System.IntPtr>處理。</span><span class="sxs-lookup"><span data-stu-id="430e2-148">This method writes the contents of the graphics buffer to the device context associated with the specified <xref:System.IntPtr> handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="430e2-149">下列程式碼範例示範如何將圖形緩衝區的內容呈現`grafx`指定的裝置內容。</span><span class="sxs-lookup"><span data-stu-id="430e2-149">The following code example demonstrates how to render the contents of the graphics buffer `grafx` to a specified device context.</span></span> <span data-ttu-id="430e2-150">此程式碼是針對提供之較大範例的一部分<xref:System.Drawing.BufferedGraphics>類別。</span><span class="sxs-lookup"><span data-stu-id="430e2-150">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#6)]
 [!code-csharp[BufferingExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#6)]
 [!code-vb[BufferingExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#6)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="430e2-151">用於存取 unmanaged 程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="430e2-151">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="430e2-152">相關的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="430e2-152">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.IntPtr" />
      </Docs>
    </Member>
  </Members>
</Type>