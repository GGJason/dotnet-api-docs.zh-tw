<Type Name="ControlDesigner" FullName="System.Windows.Forms.Design.ControlDesigner">
  <TypeSignature Language="C#" Value="public class ControlDesigner : System.ComponentModel.Design.ComponentDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlDesigner extends System.ComponentModel.Design.ComponentDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Design.ControlDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlDesigner&#xA;Inherits ComponentDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlDesigner : System::ComponentModel::Design::ComponentDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.ComponentDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1362b-101">擴充 <see cref="T:System.Windows.Forms.Control" /> 的設計模式行為。</span><span class="sxs-lookup"><span data-stu-id="1362b-101">Extends the design mode behavior of a <see cref="T:System.Windows.Forms.Control" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1362b-102"><xref:System.Windows.Forms.Design.ControlDesigner> 提供基底類別衍生自元件的設計工具<xref:System.Windows.Forms.Control>。</span><span class="sxs-lookup"><span data-stu-id="1362b-102"><xref:System.Windows.Forms.Design.ControlDesigner> provides a base class for designers of components that derive from <xref:System.Windows.Forms.Control>.</span></span> <span data-ttu-id="1362b-103">除了方法和繼承自功能<xref:System.ComponentModel.Design.ComponentDesigner>類別<xref:System.Windows.Forms.Design.ControlDesigner>提供其他方法來支援延伸與變更相關聯之行為<xref:System.Windows.Forms.Control>在設計階段。</span><span class="sxs-lookup"><span data-stu-id="1362b-103">In addition to the methods and functionality inherited from the <xref:System.ComponentModel.Design.ComponentDesigner> class, <xref:System.Windows.Forms.Design.ControlDesigner> provides additional methods to support extending and altering the behavior of an associated <xref:System.Windows.Forms.Control> at design time.</span></span>  
  
 <span data-ttu-id="1362b-104">您可將設計工具關聯型別使用<xref:System.ComponentModel.DesignerAttribute>。</span><span class="sxs-lookup"><span data-stu-id="1362b-104">You can associate a designer with a type using a <xref:System.ComponentModel.DesignerAttribute>.</span></span> <span data-ttu-id="1362b-105">如需自訂設計階段行為的概觀，請參閱[擴充設計階段支援](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2)。</span><span class="sxs-lookup"><span data-stu-id="1362b-105">For an overview of customizing design time behavior, see [Extending Design-Time Support](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1362b-106">下列範例<xref:System.Windows.Forms.Design.ControlDesigner>實作示範處理`MouseEnter`和`MouseLeave`事件，從設計工具的程式碼，在控制項上描繪和使用的部分<xref:System.ComponentModel.Design.IDesignerFilter>介面，以在設計階段加入控制項的屬性。</span><span class="sxs-lookup"><span data-stu-id="1362b-106">The following example <xref:System.Windows.Forms.Design.ControlDesigner> implementation demonstrates handling `MouseEnter` and `MouseLeave` events, drawing on a control from designer code, and using part of the <xref:System.ComponentModel.Design.IDesignerFilter> interface to add a property for the control at design time.</span></span> <span data-ttu-id="1362b-107">下列範例程式碼包含了設計工具和設計工具關聯的範例使用者控制項。</span><span class="sxs-lookup"><span data-stu-id="1362b-107">The following sample code contains a designer and a sample user control associated with the designer.</span></span> <span data-ttu-id="1362b-108">若要建置此範例中，範例編譯類別庫、 將程式庫的參考加入 Windows Form 專案、 將控制項加入 [工具箱] 中，和將控制項的執行個體加入至表單。</span><span class="sxs-lookup"><span data-stu-id="1362b-108">To build this sample, compile the sample into a class library, add a reference to the library to a Windows Forms project, add the control to the Toolbox, and add an instance of the control to your form.</span></span> <span data-ttu-id="1362b-109">當您指向控制項時，內部的控制項框線會反白顯示，而用來繪製外框色彩對應至`OutlineColor`列出控制項的設計工具已新增至屬性的屬性。</span><span class="sxs-lookup"><span data-stu-id="1362b-109">When you point to the control, the inner outline of the perimeter of the control is highlighted, and the color used to draw the outline corresponds to the `OutlineColor` property that the designer has added to the properties listed for the control.</span></span>  
  
 <span data-ttu-id="1362b-110">加入用來編譯程式碼範例 System.Design 組件的參考。</span><span class="sxs-lookup"><span data-stu-id="1362b-110">Add a reference to the System.Design assembly to compile the code example.</span></span>  
  
 [!code-cpp[ControlDesignerExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlDesignerExample/CPP/controldesignerexample.cpp#1)]
 [!code-csharp[ControlDesignerExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlDesignerExample/CS/controldesignerexample.cs#1)]
 [!code-vb[ControlDesignerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlDesignerExample/VB/controldesignerexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
    <altmember cref="T:System.ComponentModel.Design.IDesigner" />
    <altmember cref="T:System.ComponentModel.DesignerAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1362b-111">初始化 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="1362b-111">Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="accessibilityObj">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.AccessibleObject accessibilityObj;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Windows.Forms.AccessibleObject accessibilityObj" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.Design.ControlDesigner.accessibilityObj" />
      <MemberSignature Language="VB.NET" Value="Protected accessibilityObj As AccessibleObject " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Windows::Forms::AccessibleObject ^ accessibilityObj;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1362b-112">指定設計工具的可及性物件。</span><span class="sxs-lookup"><span data-stu-id="1362b-112">Specifies the accessibility object for the designer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1362b-113">預設值是 `null`。</span><span class="sxs-lookup"><span data-stu-id="1362b-113">The default value is `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="AccessibilityObject">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject AccessibilityObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject AccessibilityObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.AccessibilityObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AccessibilityObject As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleObject ^ AccessibilityObject { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1362b-114">取得指定給控制項的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-114">Gets the <see cref="T:System.Windows.Forms.AccessibleObject" /> assigned to the control.</span></span></summary>
        <value><span data-ttu-id="1362b-115">指定給控制項的 <see cref="T:System.Windows.Forms.AccessibleObject" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-115">The <see cref="T:System.Windows.Forms.AccessibleObject" /> assigned to the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1362b-116">如需可存取物件的詳細資訊，請參閱 MSDN Library 的＜Active Accessibility＞一節。</span><span class="sxs-lookup"><span data-stu-id="1362b-116">For more information about accessible objects, see the Active Accessibility section of the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="AssociatedComponents">
      <MemberSignature Language="C#" Value="public override System.Collections.ICollection AssociatedComponents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection AssociatedComponents" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.AssociatedComponents" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AssociatedComponents As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ AssociatedComponents { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1362b-117">取得元件集合，該集合與設計工具管理的元件相關聯。</span><span class="sxs-lookup"><span data-stu-id="1362b-117">Gets the collection of components associated with the component managed by the designer.</span></span></summary>
        <value><span data-ttu-id="1362b-118">元件，與設計工具管理的元件相關聯。</span><span class="sxs-lookup"><span data-stu-id="1362b-118">The components that are associated with the component managed by the designer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1362b-119">這個屬性會指出要複製或移動期間複製，在設計工具所管理的元件以及任何元件拖曳，或移動作業。</span><span class="sxs-lookup"><span data-stu-id="1362b-119">This property indicates any components to copy or move along with the component managed by the designer during a copy, drag, or move operation.</span></span>  
  
 <span data-ttu-id="1362b-120">如果這個集合會包含目前的設計模式文件中的其他元件的參考，這些元件會複製以及複製作業期間的設計工具所管理的元件。</span><span class="sxs-lookup"><span data-stu-id="1362b-120">If this collection contains references to other components in the current design mode document, those components will be copied along with the component managed by the designer during a copy operation.</span></span>  
  
 <span data-ttu-id="1362b-121">選取設計工具所管理的元件時，這個集合會填入任何巢狀控制項。</span><span class="sxs-lookup"><span data-stu-id="1362b-121">When the component managed by the designer is selected, this collection is filled with any nested controls.</span></span> <span data-ttu-id="1362b-122">這個集合也可以包含其他元件，例如工具列按鈕。</span><span class="sxs-lookup"><span data-stu-id="1362b-122">This collection can also include other components, such as the buttons of a toolbar.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeHandles">
      <MemberSignature Language="C#" Value="public bool AutoResizeHandles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoResizeHandles" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.AutoResizeHandles" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoResizeHandles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoResizeHandles { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1362b-123">取得或設定值，指出縮放控點的配置是否取決於 <see cref="P:System.Windows.Forms.Control.AutoSize" /> 屬性的值。</span><span class="sxs-lookup"><span data-stu-id="1362b-123">Gets or sets a value indicating whether resize handle allocation depends on the value of the <see cref="P:System.Windows.Forms.Control.AutoSize" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="1362b-124">如果縮放控點的配置取決於 <see cref="P:System.Windows.Forms.Control.AutoSize" /> 和 <see langword="true" /> 屬性的值，則為 <see langword="AutoSizeMode" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-124"><see langword="true" /> if resize handle allocation depends on the value of the <see cref="P:System.Windows.Forms.Control.AutoSize" /> and <see langword="AutoSizeMode" /> properties; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1362b-125">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-125">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseWndProc">
      <MemberSignature Language="C#" Value="protected void BaseWndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BaseWndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.BaseWndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseWndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BaseWndProc(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="1362b-126">要處理的 <see cref="T:System.Windows.Forms.Message" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-126">The <see cref="T:System.Windows.Forms.Message" /> to process.</span></span></param>
        <summary><span data-ttu-id="1362b-127">處理 Windows 訊息。</span><span class="sxs-lookup"><span data-stu-id="1362b-127">Processes Windows messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1362b-128">這個方法將會略過控制項來處理 windows 訊息。</span><span class="sxs-lookup"><span data-stu-id="1362b-128">This method causes the message to be processed by Windows, skipping the control.</span></span> <span data-ttu-id="1362b-129">如果您想要封鎖來自至控制項，取得訊息，但不是想封鎖連到 Windows 本身，因為它會造成其他訊息產生時，這非常有用。</span><span class="sxs-lookup"><span data-stu-id="1362b-129">This is useful if you want to block the message from getting to the control, but you do not want to block it from getting to Windows itself because it can cause other messages to be generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BehaviorService">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.Design.Behavior.BehaviorService BehaviorService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Design.Behavior.BehaviorService BehaviorService" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.BehaviorService" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property BehaviorService As BehaviorService" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Forms::Design::Behavior::BehaviorService ^ BehaviorService { System::Windows::Forms::Design::Behavior::BehaviorService ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.Behavior.BehaviorService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1362b-130">從設計環境取得 <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-130">Gets the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> from the design environment.</span></span></summary>
        <value><span data-ttu-id="1362b-131"><see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />；如果無法使用服務，則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-131">The <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />, or <see langword="null" /> if the service is unavailable.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeParentedTo">
      <MemberSignature Language="C#" Value="public virtual bool CanBeParentedTo (System.ComponentModel.Design.IDesigner parentDesigner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanBeParentedTo(class System.ComponentModel.Design.IDesigner parentDesigner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.CanBeParentedTo(System.ComponentModel.Design.IDesigner)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanBeParentedTo (parentDesigner As IDesigner) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanBeParentedTo(System::ComponentModel::Design::IDesigner ^ parentDesigner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentDesigner" Type="System.ComponentModel.Design.IDesigner" />
      </Parameters>
      <Docs>
        <param name="parentDesigner"><span data-ttu-id="1362b-132">管理控制項執行檢查的 <see cref="T:System.ComponentModel.Design.IDesigner" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-132">The <see cref="T:System.ComponentModel.Design.IDesigner" /> that manages the control to check.</span></span></param>
        <summary><span data-ttu-id="1362b-133">指示指定的設計工具控制項是否可以成為這個設計工具控制項的父系。</span><span class="sxs-lookup"><span data-stu-id="1362b-133">Indicates if this designer's control can be parented by the control of the specified designer.</span></span></summary>
        <returns>
          <span data-ttu-id="1362b-134">如果指定設計工具管理的控制項可以成為這個設計工具管理控制項的父系，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-134"><see langword="true" /> if the control managed by the specified designer can parent the control managed by this designer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1362b-135">這個方法可用於測試是否控制項可以特定類型父系的父代。</span><span class="sxs-lookup"><span data-stu-id="1362b-135">This method is useful for testing whether a control can be parented by a particular type of parent.</span></span> <span data-ttu-id="1362b-136">例如，<xref:System.Windows.Forms.TabPage>控制項只由父代<xref:System.Windows.Forms.TabControl>控制項。</span><span class="sxs-lookup"><span data-stu-id="1362b-136">For example, <xref:System.Windows.Forms.TabPage> controls can only be parented by <xref:System.Windows.Forms.TabControl> controls.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1362b-137">從拖曳項目時，不會呼叫這個方法**工具箱**拖曳至設計介面。</span><span class="sxs-lookup"><span data-stu-id="1362b-137">This method is not called when an item is dragged from the **Toolbox** onto the design surface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Control Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Control" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.Control" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Control As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Control ^ Control { System::Windows::Forms::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1362b-138">取得設計工具正在設計的控制項。</span><span class="sxs-lookup"><span data-stu-id="1362b-138">Gets the control that the designer is designing.</span></span></summary>
        <value><span data-ttu-id="1362b-139">設計工具正在設計的控制項。</span><span class="sxs-lookup"><span data-stu-id="1362b-139">The control that the designer is designing.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefWndProc">
      <MemberSignature Language="C#" Value="protected void DefWndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DefWndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.DefWndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DefWndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DefWndProc(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="1362b-140">要處理的 <see cref="T:System.Windows.Forms.Message" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-140">The <see cref="T:System.Windows.Forms.Message" /> to process.</span></span></param>
        <summary><span data-ttu-id="1362b-141">提供 Windows 訊息的預設處理。</span><span class="sxs-lookup"><span data-stu-id="1362b-141">Provides default processing for Windows messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1362b-142">這個方法會讓控制項，而不是在設計工具所要處理訊息。</span><span class="sxs-lookup"><span data-stu-id="1362b-142">This method causes the message to be processed by the control, rather than by the designer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Design.ControlDesigner.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="DisplayError">
      <MemberSignature Language="C#" Value="protected void DisplayError (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DisplayError(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.DisplayError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DisplayError (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DisplayError(Exception ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1362b-143">要顯示的 <see cref="T:System.Exception" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-143">The <see cref="T:System.Exception" /> to display.</span></span></param>
        <summary><span data-ttu-id="1362b-144">向使用者顯示指定之例外狀況的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="1362b-144">Displays information about the specified exception to the user.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="1362b-145"><see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="1362b-145"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="1362b-146">釋放 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</span><span class="sxs-lookup"><span data-stu-id="1362b-146">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1362b-147">這個方法會呼叫公用`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1362b-147">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="1362b-148">`Dispose()` 叫用受保護`Dispose(Boolean)`方法`disposing`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="1362b-148">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="1362b-149"><xref:System.Object.Finalize%2A> 叫用`Dispose`與`disposing`設`false`。</span><span class="sxs-lookup"><span data-stu-id="1362b-149"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="1362b-150">`disposing` 參數為 `true` 時，這個方法會釋放 <xref:System.Windows.Forms.Design.ControlDesigner> 參考的任何 Managed 物件所掌握的資源。</span><span class="sxs-lookup"><span data-stu-id="1362b-150">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.Design.ControlDesigner> references.</span></span> <span data-ttu-id="1362b-151">這個方法會叫用每個參考物件的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="1362b-151">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="1362b-152"><see langword="Dispose" /> 可以被其他物件呼叫多次。</span><span class="sxs-lookup"><span data-stu-id="1362b-152"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="1362b-153">在覆寫<see langword="Dispose(Boolean)" />，請小心不要參考到先前處置之前呼叫中的物件<see langword="Dispose" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-153">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="1362b-154">如需有關如何實作<see langword="Dispose(Boolean)" />，請參閱[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="1362b-154">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="1362b-155">如需有關<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，請參閱[清除 Unmanaged 資源上](~/docs/standard/garbage-collection/unmanaged.md)和[覆寫 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</span><span class="sxs-lookup"><span data-stu-id="1362b-155">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="EnableDesignMode">
      <MemberSignature Language="C#" Value="protected bool EnableDesignMode (System.Windows.Forms.Control child, string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool EnableDesignMode(class System.Windows.Forms.Control child, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode(System.Windows.Forms.Control,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EnableDesignMode (child As Control, name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool EnableDesignMode(System::Windows::Forms::Control ^ child, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Forms.Control" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="1362b-156">將啟用設計模式的子控制項。</span><span class="sxs-lookup"><span data-stu-id="1362b-156">The child control for which design mode will be enabled.</span></span></param>
        <param name="name"><span data-ttu-id="1362b-157">公開給使用者的 <c>child</c> 名稱。</span><span class="sxs-lookup"><span data-stu-id="1362b-157">The name of <c>child</c> as exposed to the end user.</span></span></param>
        <summary><span data-ttu-id="1362b-158">啟用子控制項的設計階段功能。</span><span class="sxs-lookup"><span data-stu-id="1362b-158">Enables design time functionality for a child control.</span></span></summary>
        <returns>
          <span data-ttu-id="1362b-159">如果可以啟用設計階段的子控制項，則為 <see langword="true" />，如果裝載基礎結構不支援它，則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-159"><see langword="true" /> if the child control could be enabled for design time; <see langword="false" /> if the hosting infrastructure does not support it.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1362b-160">所指定的子控制項`child`是這個控制項設計工具控制項的子系。</span><span class="sxs-lookup"><span data-stu-id="1362b-160">The child control specified by `child` is a child of this control designer's control.</span></span> <span data-ttu-id="1362b-161">子系不會直接參與持續性，但它會公開為主控制項的屬性。</span><span class="sxs-lookup"><span data-stu-id="1362b-161">The child does not directly participate in persistence, but it will if it is exposed as a property of the main control.</span></span> <span data-ttu-id="1362b-162">請考慮希望<xref:System.Windows.Forms.SplitContainer>： 它有兩個面板，`Panel1`和`Panel2`。</span><span class="sxs-lookup"><span data-stu-id="1362b-162">Consider a control like the <xref:System.Windows.Forms.SplitContainer>: it has two panels, `Panel1` and `Panel2`.</span></span> <span data-ttu-id="1362b-163">這些面板會公開透過唯讀<xref:System.Windows.Forms.SplitContainer.Panel1%2A>和<xref:System.Windows.Forms.SplitContainer.Panel2%2A>屬性<xref:System.Windows.Forms.SplitContainer>控制項。</span><span class="sxs-lookup"><span data-stu-id="1362b-163">These panels are exposed through read only <xref:System.Windows.Forms.SplitContainer.Panel1%2A> and <xref:System.Windows.Forms.SplitContainer.Panel2%2A> properties on the <xref:System.Windows.Forms.SplitContainer> control.</span></span> <span data-ttu-id="1362b-164"><xref:System.Windows.Forms.SplitContainer>控制項的設計工具呼叫<xref:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode%2A>每個面板中，以允許其他元件，以在其上卸除。</span><span class="sxs-lookup"><span data-stu-id="1362b-164">The <xref:System.Windows.Forms.SplitContainer> control's designer calls <xref:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode%2A> for each panel, which allows other components to be dropped on them.</span></span> <span data-ttu-id="1362b-165">但為了讓內容<xref:System.Windows.Forms.SplitContainer.Panel1%2A>和<xref:System.Windows.Forms.SplitContainer.Panel2%2A>儲存<xref:System.Windows.Forms.SplitContainer>控制項本身必須公開為公用屬性面板。</span><span class="sxs-lookup"><span data-stu-id="1362b-165">But, in order for the contents of <xref:System.Windows.Forms.SplitContainer.Panel1%2A> and <xref:System.Windows.Forms.SplitContainer.Panel2%2A> to be saved, the <xref:System.Windows.Forms.SplitContainer> control itself must expose the panels as public properties.</span></span>  
  
 <span data-ttu-id="1362b-166">控制項名稱必須是唯一的控制項設計工具中，但並不需要任何其他控制項的設計工具的子系名稱是唯一。</span><span class="sxs-lookup"><span data-stu-id="1362b-166">Control names must be unique within a control designer, but they are not required to be unique with respect to the children of other control designers.</span></span>  
  
 <span data-ttu-id="1362b-167">若要支援此功能，裝載基礎結構必須公開<xref:System.ComponentModel.INestedContainer>類別作為站台服務。</span><span class="sxs-lookup"><span data-stu-id="1362b-167">To support this feature, the hosting infrastructure must expose the <xref:System.ComponentModel.INestedContainer> class as a service through the site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1362b-168"><paramref name="child" /> 或 <paramref name="name" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-168"><paramref name="child" /> or <paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnableDragDrop">
      <MemberSignature Language="C#" Value="protected void EnableDragDrop (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnableDragDrop(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.EnableDragDrop(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnableDragDrop (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnableDragDrop(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1362b-169">會啟用控制項的拖放支援時，為 <see langword="true" />；如果控制項不應支援拖放功能，則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-169"><see langword="true" /> to enable drag-and-drop support for the control; <see langword="false" /> if the control should not have drag-and-drop support.</span></span> <span data-ttu-id="1362b-170">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-170">The default is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="1362b-171">啟用或停用設計中之控制項的拖放支援。</span><span class="sxs-lookup"><span data-stu-id="1362b-171">Enables or disables drag-and-drop support for the control being designed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1362b-172">預設值`false`指定控制項不能有子系在執行階段拖曳。</span><span class="sxs-lookup"><span data-stu-id="1362b-172">The default value of `false` specifies that a control cannot have children dragged onto it at design time.</span></span> <span data-ttu-id="1362b-173">若要允許控制項在設計階段父其他控制項，其關聯的設計工具是衍生自<xref:System.Windows.Forms.Design.ParentControlDesigner>。</span><span class="sxs-lookup"><span data-stu-id="1362b-173">To allow a control to parent other controls at design time, associate it with a designer that derives from <xref:System.Windows.Forms.Design.ParentControlDesigner>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDragRect">
      <MemberSignature Language="C#" Value="protected virtual bool EnableDragRect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDragRect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.EnableDragRect" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property EnableDragRect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool EnableDragRect { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1362b-174">取得值，指出是否能將拖曳矩形拖曳至這個設計工具元件上。</span><span class="sxs-lookup"><span data-stu-id="1362b-174">Gets a value indicating whether drag rectangles can be drawn on this designer component.</span></span></summary>
        <value>
          <span data-ttu-id="1362b-175">如果拖曳矩形可以拖曳，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-175"><see langword="true" /> if drag rectangles can be drawn; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetControlGlyph">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.Design.Behavior.ControlBodyGlyph GetControlGlyph (System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.Design.Behavior.ControlBodyGlyph GetControlGlyph(valuetype System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetControlGlyph (selectionType As GlyphSelectionType) As ControlBodyGlyph" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::Design::Behavior::ControlBodyGlyph ^ GetControlGlyph(System::Windows::Forms::Design::Behavior::GlyphSelectionType selectionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.Behavior.ControlBodyGlyph</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectionType" Type="System.Windows.Forms.Design.Behavior.GlyphSelectionType" />
      </Parameters>
      <Docs>
        <param name="selectionType"><span data-ttu-id="1362b-176"><see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 值，指定選取狀態。</span><span class="sxs-lookup"><span data-stu-id="1362b-176">A <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> value that specifies the selection state.</span></span></param>
        <summary><span data-ttu-id="1362b-177">傳回 <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />，表示這個控制項的界限。</span><span class="sxs-lookup"><span data-stu-id="1362b-177">Returns a <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> representing the bounds of this control.</span></span></summary>
        <returns><span data-ttu-id="1362b-178"><see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />，表示這個控制項的界限。</span><span class="sxs-lookup"><span data-stu-id="1362b-178">A <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> representing the bounds of this control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphs">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Design.Behavior.GlyphCollection GetGlyphs (System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.Design.Behavior.GlyphCollection GetGlyphs(valuetype System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlyphs (selectionType As GlyphSelectionType) As GlyphCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::Design::Behavior::GlyphCollection ^ GetGlyphs(System::Windows::Forms::Design::Behavior::GlyphSelectionType selectionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.Behavior.GlyphCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectionType" Type="System.Windows.Forms.Design.Behavior.GlyphSelectionType" />
      </Parameters>
      <Docs>
        <param name="selectionType"><span data-ttu-id="1362b-179"><see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> 值，指定選取狀態。</span><span class="sxs-lookup"><span data-stu-id="1362b-179">A <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> value that specifies the selection state.</span></span></param>
        <summary><span data-ttu-id="1362b-180">取得 <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 物件的集合，表示標準控制項的選取範圍框線和抓取控點。</span><span class="sxs-lookup"><span data-stu-id="1362b-180">Gets a collection of <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> objects representing the selection borders and grab handles for a standard control.</span></span></summary>
        <returns><span data-ttu-id="1362b-181"><see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> 物件的集合。</span><span class="sxs-lookup"><span data-stu-id="1362b-181">A collection of <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1362b-182">請注意，根據`selectionType`、<xref:System.Windows.Forms.Design.Behavior.Glyph>傳回的物件將代表這些選取項目狀態之一：</span><span class="sxs-lookup"><span data-stu-id="1362b-182">Note that based on `selectionType`, the <xref:System.Windows.Forms.Design.Behavior.Glyph> objects returned will represent one of these selection states:</span></span>  
  
-   <span data-ttu-id="1362b-183">完全可調整大小選取框線的抓取控點。</span><span class="sxs-lookup"><span data-stu-id="1362b-183">A fully resizable selection border with grab handles;</span></span>  
  
-   <span data-ttu-id="1362b-184">鎖定的選取框線。</span><span class="sxs-lookup"><span data-stu-id="1362b-184">A locked selection border;</span></span>  
  
-   <span data-ttu-id="1362b-185">單一 'hidden' 選取<xref:System.Windows.Forms.Design.Behavior.Glyph>。</span><span class="sxs-lookup"><span data-stu-id="1362b-185">A single 'hidden' selection <xref:System.Windows.Forms.Design.Behavior.Glyph>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHitTest">
      <MemberSignature Language="C#" Value="protected virtual bool GetHitTest (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GetHitTest(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.GetHitTest(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GetHitTest(System::Drawing::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="1362b-186"><see cref="T:System.Drawing.Point" />，表示滑鼠按一下的位置，以螢幕座標 (Screen Coordinate) 表示。</span><span class="sxs-lookup"><span data-stu-id="1362b-186">A <see cref="T:System.Drawing.Point" /> indicating the position at which the mouse was clicked, in screen coordinates.</span></span></param>
        <summary><span data-ttu-id="1362b-187">指示在指定的點按一下滑鼠是否應由控制項處理。</span><span class="sxs-lookup"><span data-stu-id="1362b-187">Indicates whether a mouse click at the specified point should be handled by the control.</span></span></summary>
        <returns>
          <span data-ttu-id="1362b-188">如果在指定的點按一下是由控制項處理，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-188"><see langword="true" /> if a click at the specified point is to be handled by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1362b-189"><xref:System.Windows.Forms.Design.ControlDesigner.GetHitTest%2A>方法會判斷是否在指定的點按應該傳遞至控制項，控制項在設計模式時。</span><span class="sxs-lookup"><span data-stu-id="1362b-189">The <xref:System.Windows.Forms.Design.ControlDesigner.GetHitTest%2A> method determines whether a click at the specified point should be passed to the control, while the control is in design mode.</span></span> <span data-ttu-id="1362b-190">您可以覆寫並實作這個方法可讓控制項在設計階段環境中接收按一下動作。</span><span class="sxs-lookup"><span data-stu-id="1362b-190">You can override and implement this method to enable your control to receive clicks in the design-time environment.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1362b-191">您可以將點傳遞至螢幕座標中<xref:System.Windows.Forms.Control.PointToClient%2A>方法<xref:System.Windows.Forms.Control>類別來取得控制項相對於左上角之點的座標。</span><span class="sxs-lookup"><span data-stu-id="1362b-191">You can pass a point in screen coordinates to the <xref:System.Windows.Forms.Control.PointToClient%2A> method of the <xref:System.Windows.Forms.Control> class to obtain the coordinates of the point relative to the upper-left corner of the control.</span></span>  
  
 <span data-ttu-id="1362b-192"><xref:System.Windows.Forms.Design.ControlDesigner.GetHitTest%2A>方法呼叫來回應 WM_NCHITTEST 訊息中，以便呼叫每個滑鼠移動。</span><span class="sxs-lookup"><span data-stu-id="1362b-192">The <xref:System.Windows.Forms.Design.ControlDesigner.GetHitTest%2A> method is called in response to the WM_NCHITTEST message, so it is called on each mouse move.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HookChildControls">
      <MemberSignature Language="C#" Value="protected void HookChildControls (System.Windows.Forms.Control firstChild);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void HookChildControls(class System.Windows.Forms.Control firstChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.HookChildControls(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub HookChildControls (firstChild As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void HookChildControls(System::Windows::Forms::Control ^ firstChild);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstChild" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="firstChild"><span data-ttu-id="1362b-193">要處理的第一個子 <see cref="T:System.Windows.Forms.Control" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-193">The first child <see cref="T:System.Windows.Forms.Control" /> to process.</span></span> <span data-ttu-id="1362b-194">這個方法會為控制項的子系遞迴地呼叫本身。</span><span class="sxs-lookup"><span data-stu-id="1362b-194">This method may recursively call itself for children of the control.</span></span></param>
        <summary><span data-ttu-id="1362b-195">從指定的控制項的子控制項傳送訊息至設計工具。</span><span class="sxs-lookup"><span data-stu-id="1362b-195">Routes messages from the child controls of the specified control to the designer.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritanceAttribute">
      <MemberSignature Language="C#" Value="protected override System.ComponentModel.InheritanceAttribute InheritanceAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.InheritanceAttribute InheritanceAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.InheritanceAttribute" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property InheritanceAttribute As InheritanceAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::ComponentModel::InheritanceAttribute ^ InheritanceAttribute { System::ComponentModel::InheritanceAttribute ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.InheritanceAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1362b-196">取得設計工具的 <see cref="T:System.ComponentModel.InheritanceAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-196">Gets the <see cref="T:System.ComponentModel.InheritanceAttribute" /> of the designer.</span></span></summary>
        <value>
          <span data-ttu-id="1362b-197">如果設計工具是根目錄設計工具，則為 <see cref="F:System.ComponentModel.InheritanceAttribute.Inherited" />，否則為父代設計工具之 <see cref="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" /> 屬性的值。</span><span class="sxs-lookup"><span data-stu-id="1362b-197"><see cref="F:System.ComponentModel.InheritanceAttribute.Inherited" /> if the designer is a root designer; otherwise, the value of the parent designer's <see cref="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" /> property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="1362b-198">設計工具要與其關聯的 <see cref="T:System.ComponentModel.IComponent" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-198">The <see cref="T:System.ComponentModel.IComponent" /> to associate the designer with.</span></span> <span data-ttu-id="1362b-199">這個元件一定要是 <see cref="T:System.Windows.Forms.Control" /> 的執行個體，或從其中衍生。</span><span class="sxs-lookup"><span data-stu-id="1362b-199">This component must always be an instance of, or derive from, <see cref="T:System.Windows.Forms.Control" />.</span></span></param>
        <summary><span data-ttu-id="1362b-200">使用指定的元件，初始化設計工具。</span><span class="sxs-lookup"><span data-stu-id="1362b-200">Initializes the designer with the specified component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1362b-201">呼叫這個方法是由設計工具主應用程式初始化設計工具。</span><span class="sxs-lookup"><span data-stu-id="1362b-201">This method is called by the designer host to initialize the designer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="InitializeExistingComponent">
      <MemberSignature Language="C#" Value="public override void InitializeExistingComponent (System.Collections.IDictionary defaultValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeExistingComponent(class System.Collections.IDictionary defaultValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.InitializeExistingComponent(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeExistingComponent (defaultValues As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeExistingComponent(System::Collections::IDictionary ^ defaultValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="defaultValues"><span data-ttu-id="1362b-202">要套用至屬性之預設值的名稱/值字典。</span><span class="sxs-lookup"><span data-stu-id="1362b-202">A name/value dictionary of default values to apply to properties.</span></span> <span data-ttu-id="1362b-203">如果沒有指定預設值，則可能為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-203">May be <see langword="null" /> if no default values are specified.</span></span></param>
        <summary><span data-ttu-id="1362b-204">重新初始化現有的元件。</span><span class="sxs-lookup"><span data-stu-id="1362b-204">Re-initializes an existing component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1362b-205"><xref:System.Windows.Forms.Design.ControlDesigner>類別會覆寫此方法以處理後的拖放的情況。</span><span class="sxs-lookup"><span data-stu-id="1362b-205">The <xref:System.Windows.Forms.Design.ControlDesigner> class overrides this method to handle after-drop cases.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeNewComponent">
      <MemberSignature Language="C#" Value="public override void InitializeNewComponent (System.Collections.IDictionary defaultValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeNewComponent(class System.Collections.IDictionary defaultValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.InitializeNewComponent(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeNewComponent (defaultValues As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeNewComponent(System::Collections::IDictionary ^ defaultValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="defaultValues"><span data-ttu-id="1362b-206">要套用至屬性之預設值的名稱/值字典。</span><span class="sxs-lookup"><span data-stu-id="1362b-206">A name/value dictionary of default values to apply to properties.</span></span> <span data-ttu-id="1362b-207">如果沒有指定預設值，則可能為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-207">May be <see langword="null" /> if no default values are specified.</span></span></param>
        <summary><span data-ttu-id="1362b-208">初始化新建立的元件。</span><span class="sxs-lookup"><span data-stu-id="1362b-208">Initializes a newly created component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1362b-209"><xref:System.Windows.Forms.Design.ControlDesigner>類別會覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="1362b-209">The <xref:System.Windows.Forms.Design.ControlDesigner> class overrides this method.</span></span> <span data-ttu-id="1362b-210">它會查看控制項的預設屬性，而且如果它是型別`string`，它會將這個屬性的值設定為元件的名稱。</span><span class="sxs-lookup"><span data-stu-id="1362b-210">It will look at the default property for the control and, if it is of type `string`, it will set this property's value to the name of the component.</span></span> <span data-ttu-id="1362b-211">它只會如果設計工具已設定使用此選項服務中的選項。</span><span class="sxs-lookup"><span data-stu-id="1362b-211">It only does this if the designer has been configured with this option in the options service.</span></span> <span data-ttu-id="1362b-212">這個方法也會將控制項連接至其父代，並將它放。</span><span class="sxs-lookup"><span data-stu-id="1362b-212">This method also connects the control to its parent and positions it.</span></span> <span data-ttu-id="1362b-213">如果您覆寫這個方法，您應該一律呼叫基底。</span><span class="sxs-lookup"><span data-stu-id="1362b-213">If you override this method, you should always call base.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="InternalControlDesigner">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Design.ControlDesigner InternalControlDesigner (int internalControlIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.Design.ControlDesigner InternalControlDesigner(int32 internalControlIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.InternalControlDesigner(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InternalControlDesigner (internalControlIndex As Integer) As ControlDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::Design::ControlDesigner ^ InternalControlDesigner(int internalControlIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.ControlDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="internalControlIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="internalControlIndex"><span data-ttu-id="1362b-214">用來選取內部控制項設計工具的指定索引。</span><span class="sxs-lookup"><span data-stu-id="1362b-214">A specified index to select the internal control designer.</span></span> <span data-ttu-id="1362b-215">這個索引是以零起始。</span><span class="sxs-lookup"><span data-stu-id="1362b-215">This index is zero-based.</span></span></param>
        <summary><span data-ttu-id="1362b-216">傳回 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 中含指定索引的內部控制項設計工具。</span><span class="sxs-lookup"><span data-stu-id="1362b-216">Returns the internal control designer with the specified index in the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span></span></summary>
        <returns><span data-ttu-id="1362b-217">位於指定索引的 <see cref="T:System.Windows.Forms.Design.ControlDesigner" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-217">A <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> at the specified index.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1362b-218">內部的控制項是控制項不是<xref:System.ComponentModel.IContainer.Components%2A>集合<xref:System.ComponentModel.Design.IDesignerHost.Container%2A>。</span><span class="sxs-lookup"><span data-stu-id="1362b-218">An internal control is a control that is not in the <xref:System.ComponentModel.IContainer.Components%2A> collection of the <xref:System.ComponentModel.Design.IDesignerHost.Container%2A>.</span></span> <span data-ttu-id="1362b-219"><xref:System.Windows.Forms.SplitterPanel> 是一個這類控制項的範例。</span><span class="sxs-lookup"><span data-stu-id="1362b-219"><xref:System.Windows.Forms.SplitterPanel> is an example of one such control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidPoint">
      <MemberSignature Language="C#" Value="protected static readonly System.Drawing.Point InvalidPoint;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly valuetype System.Drawing.Point InvalidPoint" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.Design.ControlDesigner.InvalidPoint" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly InvalidPoint As Point " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::Drawing::Point InvalidPoint;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1362b-220">定義表示無效 <see cref="T:System.Drawing.Point" /> 之值的區域 <see cref="T:System.Drawing.Point" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-220">Defines a local <see cref="T:System.Drawing.Point" /> that represents the values of an invalid <see cref="T:System.Drawing.Point" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1362b-221"><xref:System.Windows.Forms.Design.ControlDesigner.InvalidPoint> 具有<xref:System.Drawing.Point.X%2A>和<xref:System.Drawing.Point.Y%2A>屬性設定為整數資料類型的最小值。</span><span class="sxs-lookup"><span data-stu-id="1362b-221"><xref:System.Windows.Forms.Design.ControlDesigner.InvalidPoint> has an <xref:System.Drawing.Point.X%2A> and <xref:System.Drawing.Point.Y%2A> property set to the minimum value for the integer data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfInternalControlDesigners">
      <MemberSignature Language="C#" Value="public virtual int NumberOfInternalControlDesigners ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 NumberOfInternalControlDesigners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.NumberOfInternalControlDesigners" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NumberOfInternalControlDesigners () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int NumberOfInternalControlDesigners();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1362b-222">傳回 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 中內部控制項設計工具的數目。</span><span class="sxs-lookup"><span data-stu-id="1362b-222">Returns the number of internal control designers in the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span></span></summary>
        <returns><span data-ttu-id="1362b-223"><see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 中內部控制項設計工具的數目。</span><span class="sxs-lookup"><span data-stu-id="1362b-223">The number of internal control designers in the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1362b-224">內部的控制項是控制項不是<xref:System.ComponentModel.IContainer.Components%2A>集合<xref:System.ComponentModel.Design.IDesignerHost.Container%2A>。</span><span class="sxs-lookup"><span data-stu-id="1362b-224">An internal control is a control that is not in the <xref:System.ComponentModel.IContainer.Components%2A> collection of the <xref:System.ComponentModel.Design.IDesignerHost.Container%2A>.</span></span> <span data-ttu-id="1362b-225"><xref:System.Windows.Forms.SplitterPanel> 是一個這類控制項的範例。</span><span class="sxs-lookup"><span data-stu-id="1362b-225"><xref:System.Windows.Forms.SplitterPanel> is an example of one such control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenu">
      <MemberSignature Language="C#" Value="protected virtual void OnContextMenu (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextMenu(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnContextMenu(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextMenu (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextMenu(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1362b-226">X 座標，要在其上顯示內容功能表。</span><span class="sxs-lookup"><span data-stu-id="1362b-226">The x coordinate at which to display the context menu.</span></span></param>
        <param name="y"><span data-ttu-id="1362b-227">Y 座標，要在其上顯示內容功能表。</span><span class="sxs-lookup"><span data-stu-id="1362b-227">The y coordinate at which to display the context menu.</span></span></param>
        <summary><span data-ttu-id="1362b-228">顯示內容功能表，並且提供在內容功能表將要顯示時執行其他處理的機會。</span><span class="sxs-lookup"><span data-stu-id="1362b-228">Shows the context menu and provides an opportunity to perform additional processing when the context menu is about to be displayed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateHandle">
      <MemberSignature Language="C#" Value="protected virtual void OnCreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnCreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCreateHandle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1362b-229">提供在建立控制項控制代碼之後，立即執行其他處理的機會。</span><span class="sxs-lookup"><span data-stu-id="1362b-229">Provides an opportunity to perform additional processing immediately after the control handle has been created.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnDragComplete (System.Windows.Forms.DragEventArgs de);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragComplete(class System.Windows.Forms.DragEventArgs de) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragComplete (de As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragComplete(System::Windows::Forms::DragEventArgs ^ de);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="de" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="de"><span data-ttu-id="1362b-230">提供事件資料的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-230">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</span></span></param>
        <summary><span data-ttu-id="1362b-231">接收呼叫以清除拖放作業。</span><span class="sxs-lookup"><span data-stu-id="1362b-231">Receives a call to clean up a drag-and-drop operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnDragDrop (System.Windows.Forms.DragEventArgs de);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragDrop(class System.Windows.Forms.DragEventArgs de) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragDrop (de As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragDrop(System::Windows::Forms::DragEventArgs ^ de);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="de" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="de"><span data-ttu-id="1362b-232">提供事件資料的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-232">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</span></span></param>
        <summary><span data-ttu-id="1362b-233">在拖放物件放在控制項設計工具檢視上時接收呼叫。</span><span class="sxs-lookup"><span data-stu-id="1362b-233">Receives a call when a drag-and-drop object is dropped onto the control designer view.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnDragEnter (System.Windows.Forms.DragEventArgs de);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.Forms.DragEventArgs de) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragEnter (de As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragEnter(System::Windows::Forms::DragEventArgs ^ de);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="de" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="de"><span data-ttu-id="1362b-234">提供事件資料的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-234">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</span></span></param>
        <summary><span data-ttu-id="1362b-235">在拖放作業進入控制項設計工具檢視時接收呼叫。</span><span class="sxs-lookup"><span data-stu-id="1362b-235">Receives a call when a drag-and-drop operation enters the control designer view.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnDragLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnDragLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragLeave(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1362b-236">提供事件資料的 <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-236">An <see cref="T:System.EventArgs" /> that provides data for the event.</span></span></param>
        <summary><span data-ttu-id="1362b-237">在拖放作業離開控制項設計工具檢視時接收呼叫。</span><span class="sxs-lookup"><span data-stu-id="1362b-237">Receives a call when a drag-and-drop operation leaves the control designer view.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnDragOver (System.Windows.Forms.DragEventArgs de);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragOver(class System.Windows.Forms.DragEventArgs de) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragOver (de As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragOver(System::Windows::Forms::DragEventArgs ^ de);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="de" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="de"><span data-ttu-id="1362b-238">提供事件資料的 <see cref="T:System.Windows.Forms.DragEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-238">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</span></span></param>
        <summary><span data-ttu-id="1362b-239">在拖放物件拖曳至控制項設計工具檢視上時接收呼叫。</span><span class="sxs-lookup"><span data-stu-id="1362b-239">Receives a call when a drag-and-drop object is dragged over the control designer view.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnGiveFeedback (System.Windows.Forms.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.Forms.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGiveFeedback(System::Windows::Forms::GiveFeedbackEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1362b-240">提供事件資料的 <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-240">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> that provides data for the event.</span></span></param>
        <summary><span data-ttu-id="1362b-241">在拖放作業進行中時接收呼叫，以提供拖曳作業進行時以滑鼠位置為基礎的視覺化提示。</span><span class="sxs-lookup"><span data-stu-id="1362b-241">Receives a call when a drag-and-drop operation is in progress to provide visual cues based on the location of the mouse while a drag operation is in progress.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1362b-242">OLE 拖放到事件發生時，設計工具主應用程式會呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="1362b-242">The designer host calls this method when an OLE drag event occurs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragBegin">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDragBegin (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDragBegin(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDragBegin (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDragBegin(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1362b-243">螢幕座標中滑鼠的 x 位置。</span><span class="sxs-lookup"><span data-stu-id="1362b-243">The x position of the mouse in screen coordinates.</span></span></param>
        <param name="y"><span data-ttu-id="1362b-244">螢幕座標中滑鼠的 y 位置。</span><span class="sxs-lookup"><span data-stu-id="1362b-244">The y position of the mouse in screen coordinates.</span></span></param>
        <summary><span data-ttu-id="1362b-245">接收呼叫以回應在元件上方按住滑鼠左鍵的動作。</span><span class="sxs-lookup"><span data-stu-id="1362b-245">Receives a call in response to the left mouse button being pressed and held while over the component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1362b-246">這個方法會在拖放操作開始呼叫。</span><span class="sxs-lookup"><span data-stu-id="1362b-246">This method is called at the start of a drag-and-drop operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1362b-247">您可以將點傳遞至螢幕座標中<xref:System.Windows.Forms.Control.PointToClient%2A>方法<xref:System.Windows.Forms.Control>類別來取得控制項相對於左上角之點的座標。</span><span class="sxs-lookup"><span data-stu-id="1362b-247">You can pass a point in screen coordinates to the <xref:System.Windows.Forms.Control.PointToClient%2A> method of the <xref:System.Windows.Forms.Control> class to obtain the coordinates of the point relative to the upper-left corner of the control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragEnd">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDragEnd (bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDragEnd(bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragEnd(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDragEnd (cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDragEnd(bool cancel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancel">
          <span data-ttu-id="1362b-248"><see langword="true" /> 會取消拖曳；<see langword="false" /> 則會認可拖曳。</span><span class="sxs-lookup"><span data-stu-id="1362b-248"><see langword="true" /> to cancel the drag; <see langword="false" /> to commit it.</span></span></param>
        <summary><span data-ttu-id="1362b-249">在拖放作業結束時接收呼叫，以完成或取消作業。</span><span class="sxs-lookup"><span data-stu-id="1362b-249">Receives a call at the end of a drag-and-drop operation to complete or cancel the operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDragMove (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDragMove(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragMove(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDragMove (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDragMove(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="1362b-250">螢幕座標中滑鼠的 x 位置。</span><span class="sxs-lookup"><span data-stu-id="1362b-250">The x position of the mouse in screen coordinates.</span></span></param>
        <param name="y"><span data-ttu-id="1362b-251">螢幕座標中滑鼠的 y 位置。</span><span class="sxs-lookup"><span data-stu-id="1362b-251">The y position of the mouse in screen coordinates.</span></span></param>
        <summary><span data-ttu-id="1362b-252">在拖放作業期間每次移動滑鼠時接收呼叫。</span><span class="sxs-lookup"><span data-stu-id="1362b-252">Receives a call for each movement of the mouse during a drag-and-drop operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1362b-253">您可以將點傳遞至螢幕座標中<xref:System.Windows.Forms.Control.PointToClient%2A>方法<xref:System.Windows.Forms.Control>類別來取得控制項相對於左上角之點的座標。</span><span class="sxs-lookup"><span data-stu-id="1362b-253">You can pass a point in screen coordinates to the <xref:System.Windows.Forms.Control.PointToClient%2A> method of the <xref:System.Windows.Forms.Control> class to obtain the coordinates of the point relative to the upper-left corner of the control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseEnter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseEnter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseEnter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseEnter ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseEnter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1362b-254">在滑鼠首次進入控制項時接收呼叫。</span><span class="sxs-lookup"><span data-stu-id="1362b-254">Receives a call when the mouse first enters the control.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseHover ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseHover() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseHover" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseHover ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseHover();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1362b-255">在滑鼠停留在控制項上方後接收呼叫。</span><span class="sxs-lookup"><span data-stu-id="1362b-255">Receives a call after the mouse hovers over the control.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeave ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeave() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseLeave" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeave ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeave();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1362b-256">在滑鼠首次進入控制項時接收呼叫。</span><span class="sxs-lookup"><span data-stu-id="1362b-256">Receives a call when the mouse first enters the control.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaintAdornments">
      <MemberSignature Language="C#" Value="protected virtual void OnPaintAdornments (System.Windows.Forms.PaintEventArgs pe);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaintAdornments(class System.Windows.Forms.PaintEventArgs pe) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPaintAdornments (pe As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPaintAdornments(System::Windows::Forms::PaintEventArgs ^ pe);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pe" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="pe"><span data-ttu-id="1362b-257"><see cref="T:System.Windows.Forms.PaintEventArgs" />，設計工具可用於在控制項上繪製。</span><span class="sxs-lookup"><span data-stu-id="1362b-257">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> the designer can use to draw on the control.</span></span></param>
        <summary><span data-ttu-id="1362b-258">在設計工具正在管理的控制項已繪製其介面時接收呼叫，讓設計工具可以在控制項之上繪製任何其他的裝飾。</span><span class="sxs-lookup"><span data-stu-id="1362b-258">Receives a call when the control that the designer is managing has painted its surface so the designer can paint any additional adornments on top of the control.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSetComponentDefaults">
      <MemberSignature Language="C#" Value="public override void OnSetComponentDefaults ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnSetComponentDefaults() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnSetComponentDefaults" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnSetComponentDefaults ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnSetComponentDefaults();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use InitializeNewComponent instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1362b-259">當初始化設計工具時呼叫。</span><span class="sxs-lookup"><span data-stu-id="1362b-259">Called when the designer is intialized.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSetCursor">
      <MemberSignature Language="C#" Value="protected virtual void OnSetCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSetCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnSetCursor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSetCursor ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSetCursor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1362b-260">每次必須設定游標時就會接收呼叫。</span><span class="sxs-lookup"><span data-stu-id="1362b-260">Receives a call each time the cursor needs to be set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1362b-261">這個方法會處理重新導向和設定資料指標事件的處理。</span><span class="sxs-lookup"><span data-stu-id="1362b-261">This method handles redirection and handling of the set cursor event.</span></span> <span data-ttu-id="1362b-262">如果工具箱服務選取工具，此方法將允許工具箱服務來設定資料指標。</span><span class="sxs-lookup"><span data-stu-id="1362b-262">If the toolbox service has a tool selected, this method will allow the toolbox service to set the cursor.</span></span> <span data-ttu-id="1362b-263">如果選取 UI 服務有鎖定的選取範圍，或沒有在控制項上位置的屬性，將會設定預設的箭頭游標。</span><span class="sxs-lookup"><span data-stu-id="1362b-263">If the selection UI service has a locked selection, or if there is no location property on the control, the default arrow cursor will be set.</span></span> <span data-ttu-id="1362b-264">如果使用者正在拖曳的元件，就會設定十字形狀的游標。</span><span class="sxs-lookup"><span data-stu-id="1362b-264">If a user is dragging a component, the crosshair cursor will be set.</span></span> <span data-ttu-id="1362b-265">否則，四個方向的箭頭游標會設定指出元件可以按下並移。</span><span class="sxs-lookup"><span data-stu-id="1362b-265">Otherwise, a four headed arrow cursor will be set to indicate that the component can be clicked and moved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentComponent">
      <MemberSignature Language="C#" Value="protected override System.ComponentModel.IComponent ParentComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent ParentComponent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.ParentComponent" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ParentComponent As IComponent" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::ComponentModel::IComponent ^ ParentComponent { System::ComponentModel::IComponent ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1362b-266">取得 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 的父元件。</span><span class="sxs-lookup"><span data-stu-id="1362b-266">Gets the parent component for the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span></span></summary>
        <value><span data-ttu-id="1362b-267"><see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 的父元件；如果沒有父元件，則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-267">The parent component for the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />; otherwise, <see langword="null" /> if there is no parent component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1362b-268">預設實作只會檢查以查看正在設計的元件是一個控制項，如果是，<xref:System.Windows.Forms.Design.ControlDesigner.ParentComponent%2A>傳回其父代。</span><span class="sxs-lookup"><span data-stu-id="1362b-268">The default implementation simply checks to see if the component being designed is a control and if it is, <xref:System.Windows.Forms.Design.ControlDesigner.ParentComponent%2A> returns its parent.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticipatesWithSnapLines">
      <MemberSignature Language="C#" Value="public virtual bool ParticipatesWithSnapLines { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ParticipatesWithSnapLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.ParticipatesWithSnapLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ParticipatesWithSnapLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ParticipatesWithSnapLines { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1362b-269">取得值，指出 <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 是否可以在拖曳作業期間採用以對齊線為準的對齊方式。</span><span class="sxs-lookup"><span data-stu-id="1362b-269">Gets a value indicating whether the <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> will allow snapline alignment during a drag operation.</span></span></summary>
        <value>
          <span data-ttu-id="1362b-270">如果當主要拖曳控制項位於這個設計工具上方時，<see cref="T:System.Windows.Forms.Design.ControlDesigner" /> 允許在拖曳作業期間採用以對齊線為準的對齊方式，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-270"><see langword="true" /> if the <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> will allow snapline alignment during a drag operation when the primary drag control is over this designer; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="1362b-271">預設的實作 (Implementation) 一定會傳回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-271">The default implementation always returns <see langword="true" />.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected override void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="1362b-272"><see cref="T:System.Collections.IDictionary" />，包含元件的類別屬性。</span><span class="sxs-lookup"><span data-stu-id="1362b-272">An <see cref="T:System.Collections.IDictionary" /> containing the properties for the class of the component.</span></span></param>
        <summary><span data-ttu-id="1362b-273">調整元件透過 <see cref="T:System.ComponentModel.TypeDescriptor" /> 公開的屬性集。</span><span class="sxs-lookup"><span data-stu-id="1362b-273">Adjusts the set of properties the component exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1362b-274">這<xref:System.ComponentModel.Design.IDesignerFilter>介面方法的覆寫設計階段將一組屬性加入至這個設計工具元件。</span><span class="sxs-lookup"><span data-stu-id="1362b-274">This <xref:System.ComponentModel.Design.IDesignerFilter> interface method override adds a set of properties to this designer's component at design time.</span></span> <span data-ttu-id="1362b-275">這個方法會加入下列可瀏覽屬性： `Visible`， `Enabled`， `ContextMenu`， `AllowDrop`， `Location`， `Name`， `Controls`，和`Locked`。</span><span class="sxs-lookup"><span data-stu-id="1362b-275">This method adds the following browsable properties: `Visible`, `Enabled`, `ContextMenu`, `AllowDrop`, `Location`, `Name`, `Controls`, and `Locked`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="SelectionRules">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Design.SelectionRules SelectionRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Design.SelectionRules SelectionRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.SelectionRules" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectionRules As SelectionRules" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Design::SelectionRules SelectionRules { System::Windows::Forms::Design::SelectionRules get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.SelectionRules</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1362b-276">取得選取規則，指出元件的移動能力。</span><span class="sxs-lookup"><span data-stu-id="1362b-276">Gets the selection rules that indicate the movement capabilities of a component.</span></span></summary>
        <value><span data-ttu-id="1362b-277"><see cref="T:System.Windows.Forms.Design.SelectionRules" /> 值的位元組合。</span><span class="sxs-lookup"><span data-stu-id="1362b-277">A bitwise combination of <see cref="T:System.Windows.Forms.Design.SelectionRules" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1362b-278">如果沒有設計工具會提供規則的元件，元件不會收到任何 UI 服務。</span><span class="sxs-lookup"><span data-stu-id="1362b-278">If no designer provides rules for a component, the component will not get any UI services.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.SelectionRules" />
      </Docs>
    </Member>
    <Member MemberName="SnapLines">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IList SnapLines { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList SnapLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.SnapLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SnapLines As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::IList ^ SnapLines { System::Collections::IList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1362b-279">取得 <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 物件的清單，表示此控制項的重要對齊點。</span><span class="sxs-lookup"><span data-stu-id="1362b-279">Gets a list of <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> objects representing significant alignment points for this control.</span></span></summary>
        <value><span data-ttu-id="1362b-280"><see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> 物件的清單，表示此控制項的重要對齊點。</span><span class="sxs-lookup"><span data-stu-id="1362b-280">A list of <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> objects representing significant alignment points for this control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1362b-281">您可以使用提供<xref:System.Windows.Forms.Design.Behavior.SnapLine>來協助放置控制項的設計介面上的物件。</span><span class="sxs-lookup"><span data-stu-id="1362b-281">You can use the offered <xref:System.Windows.Forms.Design.Behavior.SnapLine> objects to assist in positioning the control on a design surface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhookChildControls">
      <MemberSignature Language="C#" Value="protected void UnhookChildControls (System.Windows.Forms.Control firstChild);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UnhookChildControls(class System.Windows.Forms.Control firstChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.UnhookChildControls(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UnhookChildControls (firstChild As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UnhookChildControls(System::Windows::Forms::Control ^ firstChild);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstChild" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="firstChild"><span data-ttu-id="1362b-282">要處理的第一個子 <see cref="T:System.Windows.Forms.Control" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-282">The first child <see cref="T:System.Windows.Forms.Control" /> to process.</span></span> <span data-ttu-id="1362b-283">這個方法會為控制項的子系遞迴地呼叫本身。</span><span class="sxs-lookup"><span data-stu-id="1362b-283">This method may recursively call itself for children of the control.</span></span></param>
        <summary><span data-ttu-id="1362b-284">將指定的控制項的子系訊息傳送至每一個控制項，而非傳送至父設計工具。</span><span class="sxs-lookup"><span data-stu-id="1362b-284">Routes messages for the children of the specified control to each control rather than to a parent designer.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected virtual void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WndProc(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="1362b-285">要處理的 <see cref="T:System.Windows.Forms.Message" />。</span><span class="sxs-lookup"><span data-stu-id="1362b-285">The <see cref="T:System.Windows.Forms.Message" /> to process.</span></span></param>
        <summary><span data-ttu-id="1362b-286">處理 Windows 訊息，並選擇性地傳送它們至控制項。</span><span class="sxs-lookup"><span data-stu-id="1362b-286">Processes Windows messages and optionally routes them to the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1362b-287">這個方法是針對每個控制項通常會接收的訊息呼叫。</span><span class="sxs-lookup"><span data-stu-id="1362b-287">This method is called for each message the control would usually receive.</span></span> <span data-ttu-id="1362b-288">這可讓設計工具，然後再選擇性地將它們傳送至控制項前置處理過訊息。</span><span class="sxs-lookup"><span data-stu-id="1362b-288">This allows the designer to preprocess messages before optionally routing them to the control.</span></span>  
  
 <span data-ttu-id="1362b-289">若要將訊息傳送至控制項的<xref:System.Windows.Forms.Control.WndProc%2A?displayProperty=nameWithType>方法，請呼叫<xref:System.Windows.Forms.Design.ControlDesigner.WndProc%2A>控制項的設計工具上。</span><span class="sxs-lookup"><span data-stu-id="1362b-289">To send the message to the control’s <xref:System.Windows.Forms.Control.WndProc%2A?displayProperty=nameWithType> method, call <xref:System.Windows.Forms.Design.ControlDesigner.WndProc%2A> on the control's designer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1362b-290">在設計工具會篩選訊息，因此不會傳送一些訊息至控制項。</span><span class="sxs-lookup"><span data-stu-id="1362b-290">The designer filters messages, so some messages will not be sent to the control.</span></span> <span data-ttu-id="1362b-291">例如，在設計工具會攔截滑鼠訊息。</span><span class="sxs-lookup"><span data-stu-id="1362b-291">For example, mouse messages are intercepted by the designer.</span></span> <span data-ttu-id="1362b-292">如果這不是您想要的行為，呼叫<xref:System.Windows.Forms.Design.ControlDesigner.DefWndProc%2A>改為。</span><span class="sxs-lookup"><span data-stu-id="1362b-292">If this is not the behavior you want, call <xref:System.Windows.Forms.Design.ControlDesigner.DefWndProc%2A> instead.</span></span>  
  
 <span data-ttu-id="1362b-293">傳遞`m`做為參數。</span><span class="sxs-lookup"><span data-stu-id="1362b-293">Pass `m` as a parameter.</span></span> <span data-ttu-id="1362b-294">（選擇性） 您可以改變或建立新<xref:System.Windows.Forms.Message?displayProperty=nameWithType>傳遞至控制項的方法。</span><span class="sxs-lookup"><span data-stu-id="1362b-294">Optionally, you can alter or create a new <xref:System.Windows.Forms.Message?displayProperty=nameWithType> to pass to the control's method.</span></span>  
  
 <span data-ttu-id="1362b-295">下表顯示訊息的流程。</span><span class="sxs-lookup"><span data-stu-id="1362b-295">The following table shows the flow of messages.</span></span>  
  
|<span data-ttu-id="1362b-296">不使用設計工具</span><span class="sxs-lookup"><span data-stu-id="1362b-296">Without a designer</span></span>|<span data-ttu-id="1362b-297">與設計工具</span><span class="sxs-lookup"><span data-stu-id="1362b-297">With a designer</span></span>|  
|------------------------|---------------------|  
|<span data-ttu-id="1362b-298">USER32</span><span class="sxs-lookup"><span data-stu-id="1362b-298">USER32</span></span><br /><br /> <xref:System.Windows.Forms.Control.WndProc%2A?displayProperty=nameWithType><br /><br /> <xref:System.Windows.Forms.Control.DefWndProc%2A?displayProperty=nameWithType><br /><br /> <span data-ttu-id="1362b-299">USER32</span><span class="sxs-lookup"><span data-stu-id="1362b-299">USER32</span></span>|<span data-ttu-id="1362b-300">USER32</span><span class="sxs-lookup"><span data-stu-id="1362b-300">USER32</span></span><br /><br /> <span data-ttu-id="1362b-301">`Control.Designer.` <xref:System.Windows.Forms.Design.ControlDesigner.WndProc%2A></span><span class="sxs-lookup"><span data-stu-id="1362b-301">`Control.Designer.` <xref:System.Windows.Forms.Design.ControlDesigner.WndProc%2A></span></span><br /><br /> <xref:System.Windows.Forms.Design.ControlDesigner.DefWndProc%2A><br /><br /> <xref:System.Windows.Forms.Control.WndProc%2A?displayProperty=nameWithType><br /><br /> <xref:System.Windows.Forms.Control.DefWndProc%2A?displayProperty=nameWithType><br /><br /> <span data-ttu-id="1362b-302">USER32</span><span class="sxs-lookup"><span data-stu-id="1362b-302">USER32</span></span>|  
  
 <span data-ttu-id="1362b-303">在設計工具會攔截訊息來取代<xref:System.Windows.Forms.Control.WindowTarget%2A?displayProperty=nameWithType>控制項上的屬性。</span><span class="sxs-lookup"><span data-stu-id="1362b-303">The designer intercepts messages by replacing the <xref:System.Windows.Forms.Control.WindowTarget%2A?displayProperty=nameWithType> property on the control.</span></span> <span data-ttu-id="1362b-304">通常，<xref:System.Windows.Forms.Control.WindowTarget%2A>指向<xref:System.Windows.Forms.NativeWindow>控制項中包含。</span><span class="sxs-lookup"><span data-stu-id="1362b-304">Usually, <xref:System.Windows.Forms.Control.WindowTarget%2A> points to the <xref:System.Windows.Forms.NativeWindow> contained within the control.</span></span> <span data-ttu-id="1362b-305">在設計階段期間在設計工具會取代它自己的視窗目標，這和快取的原始值。</span><span class="sxs-lookup"><span data-stu-id="1362b-305">During design time, the designer replaces this with its own window target, and caches the original value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Design.ControlDesigner.DefWndProc(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>