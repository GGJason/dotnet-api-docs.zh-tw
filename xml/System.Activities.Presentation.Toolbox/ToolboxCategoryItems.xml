<Type Name="ToolboxCategoryItems" FullName="System.Activities.Presentation.Toolbox.ToolboxCategoryItems">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3df8bf4c371c9a28818f98629b80ebadbd6a2f85" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39772222" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ToolboxCategoryItems : System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;, System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ToolboxCategoryItems extends System.Object implements class System.Collections.Generic.ICollection`1&lt;class System.Activities.Presentation.Toolbox.ToolboxCategory&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Toolbox.ToolboxCategory&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ToolboxCategoryItems&#xA;Implements ICollection(Of ToolboxCategory), IEnumerable(Of ToolboxCategory), IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolboxCategoryItems sealed : System::Collections::Generic::ICollection&lt;System::Activities::Presentation::Toolbox::ToolboxCategory ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Toolbox::ToolboxCategory ^&gt;, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ToolboxCategoryItems = class&#xA;    interface ICollection&lt;ToolboxCategory&gt;&#xA;    interface seq&lt;ToolboxCategory&gt;&#xA;    interface IEnumerable&#xA;    interface IList&#xA;    interface ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="9dd87-101">
        <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> 物件的集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9dd87-101">A collection of <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> objects.</span>
      </span>
      <span data-ttu-id="9dd87-102">此類別為 <see langword="sealed" />，因此不能被繼承。在 Visual Studio 2010 之外重新裝載 Windows 工作流程設計工具時，此類別提供對工具箱項目分類的支援。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9dd87-102">This class is <see langword="sealed" /> and so cannot be inherited.This class provides support for the categorization of toolbox items when re-hosting the Windows Workflow Designer outside of Visual Studio 2010.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxCategoryItems ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolboxCategoryItems();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9dd87-103">建立 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 類別的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-103">Creates an instance of the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Activities.Presentation.Toolbox.ToolboxCategory item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Activities.Presentation.Toolbox.ToolboxCategory item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Add(System.Activities.Presentation.Toolbox.ToolboxCategory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As ToolboxCategory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Activities::Presentation::Toolbox::ToolboxCategory ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; unit&#xA;override this.Add : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; unit" Usage="toolboxCategoryItems.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Activities.Presentation.Toolbox.ToolboxCategory" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="9dd87-104">要加入至集合的 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-104">The <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9dd87-105">將指定的工具箱分類加入至工具箱分類項目集合結尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-105">Adds a specified toolbox category to the end of the toolbox category items collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9dd87-106">
            <paramref name="item" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-106">The <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="toolboxCategoryItems.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9dd87-107">從 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 集合中移除所有項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-107">Removes all the items from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Activities.Presentation.Toolbox.ToolboxCategory item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Activities.Presentation.Toolbox.ToolboxCategory item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Contains(System.Activities.Presentation.Toolbox.ToolboxCategory)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As ToolboxCategory) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Activities::Presentation::Toolbox::ToolboxCategory ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; bool&#xA;override this.Contains : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; bool" Usage="toolboxCategoryItems.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Activities.Presentation.Toolbox.ToolboxCategory" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="9dd87-108">要查閱的工具箱分類項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-108">The toolbox category item to look for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9dd87-109">決定 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 集合是否包含特定的工具箱分類項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-109">Determines whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection contains a specific toolbox category item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9dd87-110">如果在 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 中找到 <paramref name="item" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-110">
              <see langword="true" /> if the <paramref name="item" /> is found in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9dd87-111">
            <paramref name="item" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-111">The <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Activities.Presentation.Toolbox.ToolboxCategory[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Activities.Presentation.Toolbox.ToolboxCategory[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.CopyTo(System.Activities.Presentation.Toolbox.ToolboxCategory[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As ToolboxCategory(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Activities::Presentation::Toolbox::ToolboxCategory ^&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Activities.Presentation.Toolbox.ToolboxCategory[] * int -&gt; unit&#xA;override this.CopyTo : System.Activities.Presentation.Toolbox.ToolboxCategory[] * int -&gt; unit" Usage="toolboxCategoryItems.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Activities.Presentation.Toolbox.ToolboxCategory[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="9dd87-112">一維 <see cref="T:System.Array" />，是從 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 集合複製元素之目的端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-112">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span>
          </span>
          <span data-ttu-id="9dd87-113">
            <see cref="T:System.Array" /> 必須有以零為起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-113">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="9dd87-114">目標陣列以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-114">The zero-based index of the target array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9dd87-115">從目標 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 的指定之索引開始，將整個 <see cref="T:System.Array" /> 集合複製至相容的一維 <see cref="T:System.Array" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-115">Copies the entire <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd87-116">這些元素會以列舉值逐一查看 <xref:System.Array> 集合的相同順序複製到 <xref:System.Activities.Presentation.Toolbox.ToolboxCategory>。</span><span class="sxs-lookup"><span data-stu-id="9dd87-116">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Activities.Presentation.Toolbox.ToolboxCategory> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9dd87-117">
            <paramref name="array" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-117">The <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9dd87-118">取得 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 中所含之工具的數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-118">Gets the number of tools contained in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9dd87-119">
            <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 中所包含的項目數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-119">The number of elements contained in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd87-120"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 實作<xref:System.Collections.ICollection>介面。</span><span class="sxs-lookup"><span data-stu-id="9dd87-120"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements  the <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Activities.Presentation.Toolbox.ToolboxCategory&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of ToolboxCategory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Activities::Presentation::Toolbox::ToolboxCategory ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;" Usage="toolboxCategoryItems.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9dd87-121">傳回逐一查看 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 集合的列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-121">Returns an enumerator that iterates through the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9dd87-122">
            <see cref="T:System.Collections.Generic.IEnumerator`1" /> 的 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-122">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd87-123">列舉值可用於讀取集合中的資料，但無法用於修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="9dd87-123">Enumerators can be used to read the data in a collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="9dd87-124">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="9dd87-124">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="9dd87-125">在這個位置上，<xref:System.Collections.Generic.IEnumerator%601.Current> 並未定義。</span><span class="sxs-lookup"><span data-stu-id="9dd87-125">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current> is undefined.</span></span> <span data-ttu-id="9dd87-126">因此，在讀取 <xref:System.Collections.IEnumerator.MoveNext> 的值之前，必須呼叫 <xref:System.Collections.Generic.IEnumerator%601.Current> 以將列舉值前移至集合的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="9dd87-126">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current>.</span></span> <span data-ttu-id="9dd87-127">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="9dd87-127">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="9dd87-128">如果對集合進行變更 (例如加入、修改或刪除元素)，列舉值將不再有效，而且其行為會變成未定義狀態。</span><span class="sxs-lookup"><span data-stu-id="9dd87-128">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is no longer valid and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="9dd87-129">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="9dd87-129">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Activities.Presentation.Toolbox.ToolboxCategoryItems.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9dd87-130">取得值，這個值表示 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 是否為唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-130">Gets a value that indicates whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9dd87-131">如果 <see langword="true" /> 是唯讀，則為 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-131">
              <see langword="true" /> if the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd87-132"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 會實作 <xref:System.Collections.IList> 介面。</span><span class="sxs-lookup"><span data-stu-id="9dd87-132"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="9dd87-133">唯讀的集合不允許在集合建立後增加、移除或修改項目。</span><span class="sxs-lookup"><span data-stu-id="9dd87-133">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Toolbox.ToolboxCategory this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Toolbox.ToolboxCategory Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As ToolboxCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::Toolbox::ToolboxCategory ^ default[int] { System::Activities::Presentation::Toolbox::ToolboxCategory ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Activities.Presentation.Toolbox.ToolboxCategory" Usage="System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Toolbox.ToolboxCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="9dd87-134">要取得之工具箱分類項目以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-134">The zero-based index of the toolbox category item to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9dd87-135">取得位於指定之索引的工具箱分類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-135">Gets the toolbox category at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9dd87-136">位於指定之索引的 <see cref="T:System.Object" /> 工具箱分類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-136">The toolbox category <see cref="T:System.Object" /> at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd87-137"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 會實作 <xref:System.Collections.IList> 介面。</span><span class="sxs-lookup"><span data-stu-id="9dd87-137"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="9dd87-138">這個屬性可以使用下列語法提供存取集合中特定元素的能力：`myCollection[index]`。</span><span class="sxs-lookup"><span data-stu-id="9dd87-138">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Activities.Presentation.Toolbox.ToolboxCategory item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Activities.Presentation.Toolbox.ToolboxCategory item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Remove(System.Activities.Presentation.Toolbox.ToolboxCategory)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As ToolboxCategory) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Activities::Presentation::Toolbox::ToolboxCategory ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; bool&#xA;override this.Remove : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; bool" Usage="toolboxCategoryItems.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Activities.Presentation.Toolbox.ToolboxCategory" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="9dd87-139">要移除的 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-139">The <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9dd87-140">從 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 中移除第一個出現的特定工具箱分類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-140">Removes the first occurrence of a specific toolbox category from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9dd87-141">如果在集合中找到此項目後從中移除，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-141">
              <see langword="true" /> if the item is found and removed from the collection; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9dd87-142">如果找不到指定的 <paramref name="item" />，則這個方法會傳回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-142">This method returns <see langword="false" /> if the <paramref name="item" /> specified is not found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="9dd87-143">一維 <see cref="T:System.Array" />，是從 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 集合複製元素之目的端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-143">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span>
          </span>
          <span data-ttu-id="9dd87-144">
            <see cref="T:System.Array" /> 必須有以零為起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-144">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9dd87-145">目標陣列以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-145">The zero-based index of the target array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9dd87-146">從目標 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 的指定之索引開始，將整個 <see cref="T:System.Array" /> 集合複製至相容的一維 <see cref="T:System.Array" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-146">Copies the entire <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd87-147">這些元素會以列舉值逐一查看 <xref:System.Array> 集合的相同順序複製到 <xref:System.Activities.Presentation.Toolbox.ToolboxCategory>。</span><span class="sxs-lookup"><span data-stu-id="9dd87-147">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Activities.Presentation.Toolbox.ToolboxCategory> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9dd87-148">
            <paramref name="array" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-148">The <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9dd87-149">取得 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 集合中所含之工具箱分類的數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-149">Gets the number of toolbox categories contained in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9dd87-150">
            <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 集合中所含之項目的數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-150">The number of items contained in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd87-151"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 會實作 <xref:System.Collections.ICollection> 介面。</span><span class="sxs-lookup"><span data-stu-id="9dd87-151"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9dd87-152">取得值，這個值會指出 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 的存取是否同步 (具備安全執行緒)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-152">Gets a value that indicates whether access to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9dd87-153">如果 <see langword="true" /> 的存取為同步 (安全執行緒)，則為 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-153">
              <see langword="true" /> if access to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd87-154"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 會實作 <xref:System.Collections.ICollection> 介面。</span><span class="sxs-lookup"><span data-stu-id="9dd87-154"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.ICollection> interface.</span></span> <span data-ttu-id="9dd87-155"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory.System%23Collections%23ICollection%23SyncRoot%2A> 屬性會傳回物件，這個物件可用來同步處理對 <xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 的存取。</span><span class="sxs-lookup"><span data-stu-id="9dd87-155">The <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.System%23Collections%23ICollection%23SyncRoot%2A> property returns an object, which can be used to synchronize access to the <xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9dd87-156">取得可用以同步存取 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-156">Gets an object that can be used to synchronize access to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9dd87-157">可用以同步存取 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-157">An object that can be used to synchronize access to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd87-158"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 會實作 <xref:System.Collections.ICollection> 介面。</span><span class="sxs-lookup"><span data-stu-id="9dd87-158"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9dd87-159">傳回逐一查看 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 集合的列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-159">Returns an enumerator that iterates through the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9dd87-160">
            <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-160">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd87-161">列舉值可用於讀取集合中的資料，但無法用於修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="9dd87-161">Enumerators can be used to read the data in a collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="9dd87-162">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="9dd87-162">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="9dd87-163">在這個位置上，<xref:System.Collections.Generic.IEnumerator%601.Current> 並未定義。</span><span class="sxs-lookup"><span data-stu-id="9dd87-163">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current> is undefined.</span></span> <span data-ttu-id="9dd87-164">因此，在讀取 <xref:System.Collections.IEnumerator.MoveNext> 的值之前，必須呼叫 <xref:System.Collections.Generic.IEnumerator%601.Current> 以將列舉值前移至集合的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="9dd87-164">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current>.</span></span> <span data-ttu-id="9dd87-165">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="9dd87-165">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="9dd87-166">如果對集合進行變更 (例如加入、修改或刪除元素)，列舉值將不再有效，而且其行為會變成未定義狀態。</span><span class="sxs-lookup"><span data-stu-id="9dd87-166">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is no longer valid and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="9dd87-167">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="9dd87-167">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9dd87-168">插入新元素的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-168">The position into which the new element is inserted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9dd87-169">將工具加入至 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-169">Adds a tool to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9dd87-170">要加入至集合之工具以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-170">The zero-based index of the tool added to the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd87-171"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 會實作 <xref:System.Collections.IList> 介面。</span><span class="sxs-lookup"><span data-stu-id="9dd87-171"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9dd87-172">
            <paramref name="value" /> 是無法指派給集合所實作之 <see cref="T:System.Collections.IList" /> 的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-172">The <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" /> implemented by the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9dd87-173">移除 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 中的所有工具。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-173">Removes all the tools from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd87-174"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 會實作 <xref:System.Collections.IList> 介面。</span><span class="sxs-lookup"><span data-stu-id="9dd87-174"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9dd87-175">要在集合中尋找之工具 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-175">The tool <see cref="T:System.Object" /> to locate in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9dd87-176">判斷 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 是否包含特定的工具。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-176">Determines whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> contains a specific tool.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9dd87-177">如果在 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 中找到 <paramref name="value" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-177">
              <see langword="true" /> if the <paramref name="value" /> is found in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd87-178"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 會實作 <xref:System.Collections.IList> 介面。</span><span class="sxs-lookup"><span data-stu-id="9dd87-178"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9dd87-179">
            <paramref name="value" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-179">The <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9dd87-180">要在 <see cref="T:System.Collections.IList" /> 中尋找的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-180">The object to locate in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9dd87-181">判斷 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 中特定工具的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-181">Determines the index of a specific tool in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9dd87-182">如果可在清單中找到則為 <paramref name="value" /> 的索引，否則為 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-182">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd87-183"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 會實作 <xref:System.Collections.IList> 介面。</span><span class="sxs-lookup"><span data-stu-id="9dd87-183"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9dd87-184">
            <paramref name="value" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-184">The <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="9dd87-185">應該插入 <c>value</c> 之以零啟始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-185">The zero-based index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="9dd87-186">已插入集合中的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-186">The <see cref="T:System.Object" /> inserted into the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9dd87-187">將工具箱分類插入 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 集合中的指定索引處。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-187">Inserts a toolbox category into the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd87-188"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 會實作 <xref:System.Collections.IList> 介面。</span><span class="sxs-lookup"><span data-stu-id="9dd87-188"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="9dd87-189">如果 `index` 等於 <xref:System.Collections.IList> 中的項目數目，則會將 `value` 附加至結尾。</span><span class="sxs-lookup"><span data-stu-id="9dd87-189">If `index` equals the number of items in the <xref:System.Collections.IList>, then `value` is appended to the end.</span></span>  
  
 <span data-ttu-id="9dd87-190">在連續項目的集合 (例如清單) 中，後面接著插入點的項目會向下移動以容納新項目。</span><span class="sxs-lookup"><span data-stu-id="9dd87-190">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="9dd87-191">如果集合具有索引，則移動之項目的索引也會更新。</span><span class="sxs-lookup"><span data-stu-id="9dd87-191">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9dd87-192">
            <paramref name="index" /> 對於 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 集合無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-192">The <paramref name="index" /> is not valid for the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9dd87-193">
            <paramref name="value" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-193">The <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9dd87-194">已超過的集合是唯讀的或具有固定大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-194">The collection is read-only or has a fixed size that has been exceeded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9dd87-195">取得值，指出 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 是否有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-195">Gets a value that indicates whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9dd87-196">如果 <see langword="true" /> 有固定大小，則為 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-196">
              <see langword="true" /> if the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd87-197"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 會實作 <xref:System.Collections.IList> 介面。</span><span class="sxs-lookup"><span data-stu-id="9dd87-197"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9dd87-198">取得值，這個值表示 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 是否為唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-198">Gets a value that indicates whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9dd87-199">如果 <see langword="true" /> 是唯讀，則為 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-199">
              <see langword="true" /> if the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd87-200"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 會實作 <xref:System.Collections.IList> 介面。</span><span class="sxs-lookup"><span data-stu-id="9dd87-200"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="9dd87-201">唯讀的集合不允許在集合建立後增加、移除或修改項目。</span><span class="sxs-lookup"><span data-stu-id="9dd87-201">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="9dd87-202">要取得或設定之工具箱分類項目以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-202">The zero-based index of the toolbox category item to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9dd87-203">取得或設定位於集合指定之索引的工具箱分類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-203">Gets or sets the toolbox category at a specified index of the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9dd87-204">位於指定之索引的 <see cref="T:System.Object" /> 工具箱分類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-204">The toolbox category <see cref="T:System.Object" /> at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd87-205"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 會實作 <xref:System.Collections.IList> 介面。</span><span class="sxs-lookup"><span data-stu-id="9dd87-205"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="9dd87-206">這個屬性可以使用下列語法提供存取集合中特定元素的能力：`myCollection[index]`。</span><span class="sxs-lookup"><span data-stu-id="9dd87-206">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9dd87-207">
            <paramref name="value" /> 集為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-207">The <paramref name="value" /> set is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9dd87-208">要從 <see cref="T:System.Object" /> 集合移除的 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 工具。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-208">The tool <see cref="T:System.Object" /> to remove from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9dd87-209">從 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 中移除第一個出現的特定工具箱分類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-209">Removes the first occurrence of a specific toolbox category from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd87-210"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 會實作 <xref:System.Collections.IList> 介面。</span><span class="sxs-lookup"><span data-stu-id="9dd87-210"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="9dd87-211">在相鄰元素的集合中，例如清單，接在移除的元素之後的元素會向上移動以佔用空出的位置。</span><span class="sxs-lookup"><span data-stu-id="9dd87-211">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="9dd87-212">如果集合具有索引，則移動之項目的索引也會更新。</span><span class="sxs-lookup"><span data-stu-id="9dd87-212">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="9dd87-213">要移除之工具箱分類項目以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-213">The zero-based index of the toolbox category item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9dd87-214">移除 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 集合指定之索引的工具箱分類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-214">Removes a toolbox category at the specified index of the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd87-215"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 會實作 <xref:System.Collections.IList> 介面。</span><span class="sxs-lookup"><span data-stu-id="9dd87-215"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="9dd87-216">在相鄰元素的集合中，例如清單，接在移除的元素之後的元素會向上移動以佔用空出的位置。</span><span class="sxs-lookup"><span data-stu-id="9dd87-216">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="9dd87-217">如果集合具有索引，則移動之項目的索引也會更新。</span><span class="sxs-lookup"><span data-stu-id="9dd87-217">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9dd87-218">
            <paramref name="index" /> 對於 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 集合無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd87-218">The <paramref name="index" /> is not valid for the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>