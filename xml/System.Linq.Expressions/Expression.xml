<Type Name="Expression" FullName="System.Linq.Expressions.Expression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bc5fc73f4d181f975b2a4702ba91f867a8124526" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Expression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Expression extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Linq.Expressions.Expression" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Expression" />
  <TypeSignature Language="C++ CLI" Value="public ref class Expression abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b0929-101">提供基底類別，表示運算式樹狀架構節點的類別可由此基底類別衍生。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b0929-101">Provides the base class from which the classes that represent expression tree nodes are derived.</span>
      </span>
      <span data-ttu-id="b0929-102">它也包含 <see langword="static" /> (在 Visual Basic 中為 <see langword="Shared" />) Factory 方法來建立各種節點類型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b0929-102">It also contains <see langword="static" /> (<see langword="Shared" /> in Visual Basic) factory methods to create the various node types.</span>
      </span>
      <span data-ttu-id="b0929-103">這是 <see langword="abstract" /> 類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b0929-103">This is an <see langword="abstract" /> class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0929-104">下列程式碼範例示範如何建立區塊的運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-104">The following code example shows how to create a block expression.</span></span> <span data-ttu-id="b0929-105">區塊運算式包含兩個<xref:System.Linq.Expressions.MethodCallExpression>物件和一個<xref:System.Linq.Expressions.ConstantExpression>物件。</span><span class="sxs-lookup"><span data-stu-id="b0929-105">The block expression consists of two <xref:System.Linq.Expressions.MethodCallExpression> objects and one <xref:System.Linq.Expressions.ConstantExpression> object.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#13)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#13)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-106">建構 <see cref="T:System.Linq.Expressions.Expression" /> 的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-106">Constructs a new instance of <see cref="T:System.Linq.Expressions.Expression" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Expression ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Expression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b0929-107">建構 <see cref="T:System.Linq.Expressions.Expression" /> 的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-107">Constructs a new instance of <see cref="T:System.Linq.Expressions.Expression" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Expression (System.Linq.Expressions.ExpressionType nodeType, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Linq.Expressions.ExpressionType nodeType, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.#ctor(System.Linq.Expressions.ExpressionType,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Expression(System::Linq::Expressions::ExpressionType nodeType, Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("use a different constructor that does not take ExpressionType. Then override NodeType and Type properties to provide the values that would be specified to this constructor.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="nodeType" Type="System.Linq.Expressions.ExpressionType" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="nodeType">
          <span data-ttu-id="b0929-108">
            <see cref="T:System.Linq.Expressions.ExpressionType" /> 可設定為節點類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-108">The <see cref="T:System.Linq.Expressions.ExpressionType" /> to set as the node type.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="b0929-109">此 <see cref="P:System.Linq.Expressions.Expression.Type" /> 的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-109">The <see cref="P:System.Linq.Expressions.Expression.Type" /> of this <see cref="T:System.Linq.Expressions.Expression" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-110">初始化 <see cref="T:System.Linq.Expressions.Expression" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-110">Initializes a new instance of the <see cref="T:System.Linq.Expressions.Expression" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-111">這個建構函式會從衍生類別中建構函式呼叫。</span><span class="sxs-lookup"><span data-stu-id="b0929-111">This constructor is called from constructors in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="protected internal virtual System.Linq.Expressions.Expression Accept (System.Linq.Expressions.ExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Linq.Expressions.Expression Accept(class System.Linq.Expressions.ExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function Accept (visitor As ExpressionVisitor) As Expression" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Linq::Expressions::Expression ^ Accept(System::Linq::Expressions::ExpressionVisitor ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Linq.Expressions.ExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">
          <span data-ttu-id="b0929-112">瀏覽這個節點的造訪者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-112">The visitor to visit this node with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-113">分派給這個節點類型的特定造訪方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-113">Dispatches to the specific visit method for this node type.</span>
          </span>
          <span data-ttu-id="b0929-114">例如，<see cref="T:System.Linq.Expressions.MethodCallExpression" /> 會呼叫 <see cref="M:System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-114">For example, <see cref="T:System.Linq.Expressions.MethodCallExpression" /> calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-115">瀏覽這個節點的結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-115">The result of visiting this node.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-116">這個預設實作<xref:System.Linq.Expressions.ExpressionType.Extension>節點呼叫<xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A>。</span><span class="sxs-lookup"><span data-stu-id="b0929-116">This default implementation for <xref:System.Linq.Expressions.ExpressionType.Extension> nodes calls <xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A>.</span></span> <span data-ttu-id="b0929-117">覆寫這個方法來呼叫更特定類別上的方法在衍生的訪客的<xref:System.Linq.Expressions.ExpressionVisitor>類別。</span><span class="sxs-lookup"><span data-stu-id="b0929-117">Override this method to call into a more specific method on a derived visitor class of the <xref:System.Linq.Expressions.ExpressionVisitor> class.</span></span> <span data-ttu-id="b0929-118">不過，它應該仍然支援未知的訪客藉由呼叫<xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A>。</span><span class="sxs-lookup"><span data-stu-id="b0929-118">However, it should still support unknown visitors by calling <xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-119">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，其代表不含溢位檢查的算術加法運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-119">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic addition operation that does not have overflow checking.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Add (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Add(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Add(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-120">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-120">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-121">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-121">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-122">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，其代表不含溢位檢查的算術加法運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-122">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic addition operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-123">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Add" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-123">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Add" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-124">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-124">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-125"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-125">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-126">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-126">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-127">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-127">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-128"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-128">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-129">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-129">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-130">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-130">Implementing Method</span></span>  
 <span data-ttu-id="b0929-131">下列規則決定作業選取實作的方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-131">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-132">如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載加法運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-132">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the addition operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-133">否則，如果`left`。型別和`right`。類型為數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-133">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-134">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-134">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-135">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-135">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-136">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-136">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-137">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-137">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-138">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-138">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-139">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-139">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-140">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-140">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-141">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-141">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-142">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-142">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-143">節點的類型是預先定義的加法運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-143">The type of the node is the result type of the predefined addition operator.</span></span>  
  
-   <span data-ttu-id="b0929-144">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-144">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-145">節點的類型為 null 的型別對應至預先定義的加法運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-145">The type of the node is the nullable type that corresponds to the result type of the predefined addition operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-146">下列程式碼範例示範如何建立將兩個整數相加的運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-146">The following code example shows how to create an expression that adds two integers.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#1)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-147">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-147">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-148">不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義 Addition 運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-148">The addition operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Add (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Add(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Add(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-149">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-149">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-150">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-150">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-151">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-151">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-152">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，其代表不含溢位檢查的算術加法運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-152">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic addition operation that does not have overflow checking.</span>
          </span>
          <span data-ttu-id="b0929-153">實作的方法可加以指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-153">The implementing method can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-154">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Add" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-154">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Add" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-155">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-155">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-156"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-156">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-157">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-157">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-158">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-158">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-159"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-159">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-160">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-160">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-161">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-161">Implementing Method</span></span>  
 <span data-ttu-id="b0929-162">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-162">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-163">如果`method`不`null`，而它代表非 void， `static` (`Shared`在 Visual Basic 中) 採用兩個引數，方法是節點的實作方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-163">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="b0929-164">否則，如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載加法運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-164">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the addition operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-165">否則，如果`left`。型別和`right`。類型為數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-165">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-166">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-166">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-167">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-167">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-168">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-168">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-169">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-169">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-170">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-170">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-171">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-171">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-172">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-172">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-173">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-173">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-174">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-174">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-175">節點的類型是預先定義的加法運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-175">The type of the node is the result type of the predefined addition operator.</span></span>  
  
-   <span data-ttu-id="b0929-176">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-176">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-177">節點的類型為 null 的型別對應至預先定義的加法運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-177">The type of the node is the nullable type that corresponds to the result type of the predefined addition operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-178">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-178">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-179">
            <paramref name="method" /> 不是 <see langword="null" />，而它所代表的方法會傳回 <see langword="void" />、不是 <see langword="static" /> (Visual Basic 中的 <see langword="Shared" />)，或者未確切採用兩個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-179">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-180">
            <paramref name="method" /> 是 <see langword="null" />，而且未定義 <paramref name="left" />.Type 和 <paramref name="right" />.Type 的加法運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-180">
              <paramref name="method" /> is <see langword="null" /> and the addition operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-181">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示不含溢位檢查的加法指派運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-181">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an addition assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AddAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AddAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AddAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-182">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-182">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-183">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-183">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-184">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示不含溢位檢查的加法指派運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-184">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an addition assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-185">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.AddAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-185">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AddAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0929-186">下列程式碼範例示範如何建立將值加入整數變數，然後將作業的結果指派給變數的運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-186">The following code example shows how to create an expression that adds a value to an integer variable and then assigns the result of the operation to the variable.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#18)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AddAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AddAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AddAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-187">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-187">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-188">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-188">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-189">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-189">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-190">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示不含溢位檢查的加法指派運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-190">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an addition assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-191">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.AddAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-191">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AddAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AddAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AddAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AddAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-192">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-192">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-193">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-193">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-194">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-194">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="b0929-195">要將 <see cref="T:System.Linq.Expressions.LambdaExpression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-195">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-196">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示不含溢位檢查的加法指派運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-196">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an addition assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-197">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.AddAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-197">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AddAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddAssignChecked">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-198">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示包含溢位檢查的加法指派運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-198">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an addition assignment operation that has overflow checking.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAssignChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AddAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AddAssignChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAssignChecked (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AddAssignChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-199">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-199">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-200">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-200">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-201">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示包含溢位檢查的加法指派運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-201">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an addition assignment operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-202">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.AddAssignChecked" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-202">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AddAssignChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAssignChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AddAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AddAssignChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAssignChecked (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AddAssignChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-203">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-203">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-204">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-204">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-205">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-205">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-206">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示包含溢位檢查的加法指派運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-206">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an addition assignment operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-207">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.AddAssignChecked" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-207">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AddAssignChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAssignChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AddAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AddAssignChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAssignChecked (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AddAssignChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-208">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-208">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-209">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-209">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-210">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-210">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="b0929-211">要將 <see cref="T:System.Linq.Expressions.LambdaExpression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-211">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-212">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示包含溢位檢查的加法指派運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-212">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an addition assignment operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-213">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.AddAssignChecked" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-213">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AddAssignChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddChecked">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-214">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，其代表包含溢位檢查的算術加法運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-214">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic addition operation that has overflow checking.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AddChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AddChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddChecked (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AddChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-215">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-215">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-216">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-216">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-217">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，其代表包含溢位檢查的算術加法運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-217">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic addition operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-218">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.AddChecked" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-218">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AddChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-219">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-219">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-220"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-220">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-221">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-221">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-222">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-222">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-223"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-223">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-224">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-224">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-225">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-225">Implementing Method</span></span>  
 <span data-ttu-id="b0929-226">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-226">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-227">如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載加法運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-227">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the addition operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-228">否則，如果`left`。型別和`right`。類型為數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-228">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-229">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-229">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-230">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-230">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-231">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-231">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-232">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-232">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-233">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-233">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-234">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-234">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-235">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-235">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-236">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-236">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-237">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-237">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-238">節點的類型是預先定義的加法運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-238">The type of the node is the result type of the predefined addition operator.</span></span>  
  
-   <span data-ttu-id="b0929-239">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-239">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-240">節點的類型為 null 的型別對應至預先定義的加法運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-240">The type of the node is the nullable type that corresponds to the result type of the predefined addition operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-241">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-241">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-242">不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義 Addition 運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-242">The addition operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AddChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AddChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddChecked (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AddChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-243">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-243">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-244">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-244">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-245">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-245">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-246">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，其代表包含溢位檢查的算術加法運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-246">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic addition operation that has overflow checking.</span>
          </span>
          <span data-ttu-id="b0929-247">實作的方法可加以指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-247">The implementing method can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-248">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.AddChecked" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-248">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AddChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-249">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-249">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-250"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-250">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-251">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-251">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-252">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-252">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-253"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-253">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-254">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-254">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-255">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-255">Implementing Method</span></span>  
 <span data-ttu-id="b0929-256">作業的實作方法是選擇根據下列規則：</span><span class="sxs-lookup"><span data-stu-id="b0929-256">The implementing method for the operation is chosen based on the following rules:</span></span>  
  
-   <span data-ttu-id="b0929-257">如果`method`不`null`，而它代表非 void， `static` (`Shared`在 Visual Basic 中) 採用兩個引數，方法是節點的實作方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-257">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="b0929-258">否則，如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載加法運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-258">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the addition operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-259">否則，如果`left`。型別和`right`。類型為數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-259">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-260">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-260">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-261">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-261">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-262">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-262">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-263">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-263">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-264">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-264">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-265">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-265">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-266">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-266">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-267">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-267">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-268">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-268">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-269">節點的類型是預先定義的加法運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-269">The type of the node is the result type of the predefined addition operator.</span></span>  
  
-   <span data-ttu-id="b0929-270">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-270">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-271">節點的類型為 null 的型別對應至預先定義的加法運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-271">The type of the node is the nullable type that corresponds to the result type of the predefined addition operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-272">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-272">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-273">
            <paramref name="method" /> 不是 <see langword="null" />，而它所代表的方法會傳回 <see langword="void" />、不是 <see langword="static" /> (Visual Basic 中的 <see langword="Shared" />)，或者未確切採用兩個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-273">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-274">
            <paramref name="method" /> 是 <see langword="null" />，而且未定義 <paramref name="left" />.Type 和 <paramref name="right" />.Type 的加法運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-274">
              <paramref name="method" /> is <see langword="null" /> and the addition operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="And">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-275">建立表示位元 <see cref="T:System.Linq.Expressions.BinaryExpression" /> 運算的 <see langword="AND" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-275">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise <see langword="AND" /> operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression And (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression And(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function And (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ And(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-276">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-276">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-277">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-277">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-278">建立表示位元 <see cref="T:System.Linq.Expressions.BinaryExpression" /> 運算的 <see langword="AND" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-278">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise <see langword="AND" /> operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-279">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.And" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-279">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.And" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-280">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-280">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-281"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-281">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-282">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-282">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-283">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-283">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-284"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-284">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-285">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-285">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-286">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-286">Implementing Method</span></span>  
 <span data-ttu-id="b0929-287">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-287">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-288">如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載的位元的`AND`運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-288">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the bitwise `AND` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-289">否則，如果`left`。型別和`right`。類型為整數或布林類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-289">Otherwise, if `left`.Type and `right`.Type are integral or Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-290">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-290">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-291">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-291">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-292">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-292">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-293">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-293">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-294">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-294">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-295">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-295">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-296">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-296">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-297">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-297">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-298">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-298">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-299">節點的結果類型是預先定義之位元`AND`運算子。</span><span class="sxs-lookup"><span data-stu-id="b0929-299">The type of the node is the result type of the predefined bitwise `AND` operator.</span></span>  
  
-   <span data-ttu-id="b0929-300">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-300">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-301">節點的類型是 null 的型別對應的結果類型的預先定義的位元`AND`運算子。</span><span class="sxs-lookup"><span data-stu-id="b0929-301">The type of the node is the nullable type that corresponds to the result type of the predefined bitwise `AND` operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-302">下列程式碼範例示範如何建立運算式，表示對兩個布林值的邏輯 AND 運算。</span><span class="sxs-lookup"><span data-stu-id="b0929-302">The following code example shows how to create an expression that represents a logical AND operation on two Boolean values.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#2)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-303">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-303">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-304">不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義位元 <see langword="AND" /> 運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-304">The bitwise <see langword="AND" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression And (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression And(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function And (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ And(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-305">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-305">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-306">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-306">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-307">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-307">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-308">建立表示位元 <see cref="T:System.Linq.Expressions.BinaryExpression" /> 運算的 <see langword="AND" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-308">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise <see langword="AND" /> operation.</span>
          </span>
          <span data-ttu-id="b0929-309">實作的方法可加以指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-309">The implementing method can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-310">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.And" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-310">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.And" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-311">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-311">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-312"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-312">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-313">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-313">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-314">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-314">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-315"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-315">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-316">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-316">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-317">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-317">Implementing Method</span></span>  
 <span data-ttu-id="b0929-318">作業的實作方法是選擇根據下列規則：</span><span class="sxs-lookup"><span data-stu-id="b0929-318">The implementing method for the operation is chosen based on the following rules:</span></span>  
  
-   <span data-ttu-id="b0929-319">如果`method`不`null`，而它代表非 void， `static` (`Shared`在 Visual Basic 中) 採用兩個引數，方法是節點的實作方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-319">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="b0929-320">否則，如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載的位元的`AND`運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-320">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the bitwise `AND` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-321">否則，如果`left`。型別和`right`。類型為整數或布林類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-321">Otherwise, if `left`.Type and `right`.Type are integral or Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-322">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-322">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-323">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-323">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-324">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-324">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-325">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-325">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-326">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-326">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-327">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-327">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-328">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-328">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-329">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-329">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-330">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-330">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-331">節點的結果類型是預先定義之位元`AND`運算子。</span><span class="sxs-lookup"><span data-stu-id="b0929-331">The type of the node is the result type of the predefined bitwise `AND` operator.</span></span>  
  
-   <span data-ttu-id="b0929-332">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-332">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-333">節點的類型是 null 的型別對應的結果類型的預先定義的位元`AND`運算子。</span><span class="sxs-lookup"><span data-stu-id="b0929-333">The type of the node is the nullable type that corresponds to the result type of the predefined bitwise `AND` operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-334">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-334">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-335">
            <paramref name="method" /> 不是 <see langword="null" />，而它所代表的方法會傳回 <see langword="void" />、不是 <see langword="static" /> (Visual Basic 中的 <see langword="Shared" />)，或者未確切採用兩個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-335">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-336">
            <paramref name="method" /> 是 <see langword="null" />，而且未定義 <paramref name="left" />.Type 和 <paramref name="right" />.Type 的位元 <see langword="AND" /> 運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-336">
              <paramref name="method" /> is <see langword="null" /> and the bitwise <see langword="AND" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AndAlso">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-337">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示只在第一個運算元計算結果為 <see langword="AND" /> 時才求第二個運算元之值的 <see langword="true" /> 條件運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-337">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a conditional <see langword="AND" /> operation that evaluates the second operand only if the first operand evaluates to <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AndAlso">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AndAlso (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AndAlso(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndAlso (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AndAlso(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-338">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-338">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-339">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-339">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-340">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示只在第一個運算元計算結果為 <see langword="AND" /> 時才求第二個運算元之值的 <see langword="true" /> 條件運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-340">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a conditional <see langword="AND" /> operation that evaluates the second operand only if the first operand evaluates to <see langword="true" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-341">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.AndAlso" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-341">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AndAlso" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-342">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-342">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-343"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-343">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-344">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-344">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-345">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-345">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-346"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-346">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-347">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-347">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-348">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-348">Implementing Method</span></span>  
 <span data-ttu-id="b0929-349">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-349">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-350">如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載的位元的`AND`運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-350">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the bitwise `AND` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="b0929-351">條件式`AND`運算子無法多載在 C# 或[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="b0929-351">The conditional `AND` operator cannot be overloaded in C# or [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)].</span></span> <span data-ttu-id="b0929-352">不過，條件式`AND`運算子會評估使用位元`AND`運算子。</span><span class="sxs-lookup"><span data-stu-id="b0929-352">However, the conditional `AND` operator is evaluated by using the bitwise `AND` operator.</span></span> <span data-ttu-id="b0929-353">因此，使用者定義的多載的位元`AND`運算子可以是這種節點類型的實作方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-353">Thus, a user-defined overload of the bitwise `AND` operator can be the implementing method for this node type.</span></span>  
  
-   <span data-ttu-id="b0929-354">否則，如果`left`。型別和`right`。型別是布林類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-354">Otherwise, if `left`.Type and `right`.Type are Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-355">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-355">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-356">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-356">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-357">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-357">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-358">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-358">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-359">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-359">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-360">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，而且對應不可為 null 的型別等於對應的實作方法的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-360">`left`.Type and `right`.Type are both value types of which at least one is nullable, and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-361">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-361">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-362">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-362">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-363">`left`.型別和`right`。類型為相同的布林型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-363">`left`.Type and `right`.Type are the same Boolean type.</span></span>  
  
-   <span data-ttu-id="b0929-364">如果`left`。型別和`right`。型別不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-364">If `left`.Type and `right`.Type are non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-365">節點的類型是預先定義的條件式的結果型別`AND`運算子。</span><span class="sxs-lookup"><span data-stu-id="b0929-365">The type of the node is the result type of the predefined conditional `AND` operator.</span></span>  
  
-   <span data-ttu-id="b0929-366">如果`left`。型別和`right`。型別可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-366">If `left`.Type and `right`.Type are nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-367">節點的類型是 null 的型別對應至預先定義的條件式的結果型別`AND`運算子。</span><span class="sxs-lookup"><span data-stu-id="b0929-367">The type of the node is the nullable type that corresponds to the result type of the predefined conditional `AND` operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-368">下列程式碼範例示範如何建立運算式的執行邏輯和操作其兩個運算元只有當第一個運算元判斷值為`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-368">The following code example shows how to create an expression that performs a logical AND operation on its two operands only if the first operand evaluates to `true`.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#19)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-369">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-369">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-370">不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義位元 <see langword="AND" /> 運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-370">The bitwise <see langword="AND" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
          <span data-ttu-id="b0929-371">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-371">-or-</span>
          </span>
          <span data-ttu-id="b0929-372">
            <paramref name="left" />.Type 和 <paramref name="right" />.Type 是不相同的布林類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-372">
              <paramref name="left" />.Type and <paramref name="right" />.Type are not the same Boolean type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AndAlso">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AndAlso (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AndAlso(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndAlso (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AndAlso(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-373">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-373">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-374">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-374">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-375">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-375">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-376">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，代表只在第一個運算元解析為 true 時才評估第二個運算元的條件 <see langword="AND" /> 運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-376">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a conditional <see langword="AND" /> operation that evaluates the second operand only if the first operand is resolved to true.</span>
          </span>
          <span data-ttu-id="b0929-377">實作的方法可加以指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-377">The implementing method can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-378">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.AndAlso" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-378">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AndAlso" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-379">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-379">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-380"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-380">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-381">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-381">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-382">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-382">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-383"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-383">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-384">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-384">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-385">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-385">Implementing Method</span></span>  
 <span data-ttu-id="b0929-386">作業的實作方法是選擇根據下列規則：</span><span class="sxs-lookup"><span data-stu-id="b0929-386">The implementing method for the operation is chosen based on the following rules:</span></span>  
  
-   <span data-ttu-id="b0929-387">如果`method`不`null`，而它代表非 void， `static` (`Shared`在 Visual Basic 中) 採用兩個引數，方法是節點的實作方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-387">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="b0929-388">否則，如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載的位元的`AND`運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-388">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the bitwise `AND` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="b0929-389">條件式`AND`運算子無法多載在 C# 或[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="b0929-389">The conditional `AND` operator cannot be overloaded in C# or [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)].</span></span> <span data-ttu-id="b0929-390">不過，條件式`AND`運算子會評估使用位元`AND`運算子。</span><span class="sxs-lookup"><span data-stu-id="b0929-390">However, the conditional `AND` operator is evaluated by using the bitwise `AND` operator.</span></span> <span data-ttu-id="b0929-391">因此，使用者定義的多載的位元`AND`運算子可以是這種節點類型的實作方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-391">Thus, a user-defined overload of the bitwise `AND` operator can be the implementing method for this node type.</span></span>  
  
-   <span data-ttu-id="b0929-392">否則，如果`left`。型別和`right`。型別是布林類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-392">Otherwise, if `left`.Type and `right`.Type are Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-393">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-393">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-394">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-394">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-395">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-395">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-396">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-396">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-397">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-397">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-398">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，而且對應不可為 null 的型別等於對應的實作方法的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-398">`left`.Type and `right`.Type are both value types of which at least one is nullable, and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-399">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-399">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-400">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-400">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-401">`left`.型別和`right`。類型為相同的布林型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-401">`left`.Type and `right`.Type are the same Boolean type.</span></span>  
  
-   <span data-ttu-id="b0929-402">如果`left`。型別和`right`。型別不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-402">If `left`.Type and `right`.Type are non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-403">節點的類型是預先定義的條件式的結果型別`AND`運算子。</span><span class="sxs-lookup"><span data-stu-id="b0929-403">The type of the node is the result type of the predefined conditional `AND` operator.</span></span>  
  
-   <span data-ttu-id="b0929-404">如果`left`。型別和`right`。型別可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-404">If `left`.Type and `right`.Type are nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-405">節點的類型是 null 的型別對應至預先定義的條件式的結果型別`AND`運算子。</span><span class="sxs-lookup"><span data-stu-id="b0929-405">The type of the node is the nullable type that corresponds to the result type of the predefined conditional `AND` operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-406">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-406">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-407">
            <paramref name="method" /> 不是 <see langword="null" />，而它所代表的方法會傳回 <see langword="void" />、不是 <see langword="static" /> (Visual Basic 中的 <see langword="Shared" />)，或者未確切採用兩個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-407">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-408">
            <paramref name="method" /> 是 <see langword="null" />，而且未定義 <paramref name="left" />.Type 和 <paramref name="right" />.Type 的位元 <see langword="AND" /> 運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-408">
              <paramref name="method" /> is <see langword="null" /> and the bitwise <see langword="AND" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
          <span data-ttu-id="b0929-409">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-409">-or-</span>
          </span>
          <span data-ttu-id="b0929-410">
            <paramref name="method" /> 為 <see langword="null" />，且 <paramref name="left" />.Type 和 <paramref name="right" />.Type 不是相同的布林類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-410">
              <paramref name="method" /> is <see langword="null" /> and <paramref name="left" />.Type and <paramref name="right" />.Type are not the same Boolean type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AndAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-411">建立表示位元 AND 指派運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-411">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise AND assignment operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AndAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AndAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AndAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AndAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-412">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-412">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-413">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-413">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-414">建立表示位元 AND 指派運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-414">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise AND assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-415">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.AndAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-415">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AndAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AndAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AndAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AndAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AndAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-416">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-416">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-417">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-417">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-418">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-418">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-419">建立表示位元 AND 指派運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-419">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise AND assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-420">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.AndAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-420">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AndAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AndAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AndAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AndAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AndAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-421">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-421">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-422">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-422">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-423">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-423">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="b0929-424">要將 <see cref="T:System.Linq.Expressions.LambdaExpression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-424">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-425">建立表示位元 AND 指派運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-425">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise AND assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-426">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.AndAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-426">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AndAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ArrayAccess">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-427">建立 <see cref="T:System.Linq.Expressions.IndexExpression" /> 以存取陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-427">Creates an <see cref="T:System.Linq.Expressions.IndexExpression" /> to access an array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ArrayAccess">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.IndexExpression ArrayAccess (System.Linq.Expressions.Expression array, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; indexes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.IndexExpression ArrayAccess(class System.Linq.Expressions.Expression array, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; indexes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ArrayAccess (array As Expression, indexes As IEnumerable(Of Expression)) As IndexExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::IndexExpression ^ ArrayAccess(System::Linq::Expressions::Expression ^ array, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ indexes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.IndexExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="indexes" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="b0929-428">表示多維陣列的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-428">An expression that represents the multidimensional array.</span>
          </span>
        </param>
        <param name="indexes">
          <span data-ttu-id="b0929-429">包含用於對陣列進行索引之運算式的 <see cref="T:System.Collections.Generic.IEnumerable`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-429">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> containing expressions used to index the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-430">建立 <see cref="T:System.Linq.Expressions.IndexExpression" /> 以存取多維陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-430">Creates an <see cref="T:System.Linq.Expressions.IndexExpression" /> to access a multidimensional array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-431">建立的 <see cref="T:System.Linq.Expressions.IndexExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-431">The created <see cref="T:System.Linq.Expressions.IndexExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-432">表示陣列的運算式可以使用來取得<xref:System.Linq.Expressions.Expression.MakeMemberAccess%2A>方法，或透過<xref:System.Linq.Expressions.Expression.NewArrayBounds%2A>或<xref:System.Linq.Expressions.Expression.NewArrayInit%2A>。</span><span class="sxs-lookup"><span data-stu-id="b0929-432">The expression that represents the array can be obtained by using the <xref:System.Linq.Expressions.Expression.MakeMemberAccess%2A> method, or through <xref:System.Linq.Expressions.Expression.NewArrayBounds%2A> or <xref:System.Linq.Expressions.Expression.NewArrayInit%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-433">下列程式碼範例示範如何透過多維陣列中項目的值變更`ArrayAccess`方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-433">The following code example shows how to change the value of an element in a multidimensional array by using the `ArrayAccess` method.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#21)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrayAccess">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.IndexExpression ArrayAccess (System.Linq.Expressions.Expression array, params System.Linq.Expressions.Expression[] indexes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.IndexExpression ArrayAccess(class System.Linq.Expressions.Expression array, class System.Linq.Expressions.Expression[] indexes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ArrayAccess (array As Expression, ParamArray indexes As Expression()) As IndexExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::IndexExpression ^ ArrayAccess(System::Linq::Expressions::Expression ^ array, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ indexes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.IndexExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="indexes" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="b0929-434">表示要編制索引之陣列的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-434">An expression representing the array to index.</span>
          </span>
        </param>
        <param name="indexes">
          <span data-ttu-id="b0929-435">包含用於對陣列進行索引之運算式的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-435">An array that contains expressions used to index the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-436">建立 <see cref="T:System.Linq.Expressions.IndexExpression" /> 以存取陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-436">Creates an <see cref="T:System.Linq.Expressions.IndexExpression" /> to access an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-437">建立的 <see cref="T:System.Linq.Expressions.IndexExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-437">The created <see cref="T:System.Linq.Expressions.IndexExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-438">表示陣列的運算式可以使用來取得<xref:System.Linq.Expressions.Expression.MakeMemberAccess%2A>方法，或透過<xref:System.Linq.Expressions.Expression.NewArrayBounds%2A>或<xref:System.Linq.Expressions.Expression.NewArrayInit%2A>。</span><span class="sxs-lookup"><span data-stu-id="b0929-438">The expression that represents the array can be obtained by using the <xref:System.Linq.Expressions.Expression.MakeMemberAccess%2A> method, or through <xref:System.Linq.Expressions.Expression.NewArrayBounds%2A> or <xref:System.Linq.Expressions.Expression.NewArrayInit%2A>.</span></span>  
  
 <span data-ttu-id="b0929-439">對於多維陣列時，使用<xref:System.Linq.Expressions.Expression.ArrayAccess%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-439">For multidimensional arrays, use the <xref:System.Linq.Expressions.Expression.ArrayAccess%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-440">下列程式碼範例示範如何透過陣列元素的值變更`ArrayAccess`方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-440">The following code example shows how to change a value of an array element by using the `ArrayAccess` method.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#20)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ArrayIndex">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-441">建立 <see cref="T:System.Linq.Expressions.Expression" />，表示套用陣列索引運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-441">Creates an <see cref="T:System.Linq.Expressions.Expression" /> that represents applying an array index operator.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ArrayIndex">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression ArrayIndex (System.Linq.Expressions.Expression array, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; indexes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression ArrayIndex(class System.Linq.Expressions.Expression array, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; indexes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ArrayIndex (array As Expression, indexes As IEnumerable(Of Expression)) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ ArrayIndex(System::Linq::Expressions::Expression ^ array, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ indexes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="indexes" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="b0929-442">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-442">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> property equal to.</span>
          </span>
        </param>
        <param name="indexes">
          <span data-ttu-id="b0929-443">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" />，其中包含用以填入 <see cref="T:System.Linq.Expressions.Expression" /> 集合的 <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-443">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-444">建立 <see cref="T:System.Linq.Expressions.MethodCallExpression" />，代表將陣列索引運算子套用到陣序規範大於 1 的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-444">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents applying an array index operator to an array of rank more than one.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-445">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Call" />，且 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> 和 <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-445">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-446">每個項目`indexes`必須<xref:System.Linq.Expressions.Expression.Type%2A>等於<xref:System.Int32>。</span><span class="sxs-lookup"><span data-stu-id="b0929-446">Each element of `indexes` must have <xref:System.Linq.Expressions.Expression.Type%2A> equal to <xref:System.Int32>.</span></span> <span data-ttu-id="b0929-447"><xref:System.Linq.Expressions.Expression.Type%2A>屬性`array`必須代表其次序符合中的項目數的陣列型別`indexes`。</span><span class="sxs-lookup"><span data-stu-id="b0929-447">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `array` must represent an array type whose rank matches the number of elements in `indexes`.</span></span>  
  
 <span data-ttu-id="b0929-448">如果的陣序`array`。類型為 1，則這個方法會傳回<xref:System.Linq.Expressions.BinaryExpression>。</span><span class="sxs-lookup"><span data-stu-id="b0929-448">If the rank of `array`.Type is 1, this method returns a <xref:System.Linq.Expressions.BinaryExpression>.</span></span> <span data-ttu-id="b0929-449"><xref:System.Linq.Expressions.BinaryExpression.Left%2A>屬性設定為`array`和<xref:System.Linq.Expressions.BinaryExpression.Right%2A>屬性設定為單一項目的`indexes`。</span><span class="sxs-lookup"><span data-stu-id="b0929-449">The <xref:System.Linq.Expressions.BinaryExpression.Left%2A> property is set to `array` and the <xref:System.Linq.Expressions.BinaryExpression.Right%2A> property is set to the single element of `indexes`.</span></span> <span data-ttu-id="b0929-450"><xref:System.Linq.Expressions.Expression.Type%2A>屬性<xref:System.Linq.Expressions.BinaryExpression>代表的項目類型`array`。型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-450">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the <xref:System.Linq.Expressions.BinaryExpression> represents the element type of `array`.Type.</span></span>  
  
 <span data-ttu-id="b0929-451">如果的陣序`array`。類型為多個，則這個方法會傳回<xref:System.Linq.Expressions.MethodCallExpression>。</span><span class="sxs-lookup"><span data-stu-id="b0929-451">If the rank of `array`.Type is more than one, this method returns a <xref:System.Linq.Expressions.MethodCallExpression>.</span></span> <span data-ttu-id="b0929-452"><xref:System.Linq.Expressions.MethodCallExpression.Method%2A>屬性設定為<xref:System.Reflection.MethodInfo>描述的公用執行個體方法`Get`所代表的類型上<xref:System.Linq.Expressions.Expression.Type%2A>屬性`array`。</span><span class="sxs-lookup"><span data-stu-id="b0929-452">The <xref:System.Linq.Expressions.MethodCallExpression.Method%2A> property is set to the <xref:System.Reflection.MethodInfo> that describes the public instance method `Get` on the type represented by the <xref:System.Linq.Expressions.Expression.Type%2A> property of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-453">下列範例示範如何使用<xref:System.Linq.Expressions.Expression.ArrayIndex%28System.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%5B%5D%29>方法來建立<xref:System.Linq.Expressions.MethodCallExpression>表示成二維陣列編製索引。</span><span class="sxs-lookup"><span data-stu-id="b0929-453">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.ArrayIndex%28System.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%5B%5D%29> method to create a <xref:System.Linq.Expressions.MethodCallExpression> that represents indexing into a two-dimensional array.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#3)]
 [!code-vb[System.Linq.Expressions.Expression#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-454">
            <paramref name="array" /> 或 <paramref name="indexes" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-454">
              <paramref name="array" /> or <paramref name="indexes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-455">
            <paramref name="array" />.Type 不代表陣列類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-455">
              <paramref name="array" />.Type does not represent an array type.</span>
          </span>
          <span data-ttu-id="b0929-456">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-456">-or-</span>
          </span>
          <span data-ttu-id="b0929-457">
            <paramref name="array" />.Type 的陣序規範不符合 <paramref name="indexes" /> 中的項目數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-457">The rank of <paramref name="array" />.Type does not match the number of elements in <paramref name="indexes" />.</span>
          </span>
          <span data-ttu-id="b0929-458">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-458">-or-</span>
          </span>
          <span data-ttu-id="b0929-459">
            <paramref name="indexes" /> 之一個或多個項目的 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性不代表 <see cref="T:System.Int32" /> 類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-459">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of one or more elements of <paramref name="indexes" /> does not represent the <see cref="T:System.Int32" /> type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ArrayIndex">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ArrayIndex (System.Linq.Expressions.Expression array, System.Linq.Expressions.Expression index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ArrayIndex(class System.Linq.Expressions.Expression array, class System.Linq.Expressions.Expression index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ArrayIndex (array As Expression, index As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ArrayIndex(System::Linq::Expressions::Expression ^ array, System::Linq::Expressions::Expression ^ index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="index" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="b0929-460">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-460">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="b0929-461">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-461">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-462">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，代表將陣列索引運算子套用到陣序規範 1 的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-462">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents applying an array index operator to an array of rank one.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-463">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.ArrayIndex" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-463">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ArrayIndex" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-464">`index` 必須代表類型的索引<xref:System.Int32>。</span><span class="sxs-lookup"><span data-stu-id="b0929-464">`index` must represent an index of type <xref:System.Int32>.</span></span>  
  
 <span data-ttu-id="b0929-465"><xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性產生<xref:System.Linq.Expressions.BinaryExpression>是`null`，並同時<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>設為`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-465">The <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.BinaryExpression> is `null`, and both <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> are set to `false`.</span></span> <span data-ttu-id="b0929-466"><xref:System.Linq.Expressions.Expression.Type%2A>屬性的元素型別等於`array`。型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-466">The <xref:System.Linq.Expressions.Expression.Type%2A> property is equal to the element type of `array`.Type.</span></span> <span data-ttu-id="b0929-467"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-467">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-468">
            <paramref name="array" /> 或 <paramref name="index" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-468">
              <paramref name="array" /> or <paramref name="index" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-469">
            <paramref name="array" />.Type 不代表陣列類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-469">
              <paramref name="array" />.Type does not represent an array type.</span>
          </span>
          <span data-ttu-id="b0929-470">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-470">-or-</span>
          </span>
          <span data-ttu-id="b0929-471">
            <paramref name="array" />.Type 代表其陣序規範不為 1 的陣列類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-471">
              <paramref name="array" />.Type represents an array type whose rank is not 1.</span>
          </span>
          <span data-ttu-id="b0929-472">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-472">-or-</span>
          </span>
          <span data-ttu-id="b0929-473">
            <paramref name="index" />.Type 不代表 <see cref="T:System.Int32" /> 類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-473">
              <paramref name="index" />.Type does not represent the <see cref="T:System.Int32" /> type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ArrayIndex">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression ArrayIndex (System.Linq.Expressions.Expression array, params System.Linq.Expressions.Expression[] indexes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression ArrayIndex(class System.Linq.Expressions.Expression array, class System.Linq.Expressions.Expression[] indexes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ArrayIndex (array As Expression, ParamArray indexes As Expression()) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ ArrayIndex(System::Linq::Expressions::Expression ^ array, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ indexes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="indexes" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="b0929-474">
            <see cref="T:System.Linq.Expressions.Expression" /> 執行個體 (用於陣列索引運算的索引) 的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-474">An array of <see cref="T:System.Linq.Expressions.Expression" /> instances - indexes for the array index operation.</span>
          </span>
        </param>
        <param name="indexes">
          <span data-ttu-id="b0929-475">用以填入 <see cref="T:System.Linq.Expressions.Expression" /> 集合之 <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-475">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-476">建立 <see cref="T:System.Linq.Expressions.MethodCallExpression" />，代表將陣列索引運算子套用到多維陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-476">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents applying an array index operator to a multidimensional array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-477">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Call" />，且 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> 和 <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-477">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-478">每個項目`indexes`必須<xref:System.Linq.Expressions.Expression.Type%2A>等於<xref:System.Int32>。</span><span class="sxs-lookup"><span data-stu-id="b0929-478">Each element of `indexes` must have <xref:System.Linq.Expressions.Expression.Type%2A> equal to <xref:System.Int32>.</span></span> <span data-ttu-id="b0929-479"><xref:System.Linq.Expressions.Expression.Type%2A>屬性`array`必須代表其次序符合中的項目數的陣列型別`indexes`。</span><span class="sxs-lookup"><span data-stu-id="b0929-479">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `array` must represent an array type whose rank matches the number of elements in `indexes`.</span></span>  
  
 <span data-ttu-id="b0929-480">如果的陣序`array`。類型為 1，則這個方法會傳回<xref:System.Linq.Expressions.BinaryExpression>。</span><span class="sxs-lookup"><span data-stu-id="b0929-480">If the rank of `array`.Type is 1, this method returns a <xref:System.Linq.Expressions.BinaryExpression>.</span></span> <span data-ttu-id="b0929-481"><xref:System.Linq.Expressions.BinaryExpression.Left%2A>屬性設定為`array`和<xref:System.Linq.Expressions.BinaryExpression.Right%2A>屬性設定為單一項目的`indexes`。</span><span class="sxs-lookup"><span data-stu-id="b0929-481">The <xref:System.Linq.Expressions.BinaryExpression.Left%2A> property is set to `array` and the <xref:System.Linq.Expressions.BinaryExpression.Right%2A> property is set to the single element of `indexes`.</span></span> <span data-ttu-id="b0929-482"><xref:System.Linq.Expressions.Expression.Type%2A>屬性<xref:System.Linq.Expressions.BinaryExpression>代表的項目類型`array`。型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-482">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the <xref:System.Linq.Expressions.BinaryExpression> represents the element type of `array`.Type.</span></span>  
  
 <span data-ttu-id="b0929-483">如果的陣序`array`。類型為多個，則這個方法會傳回<xref:System.Linq.Expressions.MethodCallExpression>。</span><span class="sxs-lookup"><span data-stu-id="b0929-483">If the rank of `array`.Type is more than one, this method returns a <xref:System.Linq.Expressions.MethodCallExpression>.</span></span> <span data-ttu-id="b0929-484"><xref:System.Linq.Expressions.MethodCallExpression.Method%2A>屬性設定為<xref:System.Reflection.MethodInfo>描述的公用執行個體方法`Get`所代表的類型上<xref:System.Linq.Expressions.Expression.Type%2A>屬性`array`。</span><span class="sxs-lookup"><span data-stu-id="b0929-484">The <xref:System.Linq.Expressions.MethodCallExpression.Method%2A> property is set to the <xref:System.Reflection.MethodInfo> that describes the public instance method `Get` on the type represented by the <xref:System.Linq.Expressions.Expression.Type%2A> property of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-485">下列範例示範如何使用<xref:System.Linq.Expressions.Expression.ArrayIndex%28System.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%5B%5D%29>方法來建立<xref:System.Linq.Expressions.MethodCallExpression>表示成二維陣列編製索引。</span><span class="sxs-lookup"><span data-stu-id="b0929-485">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.ArrayIndex%28System.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%5B%5D%29> method to create a <xref:System.Linq.Expressions.MethodCallExpression> that represents indexing into a two-dimensional array.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#3)]
 [!code-vb[System.Linq.Expressions.Expression#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-486">
            <paramref name="array" /> 或 <paramref name="indexes" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-486">
              <paramref name="array" /> or <paramref name="indexes" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-487">
            <paramref name="array" />.Type 不代表陣列類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-487">
              <paramref name="array" />.Type does not represent an array type.</span>
          </span>
          <span data-ttu-id="b0929-488">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-488">-or-</span>
          </span>
          <span data-ttu-id="b0929-489">
            <paramref name="array" />.Type 的陣序規範不符合 <paramref name="indexes" /> 中的項目數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-489">The rank of <paramref name="array" />.Type does not match the number of elements in <paramref name="indexes" />.</span>
          </span>
          <span data-ttu-id="b0929-490">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-490">-or-</span>
          </span>
          <span data-ttu-id="b0929-491">
            <paramref name="indexes" /> 之一個或多個項目的 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性不代表 <see cref="T:System.Int32" /> 類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-491">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of one or more elements of <paramref name="indexes" /> does not represent the <see cref="T:System.Int32" /> type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ArrayLength">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression ArrayLength (System.Linq.Expressions.Expression array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression ArrayLength(class System.Linq.Expressions.Expression array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ArrayLength (array As Expression) As UnaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ ArrayLength(System::Linq::Expressions::Expression ^ array);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="b0929-492">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-492">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-493">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，代表用於取得一維陣列長度的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-493">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an expression for obtaining the length of a one-dimensional array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-494">
            <see cref="T:System.Linq.Expressions.UnaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.ArrayLength" />，且 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> 屬性等於 <paramref name="array" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-494">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ArrayLength" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to <paramref name="array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-495"><xref:System.Linq.Expressions.Expression.Type%2A>屬性`array`必須代表陣列型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-495">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `array` must represent an array type.</span></span>  
  
 <span data-ttu-id="b0929-496"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.UnaryExpression>等於<xref:System.Int32>。</span><span class="sxs-lookup"><span data-stu-id="b0929-496">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is equal to <xref:System.Int32>.</span></span> <span data-ttu-id="b0929-497"><xref:System.Linq.Expressions.UnaryExpression.Method%2A>屬性是`null`，並同時<xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A>設為`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-497">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property is `null`, and both <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> are set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-498">
            <paramref name="array" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-498">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-499">
            <paramref name="array" />.Type 不代表陣列類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-499">
              <paramref name="array" />.Type does not represent an array type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Assign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Assign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Assign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Assign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Assign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-500">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-500">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-501">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-501">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-502">建立代表指派運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-502">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-503">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Assign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-503">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Assign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-504">`Assign`運算式複製實值類型的值，而且會複製參考類型的參考。</span><span class="sxs-lookup"><span data-stu-id="b0929-504">The `Assign` expression copies a value for value types, and it copies a reference for reference types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-505">下列程式碼範例示範如何建立代表指派運算的運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-505">The following code example shows how to create an expression that represents an assignment operation.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#12)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Bind">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-506">建立代表成員初始化的 <see cref="T:System.Linq.Expressions.MemberAssignment" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-506">Creates a <see cref="T:System.Linq.Expressions.MemberAssignment" /> that represents the initialization of a member.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberAssignment Bind (System.Reflection.MemberInfo member, System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberAssignment Bind(class System.Reflection.MemberInfo member, class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberAssignment ^ Bind(System::Reflection::MemberInfo ^ member, System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberAssignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="b0929-507">要將 <see cref="T:System.Reflection.MemberInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.MemberBinding.Member" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-507">A <see cref="T:System.Reflection.MemberInfo" /> to set the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property equal to.</span>
          </span>
        </param>
        <param name="expression">
          <span data-ttu-id="b0929-508">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.MemberAssignment.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-508">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.MemberAssignment.Expression" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-509">建立 <see cref="T:System.Linq.Expressions.MemberAssignment" />，代表初始化欄位或屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-509">Creates a <see cref="T:System.Linq.Expressions.MemberAssignment" /> that represents the initialization of a field or property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-510">
            <see cref="T:System.Linq.Expressions.MemberAssignment" />，其 <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> 等於 <see cref="F:System.Linq.Expressions.MemberBindingType.Assignment" />，且 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 和 <see cref="P:System.Linq.Expressions.MemberAssignment.Expression" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-510">A <see cref="T:System.Linq.Expressions.MemberAssignment" /> that has <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> equal to <see cref="F:System.Linq.Expressions.MemberBindingType.Assignment" /> and the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> and <see cref="P:System.Linq.Expressions.MemberAssignment.Expression" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-511"><xref:System.Linq.Expressions.Expression.Type%2A>屬性`expression`必須可以指派給所代表的類型<xref:System.Reflection.FieldInfo.FieldType%2A>或<xref:System.Reflection.PropertyInfo.PropertyType%2A>屬性`member`。</span><span class="sxs-lookup"><span data-stu-id="b0929-511">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `expression` must be assignable to the type represented by the <xref:System.Reflection.FieldInfo.FieldType%2A> or <xref:System.Reflection.PropertyInfo.PropertyType%2A> property of `member`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-512">
            <paramref name="member" /> 或 <paramref name="expression" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-512">
              <paramref name="member" /> or <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-513">
            <paramref name="member" /> 不代表欄位或屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-513">
              <paramref name="member" /> does not represent a field or property.</span>
          </span>
          <span data-ttu-id="b0929-514">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-514">-or-</span>
          </span>
          <span data-ttu-id="b0929-515">
            <paramref name="member" /> 所表示的屬性沒有 <see langword="set" /> 存取子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-515">The property represented by <paramref name="member" /> does not have a <see langword="set" /> accessor.</span>
          </span>
          <span data-ttu-id="b0929-516">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-516">-or-</span>
          </span>
          <span data-ttu-id="b0929-517">無法將 <paramref name="expression" />.Type 指派給 <paramref name="member" /> 代表的欄位或屬性類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-517">
              <paramref name="expression" />.Type is not assignable to the type of the field or property that <paramref name="member" /> represents.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberAssignment Bind (System.Reflection.MethodInfo propertyAccessor, System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberAssignment Bind(class System.Reflection.MethodInfo propertyAccessor, class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberAssignment ^ Bind(System::Reflection::MethodInfo ^ propertyAccessor, System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberAssignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyAccessor" Type="System.Reflection.MethodInfo" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="propertyAccessor">
          <span data-ttu-id="b0929-518">代表屬性存取子方法的 <see cref="T:System.Reflection.MethodInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-518">A <see cref="T:System.Reflection.MethodInfo" /> that represents a property accessor method.</span>
          </span>
        </param>
        <param name="expression">
          <span data-ttu-id="b0929-519">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.MemberAssignment.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-519">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.MemberAssignment.Expression" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-520">建立 <see cref="T:System.Linq.Expressions.MemberAssignment" />，代表使用屬性存取子方法初始化成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-520">Creates a <see cref="T:System.Linq.Expressions.MemberAssignment" /> that represents the initialization of a member by using a property accessor method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-521">
            <see cref="T:System.Linq.Expressions.MemberAssignment" />，其 <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> 屬性等於 <see cref="F:System.Linq.Expressions.MemberBindingType.Assignment" />，並將 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 屬性設定為 <see cref="T:System.Reflection.PropertyInfo" />，代表在 <paramref name="propertyAccessor" /> 中存取的屬性，以及將 <see cref="P:System.Linq.Expressions.MemberAssignment.Expression" /> 屬性設定為 <paramref name="expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-521">A <see cref="T:System.Linq.Expressions.MemberAssignment" /> that has the <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> property equal to <see cref="F:System.Linq.Expressions.MemberBindingType.Assignment" />, the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property set to the <see cref="T:System.Reflection.PropertyInfo" /> that represents the property accessed in <paramref name="propertyAccessor" />, and the <see cref="P:System.Linq.Expressions.MemberAssignment.Expression" /> property set to <paramref name="expression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-522"><xref:System.Linq.Expressions.Expression.Type%2A>屬性`expression`必須可以指派給所代表的類型<xref:System.Reflection.PropertyInfo.PropertyType%2A>屬性中存取屬性`propertyAccessor`。</span><span class="sxs-lookup"><span data-stu-id="b0929-522">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `expression` must be assignable to the type represented by the <xref:System.Reflection.PropertyInfo.PropertyType%2A> property of the property accessed in `propertyAccessor`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-523">
            <paramref name="propertyAccessor" /> 或 <paramref name="expression" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-523">
              <paramref name="propertyAccessor" /> or <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-524">
            <paramref name="propertyAccessor" /> 不代表屬性存取子方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-524">
              <paramref name="propertyAccessor" /> does not represent a property accessor method.</span>
          </span>
          <span data-ttu-id="b0929-525">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-525">-or-</span>
          </span>
          <span data-ttu-id="b0929-526">
            <paramref name="propertyAccessor" /> 所存取的屬性沒有 <see langword="set" /> 存取子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-526">The property accessed by <paramref name="propertyAccessor" /> does not have a <see langword="set" /> accessor.</span>
          </span>
          <span data-ttu-id="b0929-527">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-527">-or-</span>
          </span>
          <span data-ttu-id="b0929-528">無法將 <paramref name="expression" />.Type 指派給 <paramref name="member" /> 代表的欄位或屬性類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-528">
              <paramref name="expression" />.Type is not assignable to the type of the field or property that <paramref name="member" /> represents.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Block">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-529">建立 <see cref="T:System.Linq.Expressions.BlockExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-529">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; expressions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Block (expressions As IEnumerable(Of Expression)) As BlockExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ expressions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressions" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="expressions">
          <span data-ttu-id="b0929-530">區塊中的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-530">The expressions in the block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-531">建立包含指定的運算式但沒有任何變數的 <see cref="T:System.Linq.Expressions.BlockExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-531">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains the given expressions and has no variables.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-532">建立的 <see cref="T:System.Linq.Expressions.BlockExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-532">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-533">執行區塊運算式時，它會傳回區塊中的最後一個運算式的值。</span><span class="sxs-lookup"><span data-stu-id="b0929-533">When the block expression is executed, it returns the value of the last expression in the block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (params System.Linq.Expressions.Expression[] expressions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Linq.Expressions.Expression[] expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Block (ParamArray expressions As Expression()) As BlockExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ expressions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressions" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="expressions">
          <span data-ttu-id="b0929-534">區塊中的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-534">The expressions in the block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-535">建立包含指定的運算式但沒有任何變數的 <see cref="T:System.Linq.Expressions.BlockExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-535">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains the given expressions and has no variables.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-536">建立的 <see cref="T:System.Linq.Expressions.BlockExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-536">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-537">執行區塊運算式時，它會傳回區塊中的最後一個運算式的值。</span><span class="sxs-lookup"><span data-stu-id="b0929-537">When the block expression is executed, it returns the value of the last expression in the block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-538">下列程式碼範例示範如何建立區塊的運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-538">The following code example shows how to create a block expression.</span></span> <span data-ttu-id="b0929-539">區塊運算式包含兩個<xref:System.Linq.Expressions.MethodCallExpression>物件和一個<xref:System.Linq.Expressions.ConstantExpression>物件。</span><span class="sxs-lookup"><span data-stu-id="b0929-539">The block expression consists of two <xref:System.Linq.Expressions.MethodCallExpression> objects and one <xref:System.Linq.Expressions.ConstantExpression> object.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#13)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; variables, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; expressions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; variables, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Block (variables As IEnumerable(Of ParameterExpression), expressions As IEnumerable(Of Expression)) As BlockExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ variables, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ expressions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
        <Parameter Name="expressions" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="variables">
          <span data-ttu-id="b0929-540">區塊中的變數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-540">The variables in the block.</span>
          </span>
        </param>
        <param name="expressions">
          <span data-ttu-id="b0929-541">區塊中的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-541">The expressions in the block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-542">建立包含指定之變數和運算式的 <see cref="T:System.Linq.Expressions.BlockExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-542">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains the given variables and expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-543">建立的 <see cref="T:System.Linq.Expressions.BlockExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-543">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-544">執行區塊運算式時，它會傳回區塊中的最後一個運算式的值。</span><span class="sxs-lookup"><span data-stu-id="b0929-544">When the block expression is executed, it returns the value of the last expression in the block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-545">下列程式碼範例示範如何將參數傳遞給區塊運算式和處理這個區塊內的參數。</span><span class="sxs-lookup"><span data-stu-id="b0929-545">The following code example shows how to pass a parameter to a block expression and process this parameter within a block.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#14)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; variables, params System.Linq.Expressions.Expression[] expressions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; variables, class System.Linq.Expressions.Expression[] expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Block (variables As IEnumerable(Of ParameterExpression), ParamArray expressions As Expression()) As BlockExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ variables, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ expressions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
        <Parameter Name="expressions" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="variables">
          <span data-ttu-id="b0929-546">區塊中的變數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-546">The variables in the block.</span>
          </span>
        </param>
        <param name="expressions">
          <span data-ttu-id="b0929-547">區塊中的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-547">The expressions in the block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-548">建立包含指定之變數和運算式的 <see cref="T:System.Linq.Expressions.BlockExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-548">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains the given variables and expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-549">建立的 <see cref="T:System.Linq.Expressions.BlockExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-549">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-550">執行區塊運算式時，它會傳回區塊中的最後一個運算式的值。</span><span class="sxs-lookup"><span data-stu-id="b0929-550">When the block expression is executed, it returns the value of the last expression in the block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Block (arg0 As Expression, arg1 As Expression) As BlockExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="arg0">
          <span data-ttu-id="b0929-551">區塊中的第一個運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-551">The first expression in the block.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="b0929-552">區塊中的第二個運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-552">The second expression in the block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-553">建立包含兩個運算式但沒有任何變數的 <see cref="T:System.Linq.Expressions.BlockExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-553">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains two expressions and has no variables.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-554">建立的 <see cref="T:System.Linq.Expressions.BlockExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-554">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-555">執行區塊運算式時，它會傳回區塊中的最後一個運算式的值。</span><span class="sxs-lookup"><span data-stu-id="b0929-555">When the block expression is executed, it returns the value of the last expression in the block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (Type type, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; expressions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(Type ^ type, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ expressions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="expressions" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b0929-556">區塊的結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-556">The result type of the block.</span>
          </span>
        </param>
        <param name="expressions">
          <span data-ttu-id="b0929-557">區塊中的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-557">The expressions in the block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-558">建立包含指定的運算式、有指定之結果類型、但沒有任何變數的 <see cref="T:System.Linq.Expressions.BlockExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-558">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains the given expressions, has no variables and has specific result type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-559">建立的 <see cref="T:System.Linq.Expressions.BlockExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-559">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (Type type, params System.Linq.Expressions.Expression[] expressions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Type type, class System.Linq.Expressions.Expression[] expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(Type ^ type, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ expressions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="expressions" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b0929-560">區塊的結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-560">The result type of the block.</span>
          </span>
        </param>
        <param name="expressions">
          <span data-ttu-id="b0929-561">區塊中的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-561">The expressions in the block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-562">建立包含指定的運算式、有指定之結果類型、但沒有任何變數的 <see cref="T:System.Linq.Expressions.BlockExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-562">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains the given expressions, has no variables and has specific result type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-563">建立的 <see cref="T:System.Linq.Expressions.BlockExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-563">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Block (arg0 As Expression, arg1 As Expression, arg2 As Expression) As BlockExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="arg0">
          <span data-ttu-id="b0929-564">區塊中的第一個運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-564">The first expression in the block.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="b0929-565">區塊中的第二個運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-565">The second expression in the block.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="b0929-566">區塊中的第三個運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-566">The third expression in the block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-567">建立包含三個運算式但沒有任何變數的 <see cref="T:System.Linq.Expressions.BlockExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-567">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains three expressions and has no variables.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-568">建立的 <see cref="T:System.Linq.Expressions.BlockExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-568">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-569">執行區塊運算式時，它會傳回區塊中的最後一個運算式的值。</span><span class="sxs-lookup"><span data-stu-id="b0929-569">When the block expression is executed, it returns the value of the last expression in the block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (Type type, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; variables, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; expressions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; variables, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(Type ^ type, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ variables, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ expressions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
        <Parameter Name="expressions" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b0929-570">區塊的結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-570">The result type of the block.</span>
          </span>
        </param>
        <param name="variables">
          <span data-ttu-id="b0929-571">區塊中的變數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-571">The variables in the block.</span>
          </span>
        </param>
        <param name="expressions">
          <span data-ttu-id="b0929-572">區塊中的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-572">The expressions in the block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-573">建立包含指定之變數和運算式的 <see cref="T:System.Linq.Expressions.BlockExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-573">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains the given variables and expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-574">建立的 <see cref="T:System.Linq.Expressions.BlockExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-574">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (Type type, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; variables, params System.Linq.Expressions.Expression[] expressions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; variables, class System.Linq.Expressions.Expression[] expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(Type ^ type, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ variables, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ expressions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
        <Parameter Name="expressions" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b0929-575">區塊的結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-575">The result type of the block.</span>
          </span>
        </param>
        <param name="variables">
          <span data-ttu-id="b0929-576">區塊中的變數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-576">The variables in the block.</span>
          </span>
        </param>
        <param name="expressions">
          <span data-ttu-id="b0929-577">區塊中的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-577">The expressions in the block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-578">建立包含指定之變數和運算式的 <see cref="T:System.Linq.Expressions.BlockExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-578">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains the given variables and expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-579">建立的 <see cref="T:System.Linq.Expressions.BlockExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-579">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2, class System.Linq.Expressions.Expression arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Block (arg0 As Expression, arg1 As Expression, arg2 As Expression, arg3 As Expression) As BlockExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2, System::Linq::Expressions::Expression ^ arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg3" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="arg0">
          <span data-ttu-id="b0929-580">區塊中的第一個運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-580">The first expression in the block.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="b0929-581">區塊中的第二個運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-581">The second expression in the block.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="b0929-582">區塊中的第三個運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-582">The third expression in the block.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="b0929-583">區塊中的第四個運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-583">The fourth expression in the block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-584">建立包含四個運算式但沒有任何變數的 <see cref="T:System.Linq.Expressions.BlockExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-584">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains four expressions and has no variables.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-585">建立的 <see cref="T:System.Linq.Expressions.BlockExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-585">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-586">執行區塊運算式時，它會傳回區塊中的最後一個運算式的值。</span><span class="sxs-lookup"><span data-stu-id="b0929-586">When the block expression is executed, it returns the value of the last expression in the block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3, System.Linq.Expressions.Expression arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2, class System.Linq.Expressions.Expression arg3, class System.Linq.Expressions.Expression arg4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Block (arg0 As Expression, arg1 As Expression, arg2 As Expression, arg3 As Expression, arg4 As Expression) As BlockExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2, System::Linq::Expressions::Expression ^ arg3, System::Linq::Expressions::Expression ^ arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg3" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg4" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="arg0">
          <span data-ttu-id="b0929-587">區塊中的第一個運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-587">The first expression in the block.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="b0929-588">區塊中的第二個運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-588">The second expression in the block.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="b0929-589">區塊中的第三個運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-589">The third expression in the block.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="b0929-590">區塊中的第四個運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-590">The fourth expression in the block.</span>
          </span>
        </param>
        <param name="arg4">
          <span data-ttu-id="b0929-591">區塊中的第五個運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-591">The fifth expression in the block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-592">建立包含五個運算式但沒有任何變數的 <see cref="T:System.Linq.Expressions.BlockExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-592">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains five expressions and has no variables.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-593">建立的 <see cref="T:System.Linq.Expressions.BlockExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-593">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-594">執行區塊運算式時，它會傳回區塊中的最後一個運算式的值。</span><span class="sxs-lookup"><span data-stu-id="b0929-594">When the block expression is executed, it returns the value of the last expression in the block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Break">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-595">建立表示 break 陳述式的 <see cref="T:System.Linq.Expressions.GotoExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-595">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a break statement.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Break">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Break (System.Linq.Expressions.LabelTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Break(class System.Linq.Expressions.LabelTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Break (target As LabelTarget) As GotoExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Break(System::Linq::Expressions::LabelTarget ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b0929-596">
            <see cref="T:System.Linq.Expressions.LabelTarget" /> 將跳躍的目標 <see cref="T:System.Linq.Expressions.GotoExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-596">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-597">建立表示 break 陳述式的 <see cref="T:System.Linq.Expressions.GotoExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-597">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a break statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-598">
            <see cref="T:System.Linq.Expressions.GotoExpression" />，其 <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 等於 Break、<see cref="P:System.Linq.Expressions.GotoExpression.Target" /> 屬性設定為 <paramref name="target" />，且包含在跳躍時傳遞至目標標籤的 Null 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-598">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Break, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, and a null value to be passed to the target label upon jumping.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0929-599">下列範例示範如何建立包含的運算式<xref:System.Linq.Expressions.LoopExpression>物件，使用<xref:System.Linq.Expressions.Expression.Break%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-599">The following example demonstrates how to create an expression that contains a <xref:System.Linq.Expressions.LoopExpression> object that uses the <xref:System.Linq.Expressions.Expression.Break%2A> method.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#44](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#44)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#44](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#44)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Break">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Break (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Break(class System.Linq.Expressions.LabelTarget target, class System.Linq.Expressions.Expression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Break (target As LabelTarget, value As Expression) As GotoExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Break(System::Linq::Expressions::LabelTarget ^ target, System::Linq::Expressions::Expression ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b0929-600">
            <see cref="T:System.Linq.Expressions.LabelTarget" /> 將跳躍的目標 <see cref="T:System.Linq.Expressions.GotoExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-600">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b0929-601">將在跳躍時傳遞至關聯標籤的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-601">The value that will be passed to the associated label upon jumping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-602">建立表示 break 陳述式的 <see cref="T:System.Linq.Expressions.GotoExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-602">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a break statement.</span>
          </span>
          <span data-ttu-id="b0929-603">可以指定跳躍時傳遞至標籤的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-603">The value passed to the label upon jumping can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-604">
            <see cref="T:System.Linq.Expressions.GotoExpression" />，其 <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 等於 Break、<see cref="P:System.Linq.Expressions.GotoExpression.Target" /> 屬性設定為 <paramref name="target" />，且，且包含在跳躍時傳遞至目標標籤的 <paramref name="value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-604">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Break, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, and <paramref name="value" /> to be passed to the target label upon jumping.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Break">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Break (System.Linq.Expressions.LabelTarget target, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Break(class System.Linq.Expressions.LabelTarget target, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Break(System::Linq::Expressions::LabelTarget ^ target, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b0929-605">
            <see cref="T:System.Linq.Expressions.LabelTarget" /> 將跳躍的目標 <see cref="T:System.Linq.Expressions.GotoExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-605">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="b0929-606">要將 <see cref="T:System.Type" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.Expression.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-606">An <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-607">建立 <see cref="T:System.Linq.Expressions.GotoExpression" />，表示含指定之類型的 break 陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-607">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a break statement with the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-608">
            <see cref="T:System.Linq.Expressions.GotoExpression" />，其 <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 等於 Break、<see cref="P:System.Linq.Expressions.GotoExpression.Target" /> 屬性設定為 <paramref name="target" />，且 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性設定為 <paramref name="type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-608">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Break, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, and the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Break">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Break (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Break(class System.Linq.Expressions.LabelTarget target, class System.Linq.Expressions.Expression value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Break(System::Linq::Expressions::LabelTarget ^ target, System::Linq::Expressions::Expression ^ value, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b0929-609">
            <see cref="T:System.Linq.Expressions.LabelTarget" /> 將跳躍的目標 <see cref="T:System.Linq.Expressions.GotoExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-609">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b0929-610">將在跳躍時傳遞至關聯標籤的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-610">The value that will be passed to the associated label upon jumping.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="b0929-611">要將 <see cref="T:System.Type" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.Expression.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-611">An <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-612">建立 <see cref="T:System.Linq.Expressions.GotoExpression" />，表示含指定之類型的 break 陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-612">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a break statement with the specified type.</span>
          </span>
          <span data-ttu-id="b0929-613">可以指定跳躍時傳遞至標籤的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-613">The value passed to the label upon jumping can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-614">
            <see cref="T:System.Linq.Expressions.GotoExpression" />，其 <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 等於 Break、<see cref="P:System.Linq.Expressions.GotoExpression.Target" /> 屬性設定為 <paramref name="target" />、<see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性設定為 <paramref name="type" />，且包含在跳躍時傳遞至目標標籤的 <paramref name="value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-614">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Break, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to <paramref name="type" />, and <paramref name="value" /> to be passed to the target label upon jumping.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Call">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-615">建立 <see cref="T:System.Linq.Expressions.MethodCallExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-615">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Linq.Expressions.Expression instance, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (instance As Expression, method As MethodInfo) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Linq::Expressions::Expression ^ instance, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="b0929-616">
            <see cref="T:System.Linq.Expressions.Expression" />，指定執行個體方法呼叫的執行個體 (對 <see langword="null" /> (在 Visual Basic 中為 <see langword="static" />) 方法會傳遞 <see langword="Shared" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-616">An <see cref="T:System.Linq.Expressions.Expression" /> that specifies the instance for an instance method call (pass <see langword="null" /> for a <see langword="static" /> (<see langword="Shared" /> in Visual Basic) method).</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-617">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-617">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-618">建立代表呼叫不採用任何引數之方法的 <see cref="T:System.Linq.Expressions.MethodCallExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-618">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a method that takes no arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-619">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Call" />，且 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> 和 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-619">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-620">若要代表呼叫`static`(`Shared`在 Visual Basic 中) 方法，請傳入`null`如`instance`時呼叫這個方法的參數。</span><span class="sxs-lookup"><span data-stu-id="b0929-620">To represent a call to a `static` (`Shared` in Visual Basic) method, pass in `null` for the `instance` parameter when you call this method.</span></span>  
  
 <span data-ttu-id="b0929-621">如果`method`代表執行個體方法，<xref:System.Linq.Expressions.Expression.Type%2A>屬性`instance`必須可以指派給所表示之方法的宣告型別`method`。</span><span class="sxs-lookup"><span data-stu-id="b0929-621">If `method` represents an instance method, the <xref:System.Linq.Expressions.Expression.Type%2A> property of `instance` must be assignable to the declaring type of the method represented by `method`.</span></span>  
  
 <span data-ttu-id="b0929-622"><xref:System.Linq.Expressions.MethodCallExpression.Arguments%2A>屬性產生<xref:System.Linq.Expressions.MethodCallExpression>是空的。</span><span class="sxs-lookup"><span data-stu-id="b0929-622">The <xref:System.Linq.Expressions.MethodCallExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.MethodCallExpression> is empty.</span></span> <span data-ttu-id="b0929-623"><xref:System.Linq.Expressions.Expression.Type%2A>屬性所表示之方法的傳回型別等於`method`。</span><span class="sxs-lookup"><span data-stu-id="b0929-623">The <xref:System.Linq.Expressions.Expression.Type%2A> property is equal to the return type of the method represented by `method`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-624">下列程式碼範例示範如何建立呼叫的方法沒有引數的運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-624">The following code example shows how to create an expression that calls a method without arguments.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#15)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-625">
            <paramref name="method" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-625">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-626">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-626">-or-</span>
          </span>
          <span data-ttu-id="b0929-627">
            <paramref name="instance" /> 為 <see langword="null" />，<paramref name="method" /> 則代表執行個體方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-627">
              <paramref name="instance" /> is <see langword="null" /> and <paramref name="method" /> represents an instance method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-628">
            <paramref name="instance" />.Type 無法指派給 <paramref name="method" /> 所代表之方法的宣告類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-628">
              <paramref name="instance" />.Type is not assignable to the declaring type of the method represented by <paramref name="method" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Reflection.MethodInfo method, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (method As MethodInfo, arguments As IEnumerable(Of Expression)) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Reflection::MethodInfo ^ method, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="b0929-629">表示目標方法的 <see cref="T:System.Reflection.MethodInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-629">The <see cref="T:System.Reflection.MethodInfo" /> that represents the target method.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="b0929-630">
            <see cref="T:System.Linq.Expressions.Expression" /> 的集合，代表呼叫引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-630">A collection of <see cref="T:System.Linq.Expressions.Expression" /> that represents the call arguments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-631">建立 <see cref="T:System.Linq.Expressions.MethodCallExpression" />，代表呼叫靜態方法 (在 Visual Basic 中為共用方法)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-631">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a static (Shared in Visual Basic) method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-632">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Call" />，且 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> 和 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-632">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Reflection.MethodInfo method, class System.Linq.Expressions.Expression arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (method As MethodInfo, arg0 As Expression) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Reflection::MethodInfo ^ method, System::Linq::Expressions::Expression ^ arg0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="b0929-633">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-633">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="b0929-634">表示第一個引數的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-634">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the first argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-635">建立 <see cref="T:System.Linq.Expressions.MethodCallExpression" />，代表呼叫採用一個引數的 <see langword="static" /> (在 Visual Basic 中則為 <see langword="Shared" />) 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-635">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a <see langword="static" /> (<see langword="Shared" /> in Visual Basic) method that takes one argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-636">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Call" />，且 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> 和 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-636">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0929-637">下列範例示範如何建立運算式，會呼叫`static`(`Shared`在 Visual Basic 中) 會採用一個引數的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-637">The following example demonstrates how to create an expression that calls a `static` (`Shared` in Visual Basic) method that takes one argument.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#16)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-638">
            <paramref name="method" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-638">
              <paramref name="method" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Reflection.MethodInfo method, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (method As MethodInfo, ParamArray arguments As Expression()) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Reflection::MethodInfo ^ method, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="b0929-639">
            <see cref="T:System.Reflection.MethodInfo" />，代表 <see langword="static" /> (在 Visual Basic 中則為 <see langword="Shared" />) 方法，將 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> 屬性設定為與之相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-639">A <see cref="T:System.Reflection.MethodInfo" /> that represents a <see langword="static" /> (<see langword="Shared" /> in Visual Basic) method to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="b0929-640">用以填入 <see cref="T:System.Linq.Expressions.Expression" /> 集合之 <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-640">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-641">建立 <see cref="T:System.Linq.Expressions.MethodCallExpression" />，代表呼叫有引數的 <see langword="static" /> (在 Visual Basic 中則為 <see langword="Shared" />) 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-641">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a <see langword="static" /> (<see langword="Shared" /> in Visual Basic) method that has arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-642">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Call" />，且 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> 和 <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-642">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-643">如果`arguments`不`null`，它必須有相同數目的項目所表示之方法的參數數目為`method`。</span><span class="sxs-lookup"><span data-stu-id="b0929-643">If `arguments` is not `null`, it must have the same number of elements as the number of parameters for the method represented by `method`.</span></span> <span data-ttu-id="b0929-644">在每個項目`arguments`不得`null`，而且必須是可指派給對應的參數`method`，可能之後*用引號括住*。</span><span class="sxs-lookup"><span data-stu-id="b0929-644">Each element in `arguments` must not be `null` and must be assignable to the corresponding parameter of `method`, possibly after *quoting*.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b0929-645">只有當對應的方法參數的類型是項目會用引號括<xref:System.Linq.Expressions.Expression>。</span><span class="sxs-lookup"><span data-stu-id="b0929-645">An element will be quoted only if the corresponding method parameter is of type <xref:System.Linq.Expressions.Expression>.</span></span> <span data-ttu-id="b0929-646">引號的表示項目包裝在<xref:System.Linq.Expressions.ExpressionType.Quote>節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-646">Quoting means the element is wrapped in a <xref:System.Linq.Expressions.ExpressionType.Quote> node.</span></span> <span data-ttu-id="b0929-647">產生的節點是<xref:System.Linq.Expressions.UnaryExpression>其<xref:System.Linq.Expressions.UnaryExpression.Operand%2A>屬性則是項目`arguments`。</span><span class="sxs-lookup"><span data-stu-id="b0929-647">The resulting node is a <xref:System.Linq.Expressions.UnaryExpression> whose <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> property is the element of `arguments`.</span></span>  
  
 <span data-ttu-id="b0929-648"><xref:System.Linq.Expressions.MethodCallExpression.Arguments%2A>屬性產生<xref:System.Linq.Expressions.MethodCallExpression>是空的如果`arguments`是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-648">The <xref:System.Linq.Expressions.MethodCallExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.MethodCallExpression> is empty if `arguments` is `null`.</span></span> <span data-ttu-id="b0929-649">否則，就會包含相同項目，做為`arguments`，其中有些可能會加上引號。</span><span class="sxs-lookup"><span data-stu-id="b0929-649">Otherwise, it contains the same elements as `arguments`, some of which may be quoted.</span></span>  
  
 <span data-ttu-id="b0929-650"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.MethodCallExpression>等於所表示之方法的傳回型別`method`。</span><span class="sxs-lookup"><span data-stu-id="b0929-650">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MethodCallExpression> is equal to the return type of the method represented by `method`.</span></span> <span data-ttu-id="b0929-651"><xref:System.Linq.Expressions.MethodCallExpression.Object%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-651">The <xref:System.Linq.Expressions.MethodCallExpression.Object%2A> property is `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-652">
            <paramref name="method" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-652">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-653">
            <paramref name="arguments" /> 中的項目數不等於 <paramref name="method" />所代表之方法的參數數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-653">The number of elements in <paramref name="arguments" /> does not equal the number of parameters for the method represented by <paramref name="method" />.</span>
          </span>
          <span data-ttu-id="b0929-654">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-654">-or-</span>
          </span>
          <span data-ttu-id="b0929-655">
            <paramref name="arguments" /> 的一或多個項目無法指派給 <paramref name="method" /> 所代表之方法的對應參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-655">One or more of the elements of <paramref name="arguments" /> is not assignable to the corresponding parameter for the method represented by <paramref name="method" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, System.Reflection.MethodInfo method, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Linq.Expressions.Expression instance, class System.Reflection.MethodInfo method, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (instance As Expression, method As MethodInfo, arguments As IEnumerable(Of Expression)) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Linq::Expressions::Expression ^ instance, System::Reflection::MethodInfo ^ method, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="b0929-656">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> (針對 <see langword="null" /> (在 Visual Basic 中為 <see langword="static" />) 方法傳遞 <see langword="Shared" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-656">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> property equal to (pass <see langword="null" /> for a <see langword="static" /> (<see langword="Shared" /> in Visual Basic) method).</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-657">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-657">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="b0929-658">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" />，其中包含用以填入 <see cref="T:System.Linq.Expressions.Expression" /> 集合的 <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-658">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-659">建立代表呼叫至採用引數之方法的 <see cref="T:System.Linq.Expressions.MethodCallExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-659">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a method that takes arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-660">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Call" />，且 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" />、<see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> 和 <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-660">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" />, <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />, and <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-661">若要代表呼叫`static`(`Shared`在 Visual Basic 中) 方法，請傳入`null`如`instance`參數時呼叫這個方法，或呼叫<xref:System.Linq.Expressions.Expression.Call%2A>改為。</span><span class="sxs-lookup"><span data-stu-id="b0929-661">To represent a call to a `static` (`Shared` in Visual Basic) method, pass in `null` for the `instance` parameter when you call this method, or call <xref:System.Linq.Expressions.Expression.Call%2A> instead.</span></span>  
  
 <span data-ttu-id="b0929-662">如果`method`代表執行個體方法，<xref:System.Linq.Expressions.Expression.Type%2A>屬性`instance`必須可以指派給所表示之方法的宣告型別`method`。</span><span class="sxs-lookup"><span data-stu-id="b0929-662">If `method` represents an instance method, the <xref:System.Linq.Expressions.Expression.Type%2A> property of `instance` must be assignable to the declaring type of the method represented by `method`.</span></span>  
  
 <span data-ttu-id="b0929-663">如果`arguments`不`null`，它必須有相同數目的項目所表示之方法的參數數目為`method`。</span><span class="sxs-lookup"><span data-stu-id="b0929-663">If `arguments` is not `null`, it must have the same number of elements as the number of parameters for the method represented by `method`.</span></span> <span data-ttu-id="b0929-664">在每個項目`arguments`不得`null`，而且必須是可指派給對應的參數`method`，可能之後*用引號括住*。</span><span class="sxs-lookup"><span data-stu-id="b0929-664">Each element in `arguments` must not be `null` and must be assignable to the corresponding parameter of `method`, possibly after *quoting*.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b0929-665">只有當對應的方法參數的類型是項目會用引號括<xref:System.Linq.Expressions.Expression>。</span><span class="sxs-lookup"><span data-stu-id="b0929-665">An element will be quoted only if the corresponding method parameter is of type <xref:System.Linq.Expressions.Expression>.</span></span> <span data-ttu-id="b0929-666">引號的表示項目包裝在<xref:System.Linq.Expressions.ExpressionType.Quote>節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-666">Quoting means the element is wrapped in a <xref:System.Linq.Expressions.ExpressionType.Quote> node.</span></span> <span data-ttu-id="b0929-667">產生的節點是<xref:System.Linq.Expressions.UnaryExpression>其<xref:System.Linq.Expressions.UnaryExpression.Operand%2A>屬性則是項目`arguments`。</span><span class="sxs-lookup"><span data-stu-id="b0929-667">The resulting node is a <xref:System.Linq.Expressions.UnaryExpression> whose <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> property is the element of `arguments`.</span></span>  
  
 <span data-ttu-id="b0929-668"><xref:System.Linq.Expressions.MethodCallExpression.Arguments%2A>屬性產生<xref:System.Linq.Expressions.MethodCallExpression>是空的如果`arguments`是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-668">The <xref:System.Linq.Expressions.MethodCallExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.MethodCallExpression> is empty if `arguments` is `null`.</span></span> <span data-ttu-id="b0929-669">否則，就會包含相同項目，做為`arguments`，其中有些可能會加上引號。</span><span class="sxs-lookup"><span data-stu-id="b0929-669">Otherwise, it contains the same elements as `arguments`, some of which may be quoted.</span></span>  
  
 <span data-ttu-id="b0929-670"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.MethodCallExpression>等於所表示之方法的傳回型別`method`。</span><span class="sxs-lookup"><span data-stu-id="b0929-670">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MethodCallExpression> is equal to the return type of the method represented by `method`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-671">
            <paramref name="method" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-671">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-672">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-672">-or-</span>
          </span>
          <span data-ttu-id="b0929-673">
            <paramref name="instance" /> 為 <see langword="null" />，<paramref name="method" /> 則代表執行個體方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-673">
              <paramref name="instance" /> is <see langword="null" /> and <paramref name="method" /> represents an instance method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-674">
            <paramref name="instance" />.Type 無法指派給 <paramref name="method" /> 所代表之方法的宣告類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-674">
              <paramref name="instance" />.Type is not assignable to the declaring type of the method represented by <paramref name="method" />.</span>
          </span>
          <span data-ttu-id="b0929-675">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-675">-or-</span>
          </span>
          <span data-ttu-id="b0929-676">
            <paramref name="arguments" /> 中的項目數不等於 <paramref name="method" />所代表之方法的參數數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-676">The number of elements in <paramref name="arguments" /> does not equal the number of parameters for the method represented by <paramref name="method" />.</span>
          </span>
          <span data-ttu-id="b0929-677">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-677">-or-</span>
          </span>
          <span data-ttu-id="b0929-678">
            <paramref name="arguments" /> 的一或多個項目無法指派給 <paramref name="method" /> 所代表之方法的對應參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-678">One or more of the elements of <paramref name="arguments" /> is not assignable to the corresponding parameter for the method represented by <paramref name="method" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, System.Reflection.MethodInfo method, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Linq.Expressions.Expression instance, class System.Reflection.MethodInfo method, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (instance As Expression, method As MethodInfo, ParamArray arguments As Expression()) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Linq::Expressions::Expression ^ instance, System::Reflection::MethodInfo ^ method, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="b0929-679">
            <see cref="T:System.Linq.Expressions.Expression" />，指定執行個體方法呼叫的執行個體 (對 <see langword="null" /> (在 Visual Basic 中為 <see langword="static" />) 方法會傳遞 <see langword="Shared" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-679">An <see cref="T:System.Linq.Expressions.Expression" /> that specifies the instance for an instance method call (pass <see langword="null" /> for a <see langword="static" /> (<see langword="Shared" /> in Visual Basic) method).</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-680">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-680">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="b0929-681">用以填入 <see cref="T:System.Linq.Expressions.Expression" /> 集合之 <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-681">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-682">建立代表呼叫至採用引數之方法的 <see cref="T:System.Linq.Expressions.MethodCallExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-682">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a method that takes arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-683">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Call" />，且 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" />、<see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> 和 <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-683">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" />, <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />, and <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-684">若要代表呼叫`static`(`Shared`在 Visual Basic 中) 方法，請傳入`null`如`instance`參數時呼叫這個方法，或呼叫<xref:System.Linq.Expressions.Expression.Call%2A>改為。</span><span class="sxs-lookup"><span data-stu-id="b0929-684">To represent a call to a `static` (`Shared` in Visual Basic) method, pass in `null` for the `instance` parameter when you call this method, or call <xref:System.Linq.Expressions.Expression.Call%2A> instead.</span></span>  
  
 <span data-ttu-id="b0929-685">如果`method`代表執行個體方法，<xref:System.Linq.Expressions.Expression.Type%2A>屬性`instance`必須可以指派給所表示之方法的宣告型別`method`。</span><span class="sxs-lookup"><span data-stu-id="b0929-685">If `method` represents an instance method, the <xref:System.Linq.Expressions.Expression.Type%2A> property of `instance` must be assignable to the declaring type of the method represented by `method`.</span></span>  
  
 <span data-ttu-id="b0929-686">如果`arguments`不`null`，它必須有相同數目的項目所表示之方法的參數數目為`method`。</span><span class="sxs-lookup"><span data-stu-id="b0929-686">If `arguments` is not `null`, it must have the same number of elements as the number of parameters for the method represented by `method`.</span></span> <span data-ttu-id="b0929-687">在每個項目`arguments`不得`null`，而且必須是可指派給對應的參數`method`，可能之後*用引號括住*。</span><span class="sxs-lookup"><span data-stu-id="b0929-687">Each element in `arguments` must not be `null` and must be assignable to the corresponding parameter of `method`, possibly after *quoting*.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b0929-688">只有當對應的方法參數的類型是項目會用引號括<xref:System.Linq.Expressions.Expression>。</span><span class="sxs-lookup"><span data-stu-id="b0929-688">An element will be quoted only if the corresponding method parameter is of type <xref:System.Linq.Expressions.Expression>.</span></span> <span data-ttu-id="b0929-689">引號的表示項目包裝在<xref:System.Linq.Expressions.ExpressionType.Quote>節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-689">Quoting means the element is wrapped in a <xref:System.Linq.Expressions.ExpressionType.Quote> node.</span></span> <span data-ttu-id="b0929-690">產生的節點是<xref:System.Linq.Expressions.UnaryExpression>其<xref:System.Linq.Expressions.UnaryExpression.Operand%2A>屬性則是項目`arguments`。</span><span class="sxs-lookup"><span data-stu-id="b0929-690">The resulting node is a <xref:System.Linq.Expressions.UnaryExpression> whose <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> property is the element of `arguments`.</span></span>  
  
 <span data-ttu-id="b0929-691"><xref:System.Linq.Expressions.MethodCallExpression.Arguments%2A>屬性產生<xref:System.Linq.Expressions.MethodCallExpression>是空的如果`arguments`是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-691">The <xref:System.Linq.Expressions.MethodCallExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.MethodCallExpression> is empty if `arguments` is `null`.</span></span> <span data-ttu-id="b0929-692">否則，就會包含相同項目，做為`arguments`，其中有些可能會加上引號。</span><span class="sxs-lookup"><span data-stu-id="b0929-692">Otherwise, it contains the same elements as `arguments`, some of which may be quoted.</span></span>  
  
 <span data-ttu-id="b0929-693"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.MethodCallExpression>等於所表示之方法的傳回型別`method`。</span><span class="sxs-lookup"><span data-stu-id="b0929-693">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MethodCallExpression> is equal to the return type of the method represented by `method`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-694">
            <paramref name="method" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-694">
              <paramref name="method" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-695">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-695">-or-</span>
          </span>
          <span data-ttu-id="b0929-696">
            <paramref name="instance" /> 為 <see langword="null" />，<paramref name="method" /> 則代表執行個體方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-696">
              <paramref name="instance" /> is <see langword="null" /> and <paramref name="method" /> represents an instance method.</span>
          </span>
          <span data-ttu-id="b0929-697">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-697">-or-</span>
          </span>
          <span data-ttu-id="b0929-698">
            <paramref name="arguments" /> 不是 <see langword="null" />，且它的一或多個子項目為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-698">
              <paramref name="arguments" /> is not <see langword="null" /> and one or more of its elements is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-699">
            <paramref name="instance" />.Type 無法指派給 <paramref name="method" /> 所代表之方法的宣告類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-699">
              <paramref name="instance" />.Type is not assignable to the declaring type of the method represented by <paramref name="method" />.</span>
          </span>
          <span data-ttu-id="b0929-700">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-700">-or-</span>
          </span>
          <span data-ttu-id="b0929-701">
            <paramref name="arguments" /> 中的項目數不等於 <paramref name="method" />所代表之方法的參數數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-701">The number of elements in <paramref name="arguments" /> does not equal the number of parameters for the method represented by <paramref name="method" />.</span>
          </span>
          <span data-ttu-id="b0929-702">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-702">-or-</span>
          </span>
          <span data-ttu-id="b0929-703">
            <paramref name="arguments" /> 的一或多個項目無法指派給 <paramref name="method" /> 所代表之方法的對應參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-703">One or more of the elements of <paramref name="arguments" /> is not assignable to the corresponding parameter for the method represented by <paramref name="method" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Reflection.MethodInfo method, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (method As MethodInfo, arg0 As Expression, arg1 As Expression) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Reflection::MethodInfo ^ method, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="b0929-704">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-704">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="b0929-705">表示第一個引數的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-705">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the first argument.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="b0929-706">表示第二個引數的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-706">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the second argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-707">建立 <see cref="T:System.Linq.Expressions.MethodCallExpression" />，代表呼叫採用兩個引數的靜態方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-707">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a static method that takes two arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-708">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Call" />，且 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> 和 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-708">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-709">
            <paramref name="method" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-709">
              <paramref name="method" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Linq.Expressions.Expression instance, class System.Reflection.MethodInfo method, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (instance As Expression, method As MethodInfo, arg0 As Expression, arg1 As Expression) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Linq::Expressions::Expression ^ instance, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="b0929-710">為執行個體呼叫指定執行個體的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-710">An <see cref="T:System.Linq.Expressions.Expression" /> that specifies the instance for an instance call.</span>
          </span>
          <span data-ttu-id="b0929-711">(對靜態方法 (在 Visual Basic 中為共用方法) 傳遞 Null)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-711">(pass null for a static (Shared in Visual Basic) method).</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-712">表示目標方法的 <see cref="T:System.Reflection.MethodInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-712">The <see cref="T:System.Reflection.MethodInfo" /> that represents the target method.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="b0929-713">表示第一個引數的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-713">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the first argument.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="b0929-714">表示第二個引數的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-714">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the second argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-715">建立 <see cref="T:System.Linq.Expressions.MethodCallExpression" />，代表呼叫採用兩個引數的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-715">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a method that takes two arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-716">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Call" />，且 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> 和 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-716">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0929-717">下列程式碼範例示範如何建立會呼叫執行個體方法，具有兩個引數的運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-717">The following code example shows how to create an expression that calls an instance method that has two arguments.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#17)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, string methodName, Type[] typeArguments, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Linq.Expressions.Expression instance, string methodName, class System.Type[] typeArguments, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (instance As Expression, methodName As String, typeArguments As Type(), ParamArray arguments As Expression()) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Linq::Expressions::Expression ^ instance, System::String ^ methodName, cli::array &lt;Type ^&gt; ^ typeArguments, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Type[]" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="b0929-718">
            <see cref="T:System.Linq.Expressions.Expression" />，將搜尋其 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性值中的特定方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-718">An <see cref="T:System.Linq.Expressions.Expression" /> whose <see cref="P:System.Linq.Expressions.Expression.Type" /> property value will be searched for a specific method.</span>
          </span>
        </param>
        <param name="methodName">
          <span data-ttu-id="b0929-719">方法的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-719">The name of the method.</span>
          </span>
        </param>
        <param name="typeArguments">
          <span data-ttu-id="b0929-720">
            <see cref="T:System.Type" /> 物件的陣列，這些物件可指定泛型方法的類型參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-720">An array of <see cref="T:System.Type" /> objects that specify the type parameters of the generic method.</span>
          </span>
          <span data-ttu-id="b0929-721">當 methodName 指定非泛型方法時，這個引數應該為 Null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-721">This argument should be null when methodName specifies a non-generic method.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="b0929-722">
            <see cref="T:System.Linq.Expressions.Expression" /> 物件的陣列，這個陣列代表方法的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-722">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects that represents the arguments to the method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-723">建立 <see cref="T:System.Linq.Expressions.MethodCallExpression" />，代表透過呼叫適當的 Factory 方法來呼叫方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-723">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a method by calling the appropriate factory method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-724">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Call" />、<see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> 屬性等於 <paramref name="instance" />、<see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> 設定為代表指定執行個體方法的 <see cref="T:System.Reflection.MethodInfo" />，且 <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> 設定為指定的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-724">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" />, the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> property equal to <paramref name="instance" />, <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> set to the <see cref="T:System.Reflection.MethodInfo" /> that represents the specified instance method, and <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> set to the specified arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-725"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.MethodCallExpression>等於所表示之方法的傳回型別`methodName`。</span><span class="sxs-lookup"><span data-stu-id="b0929-725">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MethodCallExpression> is equal to the return type of the method denoted by `methodName`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-726">
            <paramref name="instance" /> 或 <paramref name="methodName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-726">
              <paramref name="instance" /> or <paramref name="methodName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-727">
            <paramref name="methodName" />.Type 或其基底類型中找不到名稱為 <paramref name="typeArguments" />、其類型參數符合 <paramref name="arguments" />，且參數類型符合 <paramref name="instance" /> 的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-727">No method whose name is <paramref name="methodName" />, whose type parameters match <paramref name="typeArguments" />, and whose parameter types match <paramref name="arguments" /> is found in <paramref name="instance" />.Type or its base types.</span>
          </span>
          <span data-ttu-id="b0929-728">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-728">-or-</span>
          </span>
          <span data-ttu-id="b0929-729">
            <paramref name="methodName" />.Type 或其基底類型中找到多個名稱為 <paramref name="typeArguments" />、類型參數符合 <paramref name="arguments" />，且參數類型符合 <paramref name="instance" /> 的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-729">More than one method whose name is <paramref name="methodName" />, whose type parameters match <paramref name="typeArguments" />, and whose parameter types match <paramref name="arguments" /> is found in <paramref name="instance" />.Type or its base types.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Reflection.MethodInfo method, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (method As MethodInfo, arg0 As Expression, arg1 As Expression, arg2 As Expression) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Reflection::MethodInfo ^ method, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="b0929-730">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-730">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="b0929-731">表示第一個引數的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-731">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the first argument.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="b0929-732">表示第二個引數的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-732">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the second argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="b0929-733">表示第三個引數的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-733">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the third argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-734">建立 <see cref="T:System.Linq.Expressions.MethodCallExpression" />，代表呼叫採用三個引數的靜態方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-734">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a static method that takes three arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-735">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Call" />，且 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> 和 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-735">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-736">
            <paramref name="method" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-736">
              <paramref name="method" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (Type type, string methodName, Type[] typeArguments, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Type type, string methodName, class System.Type[] typeArguments, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(Type ^ type, System::String ^ methodName, cli::array &lt;Type ^&gt; ^ typeArguments, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Type[]" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b0929-737">
            <see cref="T:System.Type" />，指定包含所指定 <see langword="static" /> (在 Visual Basic 中則為 <see langword="Shared" />) 方法的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-737">The <see cref="T:System.Type" /> that specifies the type that contains the specified <see langword="static" /> (<see langword="Shared" /> in Visual Basic) method.</span>
          </span>
        </param>
        <param name="methodName">
          <span data-ttu-id="b0929-738">方法的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-738">The name of the method.</span>
          </span>
        </param>
        <param name="typeArguments">
          <span data-ttu-id="b0929-739">
            <see cref="T:System.Type" /> 物件的陣列，這些物件可指定泛型方法的類型參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-739">An array of <see cref="T:System.Type" /> objects that specify the type parameters of the generic method.</span>
          </span>
          <span data-ttu-id="b0929-740">當 methodName 指定非泛型方法時，這個引數應該為 Null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-740">This argument should be null when methodName specifies a non-generic method.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="b0929-741">
            <see cref="T:System.Linq.Expressions.Expression" /> 物件的陣列，這個陣列代表方法的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-741">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects that represent the arguments to the method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-742">建立 <see cref="T:System.Linq.Expressions.MethodCallExpression" />，代表透過呼叫適當的 Factory 方法來呼叫 <see langword="static" /> (在 Visual Basic 中則為 <see langword="Shared" />) 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-742">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a <see langword="static" /> (<see langword="Shared" /> in Visual Basic) method by calling the appropriate factory method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-743">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Call" />、<see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> 屬性設定為 <see cref="T:System.Reflection.MethodInfo" />，代表指定的 <see langword="static" /> (在 Visual Basic 中則為 <see langword="Shared" />) 方法，且 <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> 屬性設定為指定的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-743">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" />, the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property set to the <see cref="T:System.Reflection.MethodInfo" /> that represents the specified <see langword="static" /> (<see langword="Shared" /> in Visual Basic) method, and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> property set to the specified arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-744"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.MethodCallExpression>等於所表示之方法的傳回型別`methodName`。</span><span class="sxs-lookup"><span data-stu-id="b0929-744">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MethodCallExpression> is equal to the return type of the method denoted by `methodName`.</span></span> <span data-ttu-id="b0929-745"><xref:System.Linq.Expressions.MethodCallExpression.Object%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-745">The <xref:System.Linq.Expressions.MethodCallExpression.Object%2A> property is `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-746">
            <paramref name="type" /> 或 <paramref name="methodName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-746">
              <paramref name="type" /> or <paramref name="methodName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-747">
            <paramref name="methodName" /> 或其基底類型中找不到名稱為 <paramref name="typeArguments" />、類型參數符合 <paramref name="arguments" />，且參數類型符合 <paramref name="type" /> 的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-747">No method whose name is <paramref name="methodName" />, whose type parameters match <paramref name="typeArguments" />, and whose parameter types match <paramref name="arguments" /> is found in <paramref name="type" /> or its base types.</span>
          </span>
          <span data-ttu-id="b0929-748">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-748">-or-</span>
          </span>
          <span data-ttu-id="b0929-749">
            <paramref name="methodName" /> 或其基底類型中找到多個名稱為 <paramref name="typeArguments" />、類型參數符合 <paramref name="arguments" />，且參數類型符合 <paramref name="type" /> 的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-749">More than one method whose name is <paramref name="methodName" />, whose type parameters match <paramref name="typeArguments" />, and whose parameter types match <paramref name="arguments" /> is found in <paramref name="type" /> or its base types.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Linq.Expressions.Expression instance, class System.Reflection.MethodInfo method, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (instance As Expression, method As MethodInfo, arg0 As Expression, arg1 As Expression, arg2 As Expression) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Linq::Expressions::Expression ^ instance, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="b0929-750">為執行個體呼叫指定執行個體的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-750">An <see cref="T:System.Linq.Expressions.Expression" /> that specifies the instance for an instance call.</span>
          </span>
          <span data-ttu-id="b0929-751">(對靜態方法 (在 Visual Basic 中為共用方法) 傳遞 Null)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-751">(pass null for a static (Shared in Visual Basic) method).</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-752">表示目標方法的 <see cref="T:System.Reflection.MethodInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-752">The <see cref="T:System.Reflection.MethodInfo" /> that represents the target method.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="b0929-753">表示第一個引數的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-753">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the first argument.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="b0929-754">表示第二個引數的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-754">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the second argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="b0929-755">表示第三個引數的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-755">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the third argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-756">建立 <see cref="T:System.Linq.Expressions.MethodCallExpression" />，代表呼叫採用三個引數的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-756">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a method that takes three arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-757">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Call" />，且 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> 和 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-757">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Reflection.MethodInfo method, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2, class System.Linq.Expressions.Expression arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (method As MethodInfo, arg0 As Expression, arg1 As Expression, arg2 As Expression, arg3 As Expression) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Reflection::MethodInfo ^ method, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2, System::Linq::Expressions::Expression ^ arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg3" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="b0929-758">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-758">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="b0929-759">表示第一個引數的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-759">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the first argument.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="b0929-760">表示第二個引數的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-760">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the second argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="b0929-761">表示第三個引數的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-761">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the third argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="b0929-762">表示第四個引數的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-762">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the fourth argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-763">建立 <see cref="T:System.Linq.Expressions.MethodCallExpression" />，代表呼叫採用四個引數的靜態方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-763">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a static method that takes four arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-764">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Call" />，且 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> 和 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-764">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-765">
            <paramref name="method" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-765">
              <paramref name="method" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3, System.Linq.Expressions.Expression arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Reflection.MethodInfo method, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2, class System.Linq.Expressions.Expression arg3, class System.Linq.Expressions.Expression arg4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (method As MethodInfo, arg0 As Expression, arg1 As Expression, arg2 As Expression, arg3 As Expression, arg4 As Expression) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Reflection::MethodInfo ^ method, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2, System::Linq::Expressions::Expression ^ arg3, System::Linq::Expressions::Expression ^ arg4);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg3" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg4" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="b0929-766">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-766">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="b0929-767">表示第一個引數的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-767">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the first argument.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="b0929-768">表示第二個引數的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-768">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the second argument.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="b0929-769">表示第三個引數的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-769">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the third argument.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="b0929-770">表示第四個引數的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-770">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the fourth argument.</span>
          </span>
        </param>
        <param name="arg4">
          <span data-ttu-id="b0929-771">表示第五個引數的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-771">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the fifth argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-772">建立 <see cref="T:System.Linq.Expressions.MethodCallExpression" />，代表呼叫採用五個引數的靜態方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-772">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a static method that takes five arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-773">
            <see cref="T:System.Linq.Expressions.MethodCallExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Call" />，且 <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> 和 <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-773">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-774">
            <paramref name="method" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-774">
              <paramref name="method" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanReduce">
      <MemberSignature Language="C#" Value="public virtual bool CanReduce { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReduce" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.Expression.CanReduce" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanReduce As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReduce { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-775">表示節點可精簡為更簡單的節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-775">Indicates that the node can be reduced to a simpler node.</span>
          </span>
          <span data-ttu-id="b0929-776">如果傳回 true，則可呼叫 Reduce() 以產生精簡的形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-776">If this returns true, Reduce() can be called to produce the reduced form.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b0929-777">如果節點可以精簡則為 true，否則為 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-777">True if the node can be reduced, otherwise false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Catch">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-778">建立代表 catch 陳述式的 <see cref="T:System.Linq.Expressions.CatchBlock" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-778">Creates a <see cref="T:System.Linq.Expressions.CatchBlock" /> representing a catch statement.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Catch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.CatchBlock Catch (System.Linq.Expressions.ParameterExpression variable, System.Linq.Expressions.Expression body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.CatchBlock Catch(class System.Linq.Expressions.ParameterExpression variable, class System.Linq.Expressions.Expression body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Catch (variable As ParameterExpression, body As Expression) As CatchBlock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::CatchBlock ^ Catch(System::Linq::Expressions::ParameterExpression ^ variable, System::Linq::Expressions::Expression ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.CatchBlock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Linq.Expressions.ParameterExpression" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="variable">
          <span data-ttu-id="b0929-779">
            <see cref="T:System.Linq.Expressions.ParameterExpression" />，代表這個處理常式所攔截 <see cref="T:System.Exception" /> 物件的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-779">A <see cref="T:System.Linq.Expressions.ParameterExpression" /> representing a reference to the <see cref="T:System.Exception" /> object caught by this handler.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="b0929-780">catch 陳述式的主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-780">The body of the catch statement.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-781">建立 <see cref="T:System.Linq.Expressions.CatchBlock" />，代表包含已攔截 <see cref="T:System.Exception" /> 物件參考的 catch 陳述式，以便用於處理常式主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-781">Creates a <see cref="T:System.Linq.Expressions.CatchBlock" /> representing a catch statement with a reference to the caught <see cref="T:System.Exception" /> object for use in the handler body.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-782">建立的 <see cref="T:System.Linq.Expressions.CatchBlock" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-782">The created <see cref="T:System.Linq.Expressions.CatchBlock" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Catch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.CatchBlock Catch (Type type, System.Linq.Expressions.Expression body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.CatchBlock Catch(class System.Type type, class System.Linq.Expressions.Expression body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::CatchBlock ^ Catch(Type ^ type, System::Linq::Expressions::Expression ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.CatchBlock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b0929-783">這個 <see cref="P:System.Linq.Expressions.Expression.Type" /> 將處理之 <see cref="T:System.Exception" /> 的 <see cref="T:System.Linq.Expressions.CatchBlock" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-783">The <see cref="P:System.Linq.Expressions.Expression.Type" /> of <see cref="T:System.Exception" /> this <see cref="T:System.Linq.Expressions.CatchBlock" /> will handle.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="b0929-784">catch 陳述式的主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-784">The body of the catch statement.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-785">建立代表 catch 陳述式的 <see cref="T:System.Linq.Expressions.CatchBlock" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-785">Creates a <see cref="T:System.Linq.Expressions.CatchBlock" /> representing a catch statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-786">建立的 <see cref="T:System.Linq.Expressions.CatchBlock" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-786">The created <see cref="T:System.Linq.Expressions.CatchBlock" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-787"><xref:System.Linq.Expressions.Expression.Type%2A>的<xref:System.Exception>攔截您可以指定但沒有參考<xref:System.Exception>物件將提供用於<xref:System.Linq.Expressions.CatchBlock>。</span><span class="sxs-lookup"><span data-stu-id="b0929-787">The <xref:System.Linq.Expressions.Expression.Type%2A> of <xref:System.Exception> to be caught can be specified but no reference to the <xref:System.Exception> object will be available for use in the <xref:System.Linq.Expressions.CatchBlock>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Catch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.CatchBlock Catch (System.Linq.Expressions.ParameterExpression variable, System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.CatchBlock Catch(class System.Linq.Expressions.ParameterExpression variable, class System.Linq.Expressions.Expression body, class System.Linq.Expressions.Expression filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Catch (variable As ParameterExpression, body As Expression, filter As Expression) As CatchBlock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::CatchBlock ^ Catch(System::Linq::Expressions::ParameterExpression ^ variable, System::Linq::Expressions::Expression ^ body, System::Linq::Expressions::Expression ^ filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.CatchBlock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Linq.Expressions.ParameterExpression" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="filter" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="variable">
          <span data-ttu-id="b0929-788">
            <see cref="T:System.Linq.Expressions.ParameterExpression" />，代表這個處理常式所攔截 <see cref="T:System.Exception" /> 物件的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-788">A <see cref="T:System.Linq.Expressions.ParameterExpression" /> representing a reference to the <see cref="T:System.Exception" /> object caught by this handler.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="b0929-789">catch 陳述式的主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-789">The body of the catch statement.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="b0929-790">
            <see cref="T:System.Exception" /> 篩選條件的主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-790">The body of the <see cref="T:System.Exception" /> filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-791">建立 <see cref="T:System.Linq.Expressions.CatchBlock" />，代表包含 <see cref="T:System.Exception" /> 篩選條件和已攔截 <see cref="T:System.Exception" /> 物件參考的 catch 陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-791">Creates a <see cref="T:System.Linq.Expressions.CatchBlock" /> representing a catch statement with an <see cref="T:System.Exception" /> filter and a reference to the caught <see cref="T:System.Exception" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-792">建立的 <see cref="T:System.Linq.Expressions.CatchBlock" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-792">The created <see cref="T:System.Linq.Expressions.CatchBlock" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Catch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.CatchBlock Catch (Type type, System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.CatchBlock Catch(class System.Type type, class System.Linq.Expressions.Expression body, class System.Linq.Expressions.Expression filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::CatchBlock ^ Catch(Type ^ type, System::Linq::Expressions::Expression ^ body, System::Linq::Expressions::Expression ^ filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.CatchBlock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="filter" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b0929-793">這個 <see cref="P:System.Linq.Expressions.Expression.Type" /> 將處理之 <see cref="T:System.Exception" /> 的 <see cref="T:System.Linq.Expressions.CatchBlock" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-793">The <see cref="P:System.Linq.Expressions.Expression.Type" /> of <see cref="T:System.Exception" /> this <see cref="T:System.Linq.Expressions.CatchBlock" /> will handle.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="b0929-794">catch 陳述式的主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-794">The body of the catch statement.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="b0929-795">
            <see cref="T:System.Exception" /> 篩選條件的主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-795">The body of the <see cref="T:System.Exception" /> filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-796">建立 <see cref="T:System.Linq.Expressions.CatchBlock" />，代表包含 <see cref="T:System.Exception" /> 篩選條件但沒有已攔截 <see cref="T:System.Exception" /> 物件參考的 catch 陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-796">Creates a <see cref="T:System.Linq.Expressions.CatchBlock" /> representing a catch statement with an <see cref="T:System.Exception" /> filter but no reference to the caught <see cref="T:System.Exception" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-797">建立的 <see cref="T:System.Linq.Expressions.CatchBlock" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-797">The created <see cref="T:System.Linq.Expressions.CatchBlock" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearDebugInfo">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DebugInfoExpression ClearDebugInfo (System.Linq.Expressions.SymbolDocumentInfo document);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DebugInfoExpression ClearDebugInfo(class System.Linq.Expressions.SymbolDocumentInfo document) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClearDebugInfo (document As SymbolDocumentInfo) As DebugInfoExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DebugInfoExpression ^ ClearDebugInfo(System::Linq::Expressions::SymbolDocumentInfo ^ document);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DebugInfoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Linq.Expressions.SymbolDocumentInfo" />
      </Parameters>
      <Docs>
        <param name="document">
          <span data-ttu-id="b0929-798">表示原始程式檔的 <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-798">The <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> that represents the source file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-799">建立用於清除序列點的 <see cref="T:System.Linq.Expressions.DebugInfoExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-799">Creates a <see cref="T:System.Linq.Expressions.DebugInfoExpression" /> for clearing a sequence point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-800">
            <see cref="T:System.Linq.Expressions.DebugInfoExpression" /> 的執行個體，用於清除序列點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-800">An instance of <see cref="T:System.Linq.Expressions.DebugInfoExpression" /> for clearning a sequence point.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Coalesce">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-801">建立代表聯合運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-801">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a coalescing operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Coalesce">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Coalesce (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Coalesce(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Coalesce (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Coalesce(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-802">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-802">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-803">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-803">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-804">建立代表聯合運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-804">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a coalescing operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-805">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Coalesce" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-805">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Coalesce" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-806"><xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性產生<xref:System.Linq.Expressions.BinaryExpression>是`null`，兩者均<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>設為`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-806">The <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.BinaryExpression> is `null` and both <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> are set to `false`.</span></span> <span data-ttu-id="b0929-807"><xref:System.Linq.Expressions.Expression.Type%2A>屬性等於聯合運算的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-807">The <xref:System.Linq.Expressions.Expression.Type%2A> property is equal to the result type of the coalescing operation.</span></span> <span data-ttu-id="b0929-808"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-808">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
#### <a name="result-type"></a><span data-ttu-id="b0929-809">結果類型</span><span class="sxs-lookup"><span data-stu-id="b0929-809">Result Type</span></span>  
 <span data-ttu-id="b0929-810">下列規則決定的結果型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-810">The following rules determine the result type:</span></span>  
  
-   <span data-ttu-id="b0929-811">如果`left`。類型代表可為 null 的類型和`right`。類型是隱含地轉換成對應的非 null 的型別，結果型別是不可為 null 的對等`left`。型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-811">If `left`.Type represents a nullable type and `right`.Type is implicitly convertible to the corresponding non-nullable type, the result type is the non-nullable equivalent of `left`.Type.</span></span>  
  
-   <span data-ttu-id="b0929-812">否則，如果`right`。類型可以隱含轉換成`left`。類型的結果型別是`left`。型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-812">Otherwise, if `right`.Type is implicitly convertible to `left`.Type, the result type is `left`.Type.</span></span>  
  
-   <span data-ttu-id="b0929-813">否則，如果不可為 null 的對等`left`。類型可以隱含轉換成`right`。類型的結果型別是`right`。型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-813">Otherwise, if the non-nullable equivalent of `left`.Type is implicitly convertible to `right`.Type, the result type is `right`.Type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-814">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-814">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-815">
            <paramref name="left" /> 的 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性不表示參考類型或可為 Null 的實值類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-815">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of <paramref name="left" /> does not represent a reference type or a nullable value type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-816">
            <paramref name="left" />.Type 和 <paramref name="right" />.Type 無法相互轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-816">
              <paramref name="left" />.Type and <paramref name="right" />.Type are not convertible to each other.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Coalesce">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Coalesce (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Coalesce(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Coalesce (left As Expression, right As Expression, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Coalesce(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-817">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-817">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-818">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-818">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="b0929-819">要將 <see cref="T:System.Linq.Expressions.LambdaExpression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-819">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-820">指定轉換函式，建立代表聯合運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-820">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a coalescing operation, given a conversion function.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-821">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Coalesce" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-821">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Coalesce" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-822"><xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性產生<xref:System.Linq.Expressions.BinaryExpression>是`null`，兩者均<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>設為`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-822">The <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.BinaryExpression> is `null` and both <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> are set to `false`.</span></span>  
  
 <span data-ttu-id="b0929-823"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.BinaryExpression>等於聯合運算的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-823">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.BinaryExpression> is equal to the result type of the coalescing operation.</span></span>  
  
 <span data-ttu-id="b0929-824">下列規則決定的結果型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-824">The following rules determine the result type:</span></span>  
  
-   <span data-ttu-id="b0929-825">如果`left`。類型代表可為 null 的類型和`right`。類型是隱含地轉換成對應的非 null 的型別，結果型別是不可為 null 的對等`left`。型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-825">If `left`.Type represents a nullable type and `right`.Type is implicitly convertible to the corresponding non-nullable type, the result type is the non-nullable equivalent of `left`.Type.</span></span>  
  
-   <span data-ttu-id="b0929-826">否則，如果`right`。類型可以隱含轉換成`left`。類型的結果型別是`left`。型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-826">Otherwise, if `right`.Type is implicitly convertible to `left`.Type, the result type is `left`.Type.</span></span>  
  
-   <span data-ttu-id="b0929-827">否則，如果不可為 null 的對等`left`。類型可以隱含轉換成`right`。類型的結果型別是`right`。型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-827">Otherwise, if the non-nullable equivalent of `left`.Type is implicitly convertible to `right`.Type, the result type is `right`.Type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-828">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-828">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-829">
            <paramref name="left" />.Type 和 <paramref name="right" />.Type 無法相互轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-829">
              <paramref name="left" />.Type and <paramref name="right" />.Type are not convertible to each other.</span>
          </span>
          <span data-ttu-id="b0929-830">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-830">-or-</span>
          </span>
          <span data-ttu-id="b0929-831">
            <paramref name="conversion" /> 不是 <see langword="null" />，且 <paramref name="conversion" />.Type 為委派類型，其採用的引數不是剛好一個。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-831">
              <paramref name="conversion" /> is not <see langword="null" /> and <paramref name="conversion" />.Type is a delegate type that does not take exactly one argument.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-832">
            <paramref name="left" /> 的 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性不表示參考類型或可為 Null 的實值類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-832">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of <paramref name="left" /> does not represent a reference type or a nullable value type.</span>
          </span>
          <span data-ttu-id="b0929-833">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-833">-or-</span>
          </span>
          <span data-ttu-id="b0929-834">
            <paramref name="left" /> 的 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性所表示的類型無法指派至委派類型 <paramref name="conversion" />.Type 的參數類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-834">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of <paramref name="left" /> represents a type that is not assignable to the parameter type of the delegate type <paramref name="conversion" />.Type.</span>
          </span>
          <span data-ttu-id="b0929-835">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-835">-or-</span>
          </span>
          <span data-ttu-id="b0929-836">
            <paramref name="right" /> 的 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性不等於委派類型 <paramref name="conversion" />.Type 的傳回類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-836">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of <paramref name="right" /> is not equal to the return type of the delegate type <paramref name="conversion" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Condition">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-837">建立表示條件陳述式的 <see cref="T:System.Linq.Expressions.ConditionalExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-837">Creates a <see cref="T:System.Linq.Expressions.ConditionalExpression" /> that represents a conditional statement.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ConditionalExpression Condition (System.Linq.Expressions.Expression test, System.Linq.Expressions.Expression ifTrue, System.Linq.Expressions.Expression ifFalse);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ConditionalExpression Condition(class System.Linq.Expressions.Expression test, class System.Linq.Expressions.Expression ifTrue, class System.Linq.Expressions.Expression ifFalse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Condition (test As Expression, ifTrue As Expression, ifFalse As Expression) As ConditionalExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ConditionalExpression ^ Condition(System::Linq::Expressions::Expression ^ test, System::Linq::Expressions::Expression ^ ifTrue, System::Linq::Expressions::Expression ^ ifFalse);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ConditionalExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="test" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="ifTrue" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="ifFalse" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="test">
          <span data-ttu-id="b0929-838">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-838">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" /> property equal to.</span>
          </span>
        </param>
        <param name="ifTrue">
          <span data-ttu-id="b0929-839">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-839">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" /> property equal to.</span>
          </span>
        </param>
        <param name="ifFalse">
          <span data-ttu-id="b0929-840">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-840">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-841">建立表示條件陳述式的 <see cref="T:System.Linq.Expressions.ConditionalExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-841">Creates a <see cref="T:System.Linq.Expressions.ConditionalExpression" /> that represents a conditional statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-842">
            <see cref="T:System.Linq.Expressions.ConditionalExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Conditional" />，且 <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" />、<see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" /> 和 <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-842">A <see cref="T:System.Linq.Expressions.ConditionalExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Conditional" /> and the <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" />, <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" />, and <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-843"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.ConditionalExpression>等於<xref:System.Linq.Expressions.Expression.Type%2A>屬性`ifTrue`。</span><span class="sxs-lookup"><span data-stu-id="b0929-843">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.ConditionalExpression> is equal to the <xref:System.Linq.Expressions.Expression.Type%2A> property of `ifTrue`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-844">下列程式碼範例示範如何建立表示條件陳述式的運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-844">The following code example shows how to create an expression that represents a conditional statement.</span></span> <span data-ttu-id="b0929-845">如果第一個引數評估為`true`、 第二個引數執行; 否則會執行第三個引數。</span><span class="sxs-lookup"><span data-stu-id="b0929-845">If the first argument evaluates to `true`, the second argument is executed; otherwise, the third argument is executed.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#3)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-846">
            <paramref name="test" />、<paramref name="ifTrue" /> 或 <paramref name="ifFalse" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-846">
              <paramref name="test" /> or <paramref name="ifTrue" /> or <paramref name="ifFalse" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-847">
            <paramref name="test" />.Type 不是 <see cref="T:System.Boolean" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-847">
              <paramref name="test" />.Type is not <see cref="T:System.Boolean" />.</span>
          </span>
          <span data-ttu-id="b0929-848">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-848">-or-</span>
          </span>
          <span data-ttu-id="b0929-849">
            <paramref name="ifTrue" />.Type 不等於 <paramref name="ifFalse" />.Type。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-849">
              <paramref name="ifTrue" />.Type is not equal to <paramref name="ifFalse" />.Type.</span>
          </span>
        </exception>
        <altmember cref="M:System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <altmember cref="M:System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      </Docs>
    </Member>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ConditionalExpression Condition (System.Linq.Expressions.Expression test, System.Linq.Expressions.Expression ifTrue, System.Linq.Expressions.Expression ifFalse, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ConditionalExpression Condition(class System.Linq.Expressions.Expression test, class System.Linq.Expressions.Expression ifTrue, class System.Linq.Expressions.Expression ifFalse, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ConditionalExpression ^ Condition(System::Linq::Expressions::Expression ^ test, System::Linq::Expressions::Expression ^ ifTrue, System::Linq::Expressions::Expression ^ ifFalse, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ConditionalExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="test" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="ifTrue" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="ifFalse" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="test">
          <span data-ttu-id="b0929-850">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-850">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" /> property equal to.</span>
          </span>
        </param>
        <param name="ifTrue">
          <span data-ttu-id="b0929-851">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-851">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" /> property equal to.</span>
          </span>
        </param>
        <param name="ifFalse">
          <span data-ttu-id="b0929-852">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-852">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> property equal to.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="b0929-853">要將 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.Expression.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-853">A <see cref="P:System.Linq.Expressions.Expression.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-854">建立表示條件陳述式的 <see cref="T:System.Linq.Expressions.ConditionalExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-854">Creates a <see cref="T:System.Linq.Expressions.ConditionalExpression" /> that represents a conditional statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-855">
            <see cref="T:System.Linq.Expressions.ConditionalExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Conditional" />，且 <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" />、<see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" /> 和 <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-855">A <see cref="T:System.Linq.Expressions.ConditionalExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Conditional" /> and the <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" />, <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" />, and <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-856">這個方法可讓明確整合案例中的條件運算式的結果型別其中的型別`ifTrue`和`ifFalse`運算式是否不相等。</span><span class="sxs-lookup"><span data-stu-id="b0929-856">This method allows explicitly unifying the result type of the conditional expression in cases where the types of `ifTrue` and `ifFalse` expressions are not equal.</span></span> <span data-ttu-id="b0929-857">這兩種`ifTrue`和`ifFalse`必須可以隱含地參考指派給結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-857">Types of both `ifTrue` and `ifFalse` must be implicitly reference assignable to the result type.</span></span> <span data-ttu-id="b0929-858">`type`允許為<xref:System.Void>。</span><span class="sxs-lookup"><span data-stu-id="b0929-858">The `type` is allowed to be <xref:System.Void>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Constant">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-859">建立 <see cref="T:System.Linq.Expressions.ConstantExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-859">Creates a <see cref="T:System.Linq.Expressions.ConstantExpression" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Constant">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ConstantExpression Constant (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ConstantExpression Constant(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Constant(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Constant (value As Object) As ConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ConstantExpression ^ Constant(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0929-860">要將 <see cref="T:System.Object" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.ConstantExpression.Value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-860">An <see cref="T:System.Object" /> to set the <see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-861">建立 <see cref="T:System.Linq.Expressions.ConstantExpression" />，其 <see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-861">Creates a <see cref="T:System.Linq.Expressions.ConstantExpression" /> that has the <see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> property set to the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-862">
            <see cref="T:System.Linq.Expressions.ConstantExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Constant" />，而 <see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-862">A <see cref="T:System.Linq.Expressions.ConstantExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Constant" /> and the <see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-863"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.ConstantExpression>的型別等於`value`。</span><span class="sxs-lookup"><span data-stu-id="b0929-863">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.ConstantExpression> is equal to the type of `value`.</span></span> <span data-ttu-id="b0929-864">如果`value`是`null`，<xref:System.Linq.Expressions.Expression.Type%2A>等於<xref:System.Object>。</span><span class="sxs-lookup"><span data-stu-id="b0929-864">If `value` is `null`, <xref:System.Linq.Expressions.Expression.Type%2A> is equal to <xref:System.Object>.</span></span>  
  
 <span data-ttu-id="b0929-865">代表`null`，您也可以使用<xref:System.Linq.Expressions.Expression.Constant%28System.Object%2CSystem.Type%29>方法，與您可以明確指定型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-865">To represent `null`, you can also use the <xref:System.Linq.Expressions.Expression.Constant%28System.Object%2CSystem.Type%29> method, with which you can explicitly specify the type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-866">下列程式碼範例示範如何建立代表常數值的運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-866">The following code example shows how to create an expression that represents a constant value.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#4)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Constant">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ConstantExpression Constant (object value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ConstantExpression Constant(object value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Constant(System.Object,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ConstantExpression ^ Constant(System::Object ^ value, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0929-867">要將 <see cref="T:System.Object" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.ConstantExpression.Value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-867">An <see cref="T:System.Object" /> to set the <see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> property equal to.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="b0929-868">要將 <see cref="T:System.Type" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.Expression.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-868">A <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-869">建立 <see cref="T:System.Linq.Expressions.ConstantExpression" />，其 <see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> 和 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-869">Creates a <see cref="T:System.Linq.Expressions.ConstantExpression" /> that has the <see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> and <see cref="P:System.Linq.Expressions.Expression.Type" /> properties set to the specified values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-870">
            <see cref="T:System.Linq.Expressions.ConstantExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Constant" />，且 <see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> 和 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-870">A <see cref="T:System.Linq.Expressions.ConstantExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Constant" /> and the <see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> and <see cref="P:System.Linq.Expressions.Expression.Type" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-871">這個方法可用於代表可為 null 類型的值。</span><span class="sxs-lookup"><span data-stu-id="b0929-871">This method can be useful for representing values of nullable types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-872">下列程式碼範例示範如何建立代表可為 null 類型的常數運算式，並將其值設定為`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-872">The following code example shows how to create an expression that represents a constant of the nullable type and set its value to `null`.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#22)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-873">
            <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-873">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-874">
            <paramref name="value" /> 不為 <see langword="null" />，且 <paramref name="type" /> 無法從 <paramref name="value" /> 的動態類型指派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-874">
              <paramref name="value" /> is not <see langword="null" /> and <paramref name="type" /> is not assignable from the dynamic type of <paramref name="value" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Continue">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-875">建立代表 continue 陳述式的 <see cref="T:System.Linq.Expressions.GotoExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-875">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a continue statement.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Continue">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Continue (System.Linq.Expressions.LabelTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Continue(class System.Linq.Expressions.LabelTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Continue (target As LabelTarget) As GotoExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Continue(System::Linq::Expressions::LabelTarget ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b0929-876">
            <see cref="T:System.Linq.Expressions.LabelTarget" /> 將跳躍的目標 <see cref="T:System.Linq.Expressions.GotoExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-876">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-877">建立代表 continue 陳述式的 <see cref="T:System.Linq.Expressions.GotoExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-877">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a continue statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-878">
            <see cref="T:System.Linq.Expressions.GotoExpression" />，其 <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 等於 Continue、<see cref="P:System.Linq.Expressions.GotoExpression.Target" /> 屬性設定為 <paramref name="target" />，且包含在跳躍時傳遞至目標標籤的 Null 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-878">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Continue, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, and a null value to be passed to the target label upon jumping.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0929-879">下列範例示範如何建立使用的迴圈運算式<xref:System.Linq.Expressions.Expression.Continue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-879">The following example demonstrates how to create a loop expression that uses the <xref:System.Linq.Expressions.Expression.Continue%2A> method.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#46](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#46)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#46](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#46)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Continue">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Continue (System.Linq.Expressions.LabelTarget target, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Continue(class System.Linq.Expressions.LabelTarget target, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Continue(System::Linq::Expressions::LabelTarget ^ target, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b0929-880">
            <see cref="T:System.Linq.Expressions.LabelTarget" /> 將跳躍的目標 <see cref="T:System.Linq.Expressions.GotoExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-880">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="b0929-881">要將 <see cref="T:System.Type" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.Expression.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-881">An <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-882">建立 <see cref="T:System.Linq.Expressions.GotoExpression" />，代表含指定之類型的 continue 陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-882">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a continue statement with the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-883">
            <see cref="T:System.Linq.Expressions.GotoExpression" />，其 <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 等於 Continue、<see cref="P:System.Linq.Expressions.GotoExpression.Target" /> 屬性設定為 <paramref name="target" />、<see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性設定為 <paramref name="type" />，且包含在跳躍時傳遞至目標標籤的 null 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-883">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Continue, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to <paramref name="type" />, and a null value to be passed to the target label upon jumping.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Convert">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-884">建立代表類型轉換作業的 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-884">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a type conversion operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Convert (System.Linq.Expressions.Expression expression, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Convert(class System.Linq.Expressions.Expression expression, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Convert(System::Linq::Expressions::Expression ^ expression, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-885">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-885">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="b0929-886">要將 <see cref="T:System.Type" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.Expression.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-886">A <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-887">建立代表類型轉換作業的 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-887">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a type conversion operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-888">
            <see cref="T:System.Linq.Expressions.UnaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Convert" />，且 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> 和 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-888">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Convert" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> and <see cref="P:System.Linq.Expressions.Expression.Type" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-889"><xref:System.Linq.Expressions.UnaryExpression.Method%2A>屬性產生<xref:System.Linq.Expressions.UnaryExpression>設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-889">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="b0929-890"><xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> 屬性為 `false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-890">The <xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> property is `false`.</span></span> <span data-ttu-id="b0929-891">如果節點已消除，<xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A>是`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-891">If the node is lifted, <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> is `true`.</span></span> <span data-ttu-id="b0929-892">否則為 `false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-892">Otherwise, it is `false`.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-893">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-893">Implementing Method</span></span>  
 <span data-ttu-id="b0929-894">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-894">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-895">如果有任一個`expression`。型別或`type`是使用者定義型別定義隱含或明確轉換運算子，<xref:System.Reflection.MethodInfo>表示的運算子是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-895">If either `expression`.Type or `type` is a user-defined type that defines an implicit or explicit conversion operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-896">否則就是：</span><span class="sxs-lookup"><span data-stu-id="b0929-896">Otherwise:</span></span>  
  
    -   <span data-ttu-id="b0929-897">如果兩個`expression`。型別和`type`代表數值或布林值類型或可為 null 或非可為 null 的列舉類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-897">If both `expression`.Type and `type` represent numeric or Boolean types, or nullable or non-nullable enumeration types, the implementing method is `null`.</span></span>  
  
    -   <span data-ttu-id="b0929-898">如果有任一個`expression`。型別或`type`參考型別且明確的 boxing、 unboxing，或參考轉換`expression`。若要輸入`type`、 實作方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-898">If either `expression`.Type or `type` is a reference type and an explicit boxing, unboxing, or reference conversion exists from `expression`.Type to `type`, the implementing method is `null`.</span></span>  
  
#### <a name="lifted-versus-non-lifted"></a><span data-ttu-id="b0929-899">已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-899">Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-900">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-900">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-901">如果`expression`。類型是指派給實作之方法的引數類型和實作方法的傳回型別是可指派給`type`，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-901">If `expression`.Type is assignable to the argument type of the implementing method and the return type of the implementing method is assignable to `type`, the node is not lifted.</span></span>  
  
-   <span data-ttu-id="b0929-902">如果一或兩個的`expression`。型別或`type`是 null 的實值類型，對應的非可為 null 的實值類型分別等於引數類型和實作方法的傳回型別，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-902">If one or both of `expression`.Type or `type` is a nullable value type and the corresponding non-nullable value types are equal to the argument type and the return type of the implementing method respectively, the node is lifted.</span></span>  
  
 <span data-ttu-id="b0929-903">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-903">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-904">如果兩個`expression`。型別和`type`都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-904">If both `expression`.Type and `type` are non-nullable, the node is not lifted.</span></span>  
  
-   <span data-ttu-id="b0929-905">否則消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-905">Otherwise the node is lifted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-906">下列程式碼範例示範如何建立代表類型轉換作業的運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-906">The following code example shows how to create an expression that represents a type convertion operation.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#23)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-907">
            <paramref name="expression" /> 或 <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-907">
              <paramref name="expression" /> or <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-908">
            <paramref name="expression" />.Type 和 <paramref name="type" /> 之間未定義轉換運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-908">No conversion operator is defined between <paramref name="expression" />.Type and <paramref name="type" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Convert (System.Linq.Expressions.Expression expression, Type type, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Convert(class System.Linq.Expressions.Expression expression, class System.Type type, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Convert(System::Linq::Expressions::Expression ^ expression, Type ^ type, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-909">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-909">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="b0929-910">要將 <see cref="T:System.Type" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.Expression.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-910">A <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-911">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-911">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-912">建立代表轉換作業的 <see cref="T:System.Linq.Expressions.UnaryExpression" />，此轉換作業已指定實作方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-912">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a conversion operation for which the implementing method is specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-913">
            <see cref="T:System.Linq.Expressions.UnaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Convert" />，且 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />、<see cref="P:System.Linq.Expressions.Expression.Type" /> 和 <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-913">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Convert" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />, <see cref="P:System.Linq.Expressions.Expression.Type" />, and <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-914"><xref:System.Linq.Expressions.UnaryExpression.Method%2A>屬性產生<xref:System.Linq.Expressions.UnaryExpression>設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-914">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="b0929-915"><xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> 屬性為 `false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-915">The <xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> property is `false`.</span></span> <span data-ttu-id="b0929-916">如果節點已消除，<xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A>是`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-916">If the node is lifted, <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> is `true`.</span></span> <span data-ttu-id="b0929-917">否則為 `false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-917">Otherwise, it is `false`.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-918">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-918">Implementing Method</span></span>  
 <span data-ttu-id="b0929-919">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-919">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-920">如果方法不`null`，它是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-920">If method is not `null`, it is the implementing method.</span></span> <span data-ttu-id="b0929-921">它必須代表非 void， `static` (`Shared`在 Visual Basic 中) 會採用一個引數的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-921">It must represent a non-void, `static` (`Shared` in Visual Basic) method that takes one argument.</span></span>  
  
-   <span data-ttu-id="b0929-922">否則，如果`expression`。型別或`type`是使用者定義型別定義隱含或明確轉換運算子，<xref:System.Reflection.MethodInfo>表示的運算子是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-922">Otherwise, if either `expression`.Type or `type` is a user-defined type that defines an implicit or explicit conversion operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-923">否則就是：</span><span class="sxs-lookup"><span data-stu-id="b0929-923">Otherwise:</span></span>  
  
    -   <span data-ttu-id="b0929-924">如果兩個`expression`。型別和`type`代表數值或布林值類型或可為 null 或非可為 null 的列舉類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-924">If both `expression`.Type and `type` represent numeric or Boolean types, or nullable or non-nullable enumeration types, the implementing method is `null`.</span></span>  
  
    -   <span data-ttu-id="b0929-925">如果有任一個`expression`。型別或`type`參考型別且明確的 boxing、 unboxing，或參考轉換`expression`。若要輸入`type`、 實作方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-925">If either `expression`.Type or `type` is a reference type and an explicit boxing, unboxing, or reference conversion exists from `expression`.Type to `type`, the implementing method is `null`.</span></span>  
  
#### <a name="lifted-versus-non-lifted"></a><span data-ttu-id="b0929-926">已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-926">Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-927">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-927">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-928">如果`expression`。類型是指派給實作之方法的引數類型和實作方法的傳回型別是可指派給`type`，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-928">If `expression`.Type is assignable to the argument type of the implementing method and the return type of the implementing method is assignable to `type`, the node is not lifted.</span></span>  
  
-   <span data-ttu-id="b0929-929">如果任一或兩者的`expression`。型別或`type`null 的實值類型和分別為相等的引數類型和實作方法的傳回型別對應的非可為 null 的實值類型，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-929">If either or both of `expression`.Type or `type` are a nullable value type and the corresponding non-nullable value types are equal to the argument type and the return type of the implementing method respectively, the node is lifted.</span></span>  
  
 <span data-ttu-id="b0929-930">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-930">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-931">如果兩個`expression`。型別和`type`都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-931">If both `expression`.Type and `type` are non-nullable, the node is not lifted.</span></span>  
  
-   <span data-ttu-id="b0929-932">否則消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-932">Otherwise the node is lifted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-933">
            <paramref name="expression" /> 或 <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-933">
              <paramref name="expression" /> or <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-934">
            <paramref name="method" /> 不是 <see langword="null" />，而且其代表的方法傳回的是 <see langword="void" />，不是 <see langword="static" /> (在 Visual Basic 中為 <see langword="Shared" />)，或者使用的引數不是剛好一個。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-934">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly one argument.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-935">
            <paramref name="expression" />.Type 和 <paramref name="type" /> 之間未定義轉換運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-935">No conversion operator is defined between <paramref name="expression" />.Type and <paramref name="type" />.</span>
          </span>
          <span data-ttu-id="b0929-936">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-936">-or-</span>
          </span>
          <span data-ttu-id="b0929-937">
            <paramref name="expression" />.Type 無法指派給 <paramref name="method" /> 所代表方法的引數類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-937">
              <paramref name="expression" />.Type is not assignable to the argument type of the method represented by <paramref name="method" />.</span>
          </span>
          <span data-ttu-id="b0929-938">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-938">-or-</span>
          </span>
          <span data-ttu-id="b0929-939">
            <paramref name="method" /> 所代表方法的傳回類型無法指派給 <paramref name="type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-939">The return type of the method represented by <paramref name="method" /> is not assignable to <paramref name="type" />.</span>
          </span>
          <span data-ttu-id="b0929-940">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-940">-or-</span>
          </span>
          <span data-ttu-id="b0929-941">
            <paramref name="expression" />.Type 或 <paramref name="type" /> 是不可為 Null 的實值類型，且對應之不可為 Null 的實值類型不等於 <paramref name="method" /> 所表示之方法的引數類型或傳回類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-941">
              <paramref name="expression" />.Type or <paramref name="type" /> is a nullable value type and the corresponding non-nullable value type does not equal the argument type or the return type, respectively, of the method represented by <paramref name="method" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="b0929-942">已找到一個以上的方法符合 <paramref name="method" /> 說明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-942">More than one method that matches the <paramref name="method" /> description was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertChecked">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-943">建立代表轉換作業的 <see cref="T:System.Linq.Expressions.UnaryExpression" />；若目標類型已溢位，此運算式便會擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-943">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a conversion operation that throws an exception if the target type is overflowed.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression ConvertChecked (System.Linq.Expressions.Expression expression, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression ConvertChecked(class System.Linq.Expressions.Expression expression, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ ConvertChecked(System::Linq::Expressions::Expression ^ expression, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-944">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-944">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="b0929-945">要將 <see cref="T:System.Type" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.Expression.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-945">A <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-946">建立代表轉換作業的 <see cref="T:System.Linq.Expressions.UnaryExpression" />；若目標類型已溢位，此運算式便會擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-946">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a conversion operation that throws an exception if the target type is overflowed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-947">
            <see cref="T:System.Linq.Expressions.UnaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.ConvertChecked" />，且 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> 和 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-947">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ConvertChecked" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> and <see cref="P:System.Linq.Expressions.Expression.Type" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-948"><xref:System.Linq.Expressions.UnaryExpression.Method%2A>屬性產生<xref:System.Linq.Expressions.UnaryExpression>設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-948">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="b0929-949"><xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> 屬性為 `false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-949">The <xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> property is `false`.</span></span> <span data-ttu-id="b0929-950">如果節點已消除，<xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A>是`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-950">If the node is lifted, <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> is `true`.</span></span> <span data-ttu-id="b0929-951">否則為 `false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-951">Otherwise, it is `false`.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-952">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-952">Implementing Method</span></span>  
 <span data-ttu-id="b0929-953">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-953">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-954">如果有任一個`expression`。型別或`type`是使用者定義型別定義隱含或明確轉換運算子，<xref:System.Reflection.MethodInfo>表示的運算子是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-954">If either `expression`.Type or `type` is a user-defined type that defines an implicit or explicit conversion operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-955">否則就是：</span><span class="sxs-lookup"><span data-stu-id="b0929-955">Otherwise:</span></span>  
  
    -   <span data-ttu-id="b0929-956">如果兩個`expression`。型別和`type`代表數值或布林值類型或可為 null 或非可為 null 的列舉類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-956">If both `expression`.Type and `type` represent numeric or Boolean types, or nullable or non-nullable enumeration types, the implementing method is `null`.</span></span>  
  
    -   <span data-ttu-id="b0929-957">如果有任一個`expression`。型別或`type`參考型別且明確的 boxing、 unboxing，或參考轉換`expression`。若要輸入`type`、 實作方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-957">If either `expression`.Type or `type` is a reference type and an explicit boxing, unboxing, or reference conversion exists from `expression`.Type to `type`, the implementing method is `null`.</span></span>  
  
#### <a name="lifted-versus-non-lifted"></a><span data-ttu-id="b0929-958">已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-958">Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-959">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-959">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-960">如果`expression`。類型是指派給實作之方法的引數類型和實作方法的傳回型別是可指派給`type`，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-960">If `expression`.Type is assignable to the argument type of the implementing method and the return type of the implementing method is assignable to `type`, the node is not lifted.</span></span>  
  
-   <span data-ttu-id="b0929-961">如果任一或兩者的`expression`。型別或`type`null 的實值類型和分別為相等的引數類型和實作方法的傳回型別對應的非可為 null 的實值類型，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-961">If either or both of `expression`.Type or `type` are a nullable value type and the corresponding non-nullable value types are equal to the argument type and the return type of the implementing method respectively, the node is lifted.</span></span>  
  
 <span data-ttu-id="b0929-962">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-962">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-963">如果兩個`expression`。型別和`type`都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-963">If both `expression`.Type and `type` are non-nullable, the node is not lifted.</span></span>  
  
-   <span data-ttu-id="b0929-964">否則消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-964">Otherwise the node is lifted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-965">
            <paramref name="expression" /> 或 <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-965">
              <paramref name="expression" /> or <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-966">
            <paramref name="expression" />.Type 和 <paramref name="type" /> 之間未定義轉換運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-966">No conversion operator is defined between <paramref name="expression" />.Type and <paramref name="type" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression ConvertChecked (System.Linq.Expressions.Expression expression, Type type, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression ConvertChecked(class System.Linq.Expressions.Expression expression, class System.Type type, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ ConvertChecked(System::Linq::Expressions::Expression ^ expression, Type ^ type, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-967">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-967">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="b0929-968">要將 <see cref="T:System.Type" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.Expression.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-968">A <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-969">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-969">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-970">建立代表轉換作業的 <see cref="T:System.Linq.Expressions.UnaryExpression" />，如果目標類型已溢位，且已指定此作業的實作方法，則此作業會擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-970">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a conversion operation that throws an exception if the target type is overflowed and for which the implementing method is specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-971">
            <see cref="T:System.Linq.Expressions.UnaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.ConvertChecked" />，且 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />、<see cref="P:System.Linq.Expressions.Expression.Type" /> 和 <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-971">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ConvertChecked" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />, <see cref="P:System.Linq.Expressions.Expression.Type" />, and <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-972"><xref:System.Linq.Expressions.UnaryExpression.Method%2A>屬性產生<xref:System.Linq.Expressions.UnaryExpression>設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-972">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="b0929-973"><xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> 屬性為 `false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-973">The <xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> property is `false`.</span></span> <span data-ttu-id="b0929-974">如果節點已消除，<xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A>是`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-974">If the node is lifted, <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> is `true`.</span></span> <span data-ttu-id="b0929-975">否則為 `false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-975">Otherwise, it is `false`.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-976">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-976">Implementing Method</span></span>  
 <span data-ttu-id="b0929-977">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-977">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-978">如果方法不`null`，它是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-978">If method is not `null`, it is the implementing method.</span></span> <span data-ttu-id="b0929-979">它必須代表非 void， `static` (`Shared`在 Visual Basic 中) 會採用一個引數的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-979">It must represent a non-void, `static` (`Shared` in Visual Basic) method that takes one argument.</span></span>  
  
-   <span data-ttu-id="b0929-980">否則，如果`expression`。型別或`type`是使用者定義型別定義隱含或明確轉換運算子，<xref:System.Reflection.MethodInfo>表示的運算子是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-980">Otherwise, if either `expression`.Type or `type` is a user-defined type that defines an implicit or explicit conversion operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-981">否則就是：</span><span class="sxs-lookup"><span data-stu-id="b0929-981">Otherwise:</span></span>  
  
    -   <span data-ttu-id="b0929-982">如果兩個`expression`。型別和`type`代表數值或布林值類型或可為 null 或非可為 null 的列舉類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-982">If both `expression`.Type and `type` represent numeric or Boolean types, or nullable or non-nullable enumeration types, the implementing method is `null`.</span></span>  
  
    -   <span data-ttu-id="b0929-983">如果有任一個`expression`。型別或`type`參考型別且明確的 boxing、 unboxing，或參考轉換`expression`。若要輸入`type`、 實作方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-983">If either `expression`.Type or `type` is a reference type and an explicit boxing, unboxing, or reference conversion exists from `expression`.Type to `type`, the implementing method is `null`.</span></span>  
  
#### <a name="lifted-versus-non-lifted"></a><span data-ttu-id="b0929-984">已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-984">Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-985">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-985">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-986">如果`expression`。類型是指派給實作之方法的引數類型和實作方法的傳回型別是可指派給`type`，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-986">If `expression`.Type is assignable to the argument type of the implementing method and the return type of the implementing method is assignable to `type`, the node is not lifted.</span></span>  
  
-   <span data-ttu-id="b0929-987">如果任一或兩者的`expression`。型別或`type`null 的實值類型和分別為相等的引數類型和實作方法的傳回型別對應的非可為 null 的實值類型，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-987">If either or both of `expression`.Type or `type` are a nullable value type and the corresponding non-nullable value types are equal to the argument type and the return type of the implementing method respectively, the node is lifted.</span></span>  
  
 <span data-ttu-id="b0929-988">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-988">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-989">如果兩個`expression`。型別和`type`都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-989">If both `expression`.Type and `type` are non-nullable, the node is not lifted.</span></span>  
  
-   <span data-ttu-id="b0929-990">否則消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-990">Otherwise the node is lifted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-991">
            <paramref name="expression" /> 或 <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-991">
              <paramref name="expression" /> or <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-992">
            <paramref name="method" /> 不是 <see langword="null" />，而且其代表的方法傳回的是 <see langword="void" />，不是 <see langword="static" /> (在 Visual Basic 中為 <see langword="Shared" />)，或者使用的引數不是剛好一個。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-992">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly one argument.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-993">
            <paramref name="expression" />.Type 和 <paramref name="type" /> 之間未定義轉換運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-993">No conversion operator is defined between <paramref name="expression" />.Type and <paramref name="type" />.</span>
          </span>
          <span data-ttu-id="b0929-994">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-994">-or-</span>
          </span>
          <span data-ttu-id="b0929-995">
            <paramref name="expression" />.Type 無法指派給 <paramref name="method" /> 所代表方法的引數類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-995">
              <paramref name="expression" />.Type is not assignable to the argument type of the method represented by <paramref name="method" />.</span>
          </span>
          <span data-ttu-id="b0929-996">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-996">-or-</span>
          </span>
          <span data-ttu-id="b0929-997">
            <paramref name="method" /> 所代表方法的傳回類型無法指派給 <paramref name="type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-997">The return type of the method represented by <paramref name="method" /> is not assignable to <paramref name="type" />.</span>
          </span>
          <span data-ttu-id="b0929-998">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-998">-or-</span>
          </span>
          <span data-ttu-id="b0929-999">
            <paramref name="expression" />.Type 或 <paramref name="type" /> 是不可為 Null 的實值類型，且對應之不可為 Null 的實值類型不等於 <paramref name="method" /> 所表示之方法的引數類型或傳回類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-999">
              <paramref name="expression" />.Type or <paramref name="type" /> is a nullable value type and the corresponding non-nullable value type does not equal the argument type or the return type, respectively, of the method represented by <paramref name="method" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">
          <span data-ttu-id="b0929-1000">已找到一個以上的方法符合 <paramref name="method" /> 說明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1000">More than one method that matches the <paramref name="method" /> description was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DebugInfo">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DebugInfoExpression DebugInfo (System.Linq.Expressions.SymbolDocumentInfo document, int startLine, int startColumn, int endLine, int endColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DebugInfoExpression DebugInfo(class System.Linq.Expressions.SymbolDocumentInfo document, int32 startLine, int32 startColumn, int32 endLine, int32 endColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DebugInfo (document As SymbolDocumentInfo, startLine As Integer, startColumn As Integer, endLine As Integer, endColumn As Integer) As DebugInfoExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DebugInfoExpression ^ DebugInfo(System::Linq::Expressions::SymbolDocumentInfo ^ document, int startLine, int startColumn, int endLine, int endColumn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DebugInfoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Linq.Expressions.SymbolDocumentInfo" />
        <Parameter Name="startLine" Type="System.Int32" />
        <Parameter Name="startColumn" Type="System.Int32" />
        <Parameter Name="endLine" Type="System.Int32" />
        <Parameter Name="endColumn" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="document">
          <span data-ttu-id="b0929-1001">表示原始程式檔的 <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1001">The <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> that represents the source file.</span>
          </span>
        </param>
        <param name="startLine">
          <span data-ttu-id="b0929-1002">這個 <see cref="T:System.Linq.Expressions.DebugInfoExpression" /> 的起始行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1002">The start line of this <see cref="T:System.Linq.Expressions.DebugInfoExpression" />.</span>
          </span>
          <span data-ttu-id="b0929-1003">必須大於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1003">Must be greater than 0.</span>
          </span>
        </param>
        <param name="startColumn">
          <span data-ttu-id="b0929-1004">這個 <see cref="T:System.Linq.Expressions.DebugInfoExpression" /> 的起始欄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1004">The start column of this <see cref="T:System.Linq.Expressions.DebugInfoExpression" />.</span>
          </span>
          <span data-ttu-id="b0929-1005">必須大於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1005">Must be greater than 0.</span>
          </span>
        </param>
        <param name="endLine">
          <span data-ttu-id="b0929-1006">這個 <see cref="T:System.Linq.Expressions.DebugInfoExpression" /> 的結尾行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1006">The end line of this <see cref="T:System.Linq.Expressions.DebugInfoExpression" />.</span>
          </span>
          <span data-ttu-id="b0929-1007">必須大於或等於起始行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1007">Must be greater or equal than the start line.</span>
          </span>
        </param>
        <param name="endColumn">
          <span data-ttu-id="b0929-1008">這個 <see cref="T:System.Linq.Expressions.DebugInfoExpression" /> 的結尾欄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1008">The end column of this <see cref="T:System.Linq.Expressions.DebugInfoExpression" />.</span>
          </span>
          <span data-ttu-id="b0929-1009">如果結尾行與起始行相同，則結尾欄必須大於或等於起始欄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1009">If the end line is the same as the start line, it must be greater or equal than the start column.</span>
          </span>
          <span data-ttu-id="b0929-1010">在任何情況下，都必須大於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1010">In any case, must be greater than 0.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1011">使用指定的時間範圍建立 <see cref="T:System.Linq.Expressions.DebugInfoExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1011">Creates a <see cref="T:System.Linq.Expressions.DebugInfoExpression" /> with the specified span.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1012">
            <see cref="T:System.Linq.Expressions.DebugInfoExpression" /> 的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1012">An instance of <see cref="T:System.Linq.Expressions.DebugInfoExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Decrement">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-1013">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，代表運算式遞減 1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1013">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the decrementing of the expression by 1.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Decrement">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Decrement (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Decrement(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Decrement(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-1014">要遞減的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1014">An <see cref="T:System.Linq.Expressions.Expression" /> to decrement.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1015">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，代表運算式遞減 1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1015">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the decrementing of the expression by 1.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1016">代表遞減後運算式的 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1016">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the decremented expression.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1017">這個運算式會正常運作，不會變更物件傳遞給它的值。</span><span class="sxs-lookup"><span data-stu-id="b0929-1017">This expression is functional and does not change the value of the object passed to it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-1018">下列程式碼範例示範如何從指定的值建立該 substracts 1 的運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-1018">The following code example shows how to create an expression that substracts 1 from a given value.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#5)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Decrement">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Decrement (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Decrement(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Decrement(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-1019">要遞減的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1019">An <see cref="T:System.Linq.Expressions.Expression" /> to decrement.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-1020">表示實作方法的 <see cref="T:System.Reflection.MethodInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1020">A <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1021">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，代表運算式遞減 1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1021">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the decrementing of the expression by 1.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1022">代表遞減後運算式的 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1022">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the decremented expression.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1023">這個運算式會正常運作，不會變更物件傳遞給它的值。</span><span class="sxs-lookup"><span data-stu-id="b0929-1023">This expression is functional and does not change the value of the object passed to it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DefaultExpression Default (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DefaultExpression Default(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Default(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DefaultExpression ^ Default(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DefaultExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b0929-1024">要將 <see cref="T:System.Type" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.Expression.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1024">A <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1025">建立 <see cref="T:System.Linq.Expressions.DefaultExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性設定為指定的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1025">Creates a <see cref="T:System.Linq.Expressions.DefaultExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1026">
            <see cref="T:System.Linq.Expressions.DefaultExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Default" />，而 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性設定為指定的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1026">A <see cref="T:System.Linq.Expressions.DefaultExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Default" /> and the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0929-1027">下列程式碼範例示範如何建立代表指定類型的預設值的運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-1027">The following code example shows how to create an expression that represents a default vaule for a given type.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#6)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Divide">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-1028">建立代表算術除法運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1028">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic division operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Divide (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Divide(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Divide (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Divide(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-1029">將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1029">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-1030">將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1030">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1031">建立代表算術除法運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1031">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic division operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1032">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Divide" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1032">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Divide" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1033">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1033">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-1034"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-1034">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-1035">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1035">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-1036">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1036">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-1037"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1037">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-1038">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-1038">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-1039">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-1039">Implementing Method</span></span>  
 <span data-ttu-id="b0929-1040">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-1040">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-1041">如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載除法運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1041">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the division operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1042">否則，如果`left`。型別和`right`。類型為數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1042">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-1043">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-1043">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-1044">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1044">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1045">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1045">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-1046">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1046">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1047">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-1047">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-1048">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1048">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-1049">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-1049">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-1050">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1050">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1051">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1051">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-1052">節點的類型是預先定義的除法運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1052">The type of the node is the result type of the predefined division operator.</span></span>  
  
-   <span data-ttu-id="b0929-1053">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1053">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-1054">節點的類型為 null 的型別對應至預先定義的除法運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1054">The type of the node is the nullable type that corresponds to the result type of the predefined division operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-1055">下列程式碼範例會示範如何建立一個除以除以運算式的第二個引數其第一個引數。</span><span class="sxs-lookup"><span data-stu-id="b0929-1055">The following code example shows how to create an expression that divides divides its first argument by its second argument.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#7)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-1056">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1056">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-1057">不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義 Division 運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1057">The division operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Divide (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Divide(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Divide (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Divide(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-1058">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1058">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-1059">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1059">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-1060">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1060">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1061">建立代表算術除法運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1061">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic division operation.</span>
          </span>
          <span data-ttu-id="b0929-1062">實作的方法可加以指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1062">The implementing method can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1063">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Divide" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1063">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Divide" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1064">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1064">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-1065"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-1065">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-1066">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1066">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-1067">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1067">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-1068"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1068">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-1069">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-1069">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-1070">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-1070">Implementing Method</span></span>  
 <span data-ttu-id="b0929-1071">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-1071">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-1072">如果`method`不`null`，而它代表非 void， `static` (`Shared`在 Visual Basic 中) 採用兩個引數，方法是節點的實作方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1072">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="b0929-1073">否則，如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載除法運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1073">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the division operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1074">否則，如果`left`。型別和`right`。類型為數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1074">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-1075">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-1075">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-1076">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1076">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1077">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1077">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-1078">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1078">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1079">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-1079">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-1080">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1080">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-1081">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-1081">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-1082">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1082">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1083">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1083">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-1084">節點的類型是預先定義的除法運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1084">The type of the node is the result type of the predefined division operator.</span></span>  
  
-   <span data-ttu-id="b0929-1085">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1085">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-1086">節點的類型為 null 的型別對應至預先定義的除法運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1086">The type of the node is the nullable type that corresponds to the result type of the predefined division operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-1087">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1087">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-1088">
            <paramref name="method" /> 不是 <see langword="null" />，而它所代表的方法會傳回 <see langword="void" />、不是 <see langword="static" /> (Visual Basic 中的 <see langword="Shared" />)，或者未確切採用兩個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1088">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-1089">
            <paramref name="method" /> 是 <see langword="null" />，而且未定義 <paramref name="left" />.Type 和 <paramref name="right" />.Type 的除法運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1089">
              <paramref name="method" /> is <see langword="null" /> and the division operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DivideAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-1090">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，代表不含溢位檢查的除法指派運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1090">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a division assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DivideAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression DivideAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression DivideAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivideAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ DivideAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-1091">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1091">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-1092">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1092">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1093">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，代表不含溢位檢查的除法指派運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1093">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a division assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1094">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.DivideAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1094">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.DivideAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DivideAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression DivideAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression DivideAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivideAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ DivideAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-1095">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1095">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-1096">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1096">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-1097">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1097">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1098">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，代表不含溢位檢查的除法指派運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1098">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a division assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1099">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.DivideAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1099">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.DivideAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DivideAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression DivideAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression DivideAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivideAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ DivideAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-1100">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1100">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-1101">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1101">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-1102">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1102">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="b0929-1103">要將 <see cref="T:System.Linq.Expressions.LambdaExpression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1103">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1104">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，代表不含溢位檢查的除法指派運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1104">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a division assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1105">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.DivideAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1105">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.DivideAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dynamic">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-1106">建立代表動態運算的 <see cref="T:System.Linq.Expressions.DynamicExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1106">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression Dynamic(class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Type returnType, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Dynamic (binder As CallSiteBinder, returnType As Type, arguments As IEnumerable(Of Expression)) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ Dynamic(System::Runtime::CompilerServices::CallSiteBinder ^ binder, Type ^ returnType, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="binder">
          <span data-ttu-id="b0929-1107">動態作業的執行階段繫結器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1107">The runtime binder for the dynamic operation.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="b0929-1108">動態運算式的結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1108">The result type of the dynamic expression.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="b0929-1109">動態作業的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1109">The arguments to the dynamic operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1110">建立 <see cref="T:System.Linq.Expressions.DynamicExpression" />，代表指定之 <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> 所繫結的動態運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1110">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1111">
            <see cref="T:System.Linq.Expressions.DynamicExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 等於 <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" />，且 <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> 和 <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> 設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1111">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1112"><xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A>結果屬性會推斷類型的引數，並指定傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1112">The <xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> property of the result will be inferred from the types of the arguments and the specified return type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Linq.Expressions.Expression arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression Dynamic(class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Type returnType, class System.Linq.Expressions.Expression arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Dynamic (binder As CallSiteBinder, returnType As Type, arg0 As Expression) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ Dynamic(System::Runtime::CompilerServices::CallSiteBinder ^ binder, Type ^ returnType, System::Linq::Expressions::Expression ^ arg0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="binder">
          <span data-ttu-id="b0929-1113">動態作業的執行階段繫結器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1113">The runtime binder for the dynamic operation.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="b0929-1114">動態運算式的結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1114">The result type of the dynamic expression.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="b0929-1115">動態作業的第一個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1115">The first argument to the dynamic operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1116">建立 <see cref="T:System.Linq.Expressions.DynamicExpression" />，代表指定之 <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> 所繫結的動態運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1116">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1117">
            <see cref="T:System.Linq.Expressions.DynamicExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 等於 <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" />，且 <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> 和 <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> 設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1117">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1118"><xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A>結果屬性會推斷類型的引數，並指定傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1118">The <xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> property of the result will be inferred from the types of the arguments and the specified return type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression Dynamic(class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Type returnType, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Dynamic (binder As CallSiteBinder, returnType As Type, ParamArray arguments As Expression()) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ Dynamic(System::Runtime::CompilerServices::CallSiteBinder ^ binder, Type ^ returnType, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="binder">
          <span data-ttu-id="b0929-1119">動態作業的執行階段繫結器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1119">The runtime binder for the dynamic operation.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="b0929-1120">動態運算式的結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1120">The result type of the dynamic expression.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="b0929-1121">動態作業的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1121">The arguments to the dynamic operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1122">建立 <see cref="T:System.Linq.Expressions.DynamicExpression" />，代表指定之 <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> 所繫結的動態運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1122">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1123">
            <see cref="T:System.Linq.Expressions.DynamicExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 等於 <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" />，且 <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> 和 <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> 設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1123">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1124"><xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A>結果屬性會推斷類型的引數，並指定傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1124">The <xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> property of the result will be inferred from the types of the arguments and the specified return type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression Dynamic(class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Type returnType, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Dynamic (binder As CallSiteBinder, returnType As Type, arg0 As Expression, arg1 As Expression) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ Dynamic(System::Runtime::CompilerServices::CallSiteBinder ^ binder, Type ^ returnType, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="binder">
          <span data-ttu-id="b0929-1125">動態作業的執行階段繫結器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1125">The runtime binder for the dynamic operation.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="b0929-1126">動態運算式的結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1126">The result type of the dynamic expression.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="b0929-1127">動態作業的第一個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1127">The first argument to the dynamic operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="b0929-1128">傳遞至動態作業的第二個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1128">The second argument to the dynamic operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1129">建立 <see cref="T:System.Linq.Expressions.DynamicExpression" />，代表指定之 <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> 所繫結的動態運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1129">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1130">
            <see cref="T:System.Linq.Expressions.DynamicExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 等於 <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" />，且 <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> 和 <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> 設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1130">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1131"><xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A>結果屬性會推斷類型的引數，並指定傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1131">The <xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> property of the result will be inferred from the types of the arguments and the specified return type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression Dynamic(class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Type returnType, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Dynamic (binder As CallSiteBinder, returnType As Type, arg0 As Expression, arg1 As Expression, arg2 As Expression) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ Dynamic(System::Runtime::CompilerServices::CallSiteBinder ^ binder, Type ^ returnType, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="binder">
          <span data-ttu-id="b0929-1132">動態作業的執行階段繫結器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1132">The runtime binder for the dynamic operation.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="b0929-1133">動態運算式的結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1133">The result type of the dynamic expression.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="b0929-1134">動態作業的第一個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1134">The first argument to the dynamic operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="b0929-1135">傳遞至動態作業的第二個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1135">The second argument to the dynamic operation.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="b0929-1136">傳遞至動態作業的第三個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1136">The third argument to the dynamic operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1137">建立 <see cref="T:System.Linq.Expressions.DynamicExpression" />，代表指定之 <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> 所繫結的動態運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1137">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1138">
            <see cref="T:System.Linq.Expressions.DynamicExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 等於 <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" />，且 <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> 和 <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> 設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1138">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1139"><xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A>結果屬性會推斷類型的引數，並指定傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1139">The <xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> property of the result will be inferred from the types of the arguments and the specified return type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression Dynamic(class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Type returnType, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2, class System.Linq.Expressions.Expression arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Dynamic (binder As CallSiteBinder, returnType As Type, arg0 As Expression, arg1 As Expression, arg2 As Expression, arg3 As Expression) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ Dynamic(System::Runtime::CompilerServices::CallSiteBinder ^ binder, Type ^ returnType, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2, System::Linq::Expressions::Expression ^ arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg3" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="binder">
          <span data-ttu-id="b0929-1140">動態作業的執行階段繫結器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1140">The runtime binder for the dynamic operation.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="b0929-1141">動態運算式的結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1141">The result type of the dynamic expression.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="b0929-1142">動態作業的第一個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1142">The first argument to the dynamic operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="b0929-1143">傳遞至動態作業的第二個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1143">The second argument to the dynamic operation.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="b0929-1144">傳遞至動態作業的第三個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1144">The third argument to the dynamic operation.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="b0929-1145">傳遞至動態運算的第四個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1145">The fourth argument to the dynamic operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1146">建立 <see cref="T:System.Linq.Expressions.DynamicExpression" />，代表指定之 <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> 所繫結的動態運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1146">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1147">
            <see cref="T:System.Linq.Expressions.DynamicExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 等於 <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" />，且 <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> 和 <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> 設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1147">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1148"><xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A>結果屬性會推斷類型的引數，並指定傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1148">The <xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> property of the result will be inferred from the types of the arguments and the specified return type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ElementInit">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-1149">建立 <see cref="T:System.Linq.Expressions.ElementInit" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1149">Creates an <see cref="T:System.Linq.Expressions.ElementInit" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ElementInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ElementInit ElementInit (System.Reflection.MethodInfo addMethod, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ElementInit ElementInit(class System.Reflection.MethodInfo addMethod, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ElementInit (addMethod As MethodInfo, arguments As IEnumerable(Of Expression)) As ElementInit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ElementInit ^ ElementInit(System::Reflection::MethodInfo ^ addMethod, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ElementInit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="addMethod">
          <span data-ttu-id="b0929-1150">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.ElementInit.AddMethod" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1150">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.ElementInit.AddMethod" /> property equal to.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="b0929-1151">
            <see cref="T:System.Collections.Generic.IEnumerable`1" />，包含要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.ElementInit.Arguments" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1151">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to set the <see cref="P:System.Linq.Expressions.ElementInit.Arguments" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1152">指定 <see cref="T:System.Linq.Expressions.ElementInit" /> 做為第二個引數，建立 <see cref="T:System.Collections.Generic.IEnumerable`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1152">Creates an <see cref="T:System.Linq.Expressions.ElementInit" />, given an <see cref="T:System.Collections.Generic.IEnumerable`1" /> as the second argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1153">
            <see cref="T:System.Linq.Expressions.ElementInit" />，其 <see cref="P:System.Linq.Expressions.ElementInit.AddMethod" /> 和 <see cref="P:System.Linq.Expressions.ElementInit.Arguments" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1153">An <see cref="T:System.Linq.Expressions.ElementInit" /> that has the <see cref="P:System.Linq.Expressions.ElementInit.AddMethod" /> and <see cref="P:System.Linq.Expressions.ElementInit.Arguments" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1154">`addMethod`參數必須代表名為"Add"（不區分大小寫） 的執行個體方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1154">The `addMethod` parameter must represent an instance method named "Add" (case insensitive).</span></span> <span data-ttu-id="b0929-1155">加入方法必須有相同數量的參數中的項目數為`arguments`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1155">The add method must have the same number of parameters as the number of elements in `arguments`.</span></span> <span data-ttu-id="b0929-1156"><xref:System.Linq.Expressions.Expression.Type%2A>屬性中的每個項目的`arguments`必須是指派給新增的方法，與對應參數的型別可能之後*用引號括住*。</span><span class="sxs-lookup"><span data-stu-id="b0929-1156">The <xref:System.Linq.Expressions.Expression.Type%2A> property of each element in `arguments` must be assignable to the type of the corresponding parameter of the add method, possibly after *quoting*.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b0929-1157">只有當對應的方法參數的類型是項目會用引號括<xref:System.Linq.Expressions.Expression>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1157">An element will be quoted only if the corresponding method parameter is of type <xref:System.Linq.Expressions.Expression>.</span></span> <span data-ttu-id="b0929-1158">引號的表示項目包裝在<xref:System.Linq.Expressions.ExpressionType.Quote>節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1158">Quoting means the element is wrapped in a <xref:System.Linq.Expressions.ExpressionType.Quote> node.</span></span> <span data-ttu-id="b0929-1159">產生的節點是<xref:System.Linq.Expressions.UnaryExpression>其<xref:System.Linq.Expressions.UnaryExpression.Operand%2A>屬性則是項目`arguments`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1159">The resulting node is a <xref:System.Linq.Expressions.UnaryExpression> whose <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> property is the element of `arguments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-1160">下列範例示範如何使用<xref:System.Linq.Expressions.Expression.ElementInit%28System.Reflection.MethodInfo%2CSystem.Linq.Expressions.Expression%5B%5D%29>方法來建立<xref:System.Linq.Expressions.ElementInit>，代表呼叫<xref:System.Collections.Generic.Dictionary%602.Add%2A>方法來初始化字典集合的項目。</span><span class="sxs-lookup"><span data-stu-id="b0929-1160">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.ElementInit%28System.Reflection.MethodInfo%2CSystem.Linq.Expressions.Expression%5B%5D%29> method to create an <xref:System.Linq.Expressions.ElementInit> that represents calling the <xref:System.Collections.Generic.Dictionary%602.Add%2A> method to initialize an element of a dictionary collection.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#4)]
 [!code-vb[System.Linq.Expressions.Expression#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-1161">
            <paramref name="addMethod" /> 或 <paramref name="arguments" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1161">
              <paramref name="addMethod" /> or <paramref name="arguments" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-1162">未將 <paramref name="addMethod" /> 所代表的方法命名為 "Add" (不區分大小寫)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1162">The method that <paramref name="addMethod" /> represents is not named "Add" (case insensitive).</span>
          </span>
          <span data-ttu-id="b0929-1163">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1163">-or-</span>
          </span>
          <span data-ttu-id="b0929-1164">
            <paramref name="addMethod" /> 所代表的方法不是執行個體方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1164">The method that <paramref name="addMethod" /> represents is not an instance method.</span>
          </span>
          <span data-ttu-id="b0929-1165">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1165">-or-</span>
          </span>
          <span data-ttu-id="b0929-1166">
            <paramref name="arguments" /> 所包含的項目數與 <paramref name="addMethod" /> 所代表之方法的參數數目不同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1166">
              <paramref name="arguments" /> does not contain the same number of elements as the number of parameters for the method that <paramref name="addMethod" /> represents.</span>
          </span>
          <span data-ttu-id="b0929-1167">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1167">-or-</span>
          </span>
          <span data-ttu-id="b0929-1168">
            <paramref name="arguments" /> 的一或多個項目的 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性無法指派給 <paramref name="addMethod" /> 所代表之方法的對應參數類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1168">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of one or more elements of <paramref name="arguments" /> is not assignable to the type of the corresponding parameter of the method that <paramref name="addMethod" /> represents.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ElementInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ElementInit ElementInit (System.Reflection.MethodInfo addMethod, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ElementInit ElementInit(class System.Reflection.MethodInfo addMethod, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ElementInit (addMethod As MethodInfo, ParamArray arguments As Expression()) As ElementInit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ElementInit ^ ElementInit(System::Reflection::MethodInfo ^ addMethod, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ElementInit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="addMethod">
          <span data-ttu-id="b0929-1169">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.ElementInit.AddMethod" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1169">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.ElementInit.AddMethod" /> property equal to.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="b0929-1170">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.ElementInit.Arguments" /> 物件陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1170">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects to set the <see cref="P:System.Linq.Expressions.ElementInit.Arguments" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1171">指定值陣列做為第二個引數，建立 <see cref="T:System.Linq.Expressions.ElementInit" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1171">Creates an <see cref="T:System.Linq.Expressions.ElementInit" />, given an array of values as the second argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1172">
            <see cref="T:System.Linq.Expressions.ElementInit" />，其 <see cref="P:System.Linq.Expressions.ElementInit.AddMethod" /> 和 <see cref="P:System.Linq.Expressions.ElementInit.Arguments" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1172">An <see cref="T:System.Linq.Expressions.ElementInit" /> that has the <see cref="P:System.Linq.Expressions.ElementInit.AddMethod" /> and <see cref="P:System.Linq.Expressions.ElementInit.Arguments" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1173">`addMethod`參數必須代表名為"Add"（不區分大小寫） 的執行個體方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1173">The `addMethod` parameter must represent an instance method named "Add" (case insensitive).</span></span> <span data-ttu-id="b0929-1174">加入方法必須有相同數量的參數中的項目數為`arguments`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1174">The add method must have the same number of parameters as the number of elements in `arguments`.</span></span> <span data-ttu-id="b0929-1175"><xref:System.Linq.Expressions.Expression.Type%2A>屬性中的每個項目的`arguments`必須是指派給新增的方法，與對應參數的型別可能之後*用引號括住*。</span><span class="sxs-lookup"><span data-stu-id="b0929-1175">The <xref:System.Linq.Expressions.Expression.Type%2A> property of each element in `arguments` must be assignable to the type of the corresponding parameter of the add method, possibly after *quoting*.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b0929-1176">只有當對應的方法參數的類型是項目會用引號括<xref:System.Linq.Expressions.Expression>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1176">An element will be quoted only if the corresponding method parameter is of type <xref:System.Linq.Expressions.Expression>.</span></span> <span data-ttu-id="b0929-1177">引號的表示項目包裝在<xref:System.Linq.Expressions.ExpressionType.Quote>節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1177">Quoting means the element is wrapped in a <xref:System.Linq.Expressions.ExpressionType.Quote> node.</span></span> <span data-ttu-id="b0929-1178">產生的節點是<xref:System.Linq.Expressions.UnaryExpression>其<xref:System.Linq.Expressions.UnaryExpression.Operand%2A>屬性則是項目`arguments`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1178">The resulting node is a <xref:System.Linq.Expressions.UnaryExpression> whose <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> property is the element of `arguments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-1179">下列範例示範如何使用<xref:System.Linq.Expressions.Expression.ElementInit%28System.Reflection.MethodInfo%2CSystem.Linq.Expressions.Expression%5B%5D%29>方法來建立<xref:System.Linq.Expressions.ElementInit>，代表呼叫<xref:System.Collections.Generic.Dictionary%602.Add%2A>方法來初始化字典集合的項目。</span><span class="sxs-lookup"><span data-stu-id="b0929-1179">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.ElementInit%28System.Reflection.MethodInfo%2CSystem.Linq.Expressions.Expression%5B%5D%29> method to create an <xref:System.Linq.Expressions.ElementInit> that represents calling the <xref:System.Collections.Generic.Dictionary%602.Add%2A> method to initialize an element of a dictionary collection.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#4)]
 [!code-vb[System.Linq.Expressions.Expression#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-1180">
            <paramref name="addMethod" /> 或 <paramref name="arguments" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1180">
              <paramref name="addMethod" /> or <paramref name="arguments" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-1181">addMethod 所表示的方法名稱不是 "Add" (不區分大小寫)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1181">The method that addMethod represents is not named "Add" (case insensitive).</span>
          </span>
          <span data-ttu-id="b0929-1182">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1182">-or-</span>
          </span>
          <span data-ttu-id="b0929-1183">addMethod 所表示的方法不是執行個體方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1183">The method that addMethod represents is not an instance method.</span>
          </span>
          <span data-ttu-id="b0929-1184">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1184">-or-</span>
          </span>
          <span data-ttu-id="b0929-1185">引數包含的項目數目與 addMethod 所表示之方法的參數數目不同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1185">arguments does not contain the same number of elements as the number of parameters for the method that addMethod represents.</span>
          </span>
          <span data-ttu-id="b0929-1186">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1186">-or-</span>
          </span>
          <span data-ttu-id="b0929-1187">
            <paramref name="arguments" /> 的一或多個項目的 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性無法指派給 <paramref name="addMethod" /> 所代表之方法的對應參數類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1187">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of one or more elements of <paramref name="arguments" /> is not assignable to the type of the corresponding parameter of the method that <paramref name="addMethod" /> represents.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DefaultExpression Empty ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DefaultExpression Empty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Empty () As DefaultExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DefaultExpression ^ Empty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DefaultExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b0929-1188">建立具有 <see cref="T:System.Void" /> 類型的空運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1188">Creates an empty expression that has <see cref="T:System.Void" /> type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1189">
            <see cref="T:System.Linq.Expressions.DefaultExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Default" />，且 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性設為 <see cref="T:System.Void" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1189">A <see cref="T:System.Linq.Expressions.DefaultExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Default" /> and the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to <see cref="T:System.Void" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1190">必須是運算式，但不需要採取任何動作，可以使用空運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-1190">An empty expression can be used where an expression is expected but no action is desired.</span></span> <span data-ttu-id="b0929-1191">例如，您可以使用空運算式做為最後一個運算式中的運算式區塊。</span><span class="sxs-lookup"><span data-stu-id="b0929-1191">For example, you can use an empty expression as the last expression in a block expression.</span></span> <span data-ttu-id="b0929-1192">在此情況下，區塊運算式的傳回值為 void。</span><span class="sxs-lookup"><span data-stu-id="b0929-1192">In this case, the block expression's return value is void.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-1193">下列程式碼範例示範如何建立空的運算式，並將它加入區塊運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-1193">The following code example shows how to create an empty expression and add it to a block expression.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#31](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#31)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#31](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#31)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equal">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-1194">建立代表相等比較的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1194">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an equality comparison.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Equal (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Equal(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equal (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Equal(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-1195">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1195">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-1196">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1196">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1197">建立代表相等比較的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1197">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an equality comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1198">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Equal" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1198">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Equal" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1199">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1199">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-1200"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-1200">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-1201">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>屬性是`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1201">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true`.</span></span> <span data-ttu-id="b0929-1202">否則為 `false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1202">Otherwise, it is `false`.</span></span> <span data-ttu-id="b0929-1203"><xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 屬性一律為 `false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1203">The <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is always `false`.</span></span> <span data-ttu-id="b0929-1204">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-1204">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-1205">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-1205">Implementing Method</span></span>  
 <span data-ttu-id="b0929-1206">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-1206">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-1207">如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載等號比較運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1207">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the equality operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1208">否則，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1208">Otherwise, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-1209">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-1209">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-1210">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1210">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1211">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1211">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-1212">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1212">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1213">如果滿足下列兩個條件時，則會消除節點和節點的類型是<xref:System.Boolean>:</span><span class="sxs-lookup"><span data-stu-id="b0929-1213">If the following two conditions are satisfied, the node is lifted and the type of the node is <xref:System.Boolean>:</span></span>  
  
    -   <span data-ttu-id="b0929-1214">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1214">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-1215">實作方法的傳回型別是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1215">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="b0929-1216">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1216">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1217">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1217">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-1218">節點的類型是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1218">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="b0929-1219">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1219">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-1220">節點的類型是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1220">The type of the node is <xref:System.Boolean>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-1221">下列程式碼範例示範如何建立運算式，會檢查其兩個引數的值是否相等。</span><span class="sxs-lookup"><span data-stu-id="b0929-1221">The following code example shows how to create an expression that checks whether the values of its two arguments are equal.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#8)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-1222">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1222">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-1223">不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義等號比較運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1223">The equality operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Equal (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Equal(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, bool liftToNull, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equal (left As Expression, right As Expression, liftToNull As Boolean, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Equal(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, bool liftToNull, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="liftToNull" Type="System.Boolean" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-1224">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1224">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-1225">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1225">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="liftToNull">
          <span data-ttu-id="b0929-1226">
            <see langword="true" /> 表示將 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> 設定為 <see langword="true" />，<see langword="false" /> 則表示將 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> 設定為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1226">
              <see langword="true" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="true" />; <see langword="false" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="false" />.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-1227">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1227">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1228">建立代表相等比較的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1228">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an equality comparison.</span>
          </span>
          <span data-ttu-id="b0929-1229">實作的方法可加以指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1229">The implementing method can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1230">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Equal" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" />、<see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1230">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Equal" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1231">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1231">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-1232"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-1232">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-1233">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>屬性是`true`和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性等於`liftToNull`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1233">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true` and the <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is equal to `liftToNull`.</span></span> <span data-ttu-id="b0929-1234">否則，兩者都`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1234">Otherwise, they are both `false`.</span></span> <span data-ttu-id="b0929-1235">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-1235">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-1236">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-1236">Implementing Method</span></span>  
 <span data-ttu-id="b0929-1237">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-1237">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-1238">如果`method`不`null`，而它代表非 void， `static` (`Shared`在 Visual Basic 中) 採用兩個引數，方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1238">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1239">否則，如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載等號比較運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1239">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the equality operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1240">否則，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1240">Otherwise, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-1241">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-1241">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-1242">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1242">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1243">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1243">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-1244">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1244">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1245">如果符合下列兩種情況，則會消除節點。此外，節點的類型可為 null<xref:System.Boolean>如果`liftToNull`是`true`或<xref:System.Boolean>如果`liftToNull`是`false`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1245">If the following two conditions are satisfied, the node is lifted; also, the type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`:</span></span>  
  
    -   <span data-ttu-id="b0929-1246">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1246">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-1247">實作方法的傳回型別是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1247">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="b0929-1248">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1248">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1249">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1249">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-1250">節點的類型是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1250">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="b0929-1251">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1251">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-1252">節點的類型可為 null<xref:System.Boolean>如果`liftToNull`是`true`或<xref:System.Boolean>如果`liftToNull`是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1252">The type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-1253">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1253">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-1254">
            <paramref name="method" /> 不是 <see langword="null" />，而它所代表的方法會傳回 <see langword="void" />、不是 <see langword="static" /> (Visual Basic 中的 <see langword="Shared" />)，或者未確切採用兩個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1254">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-1255">
            <paramref name="method" /> 為 <see langword="null" />，且不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義等號比較運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1255">
              <paramref name="method" /> is <see langword="null" /> and the equality operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExclusiveOr">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-1256">建立表示位元 <see cref="T:System.Linq.Expressions.BinaryExpression" /> 運算的 <see langword="XOR" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1256">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise <see langword="XOR" /> operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExclusiveOr">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ExclusiveOr (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ExclusiveOr(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExclusiveOr (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ExclusiveOr(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-1257">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1257">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-1258">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1258">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1259">使用 <c>op_ExclusiveOr</c> 作為使用者定義型別，建立表示位元 <see langword="XOR" /> 運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1259">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise <see langword="XOR" /> operation, using <c>op_ExclusiveOr</c> for user-defined types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1260">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOr" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1260">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOr" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1261">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1261">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-1262"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-1262">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-1263">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1263">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-1264">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1264">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-1265"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1265">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-1266">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-1266">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-1267">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-1267">Implementing Method</span></span>  
 <span data-ttu-id="b0929-1268">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-1268">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-1269">如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載`XOR`運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1269">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the `XOR` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1270">否則，如果`left`。型別和`right`。類型為整數或布林類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1270">Otherwise, if `left`.Type and `right`.Type are integral or Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-1271">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-1271">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-1272">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1272">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1273">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1273">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-1274">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1274">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1275">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-1275">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-1276">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1276">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-1277">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-1277">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-1278">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1278">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1279">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1279">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-1280">節點的類型是預先定義的結果型別`XOR`運算子。</span><span class="sxs-lookup"><span data-stu-id="b0929-1280">The type of the node is the result type of the predefined `XOR` operator.</span></span>  
  
-   <span data-ttu-id="b0929-1281">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1281">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-1282">節點的類型是 null 的型別對應至預先定義的結果型別`XOR`運算子。</span><span class="sxs-lookup"><span data-stu-id="b0929-1282">The type of the node is the nullable type that corresponds to the result type of the predefined `XOR` operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-1283">下列程式碼範例示範如何建立運算式，代表邏輯 XOR 運算。</span><span class="sxs-lookup"><span data-stu-id="b0929-1283">The following code example shows how to create an expression that represents the logical XOR operation.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#9)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-1284">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1284">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-1285">不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義 <see langword="XOR" /> 運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1285">The <see langword="XOR" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveOr">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ExclusiveOr (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ExclusiveOr(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExclusiveOr (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ExclusiveOr(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-1286">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1286">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-1287">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1287">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-1288">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1288">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1289">使用 <c>op_ExclusiveOr</c> 作為使用者定義型別，建立表示位元 <see langword="XOR" /> 運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1289">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise <see langword="XOR" /> operation, using <c>op_ExclusiveOr</c> for user-defined types.</span>
          </span>
          <span data-ttu-id="b0929-1290">實作的方法可加以指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1290">The implementing method can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1291">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOr" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1291">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOr" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1292">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1292">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-1293"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-1293">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-1294">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1294">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-1295">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1295">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-1296"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1296">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-1297">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-1297">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-1298">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-1298">Implementing Method</span></span>  
 <span data-ttu-id="b0929-1299">下列規則決定選取的實作作業的方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-1299">The following rules determine the chosen implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-1300">如果`method`不`null`，而它代表非 void， `static` (`Shared`在 Visual Basic 中) 採用兩個引數，方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1300">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1301">否則，如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載`XOR`運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1301">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the `XOR` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1302">否則，如果`left`。型別和`right`。類型為整數或布林類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1302">Otherwise, if `left`.Type and `right`.Type are integral or Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-1303">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-1303">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-1304">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1304">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1305">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1305">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-1306">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1306">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1307">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-1307">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-1308">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1308">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-1309">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-1309">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-1310">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1310">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1311">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1311">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-1312">節點的類型是預先定義的結果型別`XOR`運算子。</span><span class="sxs-lookup"><span data-stu-id="b0929-1312">The type of the node is the result type of the predefined `XOR` operator.</span></span>  
  
-   <span data-ttu-id="b0929-1313">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1313">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-1314">節點的類型是 null 的型別對應至預先定義的結果型別`XOR`運算子。</span><span class="sxs-lookup"><span data-stu-id="b0929-1314">The type of the node is the nullable type that corresponds to the result type of the predefined `XOR` operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-1315">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1315">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-1316">
            <paramref name="method" /> 不是 <see langword="null" />，而它所代表的方法會傳回 <see langword="void" />、不是 <see langword="static" /> (Visual Basic 中的 <see langword="Shared" />)，或者未確切採用兩個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1316">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-1317">
            <paramref name="method" /> 是 <see langword="null" />，而且未定義類型 <paramref name="left" />.Type 和 <paramref name="right" />.Type 的 <see langword="XOR" /> 運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1317">
              <paramref name="method" /> is <see langword="null" /> and the <see langword="XOR" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExclusiveOrAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-1318">建立代表位元 XOR 指派運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1318">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise XOR assignment operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExclusiveOrAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ExclusiveOrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ExclusiveOrAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExclusiveOrAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ExclusiveOrAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-1319">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1319">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-1320">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1320">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1321">使用 <c>op_ExclusiveOr</c> 作為使用者定義型別，建立代表位元 XOR 指派運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1321">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise XOR assignment operation, using <c>op_ExclusiveOr</c> for user-defined types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1322">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOrAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1322">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOrAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveOrAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ExclusiveOrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ExclusiveOrAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExclusiveOrAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ExclusiveOrAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-1323">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1323">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-1324">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1324">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-1325">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1325">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1326">使用 <c>op_ExclusiveOr</c> 作為使用者定義型別，建立代表位元 XOR 指派運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1326">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise XOR assignment operation, using <c>op_ExclusiveOr</c> for user-defined types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1327">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOrAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1327">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOrAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveOrAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ExclusiveOrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ExclusiveOrAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExclusiveOrAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ExclusiveOrAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-1328">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1328">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-1329">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1329">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-1330">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1330">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="b0929-1331">要將 <see cref="T:System.Linq.Expressions.LambdaExpression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1331">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1332">使用 <c>op_ExclusiveOr</c> 作為使用者定義型別，建立代表位元 XOR 指派運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1332">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise XOR assignment operation, using <c>op_ExclusiveOr</c> for user-defined types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1333">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOrAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1333">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOrAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Field">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-1334">建立代表存取欄位的 <see cref="T:System.Linq.Expressions.MemberExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1334">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing a field.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Field">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberExpression Field (System.Linq.Expressions.Expression expression, System.Reflection.FieldInfo field);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberExpression Field(class System.Linq.Expressions.Expression expression, class System.Reflection.FieldInfo field) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberExpression ^ Field(System::Linq::Expressions::Expression ^ expression, System::Reflection::FieldInfo ^ field);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="field" Type="System.Reflection.FieldInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-1335">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.MemberExpression.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1335">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> property equal to.</span>
          </span>
          <span data-ttu-id="b0929-1336">若為 <see langword="static" /> (在 Visual Basic 中為 <see langword="Shared" />)，<c>expression</c> 必須是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1336">For <see langword="static" /> (<see langword="Shared" /> in Visual Basic), <c>expression</c> must be <see langword="null" />.</span>
          </span>
        </param>
        <param name="field">
          <span data-ttu-id="b0929-1337">要將 <see cref="T:System.Reflection.FieldInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.MemberExpression.Member" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1337">The <see cref="T:System.Reflection.FieldInfo" /> to set the <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1338">建立代表存取欄位的 <see cref="T:System.Linq.Expressions.MemberExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1338">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing a field.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1339">
            <see cref="T:System.Linq.Expressions.MemberExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" />，且 <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> 和 <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1339">A <see cref="T:System.Linq.Expressions.MemberExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" /> and the <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> and <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1340"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.MemberExpression>等於<xref:System.Reflection.FieldInfo.FieldType%2A>屬性`field`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1340">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MemberExpression> is equal to the <xref:System.Reflection.FieldInfo.FieldType%2A> property of `field`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-1341">
            <paramref name="field" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1341">
              <paramref name="field" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-1342">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1342">-or-</span>
          </span>
          <span data-ttu-id="b0929-1343">
            <paramref name="field" /> 所表示的欄位不是 <see langword="static" /> (在 Visual Basic 中為 <see langword="Shared" />)，且 <paramref name="expression" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1343">The field represented by <paramref name="field" /> is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic) and <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-1344">
            <paramref name="expression" />.Type 無法指派給 <paramref name="field" /> 所代表之欄位的宣告類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1344">
              <paramref name="expression" />.Type is not assignable to the declaring type of the field represented by <paramref name="field" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Field">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberExpression Field (System.Linq.Expressions.Expression expression, string fieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberExpression Field(class System.Linq.Expressions.Expression expression, string fieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberExpression ^ Field(System::Linq::Expressions::Expression ^ expression, System::String ^ fieldName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="fieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-1345">
            <see cref="T:System.Linq.Expressions.Expression" />，其 <see cref="P:System.Linq.Expressions.Expression.Type" /> 包含名為 <c>fieldName</c> 的欄位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1345">An <see cref="T:System.Linq.Expressions.Expression" /> whose <see cref="P:System.Linq.Expressions.Expression.Type" /> contains a field named <c>fieldName</c>.</span>
          </span>
          <span data-ttu-id="b0929-1346">如果是靜態欄位，可以是 Null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1346">This can be null for static fields.</span>
          </span>
        </param>
        <param name="fieldName">
          <span data-ttu-id="b0929-1347">要存取的欄位名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1347">The name of a field to be accessed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1348">建立 <see cref="T:System.Linq.Expressions.MemberExpression" />，代表存取可指定欄位名稱的欄位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1348">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing a field given the name of the field.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1349">
            <see cref="T:System.Linq.Expressions.MemberExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" />、<see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> 屬性設定為 <paramref name="expression" />，且 <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> 屬性設定為 <see cref="T:System.Reflection.FieldInfo" />，代表 <paramref name="fieldName" /> 所表示的欄位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1349">A <see cref="T:System.Linq.Expressions.MemberExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" />, the <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> property set to <paramref name="expression" />, and the <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> property set to the <see cref="T:System.Reflection.FieldInfo" /> that represents the field denoted by <paramref name="fieldName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1350"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.MemberExpression>等於<xref:System.Reflection.FieldInfo.FieldType%2A>屬性<xref:System.Reflection.FieldInfo>，代表所表示的欄位`fieldName`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1350">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MemberExpression> is equal to the <xref:System.Reflection.FieldInfo.FieldType%2A> property of the <xref:System.Reflection.FieldInfo> that represents the field denoted by `fieldName`.</span></span>  
  
 <span data-ttu-id="b0929-1351">這個方法會搜尋`expression`。類型和欄位名稱及其基底類型`fieldName`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1351">This method searches `expression`.Type and its base types for a field that has the name `fieldName`.</span></span> <span data-ttu-id="b0929-1352">公用欄位會給予喜好設定，在非公用欄位。</span><span class="sxs-lookup"><span data-stu-id="b0929-1352">Public fields are given preference over non-public fields.</span></span> <span data-ttu-id="b0929-1353">如果找到相符的欄位，這個方法會傳遞`expression`和<xref:System.Reflection.FieldInfo>表示該欄位加入<xref:System.Linq.Expressions.Expression.Field%2A>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1353">If a matching field is found, this method passes `expression` and the <xref:System.Reflection.FieldInfo> that represents that field to <xref:System.Linq.Expressions.Expression.Field%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-1354">下列程式碼範例示範如何建立代表存取欄位的運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-1354">The following code example shows how to create an expression that represents accessing a field.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#37](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#37)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#37](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#37)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-1355">
            <paramref name="expression" /> 或 <paramref name="fieldName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1355">
              <paramref name="expression" /> or <paramref name="fieldName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-1356">
            <paramref name="fieldName" />.Type 或其基底類型中沒有定義名為 <paramref name="expression" /> 的欄位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1356">No field named <paramref name="fieldName" /> is defined in <paramref name="expression" />.Type or its base types.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Field">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberExpression Field (System.Linq.Expressions.Expression expression, Type type, string fieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberExpression Field(class System.Linq.Expressions.Expression expression, class System.Type type, string fieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberExpression ^ Field(System::Linq::Expressions::Expression ^ expression, Type ^ type, System::String ^ fieldName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="fieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-1357">欄位的包含物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1357">The containing object of the field.</span>
          </span>
          <span data-ttu-id="b0929-1358">如果是靜態欄位，可以是 Null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1358">This can be null for static fields.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="b0929-1359">包含欄位的 <see cref="P:System.Linq.Expressions.Expression.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1359">The <see cref="P:System.Linq.Expressions.Expression.Type" /> that contains the field.</span>
          </span>
        </param>
        <param name="fieldName">
          <span data-ttu-id="b0929-1360">要存取的欄位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1360">The field to be accessed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1361">建立代表存取欄位的 <see cref="T:System.Linq.Expressions.MemberExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1361">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing a field.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1362">建立的 <see cref="T:System.Linq.Expressions.MemberExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1362">The created <see cref="T:System.Linq.Expressions.MemberExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionType">
      <MemberSignature Language="C#" Value="public static Type GetActionType (params Type[] typeArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetActionType(class System.Type[] typeArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.GetActionType(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetActionType (ParamArray typeArgs As Type()) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetActionType(... cli::array &lt;Type ^&gt; ^ typeArgs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeArgs" Type="System.Type[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="typeArgs">
          <span data-ttu-id="b0929-1363">最多包含十六個 <see cref="T:System.Type" /> 物件的陣列，指定 <see langword="System.Action" /> 委派類型的類型引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1363">An array of up to sixteen <see cref="T:System.Type" /> objects that specify the type arguments for the <see langword="System.Action" /> delegate type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1364">建立 <see cref="T:System.Type" /> 物件，這個物件代表具有特定型別引數的泛型 <c>System.Action</c> 委派類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1364">Creates a <see cref="T:System.Type" /> object that represents a generic <c>System.Action</c> delegate type that has specific type arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1365">
            <c>System.Action</c> 委派的類型，具有指定的型別引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1365">The type of a <c>System.Action</c> delegate that has the specified type arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1366">例如，如果的項目`typeArgs`代表類型`T1…Tn`，所產生的<xref:System.Type>物件代表建構的委派類型`System.Action<T1,…,Tn>`在 C# 或`System.Action(Of T1,…,Tn)`在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="b0929-1366">As an example, if the elements of `typeArgs` represent the types `T1…Tn`, the resulting <xref:System.Type> object represents the constructed delegate type `System.Action<T1,…,Tn>` in C# or `System.Action(Of T1,…,Tn)` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-1367">
            <paramref name="typeArgs" /> 包含十六個以上的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1367">
              <paramref name="typeArgs" /> contains more than sixteen elements.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-1368">
            <paramref name="typeArgs" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1368">
              <paramref name="typeArgs" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDelegateType">
      <MemberSignature Language="C#" Value="public static Type GetDelegateType (params Type[] typeArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetDelegateType(class System.Type[] typeArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.GetDelegateType(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDelegateType (ParamArray typeArgs As Type()) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetDelegateType(... cli::array &lt;Type ^&gt; ^ typeArgs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeArgs" Type="System.Type[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="typeArgs">
          <span data-ttu-id="b0929-1369">委派的型別引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1369">The type arguments of the delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1370">取得 <see cref="P:System.Linq.Expressions.Expression.Type" /> 物件，這個物件代表具有特定型別引數的泛型 <c>System.Func</c> 或 <c>System.Action</c> 委派類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1370">Gets a <see cref="P:System.Linq.Expressions.Expression.Type" /> object that represents a generic <c>System.Func</c> or <c>System.Action</c> delegate type that has specific type arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1371">委派類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1371">The delegate type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1372">最後一個型別引數會決定委派的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1372">The last type argument determines the return type of the delegate.</span></span> <span data-ttu-id="b0929-1373">如果沒有函式或動作夠大，因此會產生自訂委派類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-1373">If no Func or Action is large enough, it will generate a custom delegate type.</span></span>  
  
 <span data-ttu-id="b0929-1374">如同函式，最後一個引數是傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1374">As with Func, the last argument is the return type.</span></span> <span data-ttu-id="b0929-1375">它可以設定為 System.Void，產生動作。</span><span class="sxs-lookup"><span data-stu-id="b0929-1375">It can be set to System.Void to produce an Action.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFuncType">
      <MemberSignature Language="C#" Value="public static Type GetFuncType (params Type[] typeArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetFuncType(class System.Type[] typeArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.GetFuncType(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFuncType (ParamArray typeArgs As Type()) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetFuncType(... cli::array &lt;Type ^&gt; ^ typeArgs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeArgs" Type="System.Type[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="typeArgs">
          <span data-ttu-id="b0929-1376">包含一到十七個 <see cref="T:System.Type" /> 物件的陣列，指定 <see langword="System.Func" /> 委派類型的類型引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1376">An array of one to seventeen <see cref="T:System.Type" /> objects that specify the type arguments for the <see langword="System.Func" /> delegate type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1377">建立 <see cref="P:System.Linq.Expressions.Expression.Type" /> 物件，這個物件代表具有特定型別引數的泛型 <c>System.Func</c> 委派類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1377">Creates a <see cref="P:System.Linq.Expressions.Expression.Type" /> object that represents a generic <c>System.Func</c> delegate type that has specific type arguments.</span>
          </span>
          <span data-ttu-id="b0929-1378">最後一個型別引數指定已建立之委派的傳回型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1378">The last type argument specifies the return type of the created delegate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1379">
            <c>System.Func</c> 委派的類型，具有指定的型別引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1379">The type of a <c>System.Func</c> delegate that has the specified type arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1380">`typeArgs` 必須包含至少一個與最十七項目。</span><span class="sxs-lookup"><span data-stu-id="b0929-1380">`typeArgs` must contain at least one and at most seventeen elements.</span></span>  
  
 <span data-ttu-id="b0929-1381">例如，如果的項目`typeArgs`代表類型`T1…Tn`，所產生的<xref:System.Type>物件代表建構的委派類型`System.Func<T1,…,Tn>`在 C# 或`System.Func(Of T1,…,Tn)`在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="b0929-1381">As an example, if the elements of `typeArgs` represent the types `T1…Tn`, the resulting <xref:System.Type> object represents the constructed delegate type `System.Func<T1,…,Tn>` in C# or `System.Func(Of T1,…,Tn)` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-1382">
            <paramref name="typeArgs" /> 包含少於一個或多過十七個項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1382">
              <paramref name="typeArgs" /> contains fewer than one or more than seventeen elements.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-1383">
            <paramref name="typeArgs" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1383">
              <paramref name="typeArgs" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Goto">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-1384">建立表示 "go to" 陳述式的 <see cref="T:System.Linq.Expressions.GotoExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1384">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a "go to" statement.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Goto">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Goto (System.Linq.Expressions.LabelTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Goto(class System.Linq.Expressions.LabelTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Goto (target As LabelTarget) As GotoExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Goto(System::Linq::Expressions::LabelTarget ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b0929-1385">
            <see cref="T:System.Linq.Expressions.LabelTarget" /> 將跳躍的目標 <see cref="T:System.Linq.Expressions.GotoExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1385">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1386">建立表示 "go to" 陳述式的 <see cref="T:System.Linq.Expressions.GotoExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1386">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a "go to" statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1387">
            <see cref="T:System.Linq.Expressions.GotoExpression" />，其 <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 等於 Goto、<see cref="P:System.Linq.Expressions.GotoExpression.Target" /> 屬性設定為指定的值，且包含在跳躍時傳遞至目標標籤的 Null 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1387">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Goto, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to the specified value, and a null value to be passed to the target label upon jumping.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0929-1388">下列範例示範如何建立包含的運算式<xref:System.Linq.Expressions.GotoExpression>物件。</span><span class="sxs-lookup"><span data-stu-id="b0929-1388">The following example demonstrates how to create an expression that contains a <xref:System.Linq.Expressions.GotoExpression> object.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#45](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#45)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#45](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#45)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Goto">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Goto (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Goto(class System.Linq.Expressions.LabelTarget target, class System.Linq.Expressions.Expression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Goto (target As LabelTarget, value As Expression) As GotoExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Goto(System::Linq::Expressions::LabelTarget ^ target, System::Linq::Expressions::Expression ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b0929-1389">
            <see cref="T:System.Linq.Expressions.LabelTarget" /> 將跳躍的目標 <see cref="T:System.Linq.Expressions.GotoExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1389">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b0929-1390">將在跳躍時傳遞至關聯標籤的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1390">The value that will be passed to the associated label upon jumping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1391">建立表示 "go to" 陳述式的 <see cref="T:System.Linq.Expressions.GotoExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1391">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a "go to" statement.</span>
          </span>
          <span data-ttu-id="b0929-1392">可以指定跳躍時傳遞至標籤的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1392">The value passed to the label upon jumping can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1393">
            <see cref="T:System.Linq.Expressions.GotoExpression" />，其 <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 等於 Goto、<see cref="P:System.Linq.Expressions.GotoExpression.Target" /> 屬性設定為 <paramref name="target" />，且，且包含在跳躍時傳遞至目標標籤的 <paramref name="value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1393">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Goto, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, and <paramref name="value" /> to be passed to the target label upon jumping.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Goto">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Goto (System.Linq.Expressions.LabelTarget target, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Goto(class System.Linq.Expressions.LabelTarget target, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Goto(System::Linq::Expressions::LabelTarget ^ target, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b0929-1394">
            <see cref="T:System.Linq.Expressions.LabelTarget" /> 將跳躍的目標 <see cref="T:System.Linq.Expressions.GotoExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1394">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="b0929-1395">要將 <see cref="T:System.Type" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.Expression.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1395">An <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1396">建立 <see cref="T:System.Linq.Expressions.GotoExpression" />，表示含指定之類型的 "go to" 陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1396">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a "go to" statement with the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1397">
            <see cref="T:System.Linq.Expressions.GotoExpression" />，其 <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 等於 Goto、<see cref="P:System.Linq.Expressions.GotoExpression.Target" /> 屬性設定為指定的值、<see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性設定為 <paramref name="type" />，且包含在跳躍時傳遞至目標標籤的 Null 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1397">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Goto, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to the specified value, the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to <paramref name="type" />, and a null value to be passed to the target label upon jumping.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Goto">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Goto (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Goto(class System.Linq.Expressions.LabelTarget target, class System.Linq.Expressions.Expression value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Goto(System::Linq::Expressions::LabelTarget ^ target, System::Linq::Expressions::Expression ^ value, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b0929-1398">
            <see cref="T:System.Linq.Expressions.LabelTarget" /> 將跳躍的目標 <see cref="T:System.Linq.Expressions.GotoExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1398">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b0929-1399">將在跳躍時傳遞至關聯標籤的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1399">The value that will be passed to the associated label upon jumping.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="b0929-1400">要將 <see cref="T:System.Type" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.Expression.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1400">An <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1401">建立 <see cref="T:System.Linq.Expressions.GotoExpression" />，表示含指定之類型的 "go to" 陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1401">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a "go to" statement with the specified type.</span>
          </span>
          <span data-ttu-id="b0929-1402">可以指定跳躍時傳遞至標籤的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1402">The value passed to the label upon jumping can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1403">
            <see cref="T:System.Linq.Expressions.GotoExpression" />，其 <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 等於 Goto、<see cref="P:System.Linq.Expressions.GotoExpression.Target" /> 屬性設定為 <paramref name="target" />、<see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性設定為 <paramref name="type" />，且包含在跳躍時傳遞至目標標籤的 <paramref name="value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1403">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Goto, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to <paramref name="type" />, and <paramref name="value" /> to be passed to the target label upon jumping.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GreaterThan">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-1404">建立代表「大於」數值比較的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1404">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "greater than" numeric comparison.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression GreaterThan (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression GreaterThan(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreaterThan (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ GreaterThan(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-1405">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1405">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-1406">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1406">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1407">建立代表「大於」數值比較的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1407">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "greater than" numeric comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1408">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.GreaterThan" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1408">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.GreaterThan" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1409">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1409">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-1410"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-1410">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-1411">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>屬性是`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1411">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true`.</span></span> <span data-ttu-id="b0929-1412">否則為 `false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1412">Otherwise, it is `false`.</span></span> <span data-ttu-id="b0929-1413"><xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 屬性一律為 `false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1413">The <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is always `false`.</span></span> <span data-ttu-id="b0929-1414"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1414">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-1415">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-1415">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-1416">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-1416">Implementing Method</span></span>  
 <span data-ttu-id="b0929-1417">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-1417">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-1418">如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`代表 「 大於 」 運算子多載的使用者定義型別<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1418">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the "greater than" operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1419">否則，如果`left`。型別和`right`。類型為數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1419">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-1420">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-1420">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-1421">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1421">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1422">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1422">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-1423">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1423">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1424">如果滿足下列兩個條件時，則會消除節點和節點的類型是<xref:System.Boolean>:</span><span class="sxs-lookup"><span data-stu-id="b0929-1424">If the following two conditions are satisfied, the node is lifted and the type of the node is <xref:System.Boolean>:</span></span>  
  
    -   <span data-ttu-id="b0929-1425">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1425">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-1426">實作方法的傳回型別是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1426">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="b0929-1427">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1427">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1428">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1428">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-1429">節點的類型是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1429">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="b0929-1430">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1430">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-1431">節點的類型是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1431">The type of the node is <xref:System.Boolean>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-1432">下列程式碼範例示範如何建立會比較兩個整數的運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-1432">The following code example shows how to create an expression that compares two integers.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#10)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-1433">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1433">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-1434">不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義「大於」運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1434">The "greater than" operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression GreaterThan (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression GreaterThan(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, bool liftToNull, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreaterThan (left As Expression, right As Expression, liftToNull As Boolean, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ GreaterThan(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, bool liftToNull, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="liftToNull" Type="System.Boolean" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-1435">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1435">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-1436">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1436">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="liftToNull">
          <span data-ttu-id="b0929-1437">
            <see langword="true" /> 表示將 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> 設定為 <see langword="true" />，<see langword="false" /> 則表示將 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> 設定為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1437">
              <see langword="true" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="true" />; <see langword="false" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="false" />.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-1438">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1438">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1439">建立代表「大於」數值比較的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1439">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "greater than" numeric comparison.</span>
          </span>
          <span data-ttu-id="b0929-1440">實作的方法可加以指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1440">The implementing method can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1441">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.GreaterThan" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" />、<see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1441">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.GreaterThan" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1442">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1442">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-1443"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-1443">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-1444">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>屬性是`true`和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性等於`liftToNull`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1444">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true` and the <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is equal to `liftToNull`.</span></span> <span data-ttu-id="b0929-1445">否則，兩者都`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1445">Otherwise, they are both `false`.</span></span> <span data-ttu-id="b0929-1446"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1446">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-1447">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-1447">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-1448">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-1448">Implementing Method</span></span>  
 <span data-ttu-id="b0929-1449">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-1449">The following rules determine the implementing method for the operation :</span></span>  
  
-   <span data-ttu-id="b0929-1450">如果`method`不`null`，而它代表非 void， `static` (`Shared`在 Visual Basic 中) 採用兩個引數，方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1450">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1451">否則，如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`代表 「 大於 」 運算子多載的使用者定義型別<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1451">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the "greater than" operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1452">否則，如果`left`。型別和`right`。類型為數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1452">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-1453">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-1453">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-1454">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1454">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1455">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1455">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-1456">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1456">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1457">如果符合下列兩種情況，則會消除節點。此外，節點的類型可為 null<xref:System.Boolean>如果`liftToNull`是`true`或<xref:System.Boolean>如果`liftToNull`是`false`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1457">If the following two conditions are satisfied, the node is lifted; also, the type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`:</span></span>  
  
    -   <span data-ttu-id="b0929-1458">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1458">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-1459">實作方法的傳回型別是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1459">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="b0929-1460">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1460">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1461">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1461">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-1462">節點的類型是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1462">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="b0929-1463">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1463">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-1464">節點的類型可為 null<xref:System.Boolean>如果`liftToNull`是`true`或<xref:System.Boolean>如果`liftToNull`是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1464">The type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-1465">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1465">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-1466">
            <paramref name="method" /> 不是 <see langword="null" />，而它所代表的方法會傳回 <see langword="void" />、不是 <see langword="static" /> (Visual Basic 中的 <see langword="Shared" />)，或者未確切採用兩個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1466">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-1467">
            <paramref name="method" /> 為 <see langword="null" />，且不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義「大於」運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1467">
              <paramref name="method" /> is <see langword="null" /> and the "greater than" operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GreaterThanOrEqual">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-1468">建立代表「大於或等於」數值比較的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1468">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "greater than or equal" numeric comparison.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression GreaterThanOrEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression GreaterThanOrEqual(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreaterThanOrEqual (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ GreaterThanOrEqual(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-1469">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1469">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-1470">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1470">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1471">建立代表「大於或等於」數值比較的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1471">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "greater than or equal" numeric comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1472">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.GreaterThanOrEqual" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1472">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.GreaterThanOrEqual" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1473">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1473">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-1474"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-1474">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-1475">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>屬性是`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1475">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true`.</span></span> <span data-ttu-id="b0929-1476">否則為 `false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1476">Otherwise, it is `false`.</span></span> <span data-ttu-id="b0929-1477"><xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 屬性一律為 `false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1477">The <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is always `false`.</span></span> <span data-ttu-id="b0929-1478"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1478">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-1479">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-1479">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-1480">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-1480">Implementing Method</span></span>  
 <span data-ttu-id="b0929-1481">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-1481">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-1482">如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`代表 「 大於或等於 」 運算子多載的使用者定義型別<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1482">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the "greater than or equal" operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1483">否則，如果`left`。型別和`right`。類型為數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1483">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-1484">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-1484">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-1485">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1485">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1486">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1486">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-1487">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1487">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1488">如果滿足下列兩個條件時，則會消除節點和節點的類型是<xref:System.Boolean>:</span><span class="sxs-lookup"><span data-stu-id="b0929-1488">If the following two conditions are satisfied, the node is lifted and the type of the node is <xref:System.Boolean>:</span></span>  
  
    -   <span data-ttu-id="b0929-1489">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1489">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-1490">實作方法的傳回型別是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1490">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="b0929-1491">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1491">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1492">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1492">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-1493">節點的類型是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1493">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="b0929-1494">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1494">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-1495">節點的類型是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1495">The type of the node is <xref:System.Boolean>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-1496">下列程式碼範例示範如何建立會比較兩個整數的運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-1496">The following code example shows how to create an expression that compares two integers.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#11)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-1497">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1497">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-1498">不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義「大於或等於」運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1498">The "greater than or equal" operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression GreaterThanOrEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression GreaterThanOrEqual(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, bool liftToNull, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreaterThanOrEqual (left As Expression, right As Expression, liftToNull As Boolean, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ GreaterThanOrEqual(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, bool liftToNull, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="liftToNull" Type="System.Boolean" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-1499">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1499">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-1500">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1500">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="liftToNull">
          <span data-ttu-id="b0929-1501">
            <see langword="true" /> 表示將 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> 設定為 <see langword="true" />，<see langword="false" /> 則表示將 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> 設定為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1501">
              <see langword="true" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="true" />; <see langword="false" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="false" />.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-1502">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1502">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1503">建立代表「大於或等於」數值比較的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1503">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "greater than or equal" numeric comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1504">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.GreaterThanOrEqual" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" />、<see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1504">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.GreaterThanOrEqual" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1505">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1505">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-1506"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-1506">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-1507">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>屬性是`true`和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性等於`liftToNull`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1507">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true` and the <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is equal to `liftToNull`.</span></span> <span data-ttu-id="b0929-1508">否則，兩者都`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1508">Otherwise, they are both `false`.</span></span> <span data-ttu-id="b0929-1509"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1509">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-1510">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-1510">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-1511">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-1511">Implementing Method</span></span>  
 <span data-ttu-id="b0929-1512">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-1512">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-1513">如果`method`不`null`，而它代表非 void， `static` (`Shared`在 Visual Basic 中) 採用兩個引數，方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1513">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1514">否則，如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`代表 「 大於或等於 」 運算子多載的使用者定義型別<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1514">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the "greater than or equal" operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1515">否則，如果`left`。型別和`right`。類型為數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1515">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-1516">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-1516">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-1517">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1517">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1518">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1518">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-1519">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1519">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1520">如果符合下列兩種情況，則會消除節點。此外，節點的類型可為 null<xref:System.Boolean>如果`liftToNull`是`true`或<xref:System.Boolean>如果`liftToNull`是`false`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1520">If the following two conditions are satisfied, the node is lifted; also, the type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`:</span></span>  
  
    -   <span data-ttu-id="b0929-1521">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1521">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-1522">實作方法的傳回型別是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1522">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="b0929-1523">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1523">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1524">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1524">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-1525">節點的類型是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1525">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="b0929-1526">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1526">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-1527">節點的類型可為 null<xref:System.Boolean>如果`liftToNull`是`true`或<xref:System.Boolean>如果`liftToNull`是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1527">The type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-1528">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1528">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-1529">
            <paramref name="method" /> 不是 <see langword="null" />，而它所代表的方法會傳回 <see langword="void" />、不是 <see langword="static" /> (Visual Basic 中的 <see langword="Shared" />)，或者未確切採用兩個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1529">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-1530">
            <paramref name="method" /> 是 <see langword="null" />，而且未定義 <paramref name="left" />.Type 和 <paramref name="right" />.Type 的「大於或等於」運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1530">
              <paramref name="method" /> is <see langword="null" /> and the "greater than or equal" operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IfThen">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ConditionalExpression IfThen (System.Linq.Expressions.Expression test, System.Linq.Expressions.Expression ifTrue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ConditionalExpression IfThen(class System.Linq.Expressions.Expression test, class System.Linq.Expressions.Expression ifTrue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IfThen (test As Expression, ifTrue As Expression) As ConditionalExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ConditionalExpression ^ IfThen(System::Linq::Expressions::Expression ^ test, System::Linq::Expressions::Expression ^ ifTrue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ConditionalExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="test" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="ifTrue" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="test">
          <span data-ttu-id="b0929-1531">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1531">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" /> property equal to.</span>
          </span>
        </param>
        <param name="ifTrue">
          <span data-ttu-id="b0929-1532">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1532">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1533">建立 <see cref="T:System.Linq.Expressions.ConditionalExpression" />，代表具有 <see langword="if" /> 陳述式的條件區塊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1533">Creates a <see cref="T:System.Linq.Expressions.ConditionalExpression" /> that represents a conditional block with an <see langword="if" /> statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1534">
            <see cref="T:System.Linq.Expressions.ConditionalExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Conditional" />，且 <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" /> 和 <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1534">A <see cref="T:System.Linq.Expressions.ConditionalExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Conditional" /> and the <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" />, <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" />, properties set to the specified values.</span>
          </span>
          <span data-ttu-id="b0929-1535">
            <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> 屬性已設定為預設運算式，而這個方法傳回之結果 <see cref="T:System.Linq.Expressions.ConditionalExpression" /> 的類型為 <see cref="T:System.Void" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1535">The <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> property is set to default expression and the type of the resulting <see cref="T:System.Linq.Expressions.ConditionalExpression" /> returned by this method is <see cref="T:System.Void" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0929-1536">下列程式碼範例示範如何建立表示條件式區塊的運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-1536">The following code example shows how to create an expression that represents a conditional block.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#32](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#32)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#32](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IfThenElse">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ConditionalExpression IfThenElse (System.Linq.Expressions.Expression test, System.Linq.Expressions.Expression ifTrue, System.Linq.Expressions.Expression ifFalse);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ConditionalExpression IfThenElse(class System.Linq.Expressions.Expression test, class System.Linq.Expressions.Expression ifTrue, class System.Linq.Expressions.Expression ifFalse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IfThenElse (test As Expression, ifTrue As Expression, ifFalse As Expression) As ConditionalExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ConditionalExpression ^ IfThenElse(System::Linq::Expressions::Expression ^ test, System::Linq::Expressions::Expression ^ ifTrue, System::Linq::Expressions::Expression ^ ifFalse);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ConditionalExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="test" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="ifTrue" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="ifFalse" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="test">
          <span data-ttu-id="b0929-1537">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1537">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" /> property equal to.</span>
          </span>
        </param>
        <param name="ifTrue">
          <span data-ttu-id="b0929-1538">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1538">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" /> property equal to.</span>
          </span>
        </param>
        <param name="ifFalse">
          <span data-ttu-id="b0929-1539">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1539">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1540">建立 <see cref="T:System.Linq.Expressions.ConditionalExpression" />，代表具有 <see langword="if" /> 和 <see langword="else" /> 陳述式的條件區塊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1540">Creates a <see cref="T:System.Linq.Expressions.ConditionalExpression" /> that represents a conditional block with <see langword="if" /> and <see langword="else" /> statements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1541">
            <see cref="T:System.Linq.Expressions.ConditionalExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Conditional" />，且 <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" />、<see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" /> 和 <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1541">A <see cref="T:System.Linq.Expressions.ConditionalExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Conditional" /> and the <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" />, <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" />, and <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> properties set to the specified values.</span>
          </span>
          <span data-ttu-id="b0929-1542">這個方法所傳回之結果 <see cref="T:System.Linq.Expressions.ConditionalExpression" /> 的類型為 <see cref="T:System.Void" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1542">The type of the resulting <see cref="T:System.Linq.Expressions.ConditionalExpression" /> returned by this method is <see cref="T:System.Void" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0929-1543">下列程式碼範例示範如何建立表示條件式區塊的運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-1543">The following code example shows how to create an expression that represents a conditional block.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#33)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Increment">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-1544">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，表示運算式值遞增 1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1544">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the incrementing of the expression value by 1.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Increment">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Increment (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Increment(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Increment(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-1545">要遞增的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1545">An <see cref="T:System.Linq.Expressions.Expression" /> to increment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1546">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，表示運算式值遞增 1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1546">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the incrementing of the expression value by 1.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1547">表示遞增後運算式的 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1547">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the incremented expression.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1548">這個運算式會正常運作，不會變更的物件傳遞給它的值。</span><span class="sxs-lookup"><span data-stu-id="b0929-1548">This expression is functional and does not change the value of the object that is passed to it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-1549">下列程式碼範例示範如何建立運算式，表示遞增作業。</span><span class="sxs-lookup"><span data-stu-id="b0929-1549">The following code example shows how to create an expression that represents an increment operation.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#24)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Increment">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Increment (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Increment(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Increment(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-1550">要遞增的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1550">An <see cref="T:System.Linq.Expressions.Expression" /> to increment.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-1551">表示實作方法的 <see cref="T:System.Reflection.MethodInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1551">A <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1552">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，代表運算式遞增 1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1552">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the incrementing of the expression by 1.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1553">表示遞增後運算式的 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1553">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the incremented expression.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1554">這個運算式會正常運作，不會變更的物件傳遞給它的值。</span><span class="sxs-lookup"><span data-stu-id="b0929-1554">This expression is functional and does not change the value of the object that is passed to it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-1555">建立 <see cref="T:System.Linq.Expressions.InvocationExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1555">Creates an <see cref="T:System.Linq.Expressions.InvocationExpression" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.InvocationExpression Invoke (System.Linq.Expressions.Expression expression, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.InvocationExpression Invoke(class System.Linq.Expressions.Expression expression, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::InvocationExpression ^ Invoke(System::Linq::Expressions::Expression ^ expression, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.InvocationExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-1556">
            <see cref="T:System.Linq.Expressions.Expression" />，代表要套用的委派或 Lambda 運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1556">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the delegate or lambda expression to be applied to.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="b0929-1557">包含 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 物件的 <see cref="T:System.Linq.Expressions.Expression" />，代表要套用委派或 Lambda 運算式的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1557">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects that represent the arguments that the delegate or lambda expression is applied to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1558">建立 <see cref="T:System.Linq.Expressions.InvocationExpression" />，將委派或 Lambda 運算式套用至引數運算式清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1558">Creates an <see cref="T:System.Linq.Expressions.InvocationExpression" /> that applies a delegate or lambda expression to a list of argument expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1559">
            <see cref="T:System.Linq.Expressions.InvocationExpression" />，可將指定的委派或 Lambda 運算式套用至所提供的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1559">An <see cref="T:System.Linq.Expressions.InvocationExpression" /> that applies the specified delegate or lambda expression to the provided arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1560"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.InvocationExpression>代表委派所表示的傳回型別`expression`。型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1560">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.InvocationExpression> represents the return type of the delegate that is represented by `expression`.Type.</span></span>  
  
 <span data-ttu-id="b0929-1561"><xref:System.Linq.Expressions.InvocationExpression.Arguments%2A>屬性產生<xref:System.Linq.Expressions.InvocationExpression>是空的如果`arguments`是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1561">The <xref:System.Linq.Expressions.InvocationExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.InvocationExpression> is empty if `arguments` is `null`.</span></span> <span data-ttu-id="b0929-1562">否則，就會包含相同項目，做為`arguments`除外，其中有些<xref:System.Linq.Expressions.Expression>物件可能*加上引號*。</span><span class="sxs-lookup"><span data-stu-id="b0929-1562">Otherwise, it contains the same elements as `arguments` except that some of these <xref:System.Linq.Expressions.Expression> objects may be *quoted*.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b0929-1563">只有當對應委派的參數所代表項目會用引號括`expression`的型別<xref:System.Linq.Expressions.Expression>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1563">An element will be quoted only if the corresponding parameter of the delegate represented by `expression` is of type <xref:System.Linq.Expressions.Expression>.</span></span> <span data-ttu-id="b0929-1564">引號的表示項目包裝在<xref:System.Linq.Expressions.ExpressionType.Quote>節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1564">Quoting means the element is wrapped in a <xref:System.Linq.Expressions.ExpressionType.Quote> node.</span></span> <span data-ttu-id="b0929-1565">產生的節點是<xref:System.Linq.Expressions.UnaryExpression>其<xref:System.Linq.Expressions.UnaryExpression.Operand%2A>屬性則是項目`arguments`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1565">The resulting node is a <xref:System.Linq.Expressions.UnaryExpression> whose <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> property is the element of `arguments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-1566">下列範例示範如何使用<xref:System.Linq.Expressions.Expression.Invoke%28System.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%5B%5D%29>方法來建立<xref:System.Linq.Expressions.InvocationExpression>表示指定的引數的 lambda 運算式的引動過程。</span><span class="sxs-lookup"><span data-stu-id="b0929-1566">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.Invoke%28System.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%5B%5D%29> method to create an <xref:System.Linq.Expressions.InvocationExpression> that represents the invocation of a lambda expression with specified arguments.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#6)]
 [!code-vb[System.Linq.Expressions.Expression#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-1567">
            <paramref name="expression" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1567">
              <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-1568">
            <paramref name="expression" />.Type 不代表委派類型或 <see cref="T:System.Linq.Expressions.Expression`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1568">
              <paramref name="expression" />.Type does not represent a delegate type or an <see cref="T:System.Linq.Expressions.Expression`1" />.</span>
          </span>
          <span data-ttu-id="b0929-1569">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1569">-or-</span>
          </span>
          <span data-ttu-id="b0929-1570">
            <paramref name="arguments" /> 之項目的 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性無法指派給 <paramref name="expression" /> 所表示之委派的對應參數類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1570">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="arguments" /> is not assignable to the type of the corresponding parameter of the delegate represented by <paramref name="expression" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-1571">
            <paramref name="arguments" /> 包含的項目數與 <paramref name="expression" /> 所表示委派的參數清單不同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1571">
              <paramref name="arguments" /> does not contain the same number of elements as the list of parameters for the delegate represented by <paramref name="expression" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.InvocationExpression Invoke (System.Linq.Expressions.Expression expression, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.InvocationExpression Invoke(class System.Linq.Expressions.Expression expression, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::InvocationExpression ^ Invoke(System::Linq::Expressions::Expression ^ expression, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.InvocationExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-1572">
            <see cref="T:System.Linq.Expressions.Expression" />，代表要套用的委派或 Lambda 運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1572">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the delegate or lambda expression to be applied.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="b0929-1573">
            <see cref="T:System.Linq.Expressions.Expression" /> 物件的陣列，代表要套用委派或 Lambda 運算式的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1573">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects that represent the arguments that the delegate or lambda expression is applied to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1574">建立 <see cref="T:System.Linq.Expressions.InvocationExpression" />，將委派或 Lambda 運算式套用至引數運算式清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1574">Creates an <see cref="T:System.Linq.Expressions.InvocationExpression" /> that applies a delegate or lambda expression to a list of argument expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1575">
            <see cref="T:System.Linq.Expressions.InvocationExpression" />，可將指定的委派或 Lambda 運算式套用至所提供的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1575">An <see cref="T:System.Linq.Expressions.InvocationExpression" /> that applies the specified delegate or lambda expression to the provided arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1576"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.InvocationExpression>代表委派所表示的傳回型別`expression`。型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1576">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.InvocationExpression> represents the return type of the delegate that is represented by `expression`.Type.</span></span>  
  
 <span data-ttu-id="b0929-1577"><xref:System.Linq.Expressions.InvocationExpression.Arguments%2A>屬性產生<xref:System.Linq.Expressions.InvocationExpression>是空的如果`arguments`是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1577">The <xref:System.Linq.Expressions.InvocationExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.InvocationExpression> is empty if `arguments` is `null`.</span></span> <span data-ttu-id="b0929-1578">否則，就會包含相同項目，做為`arguments`除外，其中有些<xref:System.Linq.Expressions.Expression>物件可能*加上引號*。</span><span class="sxs-lookup"><span data-stu-id="b0929-1578">Otherwise, it contains the same elements as `arguments` except that some of these <xref:System.Linq.Expressions.Expression> objects may be *quoted*.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b0929-1579">只有當對應委派的參數所代表項目會用引號括`expression`的型別<xref:System.Linq.Expressions.Expression>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1579">An element will be quoted only if the corresponding parameter of the delegate represented by `expression` is of type <xref:System.Linq.Expressions.Expression>.</span></span> <span data-ttu-id="b0929-1580">引號的表示項目包裝在<xref:System.Linq.Expressions.ExpressionType.Quote>節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1580">Quoting means the element is wrapped in a <xref:System.Linq.Expressions.ExpressionType.Quote> node.</span></span> <span data-ttu-id="b0929-1581">產生的節點是<xref:System.Linq.Expressions.UnaryExpression>其<xref:System.Linq.Expressions.UnaryExpression.Operand%2A>屬性則是項目`arguments`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1581">The resulting node is a <xref:System.Linq.Expressions.UnaryExpression> whose <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> property is the element of `arguments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-1582">下列範例示範如何使用<xref:System.Linq.Expressions.Expression.Invoke%28System.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%5B%5D%29>方法來建立<xref:System.Linq.Expressions.InvocationExpression>表示指定的引數的 lambda 運算式的引動過程。</span><span class="sxs-lookup"><span data-stu-id="b0929-1582">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.Invoke%28System.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%5B%5D%29> method to create an <xref:System.Linq.Expressions.InvocationExpression> that represents the invocation of a lambda expression with specified arguments.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#6)]
 [!code-vb[System.Linq.Expressions.Expression#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-1583">
            <paramref name="expression" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1583">
              <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-1584">
            <paramref name="expression" />.Type 不代表委派類型或 <see cref="T:System.Linq.Expressions.Expression`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1584">
              <paramref name="expression" />.Type does not represent a delegate type or an <see cref="T:System.Linq.Expressions.Expression`1" />.</span>
          </span>
          <span data-ttu-id="b0929-1585">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1585">-or-</span>
          </span>
          <span data-ttu-id="b0929-1586">
            <paramref name="arguments" /> 之項目的 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性無法指派給 <paramref name="expression" /> 所表示之委派的對應參數類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1586">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="arguments" /> is not assignable to the type of the corresponding parameter of the delegate represented by <paramref name="expression" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-1587">
            <paramref name="arguments" /> 包含的項目數與 <paramref name="expression" /> 所表示委派的參數清單不同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1587">
              <paramref name="arguments" /> does not contain the same number of elements as the list of parameters for the delegate represented by <paramref name="expression" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsFalse">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-1588">傳回運算式是否評估為 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1588">Returns whether the expression evaluates to false.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsFalse">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression IsFalse (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression IsFalse(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ IsFalse(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-1589">要評估的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1589">An <see cref="T:System.Linq.Expressions.Expression" /> to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1590">傳回運算式是否評估為 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1590">Returns whether the expression evaluates to false.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1591">
            <see cref="T:System.Linq.Expressions.UnaryExpression" /> 的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1591">An instance of <see cref="T:System.Linq.Expressions.UnaryExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFalse">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression IsFalse (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression IsFalse(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ IsFalse(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-1592">要評估的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1592">An <see cref="T:System.Linq.Expressions.Expression" /> to evaluate.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-1593">表示實作方法的 <see cref="T:System.Reflection.MethodInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1593">A <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1594">傳回運算式是否評估為 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1594">Returns whether the expression evaluates to false.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1595">
            <see cref="T:System.Linq.Expressions.UnaryExpression" /> 的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1595">An instance of <see cref="T:System.Linq.Expressions.UnaryExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsTrue">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-1596">傳回運算式是否評估為 true。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1596">Returns whether the expression evaluates to true.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsTrue">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression IsTrue (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression IsTrue(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ IsTrue(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-1597">要評估的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1597">An <see cref="T:System.Linq.Expressions.Expression" /> to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1598">傳回運算式是否評估為 true。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1598">Returns whether the expression evaluates to true.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1599">
            <see cref="T:System.Linq.Expressions.UnaryExpression" /> 的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1599">An instance of <see cref="T:System.Linq.Expressions.UnaryExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTrue">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression IsTrue (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression IsTrue(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ IsTrue(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-1600">要評估的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1600">An <see cref="T:System.Linq.Expressions.Expression" /> to evaluate.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-1601">表示實作方法的 <see cref="T:System.Reflection.MethodInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1601">A <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1602">傳回運算式是否評估為 true。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1602">Returns whether the expression evaluates to true.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1603">
            <see cref="T:System.Linq.Expressions.UnaryExpression" /> 的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1603">An instance of <see cref="T:System.Linq.Expressions.UnaryExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Label">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-1604">建立表示標籤的 <see cref="T:System.Linq.Expressions.LabelTarget" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1604">Creates a <see cref="T:System.Linq.Expressions.LabelTarget" /> representing a label.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LabelTarget Label ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LabelTarget Label() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Label" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Label () As LabelTarget" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LabelTarget ^ Label();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LabelTarget</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b0929-1605">建立 <see cref="T:System.Linq.Expressions.LabelTarget" />，代表包含 void 類型但沒有名稱的標籤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1605">Creates a <see cref="T:System.Linq.Expressions.LabelTarget" /> representing a label with void type and no name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1606">新的 <see cref="T:System.Linq.Expressions.LabelTarget" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1606">The new <see cref="T:System.Linq.Expressions.LabelTarget" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0929-1607">下列範例示範如何建立包含的運算式<xref:System.Linq.Expressions.LabelTarget>物件。</span><span class="sxs-lookup"><span data-stu-id="b0929-1607">The following example demonstrates how to create an expression that contains a <xref:System.Linq.Expressions.LabelTarget> object.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#43](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#43)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#43](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#43)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LabelExpression Label (System.Linq.Expressions.LabelTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LabelExpression Label(class System.Linq.Expressions.LabelTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Label (target As LabelTarget) As LabelExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LabelExpression ^ Label(System::Linq::Expressions::LabelTarget ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LabelExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b0929-1608">這個 <see cref="T:System.Linq.Expressions.LabelTarget" /> 將與之產生關聯的 <see cref="T:System.Linq.Expressions.LabelExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1608">The <see cref="T:System.Linq.Expressions.LabelTarget" /> which this <see cref="T:System.Linq.Expressions.LabelExpression" /> will be associated with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1609">建立 <see cref="T:System.Linq.Expressions.LabelExpression" />，代表沒有預設值的標籤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1609">Creates a <see cref="T:System.Linq.Expressions.LabelExpression" /> representing a label without a default value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1610">沒有預設值的 <see cref="T:System.Linq.Expressions.LabelExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1610">A <see cref="T:System.Linq.Expressions.LabelExpression" /> without a default value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LabelTarget Label (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LabelTarget Label(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Label(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Label (name As String) As LabelTarget" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LabelTarget ^ Label(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LabelTarget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="b0929-1611">標籤名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1611">The name of the label.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1612">建立 <see cref="T:System.Linq.Expressions.LabelTarget" />，代表包含 void 類型和指定之名稱的標籤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1612">Creates a <see cref="T:System.Linq.Expressions.LabelTarget" /> representing a label with void type and the given name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1613">新的 <see cref="T:System.Linq.Expressions.LabelTarget" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1613">The new <see cref="T:System.Linq.Expressions.LabelTarget" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LabelTarget Label (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LabelTarget Label(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Label(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LabelTarget ^ Label(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LabelTarget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b0929-1614">跳至標籤時所傳遞值的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1614">The type of value that is passed when jumping to the label.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1615">建立 <see cref="T:System.Linq.Expressions.LabelTarget" />，代表包含指定之類型的標籤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1615">Creates a <see cref="T:System.Linq.Expressions.LabelTarget" /> representing a label with the given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1616">新的 <see cref="T:System.Linq.Expressions.LabelTarget" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1616">The new <see cref="T:System.Linq.Expressions.LabelTarget" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0929-1617">下列範例示範如何使用<xref:System.Linq.Expressions.LabelTarget>迴圈運算式中的物件。</span><span class="sxs-lookup"><span data-stu-id="b0929-1617">The following example demonstrates how to use a <xref:System.Linq.Expressions.LabelTarget> object in a loop expression.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#44](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#44)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#44](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#44)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LabelExpression Label (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LabelExpression Label(class System.Linq.Expressions.LabelTarget target, class System.Linq.Expressions.Expression defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Label (target As LabelTarget, defaultValue As Expression) As LabelExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LabelExpression ^ Label(System::Linq::Expressions::LabelTarget ^ target, System::Linq::Expressions::Expression ^ defaultValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LabelExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
        <Parameter Name="defaultValue" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b0929-1618">這個 <see cref="T:System.Linq.Expressions.LabelTarget" /> 將與之產生關聯的 <see cref="T:System.Linq.Expressions.LabelExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1618">The <see cref="T:System.Linq.Expressions.LabelTarget" /> which this <see cref="T:System.Linq.Expressions.LabelExpression" /> will be associated with.</span>
          </span>
        </param>
        <param name="defaultValue">
          <span data-ttu-id="b0929-1619">透過一般控制流程到達標籤時，這個 <see cref="T:System.Linq.Expressions.LabelExpression" /> 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1619">The value of this <see cref="T:System.Linq.Expressions.LabelExpression" /> when the label is reached through regular control flow.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1620">建立 <see cref="T:System.Linq.Expressions.LabelExpression" />，代表包含指定之預設值的標籤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1620">Creates a <see cref="T:System.Linq.Expressions.LabelExpression" /> representing a label with the given default value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1621">包含指定之預設值的 <see cref="T:System.Linq.Expressions.LabelExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1621">A <see cref="T:System.Linq.Expressions.LabelExpression" /> with the given default value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LabelTarget Label (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LabelTarget Label(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Label(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LabelTarget ^ Label(Type ^ type, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LabelTarget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b0929-1622">跳至標籤時所傳遞值的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1622">The type of value that is passed when jumping to the label.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="b0929-1623">標籤名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1623">The name of the label.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1624">建立 <see cref="T:System.Linq.Expressions.LabelTarget" />，代表包含指定之類型和名稱的標籤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1624">Creates a <see cref="T:System.Linq.Expressions.LabelTarget" /> representing a label with the given type and name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1625">新的 <see cref="T:System.Linq.Expressions.LabelTarget" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1625">The new <see cref="T:System.Linq.Expressions.LabelTarget" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Lambda">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-1626">建立表示 Lambda 運算式的運算式樹狀架構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1626">Creates an expression tree that represents a lambda expression.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Linq.Expressions.Expression body, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (body As Expression, parameters As IEnumerable(Of ParameterExpression)) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(System::Linq::Expressions::Expression ^ body, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="b0929-1627">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1627">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="b0929-1628">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" />，其中包含用以填入 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 集合的 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1628">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1629">首先透過建構委派類型來建立 LambdaExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1629">Creates a LambdaExpression by first constructing a delegate type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1630">
            <see cref="T:System.Linq.Expressions.LambdaExpression" />，其 <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> 屬性等於 Lambda，且 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 和 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1630">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to Lambda and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, params System.Linq.Expressions.ParameterExpression[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Linq.Expressions.Expression body, class System.Linq.Expressions.ParameterExpression[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (body As Expression, ParamArray parameters As ParameterExpression()) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(System::Linq::Expressions::Expression ^ body, ... cli::array &lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="parameters" Type="System.Linq.Expressions.ParameterExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="b0929-1631">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1631">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="b0929-1632">用以填入 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 集合之 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1632">An array of <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1633">首先透過建構委派類型來建立 <see cref="T:System.Linq.Expressions.LambdaExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1633">Creates a <see cref="T:System.Linq.Expressions.LambdaExpression" /> by first constructing a delegate type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1634">
            <see cref="T:System.Linq.Expressions.LambdaExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" />，且 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 和 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1634">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1635">`parameters`參數不能超過 16 個項目。</span><span class="sxs-lookup"><span data-stu-id="b0929-1635">The `parameters` parameter must not have more than sixteen elements.</span></span>  
  
 <span data-ttu-id="b0929-1636">項目`parameters`必須是參考參數運算式中等於`body`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1636">The elements of `parameters` must be reference equal to the parameter expressions in `body`.</span></span>  
  
 <span data-ttu-id="b0929-1637">這個方法會建構其中一個適當的委派類型`System.Func`泛型委派。</span><span class="sxs-lookup"><span data-stu-id="b0929-1637">This method constructs an appropriate delegate type from one of the `System.Func` generic delegates.</span></span> <span data-ttu-id="b0929-1638">接著，將委派類型的其中一個<xref:System.Linq.Expressions.ExpressionType.Lambda>factory 方法，來建立<xref:System.Linq.Expressions.LambdaExpression>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1638">It then passes the delegate type to one of the <xref:System.Linq.Expressions.ExpressionType.Lambda> factory methods to create a <xref:System.Linq.Expressions.LambdaExpression>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-1639">
            <paramref name="body" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1639">
              <paramref name="body" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-1640">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1640">-or-</span>
          </span>
          <span data-ttu-id="b0929-1641">
            <paramref name="parameters" /> 的一個或多個項目為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1641">One or more elements of <paramref name="parameters" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-1642">
            <paramref name="parameters" /> 包含十六個以上的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1642">
              <paramref name="parameters" /> contains more than sixteen elements.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, bool tailCall, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Linq.Expressions.Expression body, bool tailCall, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (body As Expression, tailCall As Boolean, parameters As IEnumerable(Of ParameterExpression)) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(System::Linq::Expressions::Expression ^ body, bool tailCall, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="tailCall" Type="System.Boolean" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="b0929-1643">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1643">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="tailCall">
          <span data-ttu-id="b0929-1644">
            <see cref="T:System.Boolean" />，其代表編譯所建立的運算式時，是否會套用 tail 呼叫最佳化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1644">A <see cref="T:System.Boolean" /> that indicates if tail call optimization will be applied when compiling the created expression.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="b0929-1645">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" />，其中包含用以填入 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 集合的 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1645">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1646">首先透過建構委派類型來建立 LambdaExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1646">Creates a LambdaExpression by first constructing a delegate type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1647">
            <see cref="T:System.Linq.Expressions.LambdaExpression" />，其 <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> 屬性等於 Lambda，且 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 和 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1647">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to Lambda and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, bool tailCall, params System.Linq.Expressions.ParameterExpression[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Linq.Expressions.Expression body, bool tailCall, class System.Linq.Expressions.ParameterExpression[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (body As Expression, tailCall As Boolean, ParamArray parameters As ParameterExpression()) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(System::Linq::Expressions::Expression ^ body, bool tailCall, ... cli::array &lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="tailCall" Type="System.Boolean" />
        <Parameter Name="parameters" Type="System.Linq.Expressions.ParameterExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="b0929-1648">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1648">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="tailCall">
          <span data-ttu-id="b0929-1649">
            <see cref="T:System.Boolean" />，其代表編譯所建立的運算式時，是否會套用 tail 呼叫最佳化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1649">A <see cref="T:System.Boolean" /> that indicates if tail call optimization will be applied when compiling the created expression.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="b0929-1650">陣列，其中包含用以填入 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 集合的 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1650">An array that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1651">首先透過建構委派類型來建立 LambdaExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1651">Creates a LambdaExpression by first constructing a delegate type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1652">
            <see cref="T:System.Linq.Expressions.LambdaExpression" />，其 <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> 屬性等於 Lambda，且 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 和 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1652">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to Lambda and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, string name, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Linq.Expressions.Expression body, string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (body As Expression, name As String, parameters As IEnumerable(Of ParameterExpression)) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(System::Linq::Expressions::Expression ^ body, System::String ^ name, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="b0929-1653">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1653">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="b0929-1654">Lambda 的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1654">The name for the lambda.</span>
          </span>
          <span data-ttu-id="b0929-1655">用於發出偵錯資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1655">Used for emitting debug information.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="b0929-1656">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" />，其中包含用以填入 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 集合的 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1656">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1657">首先透過建構委派類型來建立 LambdaExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1657">Creates a LambdaExpression by first constructing a delegate type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1658">
            <see cref="T:System.Linq.Expressions.LambdaExpression" />，其 <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> 屬性等於 Lambda，且 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 和 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1658">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to Lambda and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Type delegateType, class System.Linq.Expressions.Expression body, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (delegateType As Type, body As Expression, parameters As IEnumerable(Of ParameterExpression)) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(Type ^ delegateType, System::Linq::Expressions::Expression ^ body, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="delegateType">
          <span data-ttu-id="b0929-1659">
            <see cref="T:System.Type" />，代表 Lambda 的委派簽章。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1659">A <see cref="T:System.Type" /> that represents a delegate signature for the lambda.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="b0929-1660">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1660">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="b0929-1661">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" />，其中包含用以填入 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 集合的 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1661">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1662">首先透過建構委派類型來建立 <see cref="T:System.Linq.Expressions.LambdaExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1662">Creates a <see cref="T:System.Linq.Expressions.LambdaExpression" /> by first constructing a delegate type.</span>
          </span>
          <span data-ttu-id="b0929-1663">它可用於在編譯階段不知道委派類型時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1663">It can be used when the delegate type is not known at compile time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1664">表示 lambda 運算式的物件，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" />，且 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 和 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1664">An object that represents a lambda expression which has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1665">從這個函數傳回的物件屬於類型<xref:System.Linq.Expressions.Expression%601>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1665">The object that is returned from this function is of type <xref:System.Linq.Expressions.Expression%601>.</span></span> <span data-ttu-id="b0929-1666"><xref:System.Linq.Expressions.LambdaExpression>類型用來代表傳回的物件，因為 lambda 運算式的具象型別不在編譯時期已知。</span><span class="sxs-lookup"><span data-stu-id="b0929-1666">The <xref:System.Linq.Expressions.LambdaExpression> type is used to represent the returned object because the concrete type of the lambda expression is not known at compile time.</span></span>  
  
 <span data-ttu-id="b0929-1667">所表示的委派類型的參數數目`delegateType`必須等於長度`parameters`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1667">The number of parameters for the delegate type represented by`delegateType` must equal the length of `parameters`.</span></span>  
  
 <span data-ttu-id="b0929-1668">項目`parameters`必須是參考參數運算式中等於`body`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1668">The elements of `parameters` must be reference equal to the parameter expressions in `body`.</span></span>  
  
 <span data-ttu-id="b0929-1669"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生的物件等於`delegateType`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1669">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting object is equal to `delegateType`.</span></span> <span data-ttu-id="b0929-1670">如果`parameters`是`null`、<xref:System.Linq.Expressions.LambdaExpression.Parameters%2A>產生物件的屬性是空的集合。</span><span class="sxs-lookup"><span data-stu-id="b0929-1670">If `parameters` is `null`, the <xref:System.Linq.Expressions.LambdaExpression.Parameters%2A> property of the resulting object is an empty collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-1671">下列範例會示範如何建立代表增加 1 傳遞的引數的 lambda 運算式的運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-1671">The following example demonstrates how to create an expression that represents a lambda expression that adds 1 to the passed argument.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#42](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#42)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#42](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-1672">
            <paramref name="delegateType" /> 或 <paramref name="body" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1672">
              <paramref name="delegateType" /> or <paramref name="body" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-1673">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1673">-or-</span>
          </span>
          <span data-ttu-id="b0929-1674">
            <paramref name="parameters" /> 中的一個或多個項目為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1674">One or more elements in <paramref name="parameters" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-1675">
            <paramref name="delegateType" /> 不表示委派類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1675">
              <paramref name="delegateType" /> does not represent a delegate type.</span>
          </span>
          <span data-ttu-id="b0929-1676">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1676">-or-</span>
          </span>
          <span data-ttu-id="b0929-1677">
            <paramref name="body" />.Type 表示的類型無法指派給 <paramref name="delegateType" /> 所表示之委派類型的傳回類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1677">
              <paramref name="body" />.Type represents a type that is not assignable to the return type of the delegate type represented by <paramref name="delegateType" />.</span>
          </span>
          <span data-ttu-id="b0929-1678">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1678">-or-</span>
          </span>
          <span data-ttu-id="b0929-1679">
            <paramref name="parameters" /> 包含的項目數與 <paramref name="delegateType" /> 所表示之委派類型的參數清單不同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1679">
              <paramref name="parameters" /> does not contain the same number of elements as the list of parameters for the delegate type represented by <paramref name="delegateType" />.</span>
          </span>
          <span data-ttu-id="b0929-1680">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1680">-or-</span>
          </span>
          <span data-ttu-id="b0929-1681">
            <paramref name="parameters" /> 之項目的 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性無法從由 <paramref name="delegateType" /> 所表示之委派類型的對應參數類型指派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1681">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="parameters" /> is not assignable from the type of the corresponding parameter type of the delegate type represented by <paramref name="delegateType" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, params System.Linq.Expressions.ParameterExpression[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Type delegateType, class System.Linq.Expressions.Expression body, class System.Linq.Expressions.ParameterExpression[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (delegateType As Type, body As Expression, ParamArray parameters As ParameterExpression()) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(Type ^ delegateType, System::Linq::Expressions::Expression ^ body, ... cli::array &lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="parameters" Type="System.Linq.Expressions.ParameterExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="delegateType">
          <span data-ttu-id="b0929-1682">
            <see cref="T:System.Type" />，代表 Lambda 的委派簽章。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1682">A <see cref="T:System.Type" /> that represents a delegate signature for the lambda.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="b0929-1683">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1683">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="b0929-1684">用以填入 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 集合之 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1684">An array of <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1685">首先透過建構委派類型來建立 <see cref="T:System.Linq.Expressions.LambdaExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1685">Creates a <see cref="T:System.Linq.Expressions.LambdaExpression" /> by first constructing a delegate type.</span>
          </span>
          <span data-ttu-id="b0929-1686">它可用於在編譯階段不知道委派類型時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1686">It can be used when the delegate type is not known at compile time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1687">表示 lambda 運算式的物件，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" />，且 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 和 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1687">An object that represents a lambda expression which has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1688">從這個函數傳回的物件屬於類型<xref:System.Linq.Expressions.Expression%601>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1688">The object that is returned from this function is of type <xref:System.Linq.Expressions.Expression%601>.</span></span> <span data-ttu-id="b0929-1689"><xref:System.Linq.Expressions.LambdaExpression>類型用來代表傳回的物件，因為 lambda 運算式的具象型別不在編譯時期已知。</span><span class="sxs-lookup"><span data-stu-id="b0929-1689">The <xref:System.Linq.Expressions.LambdaExpression> type is used to represent the returned object because the concrete type of the lambda expression is not known at compile time.</span></span>  
  
 <span data-ttu-id="b0929-1690">所表示的委派類型的參數數目`delegateType`必須等於長度`parameters`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1690">The number of parameters for the delegate type represented by `delegateType` must equal the length of `parameters`.</span></span>  
  
 <span data-ttu-id="b0929-1691">項目`parameters`必須是參考參數運算式中等於`body`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1691">The elements of `parameters` must be reference equal to the parameter expressions in `body`.</span></span>  
  
 <span data-ttu-id="b0929-1692"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生的物件等於`delegateType`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1692">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting object is equal to `delegateType`.</span></span> <span data-ttu-id="b0929-1693">如果`parameters`是`null`、<xref:System.Linq.Expressions.LambdaExpression.Parameters%2A>產生物件的屬性是空的集合。</span><span class="sxs-lookup"><span data-stu-id="b0929-1693">If `parameters` is `null`, the <xref:System.Linq.Expressions.LambdaExpression.Parameters%2A> property of the resulting object is an empty collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-1694">
            <paramref name="delegateType" /> 或 <paramref name="body" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1694">
              <paramref name="delegateType" /> or <paramref name="body" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-1695">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1695">-or-</span>
          </span>
          <span data-ttu-id="b0929-1696">
            <paramref name="parameters" /> 中的一個或多個項目為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1696">One or more elements in <paramref name="parameters" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-1697">
            <paramref name="delegateType" /> 不表示委派類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1697">
              <paramref name="delegateType" /> does not represent a delegate type.</span>
          </span>
          <span data-ttu-id="b0929-1698">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1698">-or-</span>
          </span>
          <span data-ttu-id="b0929-1699">
            <paramref name="body" />.Type 表示的類型無法指派給 <paramref name="delegateType" /> 所表示之委派類型的傳回類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1699">
              <paramref name="body" />.Type represents a type that is not assignable to the return type of the delegate type represented by <paramref name="delegateType" />.</span>
          </span>
          <span data-ttu-id="b0929-1700">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1700">-or-</span>
          </span>
          <span data-ttu-id="b0929-1701">
            <paramref name="parameters" /> 包含的項目數與 <paramref name="delegateType" /> 所表示之委派類型的參數清單不同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1701">
              <paramref name="parameters" /> does not contain the same number of elements as the list of parameters for the delegate type represented by <paramref name="delegateType" />.</span>
          </span>
          <span data-ttu-id="b0929-1702">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1702">-or-</span>
          </span>
          <span data-ttu-id="b0929-1703">
            <paramref name="parameters" /> 之項目的 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性無法從由 <paramref name="delegateType" /> 所表示之委派類型的對應參數類型指派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1703">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="parameters" /> is not assignable from the type of the corresponding parameter type of the delegate type represented by <paramref name="delegateType" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, string name, bool tailCall, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Linq.Expressions.Expression body, string name, bool tailCall, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (body As Expression, name As String, tailCall As Boolean, parameters As IEnumerable(Of ParameterExpression)) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(System::Linq::Expressions::Expression ^ body, System::String ^ name, bool tailCall, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="tailCall" Type="System.Boolean" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="b0929-1704">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1704">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="b0929-1705">Lambda 的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1705">The name for the lambda.</span>
          </span>
          <span data-ttu-id="b0929-1706">用於發出偵錯資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1706">Used for emitting debug information.</span>
          </span>
        </param>
        <param name="tailCall">
          <span data-ttu-id="b0929-1707">
            <see cref="T:System.Boolean" />，其代表編譯所建立的運算式時，是否會套用 tail 呼叫最佳化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1707">A <see cref="T:System.Boolean" /> that indicates if tail call optimization will be applied when compiling the created expression.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="b0929-1708">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" />，其中包含用以填入 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 集合的 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1708">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1709">首先透過建構委派類型來建立 LambdaExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1709">Creates a LambdaExpression by first constructing a delegate type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1710">
            <see cref="T:System.Linq.Expressions.LambdaExpression" />，其 <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> 屬性等於 Lambda，且 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 和 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1710">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to Lambda and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, bool tailCall, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Type delegateType, class System.Linq.Expressions.Expression body, bool tailCall, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (delegateType As Type, body As Expression, tailCall As Boolean, parameters As IEnumerable(Of ParameterExpression)) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(Type ^ delegateType, System::Linq::Expressions::Expression ^ body, bool tailCall, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="tailCall" Type="System.Boolean" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="delegateType">
          <span data-ttu-id="b0929-1711">
            <see cref="P:System.Linq.Expressions.Expression.Type" />，代表 Lambda 的委派簽章。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1711">A <see cref="P:System.Linq.Expressions.Expression.Type" /> representing the delegate signature for the lambda.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="b0929-1712">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1712">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="tailCall">
          <span data-ttu-id="b0929-1713">
            <see cref="T:System.Boolean" />，其代表編譯所建立的運算式時，是否會套用 tail 呼叫最佳化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1713">A <see cref="T:System.Boolean" /> that indicates if tail call optimization will be applied when compiling the created expression.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="b0929-1714">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" />，其中包含用以填入 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 集合的 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1714">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1715">首先透過建構委派類型來建立 LambdaExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1715">Creates a LambdaExpression by first constructing a delegate type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1716">
            <see cref="T:System.Linq.Expressions.LambdaExpression" />，其 <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> 屬性等於 Lambda，且 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 和 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1716">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to Lambda and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, bool tailCall, params System.Linq.Expressions.ParameterExpression[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Type delegateType, class System.Linq.Expressions.Expression body, bool tailCall, class System.Linq.Expressions.ParameterExpression[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (delegateType As Type, body As Expression, tailCall As Boolean, ParamArray parameters As ParameterExpression()) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(Type ^ delegateType, System::Linq::Expressions::Expression ^ body, bool tailCall, ... cli::array &lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="tailCall" Type="System.Boolean" />
        <Parameter Name="parameters" Type="System.Linq.Expressions.ParameterExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="delegateType">
          <span data-ttu-id="b0929-1717">
            <see cref="P:System.Linq.Expressions.Expression.Type" />，代表 Lambda 的委派簽章。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1717">A <see cref="P:System.Linq.Expressions.Expression.Type" /> representing the delegate signature for the lambda.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="b0929-1718">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1718">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="tailCall">
          <span data-ttu-id="b0929-1719">
            <see cref="T:System.Boolean" />，其代表編譯所建立的運算式時，是否會套用 tail 呼叫最佳化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1719">A <see cref="T:System.Boolean" /> that indicates if tail call optimization will be applied when compiling the created expression.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="b0929-1720">陣列，其中包含用以填入 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 集合的 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1720">An array that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1721">首先透過建構委派類型來建立 LambdaExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1721">Creates a LambdaExpression by first constructing a delegate type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1722">
            <see cref="T:System.Linq.Expressions.LambdaExpression" />，其 <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> 屬性等於 Lambda，且 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 和 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1722">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to Lambda and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, string name, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Type delegateType, class System.Linq.Expressions.Expression body, string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (delegateType As Type, body As Expression, name As String, parameters As IEnumerable(Of ParameterExpression)) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(Type ^ delegateType, System::Linq::Expressions::Expression ^ body, System::String ^ name, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="delegateType">
          <span data-ttu-id="b0929-1723">
            <see cref="P:System.Linq.Expressions.Expression.Type" />，代表 Lambda 的委派簽章。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1723">A <see cref="P:System.Linq.Expressions.Expression.Type" /> representing the delegate signature for the lambda.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="b0929-1724">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1724">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="b0929-1725">Lambda 的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1725">The name for the lambda.</span>
          </span>
          <span data-ttu-id="b0929-1726">用於發出偵錯資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1726">Used for emitting debug information.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="b0929-1727">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" />，其中包含用以填入 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 集合的 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1727">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1728">首先透過建構委派類型來建立 LambdaExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1728">Creates a LambdaExpression by first constructing a delegate type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1729">
            <see cref="T:System.Linq.Expressions.LambdaExpression" />，其 <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> 屬性等於 Lambda，且 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 和 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1729">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to Lambda and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, string name, bool tailCall, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Type delegateType, class System.Linq.Expressions.Expression body, string name, bool tailCall, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (delegateType As Type, body As Expression, name As String, tailCall As Boolean, parameters As IEnumerable(Of ParameterExpression)) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(Type ^ delegateType, System::Linq::Expressions::Expression ^ body, System::String ^ name, bool tailCall, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="tailCall" Type="System.Boolean" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="delegateType">
          <span data-ttu-id="b0929-1730">
            <see cref="P:System.Linq.Expressions.Expression.Type" />，代表 Lambda 的委派簽章。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1730">A <see cref="P:System.Linq.Expressions.Expression.Type" /> representing the delegate signature for the lambda.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="b0929-1731">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1731">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="b0929-1732">Lambda 的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1732">The name for the lambda.</span>
          </span>
          <span data-ttu-id="b0929-1733">用於發出偵錯資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1733">Used for emitting debug information.</span>
          </span>
        </param>
        <param name="tailCall">
          <span data-ttu-id="b0929-1734">
            <see cref="T:System.Boolean" />，其代表編譯所建立的運算式時，是否會套用 tail 呼叫最佳化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1734">A <see cref="T:System.Boolean" /> that indicates if tail call optimization will be applied when compiling the created expression.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="b0929-1735">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" />，其中包含用以填入 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 集合的 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1735">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1736">首先透過建構委派類型來建立 LambdaExpression。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1736">Creates a LambdaExpression by first constructing a delegate type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1737">
            <see cref="T:System.Linq.Expressions.LambdaExpression" />，其 <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> 屬性等於 Lambda，且 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 和 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1737">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to Lambda and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression&lt;TDelegate&gt; Lambda&lt;TDelegate&gt; (System.Linq.Expressions.Expression body, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression`1&lt;!!TDelegate&gt; Lambda&lt;TDelegate&gt;(class System.Linq.Expressions.Expression body, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda(Of TDelegate) (body As Expression, parameters As IEnumerable(Of ParameterExpression)) As Expression(Of TDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static System::Linq::Expressions::Expression&lt;TDelegate&gt; ^ Lambda(System::Linq::Expressions::Expression ^ body, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;TDelegate&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDelegate">
          <span data-ttu-id="b0929-1738">委派類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1738">A delegate type.</span>
          </span>
        </typeparam>
        <param name="body">
          <span data-ttu-id="b0929-1739">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1739">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="b0929-1740">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" />，其中包含用以填入 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 集合的 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1740">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1741">建立 <see cref="T:System.Linq.Expressions.Expression`1" />，其中委派類型在編譯階段為已知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1741">Creates an <see cref="T:System.Linq.Expressions.Expression`1" /> where the delegate type is known at compile time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1742">
            <see cref="T:System.Linq.Expressions.Expression`1" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" />，且 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 和 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1742">An <see cref="T:System.Linq.Expressions.Expression`1" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1743">委派型別參數數目`TDelegate`必須等於中的項目數`parameters`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1743">The number of parameters for the delegate type `TDelegate` must equal the number of elements in `parameters`.</span></span>  
  
 <span data-ttu-id="b0929-1744">項目`parameters`必須是參考參數運算式中等於`body`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1744">The elements of `parameters` must be reference equal to the parameter expressions in `body`.</span></span>  
  
 <span data-ttu-id="b0929-1745"><xref:System.Linq.Expressions.Expression.Type%2A>產生物件的屬性表示的型別`TDelegate`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1745">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting object represents the type `TDelegate`.</span></span> <span data-ttu-id="b0929-1746">如果`parameters`是`null`、<xref:System.Linq.Expressions.LambdaExpression.Parameters%2A>產生物件的屬性是空的集合。</span><span class="sxs-lookup"><span data-stu-id="b0929-1746">If `parameters` is `null`, the <xref:System.Linq.Expressions.LambdaExpression.Parameters%2A> property of the resulting object is an empty collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-1747">
            <paramref name="body" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1747">
              <paramref name="body" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-1748">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1748">-or-</span>
          </span>
          <span data-ttu-id="b0929-1749">
            <paramref name="parameters" /> 中的一個或多個項目為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1749">One or more elements in <paramref name="parameters" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-1750">
            <paramref name="TDelegate" /> 不是委派類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1750">
              <paramref name="TDelegate" /> is not a delegate type.</span>
          </span>
          <span data-ttu-id="b0929-1751">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1751">-or-</span>
          </span>
          <span data-ttu-id="b0929-1752">
            <paramref name="body" />.Type 所表示的類型無法指派給 <paramref name="TDelegate" /> 的傳回類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1752">
              <paramref name="body" />.Type represents a type that is not assignable to the return type of <paramref name="TDelegate" />.</span>
          </span>
          <span data-ttu-id="b0929-1753">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1753">-or-</span>
          </span>
          <span data-ttu-id="b0929-1754">
            <paramref name="parameters" /> 包含的項目數與 <paramref name="TDelegate" /> 的參數清單不同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1754">
              <paramref name="parameters" /> does not contain the same number of elements as the list of parameters for <paramref name="TDelegate" />.</span>
          </span>
          <span data-ttu-id="b0929-1755">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1755">-or-</span>
          </span>
          <span data-ttu-id="b0929-1756">
            <paramref name="parameters" /> 之項目的 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性無法從 <paramref name="TDelegate" /> 之對應參數類型的類型指派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1756">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="parameters" /> is not assignable from the type of the corresponding parameter type of <paramref name="TDelegate" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Lambda&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression&lt;TDelegate&gt; Lambda&lt;TDelegate&gt; (System.Linq.Expressions.Expression body, params System.Linq.Expressions.ParameterExpression[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression`1&lt;!!TDelegate&gt; Lambda&lt;TDelegate&gt;(class System.Linq.Expressions.Expression body, class System.Linq.Expressions.ParameterExpression[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda(Of TDelegate) (body As Expression, ParamArray parameters As ParameterExpression()) As Expression(Of TDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static System::Linq::Expressions::Expression&lt;TDelegate&gt; ^ Lambda(System::Linq::Expressions::Expression ^ body, ... cli::array &lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;TDelegate&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="parameters" Type="System.Linq.Expressions.ParameterExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TDelegate">
          <span data-ttu-id="b0929-1757">委派類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1757">A delegate type.</span>
          </span>
        </typeparam>
        <param name="body">
          <span data-ttu-id="b0929-1758">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1758">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="b0929-1759">用以填入 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 集合之 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1759">An array of <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1760">建立 <see cref="T:System.Linq.Expressions.Expression`1" />，其中委派類型在編譯階段為已知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1760">Creates an <see cref="T:System.Linq.Expressions.Expression`1" /> where the delegate type is known at compile time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1761">
            <see cref="T:System.Linq.Expressions.Expression`1" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" />，且 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 和 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1761">An <see cref="T:System.Linq.Expressions.Expression`1" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1762">委派型別參數數目`TDelegate`必須等於中的項目數`parameters`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1762">The number of parameters for the delegate type `TDelegate` must equal the number of elements in `parameters`.</span></span>  
  
 <span data-ttu-id="b0929-1763">項目`parameters`必須是參考參數運算式中等於`body`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1763">The elements of `parameters` must be reference equal to the parameter expressions in`body`.</span></span>  
  
 <span data-ttu-id="b0929-1764"><xref:System.Linq.Expressions.Expression.Type%2A>產生物件的屬性表示的型別`TDelegate`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1764">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting object represents the type `TDelegate`.</span></span> <span data-ttu-id="b0929-1765">如果`parameters`是`null`、<xref:System.Linq.Expressions.LambdaExpression.Parameters%2A>產生物件的屬性是空的集合。</span><span class="sxs-lookup"><span data-stu-id="b0929-1765">If `parameters` is `null`, the <xref:System.Linq.Expressions.LambdaExpression.Parameters%2A> property of the resulting object is an empty collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-1766">
            <paramref name="body" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1766">
              <paramref name="body" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-1767">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1767">-or-</span>
          </span>
          <span data-ttu-id="b0929-1768">
            <paramref name="parameters" /> 中的一個或多個項目為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1768">One or more elements in <paramref name="parameters" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-1769">
            <paramref name="TDelegate" /> 不是委派類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1769">
              <paramref name="TDelegate" /> is not a delegate type.</span>
          </span>
          <span data-ttu-id="b0929-1770">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1770">-or-</span>
          </span>
          <span data-ttu-id="b0929-1771">
            <paramref name="body" />.Type 所表示的類型無法指派給 <paramref name="TDelegate" /> 的傳回類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1771">
              <paramref name="body" />.Type represents a type that is not assignable to the return type of <paramref name="TDelegate" />.</span>
          </span>
          <span data-ttu-id="b0929-1772">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1772">-or-</span>
          </span>
          <span data-ttu-id="b0929-1773">
            <paramref name="parameters" /> 包含的項目數與 <paramref name="TDelegate" /> 的參數清單不同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1773">
              <paramref name="parameters" /> does not contain the same number of elements as the list of parameters for <paramref name="TDelegate" />.</span>
          </span>
          <span data-ttu-id="b0929-1774">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1774">-or-</span>
          </span>
          <span data-ttu-id="b0929-1775">
            <paramref name="parameters" /> 之項目的 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性無法從 <paramref name="TDelegate" /> 之對應參數類型的類型指派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1775">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="parameters" /> is not assignable from the type of the corresponding parameter type of <paramref name="TDelegate" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Lambda&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression&lt;TDelegate&gt; Lambda&lt;TDelegate&gt; (System.Linq.Expressions.Expression body, bool tailCall, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression`1&lt;!!TDelegate&gt; Lambda&lt;TDelegate&gt;(class System.Linq.Expressions.Expression body, bool tailCall, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda(Of TDelegate) (body As Expression, tailCall As Boolean, parameters As IEnumerable(Of ParameterExpression)) As Expression(Of TDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static System::Linq::Expressions::Expression&lt;TDelegate&gt; ^ Lambda(System::Linq::Expressions::Expression ^ body, bool tailCall, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;TDelegate&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="tailCall" Type="System.Boolean" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDelegate">
          <span data-ttu-id="b0929-1776">委派類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1776">The delegate type.</span>
          </span>
        </typeparam>
        <param name="body">
          <span data-ttu-id="b0929-1777">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1777">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="tailCall">
          <span data-ttu-id="b0929-1778">
            <see cref="T:System.Boolean" />，其代表編譯所建立的運算式時，是否會套用 tail 呼叫最佳化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1778">A <see cref="T:System.Boolean" /> that indicates if tail call optimization will be applied when compiling the created expression.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="b0929-1779">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" />，其中包含用以填入 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 集合的 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1779">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1780">建立 <see cref="T:System.Linq.Expressions.Expression`1" />，其中委派類型在編譯階段為已知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1780">Creates an <see cref="T:System.Linq.Expressions.Expression`1" /> where the delegate type is known at compile time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1781">
            <see cref="T:System.Linq.Expressions.Expression`1" />，其 <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" />，且 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 和 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1781">An <see cref="T:System.Linq.Expressions.Expression`1" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression&lt;TDelegate&gt; Lambda&lt;TDelegate&gt; (System.Linq.Expressions.Expression body, bool tailCall, params System.Linq.Expressions.ParameterExpression[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression`1&lt;!!TDelegate&gt; Lambda&lt;TDelegate&gt;(class System.Linq.Expressions.Expression body, bool tailCall, class System.Linq.Expressions.ParameterExpression[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda(Of TDelegate) (body As Expression, tailCall As Boolean, ParamArray parameters As ParameterExpression()) As Expression(Of TDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static System::Linq::Expressions::Expression&lt;TDelegate&gt; ^ Lambda(System::Linq::Expressions::Expression ^ body, bool tailCall, ... cli::array &lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;TDelegate&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="tailCall" Type="System.Boolean" />
        <Parameter Name="parameters" Type="System.Linq.Expressions.ParameterExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TDelegate">
          <span data-ttu-id="b0929-1782">委派類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1782">The delegate type.</span>
          </span>
        </typeparam>
        <param name="body">
          <span data-ttu-id="b0929-1783">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1783">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="tailCall">
          <span data-ttu-id="b0929-1784">
            <see cref="T:System.Boolean" />，其代表編譯所建立的運算式時，是否會套用 tail 呼叫最佳化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1784">A <see cref="T:System.Boolean" /> that indicates if tail call optimization will be applied when compiling the created expression.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="b0929-1785">陣列，其中包含用以填入 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 集合的 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1785">An array that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1786">建立 <see cref="T:System.Linq.Expressions.Expression`1" />，其中委派類型在編譯階段為已知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1786">Creates an <see cref="T:System.Linq.Expressions.Expression`1" /> where the delegate type is known at compile time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1787">
            <see cref="T:System.Linq.Expressions.Expression`1" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" />，且 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 和 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1787">An <see cref="T:System.Linq.Expressions.Expression`1" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression&lt;TDelegate&gt; Lambda&lt;TDelegate&gt; (System.Linq.Expressions.Expression body, string name, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression`1&lt;!!TDelegate&gt; Lambda&lt;TDelegate&gt;(class System.Linq.Expressions.Expression body, string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda(Of TDelegate) (body As Expression, name As String, parameters As IEnumerable(Of ParameterExpression)) As Expression(Of TDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static System::Linq::Expressions::Expression&lt;TDelegate&gt; ^ Lambda(System::Linq::Expressions::Expression ^ body, System::String ^ name, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;TDelegate&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDelegate">
          <span data-ttu-id="b0929-1788">委派類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1788">The delegate type.</span>
          </span>
        </typeparam>
        <param name="body">
          <span data-ttu-id="b0929-1789">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1789">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="b0929-1790">Lambda 的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1790">The name of the lambda.</span>
          </span>
          <span data-ttu-id="b0929-1791">用於產生偵錯資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1791">Used for generating debugging information.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="b0929-1792">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" />，其中包含用以填入 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 集合的 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1792">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1793">建立 <see cref="T:System.Linq.Expressions.Expression`1" />，其中委派類型在編譯階段為已知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1793">Creates an <see cref="T:System.Linq.Expressions.Expression`1" /> where the delegate type is known at compile time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1794">
            <see cref="T:System.Linq.Expressions.Expression`1" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" />，且 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 和 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1794">An <see cref="T:System.Linq.Expressions.Expression`1" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression&lt;TDelegate&gt; Lambda&lt;TDelegate&gt; (System.Linq.Expressions.Expression body, string name, bool tailCall, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression`1&lt;!!TDelegate&gt; Lambda&lt;TDelegate&gt;(class System.Linq.Expressions.Expression body, string name, bool tailCall, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda(Of TDelegate) (body As Expression, name As String, tailCall As Boolean, parameters As IEnumerable(Of ParameterExpression)) As Expression(Of TDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static System::Linq::Expressions::Expression&lt;TDelegate&gt; ^ Lambda(System::Linq::Expressions::Expression ^ body, System::String ^ name, bool tailCall, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;TDelegate&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="tailCall" Type="System.Boolean" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDelegate">
          <span data-ttu-id="b0929-1795">委派類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1795">The delegate type.</span>
          </span>
        </typeparam>
        <param name="body">
          <span data-ttu-id="b0929-1796">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1796">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="b0929-1797">Lambda 的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1797">The name of the lambda.</span>
          </span>
          <span data-ttu-id="b0929-1798">用於產生偵錯資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1798">Used for generating debugging info.</span>
          </span>
        </param>
        <param name="tailCall">
          <span data-ttu-id="b0929-1799">
            <see cref="T:System.Boolean" />，其代表編譯所建立的運算式時，是否會套用 tail 呼叫最佳化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1799">A <see cref="T:System.Boolean" /> that indicates if tail call optimization will be applied when compiling the created expression.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="b0929-1800">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" />，其中包含用以填入 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 集合的 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1800">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1801">建立 <see cref="T:System.Linq.Expressions.Expression`1" />，其中委派類型在編譯階段為已知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1801">Creates an <see cref="T:System.Linq.Expressions.Expression`1" /> where the delegate type is known at compile time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1802">
            <see cref="T:System.Linq.Expressions.Expression`1" />，其 <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" />，且 <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> 和 <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1802">An <see cref="T:System.Linq.Expressions.Expression`1" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LeftShift">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-1803">建立表示位元左移 (Left-Shift) 運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1803">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise left-shift operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LeftShift">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression LeftShift (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression LeftShift(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShift (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ LeftShift(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-1804">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1804">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-1805">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1805">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1806">建立表示位元左移 (Left-Shift) 運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1806">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise left-shift operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1807">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.LeftShift" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1807">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.LeftShift" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1808">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1808">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-1809"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-1809">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-1810">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1810">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-1811">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1811">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-1812"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1812">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-1813">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-1813">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-1814">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-1814">Implementing Method</span></span>  
 <span data-ttu-id="b0929-1815">下列規則決定作業選取實作的方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-1815">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-1816">如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載左移位運算子<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1816">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the left-shift operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1817">否則，如果`left`。類型是整數類資料類型 (其中<xref:System.Byte>， <xref:System.SByte>， <xref:System.Int16>， <xref:System.UInt16>， <xref:System.Int32>， <xref:System.UInt32>， <xref:System.Int64>， <xref:System.UInt64>，或對應可為 null 的類型) 和`right`。型別是<xref:System.Int32>、 實作方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1817">Otherwise, if `left`.Type is an integral type (one of <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, or the corresponding nullable types) and `right`.Type is <xref:System.Int32>, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-1818">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-1818">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-1819">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1819">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1820">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1820">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-1821">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1821">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1822">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-1822">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-1823">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1823">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-1824">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-1824">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-1825">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1825">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1826">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1826">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-1827">節點的類型是預先定義的左移位運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1827">The type of the node is the result type of the predefined left-shift operator.</span></span>  
  
-   <span data-ttu-id="b0929-1828">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1828">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-1829">節點的類型為 null 的型別對應至預先定義的左移位運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1829">The type of the node is the nullable type that corresponds to the result type of the predefined left-shift operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-1830">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1830">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-1831">不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type. 定義 Left-shift 運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1831">The left-shift operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LeftShift">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression LeftShift (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression LeftShift(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShift (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ LeftShift(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-1832">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1832">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-1833">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1833">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-1834">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1834">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1835">建立表示位元左移 (Left-Shift) 運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1835">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise left-shift operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1836">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.LeftShift" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1836">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.LeftShift" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1837">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1837">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-1838"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-1838">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-1839">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1839">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-1840">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1840">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-1841"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1841">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-1842">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-1842">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-1843">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-1843">Implementing Method</span></span>  
 <span data-ttu-id="b0929-1844">下列規則決定作業選取實作的方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-1844">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-1845">如果`method`不`null`，而它代表非 void， `static` (`Shared`在 Visual Basic 中) 採用兩個引數，方法是節點的實作方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1845">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="b0929-1846">否則，如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載左移位運算子<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1846">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the left-shift operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1847">否則，如果`left`。類型是整數類資料類型 (其中<xref:System.Byte>， <xref:System.SByte>， <xref:System.Int16>， <xref:System.UInt16>， <xref:System.Int32>， <xref:System.UInt32>， <xref:System.Int64>， <xref:System.UInt64>，或對應可為 null 的類型) 和`right`。型別是<xref:System.Int32>、 實作方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1847">Otherwise, if `left`.Type is an integral type (one of <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, or the corresponding nullable types) and `right`.Type is <xref:System.Int32>, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-1848">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-1848">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-1849">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1849">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1850">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1850">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-1851">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1851">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1852">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-1852">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-1853">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1853">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-1854">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-1854">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-1855">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1855">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1856">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1856">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-1857">節點的類型是預先定義的左移位運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1857">The type of the node is the result type of the predefined left-shift operator.</span></span>  
  
-   <span data-ttu-id="b0929-1858">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1858">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-1859">節點的類型為 null 的型別對應至預先定義的左移位運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1859">The type of the node is the nullable type that corresponds to the result type of the predefined left-shift operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-1860">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1860">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-1861">
            <paramref name="method" /> 不是 <see langword="null" />，而它所代表的方法會傳回 <see langword="void" />、不是 <see langword="static" /> (Visual Basic 中的 <see langword="Shared" />)，或者未確切採用兩個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1861">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-1862">
            <paramref name="method" /> 為 <see langword="null" /> 且不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義 Left-shift 運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1862">
              <paramref name="method" /> is <see langword="null" /> and the left-shift operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LeftShiftAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-1863">建立表示位元左移位指派運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1863">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise left-shift assignment operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LeftShiftAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression LeftShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression LeftShiftAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShiftAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ LeftShiftAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-1864">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1864">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-1865">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1865">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1866">建立表示位元左移位指派運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1866">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise left-shift assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1867">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.LeftShiftAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1867">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.LeftShiftAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftShiftAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression LeftShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression LeftShiftAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShiftAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ LeftShiftAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-1868">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1868">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-1869">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1869">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-1870">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1870">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1871">建立表示位元左移位指派運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1871">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise left-shift assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1872">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.LeftShiftAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1872">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.LeftShiftAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftShiftAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression LeftShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression LeftShiftAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShiftAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ LeftShiftAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-1873">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1873">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-1874">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1874">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-1875">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1875">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="b0929-1876">要將 <see cref="T:System.Linq.Expressions.LambdaExpression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1876">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1877">建立表示位元左移位指派運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1877">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise left-shift assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1878">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.LeftShiftAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1878">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.LeftShiftAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LessThan">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-1879">建立代表「小於」數值比較的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1879">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "less than" numeric comparison.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression LessThan (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression LessThan(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LessThan (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ LessThan(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-1880">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1880">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-1881">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1881">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1882">建立代表「小於」數值比較的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1882">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "less than" numeric comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1883">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.LessThan" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1883">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.LessThan" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1884">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1884">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-1885"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-1885">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-1886">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>屬性是`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1886">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true`.</span></span> <span data-ttu-id="b0929-1887">否則為 `false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1887">Otherwise, it is `false`.</span></span> <span data-ttu-id="b0929-1888"><xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 屬性一律為 `false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1888">The <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is always `false`.</span></span> <span data-ttu-id="b0929-1889"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1889">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-1890">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-1890">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-1891">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-1891">Implementing Method</span></span>  
 <span data-ttu-id="b0929-1892">作業的實作方法是選擇根據下列規則：</span><span class="sxs-lookup"><span data-stu-id="b0929-1892">The implementing method for the operation is chosen based on the following rules:</span></span>  
  
-   <span data-ttu-id="b0929-1893">如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`代表 「 小於 」 運算子多載的使用者定義型別<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1893">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the "less than" operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1894">否則，如果`left`。型別和`right`。類型為數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1894">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-1895">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-1895">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-1896">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1896">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1897">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1897">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-1898">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1898">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1899">如果滿足下列兩個條件時，則會消除節點和節點的類型是<xref:System.Boolean>:</span><span class="sxs-lookup"><span data-stu-id="b0929-1899">If the following two conditions are satisfied, the node is lifted and the type of the node is <xref:System.Boolean>:</span></span>  
  
    -   <span data-ttu-id="b0929-1900">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1900">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-1901">實作方法的傳回型別是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1901">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="b0929-1902">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1902">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1903">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1903">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-1904">節點的類型是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1904">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="b0929-1905">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1905">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-1906">節點的類型是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1906">The type of the node is <xref:System.Boolean>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-1907">下列程式碼範例示範如何建立會比較兩個整數的運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-1907">The following code example shows how to create an expression that compares two integers.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#25)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-1908">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1908">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-1909">不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義「小於」運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1909">The "less than" operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression LessThan (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression LessThan(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, bool liftToNull, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LessThan (left As Expression, right As Expression, liftToNull As Boolean, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ LessThan(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, bool liftToNull, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="liftToNull" Type="System.Boolean" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-1910">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1910">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-1911">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1911">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="liftToNull">
          <span data-ttu-id="b0929-1912">
            <see langword="true" /> 表示將 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> 設定為 <see langword="true" />，<see langword="false" /> 則表示將 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> 設定為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1912">
              <see langword="true" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="true" />; <see langword="false" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="false" />.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-1913">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1913">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1914">建立代表「小於」數值比較的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1914">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "less than" numeric comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1915">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.LessThan" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" />、<see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1915">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.LessThan" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1916">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1916">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-1917"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-1917">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-1918">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>屬性是`true`和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性等於`liftToNull`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1918">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true` and the <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is equal to `liftToNull`.</span></span> <span data-ttu-id="b0929-1919">否則，兩者都`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1919">Otherwise, they are both `false`.</span></span> <span data-ttu-id="b0929-1920"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1920">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-1921">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-1921">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-1922">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-1922">Implementing Method</span></span>  
 <span data-ttu-id="b0929-1923">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-1923">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-1924">如果`method`不`null`，而它代表非 void， `static` (`Shared`在 Visual Basic 中) 採用兩個引數，方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1924">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1925">否則，如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`代表 「 小於 」 運算子多載的使用者定義型別<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1925">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the "less than" operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1926">否則，如果`left`。型別和`right`。類型為數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1926">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-1927">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-1927">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-1928">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1928">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1929">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1929">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-1930">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1930">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1931">如果符合下列兩種情況，則會消除節點。此外，節點的類型可為 null<xref:System.Boolean>如果`liftToNull`是`true`或<xref:System.Boolean>如果`liftToNull`是`false`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1931">If the following two conditions are satisfied, the node is lifted; also, the type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`:</span></span>  
  
    -   <span data-ttu-id="b0929-1932">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1932">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-1933">實作方法的傳回型別是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1933">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="b0929-1934">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1934">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1935">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1935">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-1936">節點的類型是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1936">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="b0929-1937">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1937">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-1938">節點的類型可為 null<xref:System.Boolean>如果`liftToNull`是`true`或<xref:System.Boolean>如果`liftToNull`是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1938">The type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-1939">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1939">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-1940">
            <paramref name="method" /> 不是 <see langword="null" />，而它所代表的方法會傳回 <see langword="void" />、不是 <see langword="static" /> (Visual Basic 中的 <see langword="Shared" />)，或者未確切採用兩個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1940">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-1941">
            <paramref name="method" /> 是 <see langword="null" />，而且未定義 <paramref name="left" />.Type 和 <paramref name="right" />.Type 的「小於」運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1941">
              <paramref name="method" /> is <see langword="null" /> and the "less than" operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LessThanOrEqual">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-1942">建立代表「小於或等於」數值比較的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1942">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a " less than or equal" numeric comparison.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression LessThanOrEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression LessThanOrEqual(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LessThanOrEqual (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ LessThanOrEqual(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-1943">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1943">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-1944">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1944">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1945">建立代表「小於或等於」數值比較的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1945">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a " less than or equal" numeric comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1946">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.LessThanOrEqual" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1946">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.LessThanOrEqual" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1947">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1947">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-1948"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-1948">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-1949">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>屬性是`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1949">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true`.</span></span> <span data-ttu-id="b0929-1950">否則為 `false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1950">Otherwise, it is `false`.</span></span> <span data-ttu-id="b0929-1951"><xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 屬性一律為 `false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1951">The <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is always `false`.</span></span> <span data-ttu-id="b0929-1952"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1952">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-1953">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-1953">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-1954">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-1954">Implementing Method</span></span>  
 <span data-ttu-id="b0929-1955">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-1955">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-1956">如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`代表 「 小於或等於 」 運算子多載的使用者定義型別<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1956">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the "less than or equal" operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1957">否則，如果`left`。型別和`right`。類型為數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1957">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-1958">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-1958">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-1959">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1959">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1960">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1960">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-1961">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1961">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1962">如果滿足下列兩個條件時，則會消除節點和節點的類型是<xref:System.Boolean>:</span><span class="sxs-lookup"><span data-stu-id="b0929-1962">If the following two conditions are satisfied, the node is lifted and the type of the node is <xref:System.Boolean>:</span></span>  
  
    -   <span data-ttu-id="b0929-1963">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1963">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-1964">實作方法的傳回型別是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1964">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="b0929-1965">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1965">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1966">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1966">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-1967">節點的類型是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1967">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="b0929-1968">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1968">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-1969">節點的類型是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1969">The type of the node is <xref:System.Boolean>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-1970">下列程式碼範例示範如何建立會比較兩個整數的運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-1970">The following code example shows how to create an expression that compares two integers.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#26)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-1971">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1971">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-1972">不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義「小於或等於」運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1972">The "less than or equal" operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression LessThanOrEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression LessThanOrEqual(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, bool liftToNull, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LessThanOrEqual (left As Expression, right As Expression, liftToNull As Boolean, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ LessThanOrEqual(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, bool liftToNull, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="liftToNull" Type="System.Boolean" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-1973">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1973">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-1974">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1974">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="liftToNull">
          <span data-ttu-id="b0929-1975">
            <see langword="true" /> 表示將 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> 設定為 <see langword="true" />，<see langword="false" /> 則表示將 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> 設定為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1975">
              <see langword="true" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="true" />; <see langword="false" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="false" />.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-1976">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1976">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-1977">建立代表「小於或等於」數值比較的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1977">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "less than or equal" numeric comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-1978">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.LessThanOrEqual" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" />、<see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-1978">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.LessThanOrEqual" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-1979">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1979">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-1980"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-1980">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-1981">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>屬性是`true`和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性等於`liftToNull`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1981">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true` and the <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is equal to `liftToNull`.</span></span> <span data-ttu-id="b0929-1982">否則，兩者都`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1982">Otherwise, they are both `false`.</span></span> <span data-ttu-id="b0929-1983"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1983">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-1984">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-1984">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-1985">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-1985">Implementing Method</span></span>  
 <span data-ttu-id="b0929-1986">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-1986">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-1987">如果`method`不`null`，而它代表非 void， `static` (`Shared`在 Visual Basic 中) 採用兩個引數，方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1987">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1988">否則，如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`代表 「 小於或等於 」 運算子多載的使用者定義型別<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-1988">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the "less than or equal" operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1989">否則，如果`left`。型別和`right`。類型為數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-1989">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-1990">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-1990">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-1991">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1991">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1992">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1992">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-1993">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1993">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-1994">如果符合下列兩種情況，則會消除節點。此外，節點的類型可為 null<xref:System.Boolean>如果`liftToNull`是`true`或<xref:System.Boolean>如果`liftToNull`是`false`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1994">If the following two conditions are satisfied, the node is lifted; also, the type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`:</span></span>  
  
    -   <span data-ttu-id="b0929-1995">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-1995">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-1996">實作方法的傳回型別是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1996">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="b0929-1997">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-1997">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-1998">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-1998">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-1999">節點的類型是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-1999">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="b0929-2000">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2000">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-2001">節點的類型可為 null<xref:System.Boolean>如果`liftToNull`是`true`或<xref:System.Boolean>如果`liftToNull`是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2001">The type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2002">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2002">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2003">
            <paramref name="method" /> 不是 <see langword="null" />，而它所代表的方法會傳回 <see langword="void" />、不是 <see langword="static" /> (Visual Basic 中的 <see langword="Shared" />)，或者未確切採用兩個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2003">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-2004">
            <paramref name="method" /> 為 <see langword="null" />，且不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義「小於或等於」運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2004">
              <paramref name="method" /> is <see langword="null" /> and the "less than or equal" operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ListBind">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-2005">建立 <see cref="T:System.Linq.Expressions.MemberListBinding" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2005">Creates a <see cref="T:System.Linq.Expressions.MemberListBinding" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ListBind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberListBinding ListBind (System.Reflection.MemberInfo member, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ElementInit&gt; initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberListBinding ListBind(class System.Reflection.MemberInfo member, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ElementInit&gt; initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ListBind (member As MemberInfo, initializers As IEnumerable(Of ElementInit)) As MemberListBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberListBinding ^ ListBind(System::Reflection::MemberInfo ^ member, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ElementInit ^&gt; ^ initializers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberListBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ElementInit&gt;" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="b0929-2006">
            <see cref="T:System.Reflection.MemberInfo" />，表示要將 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 屬性設定為與之相等的欄位或屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2006">A <see cref="T:System.Reflection.MemberInfo" /> that represents a field or property to set the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property equal to.</span>
          </span>
        </param>
        <param name="initializers">
          <span data-ttu-id="b0929-2007">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" />，其中包含用以填入 <see cref="T:System.Linq.Expressions.ElementInit" /> 集合的 <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2007">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ElementInit" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2008">建立 <see cref="T:System.Linq.Expressions.MemberListBinding" />，其中成員是欄位或屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2008">Creates a <see cref="T:System.Linq.Expressions.MemberListBinding" /> where the member is a field or property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2009">
            <see cref="T:System.Linq.Expressions.MemberListBinding" />，其 <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> 屬性等於 <see cref="F:System.Linq.Expressions.MemberBindingType.ListBinding" />，且 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 和 <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2009">A <see cref="T:System.Linq.Expressions.MemberListBinding" /> that has the <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> property equal to <see cref="F:System.Linq.Expressions.MemberBindingType.ListBinding" /> and the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> and <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2010">
            <paramref name="member" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2010">
              <paramref name="member" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-2011">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2011">-or-</span>
          </span>
          <span data-ttu-id="b0929-2012">
            <paramref name="initializers" /> 的一個或多個項目為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2012">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2013">
            <paramref name="member" /> 不代表欄位或屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2013">
              <paramref name="member" /> does not represent a field or property.</span>
          </span>
          <span data-ttu-id="b0929-2014">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2014">-or-</span>
          </span>
          <span data-ttu-id="b0929-2015">
            <paramref name="member" /> 所表示之欄位或屬性的 <see cref="P:System.Reflection.FieldInfo.FieldType" /> 或 <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> 不會實作 <see cref="T:System.Collections.IEnumerable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2015">The <see cref="P:System.Reflection.FieldInfo.FieldType" /> or <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> of the field or property that <paramref name="member" /> represents does not implement <see cref="T:System.Collections.IEnumerable" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ListBind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberListBinding ListBind (System.Reflection.MemberInfo member, params System.Linq.Expressions.ElementInit[] initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberListBinding ListBind(class System.Reflection.MemberInfo member, class System.Linq.Expressions.ElementInit[] initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ListBind (member As MemberInfo, ParamArray initializers As ElementInit()) As MemberListBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberListBinding ^ ListBind(System::Reflection::MemberInfo ^ member, ... cli::array &lt;System::Linq::Expressions::ElementInit ^&gt; ^ initializers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberListBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="initializers" Type="System.Linq.Expressions.ElementInit[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="b0929-2016">
            <see cref="T:System.Reflection.MemberInfo" />，表示要將 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 屬性設定為與之相等的欄位或屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2016">A <see cref="T:System.Reflection.MemberInfo" /> that represents a field or property to set the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property equal to.</span>
          </span>
        </param>
        <param name="initializers">
          <span data-ttu-id="b0929-2017">用以填入 <see cref="T:System.Linq.Expressions.ElementInit" /> 集合之 <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2017">An array of <see cref="T:System.Linq.Expressions.ElementInit" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2018">建立 <see cref="T:System.Linq.Expressions.MemberListBinding" />，其中成員是欄位或屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2018">Creates a <see cref="T:System.Linq.Expressions.MemberListBinding" /> where the member is a field or property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2019">
            <see cref="T:System.Linq.Expressions.MemberListBinding" />，其 <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> 屬性等於 <see cref="F:System.Linq.Expressions.MemberBindingType.ListBinding" />，且 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 和 <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2019">A <see cref="T:System.Linq.Expressions.MemberListBinding" /> that has the <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> property equal to <see cref="F:System.Linq.Expressions.MemberBindingType.ListBinding" /> and the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> and <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2020">
            <paramref name="member" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2020">
              <paramref name="member" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-2021">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2021">-or-</span>
          </span>
          <span data-ttu-id="b0929-2022">
            <paramref name="initializers" /> 的一個或多個項目為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2022">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2023">
            <paramref name="member" /> 不代表欄位或屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2023">
              <paramref name="member" /> does not represent a field or property.</span>
          </span>
          <span data-ttu-id="b0929-2024">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2024">-or-</span>
          </span>
          <span data-ttu-id="b0929-2025">
            <paramref name="member" /> 所表示之欄位或屬性的 <see cref="P:System.Reflection.FieldInfo.FieldType" /> 或 <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> 不會實作 <see cref="T:System.Collections.IEnumerable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2025">The <see cref="P:System.Reflection.FieldInfo.FieldType" /> or <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> of the field or property that <paramref name="member" /> represents does not implement <see cref="T:System.Collections.IEnumerable" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ListBind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberListBinding ListBind (System.Reflection.MethodInfo propertyAccessor, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ElementInit&gt; initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberListBinding ListBind(class System.Reflection.MethodInfo propertyAccessor, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ElementInit&gt; initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ListBind (propertyAccessor As MethodInfo, initializers As IEnumerable(Of ElementInit)) As MemberListBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberListBinding ^ ListBind(System::Reflection::MethodInfo ^ propertyAccessor, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ElementInit ^&gt; ^ initializers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberListBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyAccessor" Type="System.Reflection.MethodInfo" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ElementInit&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyAccessor">
          <span data-ttu-id="b0929-2026">代表屬性存取子方法的 <see cref="T:System.Reflection.MethodInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2026">A <see cref="T:System.Reflection.MethodInfo" /> that represents a property accessor method.</span>
          </span>
        </param>
        <param name="initializers">
          <span data-ttu-id="b0929-2027">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" />，其中包含用以填入 <see cref="T:System.Linq.Expressions.ElementInit" /> 集合的 <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2027">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ElementInit" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2028">根據指定的屬性存取子方法建立 <see cref="T:System.Linq.Expressions.MemberListBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2028">Creates a <see cref="T:System.Linq.Expressions.MemberListBinding" /> based on a specified property accessor method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2029">
            <see cref="T:System.Linq.Expressions.MemberListBinding" />，其 <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> 屬性等於 <see cref="F:System.Linq.Expressions.MemberBindingType.ListBinding" />，並將 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 屬性設定為 <see cref="T:System.Reflection.MemberInfo" />，表示在 <paramref name="propertyAccessor" /> 中存取的屬性，<see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> 則會填入 <paramref name="initializers" /> 的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2029">A <see cref="T:System.Linq.Expressions.MemberListBinding" /> that has the <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> property equal to <see cref="F:System.Linq.Expressions.MemberBindingType.ListBinding" />, the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property set to the <see cref="T:System.Reflection.MemberInfo" /> that represents the property accessed in <paramref name="propertyAccessor" />, and <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> populated with the elements of <paramref name="initializers" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2030">
            <paramref name="propertyAccessor" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2030">
              <paramref name="propertyAccessor" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-2031">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2031">-or-</span>
          </span>
          <span data-ttu-id="b0929-2032">
            <paramref name="initializers" /> 的一個或多個項目為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2032">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2033">
            <paramref name="propertyAccessor" /> 不代表屬性存取子方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2033">
              <paramref name="propertyAccessor" /> does not represent a property accessor method.</span>
          </span>
          <span data-ttu-id="b0929-2034">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2034">-or-</span>
          </span>
          <span data-ttu-id="b0929-2035">屬性 (由 <paramref name="propertyAccessor" /> 存取表示的方法) 的 <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> 不會實作 <see cref="T:System.Collections.IEnumerable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2035">The <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> of the property that the method represented by <paramref name="propertyAccessor" /> accesses does not implement <see cref="T:System.Collections.IEnumerable" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ListBind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberListBinding ListBind (System.Reflection.MethodInfo propertyAccessor, params System.Linq.Expressions.ElementInit[] initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberListBinding ListBind(class System.Reflection.MethodInfo propertyAccessor, class System.Linq.Expressions.ElementInit[] initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ListBind (propertyAccessor As MethodInfo, ParamArray initializers As ElementInit()) As MemberListBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberListBinding ^ ListBind(System::Reflection::MethodInfo ^ propertyAccessor, ... cli::array &lt;System::Linq::Expressions::ElementInit ^&gt; ^ initializers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberListBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyAccessor" Type="System.Reflection.MethodInfo" />
        <Parameter Name="initializers" Type="System.Linq.Expressions.ElementInit[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="propertyAccessor">
          <span data-ttu-id="b0929-2036">代表屬性存取子方法的 <see cref="T:System.Reflection.MethodInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2036">A <see cref="T:System.Reflection.MethodInfo" /> that represents a property accessor method.</span>
          </span>
        </param>
        <param name="initializers">
          <span data-ttu-id="b0929-2037">用以填入 <see cref="T:System.Linq.Expressions.ElementInit" /> 集合之 <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2037">An array of <see cref="T:System.Linq.Expressions.ElementInit" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2038">根據指定的屬性存取子方法建立 <see cref="T:System.Linq.Expressions.MemberListBinding" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2038">Creates a <see cref="T:System.Linq.Expressions.MemberListBinding" /> object based on a specified property accessor method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2039">
            <see cref="T:System.Linq.Expressions.MemberListBinding" />，其 <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> 屬性等於 <see cref="F:System.Linq.Expressions.MemberBindingType.ListBinding" />，並將 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 屬性設定為 <see cref="T:System.Reflection.MemberInfo" />，表示在 <paramref name="propertyAccessor" /> 中存取的屬性，<see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> 則會填入 <paramref name="initializers" /> 的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2039">A <see cref="T:System.Linq.Expressions.MemberListBinding" /> that has the <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> property equal to <see cref="F:System.Linq.Expressions.MemberBindingType.ListBinding" />, the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property set to the <see cref="T:System.Reflection.MemberInfo" /> that represents the property accessed in <paramref name="propertyAccessor" />, and <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> populated with the elements of <paramref name="initializers" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2040">
            <paramref name="propertyAccessor" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2040">
              <paramref name="propertyAccessor" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-2041">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2041">-or-</span>
          </span>
          <span data-ttu-id="b0929-2042">
            <paramref name="initializers" /> 的一個或多個項目為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2042">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2043">
            <paramref name="propertyAccessor" /> 不代表屬性存取子方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2043">
              <paramref name="propertyAccessor" /> does not represent a property accessor method.</span>
          </span>
          <span data-ttu-id="b0929-2044">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2044">-or-</span>
          </span>
          <span data-ttu-id="b0929-2045">屬性 (由 <paramref name="propertyAccessor" /> 存取表示的方法) 的 <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> 不會實作 <see cref="T:System.Collections.IEnumerable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2045">The <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> of the property that the method represented by <paramref name="propertyAccessor" /> accesses does not implement <see cref="T:System.Collections.IEnumerable" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ListInit">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-2046">建立 <see cref="T:System.Linq.Expressions.ListInitExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2046">Creates a <see cref="T:System.Linq.Expressions.ListInitExpression" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ListInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ElementInit&gt; initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ListInitExpression ListInit(class System.Linq.Expressions.NewExpression newExpression, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ElementInit&gt; initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ListInitExpression ^ ListInit(System::Linq::Expressions::NewExpression ^ newExpression, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ElementInit ^&gt; ^ initializers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ListInitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ElementInit&gt;" />
      </Parameters>
      <Docs>
        <param name="newExpression">
          <span data-ttu-id="b0929-2047">要將 <see cref="T:System.Linq.Expressions.NewExpression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2047">A <see cref="T:System.Linq.Expressions.NewExpression" /> to set the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property equal to.</span>
          </span>
        </param>
        <param name="initializers">
          <span data-ttu-id="b0929-2048">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" />，其中包含用以填入 <see cref="T:System.Linq.Expressions.ElementInit" /> 集合的 <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2048">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ElementInit" /> objects to use to populate the <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2049">建立 <see cref="T:System.Linq.Expressions.ListInitExpression" />，它使用指定的 <see cref="T:System.Linq.Expressions.ElementInit" /> 物件初始化集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2049">Creates a <see cref="T:System.Linq.Expressions.ListInitExpression" /> that uses specified <see cref="T:System.Linq.Expressions.ElementInit" /> objects to initialize a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2050">
            <see cref="T:System.Linq.Expressions.ListInitExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" />，且 <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> 和 <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2050">A <see cref="T:System.Linq.Expressions.ListInitExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> and the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> and <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2051"><xref:System.Linq.Expressions.Expression.Type%2A>屬性`newExpression`必須代表實作的型別<xref:System.Collections.IEnumerable>。</span><span class="sxs-lookup"><span data-stu-id="b0929-2051">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `newExpression` must represent a type that implements <xref:System.Collections.IEnumerable>.</span></span>  
  
 <span data-ttu-id="b0929-2052"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.ListInitExpression>等於`newExpression`。型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2052">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.ListInitExpression> is equal to `newExpression`.Type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-2053">下列範例示範如何使用<xref:System.Linq.Expressions.Expression.ListInit%28System.Linq.Expressions.NewExpression%2CSystem.Linq.Expressions.ElementInit%5B%5D%29>方法來建立<xref:System.Linq.Expressions.ListInitExpression>，表示具有兩個索引鍵-值組的新字典執行個體初始化。</span><span class="sxs-lookup"><span data-stu-id="b0929-2053">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.ListInit%28System.Linq.Expressions.NewExpression%2CSystem.Linq.Expressions.ElementInit%5B%5D%29> method to create a <xref:System.Linq.Expressions.ListInitExpression> that represents the initialization of a new dictionary instance with two key-value pairs.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#7)]
 [!code-vb[System.Linq.Expressions.Expression#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2054">
            <paramref name="newExpression" /> 或 <paramref name="initializers" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2054">
              <paramref name="newExpression" /> or <paramref name="initializers" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-2055">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2055">-or-</span>
          </span>
          <span data-ttu-id="b0929-2056">
            <paramref name="initializers" /> 的一個或多個項目為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2056">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2057">
            <paramref name="newExpression" />.Type 未實作 <see cref="T:System.Collections.IEnumerable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2057">
              <paramref name="newExpression" />.Type does not implement <see cref="T:System.Collections.IEnumerable" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ListInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ListInitExpression ListInit(class System.Linq.Expressions.NewExpression newExpression, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ListInitExpression ^ ListInit(System::Linq::Expressions::NewExpression ^ newExpression, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ initializers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ListInitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="newExpression">
          <span data-ttu-id="b0929-2058">要將 <see cref="T:System.Linq.Expressions.NewExpression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2058">A <see cref="T:System.Linq.Expressions.NewExpression" /> to set the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property equal to.</span>
          </span>
        </param>
        <param name="initializers">
          <span data-ttu-id="b0929-2059">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" />，其中包含用以填入 <see cref="T:System.Linq.Expressions.Expression" /> 集合的 <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2059">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2060">建立 <see cref="T:System.Linq.Expressions.ListInitExpression" />，其使用名為 "Add" 的方法將項目加入集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2060">Creates a <see cref="T:System.Linq.Expressions.ListInitExpression" /> that uses a method named "Add" to add elements to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2061">
            <see cref="T:System.Linq.Expressions.ListInitExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" />，而 <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2061">A <see cref="T:System.Linq.Expressions.ListInitExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> and the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2062"><xref:System.Linq.Expressions.Expression.Type%2A>屬性`newExpression`必須代表實作的型別<xref:System.Collections.IEnumerable>。</span><span class="sxs-lookup"><span data-stu-id="b0929-2062">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `newExpression` must represent a type that implements <xref:System.Collections.IEnumerable>.</span></span>  
  
 <span data-ttu-id="b0929-2063">若要使用的這個多載<xref:System.Linq.Expressions.Expression.ListInit%28System.Linq.Expressions.NewExpression%2CSystem.Collections.Generic.IEnumerable%7BSystem.Linq.Expressions.Expression%7D%29>， `newExpression`。型別或其基底類型必須宣告名為"Add"（不區分大小寫） 會採用一個引數的單一方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2063">In order to use this overload of <xref:System.Linq.Expressions.Expression.ListInit%28System.Linq.Expressions.NewExpression%2CSystem.Collections.Generic.IEnumerable%7BSystem.Linq.Expressions.Expression%7D%29>, `newExpression`.Type or its base type must declare a single method named "Add" (case insensitive) that takes exactly one argument.</span></span> <span data-ttu-id="b0929-2064">引數的型別必須可從所代表的類型<xref:System.Linq.Expressions.Expression.Type%2A>屬性的第一個項目的`initializers`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2064">The type of the argument must be assignable from the type represented by the <xref:System.Linq.Expressions.Expression.Type%2A> property of the first element of `initializers`.</span></span>  
  
 <span data-ttu-id="b0929-2065"><xref:System.Linq.Expressions.ListInitExpression.Initializers%2A>屬性傳回之<xref:System.Linq.Expressions.ListInitExpression>包含一個項目類型的<xref:System.Linq.Expressions.ElementInit>每個項目`initializers`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2065">The <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> property of the returned <xref:System.Linq.Expressions.ListInitExpression> contains one element of type <xref:System.Linq.Expressions.ElementInit> for each element of `initializers`.</span></span> <span data-ttu-id="b0929-2066"><xref:System.Linq.Expressions.ElementInit.Arguments%2A>屬性的每個項目<xref:System.Linq.Expressions.ListInitExpression.Initializers%2A>是包含的對應元素的單一集合`initializers`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2066">The <xref:System.Linq.Expressions.ElementInit.Arguments%2A> property of each element of <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> is a singleton collection that contains the corresponding element of `initializers`.</span></span> <span data-ttu-id="b0929-2067"><xref:System.Linq.Expressions.ElementInit.AddMethod%2A>屬性的每個項目<xref:System.Linq.Expressions.ListInitExpression.Initializers%2A>代表探索到的 add 方法`newExpression`。型別或其基底類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2067">The <xref:System.Linq.Expressions.ElementInit.AddMethod%2A> property of each element of <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> represents the add method that was discovered on `newExpression`.Type or its base type.</span></span>  
  
 <span data-ttu-id="b0929-2068"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.ListInitExpression>等於`newExpression`。型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2068">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.ListInitExpression> is equal to `newExpression`.Type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2069">
            <paramref name="newExpression" /> 或 <paramref name="initializers" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2069">
              <paramref name="newExpression" /> or <paramref name="initializers" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-2070">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2070">-or-</span>
          </span>
          <span data-ttu-id="b0929-2071">
            <paramref name="initializers" /> 的一個或多個項目為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2071">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2072">
            <paramref name="newExpression" />.Type 未實作 <see cref="T:System.Collections.IEnumerable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2072">
              <paramref name="newExpression" />.Type does not implement <see cref="T:System.Collections.IEnumerable" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-2073">未在 <paramref name="newExpression" />.Type 或其基底型別中宣告名為 "Add" (不區分大小寫) 的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2073">There is no instance method named "Add" (case insensitive) declared in <paramref name="newExpression" />.Type or its base type.</span>
          </span>
          <span data-ttu-id="b0929-2074">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2074">-or-</span>
          </span>
          <span data-ttu-id="b0929-2075">
            <paramref name="newExpression" />.Type 或其基底型別中的 add 方法不是只接受一個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2075">The add method on <paramref name="newExpression" />.Type or its base type does not take exactly one argument.</span>
          </span>
          <span data-ttu-id="b0929-2076">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2076">-or-</span>
          </span>
          <span data-ttu-id="b0929-2077">
            <paramref name="initializers" />的第一個項目的 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性所代表的型別，無法指派給 <paramref name="newExpression" />.Type 或其基底型別上的 add 方法的引數類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2077">The type represented by the <see cref="P:System.Linq.Expressions.Expression.Type" /> property of the first element of <paramref name="initializers" /> is not assignable to the argument type of the add method on <paramref name="newExpression" />.Type or its base type.</span>
          </span>
          <span data-ttu-id="b0929-2078">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2078">-or-</span>
          </span>
          <span data-ttu-id="b0929-2079">多個名為 "Add" (不區分大小寫) 的引數相容方法存在於 <paramref name="newExpression" /> .Type 和/或其基底型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2079">More than one argument-compatible method named "Add" (case-insensitive) exists on <paramref name="newExpression" />.Type and/or its base type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ListInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, params System.Linq.Expressions.ElementInit[] initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ListInitExpression ListInit(class System.Linq.Expressions.NewExpression newExpression, class System.Linq.Expressions.ElementInit[] initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ListInitExpression ^ ListInit(System::Linq::Expressions::NewExpression ^ newExpression, ... cli::array &lt;System::Linq::Expressions::ElementInit ^&gt; ^ initializers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ListInitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" />
        <Parameter Name="initializers" Type="System.Linq.Expressions.ElementInit[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="newExpression">
          <span data-ttu-id="b0929-2080">要將 <see cref="T:System.Linq.Expressions.NewExpression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2080">A <see cref="T:System.Linq.Expressions.NewExpression" /> to set the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property equal to.</span>
          </span>
        </param>
        <param name="initializers">
          <span data-ttu-id="b0929-2081">用以填入 <see cref="T:System.Linq.Expressions.ElementInit" /> 集合之 <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2081">An array of <see cref="T:System.Linq.Expressions.ElementInit" /> objects to use to populate the <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2082">建立 <see cref="T:System.Linq.Expressions.ListInitExpression" />，它使用指定的 <see cref="T:System.Linq.Expressions.ElementInit" /> 物件初始化集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2082">Creates a <see cref="T:System.Linq.Expressions.ListInitExpression" /> that uses specified <see cref="T:System.Linq.Expressions.ElementInit" /> objects to initialize a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2083">
            <see cref="T:System.Linq.Expressions.ListInitExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" />，且 <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> 和 <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2083">A <see cref="T:System.Linq.Expressions.ListInitExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> and the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> and <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2084"><xref:System.Linq.Expressions.Expression.Type%2A>屬性`newExpression`必須代表實作的型別<xref:System.Collections.IEnumerable>。</span><span class="sxs-lookup"><span data-stu-id="b0929-2084">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `newExpression` must represent a type that implements <xref:System.Collections.IEnumerable>.</span></span>  
  
 <span data-ttu-id="b0929-2085"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.ListInitExpression>等於`newExpression`。型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2085">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.ListInitExpression> is equal to `newExpression`.Type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-2086">下列範例示範如何使用<xref:System.Linq.Expressions.Expression.ListInit%28System.Linq.Expressions.NewExpression%2CSystem.Linq.Expressions.ElementInit%5B%5D%29>方法來建立<xref:System.Linq.Expressions.ListInitExpression>，表示具有兩個索引鍵-值組的新字典執行個體初始化。</span><span class="sxs-lookup"><span data-stu-id="b0929-2086">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.ListInit%28System.Linq.Expressions.NewExpression%2CSystem.Linq.Expressions.ElementInit%5B%5D%29> method to create a <xref:System.Linq.Expressions.ListInitExpression> that represents the initialization of a new dictionary instance with two key-value pairs.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#7)]
 [!code-vb[System.Linq.Expressions.Expression#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2087">
            <paramref name="newExpression" /> 或 <paramref name="initializers" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2087">
              <paramref name="newExpression" /> or <paramref name="initializers" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-2088">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2088">-or-</span>
          </span>
          <span data-ttu-id="b0929-2089">
            <paramref name="initializers" /> 的一個或多個項目為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2089">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2090">
            <paramref name="newExpression" />.Type 未實作 <see cref="T:System.Collections.IEnumerable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2090">
              <paramref name="newExpression" />.Type does not implement <see cref="T:System.Collections.IEnumerable" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ListInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, params System.Linq.Expressions.Expression[] initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ListInitExpression ListInit(class System.Linq.Expressions.NewExpression newExpression, class System.Linq.Expressions.Expression[] initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ListInitExpression ^ ListInit(System::Linq::Expressions::NewExpression ^ newExpression, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ initializers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ListInitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" />
        <Parameter Name="initializers" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="newExpression">
          <span data-ttu-id="b0929-2091">要將 <see cref="T:System.Linq.Expressions.NewExpression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2091">A <see cref="T:System.Linq.Expressions.NewExpression" /> to set the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property equal to.</span>
          </span>
        </param>
        <param name="initializers">
          <span data-ttu-id="b0929-2092">用以填入 <see cref="T:System.Linq.Expressions.Expression" /> 集合之 <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2092">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2093">建立 <see cref="T:System.Linq.Expressions.ListInitExpression" />，其使用名為 "Add" 的方法將項目加入集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2093">Creates a <see cref="T:System.Linq.Expressions.ListInitExpression" /> that uses a method named "Add" to add elements to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2094">
            <see cref="T:System.Linq.Expressions.ListInitExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" />，而 <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2094">A <see cref="T:System.Linq.Expressions.ListInitExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> and the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2095"><xref:System.Linq.Expressions.Expression.Type%2A>屬性`newExpression`必須代表實作的型別<xref:System.Collections.IEnumerable>。</span><span class="sxs-lookup"><span data-stu-id="b0929-2095">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `newExpression` must represent a type that implements <xref:System.Collections.IEnumerable>.</span></span>  
  
 <span data-ttu-id="b0929-2096">若要使用的這個多載<xref:System.Linq.Expressions.Expression.ListInit%28System.Linq.Expressions.NewExpression%2CSystem.Linq.Expressions.Expression%5B%5D%29>， `newExpression`。型別或其基底類型必須宣告名為"Add"（不區分大小寫） 會採用一個引數的單一方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2096">In order to use this overload of <xref:System.Linq.Expressions.Expression.ListInit%28System.Linq.Expressions.NewExpression%2CSystem.Linq.Expressions.Expression%5B%5D%29>, `newExpression`.Type or its base type must declare a single method named "Add" (case insensitive) that takes exactly one argument.</span></span> <span data-ttu-id="b0929-2097">引數的型別必須可從所代表的類型<xref:System.Linq.Expressions.Expression.Type%2A>屬性的第一個項目的`initializers`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2097">The type of the argument must be assignable from the type represented by the <xref:System.Linq.Expressions.Expression.Type%2A> property of the first element of `initializers`.</span></span>  
  
 <span data-ttu-id="b0929-2098"><xref:System.Linq.Expressions.ListInitExpression.Initializers%2A>屬性傳回之<xref:System.Linq.Expressions.ListInitExpression>包含一個項目類型的<xref:System.Linq.Expressions.ElementInit>每個項目`initializers`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2098">The <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> property of the returned <xref:System.Linq.Expressions.ListInitExpression> contains one element of type <xref:System.Linq.Expressions.ElementInit> for each element of `initializers`.</span></span> <span data-ttu-id="b0929-2099"><xref:System.Linq.Expressions.ElementInit.Arguments%2A>屬性的每個項目<xref:System.Linq.Expressions.ListInitExpression.Initializers%2A>是包含的對應元素的單一集合`initializers`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2099">The <xref:System.Linq.Expressions.ElementInit.Arguments%2A> property of each element of <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> is a singleton collection that contains the corresponding element of `initializers`.</span></span> <span data-ttu-id="b0929-2100"><xref:System.Linq.Expressions.ElementInit.AddMethod%2A>屬性的每個項目<xref:System.Linq.Expressions.ListInitExpression.Initializers%2A>代表探索到的 add 方法`newExpression`。型別或其基底類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2100">The <xref:System.Linq.Expressions.ElementInit.AddMethod%2A> property of each element of <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> represents the add method that was discovered on `newExpression`.Type or its base type.</span></span>  
  
 <span data-ttu-id="b0929-2101"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.ListInitExpression>等於`newExpression`。型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2101">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.ListInitExpression> is equal to `newExpression`.Type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2102">
            <paramref name="newExpression" /> 或 <paramref name="initializers" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2102">
              <paramref name="newExpression" /> or <paramref name="initializers" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-2103">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2103">-or-</span>
          </span>
          <span data-ttu-id="b0929-2104">
            <paramref name="initializers" /> 的一個或多個項目為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2104">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2105">
            <paramref name="newExpression" />.Type 未實作 <see cref="T:System.Collections.IEnumerable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2105">
              <paramref name="newExpression" />.Type does not implement <see cref="T:System.Collections.IEnumerable" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-2106">未在 <paramref name="newExpression" />.Type 或其基底型別中宣告名為 "Add" (不區分大小寫) 的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2106">There is no instance method named "Add" (case insensitive) declared in <paramref name="newExpression" />.Type or its base type.</span>
          </span>
          <span data-ttu-id="b0929-2107">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2107">-or-</span>
          </span>
          <span data-ttu-id="b0929-2108">
            <paramref name="newExpression" />.Type 或其基底型別中的 add 方法不是只接受一個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2108">The add method on <paramref name="newExpression" />.Type or its base type does not take exactly one argument.</span>
          </span>
          <span data-ttu-id="b0929-2109">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2109">-or-</span>
          </span>
          <span data-ttu-id="b0929-2110">
            <paramref name="initializers" />的第一個項目的 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性所代表的型別，無法指派給 <paramref name="newExpression" />.Type 或其基底型別上的 add 方法的引數類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2110">The type represented by the <see cref="P:System.Linq.Expressions.Expression.Type" /> property of the first element of <paramref name="initializers" /> is not assignable to the argument type of the add method on <paramref name="newExpression" />.Type or its base type.</span>
          </span>
          <span data-ttu-id="b0929-2111">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2111">-or-</span>
          </span>
          <span data-ttu-id="b0929-2112">多個名為 "Add" (不區分大小寫) 的引數相容方法存在於 <paramref name="newExpression" /> .Type 和/或其基底型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2112">More than one argument-compatible method named "Add" (case-insensitive) exists on <paramref name="newExpression" />.Type and/or its base type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ListInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, System.Reflection.MethodInfo addMethod, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ListInitExpression ListInit(class System.Linq.Expressions.NewExpression newExpression, class System.Reflection.MethodInfo addMethod, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ListInitExpression ^ ListInit(System::Linq::Expressions::NewExpression ^ newExpression, System::Reflection::MethodInfo ^ addMethod, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ initializers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ListInitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" />
        <Parameter Name="addMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="newExpression">
          <span data-ttu-id="b0929-2113">要將 <see cref="T:System.Linq.Expressions.NewExpression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2113">A <see cref="T:System.Linq.Expressions.NewExpression" /> to set the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property equal to.</span>
          </span>
        </param>
        <param name="addMethod">
          <span data-ttu-id="b0929-2114">
            <see cref="T:System.Reflection.MethodInfo" />，代表名為 "Add" (區分大小寫) 的執行個體方法，可將項目加入集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2114">A <see cref="T:System.Reflection.MethodInfo" /> that represents an instance method named "Add" (case insensitive), that adds an element to a collection.</span>
          </span>
        </param>
        <param name="initializers">
          <span data-ttu-id="b0929-2115">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" />，其中包含用以填入 <see cref="T:System.Linq.Expressions.Expression" /> 集合的 <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2115">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2116">建立 <see cref="T:System.Linq.Expressions.ListInitExpression" />，其使用指定的方法將項目加入集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2116">Creates a <see cref="T:System.Linq.Expressions.ListInitExpression" /> that uses a specified method to add elements to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2117">
            <see cref="T:System.Linq.Expressions.ListInitExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" />，而 <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2117">A <see cref="T:System.Linq.Expressions.ListInitExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> and the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2118"><xref:System.Linq.Expressions.Expression.Type%2A>屬性`newExpression`必須代表實作的型別<xref:System.Collections.IEnumerable>。</span><span class="sxs-lookup"><span data-stu-id="b0929-2118">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `newExpression` must represent a type that implements <xref:System.Collections.IEnumerable>.</span></span>  
  
 <span data-ttu-id="b0929-2119">如果`addMethod`是`null`， `newExpression`。型別或其基底類型必須宣告名為"Add"（不區分大小寫） 會採用一個引數的單一方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2119">If `addMethod` is `null`, `newExpression`.Type or its base type must declare a single method named "Add" (case insensitive) that takes exactly one argument.</span></span> <span data-ttu-id="b0929-2120">如果`addMethod`不`null`，它必須代表具有一個參數的執行個體方法名為"Add"（不區分大小寫）。</span><span class="sxs-lookup"><span data-stu-id="b0929-2120">If `addMethod` is not `null`, it must represent an instance method named "Add" (case insensitive) that has exactly one parameter.</span></span> <span data-ttu-id="b0929-2121">所代表的類型<xref:System.Linq.Expressions.Expression.Type%2A>屬性的每個項目`initializers`必須是指派給引數類型的 add 方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2121">The type represented by the <xref:System.Linq.Expressions.Expression.Type%2A> property of each element of `initializers` must be assignable to the argument type of the add method.</span></span>  
  
 <span data-ttu-id="b0929-2122"><xref:System.Linq.Expressions.ListInitExpression.Initializers%2A>屬性傳回之<xref:System.Linq.Expressions.ListInitExpression>包含一個項目類型的<xref:System.Linq.Expressions.ElementInit>每個項目`initializers`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2122">The <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> property of the returned <xref:System.Linq.Expressions.ListInitExpression> contains one element of type <xref:System.Linq.Expressions.ElementInit> for each element of `initializers`.</span></span> <span data-ttu-id="b0929-2123"><xref:System.Linq.Expressions.ElementInit.Arguments%2A>屬性的每個項目<xref:System.Linq.Expressions.ListInitExpression.Initializers%2A>是包含的對應元素的單一集合`initializers`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2123">The <xref:System.Linq.Expressions.ElementInit.Arguments%2A> property of each element of <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> is a singleton collection that contains the corresponding element of `initializers`.</span></span> <span data-ttu-id="b0929-2124"><xref:System.Linq.Expressions.ElementInit.AddMethod%2A>屬性的每個項目<xref:System.Linq.Expressions.ListInitExpression.Initializers%2A>等於`addMethod`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2124">The <xref:System.Linq.Expressions.ElementInit.AddMethod%2A> property of each element of <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> is equal to `addMethod`.</span></span>  
  
 <span data-ttu-id="b0929-2125"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.ListInitExpression>等於`newExpression`。型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2125">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.ListInitExpression> is equal to `newExpression`.Type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2126">
            <paramref name="newExpression" /> 或 <paramref name="initializers" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2126">
              <paramref name="newExpression" /> or <paramref name="initializers" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-2127">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2127">-or-</span>
          </span>
          <span data-ttu-id="b0929-2128">
            <paramref name="initializers" /> 的一個或多個項目為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2128">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2129">
            <paramref name="newExpression" />.Type 未實作 <see cref="T:System.Collections.IEnumerable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2129">
              <paramref name="newExpression" />.Type does not implement <see cref="T:System.Collections.IEnumerable" />.</span>
          </span>
          <span data-ttu-id="b0929-2130">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2130">-or-</span>
          </span>
          <span data-ttu-id="b0929-2131">
            <paramref name="addMethod" /> 不是 <see langword="null" />，它不表示名為 "Add" (區分大小寫) 的執行個體方法，這個方法剛好只採用一個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2131">
              <paramref name="addMethod" /> is not <see langword="null" /> and it does not represent an instance method named "Add" (case insensitive) that takes exactly one argument.</span>
          </span>
          <span data-ttu-id="b0929-2132">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2132">-or-</span>
          </span>
          <span data-ttu-id="b0929-2133">
            <paramref name="addMethod" /> 不是 <see langword="null" />，且 <paramref name="initializers" /> 之一個或多個項目的 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性表示的類型無法指派給 <paramref name="addMethod" /> 所表示之方法的引數類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2133">
              <paramref name="addMethod" /> is not <see langword="null" /> and the type represented by the <see cref="P:System.Linq.Expressions.Expression.Type" /> property of one or more elements of <paramref name="initializers" /> is not assignable to the argument type of the method that <paramref name="addMethod" /> represents.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-2134">
            <paramref name="addMethod" /> 是 <see langword="null" />，且 <paramref name="newExpression" />.Type 或其基底類型上沒有採用一個類型相容引數之名為 "Add" 的執行個體方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2134">
              <paramref name="addMethod" /> is <see langword="null" /> and no instance method named "Add" that takes one type-compatible argument exists on <paramref name="newExpression" />.Type or its base type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ListInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, System.Reflection.MethodInfo addMethod, params System.Linq.Expressions.Expression[] initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ListInitExpression ListInit(class System.Linq.Expressions.NewExpression newExpression, class System.Reflection.MethodInfo addMethod, class System.Linq.Expressions.Expression[] initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ListInitExpression ^ ListInit(System::Linq::Expressions::NewExpression ^ newExpression, System::Reflection::MethodInfo ^ addMethod, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ initializers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ListInitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" />
        <Parameter Name="addMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="initializers" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="newExpression">
          <span data-ttu-id="b0929-2135">要將 <see cref="T:System.Linq.Expressions.NewExpression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2135">A <see cref="T:System.Linq.Expressions.NewExpression" /> to set the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property equal to.</span>
          </span>
        </param>
        <param name="addMethod">
          <span data-ttu-id="b0929-2136">
            <see cref="T:System.Reflection.MethodInfo" />，代表採用一個引數的執行個體方法，可將項目加入集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2136">A <see cref="T:System.Reflection.MethodInfo" /> that represents an instance method that takes one argument, that adds an element to a collection.</span>
          </span>
        </param>
        <param name="initializers">
          <span data-ttu-id="b0929-2137">用以填入 <see cref="T:System.Linq.Expressions.Expression" /> 集合之 <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2137">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2138">建立 <see cref="T:System.Linq.Expressions.ListInitExpression" />，其使用指定的方法將項目加入集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2138">Creates a <see cref="T:System.Linq.Expressions.ListInitExpression" /> that uses a specified method to add elements to a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2139">
            <see cref="T:System.Linq.Expressions.ListInitExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" />，而 <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2139">A <see cref="T:System.Linq.Expressions.ListInitExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> and the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2140"><xref:System.Linq.Expressions.Expression.Type%2A>屬性`newExpression`必須代表實作的型別<xref:System.Collections.IEnumerable>。</span><span class="sxs-lookup"><span data-stu-id="b0929-2140">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `newExpression` must represent a type that implements <xref:System.Collections.IEnumerable>.</span></span>  
  
 <span data-ttu-id="b0929-2141">如果`addMethod`是`null`， `newExpression`。型別或其基底類型必須宣告名為"Add"（不區分大小寫） 會採用一個引數的單一方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2141">If `addMethod` is `null`, `newExpression`.Type or its base type must declare a single method named "Add" (case insensitive) that takes exactly one argument.</span></span> <span data-ttu-id="b0929-2142">如果`addMethod`不`null`，它必須代表具有一個參數的執行個體方法名為"Add"（不區分大小寫）。</span><span class="sxs-lookup"><span data-stu-id="b0929-2142">If `addMethod` is not `null`, it must represent an instance method named "Add" (case insensitive) that has exactly one parameter.</span></span> <span data-ttu-id="b0929-2143">所代表的類型<xref:System.Linq.Expressions.Expression.Type%2A>屬性的每個項目`initializers`必須是指派給引數類型的 add 方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2143">The type represented by the <xref:System.Linq.Expressions.Expression.Type%2A> property of each element of `initializers` must be assignable to the argument type of the add method.</span></span>  
  
 <span data-ttu-id="b0929-2144"><xref:System.Linq.Expressions.ListInitExpression.Initializers%2A>屬性傳回之<xref:System.Linq.Expressions.ListInitExpression>包含一個項目類型的<xref:System.Linq.Expressions.ElementInit>每個項目`initializers`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2144">The <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> property of the returned <xref:System.Linq.Expressions.ListInitExpression> contains one element of type <xref:System.Linq.Expressions.ElementInit> for each element of `initializers`.</span></span> <span data-ttu-id="b0929-2145"><xref:System.Linq.Expressions.ElementInit.Arguments%2A>屬性的每個項目<xref:System.Linq.Expressions.ListInitExpression.Initializers%2A>是包含的對應元素的單一集合`initializers`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2145">The <xref:System.Linq.Expressions.ElementInit.Arguments%2A> property of each element of <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> is a singleton collection that contains the corresponding element of `initializers`.</span></span> <span data-ttu-id="b0929-2146"><xref:System.Linq.Expressions.ElementInit.AddMethod%2A>屬性的每個項目<xref:System.Linq.Expressions.ListInitExpression.Initializers%2A>等於`addMethod`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2146">The <xref:System.Linq.Expressions.ElementInit.AddMethod%2A> property of each element of <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> is equal to `addMethod`.</span></span>  
  
 <span data-ttu-id="b0929-2147"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.ListInitExpression>等於`newExpression`。型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2147">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.ListInitExpression> is equal to `newExpression`.Type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2148">
            <paramref name="newExpression" /> 或 <paramref name="initializers" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2148">
              <paramref name="newExpression" /> or <paramref name="initializers" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-2149">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2149">-or-</span>
          </span>
          <span data-ttu-id="b0929-2150">
            <paramref name="initializers" /> 的一個或多個項目為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2150">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2151">
            <paramref name="newExpression" />.Type 未實作 <see cref="T:System.Collections.IEnumerable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2151">
              <paramref name="newExpression" />.Type does not implement <see cref="T:System.Collections.IEnumerable" />.</span>
          </span>
          <span data-ttu-id="b0929-2152">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2152">-or-</span>
          </span>
          <span data-ttu-id="b0929-2153">
            <paramref name="addMethod" /> 不是 <see langword="null" />，它不表示名為 "Add" (區分大小寫) 的執行個體方法，這個方法剛好只採用一個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2153">
              <paramref name="addMethod" /> is not <see langword="null" /> and it does not represent an instance method named "Add" (case insensitive) that takes exactly one argument.</span>
          </span>
          <span data-ttu-id="b0929-2154">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2154">-or-</span>
          </span>
          <span data-ttu-id="b0929-2155">
            <paramref name="addMethod" /> 不是 <see langword="null" />，且 <paramref name="initializers" /> 之一個或多個項目的 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性表示的類型無法指派給 <paramref name="addMethod" /> 所表示之方法的引數類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2155">
              <paramref name="addMethod" /> is not <see langword="null" /> and the type represented by the <see cref="P:System.Linq.Expressions.Expression.Type" /> property of one or more elements of <paramref name="initializers" /> is not assignable to the argument type of the method that <paramref name="addMethod" /> represents.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-2156">
            <paramref name="addMethod" /> 是 <see langword="null" />，且 <paramref name="newExpression" />.Type 或其基底類型上沒有採用一個類型相容引數之名為 "Add" 的執行個體方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2156">
              <paramref name="addMethod" /> is <see langword="null" /> and no instance method named "Add" that takes one type-compatible argument exists on <paramref name="newExpression" />.Type or its base type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Loop">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-2157">建立 <see cref="T:System.Linq.Expressions.LoopExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2157">Creates a <see cref="T:System.Linq.Expressions.LoopExpression" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Loop">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LoopExpression Loop (System.Linq.Expressions.Expression body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LoopExpression Loop(class System.Linq.Expressions.Expression body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Loop (body As Expression) As LoopExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LoopExpression ^ Loop(System::Linq::Expressions::Expression ^ body);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LoopExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="b0929-2158">迴圈的主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2158">The body of the loop.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2159">建立包含指定之主體的 <see cref="T:System.Linq.Expressions.LoopExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2159">Creates a <see cref="T:System.Linq.Expressions.LoopExpression" /> with the given body.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2160">建立的 <see cref="T:System.Linq.Expressions.LoopExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2160">The created <see cref="T:System.Linq.Expressions.LoopExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Loop">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LoopExpression Loop (System.Linq.Expressions.Expression body, System.Linq.Expressions.LabelTarget break);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LoopExpression Loop(class System.Linq.Expressions.Expression body, class System.Linq.Expressions.LabelTarget break) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Loop (body As Expression, break As LabelTarget) As LoopExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LoopExpression ^ Loop(System::Linq::Expressions::Expression ^ body, System::Linq::Expressions::LabelTarget ^ break);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LoopExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="break" Type="System.Linq.Expressions.LabelTarget" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="b0929-2161">迴圈的主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2161">The body of the loop.</span>
          </span>
        </param>
        <param name="break">
          <span data-ttu-id="b0929-2162">迴圈主體所使用的 break 目標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2162">The break target used by the loop body.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2163">建立包含指定之主體和 break 目標的 <see cref="T:System.Linq.Expressions.LoopExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2163">Creates a <see cref="T:System.Linq.Expressions.LoopExpression" /> with the given body and break target.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2164">建立的 <see cref="T:System.Linq.Expressions.LoopExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2164">The created <see cref="T:System.Linq.Expressions.LoopExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0929-2165">下列範例示範如何建立包含的區塊運算式<xref:System.Linq.Expressions.LoopExpression>物件。</span><span class="sxs-lookup"><span data-stu-id="b0929-2165">The following example demonstrates how to create a block expression that contains a <xref:System.Linq.Expressions.LoopExpression> object.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#44](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#44)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#44](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#44)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Loop">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LoopExpression Loop (System.Linq.Expressions.Expression body, System.Linq.Expressions.LabelTarget break, System.Linq.Expressions.LabelTarget continue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LoopExpression Loop(class System.Linq.Expressions.Expression body, class System.Linq.Expressions.LabelTarget break, class System.Linq.Expressions.LabelTarget continue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Loop (body As Expression, break As LabelTarget, continue As LabelTarget) As LoopExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LoopExpression ^ Loop(System::Linq::Expressions::Expression ^ body, System::Linq::Expressions::LabelTarget ^ break, System::Linq::Expressions::LabelTarget ^ continue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LoopExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="break" Type="System.Linq.Expressions.LabelTarget" />
        <Parameter Name="continue" Type="System.Linq.Expressions.LabelTarget" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="b0929-2166">迴圈的主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2166">The body of the loop.</span>
          </span>
        </param>
        <param name="break">
          <span data-ttu-id="b0929-2167">迴圈主體所使用的 break 目標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2167">The break target used by the loop body.</span>
          </span>
        </param>
        <param name="continue">
          <span data-ttu-id="b0929-2168">迴圈主體所使用的 continue 目標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2168">The continue target used by the loop body.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2169">建立包含指定之主體的 <see cref="T:System.Linq.Expressions.LoopExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2169">Creates a <see cref="T:System.Linq.Expressions.LoopExpression" /> with the given body.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2170">建立的 <see cref="T:System.Linq.Expressions.LoopExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2170">The created <see cref="T:System.Linq.Expressions.LoopExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MakeBinary">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-2171">透過呼叫適當的 Factory 方法來建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2171">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> by calling the appropriate factory method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MakeBinary">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MakeBinary (System.Linq.Expressions.ExpressionType binaryType, System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MakeBinary(valuetype System.Linq.Expressions.ExpressionType binaryType, class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeBinary (binaryType As ExpressionType, left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MakeBinary(System::Linq::Expressions::ExpressionType binaryType, System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binaryType" Type="System.Linq.Expressions.ExpressionType" />
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="binaryType">
          <span data-ttu-id="b0929-2172">
            <see cref="T:System.Linq.Expressions.ExpressionType" />，指定二進位運算的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2172">The <see cref="T:System.Linq.Expressions.ExpressionType" /> that specifies the type of binary operation.</span>
          </span>
        </param>
        <param name="left">
          <span data-ttu-id="b0929-2173">代表左運算元的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2173">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the left operand.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-2174">代表右運算元的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2174">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the right operand.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2175">透過呼叫適當的 Factory 方法來建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，指定左運算元和右運算元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2175">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" />, given the left and right operands, by calling an appropriate factory method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2176">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，由呼叫適當的 Factory 方法所產生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2176">The <see cref="T:System.Linq.Expressions.BinaryExpression" /> that results from calling the appropriate factory method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2177">`binaryType`參數可決定哪些<xref:System.Linq.Expressions.BinaryExpression>factory 方法，這個方法會呼叫。</span><span class="sxs-lookup"><span data-stu-id="b0929-2177">The `binaryType` parameter determines which <xref:System.Linq.Expressions.BinaryExpression> factory method this method calls.</span></span> <span data-ttu-id="b0929-2178">例如，如果`binaryType`是<xref:System.Linq.Expressions.ExpressionType.Subtract>，這個方法會叫用<xref:System.Linq.Expressions.Expression.Subtract%2A>。</span><span class="sxs-lookup"><span data-stu-id="b0929-2178">For example, if `binaryType` is <xref:System.Linq.Expressions.ExpressionType.Subtract>, this method invokes <xref:System.Linq.Expressions.Expression.Subtract%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-2179">下列範例示範如何使用<xref:System.Linq.Expressions.Expression.MakeBinary%28System.Linq.Expressions.ExpressionType%2CSystem.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%29>方法來建立<xref:System.Linq.Expressions.BinaryExpression>從另一個代表一個數字的減法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2179">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.MakeBinary%28System.Linq.Expressions.ExpressionType%2CSystem.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%29> method to create a <xref:System.Linq.Expressions.BinaryExpression> that represents the subtraction of one number from another.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#8)]
 [!code-vb[System.Linq.Expressions.Expression#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2180">
            <paramref name="binaryType" /> 未對應到二進位運算式節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2180">
              <paramref name="binaryType" /> does not correspond to a binary expression node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2181">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2181">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MakeBinary">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MakeBinary (System.Linq.Expressions.ExpressionType binaryType, System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MakeBinary(valuetype System.Linq.Expressions.ExpressionType binaryType, class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, bool liftToNull, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeBinary (binaryType As ExpressionType, left As Expression, right As Expression, liftToNull As Boolean, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MakeBinary(System::Linq::Expressions::ExpressionType binaryType, System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, bool liftToNull, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binaryType" Type="System.Linq.Expressions.ExpressionType" />
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="liftToNull" Type="System.Boolean" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="binaryType">
          <span data-ttu-id="b0929-2182">
            <see cref="T:System.Linq.Expressions.ExpressionType" />，指定二進位運算的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2182">The <see cref="T:System.Linq.Expressions.ExpressionType" /> that specifies the type of binary operation.</span>
          </span>
        </param>
        <param name="left">
          <span data-ttu-id="b0929-2183">代表左運算元的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2183">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the left operand.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-2184">代表右運算元的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2184">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the right operand.</span>
          </span>
        </param>
        <param name="liftToNull">
          <span data-ttu-id="b0929-2185">
            <see langword="true" /> 表示將 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> 設定為 <see langword="true" />，<see langword="false" /> 則表示將 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> 設定為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2185">
              <see langword="true" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="true" />; <see langword="false" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="false" />.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-2186">
            <see cref="T:System.Reflection.MethodInfo" />，可指定實作的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2186">A <see cref="T:System.Reflection.MethodInfo" /> that specifies the implementing method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2187">透過呼叫適當的 Factory 方法來建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，指定左運算元、右運算元和實作方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2187">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" />, given the left operand, right operand and implementing method, by calling the appropriate factory method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2188">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，由呼叫適當的 Factory 方法所產生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2188">The <see cref="T:System.Linq.Expressions.BinaryExpression" /> that results from calling the appropriate factory method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2189">`binaryType`參數可決定哪些<xref:System.Linq.Expressions.BinaryExpression>factory 方法，會呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2189">The `binaryType` parameter determines which <xref:System.Linq.Expressions.BinaryExpression> factory method this method will call.</span></span> <span data-ttu-id="b0929-2190">例如，如果`binaryType`是<xref:System.Linq.Expressions.ExpressionType.Subtract>，這個方法會叫用<xref:System.Linq.Expressions.Expression.Subtract%2A>。</span><span class="sxs-lookup"><span data-stu-id="b0929-2190">For example, if `binaryType` is <xref:System.Linq.Expressions.ExpressionType.Subtract>, this method invokes <xref:System.Linq.Expressions.Expression.Subtract%2A>.</span></span> <span data-ttu-id="b0929-2191">`liftToNull`和`method`參數都會被忽略，如果適當的 factory 方法，並沒有對應的參數。</span><span class="sxs-lookup"><span data-stu-id="b0929-2191">The `liftToNull` and `method` parameters are ignored if the appropriate factory method does not have a corresponding parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2192">
            <paramref name="binaryType" /> 未對應到二進位運算式節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2192">
              <paramref name="binaryType" /> does not correspond to a binary expression node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2193">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2193">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MakeBinary">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MakeBinary (System.Linq.Expressions.ExpressionType binaryType, System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MakeBinary(valuetype System.Linq.Expressions.ExpressionType binaryType, class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, bool liftToNull, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeBinary (binaryType As ExpressionType, left As Expression, right As Expression, liftToNull As Boolean, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MakeBinary(System::Linq::Expressions::ExpressionType binaryType, System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, bool liftToNull, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binaryType" Type="System.Linq.Expressions.ExpressionType" />
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="liftToNull" Type="System.Boolean" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="binaryType">
          <span data-ttu-id="b0929-2194">
            <see cref="T:System.Linq.Expressions.ExpressionType" />，指定二進位運算的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2194">The <see cref="T:System.Linq.Expressions.ExpressionType" /> that specifies the type of binary operation.</span>
          </span>
        </param>
        <param name="left">
          <span data-ttu-id="b0929-2195">代表左運算元的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2195">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the left operand.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-2196">代表右運算元的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2196">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the right operand.</span>
          </span>
        </param>
        <param name="liftToNull">
          <span data-ttu-id="b0929-2197">
            <see langword="true" /> 表示將 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> 設定為 <see langword="true" />，<see langword="false" /> 則表示將 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> 設定為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2197">
              <see langword="true" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="true" />; <see langword="false" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="false" />.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-2198">
            <see cref="T:System.Reflection.MethodInfo" />，可指定實作的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2198">A <see cref="T:System.Reflection.MethodInfo" /> that specifies the implementing method.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="b0929-2199">代表類型轉換函式的 <see cref="T:System.Linq.Expressions.LambdaExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2199">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that represents a type conversion function.</span>
          </span>
          <span data-ttu-id="b0929-2200">只有當 <c>binaryType</c> 為 <see cref="F:System.Linq.Expressions.ExpressionType.Coalesce" /> 或複合指派時，才會使用這個參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2200">This parameter is used only if <c>binaryType</c> is <see cref="F:System.Linq.Expressions.ExpressionType.Coalesce" /> or compound assignment..</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2201">透過呼叫適當的 Factory 方法來建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，指定左運算元、右運算元、實作方法和類型轉換函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2201">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" />, given the left operand, right operand, implementing method and type conversion function, by calling the appropriate factory method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2202">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，由呼叫適當的 Factory 方法所產生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2202">The <see cref="T:System.Linq.Expressions.BinaryExpression" /> that results from calling the appropriate factory method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2203">`binaryType`參數可決定哪些<xref:System.Linq.Expressions.BinaryExpression>factory 方法，會呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2203">The `binaryType` parameter determines which <xref:System.Linq.Expressions.BinaryExpression> factory method this method will call.</span></span> <span data-ttu-id="b0929-2204">例如，如果`binaryType`是<xref:System.Linq.Expressions.ExpressionType.Subtract>，這個方法會叫用<xref:System.Linq.Expressions.Expression.Subtract%2A>。</span><span class="sxs-lookup"><span data-stu-id="b0929-2204">For example, if `binaryType` is <xref:System.Linq.Expressions.ExpressionType.Subtract>, this method invokes <xref:System.Linq.Expressions.Expression.Subtract%2A>.</span></span> <span data-ttu-id="b0929-2205">`liftToNull`，`method`和`conversion`參數都會被忽略，如果適當的 factory 方法，並沒有對應的參數。</span><span class="sxs-lookup"><span data-stu-id="b0929-2205">The `liftToNull`, `method` and `conversion` parameters are ignored if the appropriate factory method does not have a corresponding parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2206">
            <paramref name="binaryType" /> 未對應到二進位運算式節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2206">
              <paramref name="binaryType" /> does not correspond to a binary expression node.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2207">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2207">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MakeCatchBlock">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.CatchBlock MakeCatchBlock (Type type, System.Linq.Expressions.ParameterExpression variable, System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.CatchBlock MakeCatchBlock(class System.Type type, class System.Linq.Expressions.ParameterExpression variable, class System.Linq.Expressions.Expression body, class System.Linq.Expressions.Expression filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::CatchBlock ^ MakeCatchBlock(Type ^ type, System::Linq::Expressions::ParameterExpression ^ variable, System::Linq::Expressions::Expression ^ body, System::Linq::Expressions::Expression ^ filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.CatchBlock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="variable" Type="System.Linq.Expressions.ParameterExpression" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="filter" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b0929-2208">這個 <see cref="P:System.Linq.Expressions.Expression.Type" /> 將處理之 <see cref="T:System.Exception" /> 的 <see cref="T:System.Linq.Expressions.CatchBlock" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2208">The <see cref="P:System.Linq.Expressions.Expression.Type" /> of <see cref="T:System.Exception" /> this <see cref="T:System.Linq.Expressions.CatchBlock" /> will handle.</span>
          </span>
        </param>
        <param name="variable">
          <span data-ttu-id="b0929-2209">
            <see cref="T:System.Linq.Expressions.ParameterExpression" />，代表這個處理常式所攔截 <see cref="T:System.Exception" /> 物件的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2209">A <see cref="T:System.Linq.Expressions.ParameterExpression" /> representing a reference to the <see cref="T:System.Exception" /> object caught by this handler.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="b0929-2210">catch 陳述式的主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2210">The body of the catch statement.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="b0929-2211">
            <see cref="T:System.Exception" /> 篩選條件的主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2211">The body of the <see cref="T:System.Exception" /> filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2212">建立 <see cref="T:System.Linq.Expressions.CatchBlock" />，代表含指定之項目的 catch 陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2212">Creates a <see cref="T:System.Linq.Expressions.CatchBlock" /> representing a catch statement with the specified elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2213">建立的 <see cref="T:System.Linq.Expressions.CatchBlock" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2213">The created <see cref="T:System.Linq.Expressions.CatchBlock" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2214">`type` 必須為非 null，且符合的型別`variable`（如果它提供）。</span><span class="sxs-lookup"><span data-stu-id="b0929-2214">`type` must be non-null and match the type of `variable` (if it is supplied).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MakeDynamic">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-2215">建立代表動態運算的 <see cref="T:System.Linq.Expressions.DynamicExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2215">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MakeDynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression MakeDynamic(class System.Type delegateType, class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeDynamic (delegateType As Type, binder As CallSiteBinder, arguments As IEnumerable(Of Expression)) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ MakeDynamic(Type ^ delegateType, System::Runtime::CompilerServices::CallSiteBinder ^ binder, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="delegateType">
          <span data-ttu-id="b0929-2216">
            <see cref="T:System.Runtime.CompilerServices.CallSite" /> 所使用的委派類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2216">The type of the delegate used by the <see cref="T:System.Runtime.CompilerServices.CallSite" />.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="b0929-2217">動態作業的執行階段繫結器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2217">The runtime binder for the dynamic operation.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="b0929-2218">動態作業的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2218">The arguments to the dynamic operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2219">建立 <see cref="T:System.Linq.Expressions.DynamicExpression" />，代表指定之 <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> 所繫結的動態運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2219">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2220">
            <see cref="T:System.Linq.Expressions.DynamicExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 等於 <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" />，且 <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />、<see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> 和 <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> 設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2220">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />, <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />, and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeDynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Linq.Expressions.Expression arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression MakeDynamic(class System.Type delegateType, class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Linq.Expressions.Expression arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeDynamic (delegateType As Type, binder As CallSiteBinder, arg0 As Expression) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ MakeDynamic(Type ^ delegateType, System::Runtime::CompilerServices::CallSiteBinder ^ binder, System::Linq::Expressions::Expression ^ arg0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="delegateType">
          <span data-ttu-id="b0929-2221">
            <see cref="T:System.Runtime.CompilerServices.CallSite" /> 所使用的委派類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2221">The type of the delegate used by the <see cref="T:System.Runtime.CompilerServices.CallSite" />.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="b0929-2222">動態作業的執行階段繫結器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2222">The runtime binder for the dynamic operation.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="b0929-2223">動態運算的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2223">The argument to the dynamic operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2224">建立 <see cref="T:System.Linq.Expressions.DynamicExpression" />，代表指定之 <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> 和一個引數所繫結的動態運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2224">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> and one argument.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2225">
            <see cref="T:System.Linq.Expressions.DynamicExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 等於 <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" />，且 <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />、<see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> 和 <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> 設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2225">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />, <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />, and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeDynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression MakeDynamic(class System.Type delegateType, class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeDynamic (delegateType As Type, binder As CallSiteBinder, ParamArray arguments As Expression()) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ MakeDynamic(Type ^ delegateType, System::Runtime::CompilerServices::CallSiteBinder ^ binder, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="delegateType">
          <span data-ttu-id="b0929-2226">
            <see cref="T:System.Runtime.CompilerServices.CallSite" /> 所使用的委派類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2226">The type of the delegate used by the <see cref="T:System.Runtime.CompilerServices.CallSite" />.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="b0929-2227">動態作業的執行階段繫結器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2227">The runtime binder for the dynamic operation.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="b0929-2228">動態作業的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2228">The arguments to the dynamic operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2229">建立 <see cref="T:System.Linq.Expressions.DynamicExpression" />，代表指定之 <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> 所繫結的動態運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2229">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2230">
            <see cref="T:System.Linq.Expressions.DynamicExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 等於 <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" />，且 <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />、<see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> 和 <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> 設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2230">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />, <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />, and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeDynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression MakeDynamic(class System.Type delegateType, class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeDynamic (delegateType As Type, binder As CallSiteBinder, arg0 As Expression, arg1 As Expression) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ MakeDynamic(Type ^ delegateType, System::Runtime::CompilerServices::CallSiteBinder ^ binder, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="delegateType">
          <span data-ttu-id="b0929-2231">
            <see cref="T:System.Runtime.CompilerServices.CallSite" /> 所使用的委派類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2231">The type of the delegate used by the <see cref="T:System.Runtime.CompilerServices.CallSite" />.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="b0929-2232">動態作業的執行階段繫結器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2232">The runtime binder for the dynamic operation.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="b0929-2233">動態作業的第一個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2233">The first argument to the dynamic operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="b0929-2234">傳遞至動態作業的第二個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2234">The second argument to the dynamic operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2235">建立 <see cref="T:System.Linq.Expressions.DynamicExpression" />，代表指定之 <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> 和兩個引數所繫結的動態運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2235">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> and two arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2236">
            <see cref="T:System.Linq.Expressions.DynamicExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 等於 <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" />，且 <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />、<see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> 和 <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> 設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2236">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />, <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />, and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeDynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression MakeDynamic(class System.Type delegateType, class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeDynamic (delegateType As Type, binder As CallSiteBinder, arg0 As Expression, arg1 As Expression, arg2 As Expression) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ MakeDynamic(Type ^ delegateType, System::Runtime::CompilerServices::CallSiteBinder ^ binder, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="delegateType">
          <span data-ttu-id="b0929-2237">
            <see cref="T:System.Runtime.CompilerServices.CallSite" /> 所使用的委派類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2237">The type of the delegate used by the <see cref="T:System.Runtime.CompilerServices.CallSite" />.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="b0929-2238">動態作業的執行階段繫結器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2238">The runtime binder for the dynamic operation.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="b0929-2239">動態作業的第一個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2239">The first argument to the dynamic operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="b0929-2240">傳遞至動態作業的第二個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2240">The second argument to the dynamic operation.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="b0929-2241">傳遞至動態作業的第三個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2241">The third argument to the dynamic operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2242">建立 <see cref="T:System.Linq.Expressions.DynamicExpression" />，代表指定之 <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> 和三個引數所繫結的動態運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2242">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> and three arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2243">
            <see cref="T:System.Linq.Expressions.DynamicExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 等於 <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" />，且 <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />、<see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> 和 <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> 設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2243">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />, <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />, and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeDynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression MakeDynamic(class System.Type delegateType, class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2, class System.Linq.Expressions.Expression arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeDynamic (delegateType As Type, binder As CallSiteBinder, arg0 As Expression, arg1 As Expression, arg2 As Expression, arg3 As Expression) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ MakeDynamic(Type ^ delegateType, System::Runtime::CompilerServices::CallSiteBinder ^ binder, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2, System::Linq::Expressions::Expression ^ arg3);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arg3" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="delegateType">
          <span data-ttu-id="b0929-2244">
            <see cref="T:System.Runtime.CompilerServices.CallSite" /> 所使用的委派類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2244">The type of the delegate used by the <see cref="T:System.Runtime.CompilerServices.CallSite" />.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="b0929-2245">動態作業的執行階段繫結器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2245">The runtime binder for the dynamic operation.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="b0929-2246">動態作業的第一個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2246">The first argument to the dynamic operation.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="b0929-2247">傳遞至動態作業的第二個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2247">The second argument to the dynamic operation.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="b0929-2248">傳遞至動態作業的第三個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2248">The third argument to the dynamic operation.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="b0929-2249">傳遞至動態運算的第四個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2249">The fourth argument to the dynamic operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2250">建立 <see cref="T:System.Linq.Expressions.DynamicExpression" />，代表指定之 <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> 和四個引數所繫結的動態運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2250">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> and four arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2251">
            <see cref="T:System.Linq.Expressions.DynamicExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 等於 <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" />，且 <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />、<see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> 和 <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> 設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2251">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />, <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />, and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeGoto">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression MakeGoto (System.Linq.Expressions.GotoExpressionKind kind, System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression MakeGoto(valuetype System.Linq.Expressions.GotoExpressionKind kind, class System.Linq.Expressions.LabelTarget target, class System.Linq.Expressions.Expression value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ MakeGoto(System::Linq::Expressions::GotoExpressionKind kind, System::Linq::Expressions::LabelTarget ^ target, System::Linq::Expressions::Expression ^ value, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.Linq.Expressions.GotoExpressionKind" />
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="kind">
          <span data-ttu-id="b0929-2252">
            <see cref="T:System.Linq.Expressions.GotoExpressionKind" /> 的 <see cref="T:System.Linq.Expressions.GotoExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2252">The <see cref="T:System.Linq.Expressions.GotoExpressionKind" /> of the <see cref="T:System.Linq.Expressions.GotoExpression" />.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="b0929-2253">
            <see cref="T:System.Linq.Expressions.LabelTarget" /> 將跳躍的目標 <see cref="T:System.Linq.Expressions.GotoExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2253">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b0929-2254">將在跳躍時傳遞至關聯標籤的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2254">The value that will be passed to the associated label upon jumping.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="b0929-2255">要將 <see cref="T:System.Type" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.Expression.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2255">An <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2256">建立 <see cref="T:System.Linq.Expressions.GotoExpression" />，代表指定之 <see cref="T:System.Linq.Expressions.GotoExpressionKind" /> 的跳躍點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2256">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a jump of the specified <see cref="T:System.Linq.Expressions.GotoExpressionKind" />.</span>
          </span>
          <span data-ttu-id="b0929-2257">也可以指定在跳躍時傳遞至標籤的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2257">The value passed to the label upon jumping can also be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2258">
            <see cref="T:System.Linq.Expressions.GotoExpression" />，其 <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 等於 <paramref name="kind" />、<see cref="P:System.Linq.Expressions.GotoExpression.Target" /> 屬性設定為 <paramref name="target" />、<see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性設定為 <paramref name="type" />，且包含在跳躍時傳遞至目標標籤的 <paramref name="value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2258">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to <paramref name="kind" />, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to <paramref name="type" />, and <paramref name="value" /> to be passed to the target label upon jumping.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeIndex">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.IndexExpression MakeIndex (System.Linq.Expressions.Expression instance, System.Reflection.PropertyInfo indexer, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.IndexExpression MakeIndex(class System.Linq.Expressions.Expression instance, class System.Reflection.PropertyInfo indexer, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeIndex (instance As Expression, indexer As PropertyInfo, arguments As IEnumerable(Of Expression)) As IndexExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::IndexExpression ^ MakeIndex(System::Linq::Expressions::Expression ^ instance, System::Reflection::PropertyInfo ^ indexer, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.IndexExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="indexer" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="b0929-2259">屬性所屬的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2259">The object to which the property belongs.</span>
          </span>
          <span data-ttu-id="b0929-2260">如果屬性為 <see langword="static" /> (在 Visual Basic 中為 <see langword="shared" />)，則應該是 Null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2260">It should be null if the property is <see langword="static" /> (<see langword="shared" /> in Visual Basic).</span>
          </span>
        </param>
        <param name="indexer">
          <span data-ttu-id="b0929-2261">
            <see cref="T:System.Linq.Expressions.Expression" />，代表要編製索引的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2261">An <see cref="T:System.Linq.Expressions.Expression" /> representing the property to index.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="b0929-2262">
            <c>IEnumerable&lt;Expression&gt;</c> (在 Visual Basic 中為 <c>IEnumerable (Of Expression)</c>)，包含將用於對屬性進行索引的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2262">An <c>IEnumerable&lt;Expression&gt;</c> (<c>IEnumerable (Of Expression)</c> in Visual Basic) that contains the arguments that will be used to index the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2263">建立 <see cref="T:System.Linq.Expressions.IndexExpression" />，代表存取物件中的索引屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2263">Creates an <see cref="T:System.Linq.Expressions.IndexExpression" /> that represents accessing an indexed property in an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2264">建立的 <see cref="T:System.Linq.Expressions.IndexExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2264">The created <see cref="T:System.Linq.Expressions.IndexExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeMemberAccess">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberExpression MakeMemberAccess (System.Linq.Expressions.Expression expression, System.Reflection.MemberInfo member);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberExpression MakeMemberAccess(class System.Linq.Expressions.Expression expression, class System.Reflection.MemberInfo member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberExpression ^ MakeMemberAccess(System::Linq::Expressions::Expression ^ expression, System::Reflection::MemberInfo ^ member);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-2265">
            <see cref="T:System.Linq.Expressions.Expression" />，代表成員所屬的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2265">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the object that the member belongs to.</span>
          </span>
          <span data-ttu-id="b0929-2266">如果是靜態成員，可以是 Null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2266">This can be null for static members.</span>
          </span>
        </param>
        <param name="member">
          <span data-ttu-id="b0929-2267">
            <see cref="T:System.Reflection.MemberInfo" />，說明要存取的欄位或屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2267">The <see cref="T:System.Reflection.MemberInfo" /> that describes the field or property to be accessed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2268">建立代表存取欄位或屬性的 <see cref="T:System.Linq.Expressions.MemberExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2268">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing either a field or a property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2269">
            <see cref="T:System.Linq.Expressions.MemberExpression" />，由呼叫適當的 Factory 方法所產生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2269">The <see cref="T:System.Linq.Expressions.MemberExpression" /> that results from calling the appropriate factory method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2270">這個方法可以用來建立<xref:System.Linq.Expressions.MemberExpression>代表存取欄位或屬性，根據類型`member`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2270">This method can be used to create a <xref:System.Linq.Expressions.MemberExpression> that represents accessing either a field or a property, depending on the type of `member`.</span></span> <span data-ttu-id="b0929-2271">如果`member`的型別<xref:System.Reflection.FieldInfo>，這個方法會呼叫<xref:System.Linq.Expressions.Expression.Field%2A>建立<xref:System.Linq.Expressions.MemberExpression>。</span><span class="sxs-lookup"><span data-stu-id="b0929-2271">If `member` is of type <xref:System.Reflection.FieldInfo>, this method calls <xref:System.Linq.Expressions.Expression.Field%2A> to create the <xref:System.Linq.Expressions.MemberExpression>.</span></span> <span data-ttu-id="b0929-2272">如果`member`的型別<xref:System.Reflection.PropertyInfo>，這個方法會呼叫<xref:System.Linq.Expressions.Expression.Property%2A>建立<xref:System.Linq.Expressions.MemberExpression>。</span><span class="sxs-lookup"><span data-stu-id="b0929-2272">If `member` is of type <xref:System.Reflection.PropertyInfo>, this method calls <xref:System.Linq.Expressions.Expression.Property%2A> to create the <xref:System.Linq.Expressions.MemberExpression>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2273">
            <paramref name="member" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2273">
              <paramref name="member" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2274">
            <paramref name="member" /> 不代表欄位或屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2274">
              <paramref name="member" /> does not represent a field or property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MakeTry">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.TryExpression MakeTry (Type type, System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression finally, System.Linq.Expressions.Expression fault, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.CatchBlock&gt; handlers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.TryExpression MakeTry(class System.Type type, class System.Linq.Expressions.Expression body, class System.Linq.Expressions.Expression finally, class System.Linq.Expressions.Expression fault, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.CatchBlock&gt; handlers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::TryExpression ^ MakeTry(Type ^ type, System::Linq::Expressions::Expression ^ body, System::Linq::Expressions::Expression ^ finally, System::Linq::Expressions::Expression ^ fault, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::CatchBlock ^&gt; ^ handlers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.TryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="finally" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="fault" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="handlers" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.CatchBlock&gt;" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b0929-2275">try 運算式的結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2275">The result type of the try expression.</span>
          </span>
          <span data-ttu-id="b0929-2276">如果為 Null，則 bodh 和所有處理常式必須具有相同的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2276">If null, bodh and all handlers must have identical type.</span>
          </span>
        </param>
        <param name="body">
          <span data-ttu-id="b0929-2277">try 區塊的主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2277">The body of the try block.</span>
          </span>
        </param>
        <param name="finally">
          <span data-ttu-id="b0929-2278">finally 區塊的主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2278">The body of the finally block.</span>
          </span>
          <span data-ttu-id="b0929-2279">如果 try 區塊沒有相關聯的 finally 區塊，則傳遞 Null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2279">Pass null if the try block has no finally block associated with it.</span>
          </span>
        </param>
        <param name="fault">
          <span data-ttu-id="b0929-2280">fault 區塊的主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2280">The body of the fault block.</span>
          </span>
          <span data-ttu-id="b0929-2281">如果 try 區塊沒有相關聯的 fault 區塊，則傳遞 Null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2281">Pass null if the try block has no fault block associated with it.</span>
          </span>
        </param>
        <param name="handlers">
          <span data-ttu-id="b0929-2282">
            <see cref="T:System.Linq.Expressions.CatchBlock" /> 的集合，代表要與 try 區塊產生關聯的 catch 陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2282">A collection of <see cref="T:System.Linq.Expressions.CatchBlock" />s representing the catch statements to be associated with the try block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2283">建立 <see cref="T:System.Linq.Expressions.TryExpression" />，代表含指定之項目的 try 區塊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2283">Creates a <see cref="T:System.Linq.Expressions.TryExpression" /> representing a try block with the specified elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2284">建立的 <see cref="T:System.Linq.Expressions.TryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2284">The created <see cref="T:System.Linq.Expressions.TryExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MakeUnary">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-2285">透過呼叫適當的 Factory 方法來建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2285">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> by calling the appropriate factory method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MakeUnary">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression MakeUnary (System.Linq.Expressions.ExpressionType unaryType, System.Linq.Expressions.Expression operand, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression MakeUnary(valuetype System.Linq.Expressions.ExpressionType unaryType, class System.Linq.Expressions.Expression operand, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ MakeUnary(System::Linq::Expressions::ExpressionType unaryType, System::Linq::Expressions::Expression ^ operand, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unaryType" Type="System.Linq.Expressions.ExpressionType" />
        <Parameter Name="operand" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="unaryType">
          <span data-ttu-id="b0929-2286">
            <see cref="T:System.Linq.Expressions.ExpressionType" />，指定一元運算的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2286">The <see cref="T:System.Linq.Expressions.ExpressionType" /> that specifies the type of unary operation.</span>
          </span>
        </param>
        <param name="operand">
          <span data-ttu-id="b0929-2287">代表運算元的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2287">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the operand.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="b0929-2288">
            <see cref="T:System.Type" />，指定轉換後的類型 (如果不適用，則傳遞 <see langword="null" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2288">The <see cref="T:System.Type" /> that specifies the type to be converted to (pass <see langword="null" /> if not applicable).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2289">指定運算元並呼叫適當的 Factory 方法，建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2289">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" />, given an operand, by calling the appropriate factory method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2290">
            <see cref="T:System.Linq.Expressions.UnaryExpression" />，由呼叫適當的 Factory 方法所產生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2290">The <see cref="T:System.Linq.Expressions.UnaryExpression" /> that results from calling the appropriate factory method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2291">`unaryType`參數可決定哪些<xref:System.Linq.Expressions.UnaryExpression>factory 方法，這個方法會呼叫。</span><span class="sxs-lookup"><span data-stu-id="b0929-2291">The `unaryType` parameter determines which <xref:System.Linq.Expressions.UnaryExpression> factory method this method calls.</span></span> <span data-ttu-id="b0929-2292">例如，如果`unaryType`等於<xref:System.Linq.Expressions.ExpressionType.Convert>，這個方法會叫用<xref:System.Linq.Expressions.Expression.Convert%2A>。</span><span class="sxs-lookup"><span data-stu-id="b0929-2292">For example, if `unaryType` is equal to <xref:System.Linq.Expressions.ExpressionType.Convert>, this method invokes <xref:System.Linq.Expressions.Expression.Convert%2A>.</span></span> <span data-ttu-id="b0929-2293">`type`不適用於所呼叫的 factory 方法，如果參數會被忽略。</span><span class="sxs-lookup"><span data-stu-id="b0929-2293">The `type`parameter is ignored if it does not apply to the factory method that is called.</span></span>  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2294">
            <paramref name="operand" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2294">
              <paramref name="operand" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2295">
            <paramref name="unaryType" /> 未對應到一元運算式節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2295">
              <paramref name="unaryType" /> does not correspond to a unary expression node.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MakeUnary">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression MakeUnary (System.Linq.Expressions.ExpressionType unaryType, System.Linq.Expressions.Expression operand, Type type, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression MakeUnary(valuetype System.Linq.Expressions.ExpressionType unaryType, class System.Linq.Expressions.Expression operand, class System.Type type, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ MakeUnary(System::Linq::Expressions::ExpressionType unaryType, System::Linq::Expressions::Expression ^ operand, Type ^ type, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unaryType" Type="System.Linq.Expressions.ExpressionType" />
        <Parameter Name="operand" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="unaryType">
          <span data-ttu-id="b0929-2296">
            <see cref="T:System.Linq.Expressions.ExpressionType" />，指定一元運算的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2296">The <see cref="T:System.Linq.Expressions.ExpressionType" /> that specifies the type of unary operation.</span>
          </span>
        </param>
        <param name="operand">
          <span data-ttu-id="b0929-2297">代表運算元的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2297">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the operand.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="b0929-2298">
            <see cref="T:System.Type" />，指定轉換後的類型 (如果不適用，則傳遞 <see langword="null" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2298">The <see cref="T:System.Type" /> that specifies the type to be converted to (pass <see langword="null" /> if not applicable).</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-2299">代表實作方法的 <see cref="T:System.Reflection.MethodInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2299">The <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2300">指定運算元和實作方法並透過呼叫適當的 Fatory 方法，建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2300">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" />, given an operand and implementing method, by calling the appropriate factory method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2301">
            <see cref="T:System.Linq.Expressions.UnaryExpression" />，由呼叫適當的 Factory 方法所產生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2301">The <see cref="T:System.Linq.Expressions.UnaryExpression" /> that results from calling the appropriate factory method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2302">`unaryType`參數可決定哪些<xref:System.Linq.Expressions.UnaryExpression>factory 方法，這個方法會呼叫。</span><span class="sxs-lookup"><span data-stu-id="b0929-2302">The `unaryType` parameter determines which <xref:System.Linq.Expressions.UnaryExpression> factory method this method calls.</span></span> <span data-ttu-id="b0929-2303">例如，如果`unaryType`等於<xref:System.Linq.Expressions.ExpressionType.Convert>，這個方法會叫用<xref:System.Linq.Expressions.Expression.Convert%2A>。</span><span class="sxs-lookup"><span data-stu-id="b0929-2303">For example, if `unaryType` is equal to <xref:System.Linq.Expressions.ExpressionType.Convert>, this method invokes <xref:System.Linq.Expressions.Expression.Convert%2A>.</span></span> <span data-ttu-id="b0929-2304">`type`和`method`參數都會被忽略，如果它們不會套用至呼叫的 factory 方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2304">The `type` and `method` parameters are ignored if they do not apply to the factory method that is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2305">
            <paramref name="operand" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2305">
              <paramref name="operand" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2306">
            <paramref name="unaryType" /> 未對應到一元運算式節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2306">
              <paramref name="unaryType" /> does not correspond to a unary expression node.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MemberBind">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-2307">建立 <see cref="T:System.Linq.Expressions.MemberMemberBinding" />，表示遞迴初始化成員的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2307">Creates a <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> that represents the recursive initialization of members of a member.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MemberBind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberMemberBinding MemberBind (System.Reflection.MemberInfo member, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt; bindings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberMemberBinding MemberBind(class System.Reflection.MemberInfo member, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.MemberBinding&gt; bindings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MemberBind (member As MemberInfo, bindings As IEnumerable(Of MemberBinding)) As MemberMemberBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberMemberBinding ^ MemberBind(System::Reflection::MemberInfo ^ member, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::MemberBinding ^&gt; ^ bindings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberMemberBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="bindings" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt;" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="b0929-2308">要將 <see cref="T:System.Reflection.MemberInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.MemberBinding.Member" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2308">The <see cref="T:System.Reflection.MemberInfo" /> to set the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property equal to.</span>
          </span>
        </param>
        <param name="bindings">
          <span data-ttu-id="b0929-2309">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" />，其中包含用以填入 <see cref="T:System.Linq.Expressions.MemberBinding" /> 集合的 <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2309">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.MemberBinding" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2310">建立 <see cref="T:System.Linq.Expressions.MemberMemberBinding" />，表示遞迴初始化欄位或屬性的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2310">Creates a <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> that represents the recursive initialization of members of a field or property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2311">
            <see cref="T:System.Linq.Expressions.MemberMemberBinding" />，其 <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> 屬性等於 <see cref="F:System.Linq.Expressions.MemberBindingType.MemberBinding" />，且 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 和 <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2311">A <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> that has the <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> property equal to <see cref="F:System.Linq.Expressions.MemberBindingType.MemberBinding" /> and the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> and <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2312">`member`參數必須代表欄位或屬性。</span><span class="sxs-lookup"><span data-stu-id="b0929-2312">The `member` parameter must represent a field or property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2313">
            <paramref name="member" /> 或 <paramref name="bindings" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2313">
              <paramref name="member" /> or <paramref name="bindings" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2314">
            <paramref name="member" /> 不代表欄位或屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2314">
              <paramref name="member" /> does not represent a field or property.</span>
          </span>
          <span data-ttu-id="b0929-2315">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2315">-or-</span>
          </span>
          <span data-ttu-id="b0929-2316">
            <paramref name="bindings" /> 之項目的 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 屬性不表示 <paramref name="member" /> 所表示之欄位或屬性類型的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2316">The <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property of an element of <paramref name="bindings" /> does not represent a member of the type of the field or property that <paramref name="member" /> represents.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MemberBind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberMemberBinding MemberBind (System.Reflection.MemberInfo member, params System.Linq.Expressions.MemberBinding[] bindings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberMemberBinding MemberBind(class System.Reflection.MemberInfo member, class System.Linq.Expressions.MemberBinding[] bindings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MemberBind (member As MemberInfo, ParamArray bindings As MemberBinding()) As MemberMemberBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberMemberBinding ^ MemberBind(System::Reflection::MemberInfo ^ member, ... cli::array &lt;System::Linq::Expressions::MemberBinding ^&gt; ^ bindings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberMemberBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="bindings" Type="System.Linq.Expressions.MemberBinding[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="b0929-2317">要將 <see cref="T:System.Reflection.MemberInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.MemberBinding.Member" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2317">The <see cref="T:System.Reflection.MemberInfo" /> to set the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property equal to.</span>
          </span>
        </param>
        <param name="bindings">
          <span data-ttu-id="b0929-2318">用以填入 <see cref="T:System.Linq.Expressions.MemberBinding" /> 集合之 <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2318">An array of <see cref="T:System.Linq.Expressions.MemberBinding" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2319">建立 <see cref="T:System.Linq.Expressions.MemberMemberBinding" />，表示遞迴初始化欄位或屬性的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2319">Creates a <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> that represents the recursive initialization of members of a field or property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2320">
            <see cref="T:System.Linq.Expressions.MemberMemberBinding" />，其 <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> 屬性等於 <see cref="F:System.Linq.Expressions.MemberBindingType.MemberBinding" />，且 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 和 <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2320">A <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> that has the <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> property equal to <see cref="F:System.Linq.Expressions.MemberBindingType.MemberBinding" /> and the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> and <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2321">`member`參數必須代表欄位或屬性。</span><span class="sxs-lookup"><span data-stu-id="b0929-2321">The `member` parameter must represent a field or property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2322">
            <paramref name="member" /> 或 <paramref name="bindings" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2322">
              <paramref name="member" /> or <paramref name="bindings" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2323">
            <paramref name="member" /> 不代表欄位或屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2323">
              <paramref name="member" /> does not represent a field or property.</span>
          </span>
          <span data-ttu-id="b0929-2324">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2324">-or-</span>
          </span>
          <span data-ttu-id="b0929-2325">
            <paramref name="bindings" /> 之項目的 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 屬性不表示 <paramref name="member" /> 所表示之欄位或屬性類型的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2325">The <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property of an element of <paramref name="bindings" /> does not represent a member of the type of the field or property that <paramref name="member" /> represents.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MemberBind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberMemberBinding MemberBind (System.Reflection.MethodInfo propertyAccessor, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt; bindings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberMemberBinding MemberBind(class System.Reflection.MethodInfo propertyAccessor, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.MemberBinding&gt; bindings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MemberBind (propertyAccessor As MethodInfo, bindings As IEnumerable(Of MemberBinding)) As MemberMemberBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberMemberBinding ^ MemberBind(System::Reflection::MethodInfo ^ propertyAccessor, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::MemberBinding ^&gt; ^ bindings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberMemberBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyAccessor" Type="System.Reflection.MethodInfo" />
        <Parameter Name="bindings" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyAccessor">
          <span data-ttu-id="b0929-2326">
            <see cref="T:System.Reflection.MethodInfo" />，代表屬性存取子方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2326">The <see cref="T:System.Reflection.MethodInfo" /> that represents a property accessor method.</span>
          </span>
        </param>
        <param name="bindings">
          <span data-ttu-id="b0929-2327">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" />，其中包含用以填入 <see cref="T:System.Linq.Expressions.MemberBinding" /> 集合的 <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2327">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.MemberBinding" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2328">建立 <see cref="T:System.Linq.Expressions.MemberMemberBinding" />，表示遞迴初始化成員的成員，該成員可透過使用屬性存取子方法來存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2328">Creates a <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> that represents the recursive initialization of members of a member that is accessed by using a property accessor method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2329">
            <see cref="T:System.Linq.Expressions.MemberMemberBinding" />，其 <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> 屬性等於 <see cref="F:System.Linq.Expressions.MemberBindingType.MemberBinding" />，並將 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 屬性設定為 <see cref="T:System.Reflection.PropertyInfo" />，表示在 <paramref name="propertyAccessor" /> 中存取的屬性，<see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> 屬性則設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2329">A <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> that has the <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> property equal to <see cref="F:System.Linq.Expressions.MemberBindingType.MemberBinding" />, the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property set to the <see cref="T:System.Reflection.PropertyInfo" /> that represents the property accessed in <paramref name="propertyAccessor" />, and <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2330">
            <paramref name="propertyAccessor" /> 或 <paramref name="bindings" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2330">
              <paramref name="propertyAccessor" /> or <paramref name="bindings" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2331">
            <paramref name="propertyAccessor" /> 不代表屬性存取子方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2331">
              <paramref name="propertyAccessor" /> does not represent a property accessor method.</span>
          </span>
          <span data-ttu-id="b0929-2332">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2332">-or-</span>
          </span>
          <span data-ttu-id="b0929-2333">
            <paramref name="bindings" /> 之項目的 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 屬性不表示 <paramref name="propertyAccessor" /> 所表示之方法存取的屬性類型成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2333">The <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property of an element of <paramref name="bindings" /> does not represent a member of the type of the property accessed by the method that <paramref name="propertyAccessor" /> represents.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MemberBind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberMemberBinding MemberBind (System.Reflection.MethodInfo propertyAccessor, params System.Linq.Expressions.MemberBinding[] bindings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberMemberBinding MemberBind(class System.Reflection.MethodInfo propertyAccessor, class System.Linq.Expressions.MemberBinding[] bindings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MemberBind (propertyAccessor As MethodInfo, ParamArray bindings As MemberBinding()) As MemberMemberBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberMemberBinding ^ MemberBind(System::Reflection::MethodInfo ^ propertyAccessor, ... cli::array &lt;System::Linq::Expressions::MemberBinding ^&gt; ^ bindings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberMemberBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyAccessor" Type="System.Reflection.MethodInfo" />
        <Parameter Name="bindings" Type="System.Linq.Expressions.MemberBinding[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="propertyAccessor">
          <span data-ttu-id="b0929-2334">
            <see cref="T:System.Reflection.MethodInfo" />，代表屬性存取子方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2334">The <see cref="T:System.Reflection.MethodInfo" /> that represents a property accessor method.</span>
          </span>
        </param>
        <param name="bindings">
          <span data-ttu-id="b0929-2335">用以填入 <see cref="T:System.Linq.Expressions.MemberBinding" /> 集合之 <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2335">An array of <see cref="T:System.Linq.Expressions.MemberBinding" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2336">建立 <see cref="T:System.Linq.Expressions.MemberMemberBinding" />，表示遞迴初始化成員的成員，該成員可透過使用屬性存取子方法來存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2336">Creates a <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> that represents the recursive initialization of members of a member that is accessed by using a property accessor method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2337">
            <see cref="T:System.Linq.Expressions.MemberMemberBinding" />，其 <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> 屬性等於 <see cref="F:System.Linq.Expressions.MemberBindingType.MemberBinding" />，並將 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 屬性設定為 <see cref="T:System.Reflection.PropertyInfo" />，表示在 <paramref name="propertyAccessor" /> 中存取的屬性，<see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> 屬性則設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2337">A <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> that has the <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> property equal to <see cref="F:System.Linq.Expressions.MemberBindingType.MemberBinding" />, the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property set to the <see cref="T:System.Reflection.PropertyInfo" /> that represents the property accessed in <paramref name="propertyAccessor" />, and <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2338">
            <paramref name="propertyAccessor" /> 或 <paramref name="bindings" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2338">
              <paramref name="propertyAccessor" /> or <paramref name="bindings" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2339">
            <paramref name="propertyAccessor" /> 不代表屬性存取子方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2339">
              <paramref name="propertyAccessor" /> does not represent a property accessor method.</span>
          </span>
          <span data-ttu-id="b0929-2340">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2340">-or-</span>
          </span>
          <span data-ttu-id="b0929-2341">
            <paramref name="bindings" /> 之項目的 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 屬性不表示 <paramref name="propertyAccessor" /> 所表示之方法存取的屬性類型成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2341">The <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property of an element of <paramref name="bindings" /> does not represent a member of the type of the property accessed by the method that <paramref name="propertyAccessor" /> represents.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MemberInit">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-2342">表示建立新物件並初始化物件屬性的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2342">Represents an expression that creates a new object and initializes a property of the object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MemberInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberInitExpression MemberInit (System.Linq.Expressions.NewExpression newExpression, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt; bindings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberInitExpression MemberInit(class System.Linq.Expressions.NewExpression newExpression, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.MemberBinding&gt; bindings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberInitExpression ^ MemberInit(System::Linq::Expressions::NewExpression ^ newExpression, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::MemberBinding ^&gt; ^ bindings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberInitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" />
        <Parameter Name="bindings" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt;" />
      </Parameters>
      <Docs>
        <param name="newExpression">
          <span data-ttu-id="b0929-2343">要將 <see cref="T:System.Linq.Expressions.NewExpression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2343">A <see cref="T:System.Linq.Expressions.NewExpression" /> to set the <see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" /> property equal to.</span>
          </span>
        </param>
        <param name="bindings">
          <span data-ttu-id="b0929-2344">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" />，其中包含用以填入 <see cref="T:System.Linq.Expressions.MemberBinding" /> 集合的 <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2344">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.MemberBinding" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2345">表示建立新物件並初始化物件屬性的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2345">Represents an expression that creates a new object and initializes a property of the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2346">
            <see cref="T:System.Linq.Expressions.MemberInitExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.MemberInit" />，且 <see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" /> 和 <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2346">A <see cref="T:System.Linq.Expressions.MemberInitExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MemberInit" /> and the <see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" /> and <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2347"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.MemberInitExpression>等於<xref:System.Linq.Expressions.Expression.Type%2A>屬性`newExpression`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2347">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MemberInitExpression> is equal to the <xref:System.Linq.Expressions.Expression.Type%2A> property of `newExpression`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-2348">下列範例會示範建立新的物件，並初始化物件屬性的運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-2348">The following example demonstrates an expression that creates a new object and initializes a property of the object.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#40](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#40)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#40](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2349">
            <paramref name="newExpression" /> 或 <paramref name="bindings" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2349">
              <paramref name="newExpression" /> or <paramref name="bindings" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2350">
            <paramref name="bindings" /> 之項目的 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 屬性不表示 <paramref name="newExpression" />.Type 所表示之類型的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2350">The <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property of an element of <paramref name="bindings" /> does not represent a member of the type that <paramref name="newExpression" />.Type represents.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MemberInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberInitExpression MemberInit (System.Linq.Expressions.NewExpression newExpression, params System.Linq.Expressions.MemberBinding[] bindings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberInitExpression MemberInit(class System.Linq.Expressions.NewExpression newExpression, class System.Linq.Expressions.MemberBinding[] bindings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberInitExpression ^ MemberInit(System::Linq::Expressions::NewExpression ^ newExpression, ... cli::array &lt;System::Linq::Expressions::MemberBinding ^&gt; ^ bindings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberInitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" />
        <Parameter Name="bindings" Type="System.Linq.Expressions.MemberBinding[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="newExpression">
          <span data-ttu-id="b0929-2351">要將 <see cref="T:System.Linq.Expressions.NewExpression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2351">A <see cref="T:System.Linq.Expressions.NewExpression" /> to set the <see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" /> property equal to.</span>
          </span>
        </param>
        <param name="bindings">
          <span data-ttu-id="b0929-2352">用以填入 <see cref="T:System.Linq.Expressions.MemberBinding" /> 集合之 <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2352">An array of <see cref="T:System.Linq.Expressions.MemberBinding" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2353">建立 <see cref="T:System.Linq.Expressions.MemberInitExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2353">Creates a <see cref="T:System.Linq.Expressions.MemberInitExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2354">
            <see cref="T:System.Linq.Expressions.MemberInitExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.MemberInit" />，且 <see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" /> 和 <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2354">A <see cref="T:System.Linq.Expressions.MemberInitExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MemberInit" /> and the <see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" /> and <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2355"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.MemberInitExpression>等於<xref:System.Linq.Expressions.Expression.Type%2A>屬性`newExpression`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2355">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MemberInitExpression> is equal to the <xref:System.Linq.Expressions.Expression.Type%2A> property of `newExpression`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-2356">下列範例示範如何使用<xref:System.Linq.Expressions.Expression.MemberInit%28System.Linq.Expressions.NewExpression%2CSystem.Linq.Expressions.MemberBinding%5B%5D%29>方法來建立<xref:System.Linq.Expressions.MemberInitExpression>，表示新物件的兩個成員初始化。</span><span class="sxs-lookup"><span data-stu-id="b0929-2356">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.MemberInit%28System.Linq.Expressions.NewExpression%2CSystem.Linq.Expressions.MemberBinding%5B%5D%29> method to create a <xref:System.Linq.Expressions.MemberInitExpression> that represents the initialization of two members of a new object.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#9)]
 [!code-vb[System.Linq.Expressions.Expression#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2357">
            <paramref name="newExpression" /> 或 <paramref name="bindings" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2357">
              <paramref name="newExpression" /> or <paramref name="bindings" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2358">
            <paramref name="bindings" /> 之項目的 <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> 屬性不表示 <paramref name="newExpression" />.Type 所表示之類型的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2358">The <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property of an element of <paramref name="bindings" /> does not represent a member of the type that <paramref name="newExpression" />.Type represents.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Modulo">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-2359">建立代表算術餘數運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2359">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic remainder operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Modulo">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Modulo (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Modulo(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Modulo (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Modulo(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-2360">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2360">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-2361">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2361">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2362">建立代表算術餘數運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2362">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic remainder operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2363">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Modulo" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2363">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Modulo" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2364">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2364">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-2365"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2365">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-2366">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2366">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-2367">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2367">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-2368"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2368">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-2369">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-2369">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-2370">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-2370">Implementing Method</span></span>  
 <span data-ttu-id="b0929-2371">下列規則決定作業選取實作的方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-2371">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-2372">如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載模數運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2372">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the modulus operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2373">否則，如果`left`。型別和`right`。類型為數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2373">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-2374">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-2374">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-2375">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-2375">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-2376">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2376">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-2377">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2377">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2378">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-2378">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-2379">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2379">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-2380">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2380">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-2381">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-2381">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-2382">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2382">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-2383">節點的類型是預先定義的模數運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2383">The type of the node is the result type of the predefined modulus operator.</span></span>  
  
-   <span data-ttu-id="b0929-2384">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2384">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-2385">節點的類型為 null 的型別對應至預先定義的模數運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2385">The type of the node is the nullable type that corresponds to the result type of the predefined modulus operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2386">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2386">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-2387">不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義餘數運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2387">The modulus operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Modulo">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Modulo (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Modulo(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Modulo (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Modulo(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-2388">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2388">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-2389">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2389">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-2390">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2390">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2391">建立代表算術餘數運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2391">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic remainder operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2392">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Modulo" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2392">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Modulo" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2393">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2393">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-2394"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2394">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-2395">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2395">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-2396">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2396">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-2397"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2397">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-2398">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-2398">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-2399">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-2399">Implementing Method</span></span>  
 <span data-ttu-id="b0929-2400">作業的實作方法是選擇根據下列規則：</span><span class="sxs-lookup"><span data-stu-id="b0929-2400">The implementing method for the operation is chosen based on the following rules:</span></span>  
  
-   <span data-ttu-id="b0929-2401">如果`method`不`null`，而它代表非 void， `static` (`Shared`在 Visual Basic 中) 採用兩個引數，方法是節點的實作方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2401">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="b0929-2402">否則，如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載模數運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2402">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the modulus operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2403">否則，如果`left`。型別和`right`。類型為數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2403">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-2404">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-2404">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-2405">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-2405">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-2406">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2406">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-2407">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2407">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2408">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-2408">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-2409">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2409">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-2410">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2410">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-2411">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-2411">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-2412">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2412">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-2413">節點的類型是預先定義的模數運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2413">The type of the node is the result type of the predefined modulus operator.</span></span>  
  
-   <span data-ttu-id="b0929-2414">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2414">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-2415">節點的類型為 null 的型別對應至預先定義的模數運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2415">The type of the node is the nullable type that corresponds to the result type of the predefined modulus operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2416">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2416">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2417">
            <paramref name="method" /> 不是 <see langword="null" />，而它所代表的方法會傳回 <see langword="void" />、不是 <see langword="static" /> (Visual Basic 中的 <see langword="Shared" />)，或者未確切採用兩個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2417">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-2418">
            <paramref name="method" /> 是 <see langword="null" />，且未針對 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義模數運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2418">
              <paramref name="method" /> is <see langword="null" /> and the modulus operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ModuloAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-2419">建立表示餘數指派運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2419">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a remainder assignment operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ModuloAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ModuloAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ModuloAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModuloAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ModuloAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-2420">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2420">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-2421">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2421">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2422">建立表示餘數指派運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2422">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a remainder assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2423">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.ModuloAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2423">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ModuloAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModuloAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ModuloAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ModuloAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModuloAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ModuloAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-2424">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2424">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-2425">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2425">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-2426">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2426">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2427">建立表示餘數指派運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2427">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a remainder assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2428">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.ModuloAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2428">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ModuloAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModuloAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ModuloAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ModuloAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModuloAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ModuloAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-2429">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2429">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-2430">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2430">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-2431">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2431">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="b0929-2432">要將 <see cref="T:System.Linq.Expressions.LambdaExpression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2432">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2433">建立表示餘數指派運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2433">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a remainder assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2434">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.ModuloAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2434">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ModuloAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Multiply">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-2435">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，其代表不含溢位檢查的算術乘法運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2435">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic multiplication operation that does not have overflow checking.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Multiply (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Multiply(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Multiply(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-2436">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2436">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-2437">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2437">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2438">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，其代表不含溢位檢查的算術乘法運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2438">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic multiplication operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2439">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Multiply" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2439">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Multiply" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2440">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2440">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-2441"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2441">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-2442">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2442">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-2443">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2443">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-2444"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2444">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-2445">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-2445">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-2446">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-2446">Implementing Method</span></span>  
 <span data-ttu-id="b0929-2447">下列規則決定作業選取實作的方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-2447">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-2448">如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載乘法運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2448">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the multiplication operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2449">否則，如果`left`。型別和`right`。類型為數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2449">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-2450">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-2450">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-2451">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-2451">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-2452">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2452">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-2453">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2453">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2454">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-2454">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-2455">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2455">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-2456">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2456">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-2457">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-2457">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-2458">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2458">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-2459">節點的類型是預先定義的乘法運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2459">The type of the node is the result type of the predefined multiplication operator.</span></span>  
  
-   <span data-ttu-id="b0929-2460">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2460">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-2461">節點的類型為 null 的型別對應至預先定義的乘法運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2461">The type of the node is the nullable type that corresponds to the result type of the predefined multiplication operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-2462">下列程式碼範例示範如何建立將兩個值相乘的運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-2462">The following code example shows how to create an expression that multiplies two values.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#27)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2463">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2463">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-2464">不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義 Multiplication 運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2464">The multiplication operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Multiply (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Multiply(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Multiply(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-2465">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2465">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-2466">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2466">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-2467">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2467">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2468">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，其代表不含溢位檢查的算術乘法運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2468">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic multiplication operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2469">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Multiply" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2469">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Multiply" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2470">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2470">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-2471"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2471">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-2472">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2472">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-2473">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2473">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-2474"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2474">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-2475">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-2475">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-2476">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-2476">Implementing Method</span></span>  
 <span data-ttu-id="b0929-2477">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-2477">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-2478">如果`method`不`null`，而它代表非 void， `static` (`Shared`在 Visual Basic 中) 採用兩個引數，方法是節點的實作方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2478">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="b0929-2479">否則，如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載乘法運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2479">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the multiplication operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2480">否則，如果`left`。型別和`right`。類型為數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2480">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-2481">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-2481">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-2482">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-2482">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-2483">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2483">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-2484">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2484">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2485">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-2485">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-2486">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2486">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-2487">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2487">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-2488">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-2488">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-2489">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2489">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-2490">節點的類型是預先定義的乘法運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2490">The type of the node is the result type of the predefined multiplication operator.</span></span>  
  
-   <span data-ttu-id="b0929-2491">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2491">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-2492">節點的類型為 null 的型別對應至預先定義的乘法運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2492">The type of the node is the nullable type that corresponds to the result type of the predefined multiplication operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2493">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2493">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2494">
            <paramref name="method" /> 不是 <see langword="null" />，而它所代表的方法會傳回 <see langword="void" />、不是 <see langword="static" /> (Visual Basic 中的 <see langword="Shared" />)，或者未確切採用兩個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2494">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-2495">
            <paramref name="method" /> 為 <see langword="null" />，且不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義 Multiplication 運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2495">
              <paramref name="method" /> is <see langword="null" /> and the multiplication operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MultiplyAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-2496">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示不含溢位檢查的乘法指派運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2496">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a multiplication assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MultiplyAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MultiplyAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MultiplyAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MultiplyAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-2497">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2497">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-2498">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2498">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2499">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示不含溢位檢查的乘法指派運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2499">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a multiplication assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2500">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2500">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MultiplyAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MultiplyAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MultiplyAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-2501">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2501">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-2502">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2502">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-2503">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2503">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2504">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示不含溢位檢查的乘法指派運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2504">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a multiplication assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2505">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2505">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MultiplyAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MultiplyAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MultiplyAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-2506">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2506">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-2507">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2507">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-2508">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2508">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="b0929-2509">要將 <see cref="T:System.Linq.Expressions.LambdaExpression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2509">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2510">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示不含溢位檢查的乘法指派運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2510">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a multiplication assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2511">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2511">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MultiplyAssignChecked">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-2512">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示包含溢位檢查的乘法指派運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2512">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a multiplication assignment operation that has overflow checking.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MultiplyAssignChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MultiplyAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MultiplyAssignChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAssignChecked (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MultiplyAssignChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-2513">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2513">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-2514">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2514">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2515">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示包含溢位檢查的乘法指派運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2515">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a multiplication assignment operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2516">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssignChecked" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2516">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssignChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyAssignChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MultiplyAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MultiplyAssignChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAssignChecked (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MultiplyAssignChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-2517">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2517">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-2518">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2518">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-2519">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2519">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2520">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示包含溢位檢查的乘法指派運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2520">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a multiplication assignment operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2521">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssignChecked" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2521">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssignChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyAssignChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MultiplyAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MultiplyAssignChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAssignChecked (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MultiplyAssignChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-2522">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2522">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-2523">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2523">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-2524">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2524">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="b0929-2525">要將 <see cref="T:System.Linq.Expressions.LambdaExpression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2525">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2526">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示包含溢位檢查的乘法指派運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2526">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a multiplication assignment operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2527">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssignChecked" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2527">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssignChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MultiplyChecked">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-2528">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，其代表包含溢位檢查的算術乘法運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2528">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic multiplication operation that has overflow checking.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MultiplyChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MultiplyChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MultiplyChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyChecked (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MultiplyChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-2529">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2529">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-2530">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2530">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2531">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，其代表包含溢位檢查的算術乘法運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2531">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic multiplication operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2532">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyChecked" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2532">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2533">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2533">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-2534"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2534">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-2535">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2535">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-2536">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2536">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-2537"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2537">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-2538">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-2538">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-2539">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-2539">Implementing Method</span></span>  
 <span data-ttu-id="b0929-2540">下列規則決定作業選取實作的方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-2540">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-2541">如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載乘法運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2541">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the multiplication operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2542">否則，如果`left`。型別和`right`。類型為數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2542">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-2543">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-2543">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-2544">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-2544">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-2545">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2545">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-2546">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2546">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2547">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-2547">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-2548">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2548">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-2549">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2549">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-2550">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-2550">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-2551">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2551">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-2552">節點的類型是預先定義的乘法運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2552">The type of the node is the result type of the predefined multiplication operator.</span></span>  
  
-   <span data-ttu-id="b0929-2553">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2553">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-2554">節點的類型為 null 的型別對應至預先定義的乘法運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2554">The type of the node is the nullable type that corresponds to the result type of the predefined multiplication operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2555">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2555">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-2556">不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義 Multiplication 運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2556">The multiplication operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MultiplyChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MultiplyChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MultiplyChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyChecked (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MultiplyChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-2557">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2557">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-2558">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2558">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-2559">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2559">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2560">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，其代表包含溢位檢查的算術乘法運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2560">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic multiplication operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2561">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyChecked" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2561">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2562">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2562">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-2563"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2563">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-2564">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2564">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-2565">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2565">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-2566"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2566">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-2567">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-2567">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-2568">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-2568">Implementing Method</span></span>  
 <span data-ttu-id="b0929-2569">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-2569">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-2570">如果`method`不`null`，而它代表非 void， `static` (`Shared`在 Visual Basic 中) 採用兩個引數，方法是節點的實作方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2570">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="b0929-2571">否則，如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載乘法運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2571">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the multiplication operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2572">否則，如果`left`。型別和`right`。類型為數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2572">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-2573">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-2573">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-2574">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-2574">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-2575">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2575">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-2576">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2576">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2577">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-2577">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-2578">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2578">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-2579">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2579">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-2580">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-2580">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-2581">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2581">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-2582">節點的類型是預先定義的乘法運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2582">The type of the node is the result type of the predefined multiplication operator.</span></span>  
  
-   <span data-ttu-id="b0929-2583">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2583">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-2584">節點的類型為 null 的型別對應至預先定義的乘法運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2584">The type of the node is the nullable type that corresponds to the result type of the predefined multiplication operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2585">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2585">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2586">
            <paramref name="method" /> 不是 <see langword="null" />，而它所代表的方法會傳回 <see langword="void" />、不是 <see langword="static" /> (Visual Basic 中的 <see langword="Shared" />)，或者未確切採用兩個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2586">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-2587">
            <paramref name="method" /> 為 <see langword="null" />，且不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義 Multiplication 運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2587">
              <paramref name="method" /> is <see langword="null" /> and the multiplication operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Negate">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-2588">建立代表算術負運算的 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2588">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an arithmetic negation operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Negate (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Negate(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Negate(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-2589">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2589">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2590">建立代表算術負運算的 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2590">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an arithmetic negation operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2591">
            <see cref="T:System.Linq.Expressions.UnaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Negate" />，而 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2591">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Negate" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2592"><xref:System.Linq.Expressions.UnaryExpression.Method%2A>屬性產生<xref:System.Linq.Expressions.UnaryExpression>設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2592">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="b0929-2593"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2593">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-2594">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2594">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-2595">否則，它們是 false。</span><span class="sxs-lookup"><span data-stu-id="b0929-2595">Otherwise, they are false.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-2596">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-2596">Implementing Method</span></span>  
 <span data-ttu-id="b0929-2597">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-2597">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-2598">如果`expression`。類型是使用者定義的類型定義一元減號運算子，<xref:System.Reflection.MethodInfo>表示的運算子是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2598">If `expression`.Type is a user-defined type that defines the unary minus operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2599">否則，如果`expression`。類型是數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2599">Otherwise, if `expression`.Type is a numeric type, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-2600">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-2600">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-2601">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-2601">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-2602">如果`expression`。類型是指派給實作的方法引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2602">If `expression`.Type is assignable to the argument type of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-2603">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2603">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2604">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-2604">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-2605">`expression`.類型為 null 的實值類型，而且對應的非可為 null 的實值類型等於實作之方法的引數類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2605">`expression`.Type is a nullable value type and the corresponding non-nullable value type is equal to the argument type of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-2606">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2606">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-2607">如果實作的方法是`null`，節點的類型是`expression`。型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2607">If the implementing method is `null`, the type of the node is `expression`.Type.</span></span> <span data-ttu-id="b0929-2608">如果`expression`。類型為非 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2608">If `expression`.Type is non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-2609">否則，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2609">Otherwise, the node is lifted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-2610">下列範例會示範如何建立代表算術負運算的運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-2610">The following example demonstrates how to create an expression that represents an arithmetic negation operation.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#50](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#50)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#50](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2611">
            <paramref name="expression" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2611">
              <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-2612">不會為 <paramref name="expression" />.Type 定義一元減號運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2612">The unary minus operator is not defined for <paramref name="expression" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Negate (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Negate(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Negate(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-2613">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2613">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-2614">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2614">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2615">建立代表算術負運算的 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2615">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an arithmetic negation operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2616">
            <see cref="T:System.Linq.Expressions.UnaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Negate" />，且 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> 和 <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2616">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Negate" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> and <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2617"><xref:System.Linq.Expressions.UnaryExpression.Method%2A>屬性產生<xref:System.Linq.Expressions.UnaryExpression>設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2617">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="b0929-2618"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2618">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-2619">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2619">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-2620">否則，它們是 false。</span><span class="sxs-lookup"><span data-stu-id="b0929-2620">Otherwise, they are false.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-2621">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-2621">Implementing Method</span></span>  
 <span data-ttu-id="b0929-2622">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-2622">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-2623">如果`method`不`null`，而它代表非 void， `static` (`Shared`在 Visual Basic 中) 採用一個引數，方法是節點的實作方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2623">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes one argument, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="b0929-2624">如果`expression`。類型是使用者定義的類型定義一元減號運算子，<xref:System.Reflection.MethodInfo>表示的運算子是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2624">If `expression`.Type is a user-defined type that defines the unary minus operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2625">否則，如果`expression`。類型是數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2625">Otherwise, if `expression`.Type is a numeric type, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-2626">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-2626">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-2627">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-2627">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-2628">如果`expression`。類型是指派給實作的方法引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2628">If `expression`.Type is assignable to the argument type of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-2629">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2629">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2630">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-2630">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-2631">`expression`.類型為 null 的實值類型，而且對應的非可為 null 的實值類型等於實作之方法的引數類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2631">`expression`.Type is a nullable value type and the corresponding non-nullable value type is equal to the argument type of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-2632">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2632">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-2633">如果實作的方法是`null`，節點的類型是`expression`。型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2633">If the implementing method is `null`, the type of the node is `expression`.Type.</span></span> <span data-ttu-id="b0929-2634">如果`expression`。類型為非 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2634">If `expression`.Type is non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-2635">否則，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2635">Otherwise, the node is lifted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2636">
            <paramref name="expression" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2636">
              <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2637">
            <paramref name="method" /> 不是 <see langword="null" />，而且其代表的方法傳回的是 <see langword="void" />，不是 <see langword="static" /> (在 Visual Basic 中為 <see langword="Shared" />)，或者使用的引數不是剛好一個。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2637">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly one argument.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-2638">
            <paramref name="method" /> 為 <see langword="null" />，且不會為 <paramref name="expression" />.Type 定義一元減號運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2638">
              <paramref name="method" /> is <see langword="null" /> and the unary minus operator is not defined for <paramref name="expression" />.Type.</span>
          </span>
          <span data-ttu-id="b0929-2639">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2639">-or-</span>
          </span>
          <span data-ttu-id="b0929-2640">
            <paramref name="expression" />.Type (如果它是可為 Null 的實質類型，則為其對應之不可為 Null 的類型) 無法指派給 <paramref name="method" /> 所代表之方法的引數類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2640">
              <paramref name="expression" />.Type (or its corresponding non-nullable type if it is a nullable value type) is not assignable to the argument type of the method represented by <paramref name="method" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="NegateChecked">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-2641">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，其代表包含溢位檢查的算術負運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2641">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an arithmetic negation operation that has overflow checking.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NegateChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression NegateChecked (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression NegateChecked(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ NegateChecked(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-2642">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2642">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2643">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，其代表包含溢位檢查的算術負運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2643">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an arithmetic negation operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2644">
            <see cref="T:System.Linq.Expressions.UnaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.NegateChecked" />，而 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2644">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.NegateChecked" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2645"><xref:System.Linq.Expressions.UnaryExpression.Method%2A>屬性產生<xref:System.Linq.Expressions.UnaryExpression>設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2645">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="b0929-2646"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2646">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-2647">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2647">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-2648">否則，它們是 false。</span><span class="sxs-lookup"><span data-stu-id="b0929-2648">Otherwise, they are false.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-2649">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-2649">Implementing Method</span></span>  
 <span data-ttu-id="b0929-2650">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-2650">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-2651">如果`expression`。類型是使用者定義的類型定義一元減號運算子，<xref:System.Reflection.MethodInfo>表示的運算子是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2651">If `expression`.Type is a user-defined type that defines the unary minus operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2652">否則，如果`expression`。類型是數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2652">Otherwise, if `expression`.Type is a numeric type, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-2653">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-2653">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-2654">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-2654">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-2655">如果`expression`。類型是指派給實作的方法引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2655">If `expression`.Type is assignable to the argument type of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-2656">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2656">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2657">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-2657">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-2658">`expression`.類型為 null 的實值類型，而且對應的非可為 null 的實值類型等於實作之方法的引數類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2658">`expression`.Type is a nullable value type and the corresponding non-nullable value type is equal to the argument type of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-2659">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2659">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-2660">如果實作的方法是`null`，節點的類型是`expression`。型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2660">If the implementing method is `null`, the type of the node is `expression`.Type.</span></span> <span data-ttu-id="b0929-2661">如果`expression`。類型為非 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2661">If `expression`.Type is non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-2662">否則，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2662">Otherwise, the node is lifted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2663">
            <paramref name="expression" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2663">
              <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-2664">不會為 <paramref name="expression" />.Type 定義一元減號運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2664">The unary minus operator is not defined for <paramref name="expression" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NegateChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression NegateChecked (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression NegateChecked(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ NegateChecked(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-2665">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2665">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-2666">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2666">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2667">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，其代表包含溢位檢查的算術負運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2667">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an arithmetic negation operation that has overflow checking.</span>
          </span>
          <span data-ttu-id="b0929-2668">實作的方法可加以指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2668">The implementing method can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2669">
            <see cref="T:System.Linq.Expressions.UnaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.NegateChecked" />，且 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> 和 <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2669">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.NegateChecked" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> and <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2670"><xref:System.Linq.Expressions.UnaryExpression.Method%2A>屬性產生<xref:System.Linq.Expressions.UnaryExpression>設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2670">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="b0929-2671"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2671">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-2672">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2672">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-2673">否則，它們是 false。</span><span class="sxs-lookup"><span data-stu-id="b0929-2673">Otherwise, they are false.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-2674">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-2674">Implementing Method</span></span>  
 <span data-ttu-id="b0929-2675">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-2675">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-2676">如果`method`不`null`，而它代表非 void， `static` (`Shared`在 Visual Basic 中) 採用一個引數，方法是節點的實作方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2676">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes one argument, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="b0929-2677">如果`expression`。類型是使用者定義的類型定義一元減號運算子，<xref:System.Reflection.MethodInfo>表示的運算子是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2677">If `expression`.Type is a user-defined type that defines the unary minus operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2678">否則，如果`expression`。類型是數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2678">Otherwise, if `expression`.Type is a numeric type, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-2679">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-2679">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-2680">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-2680">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-2681">如果`expression`。類型是指派給實作的方法引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2681">If `expression`.Type is assignable to the argument type of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-2682">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2682">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2683">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-2683">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-2684">`expression`.類型為 null 的實值類型，而且對應的非可為 null 的實值類型等於實作之方法的引數類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2684">`expression`.Type is a nullable value type and the corresponding non-nullable value type is equal to the argument type of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-2685">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2685">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-2686">如果實作的方法是`null`，節點的類型是`expression`。型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2686">If the implementing method is `null`, the type of the node is `expression`.Type.</span></span> <span data-ttu-id="b0929-2687">如果`expression`。類型為非 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2687">If `expression`.Type is non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-2688">否則，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2688">Otherwise, the node is lifted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2689">
            <paramref name="expression" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2689">
              <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2690">
            <paramref name="method" /> 不是 <see langword="null" />，而且其代表的方法傳回的是 <see langword="void" />，不是 <see langword="static" /> (在 Visual Basic 中為 <see langword="Shared" />)，或者使用的引數不是剛好一個。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2690">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly one argument.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-2691">
            <paramref name="method" /> 為 <see langword="null" />，且不會為 <paramref name="expression" />.Type 定義一元減號運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2691">
              <paramref name="method" /> is <see langword="null" /> and the unary minus operator is not defined for <paramref name="expression" />.Type.</span>
          </span>
          <span data-ttu-id="b0929-2692">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2692">-or-</span>
          </span>
          <span data-ttu-id="b0929-2693">
            <paramref name="expression" />.Type (如果它是可為 Null 的實質類型，則為其對應之不可為 Null 的類型) 無法指派給 <paramref name="method" /> 所代表之方法的引數類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2693">
              <paramref name="expression" />.Type (or its corresponding non-nullable type if it is a nullable value type) is not assignable to the argument type of the method represented by <paramref name="method" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="New">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-2694">建立 <see cref="T:System.Linq.Expressions.NewExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2694">Creates a <see cref="T:System.Linq.Expressions.NewExpression" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewExpression New (System.Reflection.ConstructorInfo constructor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewExpression New(class System.Reflection.ConstructorInfo constructor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function New (constructor As ConstructorInfo) As NewExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewExpression ^ New(System::Reflection::ConstructorInfo ^ constructor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" />
      </Parameters>
      <Docs>
        <param name="constructor">
          <span data-ttu-id="b0929-2695">要將 <see cref="T:System.Reflection.ConstructorInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.NewExpression.Constructor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2695">The <see cref="T:System.Reflection.ConstructorInfo" /> to set the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2696">建立 <see cref="T:System.Linq.Expressions.NewExpression" />，代表呼叫不採用任何引數的指定建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2696">Creates a <see cref="T:System.Linq.Expressions.NewExpression" /> that represents calling the specified constructor that takes no arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2697">
            <see cref="T:System.Linq.Expressions.NewExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.New" />，而 <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2697">A <see cref="T:System.Linq.Expressions.NewExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.New" /> and the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2698"><xref:System.Linq.Expressions.NewExpression.Arguments%2A>和<xref:System.Linq.Expressions.NewExpression.Members%2A>屬性產生<xref:System.Linq.Expressions.NewExpression>是空的集合。</span><span class="sxs-lookup"><span data-stu-id="b0929-2698">The <xref:System.Linq.Expressions.NewExpression.Arguments%2A> and <xref:System.Linq.Expressions.NewExpression.Members%2A> properties of the resulting <xref:System.Linq.Expressions.NewExpression> are empty collections.</span></span> <span data-ttu-id="b0929-2699"><xref:System.Linq.Expressions.Expression.Type%2A>屬性表示所表示的建構函式的宣告型別`constructor`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2699">The <xref:System.Linq.Expressions.Expression.Type%2A> property represents the declaring type of the constructor represented by `constructor`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2700">
            <paramref name="constructor" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2700">
              <paramref name="constructor" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2701">由 <paramref name="constructor" /> 表示的建構函式，擁有至少一個參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2701">The constructor that <paramref name="constructor" /> represents has at least one parameter.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewExpression New (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewExpression New(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.New(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewExpression ^ New(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b0929-2702">
            <see cref="T:System.Type" />，具有不採用任何引數的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2702">A <see cref="T:System.Type" /> that has a constructor that takes no arguments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2703">建立 <see cref="T:System.Linq.Expressions.NewExpression" />，代表呼叫指定類型的無參數建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2703">Creates a <see cref="T:System.Linq.Expressions.NewExpression" /> that represents calling the parameterless constructor of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2704">
            <see cref="T:System.Linq.Expressions.NewExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.New" />，且 <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> 屬性設定為 <see cref="T:System.Reflection.ConstructorInfo" />，代表不含指定類型之參數的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2704">A <see cref="T:System.Linq.Expressions.NewExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.New" /> and the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> property set to the <see cref="T:System.Reflection.ConstructorInfo" /> that represents the constructor without parameters for the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2705">`type`參數必須代表不含參數的建構函式的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2705">The `type` parameter must represent a type that has a constructor without parameters.</span></span>  
  
 <span data-ttu-id="b0929-2706"><xref:System.Linq.Expressions.NewExpression.Arguments%2A>和<xref:System.Linq.Expressions.NewExpression.Members%2A>屬性產生<xref:System.Linq.Expressions.NewExpression>是空的集合。</span><span class="sxs-lookup"><span data-stu-id="b0929-2706">The <xref:System.Linq.Expressions.NewExpression.Arguments%2A> and <xref:System.Linq.Expressions.NewExpression.Members%2A> properties of the resulting <xref:System.Linq.Expressions.NewExpression> are empty collections.</span></span> <span data-ttu-id="b0929-2707"><xref:System.Linq.Expressions.Expression.Type%2A>屬性等於`type`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2707">The <xref:System.Linq.Expressions.Expression.Type%2A> property is equal to `type`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-2708">下列範例示範如何使用<xref:System.Linq.Expressions.Expression.New%28System.Type%29>方法來建立<xref:System.Linq.Expressions.NewExpression>代表不含參數的建構函式建構一個字典物件的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="b0929-2708">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.New%28System.Type%29> method to create a <xref:System.Linq.Expressions.NewExpression> that represents constructing a new instance of a dictionary object by calling the constructor without parameters.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#10)]
 [!code-vb[System.Linq.Expressions.Expression#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2709">
            <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2709">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2710">
            <paramref name="type" /> 表示的類型沒有無參數建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2710">The type that <paramref name="type" /> represents does not have a constructor without parameters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewExpression New (System.Reflection.ConstructorInfo constructor, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewExpression New(class System.Reflection.ConstructorInfo constructor, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function New (constructor As ConstructorInfo, arguments As IEnumerable(Of Expression)) As NewExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewExpression ^ New(System::Reflection::ConstructorInfo ^ constructor, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="constructor">
          <span data-ttu-id="b0929-2711">要將 <see cref="T:System.Reflection.ConstructorInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.NewExpression.Constructor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2711">The <see cref="T:System.Reflection.ConstructorInfo" /> to set the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> property equal to.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="b0929-2712">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" />，其中包含用以填入 <see cref="T:System.Linq.Expressions.Expression" /> 集合的 <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2712">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2713">建立 <see cref="T:System.Linq.Expressions.NewExpression" />，其代表以指定之引數呼叫指定的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2713">Creates a <see cref="T:System.Linq.Expressions.NewExpression" /> that represents calling the specified constructor with the specified arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2714">
            <see cref="T:System.Linq.Expressions.NewExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.New" />，且 <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> 和 <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2714">A <see cref="T:System.Linq.Expressions.NewExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.New" /> and the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> and <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2715">`arguments`參數必須包含相同數目的項目所代表之建構函式的參數數目為`constructor`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2715">The `arguments` parameter must contain the same number of elements as the number of parameters for the constructor represented by `constructor`.</span></span> <span data-ttu-id="b0929-2716">如果`arguments`是`null`，被視為空的而<xref:System.Linq.Expressions.NewExpression.Arguments%2A>屬性產生<xref:System.Linq.Expressions.NewExpression>為空集合。</span><span class="sxs-lookup"><span data-stu-id="b0929-2716">If `arguments` is `null`, it is considered empty, and the <xref:System.Linq.Expressions.NewExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> is an empty collection.</span></span>  
  
 <span data-ttu-id="b0929-2717"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.NewExpression>代表所表示的建構函式的宣告型別`constructor`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2717">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> represents the declaring type of the constructor represented by `constructor`.</span></span> <span data-ttu-id="b0929-2718"><xref:System.Linq.Expressions.NewExpression.Members%2A>屬性為空集合。</span><span class="sxs-lookup"><span data-stu-id="b0929-2718">The <xref:System.Linq.Expressions.NewExpression.Members%2A> property is an empty collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2719">
            <paramref name="constructor" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2719">
              <paramref name="constructor" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-2720">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2720">-or-</span>
          </span>
          <span data-ttu-id="b0929-2721">
            <paramref name="arguments" /> 的項目是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2721">An element of <paramref name="arguments" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2722">
            <paramref name="arguments" /> 參數包含的項目數目與 <paramref name="constructor" /> 所表示之建構函式的參數數目不同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2722">The <paramref name="arguments" /> parameter does not contain the same number of elements as the number of parameters for the constructor that <paramref name="constructor" /> represents.</span>
          </span>
          <span data-ttu-id="b0929-2723">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2723">-or-</span>
          </span>
          <span data-ttu-id="b0929-2724">
            <paramref name="arguments" /> 項目的 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性無法指派給 <paramref name="constructor" /> 所代表之建構函式的對應參數類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2724">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="arguments" /> is not assignable to the type of the corresponding parameter of the constructor that <paramref name="constructor" /> represents.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewExpression New (System.Reflection.ConstructorInfo constructor, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewExpression New(class System.Reflection.ConstructorInfo constructor, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function New (constructor As ConstructorInfo, ParamArray arguments As Expression()) As NewExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewExpression ^ New(System::Reflection::ConstructorInfo ^ constructor, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="constructor">
          <span data-ttu-id="b0929-2725">要將 <see cref="T:System.Reflection.ConstructorInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.NewExpression.Constructor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2725">The <see cref="T:System.Reflection.ConstructorInfo" /> to set the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> property equal to.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="b0929-2726">用以填入 <see cref="T:System.Linq.Expressions.Expression" /> 集合之 <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2726">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2727">建立 <see cref="T:System.Linq.Expressions.NewExpression" />，其代表以指定之引數呼叫指定的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2727">Creates a <see cref="T:System.Linq.Expressions.NewExpression" /> that represents calling the specified constructor with the specified arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2728">
            <see cref="T:System.Linq.Expressions.NewExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.New" />，且 <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> 和 <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2728">A <see cref="T:System.Linq.Expressions.NewExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.New" /> and the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> and <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2729">`arguments`參數必須包含相同數目的項目所代表之建構函式的參數數目為`constructor`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2729">The `arguments` parameter must contain the same number of elements as the number of parameters for the constructor represented by `constructor`.</span></span> <span data-ttu-id="b0929-2730">如果`arguments`是`null`，被視為空的而<xref:System.Linq.Expressions.NewExpression.Arguments%2A>屬性產生<xref:System.Linq.Expressions.NewExpression>為空集合。</span><span class="sxs-lookup"><span data-stu-id="b0929-2730">If `arguments` is `null`, it is considered empty, and the <xref:System.Linq.Expressions.NewExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> is an empty collection.</span></span>  
  
 <span data-ttu-id="b0929-2731"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.NewExpression>代表所表示的建構函式的宣告型別`constructor`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2731">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> represents the declaring type of the constructor represented by `constructor`.</span></span> <span data-ttu-id="b0929-2732"><xref:System.Linq.Expressions.NewExpression.Members%2A>屬性為空集合。</span><span class="sxs-lookup"><span data-stu-id="b0929-2732">The <xref:System.Linq.Expressions.NewExpression.Members%2A> property is an empty collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2733">
            <paramref name="constructor" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2733">
              <paramref name="constructor" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-2734">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2734">-or-</span>
          </span>
          <span data-ttu-id="b0929-2735">
            <paramref name="arguments" /> 的項目是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2735">An element of <paramref name="arguments" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2736">
            <paramref name="arguments" /> 的長度不符合 <paramref name="constructor" /> 代表之建構函式的參數數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2736">The length of <paramref name="arguments" /> does match the number of parameters for the constructor that <paramref name="constructor" /> represents.</span>
          </span>
          <span data-ttu-id="b0929-2737">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2737">-or-</span>
          </span>
          <span data-ttu-id="b0929-2738">
            <paramref name="arguments" /> 項目的 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性無法指派給 <paramref name="constructor" /> 所代表之建構函式的對應參數類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2738">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="arguments" /> is not assignable to the type of the corresponding parameter of the constructor that <paramref name="constructor" /> represents.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewExpression New (System.Reflection.ConstructorInfo constructor, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments, System.Collections.Generic.IEnumerable&lt;System.Reflection.MemberInfo&gt; members);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewExpression New(class System.Reflection.ConstructorInfo constructor, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments, class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.MemberInfo&gt; members) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function New (constructor As ConstructorInfo, arguments As IEnumerable(Of Expression), members As IEnumerable(Of MemberInfo)) As NewExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewExpression ^ New(System::Reflection::ConstructorInfo ^ constructor, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments, System::Collections::Generic::IEnumerable&lt;System::Reflection::MemberInfo ^&gt; ^ members);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
        <Parameter Name="members" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.MemberInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="constructor">
          <span data-ttu-id="b0929-2739">要將 <see cref="T:System.Reflection.ConstructorInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.NewExpression.Constructor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2739">The <see cref="T:System.Reflection.ConstructorInfo" /> to set the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> property equal to.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="b0929-2740">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" />，其中包含用以填入 <see cref="T:System.Linq.Expressions.Expression" /> 集合的 <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2740">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> collection.</span>
          </span>
        </param>
        <param name="members">
          <span data-ttu-id="b0929-2741">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" />，其中包含用以填入 <see cref="T:System.Reflection.MemberInfo" /> 集合的 <see cref="P:System.Linq.Expressions.NewExpression.Members" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2741">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Reflection.MemberInfo" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewExpression.Members" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2742">建立 <see cref="T:System.Linq.Expressions.NewExpression" />，其代表以指定之引數呼叫指定的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2742">Creates a <see cref="T:System.Linq.Expressions.NewExpression" /> that represents calling the specified constructor with the specified arguments.</span>
          </span>
          <span data-ttu-id="b0929-2743">已指定可存取由建構函式初始化欄位的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2743">The members that access the constructor initialized fields are specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2744">
            <see cref="T:System.Linq.Expressions.NewExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.New" />，且 <see cref="P:System.Linq.Expressions.NewExpression.Constructor" />、<see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> 和 <see cref="P:System.Linq.Expressions.NewExpression.Members" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2744">A <see cref="T:System.Linq.Expressions.NewExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.New" /> and the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" />, <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> and <see cref="P:System.Linq.Expressions.NewExpression.Members" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2745">`arguments`參數必須包含相同數目的項目所代表之建構函式的參數數目為`constructor`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2745">The `arguments` parameter must contain the same number of elements as the number of parameters for the constructor represented by `constructor`.</span></span> <span data-ttu-id="b0929-2746">如果`arguments`是`null`，被視為空的而<xref:System.Linq.Expressions.NewExpression.Arguments%2A>屬性產生<xref:System.Linq.Expressions.NewExpression>為空集合。</span><span class="sxs-lookup"><span data-stu-id="b0929-2746">If `arguments` is `null`, it is considered empty, and the <xref:System.Linq.Expressions.NewExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> is an empty collection.</span></span>  
  
 <span data-ttu-id="b0929-2747">如果`members`是`null`、<xref:System.Linq.Expressions.NewExpression.Members%2A>屬性產生<xref:System.Linq.Expressions.NewExpression>為空集合。</span><span class="sxs-lookup"><span data-stu-id="b0929-2747">If `members` is `null`, the <xref:System.Linq.Expressions.NewExpression.Members%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> is an empty collection.</span></span> <span data-ttu-id="b0929-2748">如果`members`不`null`，它必須有相同數目的項目為`arguments`，且每個項目必須`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2748">If `members` is not `null`, it must have the same number of elements as `arguments` and each element must not be `null`.</span></span> <span data-ttu-id="b0929-2749">每個項目`members`必須<xref:System.Reflection.PropertyInfo>，<xref:System.Reflection.FieldInfo>或<xref:System.Reflection.MethodInfo>，代表所表示的建構函式的宣告型別上的執行個體成員`constructor`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2749">Each element of `members` must be a <xref:System.Reflection.PropertyInfo>, <xref:System.Reflection.FieldInfo> or <xref:System.Reflection.MethodInfo> that represents an instance member on the declaring type of the constructor represented by `constructor`.</span></span> <span data-ttu-id="b0929-2750">如果它代表的屬性，屬性必須有`get`存取子。</span><span class="sxs-lookup"><span data-stu-id="b0929-2750">If it represents a property, the property must have a `get` accessor.</span></span> <span data-ttu-id="b0929-2751">對應項目`arguments`每個項目`members`必須<xref:System.Linq.Expressions.Expression.Type%2A>代表指派給成員類型的類型的屬性，`members`元素代表。</span><span class="sxs-lookup"><span data-stu-id="b0929-2751">The corresponding element of `arguments` for each element of `members` must have a <xref:System.Linq.Expressions.Expression.Type%2A> property that represents a type that is assignable to the type of the member that the `members` element represents.</span></span>  
  
 <span data-ttu-id="b0929-2752"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.NewExpression>代表建構函式的宣告型別，`constructor`代表。</span><span class="sxs-lookup"><span data-stu-id="b0929-2752">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> represents the declaring type of the constructor that `constructor` represents.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2753">
            <paramref name="constructor" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2753">
              <paramref name="constructor" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-2754">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2754">-or-</span>
          </span>
          <span data-ttu-id="b0929-2755">
            <paramref name="arguments" /> 的項目是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2755">An element of <paramref name="arguments" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-2756">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2756">-or-</span>
          </span>
          <span data-ttu-id="b0929-2757">
            <paramref name="members" /> 的項目是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2757">An element of <paramref name="members" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2758">
            <paramref name="arguments" /> 參數包含的項目數目與 <paramref name="constructor" /> 所表示之建構函式的參數數目不同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2758">The <paramref name="arguments" /> parameter does not contain the same number of elements as the number of parameters for the constructor that <paramref name="constructor" /> represents.</span>
          </span>
          <span data-ttu-id="b0929-2759">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2759">-or-</span>
          </span>
          <span data-ttu-id="b0929-2760">
            <paramref name="arguments" /> 項目的 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性無法指派給 <paramref name="constructor" /> 所代表之建構函式的對應參數類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2760">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="arguments" /> is not assignable to the type of the corresponding parameter of the constructor that <paramref name="constructor" /> represents.</span>
          </span>
          <span data-ttu-id="b0929-2761">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2761">-or-</span>
          </span>
          <span data-ttu-id="b0929-2762">
            <paramref name="members" /> 參數的項目數與 <paramref name="arguments" /> 的不同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2762">The <paramref name="members" /> parameter does not have the same number of elements as <paramref name="arguments" />.</span>
          </span>
          <span data-ttu-id="b0929-2763">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2763">-or-</span>
          </span>
          <span data-ttu-id="b0929-2764">
            <paramref name="arguments" /> 的項目有 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性，它表示無法指派給 <paramref name="members" /> 其對應項目所表示成員類型的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2764">An element of <paramref name="arguments" /> has a <see cref="P:System.Linq.Expressions.Expression.Type" /> property that represents a type that is not assignable to the type of the member that is represented by the corresponding element of <paramref name="members" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewExpression New (System.Reflection.ConstructorInfo constructor, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments, params System.Reflection.MemberInfo[] members);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewExpression New(class System.Reflection.ConstructorInfo constructor, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments, class System.Reflection.MemberInfo[] members) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function New (constructor As ConstructorInfo, arguments As IEnumerable(Of Expression), ParamArray members As MemberInfo()) As NewExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewExpression ^ New(System::Reflection::ConstructorInfo ^ constructor, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments, ... cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ members);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
        <Parameter Name="members" Type="System.Reflection.MemberInfo[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="constructor">
          <span data-ttu-id="b0929-2765">要將 <see cref="T:System.Reflection.ConstructorInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.NewExpression.Constructor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2765">The <see cref="T:System.Reflection.ConstructorInfo" /> to set the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> property equal to.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="b0929-2766">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" />，其中包含用以填入 <see cref="T:System.Linq.Expressions.Expression" /> 集合的 <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2766">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> collection.</span>
          </span>
        </param>
        <param name="members">
          <span data-ttu-id="b0929-2767">用以填入 <see cref="T:System.Reflection.MemberInfo" /> 集合之 <see cref="P:System.Linq.Expressions.NewExpression.Members" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2767">An array of <see cref="T:System.Reflection.MemberInfo" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewExpression.Members" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2768">建立 <see cref="T:System.Linq.Expressions.NewExpression" />，其代表以指定之引數呼叫指定的建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2768">Creates a <see cref="T:System.Linq.Expressions.NewExpression" /> that represents calling the specified constructor with the specified arguments.</span>
          </span>
          <span data-ttu-id="b0929-2769">已指定可存取由建構函式初始化欄位的成員為陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2769">The members that access the constructor initialized fields are specified as an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2770">
            <see cref="T:System.Linq.Expressions.NewExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.New" />，且 <see cref="P:System.Linq.Expressions.NewExpression.Constructor" />、<see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> 和 <see cref="P:System.Linq.Expressions.NewExpression.Members" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2770">A <see cref="T:System.Linq.Expressions.NewExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.New" /> and the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" />, <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> and <see cref="P:System.Linq.Expressions.NewExpression.Members" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2771">`arguments`參數必須包含相同數目的項目所代表之建構函式的參數數目為`constructor`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2771">The `arguments` parameter must contain the same number of elements as the number of parameters for the constructor represented by `constructor`.</span></span> <span data-ttu-id="b0929-2772">如果`arguments`是`null`，被視為空的而<xref:System.Linq.Expressions.NewExpression.Arguments%2A>屬性產生<xref:System.Linq.Expressions.NewExpression>為空集合。</span><span class="sxs-lookup"><span data-stu-id="b0929-2772">If `arguments` is `null`, it is considered empty, and the <xref:System.Linq.Expressions.NewExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> is an empty collection.</span></span>  
  
 <span data-ttu-id="b0929-2773">如果`members`是`null`、<xref:System.Linq.Expressions.NewExpression.Members%2A>屬性產生<xref:System.Linq.Expressions.NewExpression>為空集合。</span><span class="sxs-lookup"><span data-stu-id="b0929-2773">If `members` is `null`, the <xref:System.Linq.Expressions.NewExpression.Members%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> is an empty collection.</span></span> <span data-ttu-id="b0929-2774">如果`members`不`null`，它必須有相同數目的項目為`arguments`，且每個項目必須`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2774">If `members` is not `null`, it must have the same number of elements as `arguments` and each element must not be `null`.</span></span> <span data-ttu-id="b0929-2775">每個項目`members`必須<xref:System.Reflection.PropertyInfo>，<xref:System.Reflection.FieldInfo>或<xref:System.Reflection.MethodInfo>，代表所表示的建構函式的宣告型別上的執行個體成員`constructor`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2775">Each element of `members` must be a <xref:System.Reflection.PropertyInfo>, <xref:System.Reflection.FieldInfo> or <xref:System.Reflection.MethodInfo> that represents an instance member on the declaring type of the constructor represented by `constructor`.</span></span> <span data-ttu-id="b0929-2776">如果它代表的屬性，屬性必須能夠擷取相關聯的欄位值。</span><span class="sxs-lookup"><span data-stu-id="b0929-2776">If it represents a property, the property must be able to retrieve the value of the associated field.</span></span> <span data-ttu-id="b0929-2777">對應項目`arguments`每個項目`members`必須<xref:System.Linq.Expressions.Expression.Type%2A>代表指派給成員類型的類型的屬性，`members`元素代表。</span><span class="sxs-lookup"><span data-stu-id="b0929-2777">The corresponding element of `arguments` for each element of `members` must have a <xref:System.Linq.Expressions.Expression.Type%2A> property that represents a type that is assignable to the type of the member that the `members` element represents.</span></span>  
  
 <span data-ttu-id="b0929-2778"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.NewExpression>代表建構函式的宣告型別，`constructor`代表。</span><span class="sxs-lookup"><span data-stu-id="b0929-2778">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> represents the declaring type of the constructor that `constructor` represents.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2779">
            <paramref name="constructor" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2779">
              <paramref name="constructor" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-2780">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2780">-or-</span>
          </span>
          <span data-ttu-id="b0929-2781">
            <paramref name="arguments" /> 的項目是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2781">An element of <paramref name="arguments" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-2782">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2782">-or-</span>
          </span>
          <span data-ttu-id="b0929-2783">
            <paramref name="members" /> 的項目是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2783">An element of <paramref name="members" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2784">
            <paramref name="arguments" /> 參數包含的項目數目與 <paramref name="constructor" /> 所表示之建構函式的參數數目不同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2784">The <paramref name="arguments" /> parameter does not contain the same number of elements as the number of parameters for the constructor that <paramref name="constructor" /> represents.</span>
          </span>
          <span data-ttu-id="b0929-2785">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2785">-or-</span>
          </span>
          <span data-ttu-id="b0929-2786">
            <paramref name="arguments" /> 項目的 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性無法指派給 <paramref name="constructor" /> 所代表之建構函式的對應參數類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2786">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="arguments" /> is not assignable to the type of the corresponding parameter of the constructor that <paramref name="constructor" /> represents.</span>
          </span>
          <span data-ttu-id="b0929-2787">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2787">-or-</span>
          </span>
          <span data-ttu-id="b0929-2788">
            <paramref name="members" /> 參數的項目數與 <paramref name="arguments" /> 的不同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2788">The <paramref name="members" /> parameter does not have the same number of elements as <paramref name="arguments" />.</span>
          </span>
          <span data-ttu-id="b0929-2789">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2789">-or-</span>
          </span>
          <span data-ttu-id="b0929-2790">
            <paramref name="arguments" /> 的項目有 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性，它表示無法指派給 <paramref name="members" /> 其對應項目所表示成員類型的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2790">An element of <paramref name="arguments" /> has a <see cref="P:System.Linq.Expressions.Expression.Type" /> property that represents a type that is not assignable to the type of the member that is represented by the corresponding element of <paramref name="members" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="NewArrayBounds">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-2791">建立 <see cref="T:System.Linq.Expressions.NewArrayExpression" />，其代表建立具有指定之陣序的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2791">Creates a <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that represents creating an array that has a specified rank.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NewArrayBounds">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewArrayExpression NewArrayBounds (Type type, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewArrayExpression NewArrayBounds(class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewArrayExpression ^ NewArrayBounds(Type ^ type, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ bounds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewArrayExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="bounds" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b0929-2792">
            <see cref="T:System.Type" />，代表陣列的項目類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2792">A <see cref="T:System.Type" /> that represents the element type of the array.</span>
          </span>
        </param>
        <param name="bounds">
          <span data-ttu-id="b0929-2793">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" />，其中包含用以填入 <see cref="T:System.Linq.Expressions.Expression" /> 集合的 <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2793">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2794">建立 <see cref="T:System.Linq.Expressions.NewArrayExpression" />，其代表建立具有指定之陣序的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2794">Creates a <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that represents creating an array that has a specified rank.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2795">
            <see cref="T:System.Linq.Expressions.NewArrayExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayBounds" />，而 <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2795">A <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayBounds" /> and the <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2796"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.NewArrayExpression>代表其次序等於長度的陣列類型`bounds`和其項目類型是`type`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2796">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.NewArrayExpression> represents an array type whose rank is equal to the length of `bounds` and whose element type is `type`.</span></span>  
  
 <span data-ttu-id="b0929-2797"><xref:System.Linq.Expressions.Expression.Type%2A>屬性的每個項目`bounds`必須代表整數類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2797">The <xref:System.Linq.Expressions.Expression.Type%2A> property of each element of `bounds` must represent an integral type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-2798">下列範例示範如何使用<xref:System.Linq.Expressions.Expression.NewArrayBounds%2A>方法來建立運算式樹狀結構表示的字串陣列建立擁有等級為 2。</span><span class="sxs-lookup"><span data-stu-id="b0929-2798">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.NewArrayBounds%2A> method to create an expression tree that represents creating a string array that has a rank of 2.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#2)]
 [!code-vb[System.Linq.Expressions.Expression#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2799">
            <paramref name="type" /> 或 <paramref name="bounds" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2799">
              <paramref name="type" /> or <paramref name="bounds" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-2800">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2800">-or-</span>
          </span>
          <span data-ttu-id="b0929-2801">
            <paramref name="bounds" /> 的項目是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2801">An element of <paramref name="bounds" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2802">
            <paramref name="bounds" /> 之項目的 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性不表示整數類資料類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2802">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="bounds" /> does not represent an integral type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NewArrayBounds">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewArrayExpression NewArrayBounds (Type type, params System.Linq.Expressions.Expression[] bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewArrayExpression NewArrayBounds(class System.Type type, class System.Linq.Expressions.Expression[] bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewArrayExpression ^ NewArrayBounds(Type ^ type, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ bounds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewArrayExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="bounds" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b0929-2803">
            <see cref="T:System.Type" />，代表陣列的項目類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2803">A <see cref="T:System.Type" /> that represents the element type of the array.</span>
          </span>
        </param>
        <param name="bounds">
          <span data-ttu-id="b0929-2804">用以填入 <see cref="T:System.Linq.Expressions.Expression" /> 集合之 <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2804">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2805">建立 <see cref="T:System.Linq.Expressions.NewArrayExpression" />，其代表建立具有指定之陣序的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2805">Creates a <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that represents creating an array that has a specified rank.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2806">
            <see cref="T:System.Linq.Expressions.NewArrayExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayBounds" />，而 <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2806">A <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayBounds" /> and the <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2807"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.NewArrayExpression>代表其次序等於長度的陣列類型`bounds`和其項目類型是`type`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2807">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.NewArrayExpression> represents an array type whose rank is equal to the length of `bounds` and whose element type is `type`.</span></span>  
  
 <span data-ttu-id="b0929-2808"><xref:System.Linq.Expressions.Expression.Type%2A>屬性的每個項目`bounds`必須代表整數類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2808">The <xref:System.Linq.Expressions.Expression.Type%2A> property of each element of `bounds` must represent an integral type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-2809">下列範例示範如何使用<xref:System.Linq.Expressions.Expression.NewArrayBounds%2A>方法來建立運算式樹狀結構表示的字串陣列建立擁有等級為 2。</span><span class="sxs-lookup"><span data-stu-id="b0929-2809">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.NewArrayBounds%2A> method to create an expression tree that represents creating a string array that has a rank of 2.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#2)]
 [!code-vb[System.Linq.Expressions.Expression#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2810">
            <paramref name="type" /> 或 <paramref name="bounds" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2810">
              <paramref name="type" /> or <paramref name="bounds" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-2811">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2811">-or-</span>
          </span>
          <span data-ttu-id="b0929-2812">
            <paramref name="bounds" /> 的項目是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2812">An element of <paramref name="bounds" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2813">
            <paramref name="bounds" /> 之項目的 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性不表示整數類資料類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2813">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="bounds" /> does not represent an integral type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="NewArrayInit">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-2814">建立 <see cref="T:System.Linq.Expressions.NewArrayExpression" />，其代表建立一維陣列，並從項目清單將此陣列初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2814">Creates a <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that represents creating a one-dimensional array and initializing it from a list of elements.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NewArrayInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewArrayExpression NewArrayInit (Type type, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewArrayExpression NewArrayInit(class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewArrayExpression ^ NewArrayInit(Type ^ type, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ initializers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewArrayExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b0929-2815">
            <see cref="T:System.Type" />，代表陣列的項目類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2815">A <see cref="T:System.Type" /> that represents the element type of the array.</span>
          </span>
        </param>
        <param name="initializers">
          <span data-ttu-id="b0929-2816">
            <see cref="T:System.Collections.Generic.IEnumerable\`1" />，其中包含用以填入 <see cref="T:System.Linq.Expressions.Expression" /> 集合的 <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2816">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2817">建立 <see cref="T:System.Linq.Expressions.NewArrayExpression" />，其代表建立一維陣列，並從項目清單將此陣列初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2817">Creates a <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that represents creating a one-dimensional array and initializing it from a list of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2818">
            <see cref="T:System.Linq.Expressions.NewArrayExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayInit" />，而 <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2818">A <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayInit" /> and the <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2819"><xref:System.Linq.Expressions.Expression.Type%2A>屬性的每個項目`initializers`必須代表指派給所代表之類型的型別`type`，可能是它之後*加上引號*。</span><span class="sxs-lookup"><span data-stu-id="b0929-2819">The <xref:System.Linq.Expressions.Expression.Type%2A> property of each element of `initializers` must represent a type that is assignable to the type represented by `type`, possibly after it is *quoted*.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b0929-2820">只有當項目會用引號括`type`是<xref:System.Linq.Expressions.Expression>。</span><span class="sxs-lookup"><span data-stu-id="b0929-2820">An element will be quoted only if `type` is <xref:System.Linq.Expressions.Expression>.</span></span> <span data-ttu-id="b0929-2821">引號的表示項目包裝在<xref:System.Linq.Expressions.ExpressionType.Quote>節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2821">Quoting means the element is wrapped in a <xref:System.Linq.Expressions.ExpressionType.Quote> node.</span></span> <span data-ttu-id="b0929-2822">產生的節點是<xref:System.Linq.Expressions.UnaryExpression>其<xref:System.Linq.Expressions.UnaryExpression.Operand%2A>屬性則是項目`initializers`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2822">The resulting node is a <xref:System.Linq.Expressions.UnaryExpression> whose <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> property is the element of `initializers`.</span></span>  
  
 <span data-ttu-id="b0929-2823"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.NewArrayExpression>代表陣列類型，其次序為 1，其項目類型為`type`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2823">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.NewArrayExpression> represents an array type whose rank is 1 and whose element type is `type`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-2824">下列範例示範如何使用<xref:System.Linq.Expressions.Expression.NewArrayInit%2A>方法來建立運算式樹狀架構代表建立一維字串陣列，初始化字串運算式的清單。</span><span class="sxs-lookup"><span data-stu-id="b0929-2824">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.NewArrayInit%2A> method to create an expression tree that represents creating a one-dimensional string array that is initialized with a list of string expressions.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#1)]
 [!code-vb[System.Linq.Expressions.Expression#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2825">
            <paramref name="type" /> 或 <paramref name="initializers" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2825">
              <paramref name="type" /> or <paramref name="initializers" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-2826">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2826">-or-</span>
          </span>
          <span data-ttu-id="b0929-2827">
            <paramref name="initializers" /> 的項目是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2827">An element of <paramref name="initializers" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-2828">
            <paramref name="initializers" /> 之項目的 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性所表示的類型無法指派給 <paramref name="type" /> 所表示的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2828">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="initializers" /> represents a type that is not assignable to the type that <paramref name="type" /> represents.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NewArrayInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewArrayExpression NewArrayInit (Type type, params System.Linq.Expressions.Expression[] initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewArrayExpression NewArrayInit(class System.Type type, class System.Linq.Expressions.Expression[] initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewArrayExpression ^ NewArrayInit(Type ^ type, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ initializers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewArrayExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="initializers" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b0929-2829">
            <see cref="T:System.Type" />，代表陣列的項目類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2829">A <see cref="T:System.Type" /> that represents the element type of the array.</span>
          </span>
        </param>
        <param name="initializers">
          <span data-ttu-id="b0929-2830">用以填入 <see cref="T:System.Linq.Expressions.Expression" /> 集合之 <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2830">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2831">建立 <see cref="T:System.Linq.Expressions.NewArrayExpression" />，其代表建立一維陣列，並從項目清單將此陣列初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2831">Creates a <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that represents creating a one-dimensional array and initializing it from a list of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2832">
            <see cref="T:System.Linq.Expressions.NewArrayExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayInit" />，而 <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2832">A <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayInit" /> and the <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2833"><xref:System.Linq.Expressions.Expression.Type%2A>屬性的每個項目`initializers`必須代表指派給所代表之類型的型別`type`，可能是它之後*加上引號*。</span><span class="sxs-lookup"><span data-stu-id="b0929-2833">The <xref:System.Linq.Expressions.Expression.Type%2A> property of each element of `initializers` must represent a type that is assignable to the type represented by `type`, possibly after it is *quoted*.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b0929-2834">只有當項目會用引號括`type`是<xref:System.Linq.Expressions.Expression>。</span><span class="sxs-lookup"><span data-stu-id="b0929-2834">An element will be quoted only if `type` is <xref:System.Linq.Expressions.Expression>.</span></span> <span data-ttu-id="b0929-2835">引號的表示項目包裝在<xref:System.Linq.Expressions.ExpressionType.Quote>節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2835">Quoting means the element is wrapped in a <xref:System.Linq.Expressions.ExpressionType.Quote> node.</span></span> <span data-ttu-id="b0929-2836">產生的節點是<xref:System.Linq.Expressions.UnaryExpression>其<xref:System.Linq.Expressions.UnaryExpression.Operand%2A>屬性則是項目`initializers`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2836">The resulting node is a <xref:System.Linq.Expressions.UnaryExpression> whose <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> property is the element of `initializers`.</span></span>  
  
 <span data-ttu-id="b0929-2837"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.NewArrayExpression>代表陣列類型，其次序為 1，其項目類型為`type`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2837">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.NewArrayExpression> represents an array type whose rank is 1 and whose element type is `type`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-2838">下列範例示範如何使用<xref:System.Linq.Expressions.Expression.NewArrayInit%2A>方法來建立運算式樹狀架構代表建立一維字串陣列，初始化字串運算式的清單。</span><span class="sxs-lookup"><span data-stu-id="b0929-2838">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.NewArrayInit%2A> method to create an expression tree that represents creating a one-dimensional string array that is initialized with a list of string expressions.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#1)]
 [!code-vb[System.Linq.Expressions.Expression#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2839">
            <paramref name="type" /> 或 <paramref name="initializers" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2839">
              <paramref name="type" /> or <paramref name="initializers" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-2840">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2840">-or-</span>
          </span>
          <span data-ttu-id="b0929-2841">
            <paramref name="initializers" /> 的項目是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2841">An element of <paramref name="initializers" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-2842">
            <paramref name="initializers" /> 之項目的 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性所表示的類型無法指派給 <paramref name="type" /> 類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2842">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="initializers" /> represents a type that is not assignable to the type <paramref name="type" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public virtual System.Linq.Expressions.ExpressionType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Linq.Expressions.ExpressionType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.Expression.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NodeType As ExpressionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Linq::Expressions::ExpressionType NodeType { System::Linq::Expressions::ExpressionType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ExpressionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-2843">取得這個 <see cref="T:System.Linq.Expressions.Expression" /> 的節點類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2843">Gets the node type of this <see cref="T:System.Linq.Expressions.Expression" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b0929-2844">其中一個 <see cref="T:System.Linq.Expressions.ExpressionType" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2844">One of the <see cref="T:System.Linq.Expressions.ExpressionType" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2845"><xref:System.Linq.Expressions.Expression.NodeType%2A>屬性提供的更具特製化的描述<xref:System.Linq.Expressions.Expression>比只是其衍生的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2845">The <xref:System.Linq.Expressions.Expression.NodeType%2A> property provides a more specialized description of an <xref:System.Linq.Expressions.Expression> than just its derived type.</span></span> <span data-ttu-id="b0929-2846">例如，<xref:System.Linq.Expressions.BinaryExpression>無法用來代表許多不同種類的二進位運算式，例如除法運算或 「 大於 」 作業。</span><span class="sxs-lookup"><span data-stu-id="b0929-2846">For example, a <xref:System.Linq.Expressions.BinaryExpression> can be used to represent many different kinds of binary expressions, such as a division operation or a "greater than" operation.</span></span> <span data-ttu-id="b0929-2847"><xref:System.Linq.Expressions.Expression.NodeType%2A>屬性會描述這些二進位運算式做為<xref:System.Linq.Expressions.ExpressionType.Divide>和<xref:System.Linq.Expressions.ExpressionType.GreaterThan>分別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2847">The <xref:System.Linq.Expressions.Expression.NodeType%2A> property would describe these binary expressions as <xref:System.Linq.Expressions.ExpressionType.Divide> and <xref:System.Linq.Expressions.ExpressionType.GreaterThan>, respectively.</span></span>  
  
 <span data-ttu-id="b0929-2848">運算式的靜態的 CLR 型別，<xref:System.Linq.Expressions.Expression>物件代表由<xref:System.Linq.Expressions.Expression.Type%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="b0929-2848">The static CLR type of the expression that the <xref:System.Linq.Expressions.Expression> object represents is represented by the <xref:System.Linq.Expressions.Expression.Type%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Not">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-2849">建立表示位元補數運算的 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2849">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a bitwise complement operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Not (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Not(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Not(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-2850">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2850">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2851">建立表示位元補數運算的 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2851">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a bitwise complement operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2852">
            <see cref="T:System.Linq.Expressions.UnaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Not" />，而 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2852">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Not" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2853"><xref:System.Linq.Expressions.UnaryExpression.Method%2A>屬性產生<xref:System.Linq.Expressions.UnaryExpression>設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2853">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="b0929-2854"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2854">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-2855">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2855">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-2856">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2856">Otherwise, they are `false`.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-2857">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-2857">Implementing Method</span></span>  
 <span data-ttu-id="b0929-2858">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-2858">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-2859">如果`expression`。類型是使用者定義的類型定義、 not 運算子的一元<xref:System.Reflection.MethodInfo>表示的運算子是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2859">If `expression`.Type is a user-defined type that defines the unary not operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2860">否則，如果`expression`。類型是數值或布林值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2860">Otherwise, if `expression`.Type is a numeric or Boolean type, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-2861">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-2861">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-2862">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-2862">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-2863">如果`expression`。類型是指派給實作的方法引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2863">If `expression`.Type is assignable to the argument type of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-2864">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2864">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2865">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-2865">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-2866">`expression`.類型為 null 的實值類型，而且對應的非 null 的型別等於實作之方法的引數類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2866">`expression`.Type is a nullable value type and the corresponding non-nullable type is equal to the argument type of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-2867">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2867">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-2868">如果實作的方法是`null`，節點的類型是`expression`。型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2868">If the implementing method is `null`, the type of the node is `expression`.Type.</span></span> <span data-ttu-id="b0929-2869">如果`expression`。類型為非 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2869">If `expression`.Type is non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-2870">否則，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2870">Otherwise, the node is lifted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-2871">下列範例示範如何建立運算式，表示 邏輯 NOT 運算。</span><span class="sxs-lookup"><span data-stu-id="b0929-2871">The following example demonstrates how to create an expression that represents a logical NOT operation.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#51](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#51)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#51](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#51)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2872">
            <paramref name="expression" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2872">
              <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-2873">不會為 <paramref name="expression" />.Type 定義一元 NOT 運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2873">The unary not operator is not defined for <paramref name="expression" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Not (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Not(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Not(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-2874">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2874">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-2875">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2875">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2876">建立表示位元補數運算的 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2876">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a bitwise complement operation.</span>
          </span>
          <span data-ttu-id="b0929-2877">實作的方法可加以指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2877">The implementing method can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2878">
            <see cref="T:System.Linq.Expressions.UnaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Not" />，且 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> 和 <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2878">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Not" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> and <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2879"><xref:System.Linq.Expressions.UnaryExpression.Method%2A>屬性產生<xref:System.Linq.Expressions.UnaryExpression>設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2879">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="b0929-2880"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2880">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-2881">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2881">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-2882">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2882">Otherwise, they are `false`.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-2883">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-2883">Implementing Method</span></span>  
 <span data-ttu-id="b0929-2884">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-2884">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-2885">如果`method`不`null`，而它代表非 void， `static` (`Shared`在 Visual Basic 中) 採用一個引數，方法是節點的實作方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2885">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes one argument, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="b0929-2886">如果`expression`。類型是使用者定義的類型定義、 not 運算子的一元<xref:System.Reflection.MethodInfo>表示的運算子是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2886">If `expression`.Type is a user-defined type that defines the unary not operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2887">否則，如果`expression`。類型是數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2887">Otherwise, if `expression`.Type is a numeric type, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-2888">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-2888">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-2889">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-2889">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-2890">如果`expression`。類型是指派給實作的方法引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2890">If `expression`.Type is assignable to the argument type of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-2891">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2891">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2892">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-2892">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-2893">`expression`.類型為 null 的實值類型，而且對應的非可為 null 的實值類型等於實作之方法的引數類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2893">`expression`.Type is a nullable value type and the corresponding non-nullable value type is equal to the argument type of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-2894">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2894">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-2895">如果實作的方法是`null`，節點的類型是`expression`。型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2895">If the implementing method is `null`, the type of the node is `expression`.Type.</span></span> <span data-ttu-id="b0929-2896">如果`expression`。類型為非 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2896">If `expression`.Type is non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-2897">否則，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2897">Otherwise, the node is lifted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2898">
            <paramref name="expression" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2898">
              <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2899">
            <paramref name="method" /> 不是 <see langword="null" />，而且其代表的方法傳回的是 <see langword="void" />，不是 <see langword="static" /> (在 Visual Basic 中為 <see langword="Shared" />)，或者使用的引數不是剛好一個。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2899">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly one argument.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-2900">
            <paramref name="method" /> 為 <see langword="null" />，且不會為 <paramref name="expression" />.Type 定義一元 NOT 運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2900">
              <paramref name="method" /> is <see langword="null" /> and the unary not operator is not defined for <paramref name="expression" />.Type.</span>
          </span>
          <span data-ttu-id="b0929-2901">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2901">-or-</span>
          </span>
          <span data-ttu-id="b0929-2902">
            <paramref name="expression" />.Type (如果它是可為 Null 的實質類型，則為其對應之不可為 Null 的類型) 無法指派給 <paramref name="method" /> 所代表之方法的引數類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2902">
              <paramref name="expression" />.Type (or its corresponding non-nullable type if it is a nullable value type) is not assignable to the argument type of the method represented by <paramref name="method" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="NotEqual">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-2903">建立代表不相等比較的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2903">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an inequality comparison.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NotEqual">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression NotEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression NotEqual(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotEqual (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ NotEqual(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-2904">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2904">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-2905">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2905">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2906">建立代表不相等比較的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2906">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an inequality comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2907">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.NotEqual" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2907">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.NotEqual" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2908">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2908">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-2909"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2909">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-2910">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>屬性是`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2910">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true`.</span></span> <span data-ttu-id="b0929-2911">否則為 `false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2911">Otherwise, it is `false`.</span></span> <span data-ttu-id="b0929-2912"><xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> 屬性一律為 `false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2912">The <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is always `false`.</span></span> <span data-ttu-id="b0929-2913"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2913">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-2914">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-2914">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-2915">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-2915">Implementing Method</span></span>  
 <span data-ttu-id="b0929-2916">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-2916">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-2917">如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載不等比較運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2917">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the inequality operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2918">否則，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2918">Otherwise, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-2919">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-2919">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-2920">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-2920">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-2921">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2921">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-2922">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2922">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2923">如果滿足下列兩個條件時，則會消除節點和節點的類型是<xref:System.Boolean>:</span><span class="sxs-lookup"><span data-stu-id="b0929-2923">If the following two conditions are satisfied, the node is lifted and the type of the node is <xref:System.Boolean>:</span></span>  
  
    -   <span data-ttu-id="b0929-2924">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2924">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-2925">實作方法的傳回型別是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-2925">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="b0929-2926">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-2926">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-2927">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2927">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-2928">節點的類型是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-2928">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="b0929-2929">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2929">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-2930">節點的類型是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-2930">The type of the node is <xref:System.Boolean>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2931">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2931">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-2932">不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義不等比較運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2932">The inequality operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NotEqual">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression NotEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression NotEqual(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, bool liftToNull, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotEqual (left As Expression, right As Expression, liftToNull As Boolean, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ NotEqual(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, bool liftToNull, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="liftToNull" Type="System.Boolean" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-2933">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2933">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-2934">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2934">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="liftToNull">
          <span data-ttu-id="b0929-2935">
            <see langword="true" /> 表示將 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> 設定為 <see langword="true" />，<see langword="false" /> 則表示將 <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> 設定為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2935">
              <see langword="true" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="true" />; <see langword="false" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="false" />.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-2936">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2936">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2937">建立代表不相等比較的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2937">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an inequality comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2938">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.NotEqual" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" />、<see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2938">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.NotEqual" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2939">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2939">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-2940"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2940">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-2941">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>屬性是`true`和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性等於`liftToNull`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2941">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true` and the <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is equal to `liftToNull`.</span></span> <span data-ttu-id="b0929-2942">否則，兩者都`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2942">Otherwise, they are both `false`.</span></span> <span data-ttu-id="b0929-2943"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2943">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-2944">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-2944">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-2945">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-2945">Implementing Method</span></span>  
 <span data-ttu-id="b0929-2946">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-2946">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-2947">如果`method`不`null`，而它代表非 void， `static` (`Shared`在 Visual Basic 中) 採用兩個引數，方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2947">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2948">否則，如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載不等比較運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2948">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the inequality operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2949">否則，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2949">Otherwise, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-2950">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-2950">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-2951">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-2951">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-2952">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2952">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-2953">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2953">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2954">如果符合下列兩種情況，則會消除節點。此外，節點的類型可為 null<xref:System.Boolean>如果`liftToNull`是`true`或<xref:System.Boolean>如果`liftToNull`是`false`:</span><span class="sxs-lookup"><span data-stu-id="b0929-2954">If the following two conditions are satisfied, the node is lifted; also, the type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`:</span></span>  
  
    -   <span data-ttu-id="b0929-2955">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2955">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-2956">實作方法的傳回型別是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-2956">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="b0929-2957">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-2957">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-2958">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2958">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-2959">節點的類型是<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-2959">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="b0929-2960">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2960">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-2961">節點的類型可為 null<xref:System.Boolean>如果`liftToNull`是`true`或<xref:System.Boolean>如果`liftToNull`是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2961">The type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-2962">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2962">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-2963">
            <paramref name="method" /> 不是 <see langword="null" />，而它所代表的方法會傳回 <see langword="void" />、不是 <see langword="static" /> (Visual Basic 中的 <see langword="Shared" />)，或者未確切採用兩個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2963">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-2964">
            <paramref name="method" /> 為 <see langword="null" />，且不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義不等比較運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2964">
              <paramref name="method" /> is <see langword="null" /> and the inequality operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OnesComplement">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-2965">傳回表示 1 補數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2965">Returns the expression representing the ones complement.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OnesComplement">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression OnesComplement (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression OnesComplement(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ OnesComplement(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-2966">
            <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2966">An <see cref="T:System.Linq.Expressions.Expression" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2967">傳回表示 1 補數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2967">Returns the expression representing the ones complement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2968">
            <see cref="T:System.Linq.Expressions.UnaryExpression" /> 的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2968">An instance of <see cref="T:System.Linq.Expressions.UnaryExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnesComplement">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression OnesComplement (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression OnesComplement(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ OnesComplement(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-2969">
            <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2969">An <see cref="T:System.Linq.Expressions.Expression" />.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-2970">表示實作方法的 <see cref="T:System.Reflection.MethodInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2970">A <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2971">傳回表示 1 補數的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2971">Returns the expression representing the ones complement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2972">
            <see cref="T:System.Linq.Expressions.UnaryExpression" /> 的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2972">An instance of <see cref="T:System.Linq.Expressions.UnaryExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Or">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-2973">建立表示位元 <see cref="T:System.Linq.Expressions.BinaryExpression" /> 運算的 <see langword="OR" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2973">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise <see langword="OR" /> operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Or (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Or(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Or (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Or(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-2974">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2974">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-2975">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2975">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-2976">建立表示位元 <see cref="T:System.Linq.Expressions.BinaryExpression" /> 運算的 <see langword="OR" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2976">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise <see langword="OR" /> operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-2977">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Or" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-2977">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Or" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-2978">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2978">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-2979"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2979">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-2980">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2980">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-2981">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2981">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-2982"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2982">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-2983">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-2983">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-2984">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-2984">Implementing Method</span></span>  
 <span data-ttu-id="b0929-2985">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-2985">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-2986">如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載的位元的`OR`運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-2986">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the bitwise `OR` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2987">否則，如果`left`。型別和`right`。類型為整數或布林類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-2987">Otherwise, if `left`.Type and `right`.Type are integral or Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-2988">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-2988">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-2989">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-2989">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-2990">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2990">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-2991">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2991">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-2992">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-2992">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-2993">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-2993">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-2994">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-2994">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-2995">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-2995">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-2996">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2996">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-2997">節點的結果類型是預先定義之位元`OR`運算子。</span><span class="sxs-lookup"><span data-stu-id="b0929-2997">The type of the node is the result type of the predefined bitwise `OR` operator.</span></span>  
  
-   <span data-ttu-id="b0929-2998">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-2998">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-2999">節點的類型是 null 的型別對應的結果類型的預先定義的位元`OR`運算子。</span><span class="sxs-lookup"><span data-stu-id="b0929-2999">The type of the node is the nullable type that corresponds to the result type of the predefined bitwise `OR` operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-3000">下列程式碼範例示範如何建立代表邏輯 OR 運算的運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-3000">The following code example shows how to create an expression that represents a logical OR operation.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#28)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-3001">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3001">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-3002">不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義位元 <see langword="OR" /> 運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3002">The bitwise <see langword="OR" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Or (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Or(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Or (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Or(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-3003">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3003">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-3004">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3004">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-3005">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3005">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3006">建立表示位元 <see cref="T:System.Linq.Expressions.BinaryExpression" /> 運算的 <see langword="OR" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3006">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise <see langword="OR" /> operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3007">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Or" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3007">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Or" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-3008">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3008">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-3009"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3009">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-3010">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3010">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-3011">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3011">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-3012"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3012">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-3013">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-3013">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-3014">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-3014">Implementing Method</span></span>  
 <span data-ttu-id="b0929-3015">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-3015">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-3016">如果`method`不`null`，而它代表非 void， `static` (`Shared`在 Visual Basic 中) 採用兩個引數，方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3016">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-3017">否則，如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載的位元的`OR`運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3017">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the bitwise `OR` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-3018">否則，如果`left`。型別和`right`。類型為整數或布林類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3018">Otherwise, if `left`.Type and `right`.Type are integral or Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-3019">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-3019">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-3020">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-3020">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-3021">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3021">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-3022">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3022">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-3023">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-3023">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-3024">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3024">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-3025">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3025">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-3026">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-3026">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-3027">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3027">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-3028">節點的結果類型是預先定義之位元`OR`運算子。</span><span class="sxs-lookup"><span data-stu-id="b0929-3028">The type of the node is the result type of the predefined bitwise `OR` operator.</span></span>  
  
-   <span data-ttu-id="b0929-3029">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3029">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-3030">節點的類型是 null 的型別對應的結果類型的預先定義的位元`OR`運算子。</span><span class="sxs-lookup"><span data-stu-id="b0929-3030">The type of the node is the nullable type that corresponds to the result type of the predefined bitwise `OR` operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-3031">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3031">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-3032">
            <paramref name="method" /> 不是 <see langword="null" />，而它所代表的方法會傳回 <see langword="void" />、不是 <see langword="static" /> (Visual Basic 中的 <see langword="Shared" />)，或者未確切採用兩個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3032">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-3033">
            <paramref name="method" /> 是 <see langword="null" />，而且未定義 <paramref name="left" />.Type 和 <paramref name="right" />.Type 的位元 <see langword="OR" /> 運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3033">
              <paramref name="method" /> is <see langword="null" /> and the bitwise <see langword="OR" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3034">建立表示位元 OR 指派運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3034">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise OR assignment operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression OrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression OrAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ OrAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-3035">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3035">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-3036">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3036">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3037">建立表示位元 OR 指派運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3037">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise OR assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3038">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.OrAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3038">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.OrAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression OrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression OrAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ OrAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-3039">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3039">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-3040">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3040">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-3041">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3041">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3042">建立表示位元 OR 指派運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3042">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise OR assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3043">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.OrAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3043">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.OrAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression OrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression OrAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ OrAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-3044">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3044">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-3045">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3045">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-3046">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3046">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="b0929-3047">要將 <see cref="T:System.Linq.Expressions.LambdaExpression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3047">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3048">建立表示位元 OR 指派運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3048">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise OR assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3049">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.OrAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3049">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.OrAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrElse">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3050">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示只在第一個運算子評估為 <see langword="OR" /> 時才評估第二個運算元的條件 <see langword="false" /> 運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3050">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a conditional <see langword="OR" /> operation that evaluates the second operand only if the first operator evaluates to <see langword="false" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrElse">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression OrElse (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression OrElse(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrElse (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ OrElse(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-3051">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3051">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-3052">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3052">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3053">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示只在第一個運算元計算結果為 <see langword="OR" /> 時才求第二個運算元之值的 <see langword="false" /> 條件運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3053">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a conditional <see langword="OR" /> operation that evaluates the second operand only if the first operand evaluates to <see langword="false" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3054">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.OrElse" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3054">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.OrElse" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-3055">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3055">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-3056"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3056">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-3057">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3057">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-3058">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3058">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-3059"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3059">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-3060">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-3060">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-3061">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-3061">Implementing Method</span></span>  
 <span data-ttu-id="b0929-3062">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-3062">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-3063">如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載的位元的`OR`運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3063">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the bitwise `OR` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="b0929-3064">條件式`OR`運算子無法多載在 C# 或[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="b0929-3064">The conditional `OR` operator cannot be overloaded in C# or [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)].</span></span> <span data-ttu-id="b0929-3065">不過，條件式`OR`運算子會評估使用位元`OR`運算子。</span><span class="sxs-lookup"><span data-stu-id="b0929-3065">However, the conditional `OR` operator is evaluated by using the bitwise `OR` operator.</span></span> <span data-ttu-id="b0929-3066">因此，使用者定義的多載的位元`OR`運算子可以是這種節點類型的實作方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3066">Thus, a user-defined overload of the bitwise `OR` operator can be the implementing method for this node type.</span></span>  
  
-   <span data-ttu-id="b0929-3067">否則，如果`left`。型別和`right`。型別是布林類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3067">Otherwise, if `left`.Type and `right`.Type are Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-3068">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-3068">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-3069">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-3069">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-3070">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3070">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-3071">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3071">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-3072">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-3072">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-3073">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，而且對應不可為 null 的型別等於對應的實作方法的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3073">`left`.Type and `right`.Type are both value types of which at least one is nullable, and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-3074">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3074">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-3075">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-3075">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-3076">`left`.型別和`right`。類型為相同的布林型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3076">`left`.Type and `right`.Type are the same Boolean type.</span></span>  
  
-   <span data-ttu-id="b0929-3077">如果`left`。型別和`right`。型別不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3077">If `left`.Type and `right`.Type are non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-3078">節點的類型是預先定義的條件式的結果型別`OR`運算子。</span><span class="sxs-lookup"><span data-stu-id="b0929-3078">The type of the node is the result type of the predefined conditional `OR` operator.</span></span>  
  
-   <span data-ttu-id="b0929-3079">如果`left`。型別和`right`。型別可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3079">If `left`.Type and `right`.Type are nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-3080">節點的類型是 null 的型別對應至預先定義的條件式的結果型別`OR`運算子。</span><span class="sxs-lookup"><span data-stu-id="b0929-3080">The type of the node is the nullable type that corresponds to the result type of the predefined conditional `OR` operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-3081">下列程式碼範例示範如何建立代表邏輯運算式`OR`第一個運算元判斷值為時，才評估第二個運算元的作業`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3081">The following code example shows how to create an expression that represents a logical `OR` operation that evaluates the second operand only if the first operand evaluates to `false`.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#29](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#29)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#29](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-3082">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3082">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-3083">不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義位元 <see langword="OR" /> 運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3083">The bitwise <see langword="OR" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
          <span data-ttu-id="b0929-3084">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3084">-or-</span>
          </span>
          <span data-ttu-id="b0929-3085">
            <paramref name="left" />.Type 和 <paramref name="right" />.Type 是不相同的布林類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3085">
              <paramref name="left" />.Type and <paramref name="right" />.Type are not the same Boolean type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OrElse">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression OrElse (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression OrElse(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrElse (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ OrElse(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-3086">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3086">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-3087">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3087">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-3088">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3088">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3089">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示只在第一個運算元計算結果為 <see langword="OR" /> 時才求第二個運算元之值的 <see langword="false" /> 條件運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3089">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a conditional <see langword="OR" /> operation that evaluates the second operand only if the first operand evaluates to <see langword="false" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3090">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.OrElse" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3090">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.OrElse" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-3091">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3091">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-3092"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3092">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-3093">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3093">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-3094">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3094">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-3095"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3095">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-3096">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-3096">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-3097">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-3097">Implementing Method</span></span>  
 <span data-ttu-id="b0929-3098">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-3098">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-3099">如果`method`不`null`，而它代表非 void， `static` (`Shared`在 Visual Basic 中) 採用兩個引數，方法是節點的實作方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3099">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="b0929-3100">否則，如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載的位元的`OR`運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3100">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the bitwise `OR` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="b0929-3101">條件式`OR`運算子無法多載在 C# 或[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="b0929-3101">The conditional `OR` operator cannot be overloaded in C# or [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)].</span></span> <span data-ttu-id="b0929-3102">不過，條件式`OR`運算子會評估使用位元`OR`運算子。</span><span class="sxs-lookup"><span data-stu-id="b0929-3102">However, the conditional `OR` operator is evaluated by using the bitwise `OR` operator.</span></span> <span data-ttu-id="b0929-3103">因此，使用者定義的多載的位元`OR`運算子可以是這種節點類型的實作方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3103">Thus, a user-defined overload of the bitwise `OR` operator can be the implementing method for this node type.</span></span>  
  
-   <span data-ttu-id="b0929-3104">否則，如果`left`。型別和`right`。型別是布林類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3104">Otherwise, if `left`.Type and `right`.Type are Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-3105">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-3105">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-3106">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-3106">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-3107">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3107">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-3108">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3108">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-3109">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-3109">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-3110">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，而且對應不可為 null 的型別等於對應的實作方法的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3110">`left`.Type and `right`.Type are both value types of which at least one is nullable, and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-3111">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3111">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-3112">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-3112">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-3113">`left`.型別和`right`。類型為相同的布林型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3113">`left`.Type and `right`.Type are the same Boolean type.</span></span>  
  
-   <span data-ttu-id="b0929-3114">如果`left`。型別和`right`。型別不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3114">If `left`.Type and `right`.Type are non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-3115">節點的類型是預先定義的條件式的結果型別`OR`運算子。</span><span class="sxs-lookup"><span data-stu-id="b0929-3115">The type of the node is the result type of the predefined conditional `OR` operator.</span></span>  
  
-   <span data-ttu-id="b0929-3116">如果`left`。型別和`right`。型別可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3116">If `left`.Type and `right`.Type are nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-3117">節點的類型是 null 的型別對應至預先定義的條件式的結果型別`OR`運算子。</span><span class="sxs-lookup"><span data-stu-id="b0929-3117">The type of the node is the nullable type that corresponds to the result type of the predefined conditional `OR` operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-3118">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3118">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-3119">
            <paramref name="method" /> 不是 <see langword="null" />，而它所代表的方法會傳回 <see langword="void" />、不是 <see langword="static" /> (Visual Basic 中的 <see langword="Shared" />)，或者未確切採用兩個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3119">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-3120">
            <paramref name="method" /> 是 <see langword="null" />，而且未定義 <paramref name="left" />.Type 和 <paramref name="right" />.Type 的位元 <see langword="OR" /> 運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3120">
              <paramref name="method" /> is <see langword="null" /> and the bitwise <see langword="OR" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
          <span data-ttu-id="b0929-3121">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3121">-or-</span>
          </span>
          <span data-ttu-id="b0929-3122">
            <paramref name="method" /> 為 <see langword="null" />，且 <paramref name="left" />.Type 和 <paramref name="right" />.Type 不是相同的布林類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3122">
              <paramref name="method" /> is <see langword="null" /> and <paramref name="left" />.Type and <paramref name="right" />.Type are not the same Boolean type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parameter">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3123">建立 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 節點，此節點可用以識別運算式樹狀結構中的參數或變數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3123">Creates a <see cref="T:System.Linq.Expressions.ParameterExpression" /> node that can be used to identify a parameter or a variable in an expression tree.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Parameter">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ParameterExpression Parameter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ParameterExpression Parameter(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Parameter(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ParameterExpression ^ Parameter(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ParameterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b0929-3124">參數或變數的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3124">The type of the parameter or variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3125">建立 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 節點，此節點可用以識別運算式樹狀結構中的參數或變數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3125">Creates a <see cref="T:System.Linq.Expressions.ParameterExpression" /> node that can be used to identify a parameter or a variable in an expression tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3126">建立含指定之名稱和類型的 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3126">A <see cref="T:System.Linq.Expressions.ParameterExpression" /> node with the specified name and type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0929-3127">下列範例示範如何建立<xref:System.Linq.Expressions.MethodCallExpression>物件的值列印<xref:System.Linq.Expressions.ParameterExpression>物件。</span><span class="sxs-lookup"><span data-stu-id="b0929-3127">The following example demonstrates how to create a <xref:System.Linq.Expressions.MethodCallExpression> object that prints the value of a <xref:System.Linq.Expressions.ParameterExpression> object.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#49](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#49)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#49](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#49)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameter">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ParameterExpression Parameter (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ParameterExpression Parameter(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Parameter(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ParameterExpression ^ Parameter(Type ^ type, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ParameterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b0929-3128">參數或變數的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3128">The type of the parameter or variable.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="b0929-3129">參數或變數的名稱，僅供偵錯或列印之用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3129">The name of the parameter or variable, used for debugging or printing purpose only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3130">建立 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 節點，此節點可用以識別運算式樹狀結構中的參數或變數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3130">Creates a <see cref="T:System.Linq.Expressions.ParameterExpression" /> node that can be used to identify a parameter or a variable in an expression tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3131">
            <see cref="T:System.Linq.Expressions.ParameterExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Parameter" />，且 <see cref="P:System.Linq.Expressions.Expression.Type" /> 和 <see cref="P:System.Linq.Expressions.ParameterExpression.Name" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3131">A <see cref="T:System.Linq.Expressions.ParameterExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Parameter" /> and the <see cref="P:System.Linq.Expressions.Expression.Type" /> and <see cref="P:System.Linq.Expressions.ParameterExpression.Name" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-3132">
            <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3132">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="PostDecrementAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3133">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，表示後面接續原始運算式遞減 1 的運算式指派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3133">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the assignment of the expression followed by a subsequent decrement by 1 of the original expression.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PostDecrementAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression PostDecrementAssign (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression PostDecrementAssign(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ PostDecrementAssign(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-3134">要套用上述作業的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3134">An <see cref="T:System.Linq.Expressions.Expression" /> to apply the operations on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3135">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，表示後面接續原始運算式遞減 1 的運算式指派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3135">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the assignment of the expression followed by a subsequent decrement by 1 of the original expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3136">表示結果運算式的 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3136">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the resultant expression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostDecrementAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression PostDecrementAssign (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression PostDecrementAssign(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ PostDecrementAssign(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-3137">要套用上述作業的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3137">An <see cref="T:System.Linq.Expressions.Expression" /> to apply the operations on.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-3138">表示實作方法的 <see cref="T:System.Reflection.MethodInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3138">A <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3139">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，表示後面接續原始運算式遞減 1 的運算式指派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3139">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the assignment of the expression followed by a subsequent decrement by 1 of the original expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3140">表示結果運算式的 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3140">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the resultant expression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PostIncrementAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3141">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，表示後面接續原始運算式遞增 1 的運算式指派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3141">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the assignment of the expression followed by a subsequent increment by 1 of the original expression.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PostIncrementAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression PostIncrementAssign (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression PostIncrementAssign(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ PostIncrementAssign(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-3142">要套用上述作業的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3142">An <see cref="T:System.Linq.Expressions.Expression" /> to apply the operations on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3143">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，表示後面接續原始運算式遞增 1 的運算式指派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3143">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the assignment of the expression followed by a subsequent increment by 1 of the original expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3144">表示結果運算式的 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3144">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the resultant expression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostIncrementAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression PostIncrementAssign (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression PostIncrementAssign(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ PostIncrementAssign(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-3145">要套用上述作業的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3145">An <see cref="T:System.Linq.Expressions.Expression" /> to apply the operations on.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-3146">表示實作方法的 <see cref="T:System.Reflection.MethodInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3146">A <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3147">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，表示後面接續原始運算式遞增 1 的運算式指派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3147">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the assignment of the expression followed by a subsequent increment by 1 of the original expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3148">表示結果運算式的 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3148">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the resultant expression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Power">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3149">建立代表將數字提升為乘冪數的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3149">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents raising a number to a power.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Power">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Power (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Power(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Power (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Power(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-3150">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3150">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-3151">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3151">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3152">建立代表將數字提升為乘冪數的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3152">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents raising a number to a power.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3153">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Power" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3153">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Power" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-3154">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3154">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-3155"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3155">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-3156">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3156">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-3157">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3157">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-3158"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3158">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-3159">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-3159">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-3160">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-3160">Implementing Method</span></span>  
 <span data-ttu-id="b0929-3161">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-3161">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-3162">如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載的乘冪運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3162">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the exponentiation operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-3163">否則，如果`left`。型別和`right`。型別都<xref:System.Double>、 實作方法是<xref:System.Math.Pow%2A>。</span><span class="sxs-lookup"><span data-stu-id="b0929-3163">Otherwise, if `left`.Type and `right`.Type are both <xref:System.Double>, the implementing method is <xref:System.Math.Pow%2A>.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-3164">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-3164">Node Type and Lifted versus Non-Lifted</span></span>  
  
-   <span data-ttu-id="b0929-3165">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3165">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-3166">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3166">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-3167">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-3167">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-3168">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3168">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-3169">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3169">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-3170">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3170">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-3171">不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義 Exponentiation 運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3171">The exponentiation operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
          <span data-ttu-id="b0929-3172">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3172">-or-</span>
          </span>
          <span data-ttu-id="b0929-3173">
            <paramref name="left" />.Type 和 (或) <paramref name="right" />.Type 不是 <see cref="T:System.Double" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3173">
              <paramref name="left" />.Type and/or <paramref name="right" />.Type are not <see cref="T:System.Double" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Power">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Power (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Power(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Power (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Power(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-3174">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3174">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-3175">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3175">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-3176">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3176">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3177">建立代表將數字提升為乘冪數的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3177">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents raising a number to a power.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3178">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Power" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3178">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Power" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-3179">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3179">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-3180"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3180">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-3181">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3181">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-3182">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3182">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-3183"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3183">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-3184">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-3184">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-3185">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-3185">Implementing Method</span></span>  
 <span data-ttu-id="b0929-3186">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-3186">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-3187">如果`method`不`null`，而它代表非 void， `static` (`Shared`在 Visual Basic 中) 採用兩個引數，方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3187">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-3188">否則，如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載的乘冪運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3188">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the exponentiation operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-3189">否則，如果`left`。型別和`right`。型別都<xref:System.Double>、 實作方法是<xref:System.Math.Pow%2A>。</span><span class="sxs-lookup"><span data-stu-id="b0929-3189">Otherwise, if `left`.Type and `right`.Type are both <xref:System.Double>, the implementing method is <xref:System.Math.Pow%2A>.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-3190">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-3190">Node Type and Lifted versus Non-Lifted</span></span>  
  
-   <span data-ttu-id="b0929-3191">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3191">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-3192">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3192">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-3193">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-3193">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-3194">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3194">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-3195">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3195">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-3196">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3196">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-3197">
            <paramref name="method" /> 不是 <see langword="null" />，而它所代表的方法會傳回 <see langword="void" />、不是 <see langword="static" /> (Visual Basic 中的 <see langword="Shared" />)，或者未確切採用兩個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3197">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-3198">
            <paramref name="method" /> 是 <see langword="null" />，而且未定義 <paramref name="left" />.Type 和 <paramref name="right" />.Type 的乘冪運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3198">
              <paramref name="method" /> is <see langword="null" /> and the exponentiation operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
          <span data-ttu-id="b0929-3199">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3199">-or-</span>
          </span>
          <span data-ttu-id="b0929-3200">
            <paramref name="method" /> 是 <see langword="null" /> 和 <paramref name="left" />.Type，且/或 <paramref name="right" />.Type 不是 <see cref="T:System.Double" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3200">
              <paramref name="method" /> is <see langword="null" /> and <paramref name="left" />.Type and/or <paramref name="right" />.Type are not <see cref="T:System.Double" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="PowerAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3201">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示將運算式自乘為乘冪，並且將結果指派回運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3201">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents raising an expression to a power and assigning the result back to the expression.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PowerAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression PowerAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression PowerAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PowerAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ PowerAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-3202">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3202">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-3203">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3203">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3204">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示將運算式自乘為乘冪，並且將結果指派回運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3204">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents raising an expression to a power and assigning the result back to the expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3205">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.PowerAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3205">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.PowerAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PowerAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression PowerAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression PowerAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PowerAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ PowerAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-3206">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3206">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-3207">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3207">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-3208">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3208">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3209">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示將運算式自乘為乘冪，並且將結果指派回運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3209">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents raising an expression to a power and assigning the result back to the expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3210">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.PowerAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3210">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.PowerAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PowerAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression PowerAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression PowerAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PowerAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ PowerAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-3211">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3211">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-3212">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3212">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-3213">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3213">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="b0929-3214">要將 <see cref="T:System.Linq.Expressions.LambdaExpression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3214">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3215">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示將運算式自乘為乘冪，並且將結果指派回運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3215">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents raising an expression to a power and assigning the result back to the expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3216">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.PowerAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3216">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.PowerAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PreDecrementAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3217">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，可讓運算式遞減 1，並將結果指派回運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3217">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that decrements the expression by 1 and assigns the result back to the expression.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PreDecrementAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression PreDecrementAssign (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression PreDecrementAssign(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ PreDecrementAssign(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-3218">要套用上述作業的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3218">An <see cref="T:System.Linq.Expressions.Expression" /> to apply the operations on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3219">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，可讓運算式遞減 1，並將結果指派回運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3219">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that decrements the expression by 1 and assigns the result back to the expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3220">表示結果運算式的 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3220">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the resultant expression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreDecrementAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression PreDecrementAssign (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression PreDecrementAssign(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ PreDecrementAssign(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-3221">要套用上述作業的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3221">An <see cref="T:System.Linq.Expressions.Expression" /> to apply the operations on.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-3222">表示實作方法的 <see cref="T:System.Reflection.MethodInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3222">A <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3223">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，可讓運算式遞減 1，並將結果指派回運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3223">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that decrements the expression by 1 and assigns the result back to the expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3224">表示結果運算式的 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3224">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the resultant expression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PreIncrementAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3225">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，可讓運算式遞增 1，並將結果指派回運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3225">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that increments the expression by 1 and assigns the result back to the expression.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PreIncrementAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression PreIncrementAssign (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression PreIncrementAssign(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ PreIncrementAssign(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-3226">要套用上述作業的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3226">An <see cref="T:System.Linq.Expressions.Expression" /> to apply the operations on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3227">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，可讓運算式遞增 1，並將結果指派回運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3227">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that increments the expression by 1 and assigns the result back to the expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3228">表示結果運算式的 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3228">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the resultant expression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreIncrementAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression PreIncrementAssign (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression PreIncrementAssign(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ PreIncrementAssign(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-3229">要套用上述作業的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3229">An <see cref="T:System.Linq.Expressions.Expression" /> to apply the operations on.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-3230">表示實作方法的 <see cref="T:System.Reflection.MethodInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3230">A <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3231">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，可讓運算式遞增 1，並將結果指派回運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3231">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that increments the expression by 1 and assigns the result back to the expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3232">表示結果運算式的 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3232">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the resultant expression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Property">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3233">建立代表存取屬性的 <see cref="T:System.Linq.Expressions.MemberExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3233">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing a property.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberExpression Property (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo propertyAccessor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberExpression Property(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo propertyAccessor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberExpression ^ Property(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ propertyAccessor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="propertyAccessor" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-3234">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.MemberExpression.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3234">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> property equal to.</span>
          </span>
          <span data-ttu-id="b0929-3235">如果是靜態屬性，可以是 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3235">This can be null for static properties.</span>
          </span>
        </param>
        <param name="propertyAccessor">
          <span data-ttu-id="b0929-3236">
            <see cref="T:System.Reflection.MethodInfo" />，代表屬性存取子方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3236">The <see cref="T:System.Reflection.MethodInfo" /> that represents a property accessor method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3237">建立 <see cref="T:System.Linq.Expressions.MemberExpression" />，代表透過使用屬性存取方法來存取屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3237">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing a property by using a property accessor method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3238">
            <see cref="T:System.Linq.Expressions.MemberExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" />、<see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> 屬性設定為 <paramref name="expression" />，且 <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> 屬性設定為 <see cref="T:System.Reflection.PropertyInfo" />，代表在 <paramref name="propertyAccessor" /> 中存取的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3238">A <see cref="T:System.Linq.Expressions.MemberExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" />, the <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> property set to <paramref name="expression" /> and the <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> property set to the <see cref="T:System.Reflection.PropertyInfo" /> that represents the property accessed in <paramref name="propertyAccessor" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-3239"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.MemberExpression>等於<xref:System.Reflection.PropertyInfo.PropertyType%2A>屬性<xref:System.Linq.Expressions.MemberExpression.Member%2A>。</span><span class="sxs-lookup"><span data-stu-id="b0929-3239">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MemberExpression> is equal to the <xref:System.Reflection.PropertyInfo.PropertyType%2A> property of <xref:System.Linq.Expressions.MemberExpression.Member%2A>.</span></span>  
  
 <span data-ttu-id="b0929-3240">如果所代表的方法`propertyAccessor`是`static`(`Shared`在 Visual Basic 中)，`expression`可以`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3240">If the method represented by `propertyAccessor` is `static` (`Shared` in Visual Basic), `expression` can be `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-3241">
            <paramref name="propertyAccessor" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3241">
              <paramref name="propertyAccessor" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-3242">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3242">-or-</span>
          </span>
          <span data-ttu-id="b0929-3243">
            <paramref name="propertyAccessor" /> 所表示的方法不是 <see langword="static" /> (在 Visual Basic 中為 <see langword="Shared" />)，且 <paramref name="expression" /> 是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3243">The method that <paramref name="propertyAccessor" /> represents is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic) and <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-3244">
            <paramref name="expression" />.Type 無法指派給 <paramref name="propertyAccessor" /> 所代表之方法的宣告類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3244">
              <paramref name="expression" />.Type is not assignable to the declaring type of the method represented by <paramref name="propertyAccessor" />.</span>
          </span>
          <span data-ttu-id="b0929-3245">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3245">-or-</span>
          </span>
          <span data-ttu-id="b0929-3246">
            <paramref name="propertyAccessor" /> 所表示的方法不是屬性存取子方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3246">The method that <paramref name="propertyAccessor" /> represents is not a property accessor method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberExpression Property (System.Linq.Expressions.Expression expression, System.Reflection.PropertyInfo property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberExpression Property(class System.Linq.Expressions.Expression expression, class System.Reflection.PropertyInfo property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberExpression ^ Property(System::Linq::Expressions::Expression ^ expression, System::Reflection::PropertyInfo ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="property" Type="System.Reflection.PropertyInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-3247">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.MemberExpression.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3247">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> property equal to.</span>
          </span>
          <span data-ttu-id="b0929-3248">如果是靜態屬性，可以是 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3248">This can be null for static properties.</span>
          </span>
        </param>
        <param name="property">
          <span data-ttu-id="b0929-3249">要將 <see cref="T:System.Reflection.PropertyInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.MemberExpression.Member" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3249">The <see cref="T:System.Reflection.PropertyInfo" /> to set the <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3250">建立代表存取屬性的 <see cref="T:System.Linq.Expressions.MemberExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3250">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing a property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3251">
            <see cref="T:System.Linq.Expressions.MemberExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" />，且 <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> 和 <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3251">A <see cref="T:System.Linq.Expressions.MemberExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" /> and the <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> and <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-3252"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.MemberExpression>等於<xref:System.Reflection.PropertyInfo.PropertyType%2A>屬性<xref:System.Linq.Expressions.MemberExpression.Member%2A>。</span><span class="sxs-lookup"><span data-stu-id="b0929-3252">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MemberExpression> is equal to the <xref:System.Reflection.PropertyInfo.PropertyType%2A> property of <xref:System.Linq.Expressions.MemberExpression.Member%2A>.</span></span>  
  
 <span data-ttu-id="b0929-3253">如果屬性以表示`property`是`static`(`Shared`在 Visual Basic 中)，`expression`可以`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3253">If the property represented by `property` is `static` (`Shared` in Visual Basic), `expression` can be `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-3254">
            <paramref name="property" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3254">
              <paramref name="property" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b0929-3255">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3255">-or-</span>
          </span>
          <span data-ttu-id="b0929-3256">
            <paramref name="property" /> 所表示的屬性不是 <see langword="static" /> (在 Visual Basic 中為 <see langword="Shared" />)，且 <paramref name="expression" /> 是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3256">The property that <paramref name="property" /> represents is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic) and <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-3257">
            <paramref name="expression" />.Type 無法指派給 <paramref name="property" /> 所表示屬性的宣告類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3257">
              <paramref name="expression" />.Type is not assignable to the declaring type of the property that <paramref name="property" /> represents.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberExpression Property (System.Linq.Expressions.Expression expression, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberExpression Property(class System.Linq.Expressions.Expression expression, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberExpression ^ Property(System::Linq::Expressions::Expression ^ expression, System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-3258">
            <see cref="T:System.Linq.Expressions.Expression" />，其 <see cref="P:System.Linq.Expressions.Expression.Type" /> 包含名為 <c>propertyName</c> 的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3258">An <see cref="T:System.Linq.Expressions.Expression" /> whose <see cref="P:System.Linq.Expressions.Expression.Type" /> contains a property named <c>propertyName</c>.</span>
          </span>
          <span data-ttu-id="b0929-3259">如果是靜態屬性，可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3259">This can be <see langword="null" /> for static properties.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="b0929-3260">要存取的屬性名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3260">The name of a property to be accessed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3261">建立代表存取屬性的 <see cref="T:System.Linq.Expressions.MemberExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3261">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing a property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3262">
            <see cref="T:System.Linq.Expressions.MemberExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" />、<see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> 屬性設定為 <paramref name="expression" />，且 <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> 屬性設定為 <see cref="T:System.Reflection.PropertyInfo" />，代表 <paramref name="propertyName" /> 所表示的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3262">A <see cref="T:System.Linq.Expressions.MemberExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" />, the <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> property set to <paramref name="expression" />, and the <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> property set to the <see cref="T:System.Reflection.PropertyInfo" /> that represents the property denoted by <paramref name="propertyName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-3263"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.MemberExpression>等於<xref:System.Reflection.PropertyInfo.PropertyType%2A>屬性<xref:System.Reflection.PropertyInfo>，代表所表示的屬性`propertyName`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3263">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MemberExpression> is equal to the <xref:System.Reflection.PropertyInfo.PropertyType%2A> property of the <xref:System.Reflection.PropertyInfo> that represents the property denoted by `propertyName`.</span></span>  
  
 <span data-ttu-id="b0929-3264">這個方法會搜尋`expression`。型別和屬性名稱及其基底類型`propertyName`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3264">This method searches `expression`.Type and its base types for a property that has the name `propertyName`.</span></span> <span data-ttu-id="b0929-3265">公用屬性會給予喜好設定，透過非公用屬性。</span><span class="sxs-lookup"><span data-stu-id="b0929-3265">Public properties are given preference over non-public properties.</span></span> <span data-ttu-id="b0929-3266">如果找到相符的屬性，這個方法會傳遞`expression`和<xref:System.Reflection.PropertyInfo>代表該屬性<xref:System.Linq.Expressions.Expression.Property%2A>。</span><span class="sxs-lookup"><span data-stu-id="b0929-3266">If a matching property is found, this method passes `expression` and the <xref:System.Reflection.PropertyInfo> that represents that property to <xref:System.Linq.Expressions.Expression.Property%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-3267">下列範例會示範如何建立代表存取屬性的運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-3267">The following example shows how to create an expression that represents accessing a property.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#38](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#38)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#38](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#38)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-3268">
            <paramref name="expression" /> 或 <paramref name="propertyName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3268">
              <paramref name="expression" /> or <paramref name="propertyName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-3269">
            <paramref name="propertyName" />.Type 或其基底類型中沒有定義名為 <paramref name="expression" /> 的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3269">No property named <paramref name="propertyName" /> is defined in <paramref name="expression" />.Type or its base types.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.IndexExpression Property (System.Linq.Expressions.Expression instance, System.Reflection.PropertyInfo indexer, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.IndexExpression Property(class System.Linq.Expressions.Expression instance, class System.Reflection.PropertyInfo indexer, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Property (instance As Expression, indexer As PropertyInfo, arguments As IEnumerable(Of Expression)) As IndexExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::IndexExpression ^ Property(System::Linq::Expressions::Expression ^ instance, System::Reflection::PropertyInfo ^ indexer, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.IndexExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="indexer" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="b0929-3270">屬性所屬的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3270">The object to which the property belongs.</span>
          </span>
          <span data-ttu-id="b0929-3271">如果屬性為靜態/共用屬性，就必須為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3271">If the property is static/shared, it must be null.</span>
          </span>
        </param>
        <param name="indexer">
          <span data-ttu-id="b0929-3272">
            <see cref="T:System.Reflection.PropertyInfo" />，代表要編製索引的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3272">The <see cref="T:System.Reflection.PropertyInfo" /> that represents the property to index.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="b0929-3273">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> 物件的 <see cref="T:System.Linq.Expressions.Expression" />，用於對屬性進行索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3273">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Linq.Expressions.Expression" /> objects that are used to index the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3274">建立 <see cref="T:System.Linq.Expressions.IndexExpression" />，表示索引之屬性的存取結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3274">Creates an <see cref="T:System.Linq.Expressions.IndexExpression" /> representing the access to an indexed property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3275">建立的 <see cref="T:System.Linq.Expressions.IndexExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3275">The created <see cref="T:System.Linq.Expressions.IndexExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.IndexExpression Property (System.Linq.Expressions.Expression instance, System.Reflection.PropertyInfo indexer, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.IndexExpression Property(class System.Linq.Expressions.Expression instance, class System.Reflection.PropertyInfo indexer, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Property (instance As Expression, indexer As PropertyInfo, ParamArray arguments As Expression()) As IndexExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::IndexExpression ^ Property(System::Linq::Expressions::Expression ^ instance, System::Reflection::PropertyInfo ^ indexer, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.IndexExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="indexer" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="b0929-3276">屬性所屬的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3276">The object to which the property belongs.</span>
          </span>
          <span data-ttu-id="b0929-3277">如果屬性為靜態/共用屬性，就必須為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3277">If the property is static/shared, it must be null.</span>
          </span>
        </param>
        <param name="indexer">
          <span data-ttu-id="b0929-3278">
            <see cref="T:System.Reflection.PropertyInfo" />，代表要編製索引的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3278">The <see cref="T:System.Reflection.PropertyInfo" /> that represents the property to index.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="b0929-3279">
            <see cref="T:System.Linq.Expressions.Expression" /> 物件的陣列，用於對屬性進行索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3279">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects that are used to index the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3280">建立 <see cref="T:System.Linq.Expressions.IndexExpression" />，表示索引之屬性的存取結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3280">Creates an <see cref="T:System.Linq.Expressions.IndexExpression" /> representing the access to an indexed property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3281">建立的 <see cref="T:System.Linq.Expressions.IndexExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3281">The created <see cref="T:System.Linq.Expressions.IndexExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.IndexExpression Property (System.Linq.Expressions.Expression instance, string propertyName, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.IndexExpression Property(class System.Linq.Expressions.Expression instance, string propertyName, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Property (instance As Expression, propertyName As String, ParamArray arguments As Expression()) As IndexExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::IndexExpression ^ Property(System::Linq::Expressions::Expression ^ instance, System::String ^ propertyName, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.IndexExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="b0929-3282">屬性所屬的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3282">The object to which the property belongs.</span>
          </span>
          <span data-ttu-id="b0929-3283">如果屬性為靜態/共用屬性，就必須為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3283">If the property is static/shared, it must be null.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="b0929-3284">索引子的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3284">The name of the indexer.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="b0929-3285">
            <see cref="T:System.Linq.Expressions.Expression" /> 物件的陣列，用於對屬性進行索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3285">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects that are used to index the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3286">建立 <see cref="T:System.Linq.Expressions.IndexExpression" />，表示索引之屬性的存取結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3286">Creates an <see cref="T:System.Linq.Expressions.IndexExpression" /> representing the access to an indexed property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3287">建立的 <see cref="T:System.Linq.Expressions.IndexExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3287">The created <see cref="T:System.Linq.Expressions.IndexExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberExpression Property (System.Linq.Expressions.Expression expression, Type type, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberExpression Property(class System.Linq.Expressions.Expression expression, class System.Type type, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberExpression ^ Property(System::Linq::Expressions::Expression ^ expression, Type ^ type, System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-3288">屬性的包含物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3288">The containing object of the property.</span>
          </span>
          <span data-ttu-id="b0929-3289">如果是靜態屬性，可以是 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3289">This can be null for static properties.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="b0929-3290">包含屬性的 <see cref="P:System.Linq.Expressions.Expression.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3290">The <see cref="P:System.Linq.Expressions.Expression.Type" /> that contains the property.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="b0929-3291">要存取的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3291">The property to be accessed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3292">建立用於存取屬性的 <see cref="T:System.Linq.Expressions.MemberExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3292">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> accessing a property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3293">建立的 <see cref="T:System.Linq.Expressions.MemberExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3293">The created <see cref="T:System.Linq.Expressions.MemberExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyOrField">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberExpression PropertyOrField (System.Linq.Expressions.Expression expression, string propertyOrFieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberExpression PropertyOrField(class System.Linq.Expressions.Expression expression, string propertyOrFieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberExpression ^ PropertyOrField(System::Linq::Expressions::Expression ^ expression, System::String ^ propertyOrFieldName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="propertyOrFieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-3294">
            <see cref="T:System.Linq.Expressions.Expression" />，其 <see cref="P:System.Linq.Expressions.Expression.Type" /> 包含名為 <c>propertyOrFieldName</c> 的屬性或欄位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3294">An <see cref="T:System.Linq.Expressions.Expression" /> whose <see cref="P:System.Linq.Expressions.Expression.Type" /> contains a property or field named <c>propertyOrFieldName</c>.</span>
          </span>
          <span data-ttu-id="b0929-3295">如果是靜態成員，可以是 Null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3295">This can be null for static members.</span>
          </span>
        </param>
        <param name="propertyOrFieldName">
          <span data-ttu-id="b0929-3296">要存取之屬性或欄位的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3296">The name of a property or field to be accessed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3297">建立 <see cref="T:System.Linq.Expressions.MemberExpression" />，代表存取屬性或欄位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3297">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing a property or field.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3298">
            <see cref="T:System.Linq.Expressions.MemberExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" />、<see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> 屬性設定為 <paramref name="expression" />，且 <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> 屬性設定為 <see cref="T:System.Reflection.PropertyInfo" /> 或 <see cref="T:System.Reflection.FieldInfo" />，代表 <paramref name="propertyOrFieldName" /> 所表示的屬性或欄位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3298">A <see cref="T:System.Linq.Expressions.MemberExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" />, the <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> property set to <paramref name="expression" />, and the <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> property set to the <see cref="T:System.Reflection.PropertyInfo" /> or <see cref="T:System.Reflection.FieldInfo" /> that represents the property or field denoted by <paramref name="propertyOrFieldName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-3299"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.MemberExpression>等於<xref:System.Reflection.PropertyInfo.PropertyType%2A>或<xref:System.Reflection.FieldInfo.FieldType%2A>屬性<xref:System.Reflection.PropertyInfo>或<xref:System.Reflection.FieldInfo>，分別表示屬性或欄位以表示`propertyOrFieldName`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3299">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MemberExpression> is equal to the <xref:System.Reflection.PropertyInfo.PropertyType%2A> or <xref:System.Reflection.FieldInfo.FieldType%2A> properties of the <xref:System.Reflection.PropertyInfo> or <xref:System.Reflection.FieldInfo>, respectively, that represents the property or field denoted by `propertyOrFieldName`.</span></span>  
  
 <span data-ttu-id="b0929-3300">這個方法會搜尋`expression`。類型和其屬性或欄位名稱的基底型別`propertyOrFieldName`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3300">This method searches `expression`.Type and its base types for a property or field that has the name `propertyOrFieldName`.</span></span> <span data-ttu-id="b0929-3301">公用屬性和欄位的偏好進入非公用屬性和欄位。</span><span class="sxs-lookup"><span data-stu-id="b0929-3301">Public properties and fields are given preference over non-public properties and fields.</span></span> <span data-ttu-id="b0929-3302">此外，屬性會偏好在欄位。</span><span class="sxs-lookup"><span data-stu-id="b0929-3302">Also, properties are given preference over fields.</span></span> <span data-ttu-id="b0929-3303">如果找到相符的屬性或欄位，這個方法會傳遞`expression`和<xref:System.Reflection.PropertyInfo>或<xref:System.Reflection.FieldInfo>代表該屬性或欄位至<xref:System.Linq.Expressions.Expression.Property%2A>或<xref:System.Linq.Expressions.Expression.Field%2A>分別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3303">If a matching property or field is found, this method passes `expression` and the <xref:System.Reflection.PropertyInfo> or <xref:System.Reflection.FieldInfo> that represents that property or field to <xref:System.Linq.Expressions.Expression.Property%2A> or <xref:System.Linq.Expressions.Expression.Field%2A>, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-3304">下列範例會示範如何建立代表存取屬性或欄位的運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-3304">The following example shows how to create an expression that represents accessing a property or field.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#39](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#39)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#39](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#39)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-3305">
            <paramref name="expression" /> 或 <paramref name="propertyOrFieldName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3305">
              <paramref name="expression" /> or <paramref name="propertyOrFieldName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-3306">
            <paramref name="propertyOrFieldName" />.Type 或其基底類型中沒有定義名為 <paramref name="expression" /> 的屬性或欄位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3306">No property or field named <paramref name="propertyOrFieldName" /> is defined in <paramref name="expression" />.Type or its base types.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Quote">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Quote (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Quote(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Quote(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-3307">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3307">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3308">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，代表具有 <see cref="T:System.Linq.Expressions.Expression" /> 類型常數值的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3308">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an expression that has a constant value of type <see cref="T:System.Linq.Expressions.Expression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3309">
            <see cref="T:System.Linq.Expressions.UnaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Quote" />，而 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3309">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Quote" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-3310"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.UnaryExpression>代表建構的型別<xref:System.Linq.Expressions.Expression%601>，其中型別引數是所代表的類型`expression`。型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3310">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> represents the constructed type <xref:System.Linq.Expressions.Expression%601>, where the type argument is the type represented by `expression`.Type.</span></span> <span data-ttu-id="b0929-3311"><xref:System.Linq.Expressions.UnaryExpression.Method%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3311">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property is `null`.</span></span> <span data-ttu-id="b0929-3312">同時<xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A>是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3312">Both <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> are `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-3313">
            <paramref name="expression" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3313">
              <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reduce">
      <MemberSignature Language="C#" Value="public virtual System.Linq.Expressions.Expression Reduce ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression Reduce() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Reduce" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Reduce () As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Linq::Expressions::Expression ^ Reduce();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3314">將這個節點精簡為更簡單的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3314">Reduces this node to a simpler expression.</span>
          </span>
          <span data-ttu-id="b0929-3315">如果 CanReduce 傳回 true，則應該傳回有效的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3315">If CanReduce returns true, this should return a valid expression.</span>
          </span>
          <span data-ttu-id="b0929-3316">這個方法可以傳回其他本身必須精簡的節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3316">This method can return another node which itself must be reduced.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3317">精簡的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3317">The reduced expression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReduceAndCheck">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression ReduceAndCheck ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Linq.Expressions.Expression ReduceAndCheck() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
      <MemberSignature Language="VB.NET" Value="Public Function ReduceAndCheck () As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::Expression ^ ReduceAndCheck();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3318">將這個節點精簡為更簡單的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3318">Reduces this node to a simpler expression.</span>
          </span>
          <span data-ttu-id="b0929-3319">如果 CanReduce 傳回 true，則應該傳回有效的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3319">If CanReduce returns true, this should return a valid expression.</span>
          </span>
          <span data-ttu-id="b0929-3320">這個方法可以傳回其他本身必須精簡的節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3320">This method can return another node which itself must be reduced.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3321">精簡的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3321">The reduced expression.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-3322">不同於減少，這個方法會檢查縮減的節點滿足特定的非變異值。</span><span class="sxs-lookup"><span data-stu-id="b0929-3322">Unlike Reduce, this method checks that the reduced node satisfies certain invariants.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReduceExtensions">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression ReduceExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Linq.Expressions.Expression ReduceExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ReduceExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Function ReduceExtensions () As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::Expression ^ ReduceExtensions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3323">將運算式精簡為已知的節點類型 (不是 Extension 節點)，如果已經是已知的類型，則僅傳回運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3323">Reduces the expression to a known node type (that is not an Extension node) or just returns the expression if it is already a known type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3324">精簡的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3324">The reduced expression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceEqual">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ReferenceEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ReferenceEqual(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReferenceEqual (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ReferenceEqual(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-3325">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3325">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-3326">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3326">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3327">建立表示參考相等比較的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3327">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a reference equality comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3328">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Equal" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3328">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Equal" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceNotEqual">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ReferenceNotEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ReferenceNotEqual(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReferenceNotEqual (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ReferenceNotEqual(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-3329">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3329">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-3330">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3330">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3331">建立表示參考不相等比較的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3331">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a reference inequality comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3332">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.NotEqual" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3332">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.NotEqual" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Rethrow">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3333">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，表示重新擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3333">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a rethrowing of an exception.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rethrow">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Rethrow ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Rethrow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Rethrow" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Rethrow () As UnaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Rethrow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3334">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，表示重新擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3334">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a rethrowing of an exception.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3335">表示重新擲回例外狀況的 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3335">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a rethrowing of an exception.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rethrow">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Rethrow (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Rethrow(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Rethrow(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Rethrow(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b0929-3336">運算式的新 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3336">The new <see cref="T:System.Type" /> of the expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3337">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，代表重新擲回含指定之類型的例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3337">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a rethrowing of an exception with a given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3338">表示重新擲回例外狀況的 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3338">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a rethrowing of an exception.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Return">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3339">建立 <see cref="T:System.Linq.Expressions.GotoExpression" />，表示 return 陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3339">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a return statement.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Return (System.Linq.Expressions.LabelTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Return(class System.Linq.Expressions.LabelTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Return (target As LabelTarget) As GotoExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Return(System::Linq::Expressions::LabelTarget ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b0929-3340">
            <see cref="T:System.Linq.Expressions.LabelTarget" /> 將跳躍的目標 <see cref="T:System.Linq.Expressions.GotoExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3340">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3341">建立 <see cref="T:System.Linq.Expressions.GotoExpression" />，表示 return 陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3341">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a return statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3342">
            <see cref="T:System.Linq.Expressions.GotoExpression" />，其 <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 等於 Return、<see cref="P:System.Linq.Expressions.GotoExpression.Target" /> 屬性設定為 <paramref name="target" />，且包含在跳躍時傳遞至目標標籤的 Null 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3342">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Return, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, and a null value to be passed to the target label upon jumping.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Return (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Return(class System.Linq.Expressions.LabelTarget target, class System.Linq.Expressions.Expression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Return (target As LabelTarget, value As Expression) As GotoExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Return(System::Linq::Expressions::LabelTarget ^ target, System::Linq::Expressions::Expression ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b0929-3343">
            <see cref="T:System.Linq.Expressions.LabelTarget" /> 將跳躍的目標 <see cref="T:System.Linq.Expressions.GotoExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3343">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b0929-3344">將在跳躍時傳遞至關聯標籤的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3344">The value that will be passed to the associated label upon jumping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3345">建立 <see cref="T:System.Linq.Expressions.GotoExpression" />，表示 return 陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3345">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a return statement.</span>
          </span>
          <span data-ttu-id="b0929-3346">可以指定跳躍時傳遞至標籤的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3346">The value passed to the label upon jumping can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3347">
            <see cref="T:System.Linq.Expressions.GotoExpression" />，其 <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 等於 Continue、<see cref="P:System.Linq.Expressions.GotoExpression.Target" /> 屬性設定為 <paramref name="target" />，且，且包含在跳躍時傳遞至目標標籤的 <paramref name="value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3347">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Continue, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, and <paramref name="value" /> to be passed to the target label upon jumping.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0929-3348">下列範例示範如何建立包含的運算式<xref:System.Linq.Expressions.Expression.Return%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3348">The following example demonstrates how to create an expression that contains the <xref:System.Linq.Expressions.Expression.Return%2A> method.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#43](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#43)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#43](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#43)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Return (System.Linq.Expressions.LabelTarget target, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Return(class System.Linq.Expressions.LabelTarget target, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Return(System::Linq::Expressions::LabelTarget ^ target, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b0929-3349">
            <see cref="T:System.Linq.Expressions.LabelTarget" /> 將跳躍的目標 <see cref="T:System.Linq.Expressions.GotoExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3349">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="b0929-3350">要將 <see cref="T:System.Type" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.Expression.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3350">An <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3351">建立 <see cref="T:System.Linq.Expressions.GotoExpression" />，表示含指定之類型的 return 陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3351">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a return statement with the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3352">
            <see cref="T:System.Linq.Expressions.GotoExpression" />，其 <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 等於 Return、<see cref="P:System.Linq.Expressions.GotoExpression.Target" /> 屬性設定為 <paramref name="target" />、<see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性設定為 <paramref name="type" />，且包含在跳躍時傳遞至目標標籤的 null 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3352">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Return, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to <paramref name="type" />, and a null value to be passed to the target label upon jumping.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Return (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Return(class System.Linq.Expressions.LabelTarget target, class System.Linq.Expressions.Expression value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Return(System::Linq::Expressions::LabelTarget ^ target, System::Linq::Expressions::Expression ^ value, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="b0929-3353">
            <see cref="T:System.Linq.Expressions.LabelTarget" /> 將跳躍的目標 <see cref="T:System.Linq.Expressions.GotoExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3353">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b0929-3354">將在跳躍時傳遞至關聯標籤的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3354">The value that will be passed to the associated label upon jumping.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="b0929-3355">要將 <see cref="T:System.Type" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.Expression.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3355">An <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3356">建立 <see cref="T:System.Linq.Expressions.GotoExpression" />，表示含指定之類型的 return 陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3356">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a return statement with the specified type.</span>
          </span>
          <span data-ttu-id="b0929-3357">可以指定跳躍時傳遞至標籤的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3357">The value passed to the label upon jumping can be specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3358">
            <see cref="T:System.Linq.Expressions.GotoExpression" />，其 <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> 等於Continue、<see cref="P:System.Linq.Expressions.GotoExpression.Target" /> 屬性設定為 <paramref name="target" />、<see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性設定為 <paramref name="type" />，且包含在跳躍時傳遞至目標標籤的 <paramref name="value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3358">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Continue, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to <paramref name="type" />, and <paramref name="value" /> to be passed to the target label upon jumping.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RightShift">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3359">建立代表位元右移 (Right-Shift) 運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3359">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise right-shift operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RightShift">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression RightShift (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression RightShift(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShift (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ RightShift(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-3360">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3360">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-3361">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3361">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3362">建立代表位元右移 (Right-Shift) 運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3362">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise right-shift operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3363">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.RightShift" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3363">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.RightShift" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-3364">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3364">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-3365"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3365">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-3366">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3366">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-3367">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3367">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-3368"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3368">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-3369">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-3369">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-3370">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-3370">Implementing Method</span></span>  
 <span data-ttu-id="b0929-3371">下列規則決定作業選取實作的方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-3371">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-3372">如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載向右移位運算子<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3372">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the right-shift operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-3373">否則，如果`left`。類型是整數類資料類型 (其中<xref:System.Byte>， <xref:System.SByte>， <xref:System.Int16>， <xref:System.UInt16>， <xref:System.Int32>， <xref:System.UInt32>， <xref:System.Int64>， <xref:System.UInt64>，或對應可為 null 的類型) 和`right`。型別是<xref:System.Int32>、 實作方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3373">Otherwise, if `left`.Type is an integral type (one of <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, or the corresponding nullable types) and `right`.Type is <xref:System.Int32>, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-3374">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-3374">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-3375">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-3375">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-3376">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3376">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-3377">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3377">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-3378">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-3378">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-3379">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3379">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-3380">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3380">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-3381">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-3381">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-3382">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3382">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-3383">節點的類型是預先定義的向右移位運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3383">The type of the node is the result type of the predefined right-shift operator.</span></span>  
  
-   <span data-ttu-id="b0929-3384">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3384">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-3385">節點的類型為 null 的型別對應至預先定義的向右移位運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3385">The type of the node is the nullable type that corresponds to the result type of the predefined right-shift operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-3386">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3386">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-3387">不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義 Right-shift 運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3387">The right-shift operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RightShift">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression RightShift (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression RightShift(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShift (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ RightShift(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-3388">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3388">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-3389">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3389">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-3390">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3390">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3391">建立代表位元右移 (Right-Shift) 運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3391">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise right-shift operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3392">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.RightShift" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3392">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.RightShift" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-3393">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3393">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-3394"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3394">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-3395">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3395">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-3396">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3396">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-3397"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3397">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-3398">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-3398">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-3399">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-3399">Implementing Method</span></span>  
 <span data-ttu-id="b0929-3400">下列規則決定作業選取實作的方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-3400">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-3401">如果`method`不`null`，而它代表非 void， `static` (`Shared`在 Visual Basic 中) 採用兩個引數，方法是節點的實作方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3401">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="b0929-3402">否則，如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載向右移位運算子<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3402">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the right-shift operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-3403">否則，如果`left`。類型是整數類資料類型 (其中<xref:System.Byte>， <xref:System.SByte>， <xref:System.Int16>， <xref:System.UInt16>， <xref:System.Int32>， <xref:System.UInt32>， <xref:System.Int64>， <xref:System.UInt64>，或對應可為 null 的類型) 和`right`。型別是<xref:System.Int32>、 實作方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3403">Otherwise, if `left`.Type is an integral type (one of <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, or the corresponding nullable types) and `right`.Type is <xref:System.Int32>, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-3404">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-3404">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-3405">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-3405">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-3406">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3406">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-3407">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3407">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-3408">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-3408">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-3409">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3409">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-3410">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3410">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-3411">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-3411">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-3412">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3412">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-3413">節點的類型是預先定義的向右移位運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3413">The type of the node is the result type of the predefined right-shift operator.</span></span>  
  
-   <span data-ttu-id="b0929-3414">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3414">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-3415">節點的類型為 null 的型別對應至預先定義的向右移位運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3415">The type of the node is the nullable type that corresponds to the result type of the predefined right-shift operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-3416">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3416">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-3417">
            <paramref name="method" /> 不是 <see langword="null" />，而它所代表的方法會傳回 <see langword="void" />、不是 <see langword="static" /> (Visual Basic 中的 <see langword="Shared" />)，或者未確切採用兩個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3417">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-3418">
            <paramref name="method" /> 為 <see langword="null" />，且不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義 Right-shift 運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3418">
              <paramref name="method" /> is <see langword="null" /> and the right-shift operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RightShiftAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3419">建立表示位元右移位指派運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3419">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise right-shift assignment operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RightShiftAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression RightShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression RightShiftAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShiftAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ RightShiftAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-3420">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3420">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-3421">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3421">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3422">建立表示位元右移位指派運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3422">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise right-shift assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3423">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.RightShiftAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3423">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.RightShiftAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightShiftAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression RightShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression RightShiftAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShiftAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ RightShiftAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-3424">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3424">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-3425">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3425">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-3426">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3426">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3427">建立表示位元右移位指派運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3427">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise right-shift assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3428">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.RightShiftAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3428">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.RightShiftAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightShiftAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression RightShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression RightShiftAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShiftAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ RightShiftAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-3429">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3429">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-3430">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3430">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-3431">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3431">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="b0929-3432">要將 <see cref="T:System.Linq.Expressions.LambdaExpression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3432">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3433">建立表示位元右移位指派運算的 <see cref="T:System.Linq.Expressions.BinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3433">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise right-shift assignment operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3434">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.RightShiftAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3434">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.RightShiftAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RuntimeVariables">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3435">建立 <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" /> 的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3435">Creates an instance of <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RuntimeVariables">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.RuntimeVariablesExpression RuntimeVariables (System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; variables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.RuntimeVariablesExpression RuntimeVariables(class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RuntimeVariables (variables As IEnumerable(Of ParameterExpression)) As RuntimeVariablesExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::RuntimeVariablesExpression ^ RuntimeVariables(System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ variables);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.RuntimeVariablesExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="variables">
          <span data-ttu-id="b0929-3436">
            <see cref="T:System.Linq.Expressions.ParameterExpression" /> 物件的集合，用來填入 <see cref="P:System.Linq.Expressions.RuntimeVariablesExpression.Variables" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3436">A collection of <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.RuntimeVariablesExpression.Variables" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3437">建立 <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" /> 的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3437">Creates an instance of <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3438">
            <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" /> 的執行個體，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.RuntimeVariables" />，而 <see cref="P:System.Linq.Expressions.RuntimeVariablesExpression.Variables" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3438">An instance of <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.RuntimeVariables" /> and the <see cref="P:System.Linq.Expressions.RuntimeVariablesExpression.Variables" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuntimeVariables">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.RuntimeVariablesExpression RuntimeVariables (params System.Linq.Expressions.ParameterExpression[] variables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.RuntimeVariablesExpression RuntimeVariables(class System.Linq.Expressions.ParameterExpression[] variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RuntimeVariables (ParamArray variables As ParameterExpression()) As RuntimeVariablesExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::RuntimeVariablesExpression ^ RuntimeVariables(... cli::array &lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ variables);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.RuntimeVariablesExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variables" Type="System.Linq.Expressions.ParameterExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="variables">
          <span data-ttu-id="b0929-3439">用以填入 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 集合之 <see cref="P:System.Linq.Expressions.RuntimeVariablesExpression.Variables" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3439">An array of <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.RuntimeVariablesExpression.Variables" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3440">建立 <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" /> 的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3440">Creates an instance of <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3441">
            <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" /> 的執行個體，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.RuntimeVariables" />，而 <see cref="P:System.Linq.Expressions.RuntimeVariablesExpression.Variables" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3441">An instance of <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.RuntimeVariables" /> and the <see cref="P:System.Linq.Expressions.RuntimeVariablesExpression.Variables" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Subtract">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3442">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，其代表不含溢位檢查的算術減法運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3442">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic subtraction operation that does not have overflow checking.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Subtract (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Subtract(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Subtract(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-3443">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3443">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-3444">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3444">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3445">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，其代表不含溢位檢查的算術減法運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3445">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic subtraction operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3446">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Subtract" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3446">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Subtract" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-3447">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3447">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-3448"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3448">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-3449">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3449">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-3450">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3450">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-3451"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3451">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-3452">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-3452">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-3453">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-3453">Implementing Method</span></span>  
 <span data-ttu-id="b0929-3454">下列規則決定作業選取實作的方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-3454">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-3455">如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載減法運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3455">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the subtraction operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-3456">否則，如果`left`。型別和`right`。類型為數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3456">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-3457">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-3457">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-3458">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-3458">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-3459">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3459">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-3460">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3460">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-3461">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-3461">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-3462">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3462">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-3463">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3463">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-3464">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-3464">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-3465">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3465">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-3466">節點的類型是預先定義的減法運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3466">The type of the node is the result type of the predefined subtraction operator.</span></span>  
  
-   <span data-ttu-id="b0929-3467">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3467">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-3468">節點的類型為 null 的型別對應至預先定義的減法運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3468">The type of the node is the nullable type that corresponds to the result type of the predefined subtraction operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-3469">下列程式碼範例示範如何建立減去第一個引數的引數的運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-3469">The following code example shows how to create an expression that subtracts the argument from the first argument.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#30](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#30)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#30](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-3470">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3470">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-3471">不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義 Subtraction 運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3471">The subtraction operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Subtract (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Subtract(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Subtract(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-3472">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3472">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-3473">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3473">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-3474">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3474">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3475">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，其代表不含溢位檢查的算術減法運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3475">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic subtraction operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3476">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.Subtract" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3476">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Subtract" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-3477">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3477">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-3478"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3478">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-3479">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3479">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-3480">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3480">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-3481"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3481">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-3482">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-3482">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-3483">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-3483">Implementing Method</span></span>  
 <span data-ttu-id="b0929-3484">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-3484">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-3485">如果`method`不`null`，而它代表非 void， `static` (`Shared`在 Visual Basic 中) 採用兩個引數，方法是節點的實作方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3485">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="b0929-3486">否則，如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載減法運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3486">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the subtraction operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-3487">否則，如果`left`。型別和`right`。類型為數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3487">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-3488">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-3488">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-3489">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-3489">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-3490">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3490">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-3491">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3491">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-3492">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-3492">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-3493">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3493">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-3494">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3494">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-3495">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-3495">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-3496">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3496">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-3497">節點的類型是預先定義的減法運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3497">The type of the node is the result type of the predefined subtraction operator.</span></span>  
  
-   <span data-ttu-id="b0929-3498">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3498">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-3499">節點的類型為 null 的型別對應至預先定義的減法運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3499">The type of the node is the nullable type that corresponds to the result type of the predefined subtraction operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-3500">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3500">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-3501">
            <paramref name="method" /> 不是 <see langword="null" />，而它所代表的方法會傳回 <see langword="void" />、不是 <see langword="static" /> (Visual Basic 中的 <see langword="Shared" />)，或者未確切採用兩個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3501">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-3502">
            <paramref name="method" /> 是 <see langword="null" />，而且未定義 <paramref name="left" />.Type 和 <paramref name="right" />.Type 的減法運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3502">
              <paramref name="method" /> is <see langword="null" /> and the subtraction operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubtractAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3503">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示不含溢位檢查的減法指派運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3503">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a subtraction assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubtractAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression SubtractAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression SubtractAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ SubtractAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-3504">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3504">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-3505">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3505">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3506">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示不含溢位檢查的減法指派運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3506">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a subtraction assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3507">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3507">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtractAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression SubtractAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression SubtractAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ SubtractAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-3508">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3508">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-3509">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3509">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-3510">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3510">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3511">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示不含溢位檢查的減法指派運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3511">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a subtraction assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3512">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3512">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtractAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression SubtractAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression SubtractAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ SubtractAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-3513">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3513">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-3514">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3514">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-3515">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3515">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="b0929-3516">要將 <see cref="T:System.Linq.Expressions.LambdaExpression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3516">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3517">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示不含溢位檢查的減法指派運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3517">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a subtraction assignment operation that does not have overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3518">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssign" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3518">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubtractAssignChecked">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3519">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示包含溢位檢查的減法指派運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3519">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a subtraction assignment operation that has overflow checking.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubtractAssignChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression SubtractAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression SubtractAssignChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractAssignChecked (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ SubtractAssignChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-3520">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3520">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-3521">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3521">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3522">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示包含溢位檢查的減法指派運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3522">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a subtraction assignment operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3523">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssignChecked" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3523">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssignChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtractAssignChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression SubtractAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression SubtractAssignChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractAssignChecked (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ SubtractAssignChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-3524">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3524">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-3525">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3525">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-3526">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3526">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3527">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示包含溢位檢查的減法指派運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3527">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a subtraction assignment operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3528">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssignChecked" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3528">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssignChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtractAssignChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression SubtractAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression SubtractAssignChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractAssignChecked (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ SubtractAssignChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-3529">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3529">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-3530">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3530">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-3531">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3531">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <param name="conversion">
          <span data-ttu-id="b0929-3532">要將 <see cref="T:System.Linq.Expressions.LambdaExpression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3532">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3533">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，表示包含溢位檢查的減法指派運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3533">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a subtraction assignment operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3534">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssignChecked" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3534">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssignChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubtractChecked">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3535">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，其代表包含溢位檢查的算術減法運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3535">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic subtraction operation that has overflow checking.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubtractChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression SubtractChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression SubtractChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractChecked (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ SubtractChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-3536">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3536">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-3537">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3537">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3538">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，其代表包含溢位檢查的算術減法運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3538">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic subtraction operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3539">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.SubtractChecked" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3539">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.SubtractChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-3540">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3540">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-3541"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3541">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-3542">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3542">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-3543">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3543">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-3544"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3544">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-3545">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-3545">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-3546">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-3546">Implementing Method</span></span>  
 <span data-ttu-id="b0929-3547">下列規則決定作業選取實作的方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-3547">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-3548">如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載減法運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3548">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the subtraction operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-3549">否則，如果`left`。型別和`right`。類型為數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3549">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-3550">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-3550">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-3551">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-3551">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-3552">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3552">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-3553">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3553">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-3554">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-3554">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-3555">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3555">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-3556">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3556">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-3557">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-3557">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-3558">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3558">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-3559">節點的類型是預先定義的減法運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3559">The type of the node is the result type of the predefined subtraction operator.</span></span>  
  
-   <span data-ttu-id="b0929-3560">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3560">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-3561">節點的類型為 null 的型別對應至預先定義的減法運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3561">The type of the node is the nullable type that corresponds to the result type of the predefined subtraction operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-3562">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3562">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-3563">不會為 <paramref name="left" />.Type 和 <paramref name="right" />.Type 定義 Subtraction 運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3563">The subtraction operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SubtractChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression SubtractChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression SubtractChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractChecked (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ SubtractChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="b0929-3564">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3564">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="b0929-3565">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3565">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-3566">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3566">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3567">建立 <see cref="T:System.Linq.Expressions.BinaryExpression" />，其代表包含溢位檢查的算術減法運算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3567">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic subtraction operation that has overflow checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3568">
            <see cref="T:System.Linq.Expressions.BinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.SubtractChecked" />，且 <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />、<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> 和 <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3568">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.SubtractChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-3569">產生<xref:System.Linq.Expressions.BinaryExpression>具有<xref:System.Linq.Expressions.BinaryExpression.Method%2A>屬性設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3569">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="b0929-3570"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3570">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-3571">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3571">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-3572">否則，它們是`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3572">Otherwise, they are `false`.</span></span> <span data-ttu-id="b0929-3573"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> 屬性為 `null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3573">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="b0929-3574">下列資訊描述實作的方法，而節點類型，以及節點是否已消除。</span><span class="sxs-lookup"><span data-stu-id="b0929-3574">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-3575">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-3575">Implementing Method</span></span>  
 <span data-ttu-id="b0929-3576">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-3576">The following rules determine the implementing method for the operation :</span></span>  
  
-   <span data-ttu-id="b0929-3577">如果`method`不`null`，而它代表非 void， `static` (`Shared`在 Visual Basic 中) 採用兩個引數，方法是節點的實作方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3577">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="b0929-3578">否則，如果<xref:System.Linq.Expressions.Expression.Type%2A>屬性中的其中一個`left`或`right`表示使用者定義型別多載減法運算子，<xref:System.Reflection.MethodInfo>表示方法是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3578">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the subtraction operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-3579">否則，如果`left`。型別和`right`。類型為數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3579">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-3580">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-3580">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-3581">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-3581">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-3582">如果`left`。型別和`right`。類型可指派給對應的實作方法的引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3582">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-3583">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3583">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-3584">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-3584">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-3585">`left`.型別和`right`。類型為這兩個實值類型，其中至少一個可為 null，對應不可為 null 的型別是相等的實作方法的相對應的引數型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3585">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-3586">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3586">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-3587">如果實作的方法是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-3587">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="b0929-3588">如果`left`。型別和`right`。型別都不可為 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3588">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-3589">節點的類型是預先定義的減法運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3589">The type of the node is the result type of the predefined subtraction operator.</span></span>  
  
-   <span data-ttu-id="b0929-3590">如果`left`。型別和`right`。型別都可為 null，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3590">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="b0929-3591">節點的類型為 null 的型別對應至預先定義的減法運算子的結果型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3591">The type of the node is the nullable type that corresponds to the result type of the predefined subtraction operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-3592">
            <paramref name="left" /> 或 <paramref name="right" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3592">
              <paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-3593">
            <paramref name="method" /> 不是 <see langword="null" />，而它所代表的方法會傳回 <see langword="void" />、不是 <see langword="static" /> (Visual Basic 中的 <see langword="Shared" />)，或者未確切採用兩個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3593">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-3594">
            <paramref name="method" /> 是 <see langword="null" />，而且未定義 <paramref name="left" />.Type 和 <paramref name="right" />.Type 的減法運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3594">
              <paramref name="method" /> is <see langword="null" /> and the subtraction operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Switch">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3595">建立表示 <see cref="T:System.Linq.Expressions.SwitchExpression" /> 陳述式的 <see langword="switch" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3595">Creates a <see cref="T:System.Linq.Expressions.SwitchExpression" /> that represents a <see langword="switch" /> statement.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SwitchExpression Switch (System.Linq.Expressions.Expression switchValue, params System.Linq.Expressions.SwitchCase[] cases);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SwitchExpression Switch(class System.Linq.Expressions.Expression switchValue, class System.Linq.Expressions.SwitchCase[] cases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Switch (switchValue As Expression, ParamArray cases As SwitchCase()) As SwitchExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SwitchExpression ^ Switch(System::Linq::Expressions::Expression ^ switchValue, ... cli::array &lt;System::Linq::Expressions::SwitchCase ^&gt; ^ cases);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SwitchExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchValue" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="cases" Type="System.Linq.Expressions.SwitchCase[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="switchValue">
          <span data-ttu-id="b0929-3596">針對每個案例所要測試的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3596">The value to be tested against each case.</span>
          </span>
        </param>
        <param name="cases">
          <span data-ttu-id="b0929-3597">這個 switch 運算式的案例集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3597">The set of cases for this switch expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3598">建立 <see cref="T:System.Linq.Expressions.SwitchExpression" />，代表不含 default case 的 <see langword="switch" /> 陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3598">Creates a <see cref="T:System.Linq.Expressions.SwitchExpression" /> that represents a <see langword="switch" /> statement without a default case.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3599">建立的 <see cref="T:System.Linq.Expressions.SwitchExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3599">The created <see cref="T:System.Linq.Expressions.SwitchExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-3600">所有<xref:System.Linq.Expressions.SwitchCase>中的物件<xref:System.Linq.Expressions.SwitchExpression>物件必須具有相同的型別，除非<xref:System.Linq.Expressions.SwitchExpression>具有類型`void`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3600">All <xref:System.Linq.Expressions.SwitchCase> objects in a <xref:System.Linq.Expressions.SwitchExpression> object must have the same type, unless the <xref:System.Linq.Expressions.SwitchExpression> has the type `void`.</span></span>  
  
 <span data-ttu-id="b0929-3601">每個<xref:System.Linq.Expressions.SwitchCase>物件具有隱含`break`陳述式，這表示沒有隱含落入從一個 case 標籤到另一個。</span><span class="sxs-lookup"><span data-stu-id="b0929-3601">Each <xref:System.Linq.Expressions.SwitchCase> object has an implicit `break` statement, which means that there is no implicit fall through from one case label to another.</span></span>  
  
 <span data-ttu-id="b0929-3602">如果`switchValue`不符合任何的情況下，會擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="b0929-3602">If `switchValue` does not match any of the cases, no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-3603">下列範例會示範如何建立代表不含預設情況的切換陳述式的運算式。</span><span class="sxs-lookup"><span data-stu-id="b0929-3603">The following example demonstrates how to create an expression that represents a swtich statement without a default case.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#34](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#34)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#34](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SwitchExpression Switch (System.Linq.Expressions.Expression switchValue, System.Linq.Expressions.Expression defaultBody, params System.Linq.Expressions.SwitchCase[] cases);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SwitchExpression Switch(class System.Linq.Expressions.Expression switchValue, class System.Linq.Expressions.Expression defaultBody, class System.Linq.Expressions.SwitchCase[] cases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Switch (switchValue As Expression, defaultBody As Expression, ParamArray cases As SwitchCase()) As SwitchExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SwitchExpression ^ Switch(System::Linq::Expressions::Expression ^ switchValue, System::Linq::Expressions::Expression ^ defaultBody, ... cli::array &lt;System::Linq::Expressions::SwitchCase ^&gt; ^ cases);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SwitchExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchValue" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="defaultBody" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="cases" Type="System.Linq.Expressions.SwitchCase[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="switchValue">
          <span data-ttu-id="b0929-3604">針對每個案例所要測試的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3604">The value to be tested against each case.</span>
          </span>
        </param>
        <param name="defaultBody">
          <span data-ttu-id="b0929-3605">如果 <c>switchValue</c> 不符合任何案例，則為參數結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3605">The result of the switch if <c>switchValue</c> does not match any of the cases.</span>
          </span>
        </param>
        <param name="cases">
          <span data-ttu-id="b0929-3606">這個 switch 運算式的案例集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3606">The set of cases for this switch expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3607">建立 <see cref="T:System.Linq.Expressions.SwitchExpression" />，其代表具有預設情況的 <see langword="switch" /> 陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3607">Creates a <see cref="T:System.Linq.Expressions.SwitchExpression" /> that represents a <see langword="switch" /> statement that has a default case.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3608">建立的 <see cref="T:System.Linq.Expressions.SwitchExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3608">The created <see cref="T:System.Linq.Expressions.SwitchExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-3609">所有<xref:System.Linq.Expressions.SwitchCase>中的物件<xref:System.Linq.Expressions.SwitchExpression>物件必須具有相同的型別，除非<xref:System.Linq.Expressions.SwitchExpression>具有類型`void`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3609">All <xref:System.Linq.Expressions.SwitchCase> objects in a <xref:System.Linq.Expressions.SwitchExpression> object must have the same type, unless the <xref:System.Linq.Expressions.SwitchExpression> has the type `void`.</span></span>  
  
 <span data-ttu-id="b0929-3610">每個<xref:System.Linq.Expressions.SwitchCase>物件具有隱含`break`陳述式，這表示沒有隱含落入從一個 case 標籤到另一個。</span><span class="sxs-lookup"><span data-stu-id="b0929-3610">Each <xref:System.Linq.Expressions.SwitchCase> object has an implicit `break` statement, which means that there is no implicit fall through from one case label to another.</span></span>  
  
 <span data-ttu-id="b0929-3611">如果`switchValue`不相符在任何情況下，預設情況下，由`defaultBody`執行。</span><span class="sxs-lookup"><span data-stu-id="b0929-3611">If `switchValue` does not match any of the cases, the default case represented by `defaultBody` is run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-3612">下列範例會示範如何建立運算式，代表具有預設情況的切換陳述式。</span><span class="sxs-lookup"><span data-stu-id="b0929-3612">The following example demonstrates how to create an expression that represents a swtich statement that has a default case.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#35](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#35)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#35](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SwitchExpression Switch (System.Linq.Expressions.Expression switchValue, System.Linq.Expressions.Expression defaultBody, System.Reflection.MethodInfo comparison, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.SwitchCase&gt; cases);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SwitchExpression Switch(class System.Linq.Expressions.Expression switchValue, class System.Linq.Expressions.Expression defaultBody, class System.Reflection.MethodInfo comparison, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.SwitchCase&gt; cases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Switch (switchValue As Expression, defaultBody As Expression, comparison As MethodInfo, cases As IEnumerable(Of SwitchCase)) As SwitchExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SwitchExpression ^ Switch(System::Linq::Expressions::Expression ^ switchValue, System::Linq::Expressions::Expression ^ defaultBody, System::Reflection::MethodInfo ^ comparison, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::SwitchCase ^&gt; ^ cases);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SwitchExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchValue" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="defaultBody" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="comparison" Type="System.Reflection.MethodInfo" />
        <Parameter Name="cases" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.SwitchCase&gt;" />
      </Parameters>
      <Docs>
        <param name="switchValue">
          <span data-ttu-id="b0929-3613">針對每個案例所要測試的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3613">The value to be tested against each case.</span>
          </span>
        </param>
        <param name="defaultBody">
          <span data-ttu-id="b0929-3614">如果 <c>switchValue</c> 不符合任何案例，則為參數結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3614">The result of the switch if <c>switchValue</c> does not match any of the cases.</span>
          </span>
        </param>
        <param name="comparison">
          <span data-ttu-id="b0929-3615">要使用的相等比較方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3615">The equality comparison method to use.</span>
          </span>
        </param>
        <param name="cases">
          <span data-ttu-id="b0929-3616">這個 switch 運算式的案例集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3616">The set of cases for this switch expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3617">建立 <see cref="T:System.Linq.Expressions.SwitchExpression" />，其代表具有預設情況的 <see langword="switch" /> 陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3617">Creates a <see cref="T:System.Linq.Expressions.SwitchExpression" /> that represents a <see langword="switch" /> statement that has a default case.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3618">建立的 <see cref="T:System.Linq.Expressions.SwitchExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3618">The created <see cref="T:System.Linq.Expressions.SwitchExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SwitchExpression Switch (System.Linq.Expressions.Expression switchValue, System.Linq.Expressions.Expression defaultBody, System.Reflection.MethodInfo comparison, params System.Linq.Expressions.SwitchCase[] cases);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SwitchExpression Switch(class System.Linq.Expressions.Expression switchValue, class System.Linq.Expressions.Expression defaultBody, class System.Reflection.MethodInfo comparison, class System.Linq.Expressions.SwitchCase[] cases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Switch (switchValue As Expression, defaultBody As Expression, comparison As MethodInfo, ParamArray cases As SwitchCase()) As SwitchExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SwitchExpression ^ Switch(System::Linq::Expressions::Expression ^ switchValue, System::Linq::Expressions::Expression ^ defaultBody, System::Reflection::MethodInfo ^ comparison, ... cli::array &lt;System::Linq::Expressions::SwitchCase ^&gt; ^ cases);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SwitchExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchValue" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="defaultBody" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="comparison" Type="System.Reflection.MethodInfo" />
        <Parameter Name="cases" Type="System.Linq.Expressions.SwitchCase[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="switchValue">
          <span data-ttu-id="b0929-3619">針對每個案例所要測試的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3619">The value to be tested against each case.</span>
          </span>
        </param>
        <param name="defaultBody">
          <span data-ttu-id="b0929-3620">如果 <c>switchValue</c> 不符合任何案例，則為參數結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3620">The result of the switch if <c>switchValue</c> does not match any of the cases.</span>
          </span>
        </param>
        <param name="comparison">
          <span data-ttu-id="b0929-3621">要使用的相等比較方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3621">The equality comparison method to use.</span>
          </span>
        </param>
        <param name="cases">
          <span data-ttu-id="b0929-3622">這個 switch 運算式的案例集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3622">The set of cases for this switch expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3623">建立 <see cref="T:System.Linq.Expressions.SwitchExpression" />，其代表具有預設情況的 <see langword="switch" /> 陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3623">Creates a <see cref="T:System.Linq.Expressions.SwitchExpression" /> that represents a <see langword="switch" /> statement that has a default case.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3624">建立的 <see cref="T:System.Linq.Expressions.SwitchExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3624">The created <see cref="T:System.Linq.Expressions.SwitchExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SwitchExpression Switch (Type type, System.Linq.Expressions.Expression switchValue, System.Linq.Expressions.Expression defaultBody, System.Reflection.MethodInfo comparison, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.SwitchCase&gt; cases);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SwitchExpression Switch(class System.Type type, class System.Linq.Expressions.Expression switchValue, class System.Linq.Expressions.Expression defaultBody, class System.Reflection.MethodInfo comparison, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.SwitchCase&gt; cases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SwitchExpression ^ Switch(Type ^ type, System::Linq::Expressions::Expression ^ switchValue, System::Linq::Expressions::Expression ^ defaultBody, System::Reflection::MethodInfo ^ comparison, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::SwitchCase ^&gt; ^ cases);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SwitchExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="switchValue" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="defaultBody" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="comparison" Type="System.Reflection.MethodInfo" />
        <Parameter Name="cases" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.SwitchCase&gt;" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b0929-3625">參數的結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3625">The result type of the switch.</span>
          </span>
        </param>
        <param name="switchValue">
          <span data-ttu-id="b0929-3626">針對每個案例所要測試的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3626">The value to be tested against each case.</span>
          </span>
        </param>
        <param name="defaultBody">
          <span data-ttu-id="b0929-3627">如果 <c>switchValue</c> 不符合任何案例，則為參數結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3627">The result of the switch if <c>switchValue</c> does not match any of the cases.</span>
          </span>
        </param>
        <param name="comparison">
          <span data-ttu-id="b0929-3628">要使用的相等比較方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3628">The equality comparison method to use.</span>
          </span>
        </param>
        <param name="cases">
          <span data-ttu-id="b0929-3629">這個 switch 運算式的案例集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3629">The set of cases for this switch expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3630">建立 <see cref="T:System.Linq.Expressions.SwitchExpression" />，其代表具有預設情況的 <see langword="switch" /> 陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3630">Creates a <see cref="T:System.Linq.Expressions.SwitchExpression" /> that represents a <see langword="switch" /> statement that has a default case.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3631">建立的 <see cref="T:System.Linq.Expressions.SwitchExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3631">The created <see cref="T:System.Linq.Expressions.SwitchExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SwitchExpression Switch (Type type, System.Linq.Expressions.Expression switchValue, System.Linq.Expressions.Expression defaultBody, System.Reflection.MethodInfo comparison, params System.Linq.Expressions.SwitchCase[] cases);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SwitchExpression Switch(class System.Type type, class System.Linq.Expressions.Expression switchValue, class System.Linq.Expressions.Expression defaultBody, class System.Reflection.MethodInfo comparison, class System.Linq.Expressions.SwitchCase[] cases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SwitchExpression ^ Switch(Type ^ type, System::Linq::Expressions::Expression ^ switchValue, System::Linq::Expressions::Expression ^ defaultBody, System::Reflection::MethodInfo ^ comparison, ... cli::array &lt;System::Linq::Expressions::SwitchCase ^&gt; ^ cases);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SwitchExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="switchValue" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="defaultBody" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="comparison" Type="System.Reflection.MethodInfo" />
        <Parameter Name="cases" Type="System.Linq.Expressions.SwitchCase[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b0929-3632">參數的結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3632">The result type of the switch.</span>
          </span>
        </param>
        <param name="switchValue">
          <span data-ttu-id="b0929-3633">針對每個案例所要測試的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3633">The value to be tested against each case.</span>
          </span>
        </param>
        <param name="defaultBody">
          <span data-ttu-id="b0929-3634">如果 <c>switchValue</c> 不符合任何案例，則為參數結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3634">The result of the switch if <c>switchValue</c> does not match any of the cases.</span>
          </span>
        </param>
        <param name="comparison">
          <span data-ttu-id="b0929-3635">要使用的相等比較方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3635">The equality comparison method to use.</span>
          </span>
        </param>
        <param name="cases">
          <span data-ttu-id="b0929-3636">這個 switch 運算式的案例集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3636">The set of cases for this switch expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3637">建立 <see cref="T:System.Linq.Expressions.SwitchExpression" />，其代表具有預設情況的 <see langword="switch" /> 陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3637">Creates a <see cref="T:System.Linq.Expressions.SwitchExpression" /> that represents a <see langword="switch" /> statement that has a default case..</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3638">建立的 <see cref="T:System.Linq.Expressions.SwitchExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3638">The created <see cref="T:System.Linq.Expressions.SwitchExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SwitchCase">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3639">建立要在 <see cref="T:System.Linq.Expressions.SwitchCase" /> 物件中使用的 <see cref="T:System.Linq.Expressions.SwitchExpression" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3639">Creates a <see cref="T:System.Linq.Expressions.SwitchCase" /> object to be used in a <see cref="T:System.Linq.Expressions.SwitchExpression" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SwitchCase">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SwitchCase SwitchCase (System.Linq.Expressions.Expression body, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; testValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SwitchCase SwitchCase(class System.Linq.Expressions.Expression body, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; testValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SwitchCase (body As Expression, testValues As IEnumerable(Of Expression)) As SwitchCase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SwitchCase ^ SwitchCase(System::Linq::Expressions::Expression ^ body, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ testValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SwitchCase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="testValues" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="b0929-3640">案例的主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3640">The body of the case.</span>
          </span>
        </param>
        <param name="testValues">
          <span data-ttu-id="b0929-3641">案例的測試值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3641">The test values of the case.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3642">建立要在 <see cref="T:System.Linq.Expressions.SwitchCase" /> 物件中使用的 <see cref="T:System.Linq.Expressions.SwitchExpression" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3642">Creates a <see cref="T:System.Linq.Expressions.SwitchCase" /> object to be used in a <see cref="T:System.Linq.Expressions.SwitchExpression" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3643">建立的 <see cref="T:System.Linq.Expressions.SwitchCase" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3643">The created <see cref="T:System.Linq.Expressions.SwitchCase" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-3644">所有<xref:System.Linq.Expressions.SwitchCase>中的物件<xref:System.Linq.Expressions.SwitchExpression>物件必須具有相同的型別，除非<xref:System.Linq.Expressions.SwitchExpression>具有類型`void`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3644">All <xref:System.Linq.Expressions.SwitchCase> objects in a <xref:System.Linq.Expressions.SwitchExpression> object must have the same type, unless the <xref:System.Linq.Expressions.SwitchExpression> has the type `void`.</span></span>  
  
 <span data-ttu-id="b0929-3645">每個<xref:System.Linq.Expressions.SwitchCase>物件具有隱含`break`陳述式，這表示沒有隱含落入從一個 case 標籤到另一個。</span><span class="sxs-lookup"><span data-stu-id="b0929-3645">Each <xref:System.Linq.Expressions.SwitchCase> object has an implicit `break` statement, which means that there is no implicit fall through from one case label to another.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-3646">下列範例會示範如何建立運算式，代表具有預設情況的切換陳述式。</span><span class="sxs-lookup"><span data-stu-id="b0929-3646">The following example demonstrates how to create an expression that represents a swtich statement that has a default case.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#35](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#35)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#35](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SwitchCase">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SwitchCase SwitchCase (System.Linq.Expressions.Expression body, params System.Linq.Expressions.Expression[] testValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SwitchCase SwitchCase(class System.Linq.Expressions.Expression body, class System.Linq.Expressions.Expression[] testValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SwitchCase (body As Expression, ParamArray testValues As Expression()) As SwitchCase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SwitchCase ^ SwitchCase(System::Linq::Expressions::Expression ^ body, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ testValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SwitchCase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="testValues" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="b0929-3647">案例的主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3647">The body of the case.</span>
          </span>
        </param>
        <param name="testValues">
          <span data-ttu-id="b0929-3648">案例的測試值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3648">The test values of the case.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3649">建立 <see cref="T:System.Linq.Expressions.SwitchCase" /> 以便用於 <see cref="T:System.Linq.Expressions.SwitchExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3649">Creates a <see cref="T:System.Linq.Expressions.SwitchCase" /> for use in a <see cref="T:System.Linq.Expressions.SwitchExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3650">建立的 <see cref="T:System.Linq.Expressions.SwitchCase" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3650">The created <see cref="T:System.Linq.Expressions.SwitchCase" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SymbolDocument">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3651">建立 <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> 的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3651">Creates an instance of <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SymbolDocument">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SymbolDocumentInfo SymbolDocument (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SymbolDocumentInfo SymbolDocument(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SymbolDocument(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SymbolDocument (fileName As String) As SymbolDocumentInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SymbolDocumentInfo ^ SymbolDocument(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SymbolDocumentInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="b0929-3652">要將 <see cref="T:System.String" /> 設定為與之相等的 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3652">A <see cref="T:System.String" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3653">建立 <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> 的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3653">Creates an instance of <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3654">
            <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />，其 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3654">A <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> that has the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SymbolDocument">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SymbolDocumentInfo SymbolDocument (string fileName, Guid language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SymbolDocumentInfo SymbolDocument(string fileName, valuetype System.Guid language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SymbolDocument (fileName As String, language As Guid) As SymbolDocumentInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SymbolDocumentInfo ^ SymbolDocument(System::String ^ fileName, Guid language);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SymbolDocumentInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="language" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="b0929-3655">要將 <see cref="T:System.String" /> 設定為與之相等的 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3655">A <see cref="T:System.String" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> equal to.</span>
          </span>
        </param>
        <param name="language">
          <span data-ttu-id="b0929-3656">要將 <see cref="T:System.Guid" /> 設定為與之相等的 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3656">A <see cref="T:System.Guid" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" /> equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3657">建立 <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> 的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3657">Creates an instance of <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3658">
            <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />，其 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> 和 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3658">A <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> that has the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> and <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" /> properties set to the specified value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SymbolDocument">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SymbolDocumentInfo SymbolDocument (string fileName, Guid language, Guid languageVendor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SymbolDocumentInfo SymbolDocument(string fileName, valuetype System.Guid language, valuetype System.Guid languageVendor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SymbolDocument (fileName As String, language As Guid, languageVendor As Guid) As SymbolDocumentInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SymbolDocumentInfo ^ SymbolDocument(System::String ^ fileName, Guid language, Guid languageVendor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SymbolDocumentInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="language" Type="System.Guid" />
        <Parameter Name="languageVendor" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="b0929-3659">要將 <see cref="T:System.String" /> 設定為與之相等的 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3659">A <see cref="T:System.String" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> equal to.</span>
          </span>
        </param>
        <param name="language">
          <span data-ttu-id="b0929-3660">要將 <see cref="T:System.Guid" /> 設定為與之相等的 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3660">A <see cref="T:System.Guid" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" /> equal to.</span>
          </span>
        </param>
        <param name="languageVendor">
          <span data-ttu-id="b0929-3661">要將 <see cref="T:System.Guid" /> 設定為與之相等的 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3661">A <see cref="T:System.Guid" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor" /> equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3662">建立 <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> 的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3662">Creates an instance of <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3663">
            <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />，其 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> 和 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" /> 和 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3663">A <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> that has the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> and <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" /> and <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor" /> properties set to the specified value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SymbolDocument">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SymbolDocumentInfo SymbolDocument (string fileName, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SymbolDocumentInfo SymbolDocument(string fileName, valuetype System.Guid language, valuetype System.Guid languageVendor, valuetype System.Guid documentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SymbolDocument (fileName As String, language As Guid, languageVendor As Guid, documentType As Guid) As SymbolDocumentInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SymbolDocumentInfo ^ SymbolDocument(System::String ^ fileName, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SymbolDocumentInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="language" Type="System.Guid" />
        <Parameter Name="languageVendor" Type="System.Guid" />
        <Parameter Name="documentType" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="b0929-3664">要將 <see cref="T:System.String" /> 設定為與之相等的 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3664">A <see cref="T:System.String" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> equal to.</span>
          </span>
        </param>
        <param name="language">
          <span data-ttu-id="b0929-3665">要將 <see cref="T:System.Guid" /> 設定為與之相等的 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3665">A <see cref="T:System.Guid" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" /> equal to.</span>
          </span>
        </param>
        <param name="languageVendor">
          <span data-ttu-id="b0929-3666">要將 <see cref="T:System.Guid" /> 設定為與之相等的 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3666">A <see cref="T:System.Guid" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor" /> equal to.</span>
          </span>
        </param>
        <param name="documentType">
          <span data-ttu-id="b0929-3667">要將 <see cref="T:System.Guid" /> 設定為與之相等的 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.DocumentType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3667">A <see cref="T:System.Guid" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.DocumentType" /> equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3668">建立 <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> 的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3668">Creates an instance of <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3669">
            <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />，其 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" />、<see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" />、<see cref="P:System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor" /> 和 <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.DocumentType" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3669">A <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> that has the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> and <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" /> and <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor" /> and <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.DocumentType" /> properties set to the specified value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Throw">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3670">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，表示擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3670">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a throwing of an exception.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Throw">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Throw (System.Linq.Expressions.Expression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Throw(class System.Linq.Expressions.Expression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Throw (value As Expression) As UnaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Throw(System::Linq::Expressions::Expression ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0929-3671">
            <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3671">An <see cref="T:System.Linq.Expressions.Expression" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3672">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，表示擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3672">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a throwing of an exception.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3673">表示例外狀況的 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3673">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0929-3674">下列範例示範如何建立<xref:System.Linq.Expressions.TryExpression>物件，使用<xref:System.Linq.Expressions.Expression.Throw%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3674">The following example demonstrates how to create a <xref:System.Linq.Expressions.TryExpression> object that uses the <xref:System.Linq.Expressions.Expression.Throw%2A> method.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#47](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#47)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#47](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#47)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Throw">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Throw (System.Linq.Expressions.Expression value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Throw(class System.Linq.Expressions.Expression value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Throw(System::Linq::Expressions::Expression ^ value, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="b0929-3675">
            <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3675">An <see cref="T:System.Linq.Expressions.Expression" />.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="b0929-3676">運算式的新 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3676">The new <see cref="T:System.Type" /> of the expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3677">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，代表擲回含指定之類型的例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3677">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a throwing of an exception with a given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3678">表示例外狀況的 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3678">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the exception.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3679">傳回 <see cref="T:System.Linq.Expressions.Expression" /> 的文字表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3679">Returns a textual representation of the <see cref="T:System.Linq.Expressions.Expression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3680">
            <see cref="T:System.Linq.Expressions.Expression" /> 的文字表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3680">A textual representation of the <see cref="T:System.Linq.Expressions.Expression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCatch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.TryExpression TryCatch (System.Linq.Expressions.Expression body, params System.Linq.Expressions.CatchBlock[] handlers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.TryExpression TryCatch(class System.Linq.Expressions.Expression body, class System.Linq.Expressions.CatchBlock[] handlers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCatch (body As Expression, ParamArray handlers As CatchBlock()) As TryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::TryExpression ^ TryCatch(System::Linq::Expressions::Expression ^ body, ... cli::array &lt;System::Linq::Expressions::CatchBlock ^&gt; ^ handlers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.TryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="handlers" Type="System.Linq.Expressions.CatchBlock[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="b0929-3681">try 區塊的主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3681">The body of the try block.</span>
          </span>
        </param>
        <param name="handlers">
          <span data-ttu-id="b0929-3682">零個或多個 <see cref="T:System.Linq.Expressions.CatchBlock" /> 的陣列，表示要與 try 區塊產生關聯的 catch 陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3682">The array of zero or more <see cref="T:System.Linq.Expressions.CatchBlock" /> expressions representing the catch statements to be associated with the try block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3683">建立 <see cref="T:System.Linq.Expressions.TryExpression" />，代表含 catch 陳述式 (數目不拘) 但不含 fault 區塊或 finally 區塊的 try 區塊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3683">Creates a <see cref="T:System.Linq.Expressions.TryExpression" /> representing a try block with any number of catch statements and neither a fault nor finally block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3684">建立的 <see cref="T:System.Linq.Expressions.TryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3684">The created <see cref="T:System.Linq.Expressions.TryExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0929-3685">下列範例示範如何建立<xref:System.Linq.Expressions.TryExpression>包含 catch 陳述式的物件。</span><span class="sxs-lookup"><span data-stu-id="b0929-3685">The following example demonstrates how to create a <xref:System.Linq.Expressions.TryExpression> object that contains a catch statement.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#47](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#47)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#47](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#47)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCatchFinally">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.TryExpression TryCatchFinally (System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression finally, params System.Linq.Expressions.CatchBlock[] handlers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.TryExpression TryCatchFinally(class System.Linq.Expressions.Expression body, class System.Linq.Expressions.Expression finally, class System.Linq.Expressions.CatchBlock[] handlers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCatchFinally (body As Expression, finally As Expression, ParamArray handlers As CatchBlock()) As TryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::TryExpression ^ TryCatchFinally(System::Linq::Expressions::Expression ^ body, System::Linq::Expressions::Expression ^ finally, ... cli::array &lt;System::Linq::Expressions::CatchBlock ^&gt; ^ handlers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.TryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="finally" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="handlers" Type="System.Linq.Expressions.CatchBlock[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="b0929-3686">try 區塊的主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3686">The body of the try block.</span>
          </span>
        </param>
        <param name="finally">
          <span data-ttu-id="b0929-3687">finally 區塊的主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3687">The body of the finally block.</span>
          </span>
        </param>
        <param name="handlers">
          <span data-ttu-id="b0929-3688">零個或多個 <see cref="T:System.Linq.Expressions.CatchBlock" /> 的陣列，表示要與 try 區塊產生關聯的 catch 陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3688">The array of zero or more <see cref="T:System.Linq.Expressions.CatchBlock" /> expressions representing the catch statements to be associated with the try block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3689">建立 <see cref="T:System.Linq.Expressions.TryExpression" />，代表含 catch 陳述式 (數目不拘) 和 finally 區塊的 try 區塊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3689">Creates a <see cref="T:System.Linq.Expressions.TryExpression" /> representing a try block with any number of catch statements and a finally block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3690">建立的 <see cref="T:System.Linq.Expressions.TryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3690">The created <see cref="T:System.Linq.Expressions.TryExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0929-3691">下列範例示範如何建立<xref:System.Linq.Expressions.TryExpression>物件，其中包含 catch 陳述式和 finally 陳述式。</span><span class="sxs-lookup"><span data-stu-id="b0929-3691">The following example demonstrates how to create a <xref:System.Linq.Expressions.TryExpression> object that contains a catch statement and a finally statement.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#48](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#48)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#48](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFault">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.TryExpression TryFault (System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression fault);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.TryExpression TryFault(class System.Linq.Expressions.Expression body, class System.Linq.Expressions.Expression fault) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFault (body As Expression, fault As Expression) As TryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::TryExpression ^ TryFault(System::Linq::Expressions::Expression ^ body, System::Linq::Expressions::Expression ^ fault);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.TryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="fault" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="b0929-3692">try 區塊的主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3692">The body of the try block.</span>
          </span>
        </param>
        <param name="fault">
          <span data-ttu-id="b0929-3693">fault 區塊的主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3693">The body of the fault block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3694">建立 <see cref="T:System.Linq.Expressions.TryExpression" />，代表含 fault 區塊但不含任何 catch 陳述式的 try 區塊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3694">Creates a <see cref="T:System.Linq.Expressions.TryExpression" /> representing a try block with a fault block and no catch statements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3695">建立的 <see cref="T:System.Linq.Expressions.TryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3695">The created <see cref="T:System.Linq.Expressions.TryExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFinally">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.TryExpression TryFinally (System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression finally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.TryExpression TryFinally(class System.Linq.Expressions.Expression body, class System.Linq.Expressions.Expression finally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFinally (body As Expression, finally As Expression) As TryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::TryExpression ^ TryFinally(System::Linq::Expressions::Expression ^ body, System::Linq::Expressions::Expression ^ finally);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.TryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="finally" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="body">
          <span data-ttu-id="b0929-3696">try 區塊的主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3696">The body of the try block.</span>
          </span>
        </param>
        <param name="finally">
          <span data-ttu-id="b0929-3697">finally 區塊的主體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3697">The body of the finally block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3698">建立 <see cref="T:System.Linq.Expressions.TryExpression" />，代表含 finally 區塊但不含任何 catch 陳述式的 try 區塊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3698">Creates a <see cref="T:System.Linq.Expressions.TryExpression" /> representing a try block with a finally block and no catch statements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3699">建立的 <see cref="T:System.Linq.Expressions.TryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3699">The created <see cref="T:System.Linq.Expressions.TryExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetActionType">
      <MemberSignature Language="C#" Value="public static bool TryGetActionType (Type[] typeArgs, out Type actionType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetActionType(class System.Type[] typeArgs, [out] class System.Type&amp; actionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetActionType (typeArgs As Type(), ByRef actionType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetActionType(cli::array &lt;Type ^&gt; ^ typeArgs, [Runtime::InteropServices::Out] Type ^ % actionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeArgs" Type="System.Type[]" />
        <Parameter Name="actionType" Type="System.Type&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="typeArgs">
          <span data-ttu-id="b0929-3700">Type 物件的陣列，指定 System.Action 委派類型的型別引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3700">An array of Type objects that specify the type arguments for the System.Action delegate type.</span>
          </span>
        </param>
        <param name="actionType">
          <span data-ttu-id="b0929-3701">這個方法在傳回時會包含具有特定型別引數的泛型 System.Action 委派類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3701">When this method returns, contains the generic System.Action delegate type that has specific type arguments.</span>
          </span>
          <span data-ttu-id="b0929-3702">如果沒有符合 <c>typeArgs</c> 的泛型 System.Action 委派，則包含 Null。這個參數以未初始化的狀態傳遞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3702">Contains null if there is no generic System.Action delegate that matches the <c>typeArgs</c>.This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3703">建立 <see cref="P:System.Linq.Expressions.Expression.Type" /> 物件，這個物件代表具有特定類型引數的泛型 System.Action 委派類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3703">Creates a <see cref="P:System.Linq.Expressions.Expression.Type" /> object that represents a generic System.Action delegate type that has specific type arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3704">如果已針對特定 <paramref name="typeArgs" /> 建立泛型 System.Action 委派類型，則傳回 true，否則傳回 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3704">true if generic System.Action delegate type was created for specific <paramref name="typeArgs" />; false otherwise.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetFuncType">
      <MemberSignature Language="C#" Value="public static bool TryGetFuncType (Type[] typeArgs, out Type funcType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetFuncType(class System.Type[] typeArgs, [out] class System.Type&amp; funcType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetFuncType (typeArgs As Type(), ByRef funcType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetFuncType(cli::array &lt;Type ^&gt; ^ typeArgs, [Runtime::InteropServices::Out] Type ^ % funcType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeArgs" Type="System.Type[]" />
        <Parameter Name="funcType" Type="System.Type&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="typeArgs">
          <span data-ttu-id="b0929-3705">Type 物件的陣列，指定 System.Func 委派類型的型別引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3705">An array of Type objects that specify the type arguments for the System.Func delegate type.</span>
          </span>
        </param>
        <param name="funcType">
          <span data-ttu-id="b0929-3706">這個方法在傳回時會包含具有特定型別引數的泛型 System.Func 委派類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3706">When this method returns, contains the generic System.Func delegate type that has specific type arguments.</span>
          </span>
          <span data-ttu-id="b0929-3707">如果沒有符合 <c>typeArgs</c> 的泛型 System.Func 委派，則包含 Null。這個參數以未初始化的狀態傳遞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3707">Contains null if there is no generic System.Func delegate that matches the <c>typeArgs</c>.This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3708">建立 <see cref="P:System.Linq.Expressions.Expression.Type" /> 物件，這個物件代表具有特定類型引數的泛型 System.Func 委派類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3708">Creates a <see cref="P:System.Linq.Expressions.Expression.Type" /> object that represents a generic System.Func delegate type that has specific type arguments.</span>
          </span>
          <span data-ttu-id="b0929-3709">最後一個型別引數指定已建立之委派的傳回型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3709">The last type argument specifies the return type of the created delegate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3710">如果已針對特定 <paramref name="typeArgs" /> 建立泛型 System.Func 委派類型，則傳回 true，否則傳回 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3710">true if generic System.Func delegate type was created for specific <paramref name="typeArgs" />; false otherwise.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public virtual Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.Expression.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ Type { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3711">取得此 <see cref="T:System.Linq.Expressions.Expression" /> 代表之運算式的靜態類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3711">Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b0929-3712">代表運算式靜態類型的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3712">The <see cref="T:System.Type" /> that represents the static type of the expression.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-3713"><xref:System.Linq.Expressions.Expression.NodeType%2A>是運算式樹狀目錄節點的類型，而<xref:System.Linq.Expressions.Expression.Type%2A>代表之運算式節點表示的靜態 common language runtime (CLR) 類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3713">The <xref:System.Linq.Expressions.Expression.NodeType%2A> is the type of the expression tree node, whereas the <xref:System.Linq.Expressions.Expression.Type%2A> represents the static common language runtime (CLR) type of the expression that the node represents.</span></span> <span data-ttu-id="b0929-3714">例如，具有不同節點型別的兩個節點可以有相同<xref:System.Linq.Expressions.Expression.Type%2A>，如下列程式碼範例所示。</span><span class="sxs-lookup"><span data-stu-id="b0929-3714">For example, two nodes with different node types can have the same <xref:System.Linq.Expressions.Expression.Type%2A>, as shown in the following code example.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#36](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#36)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#36](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeAs">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression TypeAs (System.Linq.Expressions.Expression expression, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression TypeAs(class System.Linq.Expressions.Expression expression, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ TypeAs(System::Linq::Expressions::Expression ^ expression, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-3715">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3715">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="b0929-3716">要將 <see cref="T:System.Type" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.Expression.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3716">A <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3717">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，代表明確參考或 Boxing 轉換，其中若轉換失敗，則提供 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3717">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an explicit reference or boxing conversion where <see langword="null" /> is supplied if the conversion fails.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3718">
            <see cref="T:System.Linq.Expressions.UnaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.TypeAs" />，且 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> 和 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3718">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.TypeAs" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> and <see cref="P:System.Linq.Expressions.Expression.Type" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-3719"><xref:System.Linq.Expressions.UnaryExpression.Method%2A>屬性產生<xref:System.Linq.Expressions.UnaryExpression>是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3719">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is `null`.</span></span> <span data-ttu-id="b0929-3720"><xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A>屬性都`false`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3720">The <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> properties are both `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-3721">下列範例示範如何使用<xref:System.Linq.Expressions.Expression.TypeAs%28System.Linq.Expressions.Expression%2CSystem.Type%29>方法來建立<xref:System.Linq.Expressions.UnaryExpression>，代表可為 null 的整數類型不可為 null 的整數運算式的參考轉換。</span><span class="sxs-lookup"><span data-stu-id="b0929-3721">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.TypeAs%28System.Linq.Expressions.Expression%2CSystem.Type%29> method to create a <xref:System.Linq.Expressions.UnaryExpression> that represents the reference conversion of a non-nullable integer expression to the nullable integer type.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#11)]
 [!code-vb[System.Linq.Expressions.Expression#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-3722">
            <paramref name="expression" /> 或 <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3722">
              <paramref name="expression" /> or <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TypeEqual">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.TypeBinaryExpression TypeEqual (System.Linq.Expressions.Expression expression, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.TypeBinaryExpression TypeEqual(class System.Linq.Expressions.Expression expression, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::TypeBinaryExpression ^ TypeEqual(System::Linq::Expressions::Expression ^ expression, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.TypeBinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-3723">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3723">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="T:System.Linq.Expressions.Expression" /> property equal to.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="b0929-3724">要將 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3724">A <see cref="P:System.Linq.Expressions.Expression.Type" /> to set the <see cref="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3725">建立 <see cref="T:System.Linq.Expressions.TypeBinaryExpression" /> 以比較執行階段類型識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3725">Creates a <see cref="T:System.Linq.Expressions.TypeBinaryExpression" /> that compares run-time type identity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3726">
            <see cref="T:System.Linq.Expressions.TypeBinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="M:System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)" /> 以及 <see cref="T:System.Linq.Expressions.Expression" /> 和 <see cref="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" /> 屬性設為指定值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3726">A <see cref="T:System.Linq.Expressions.TypeBinaryExpression" /> for which the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property is equal to <see cref="M:System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)" /> and for which the <see cref="T:System.Linq.Expressions.Expression" /> and <see cref="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" /> properties are set to the specified values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeIs">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.TypeBinaryExpression TypeIs (System.Linq.Expressions.Expression expression, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.TypeBinaryExpression TypeIs(class System.Linq.Expressions.Expression expression, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::TypeBinaryExpression ^ TypeIs(System::Linq::Expressions::Expression ^ expression, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.TypeBinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-3727">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.TypeBinaryExpression.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3727">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.TypeBinaryExpression.Expression" /> property equal to.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="b0929-3728">要將 <see cref="P:System.Linq.Expressions.Expression.Type" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3728">A <see cref="P:System.Linq.Expressions.Expression.Type" /> to set the <see cref="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3729">建立 <see cref="T:System.Linq.Expressions.TypeBinaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3729">Creates a <see cref="T:System.Linq.Expressions.TypeBinaryExpression" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3730">
            <see cref="T:System.Linq.Expressions.TypeBinaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.TypeIs" /> 以及 <see cref="P:System.Linq.Expressions.TypeBinaryExpression.Expression" /> 和 <see cref="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" /> 屬性設為指定值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3730">A <see cref="T:System.Linq.Expressions.TypeBinaryExpression" /> for which the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property is equal to <see cref="F:System.Linq.Expressions.ExpressionType.TypeIs" /> and for which the <see cref="P:System.Linq.Expressions.TypeBinaryExpression.Expression" /> and <see cref="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" /> properties are set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-3731"><xref:System.Linq.Expressions.Expression.Type%2A>屬性產生<xref:System.Linq.Expressions.UnaryExpression>代表<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="b0929-3731">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> represents <xref:System.Boolean>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0929-3732">下列範例示範如何使用<xref:System.Linq.Expressions.Expression.TypeIs%28System.Linq.Expressions.Expression%2CSystem.Type%29>方法來建立<xref:System.Linq.Expressions.TypeBinaryExpression>表示針對字串值的型別測試<xref:System.Int32>型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3732">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.TypeIs%28System.Linq.Expressions.Expression%2CSystem.Type%29> method to create a <xref:System.Linq.Expressions.TypeBinaryExpression> that represents a type test of a string value against the <xref:System.Int32> type.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#12)]
 [!code-vb[System.Linq.Expressions.Expression#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-3733">
            <paramref name="expression" /> 或 <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3733">
              <paramref name="expression" /> or <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UnaryPlus">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3734">建立代表一元加法運算的 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3734">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a unary plus operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UnaryPlus">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression UnaryPlus (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression UnaryPlus(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ UnaryPlus(System::Linq::Expressions::Expression ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-3735">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3735">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3736">建立代表一元加法運算的 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3736">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a unary plus operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3737">
            <see cref="T:System.Linq.Expressions.UnaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.UnaryPlus" />，而 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3737">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.UnaryPlus" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property set to the specified value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-3738"><xref:System.Linq.Expressions.UnaryExpression.Method%2A>屬性產生<xref:System.Linq.Expressions.UnaryExpression>設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3738">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="b0929-3739"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3739">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-3740">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3740">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-3741">否則，它們是 false。</span><span class="sxs-lookup"><span data-stu-id="b0929-3741">Otherwise, they are false.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-3742">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-3742">Implementing Method</span></span>  
 <span data-ttu-id="b0929-3743">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-3743">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-3744">如果`expression`。類型是使用者定義的類型定義一元加法運算子，<xref:System.Reflection.MethodInfo>表示的運算子是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3744">If `expression`.Type is a user-defined type that defines the unary plus operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-3745">否則，如果`expression`。類型是數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3745">Otherwise, if `expression`.Type is a numeric type, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-3746">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-3746">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-3747">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-3747">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-3748">如果`expression`。類型是指派給實作的方法引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3748">If `expression`.Type is assignable to the argument type of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-3749">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3749">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-3750">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-3750">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-3751">`expression`.類型為 null 的實值類型，而且對應的非可為 null 的實值類型等於實作之方法的引數類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3751">`expression`.Type is a nullable value type and the corresponding non-nullable value type is equal to the argument type of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-3752">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3752">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-3753">如果實作的方法是`null`，節點的類型是`expression`。型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3753">If the implementing method is `null`, the type of the node is `expression`.Type.</span></span> <span data-ttu-id="b0929-3754">如果`expression`。類型為非 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3754">If `expression`.Type is non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-3755">否則，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3755">Otherwise, the node is lifted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-3756">
            <paramref name="expression" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3756">
              <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-3757">不會為 <paramref name="expression" />.Type 定義一元正運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3757">The unary plus operator is not defined for <paramref name="expression" />.Type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UnaryPlus">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression UnaryPlus (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression UnaryPlus(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ UnaryPlus(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-3758">要將 <see cref="T:System.Linq.Expressions.Expression" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3758">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="b0929-3759">要將 <see cref="T:System.Reflection.MethodInfo" /> 屬性設定為與之相等的 <see cref="P:System.Linq.Expressions.UnaryExpression.Method" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3759">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> property equal to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3760">建立代表一元加法運算的 <see cref="T:System.Linq.Expressions.UnaryExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3760">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a unary plus operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3761">
            <see cref="T:System.Linq.Expressions.UnaryExpression" />，其 <see cref="P:System.Linq.Expressions.Expression.NodeType" /> 屬性等於 <see cref="F:System.Linq.Expressions.ExpressionType.UnaryPlus" />，且 <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> 和 <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> 屬性設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3761">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.UnaryPlus" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> and <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> properties set to the specified values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-3762"><xref:System.Linq.Expressions.UnaryExpression.Method%2A>屬性產生<xref:System.Linq.Expressions.UnaryExpression>設定為實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3762">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="b0929-3763"><xref:System.Linq.Expressions.Expression.Type%2A>屬性設定為節點的類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3763">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="b0929-3764">如果節點已消除，<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A>和<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A>屬性都`true`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3764">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="b0929-3765">否則，它們是 false。</span><span class="sxs-lookup"><span data-stu-id="b0929-3765">Otherwise, they are false.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="b0929-3766">實作的方法</span><span class="sxs-lookup"><span data-stu-id="b0929-3766">Implementing Method</span></span>  
 <span data-ttu-id="b0929-3767">下列規則決定作業的實作方法：</span><span class="sxs-lookup"><span data-stu-id="b0929-3767">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="b0929-3768">如果`method`不`null`，而它代表非 void， `static` (`Shared`在 Visual Basic 中) 採用一個引數，方法是節點的實作方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3768">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes one argument, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="b0929-3769">如果`expression`。類型是使用者定義的類型定義一元加法運算子，<xref:System.Reflection.MethodInfo>表示的運算子是實作的方法。</span><span class="sxs-lookup"><span data-stu-id="b0929-3769">If `expression`.Type is a user-defined type that defines the unary plus operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-3770">否則，如果`expression`。類型是數值類型，實作的方法是`null`。</span><span class="sxs-lookup"><span data-stu-id="b0929-3770">Otherwise, if `expression`.Type is a numeric type, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="b0929-3771">節點型別和已消除或非消除</span><span class="sxs-lookup"><span data-stu-id="b0929-3771">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="b0929-3772">如果實作的方法不是`null`:</span><span class="sxs-lookup"><span data-stu-id="b0929-3772">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="b0929-3773">如果`expression`。類型是指派給實作的方法引數型別，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3773">If `expression`.Type is assignable to the argument type of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="b0929-3774">節點的類型是實作方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3774">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="b0929-3775">如果符合下列兩種情況，則會消除節點和節點的類型是 null 的型別對應至實作方法的傳回型別：</span><span class="sxs-lookup"><span data-stu-id="b0929-3775">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="b0929-3776">`expression`.類型為 null 的實值類型，而且對應的非可為 null 的實值類型等於實作之方法的引數類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3776">`expression`.Type is a nullable value type and the corresponding non-nullable value type is equal to the argument type of the implementing method.</span></span>  
  
    -   <span data-ttu-id="b0929-3777">實作方法的傳回型別是在不可為 null 的實值類型。</span><span class="sxs-lookup"><span data-stu-id="b0929-3777">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="b0929-3778">如果實作的方法是`null`，節點的類型是`expression`。型別。</span><span class="sxs-lookup"><span data-stu-id="b0929-3778">If the implementing method is `null`, the type of the node is `expression`.Type.</span></span> <span data-ttu-id="b0929-3779">如果`expression`。類型為非 null，則不會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3779">If `expression`.Type is non-nullable, the node is not lifted.</span></span> <span data-ttu-id="b0929-3780">否則，則會消除節點。</span><span class="sxs-lookup"><span data-stu-id="b0929-3780">Otherwise, the node is lifted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b0929-3781">
            <paramref name="expression" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3781">
              <paramref name="expression" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b0929-3782">
            <paramref name="method" /> 不是 <see langword="null" />，而且其代表的方法傳回的是 <see langword="void" />，不是 <see langword="static" /> (在 Visual Basic 中為 <see langword="Shared" />)，或者使用的引數不是剛好一個。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3782">
              <paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly one argument.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b0929-3783">
            <paramref name="method" /> 為 <see langword="null" />，且不會為 <paramref name="expression" />.Type 定義一元正運算子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3783">
              <paramref name="method" /> is <see langword="null" /> and the unary plus operator is not defined for <paramref name="expression" />.Type.</span>
          </span>
          <span data-ttu-id="b0929-3784">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3784">-or-</span>
          </span>
          <span data-ttu-id="b0929-3785">
            <paramref name="expression" />.Type (如果它是可為 Null 的實質類型，則為其對應之不可為 Null 的類型) 無法指派給 <paramref name="method" /> 所代表之方法的引數類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3785">
              <paramref name="expression" />.Type (or its corresponding non-nullable type if it is a nullable value type) is not assignable to the argument type of the method represented by <paramref name="method" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Unbox">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Unbox (System.Linq.Expressions.Expression expression, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Unbox(class System.Linq.Expressions.Expression expression, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Unbox(System::Linq::Expressions::Expression ^ expression, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="b0929-3786">要 Unbox 的 <see cref="T:System.Linq.Expressions.Expression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3786">An <see cref="T:System.Linq.Expressions.Expression" /> to unbox.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="b0929-3787">運算式的新 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3787">The new <see cref="T:System.Type" /> of the expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3788">建立 <see cref="T:System.Linq.Expressions.UnaryExpression" />，代表明確 Unboxing。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3788">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an explicit unboxing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3789">
            <see cref="T:System.Linq.Expressions.UnaryExpression" /> 的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3789">An instance of <see cref="T:System.Linq.Expressions.UnaryExpression" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Variable">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b0929-3790">建立 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 節點，此節點可用以識別運算式樹狀結構中的參數或變數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3790">Creates a <see cref="T:System.Linq.Expressions.ParameterExpression" /> node that can be used to identify a parameter or a variable in an expression tree.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Variable">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ParameterExpression Variable (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ParameterExpression Variable(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Variable(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ParameterExpression ^ Variable(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ParameterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b0929-3791">參數或變數的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3791">The type of the parameter or variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3792">建立 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 節點，此節點可用以識別運算式樹狀結構中的參數或變數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3792">Creates a <see cref="T:System.Linq.Expressions.ParameterExpression" /> node that can be used to identify a parameter or a variable in an expression tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3793">建立含指定之名稱和類型的 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3793">A <see cref="T:System.Linq.Expressions.ParameterExpression" /> node with the specified name and type</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Variable">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ParameterExpression Variable (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ParameterExpression Variable(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Variable(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ParameterExpression ^ Variable(Type ^ type, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ParameterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="b0929-3794">參數或變數的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3794">The type of the parameter or variable.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="b0929-3795">參數或變數的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3795">The name of the parameter or variable.</span>
          </span>
          <span data-ttu-id="b0929-3796">這個名稱僅供偵錯或列印之用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3796">This name is used for debugging or printing purpose only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3797">建立 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 節點，此節點可用以識別運算式樹狀結構中的參數或變數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3797">Creates a <see cref="T:System.Linq.Expressions.ParameterExpression" /> node that can be used to identify a parameter or a variable in an expression tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3798">建立含指定之名稱和類型的 <see cref="T:System.Linq.Expressions.ParameterExpression" /> 節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3798">A <see cref="T:System.Linq.Expressions.ParameterExpression" /> node with the specified name and type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitChildren">
      <MemberSignature Language="C#" Value="protected internal virtual System.Linq.Expressions.Expression VisitChildren (System.Linq.Expressions.ExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitChildren(class System.Linq.Expressions.ExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function VisitChildren (visitor As ExpressionVisitor) As Expression" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Linq::Expressions::Expression ^ VisitChildren(System::Linq::Expressions::ExpressionVisitor ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Linq.Expressions.ExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">
          <span data-ttu-id="b0929-3799">
            <see cref="T:System.Func`2" /> 的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3799">An instance of <see cref="T:System.Func`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b0929-3800">精簡節點，然後呼叫精簡後的運算式上的訪問項委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3800">Reduces the node and then calls the visitor delegate on the reduced expression.</span>
          </span>
          <span data-ttu-id="b0929-3801">如果節點無法縮減，此方法會擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3801">The method throws an exception if the node is not reducible.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b0929-3802">受訪的運算式，或是在樹狀中應取代該運算式的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b0929-3802">The expression being visited, or an expression which should replace it in the tree.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0929-3803">覆寫這個方法提供邏輯，以引導節點的子系。</span><span class="sxs-lookup"><span data-stu-id="b0929-3803">Override this method to provide logic to walk the node's children.</span></span> <span data-ttu-id="b0929-3804">一般的實作會呼叫訪客。在每個子系，請瀏覽和它們的任何變更，應該會傳回已修改的子系本身的新複本。</span><span class="sxs-lookup"><span data-stu-id="b0929-3804">A typical implementation will call visitor.Visit on each of its children, and if any of them change, should return a new copy of itself with the modified children.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>