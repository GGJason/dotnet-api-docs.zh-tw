<Type Name="MemberInitExpression" FullName="System.Linq.Expressions.MemberInitExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eea73783ca97f037cff558ad575cc3c3beb51b89" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37650078" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MemberInitExpression : System.Linq.Expressions.Expression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MemberInitExpression extends System.Linq.Expressions.Expression" />
  <TypeSignature Language="DocId" Value="T:System.Linq.Expressions.MemberInitExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MemberInitExpression&#xA;Inherits Expression" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemberInitExpression sealed : System::Linq::Expressions::Expression" />
  <TypeSignature Language="F#" Value="type MemberInitExpression = class&#xA;    inherit Expression" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Linq.Expressions.Expression</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Linq.Expressions.Expression/MemberInitExpressionProxy))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e8af6-101">代表呼叫建構函式，並初始化新物件的一或多個成員。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e8af6-101">Represents calling a constructor and initializing one or more members of the new object.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8af6-102">使用<xref:System.Linq.Expressions.Expression.MemberInit%2A>factory 方法來建立<xref:System.Linq.Expressions.MemberInitExpression>。</span><span class="sxs-lookup"><span data-stu-id="e8af6-102">Use the <xref:System.Linq.Expressions.Expression.MemberInit%2A> factory methods to create a <xref:System.Linq.Expressions.MemberInitExpression>.</span></span>  
  
 <span data-ttu-id="e8af6-103">值<xref:System.Linq.Expressions.Expression.NodeType%2A>的屬性<xref:System.Linq.Expressions.MemberInitExpression>是<xref:System.Linq.Expressions.ExpressionType.MemberInit>。</span><span class="sxs-lookup"><span data-stu-id="e8af6-103">The value of the <xref:System.Linq.Expressions.Expression.NodeType%2A> property of a <xref:System.Linq.Expressions.MemberInitExpression> is <xref:System.Linq.Expressions.ExpressionType.MemberInit>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8af6-104">下列範例會建立<xref:System.Linq.Expressions.MemberInitExpression>，表示新物件的兩個成員初始化。</span><span class="sxs-lookup"><span data-stu-id="e8af6-104">The following example creates a <xref:System.Linq.Expressions.MemberInitExpression> that represents the initialization of two members of a new object.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#9)]
 [!code-vb[System.Linq.Expressions.Expression#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#9)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="protected internal override System.Linq.Expressions.Expression Accept (System.Linq.Expressions.ExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Linq.Expressions.Expression Accept(class System.Linq.Expressions.ExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.MemberInitExpression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function Accept (visitor As ExpressionVisitor) As Expression" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Linq::Expressions::Expression ^ Accept(System::Linq::Expressions::ExpressionVisitor ^ visitor);" />
      <MemberSignature Language="F#" Value="override this.Accept : System.Linq.Expressions.ExpressionVisitor -&gt; System.Linq.Expressions.Expression" Usage="memberInitExpression.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Linq.Expressions.ExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bindings">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt; Bindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Linq.Expressions.MemberBinding&gt; Bindings" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.MemberInitExpression.Bindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bindings As ReadOnlyCollection(Of MemberBinding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Linq::Expressions::MemberBinding ^&gt; ^ Bindings { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Linq::Expressions::MemberBinding ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Bindings : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;" Usage="System.Linq.Expressions.MemberInitExpression.Bindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.MemberBinding&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8af6-105">取得繫結，這個繫結說明如何初始化新建立物件的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8af6-105">Gets the bindings that describe how to initialize the members of the newly created object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8af6-106">
            <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 物件的 <see cref="T:System.Linq.Expressions.MemberBinding" />，說明如何初始化成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8af6-106">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Linq.Expressions.MemberBinding" /> objects which describe how to initialize the members.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReduce">
      <MemberSignature Language="C#" Value="public override bool CanReduce { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReduce" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.MemberInitExpression.CanReduce" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanReduce As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReduce { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReduce : bool" Usage="System.Linq.Expressions.MemberInitExpression.CanReduce" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8af6-107">取得值，指出是否可以減少運算式樹狀架構的節點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8af6-107">Gets a value that indicates whether the expression tree node can be reduced.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8af6-108">如果節點可以精簡則為 true，否則為 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8af6-108">True if the node can be reduced, otherwise false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewExpression">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.NewExpression NewExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.NewExpression NewExpression" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.MemberInitExpression.NewExpression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewExpression As NewExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Linq::Expressions::NewExpression ^ NewExpression { System::Linq::Expressions::NewExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewExpression : System.Linq.Expressions.NewExpression" Usage="System.Linq.Expressions.MemberInitExpression.NewExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8af6-109">取得表示建構函式呼叫的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8af6-109">Gets the expression that represents the constructor call.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8af6-110">表示建構函式呼叫的 <see cref="T:System.Linq.Expressions.NewExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8af6-110">A <see cref="T:System.Linq.Expressions.NewExpression" /> that represents the constructor call.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override sealed System.Linq.Expressions.ExpressionType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Linq.Expressions.ExpressionType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.MemberInitExpression.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property NodeType As ExpressionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Linq::Expressions::ExpressionType NodeType { System::Linq::Expressions::ExpressionType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Linq.Expressions.ExpressionType" Usage="System.Linq.Expressions.MemberInitExpression.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ExpressionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8af6-111">傳回這個 Expression 的節點型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8af6-111">Returns the node type of this Expression.</span>
          </span>
          <span data-ttu-id="e8af6-112">延伸節點覆寫這個方法時應該傳回 <see cref="F:System.Linq.Expressions.ExpressionType.Extension" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8af6-112">Extension nodes should return <see cref="F:System.Linq.Expressions.ExpressionType.Extension" /> when overriding this method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8af6-113">運算式的 <see cref="T:System.Linq.Expressions.ExpressionType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8af6-113">The <see cref="T:System.Linq.Expressions.ExpressionType" /> of the expression.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reduce">
      <MemberSignature Language="C#" Value="public override System.Linq.Expressions.Expression Reduce ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.Expressions.Expression Reduce() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.MemberInitExpression.Reduce" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Reduce () As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::Expressions::Expression ^ Reduce();" />
      <MemberSignature Language="F#" Value="override this.Reduce : unit -&gt; System.Linq.Expressions.Expression" Usage="memberInitExpression.Reduce " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e8af6-114">將 <see cref="T:System.Linq.Expressions.MemberInitExpression" /> 精簡為更簡單的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8af6-114">Reduces the <see cref="T:System.Linq.Expressions.MemberInitExpression" /> to a simpler expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8af6-115">精簡的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8af6-115">The reduced expression.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8af6-116">如果`CanReduce`方法傳回時，則為 true，此方法應傳回有效的運算式。</span><span class="sxs-lookup"><span data-stu-id="e8af6-116">If the `CanReduce` method returns true, this method should return a valid expression.</span></span>  
  
 <span data-ttu-id="e8af6-117">這個方法可以傳回哪些本身必須精簡的另一個節點。</span><span class="sxs-lookup"><span data-stu-id="e8af6-117">This method is allowed to return another node which itself must be reduced.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public override sealed Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.MemberInitExpression.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="System.Linq.Expressions.MemberInitExpression.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e8af6-118">取得此 <see cref="T:System.Linq.Expressions.Expression" /> 代表之運算式的靜態類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8af6-118">Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e8af6-119">代表運算式靜態類型的 <see cref="P:System.Linq.Expressions.MemberInitExpression.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8af6-119">The <see cref="P:System.Linq.Expressions.MemberInitExpression.Type" /> that represents the static type of the expression.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.MemberInitExpression Update (System.Linq.Expressions.NewExpression newExpression, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt; bindings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Linq.Expressions.MemberInitExpression Update(class System.Linq.Expressions.NewExpression newExpression, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.MemberBinding&gt; bindings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.MemberInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::MemberInitExpression ^ Update(System::Linq::Expressions::NewExpression ^ newExpression, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::MemberBinding ^&gt; ^ bindings);" />
      <MemberSignature Language="F#" Value="member this.Update : System.Linq.Expressions.NewExpression * seq&lt;System.Linq.Expressions.MemberBinding&gt; -&gt; System.Linq.Expressions.MemberInitExpression" Usage="memberInitExpression.Update (newExpression, bindings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberInitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" />
        <Parameter Name="bindings" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt;" />
      </Parameters>
      <Docs>
        <param name="newExpression">
          <span data-ttu-id="e8af6-120">結果的 <see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8af6-120">The <see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" /> property of the result.</span>
          </span>
        </param>
        <param name="bindings">
          <span data-ttu-id="e8af6-121">結果的 <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8af6-121">The <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" /> property of the result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e8af6-122">建立類似這個運算式的新運算式，但使用提供的子系。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8af6-122">Creates a new expression that is like this one, but using the supplied children.</span>
          </span>
          <span data-ttu-id="e8af6-123">如果所有子系都相同，則會傳回這個運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8af6-123">If all of the children are the same, it will return this expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e8af6-124">如果未變更任何子系，則為這個運算式；否則為已更新子系的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e8af6-124">This expression if no children are changed or an expression with the updated children.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>