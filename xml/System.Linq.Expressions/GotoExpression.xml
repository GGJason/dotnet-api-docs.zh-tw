<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="GotoExpression.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5089808c005cefbf7272900caf2bb22e782f528af.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">089808c005cefbf7272900caf2bb22e782f528af</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Linq.Expressions.GotoExpression">
          <source>Represents an unconditional jump.</source>
          <target state="translated">代表無條件跳躍。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Linq.Expressions.GotoExpression">
          <source>This includes return statements, break and continue statements, and other jumps.</source>
          <target state="translated">這包括 return 陳述式、break 和 continue 陳述式，以及其他跳躍。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Expressions.GotoExpression">
          <source>The following example demonstrates how to create an expression that contains a <ph id="ph1">&lt;xref:System.Linq.Expressions.GotoExpression&gt;</ph> object by using the <ph id="ph2">&lt;xref:System.Linq.Expressions.Expression.Goto%2A&gt;</ph> method.</source>
          <target state="translated">下列範例示範如何建立包含的運算式<ph id="ph1">&lt;xref:System.Linq.Expressions.GotoExpression&gt;</ph>物件使用<ph id="ph2">&lt;xref:System.Linq.Expressions.Expression.Goto%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.GotoExpression.Kind">
          <source>The kind of the "go to" expression.</source>
          <target state="translated">「移至」運算式的類型。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.GotoExpression.Kind">
          <source>Serves information purposes only.</source>
          <target state="translated">只做為資訊參考之用。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.GotoExpression.Kind">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.GotoExpressionKind" /&gt;</ph> object representing the kind of the "go to" expression.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.Expressions.GotoExpressionKind" /&gt;</ph> 物件，表示「移至」運算式的類型。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.GotoExpression.NodeType">
          <source>Returns the node type of this <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph>.</source>
          <target state="translated">傳回這個 <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> 的節點型別。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.GotoExpression.NodeType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.ExpressionType" /&gt;</ph> that represents this expression.</source>
          <target state="translated">表示這個運算式的 <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.ExpressionType" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.GotoExpression.Target">
          <source>The target label where this node jumps to.</source>
          <target state="translated">這個節點跳至的目標標籤。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.GotoExpression.Target">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.LabelTarget" /&gt;</ph> object representing the target label for this node.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.Expressions.LabelTarget" /&gt;</ph> 物件，表示這個節點的目標標籤。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.GotoExpression.Type">
          <source>Gets the static type of the expression that this <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> represents.</source>
          <target state="translated">取得此 <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> 代表之運算式的靜態類型。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.GotoExpression.Type">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.GotoExpression.Type" /&gt;</ph> that represents the static type of the expression.</source>
          <target state="translated">代表運算式靜態類型的 <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.GotoExpression.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.GotoExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.GotoExpression.Target" /&gt;</ph> property of the result.</source>
          <target state="translated">結果的 <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.GotoExpression.Target" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.GotoExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.GotoExpression.Value" /&gt;</ph> property of the result.</source>
          <target state="translated">結果的 <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.GotoExpression.Value" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.GotoExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)">
          <source>Creates a new expression that is like this one, but using the supplied children.</source>
          <target state="translated">建立類似這個運算式的新運算式，但使用提供的子系。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.GotoExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)">
          <source>If all of the children are the same, it will return this expression.</source>
          <target state="translated">如果所有子系都相同，則會傳回這個運算式。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.GotoExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)">
          <source>This expression if no children are changed or an expression with the updated children.</source>
          <target state="translated">如果未變更任何子系，則為這個運算式；否則為已更新子系的運算式。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.GotoExpression.Value">
          <source>The value passed to the target, or null if the target is of type System.Void.</source>
          <target state="translated">傳遞給目標的值，如果目標為 System.Void 型別則為 null。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.GotoExpression.Value">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> object representing the value passed to the target or null.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> 物件，表示傳遞給目標的值，或者是 null。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>