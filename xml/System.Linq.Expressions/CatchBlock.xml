<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CatchBlock.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fed88ba0b7144ee41b7e9e9c9905ef20ae739025.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fed88ba0b7144ee41b7e9e9c9905ef20ae739025</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Linq.Expressions.CatchBlock">
          <source>Represents a catch statement in a try block.</source>
          <target state="translated">代表 try 區塊中的 catch 陳述式。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Expressions.CatchBlock">
          <source>The <ph id="ph1">&lt;xref:System.Linq.Expressions.Expression.Catch%2A&gt;</ph> methods can be used to create a <ph id="ph2">&lt;xref:System.Linq.Expressions.CatchBlock&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Linq.Expressions.Expression.Catch%2A&gt;</ph>方法可以用來建立<ph id="ph2">&lt;xref:System.Linq.Expressions.CatchBlock&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.CatchBlock.Body">
          <source>Gets the body of the catch block.</source>
          <target state="translated">取得 catch 區塊的主體。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.CatchBlock.Body">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> object representing the catch body.</source>
          <target state="translated">表示 catch 主體的 <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.CatchBlock.Filter">
          <source>Gets the body of the <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.CatchBlock" /&gt;</ph> filter.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.CatchBlock" /&gt;</ph> 篩選條件的主體。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.CatchBlock.Filter">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> object representing the body of the <ph id="ph2">&lt;see cref="T:System.Linq.Expressions.CatchBlock" /&gt;</ph> filter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> 物件，表示 <ph id="ph2">&lt;see cref="T:System.Linq.Expressions.CatchBlock" /&gt;</ph> 篩選條件的主體。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.CatchBlock.Test">
          <source>Gets the type of <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> this handler catches.</source>
          <target state="translated">取得這個處理常式所攔截 <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> 的型別。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.CatchBlock.Test">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object representing the type of <ph id="ph2">&lt;see cref="T:System.Exception" /&gt;</ph> this handler catches.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 物件，表示這個處理常式所攔截 <ph id="ph2">&lt;see cref="T:System.Exception" /&gt;</ph> 的型別。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.CatchBlock.ToString">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that represents the current <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">傳回表示目前 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> </target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.CatchBlock.ToString">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that represents the current <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> ，代表目前的 <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.CatchBlock.Update(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.CatchBlock.Variable" /&gt;</ph> property of the result.</source>
          <target state="translated">結果的 <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.CatchBlock.Variable" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.CatchBlock.Update(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.CatchBlock.Filter" /&gt;</ph> property of the result.</source>
          <target state="translated">結果的 <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.CatchBlock.Filter" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.CatchBlock.Update(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.CatchBlock.Body" /&gt;</ph> property of the result.</source>
          <target state="translated">結果的 <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.CatchBlock.Body" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.CatchBlock.Update(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
          <source>Creates a new expression that is like this one, but using the supplied children.</source>
          <target state="translated">建立類似這個運算式的新運算式，但使用提供的子系。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.CatchBlock.Update(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
          <source>If all of the children are the same, it will return this expression.</source>
          <target state="translated">如果所有子系都相同，則會傳回這個運算式。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.CatchBlock.Update(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
          <source>This expression if no children are changed or an expression with the updated children.</source>
          <target state="translated">如果未變更任何子系，則為這個運算式；否則為已更新子系的運算式。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.CatchBlock.Variable">
          <source>Gets a reference to the <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> object caught by this handler.</source>
          <target state="translated">取得這個處理常式所攔截 <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> 物件的參考。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.CatchBlock.Variable">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.ParameterExpression" /&gt;</ph> object representing a reference to the <ph id="ph2">&lt;see cref="T:System.Exception" /&gt;</ph> object caught by this handler.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.Expressions.ParameterExpression" /&gt;</ph> 物件，表示這個處理常式所攔截 <ph id="ph2">&lt;see cref="T:System.Exception" /&gt;</ph> 物件的參考。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>