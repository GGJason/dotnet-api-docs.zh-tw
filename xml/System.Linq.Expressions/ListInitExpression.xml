<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ListInitExpression.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f63f1fb9a99af5b5e10f0fda10d6d4ff06992039.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f63f1fb9a99af5b5e10f0fda10d6d4ff06992039</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Linq.Expressions.ListInitExpression">
          <source>Represents a constructor call that has a collection initializer.</source>
          <target state="translated">代表具有集合初始設定式的建構函式呼叫。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Expressions.ListInitExpression">
          <source>Use the <ph id="ph1">&lt;xref:System.Linq.Expressions.Expression.ListInit%2A&gt;</ph> factory methods to create a <ph id="ph2">&lt;xref:System.Linq.Expressions.ListInitExpression&gt;</ph>.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Linq.Expressions.Expression.ListInit%2A&gt;</ph>factory 方法，來建立<ph id="ph2">&lt;xref:System.Linq.Expressions.ListInitExpression&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Expressions.ListInitExpression">
          <source>The value of the <ph id="ph1">&lt;xref:System.Linq.Expressions.Expression.NodeType%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Linq.Expressions.ListInitExpression&gt;</ph> is <ph id="ph3">&lt;xref:System.Linq.Expressions.ExpressionType.ListInit&gt;</ph>.</source>
          <target state="translated">值<ph id="ph1">&lt;xref:System.Linq.Expressions.Expression.NodeType%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Linq.Expressions.ListInitExpression&gt;</ph>是<ph id="ph3">&lt;xref:System.Linq.Expressions.ExpressionType.ListInit&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.Expressions.ListInitExpression">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Linq.Expressions.ListInitExpression&gt;</ph> that represents the initialization of a new dictionary instance that has two key-value pairs.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Linq.Expressions.ListInitExpression&gt;</ph>，表示具有兩個索引鍵-值組的新字典執行個體初始化。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.ListInitExpression.CanReduce">
          <source>Gets a value that indicates whether the expression tree node can be reduced.</source>
          <target state="translated">取得值，指出是否可以減少運算式樹狀架構的節點。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.ListInitExpression.CanReduce">
          <source>True if the node can be reduced, otherwise false.</source>
          <target state="translated">如果節點可以精簡則為 true，否則為 false。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.ListInitExpression.Initializers">
          <source>Gets the element initializers that are used to initialize a collection.</source>
          <target state="translated">取得可用來初始化集合的項目初始化設定式。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.ListInitExpression.Initializers">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Linq.Expressions.ElementInit" /&gt;</ph> objects which represent the elements that are used to initialize the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> 物件的 <ph id="ph2">&lt;see cref="T:System.Linq.Expressions.ElementInit" /&gt;</ph>，表示用於初始化集合的項目。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.ListInitExpression.NewExpression">
          <source>Gets the expression that contains a call to the constructor of a collection type.</source>
          <target state="translated">取得運算式，這個運算式包含對集合型別之建構函式的呼叫。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.ListInitExpression.NewExpression">
          <source>A <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.NewExpression" /&gt;</ph> that represents the call to the constructor of a collection type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.Expressions.NewExpression" /&gt;</ph>，表示對集合型別之建構函式的呼叫。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.ListInitExpression.NodeType">
          <source>Returns the node type of this <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph>.</source>
          <target state="translated">傳回這個 <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> 的節點型別。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.ListInitExpression.NodeType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.ExpressionType" /&gt;</ph> that represents this expression.</source>
          <target state="translated">表示這個運算式的 <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.ExpressionType" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.ListInitExpression.Reduce">
          <source>Reduces the binary expression node to a simpler expression.</source>
          <target state="translated">將二進位運算式節點精簡為更簡單的運算式。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.ListInitExpression.Reduce">
          <source>The reduced expression.</source>
          <target state="translated">精簡的運算式。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Expressions.ListInitExpression.Reduce">
          <source>If the <ph id="ph1">`CanReduce`</ph> method returns true, this method should return a valid expression.</source>
          <target state="translated">如果<ph id="ph1">`CanReduce`</ph>方法會傳回 true，此方法應傳回有效的運算式。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Linq.Expressions.ListInitExpression.Reduce">
          <source>This method is allowed to return another node which itself must be reduced.</source>
          <target state="translated">這個方法可以傳回另一個節點本身必須精簡。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Linq.Expressions.ListInitExpression.Type">
          <source>Gets the static type of the expression that this <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> represents.</source>
          <target state="translated">取得此 <ph id="ph1">&lt;see cref="T:System.Linq.Expressions.Expression" /&gt;</ph> 代表之運算式的靜態類型。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.Expressions.ListInitExpression.Type">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.ListInitExpression.Type" /&gt;</ph> that represents the static type of the expression.</source>
          <target state="translated">代表運算式靜態類型的 <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.ListInitExpression.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.ListInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /&gt;</ph> property of the result.</source>
          <target state="translated">結果的 <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.ListInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})">
          <source>The <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /&gt;</ph> property of the result.</source>
          <target state="translated">結果的 <ph id="ph1">&lt;see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.ListInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})">
          <source>Creates a new expression that is like this one, but using the supplied children.</source>
          <target state="translated">建立類似這個運算式的新運算式，但使用提供的子系。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.ListInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})">
          <source>If all of the children are the same, it will return this expression.</source>
          <target state="translated">如果所有子系都相同，則會傳回這個運算式。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Linq.Expressions.ListInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})">
          <source>This expression if no children are changed or an expression with the updated children.</source>
          <target state="translated">如果未變更任何子系，則為這個運算式；否則為已更新子系的運算式。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>