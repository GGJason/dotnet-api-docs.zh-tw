<Type Name="ConstraintCollection" FullName="System.Data.ConstraintCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="32afeb70327b5ac7218829de95ce74f7d33d9370" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30399532" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ConstraintCollection : System.Data.InternalDataCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ConstraintCollection extends System.Data.InternalDataCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Data.ConstraintCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConstraintCollection&#xA;Inherits InternalDataCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConstraintCollection sealed : System::Data::InternalDataCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.InternalDataCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("CollectionChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.ConstraintsCollectionEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示為 <see cref="T:System.Data.DataTable" /> 的條件約束 (Constraint) 集合。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.ConstraintCollection>存取透過<xref:System.Data.DataTable.Constraints%2A?displayProperty=nameWithType>屬性。  
  
 <xref:System.Data.ConstraintCollection>可以同時包含<xref:System.Data.UniqueConstraint>和<xref:System.Data.ForeignKeyConstraint>物件<xref:System.Data.DataTable>。 A<xref:System.Data.UniqueConstraint>物件可確保在特定的資料行中的資料永遠會是唯一為了保留資料完整性。 <xref:System.Data.ForeignKeyConstraint>決定所發生的狀況中相關資料表時的資料<xref:System.Data.DataTable>更新或刪除。 例如，如果資料列遭到刪除，<xref:System.Data.ForeignKeyConstraint>會決定相關的資料列是否也要刪除 (cascade) 或其他採取的動作。  
  
> [!NOTE]
>  當您將加入<xref:System.Data.DataRelation>會建立兩個資料表之間的關聯性<xref:System.Data.DataSet>，這兩個<xref:System.Data.ForeignKeyConstraint>和<xref:System.Data.UniqueConstraint>會自動建立。 <xref:System.Data.UniqueConstraint>套用至父主要索引鍵資料行<xref:System.Data.DataTable>，並將條件約束加入資料表的<xref:System.Data.ConstraintCollection>。 <xref:System.Data.ForeignKeyConstraint>套用至主索引鍵資料行和外部索引鍵資料行，並將條件約束加入子資料表<xref:System.Data.ConstraintCollection>。  
  
 <xref:System.Data.ConstraintCollection>使用標準的收集方法，例如<xref:System.Data.ConstraintCollection.Add%2A>， <xref:System.Data.ConstraintCollection.Clear%2A>，和<xref:System.Data.ConstraintCollection.Remove%2A>。 此外，<xref:System.Data.ConstraintCollection.Contains%2A>方法可以用來尋找特定的條件約束，在集合中是否存在。  
  
 A<xref:System.Data.UniqueConstraint>時，會建立<xref:System.Data.DataColumn>具有其<xref:System.Data.DataColumn.Unique%2A>屬性設定為`true`加入至<xref:System.Data.DataTable>物件的<xref:System.Data.DataColumnCollection>。  
  
 A<xref:System.Data.ForeignKeyConstraint>時，會建立<xref:System.Data.DataRelation>加入至<xref:System.Data.DataSet>物件的<xref:System.Data.DataRelationCollection>。  
  
   
  
## Examples  
 第一個範例會建立<xref:System.Data.DataTable>，並將<xref:System.Data.DataColumn>(使用其<xref:System.Data.DataColumn.Unique%2A>屬性設定為`true`) 至<xref:System.Data.DataColumnCollection>。 第二個範例會建立<xref:System.Data.DataSet>、 兩個<xref:System.Data.DataTable>物件、 四個資料行，和<xref:System.Data.DataRelation>。 條件約束的計數會列印到顯示<xref:System.Data.ForeignKeyConstraint>和<xref:System.Data.UniqueConstraint>時，會建立<xref:System.Data.DataRelation>加入至<xref:System.Data.DataSet>物件的<xref:System.Data.DataRelationCollection.%23ctor%2A>。  
  
 [!code-csharp[Classic WebData ConstraintCollection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>此類型是安全多執行緒的讀取作業。 您必須同步處理任何寫入作業。</threadsafe>
    <altmember cref="T:System.Data.ForeignKeyConstraint" />
    <altmember cref="T:System.Data.UniqueConstraint" />
    <altmember cref="T:System.Data.DataRelation" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將 <see cref="T:System.Data.Constraint" /> 物件加入至集合。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Data.Constraint constraint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Data.Constraint constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Data::Constraint ^ constraint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Data.Constraint" />
      </Parameters>
      <Docs>
        <param name="constraint">要加入的 <see langword="Constraint" />。</param>
        <summary>將指定的 <see cref="T:System.Data.Constraint" /> 物件加入至集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果集合已成功變更加入或移除條件約束，藉以<xref:System.Data.ConstraintCollection.CollectionChanged>就會發生事件。  
  
   
  
## Examples  
 下列範例會將<xref:System.Data.UniqueConstraint>至<xref:System.Data.ConstraintCollection>的<xref:System.Data.DataTable>。  
  
 [!code-csharp[Classic WebData ConstraintCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="constraint" /> 引數為 null。</exception>
        <exception cref="T:System.ArgumentException">條件約束已經屬於此集合，或屬於另一個集合。</exception>
        <exception cref="T:System.Data.DuplicateNameException">集合已經有相同名稱的條件約束。 (這項比較不會區分大小寫。)</exception>
        <altmember cref="T:System.Data.UniqueConstraint" />
        <altmember cref="T:System.Data.ForeignKeyConstraint" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.Constraint Add (string name, System.Data.DataColumn column, bool primaryKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Constraint Add(string name, class System.Data.DataColumn column, bool primaryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (name As String, column As DataColumn, primaryKey As Boolean) As Constraint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Constraint ^ Add(System::String ^ name, System::Data::DataColumn ^ column, bool primaryKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="primaryKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <see langword="UniqueConstraint" /> 的名稱。</param>
        <param name="column">條件約束套用至的 <see cref="T:System.Data.DataColumn" />。</param>
        <param name="primaryKey">指定資料行是否應為主索引鍵。 如果是 <see langword="true" />，表示資料行將會是主索引鍵資料行。</param>
        <summary>使用指定的名稱、<see cref="T:System.Data.UniqueConstraint" /> 和表示資料行是否為主索引鍵的值，來建構新的 <see cref="T:System.Data.DataColumn" />，並將它加入至集合中。</summary>
        <returns>新的 <see langword="UniqueConstraint" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.ConstraintCollection.CollectionChanged>如果成功加入條件約束，就會發生事件。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Data.ConstraintCollection.Add%2A>方法來建立並加入新<xref:System.Data.UniqueConstraint>至<xref:System.Data.ConstraintCollection>。  
  
 [!code-csharp[Classic WebData ConstraintCollection.Add2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.Add2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">條件約束已屬於這個集合。  
  
 -或者-  
  
 條件約束屬於另一個集合。</exception>
        <exception cref="T:System.Data.DuplicateNameException">集合已經有指定名稱的條件約束 (這項比較不會區分大小寫。)</exception>
        <altmember cref="T:System.Data.UniqueConstraint" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.Constraint Add (string name, System.Data.DataColumn primaryKeyColumn, System.Data.DataColumn foreignKeyColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Constraint Add(string name, class System.Data.DataColumn primaryKeyColumn, class System.Data.DataColumn foreignKeyColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (name As String, primaryKeyColumn As DataColumn, foreignKeyColumn As DataColumn) As Constraint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Constraint ^ Add(System::String ^ name, System::Data::DataColumn ^ primaryKeyColumn, System::Data::DataColumn ^ foreignKeyColumn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="primaryKeyColumn" Type="System.Data.DataColumn" />
        <Parameter Name="foreignKeyColumn" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.Data.ForeignKeyConstraint" /> 的名稱。</param>
        <param name="primaryKeyColumn">主索引鍵，或父 <see cref="T:System.Data.DataColumn" />。</param>
        <param name="foreignKeyColumn">外部索引鍵，或子 <see cref="T:System.Data.DataColumn" />。</param>
        <summary>使用指定的名稱、父資料行和子資料行建構新的 <see cref="T:System.Data.ForeignKeyConstraint" />，並將條件約束加入至集合。</summary>
        <returns>新的 <see langword="ForeignKeyConstraint" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.ConstraintCollection.CollectionChanged>如果成功加入條件約束，就會發生事件。  
  
   
  
## Examples  
 下列範例會將新<xref:System.Data.ForeignKeyConstraint>至<xref:System.Data.ConstraintCollection>的<xref:System.Data.DataTable>。  
  
 [!code-csharp[Classic WebData ConstraintCollection.Add3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.Add3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.Constraint Add (string name, System.Data.DataColumn[] columns, bool primaryKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Constraint Add(string name, class System.Data.DataColumn[] columns, bool primaryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (name As String, columns As DataColumn(), primaryKey As Boolean) As Constraint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Constraint ^ Add(System::String ^ name, cli::array &lt;System::Data::DataColumn ^&gt; ^ columns, bool primaryKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="columns" Type="System.Data.DataColumn[]" />
        <Parameter Name="primaryKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.Data.UniqueConstraint" /> 的名稱。</param>
        <param name="columns">條件約束套用至的 <see cref="T:System.Data.DataColumn" /> 物件的陣列。</param>
        <param name="primaryKey">指定資料行是否應為主索引鍵。 如果是 <see langword="true" />，表示資料行將會是主索引鍵資料行。</param>
        <summary>使用指定的名稱、<see cref="T:System.Data.UniqueConstraint" /> 物件的陣列，以及表示資料行是否為主索引鍵的值，來建構新的 <see cref="T:System.Data.DataColumn" />，並將它加入至集合中。</summary>
        <returns>新的 <see langword="UniqueConstraint" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.ConstraintCollection.CollectionChanged>如果成功加入條件約束，就會發生事件。  
  
   
  
## Examples  
 下列範例會建立的陣列<xref:System.Data.DataColumn>用來建立新物件<xref:System.Data.UniqueConstraint>中特定<xref:System.Data.DataTable>。  
  
 [!code-csharp[Classic WebData ConstraintCollection.Add1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.Add1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">條件約束已屬於這個集合。  
  
 -或者-  
  
 條件約束屬於另一個集合。</exception>
        <exception cref="T:System.Data.DuplicateNameException">集合已經有指定名稱的條件約束 (這項比較不會區分大小寫。)</exception>
        <altmember cref="T:System.Data.UniqueConstraint" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.Constraint Add (string name, System.Data.DataColumn[] primaryKeyColumns, System.Data.DataColumn[] foreignKeyColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Constraint Add(string name, class System.Data.DataColumn[] primaryKeyColumns, class System.Data.DataColumn[] foreignKeyColumns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (name As String, primaryKeyColumns As DataColumn(), foreignKeyColumns As DataColumn()) As Constraint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Constraint ^ Add(System::String ^ name, cli::array &lt;System::Data::DataColumn ^&gt; ^ primaryKeyColumns, cli::array &lt;System::Data::DataColumn ^&gt; ^ foreignKeyColumns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="primaryKeyColumns" Type="System.Data.DataColumn[]" />
        <Parameter Name="foreignKeyColumns" Type="System.Data.DataColumn[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.Data.ForeignKeyConstraint" /> 的名稱。</param>
        <param name="primaryKeyColumns">
          <see cref="T:System.Data.DataColumn" /> 物件 (為主索引鍵或父資料行) 的陣列。</param>
        <param name="foreignKeyColumns">
          <see cref="T:System.Data.DataColumn" /> 物件 (為外部索引鍵或子資料行) 的陣列。</param>
        <summary>使用父資料行和子資料行的指定陣列，建構新的 <see cref="T:System.Data.ForeignKeyConstraint" />，並將條件約束加入至集合。</summary>
        <returns>新的 <see langword="ForeignKeyConstraint" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.ConstraintCollection.CollectionChanged>如果成功加入條件約束，就會發生事件。  
  
   
  
## Examples  
 下列範例會建立兩個陣列<xref:System.Data.DataColumn>物件，並接著會建立兩個<xref:System.Data.ForeignKeyConstraint>資料集內的兩個資料表之間的關聯性。  
  
 [!code-csharp[Classic WebData ConstraintCollection.Add4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.Add4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Add4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Data.Constraint[] constraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Data.Constraint[] constraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (constraints As Constraint())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Data::Constraint ^&gt; ^ constraints);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraints" Type="System.Data.Constraint[]" />
      </Parameters>
      <Docs>
        <param name="constraints">要加入至集合中之 <see cref="T:System.Data.ConstraintCollection" /> 物件的陣列。</param>
        <summary>將指定的 <see cref="T:System.Data.ConstraintCollection" /> 陣列元素複製到集合的末端。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Data.DataTable.BeginInit%2A>呼叫之後`AddRange`不將任何物件新增到集合中，直到<xref:System.Data.DataTable.EndInit%2A>呼叫。 同時，`EndInit`是呼叫，集合會填入最新的呼叫中指定的項目`AddRange`。 如果`AddRange`內多次呼叫`BeginInit`  /  `EndInit`排序時，只有最新的呼叫中指定這些項目`AddRange`加入。  
  
   
  
## Examples  
 下列範例會建立主要和外部索引鍵條件約束，並將其加入<xref:System.Data.ConstraintCollection>。  
  
 [!code-csharp[Classic WebData ConstraintCollection.AddRange Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.AddRange Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.AddRange Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.AddRange Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemove">
      <MemberSignature Language="C#" Value="public bool CanRemove (System.Data.Constraint constraint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanRemove(class System.Data.Constraint constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanRemove(System::Data::Constraint ^ constraint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Data.Constraint" />
      </Parameters>
      <Docs>
        <param name="constraint">針對從集合移除以測試的 <see cref="T:System.Data.Constraint" />。</param>
        <summary>指示是否能移除 <see cref="T:System.Data.Constraint" />。</summary>
        <returns>
          如果可以從集合中移除 <see cref="T:System.Data.Constraint" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設行為時<xref:System.Data.DataRelation>加入至<xref:System.Data.DataSet>，是將<xref:System.Data.ForeignKeyConstraint>父資料表和<xref:System.Data.UniqueConstraint>到子資料表。 <xref:System.Data.UniqueConstraint>套用至父資料表的主索引鍵資料行和<xref:System.Data.ForeignKeyConstraint>套用至子資料表的外部索引鍵資料行。 因為嘗試移除<xref:System.Data.UniqueConstraint>之前移除<xref:System.Data.ForeignKeyConstraint>擲回例外狀況的原因，您應該一律使用<xref:System.Data.ConstraintCollection.CanRemove%2A>方法，然後再呼叫 [移除]，並確定<xref:System.Data.UniqueConstraint>可以移除。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Data.ConstraintCollection.CanRemove%2A>方法，以判斷是否<xref:System.Data.Constraint>可以移除，然後再嘗試將它移除。  
  
 [!code-csharp[Classic WebData ConstraintCollection.CanRemove Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.CanRemove Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.CanRemove Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.CanRemove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>清除任何 <see cref="T:System.Data.Constraint" /> 物件的集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.ConstraintCollection.CollectionChanged>這個動作成功時，就會發生事件。  
  
   
  
## Examples  
 下列範例會清除所有的條件約束從<xref:System.Data.ConstraintCollection>。  
  
 [!code-csharp[Classic WebData ConstraintCollection.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CollectionChangeEventHandler CollectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.ConstraintCollection.CollectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CollectionChanged As CollectionChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CollectionChangeEventHandler ^ CollectionChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CollectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>由於正在加入或移除 <see cref="T:System.Data.ConstraintCollection" /> 物件而導致 <see cref="T:System.Data.Constraint" /> 變更時，就會發生此情況。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需處理事件的詳細資訊，請參閱[NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Data.ConstraintCollection.CollectionChanged>事件。  
  
 [!code-csharp[Classic WebData ConstraintCollection.CollectionChanged Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.CollectionChanged Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.CollectionChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.CollectionChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">條件約束的 <see cref="P:System.Data.Constraint.ConstraintName" />。</param>
        <summary>指示依名稱所指定的 <see cref="T:System.Data.Constraint" /> 物件是否存在於集合中。</summary>
        <returns>
          如果集合包含指定的條件約束，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Data.ConstraintCollection.Contains%2A>方法，以判斷是否指定<xref:System.Data.Constraint>存在，再嘗試從集合中移除。 您也可以使用<xref:System.Data.ConstraintCollection.CanRemove%2A>方法，以判斷是否<xref:System.Data.Constraint>可以移除。  
  
   
  
## Examples  
 下列範例會判斷是否指定<xref:System.Data.Constraint>存在於<xref:System.Data.ConstraintCollection>其刪除之前。  
  
 [!code-csharp[Classic WebData ConstraintCollection.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Data.Constraint[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Data.Constraint[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Constraint(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Data::Constraint ^&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Data.Constraint[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">一維 <see cref="T:System.Array" />，是從集合複製之值的目的端。</param>
        <param name="index">要開始插入的陣列索引。</param>
        <summary>將集合物件複製到指定索引開頭的一維 <see cref="T:System.Array" /> 執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得指定 <see cref="T:System.Data.Constraint" /> 的索引。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Data.Constraint constraint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Data.Constraint constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Data::Constraint ^ constraint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Data.Constraint" />
      </Parameters>
      <Docs>
        <param name="constraint">要搜尋的 <see cref="T:System.Data.Constraint" />。</param>
        <summary>取得指定 <see cref="T:System.Data.Constraint" /> 的索引。</summary>
        <returns>
          <see cref="T:System.Data.Constraint" /> 之以零起始的索引 (如果位於集合中)，否則為 -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Data.ConstraintCollection.IndexOf%2A>方法以傳回要做為索引<xref:System.Data.ConstraintCollection.Contains%2A>或<xref:System.Data.ConstraintCollection.Remove%2A>方法。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Data.ConstraintCollection.IndexOf%2A>方法來傳回索引<xref:System.Data.Constraint>。 索引會傳遞至<xref:System.Data.ConstraintCollection.Contains%2A>方法移除之前，來判斷集合是否包含條件約束。  
  
 [!code-csharp[Classic WebData ConstraintCollection.IndexOf1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.IndexOf1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.IndexOf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.IndexOf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.ConstraintCollection.Contains(System.String)" />
        <altmember cref="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)" />
        <altmember cref="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string constraintName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string constraintName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.IndexOf(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (constraintName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ constraintName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraintName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="constraintName">
          <see cref="T:System.Data.Constraint" /> 的名稱。</param>
        <summary>取得根據名稱所指定的 <see cref="T:System.Data.Constraint" /> 之索引。</summary>
        <returns>
          <see cref="T:System.Data.Constraint" /> 的索引 (如果位於集合中)，否則為 -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Data.ConstraintCollection.IndexOf%2A>方法以傳回要做為索引<xref:System.Data.ConstraintCollection.Contains%2A>或<xref:System.Data.ConstraintCollection.Remove%2A>方法。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Data.ConstraintCollection.IndexOf%2A>方法來傳回索引<xref:System.Data.Constraint>。 索引會傳遞至<xref:System.Data.ConstraintCollection.Contains%2A>方法來判斷集合是否包含條件約束，然後再移除它。  
  
 [!code-csharp[Classic WebData ConstraintCollection.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.ConstraintCollection.Contains(System.String)" />
        <altmember cref="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)" />
        <altmember cref="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>從集合中取得指定的 <see cref="T:System.Data.Constraint" />。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Data.Constraint this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Constraint Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.ConstraintCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Constraint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Constraint ^ default[int] { System::Data::Constraint ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要傳回之條件約束的索引。</param>
        <summary>從集合的指定索引處取得 <see cref="T:System.Data.Constraint" />。</summary>
        <value>指定索引處的 <see cref="T:System.Data.Constraint" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Data.ConstraintCollection.Contains%2A>方法來測試是否存在特定的條件約束。  
  
   
  
## Examples  
 下列範例會取得每個<xref:System.Data.Constraint>從<xref:System.Data.ConstraintCollection>。  
  
 [!code-csharp[Classic WebData ConstraintCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">索引值大於集合中項目的數目。</exception>
        <altmember cref="M:System.Data.ConstraintCollection.Contains(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Data.Constraint this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Constraint Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.ConstraintCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As Constraint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Constraint ^ default[System::String ^] { System::Data::Constraint ^ get(System::String ^ name); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Constraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">要傳回之條件約束的 <see cref="P:System.Data.Constraint.ConstraintName" />。</param>
        <summary>以指定名稱從集合取得 <see cref="T:System.Data.Constraint" />。</summary>
        <value>具有指定名稱的 <see cref="T:System.Data.Constraint" />，否則為 Null 值 (如果 <see cref="T:System.Data.Constraint" /> 不存在)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Data.ConstraintCollection.Contains%2A>方法來測試是否存在特定的條件約束。  
  
   
  
## Examples  
 下列範例會取得的具名<xref:System.Data.Constraint>。  
  
 [!code-csharp[Classic WebData ConstraintCollection.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="protected override System.Collections.ArrayList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList List" />
      <MemberSignature Language="DocId" Value="P:System.Data.ConstraintCollection.List" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property List As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::ArrayList ^ List { System::Collections::ArrayList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將 <see cref="T:System.Data.Constraint" /> 從 <see cref="T:System.Data.ConstraintCollection" /> 中移除。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Data.Constraint constraint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Data.Constraint constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Data::Constraint ^ constraint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Data.Constraint" />
      </Parameters>
      <Docs>
        <param name="constraint">要移除的 <see cref="T:System.Data.Constraint" />。</param>
        <summary>從集合移除指定的 <see cref="T:System.Data.Constraint" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用之前`Remove`方法，您可以使用<xref:System.Data.ConstraintCollection.Contains%2A>方法來判斷集合是否包含目標<xref:System.Data.Constraint>，而<xref:System.Data.ConstraintCollection.CanRemove%2A>方法，以判斷是否<xref:System.Data.Constraint>可以移除。  
  
 <xref:System.Data.ConstraintCollection.CollectionChanged>如果已成功移除條件約束，就會發生事件。  
  
   
  
## Examples  
 [!code-csharp[Classic WebData ConstraintCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="constraint" /> 引數為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">條件約束不屬於集合。</exception>
        <altmember cref="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)" />
        <altmember cref="M:System.Data.ConstraintCollection.Contains(System.String)" />
        <altmember cref="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">要移除的 <see cref="T:System.Data.Constraint" /> 名稱。</param>
        <summary>從集合中移除名稱所指定的 <see cref="T:System.Data.Constraint" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用之前`Remove`方法，您可以使用<xref:System.Data.ConstraintCollection.Contains%2A>方法來判斷集合是否包含目標<xref:System.Data.Constraint>，而<xref:System.Data.ConstraintCollection.CanRemove%2A>方法，以判斷是否<xref:System.Data.Constraint>可以移除。  
  
 <xref:System.Data.ConstraintCollection.CollectionChanged>如果已成功移除條件約束，就會發生事件。  
  
   
  
## Examples  
 下列範例會移除<xref:System.Data.Constraint>從<xref:System.Data.ConstraintCollection>之後測試欄位是否存在與<xref:System.Data.ConstraintCollection.Contains%2A>方法，以及是否與移除<xref:System.Data.ConstraintCollection.CanRemove%2A>方法。  
  
 [!code-csharp[Classic WebData ConstraintCollection.Remove1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Remove1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.Remove1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.Remove1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)" />
        <altmember cref="M:System.Data.ConstraintCollection.Contains(System.String)" />
        <altmember cref="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要移除的 <see cref="T:System.Data.Constraint" /> 的索引。</param>
        <summary>從集合移除指定之索引處的 <see cref="T:System.Data.Constraint" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.ConstraintCollection.IndexOf%2A>方法會傳回特定索引<xref:System.Data.Constraint>。  
  
 使用之前`RemoveAt`方法，您可以使用<xref:System.Data.ConstraintCollection.Contains%2A>方法來判斷集合是否包含目標<xref:System.Data.Constraint>，而<xref:System.Data.ConstraintCollection.CanRemove%2A>方法，以判斷是否<xref:System.Data.Constraint>可以移除。  
  
 <xref:System.Data.ConstraintCollection.CollectionChanged>如果已成功移除條件約束，就會發生事件。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Data.ConstraintCollection.IndexOf%2A>方法並搭配<xref:System.Data.ConstraintCollection.RemoveAt%2A>方法中移除的條件約束<xref:System.Data.ConstraintCollection>。  
  
 [!code-csharp[Classic WebData ConstraintCollection.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic WebData ConstraintCollection.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData ConstraintCollection.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">集合在這個索引處沒有條件約束。</exception>
        <altmember cref="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)" />
        <altmember cref="M:System.Data.ConstraintCollection.Contains(System.String)" />
        <altmember cref="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)" />
      </Docs>
    </Member>
  </Members>
</Type>