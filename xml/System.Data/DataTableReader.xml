<Type Name="DataTableReader" FullName="System.Data.DataTableReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="29593a8cafbdc6b69f6caeda60868612a408b7dc" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37670267" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataTableReader : System.Data.Common.DbDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataTableReader extends System.Data.Common.DbDataReader" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataTableReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataTableReader&#xA;Inherits DbDataReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTableReader sealed : System::Data::Common::DbDataReader" />
  <TypeSignature Language="F#" Value="type DataTableReader = class&#xA;    inherit DbDataReader" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Data.DataTableReader" /> 會以一或多個唯讀、順向結果集的形式，取得一或多個 <see cref="T:System.Data.DataTable" /> 物件的內容。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTableReader>運作方式十分類似任何其他資料讀取器這類<xref:System.Data.SqlClient.SqlDataReader>，差異在於<xref:System.Data.DataTableReader>逐一查看中的資料列提供<xref:System.Data.DataTable>。 換句話說，它會提供用於逐一查看快取中的資料列。 您可以修改快取的資料而<xref:System.Data.DataTableReader>為作用中，而且讀取器會自動維護它的位置。  
  
 當您建立<xref:System.Data.DataTableReader>從<xref:System.Data.DataTable>，產生<xref:System.Data.DataTableReader>物件包含一個結果集具有相同的資料為<xref:System.Data.DataTable>從它建立，除了已標示為已刪除的任何資料列。 資料行出現在相同的順序，與原始<xref:System.Data.DataTable>。 傳回的結果的結構中有相同的結構描述和資料與原始<xref:System.Data.DataTable>。 A<xref:System.Data.DataTableReader>呼叫中建立<xref:System.Data.DataSet.CreateDataReader*>方法<xref:System.Data.DataSet>物件包含多個結果集，如果<xref:System.Data.DataSet>包含一個以上的資料表。 結果會依照相同的順序<xref:System.Data.DataTable>中的物件<xref:System.Data.DataTableCollection>的<xref:System.Data.DataSet>物件。  
  
 傳回的結果集包含的目前版本的每個<xref:System.Data.DataRow>; 標示為刪除的資料列會略過。  
  
 `DataTableReader`提供的穩定迭代器，也就是內容`DataTableReader`如果期間反覆項目經過修改基礎集合的大小不會失效。 例如，如果一個或多個中的資料列<xref:System.Data.DataTable.Rows%2A>集合已被刪除或移除在反覆項目內的目前位置`DataTableReader`會適當地維護並不會使迭代器。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Data.DataTableReader" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTableReader (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTableReader(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTableReader : System.Data.DataTable -&gt; System.Data.DataTableReader" Usage="new System.Data.DataTableReader dataTable" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <see cref="T:System.Data.DataTable" />，新的 <see cref="T:System.Data.DataTableReader" /> 從中取得其結果集。</param>
        <summary>使用所提供之 <see cref="T:System.Data.DataTableReader" /> 的資料，初始化 <see cref="T:System.Data.DataTable" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTableReader (System.Data.DataTable[] dataTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.DataTable[] dataTables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataTables As DataTable())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTableReader(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTableReader : System.Data.DataTable[] -&gt; System.Data.DataTableReader" Usage="new System.Data.DataTableReader dataTables" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" />
      </Parameters>
      <Docs>
        <param name="dataTables">
          <see cref="T:System.Data.DataTable" /> 物件的陣列，該物件可以為新的 <see cref="T:System.Data.DataTableReader" /> 物件提供結果。</param>
        <summary>使用 <see cref="T:System.Data.DataTableReader" /> 物件所提供的陣列，初始化 <see cref="T:System.Data.DataTable" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您必須建立<xref:System.Data.DataTableReader>根據所有或特定內的資料表子集<xref:System.Data.DataSet>，呼叫`DataSet`的<xref:System.Data.DataSet.CreateDataReader*>方法。 如果您想要建立新<xref:System.Data.DataTableReader>執行個體根據一組`DataTable`有不相關的執行個體使用這個建構函式。 您也可以利用這個建構函式，若要重新排列的排序`DataTables`內`DataTableReader`，如果其來源內排序`DataSet`不符合您的需求。  
  
   
  
## Examples  
 在下列範例中，TestConstructor 方法會建立兩個<xref:System.Data.DataTable>執行個體。 為了示範這個建構函式<xref:System.Data.DataTableReader>類別，此範例會建立新`DataTableReader`根據陣列，其中包含兩個`DataTables`，並執行簡單的作業前, 幾個資料行的內容列印至主控台視窗。 若要測試此應用程式，請建立新的主控台應用程式，並將範例程式碼貼到新建立的檔案。  
  
 [!code-csharp[DataWorks DataTableReader.ctor#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.ctor/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.ctor/VB/source.vb#1)]  
  
 主控台視窗會顯示下列結果：  
  
```  
1 Mary  
2 Andy  
3 Peter  
4 Russ  
1 Wireless Network Card  
2 Hard Drive  
3 Monitor  
4 CPU  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="dataTableReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>關閉目前的 <see cref="T:System.Data.DataTableReader" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫`Close()`上關閉`DataTableReader`物件不會引發錯誤。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.DataTableReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Data.DataTableReader" /> 目前資料列的巢狀深度。</summary>
        <value>目前資料列的巢狀深度，一定都是零。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `DataTableReader` 不支援巢狀結構。 `Depth`屬性一律會傳回零。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldCount : int" Usage="System.Data.DataTableReader.FieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>傳回目前資料列中的資料行數目。</summary>
        <value>當未位於有效結果集時，則為 0，否則為目前資料列中的資料行數目。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">嘗試擷取已關閉之 <see cref="T:System.Data.DataTableReader" /> 中的欄位計數。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetBoolean : int -&gt; bool" Usage="dataTableReader.GetBoolean ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">以零為基底的資料行序數。</param>
        <summary>取得指定的資料行值做為 <see cref="T:System.Boolean" />。</summary>
        <returns>指定的資料行值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不會進行轉換;因此擷取的資料必須已經是布林值或強制為布林值，或會產生例外狀況。  
  
 呼叫<xref:System.Data.DataTableReader.IsDBNull%2A>來呼叫這個方法之前是否有 null 值。  
  
   
  
## Examples  
 下列範例會顯示 2 內傳入的資料行的內容<xref:System.Data.DataTableReader>。 如果值在特定的資料列內的資料行是 null，則程式碼會顯示文字\<NULL >。 如果資料行中的不正確的型別，則範例會顯示每個資料列的錯誤訊息。  
  
 [!code-csharp[DataWorks DataTableReader.GetBoolean#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBoolean/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetBoolean#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBoolean/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">嘗試從已刪除的資料列擷取資料。</exception>
        <exception cref="T:System.InvalidOperationException">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
        <exception cref="T:System.InvalidCastException">指定的資料行不包含 <see langword="Boolean" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (ordinal As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetByte : int -&gt; byte" Usage="dataTableReader.GetByte ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">以零為基底的資料行序數。</param>
        <summary>取得指定資料行的值做為位元組。</summary>
        <returns>指定的資料行值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不會進行轉換;因此位元組或強制為 byte，必須已經是所擷取的資料。  
  
 呼叫<xref:System.Data.DataTableReader.IsDBNull%2A>來呼叫這個方法之前是否有 null 值。  
  
   
  
## Examples  
 下列範例會顯示 2 內傳入的資料行的內容<xref:System.Data.DataTableReader>。 如果值在特定的資料列內的資料行是 null，則程式碼會顯示文字\<NULL >。 如果資料行中的不正確的型別，則範例會顯示每個資料列的錯誤訊息。  
  
 [!code-csharp[DataWorks DataTableReader.GetByte#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetByte/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetByte#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetByte/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">嘗試從已刪除的資料列擷取資料。</exception>
        <exception cref="T:System.InvalidOperationException">嘗試在關閉的 <see langword="DataTableReader" /> 中讀取或存取資料行。</exception>
        <exception cref="T:System.InvalidCastException">指定的資料行不包含位元組。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int ordinal, long dataIndex, byte[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 ordinal, int64 dataIndex, unsigned int8[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (ordinal As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int ordinal, long dataIndex, cli::array &lt;System::Byte&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int * int64 * byte[] * int * int -&gt; int64" Usage="dataTableReader.GetBytes (ordinal, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">以零為基底的資料行序數。</param>
        <param name="dataIndex">要開始讀取作業之欄位中的索引。</param>
        <param name="buffer">要將位元組資料流讀取到其中的緩衝區。</param>
        <param name="bufferIndex">緩衝區中的索引，從該處開始放置資料。</param>
        <param name="length">複製入緩衝區的最大長度。</param>
        <summary>從指定的資料行位移開始，將位元組的資料流讀入緩衝區，做為從指定的緩衝區位移開始的陣列。</summary>
        <returns>讀取的實際位元組數目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `GetBytes` 在欄位中傳回可用位元組的數。 大多數情況下這是欄位的實際長度。 不過，傳回的數字可能小於欄位的長度，則為 true 如果`GetBytes`已經使用來取得位元組的欄位。 這可能是，比方說，當<xref:System.Data.DataTableReader>讀入緩衝區的大型資料結構  
  
 如果您傳遞的緩衝區`null`(`Nothing` Visual Basic 中)，`GetBytes`傳回整個欄位的長度，以位元組為單位，而非剩餘大小緩衝區的位移參數為基礎。  
  
 不會進行轉換;因此擷取的資料必須已經是位元組陣列或強制為位元組陣列。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Data.DataTableReader>根據 AdventureWorks 範例資料庫，並將每個映像擷取到 C:\ 資料夾中的個別檔案中的資料。 若要測試此應用程式，請建立新的主控台應用程式、 參考 System.Drawing.dll 組件，並將範例程式碼貼到新建立的檔案。  
  
 [!code-csharp[DataWorks DataTableReader.GetBytes#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBytes/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetBytes#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBytes/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">嘗試從已刪除的資料列擷取資料。</exception>
        <exception cref="T:System.InvalidOperationException">嘗試在關閉的 <see langword="DataTableReader" /> 中讀取或存取資料行。</exception>
        <exception cref="T:System.InvalidCastException">指定的資料行不包含位元組陣列。</exception>
        <altmember cref="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (ordinal As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetChar : int -&gt; char" Usage="dataTableReader.GetChar ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">以零為基底的資料行序數。</param>
        <summary>取得指定資料行的值做為字元。</summary>
        <returns>資料行的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不會進行轉換;因此擷取的資料必須已經是字元或強制為字元。  
  
 呼叫<xref:System.Data.DataTableReader.IsDBNull%2A>來呼叫這個方法之前是否有 null 值。  
  
   
  
## Examples  
 下列範例會顯示傳入 DataTableReader 內的 2 的資料行的內容。 如果值在特定的資料列內的資料行是 null，則程式碼會顯示文字\<NULL >。 如果資料行中的不正確的型別，則範例會顯示每個資料列的錯誤訊息。  
  
 [!code-csharp[DataWorks DataTableReader.GetChar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChar/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetChar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChar/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">嘗試從已刪除的資料列擷取資料。</exception>
        <exception cref="T:System.InvalidOperationException">嘗試在關閉的 <see langword="DataTableReader" /> 中讀取或存取資料行。</exception>
        <exception cref="T:System.InvalidCastException">指定的欄位不包含字元。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int ordinal, long dataIndex, char[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 ordinal, int64 dataIndex, char[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (ordinal As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int ordinal, long dataIndex, cli::array &lt;char&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetChars : int * int64 * char[] * int * int -&gt; int64" Usage="dataTableReader.GetChars (ordinal, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">以零為基底的資料行序數。</param>
        <param name="dataIndex">要開始讀取作業之欄位中的索引。</param>
        <param name="buffer">要讀入字元資料流的目的緩衝區。</param>
        <param name="bufferIndex">緩衝區中的索引，從該處開始放置資料。</param>
        <param name="length">複製入緩衝區的最大長度。</param>
        <summary>傳回指定資料行的值做為字元陣列。</summary>
        <returns>讀取的實際字元數目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `GetChars` 在欄位中傳回可用字元的數。 大多數情況下這是欄位的實際長度。 不過，傳回的數字可能小於欄位的長度，則為 true 如果`GetChars`已經使用從欄位取得字元。  
  
 如果欄位結尾為止，實際讀取的字元數目可以小於所要求的長度。 如果您傳遞緩衝區為 null (`Nothing`在 Visual Basic 中)，`GetChars`傳回整個欄位的長度，以字元為單位，而非剩餘大小緩衝區的位移參數為基礎。  
  
 不會進行轉換;因此要擷取的資料必須已經是字元陣列或強制為字元陣列。  
  
   
  
## Examples  
 下列範例示範`GetChars`方法。 `TestGetChars`方法應傳遞`DataTableReader`填滿資料的兩個資料行： 第一個資料行，並在第二個字元的陣列中的檔案名稱。 颾魤 ㄛ`TestGetChars`可讓您指定的字元陣列中讀取資料時要使用的緩衝區大小`DataTableReader`。 `TestGetChars` 建立對應至每個資料列中的資料檔案`DataTableReader`，使用所提供的資料中的第一個資料行`DataTableReader`做為檔案名稱。  
  
 此程序示範如何使用`GetChars`方法讀取的資料會儲存在`DataTable`做為字元陣列。 任何其他類型的資料會導致`GetChars`方法會擲回`InvalidCastException`。  
  
 [!code-csharp[DataWorks DataTableReader.GetChars#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChars/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChars/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">嘗試從已刪除的資料列擷取資料。</exception>
        <exception cref="T:System.InvalidOperationException">嘗試在關閉的 <see langword="DataTableReader" /> 中讀取或存取資料行。</exception>
        <exception cref="T:System.InvalidCastException">指定的資料行不包含字元陣列。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDataTypeName : int -&gt; string" Usage="dataTableReader.GetDataTypeName ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">以零為基底的資料行序數。</param>
        <summary>取得字串，表示指定之資料行的資料型別。</summary>
        <returns>字串，表示資料行的資料型別。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTableReader.GetDataTypeName%2A>方法一律會傳回基礎類型<xref:System.Data.DataColumn>而不是特定提供者類型。  
  
   
  
## Examples  
 下列主控台應用程式會顯示一份欄位和其類型名稱，從簡單<xref:System.Data.DataTable>:  
  
 [!code-csharp[DataWorks DataTableReader.GetDataTypeName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDataTypeName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDataTypeName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDataTypeName/VB/source.vb#1)]  
  
 主控台視窗會顯示下列結果：  
  
```  
ID: Int32  
Name: String  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
        <exception cref="T:System.InvalidOperationException">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (ordinal As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDateTime : int -&gt; DateTime" Usage="dataTableReader.GetDateTime ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">以零為基底的資料行序數。</param>
        <summary>取得指定之資料行的值做為 <see cref="T:System.DateTime" /> 物件。</summary>
        <returns>指定的資料行值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不會進行轉換;因此必須已經是所擷取的資料<xref:System.DateTime>或強制型轉為`DataTime`。  
  
 呼叫<xref:System.Data.DataTableReader.IsDBNull%2A>來呼叫這個方法之前是否有 null 值。  
  
   
  
## Examples  
 下列範例會顯示 2 內傳入的資料行的內容<xref:System.Data.DataTableReader>。 如果值在特定的資料列內的資料行是 null，則程式碼會顯示文字\<NULL >。 如果資料行中的不正確的型別，則範例會顯示每個資料列的錯誤訊息。  
  
 [!code-csharp[DataWorks DataTableReader.GetDateTime#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDateTime/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDateTime#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDateTime/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">嘗試從已刪除的資料列擷取資料。</exception>
        <exception cref="T:System.InvalidOperationException">嘗試在關閉的 <see langword="DataTableReader" /> 中讀取或存取資料行。</exception>
        <exception cref="T:System.InvalidCastException">指定的資料行不包含 DateTime 值。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (ordinal As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDecimal : int -&gt; decimal" Usage="dataTableReader.GetDecimal ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">以零為基底的資料行序數。</param>
        <summary>取得指定的資料行值做為 <see cref="T:System.Decimal" />。</summary>
        <returns>指定的資料行值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不會進行轉換;因此必須已經是所擷取的資料<xref:System.Decimal>或強制型轉為`Decimal`。  
  
 呼叫<xref:System.Data.DataTableReader.IsDBNull%2A>來呼叫這個方法之前是否有 null 值。  
  
   
  
## Examples  
 下列範例會顯示 2 內傳入的資料行的內容<xref:System.Data.DataTableReader>。 如果值在特定的資料列內的資料行是 null，則程式碼會顯示文字\<NULL >。 如果資料行中的不正確的型別，則範例會顯示每個資料列的錯誤訊息。  
  
 [!code-csharp[DataWorks DataTableReader.GetDecimal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDecimal/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDecimal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDecimal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">嘗試從已刪除的資料列擷取資料。</exception>
        <exception cref="T:System.InvalidOperationException">嘗試在關閉的 <see langword="DataTableReader" /> 中讀取或存取資料行。</exception>
        <exception cref="T:System.InvalidCastException">指定的資料行不包含 <see langword="Decimal" /> 值。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (ordinal As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDouble : int -&gt; double" Usage="dataTableReader.GetDouble ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">資料行以零為起始的序數。</param>
        <summary>取得資料行的值做為雙精確度浮點數。</summary>
        <returns>指定的資料行值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不會進行轉換;因此擷取的資料必須已經是雙精確度浮點數，或必須是可強迫雙精確度浮點數。  
  
 呼叫<xref:System.Data.DataTableReader.IsDBNull%2A>來呼叫這個方法之前是否有 null 值。  
  
   
  
## Examples  
 下列範例會顯示 2 內傳入的資料行的內容<xref:System.Data.DataTableReader>。 如果值在特定的資料列內的資料行是 null，則程式碼會顯示文字\<NULL >。 如果資料行中的不正確的型別，則範例會顯示每個資料列的錯誤訊息。  
  
 [!code-csharp[DataWorks DataTableReader.GetDouble#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDouble/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDouble#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDouble/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">嘗試從已刪除的資料列擷取資料。</exception>
        <exception cref="T:System.InvalidOperationException">嘗試在關閉的 <see langword="DataTableReader" /> 中讀取或存取資料行。</exception>
        <exception cref="T:System.InvalidCastException">指定的資料行不包含雙精確度浮點數。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="dataTableReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回可用來逐一查看項目集合的列舉值。</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerator" /> 物件，表示項目集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 列舉值只允許讀取的資料<xref:System.Data.DataTableReader>。 列舉值無法用來修改基礎集合中。  
  
 一開始，列舉值位於集合中的第一個項目之前。 在這個位置上，呼叫<xref:System.Collections.IEnumerator.Current%2A>會擲回例外狀況。 因此，在讀取 `MoveNext` 的值之前，必須呼叫 `Current` 以將列舉值前移至集合的第一個項目。  
  
 `Current` 會傳回<xref:System.Data.Common.DbDataRecord>，並傳回相同的物件，直到<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>呼叫。 `MoveNext` 會將 `Current` 設定為下一個項目。  
  
 傳遞集合的結尾後，列舉值會放置在集合中的最後一個元素之後和呼叫`MoveNext`會傳回 false。 如果上次呼叫`MoveNext`傳回`false`，則呼叫`Current`會擲回例外狀況。 此外，因為<xref:System.Data.DataTableReader>提供順向存取其資料，呼叫<xref:System.Collections.IEnumerator.Reset%2A>IEnumerator 的方法會擲回<xref:System.NotSupportedException>。  
  
 <xref:System.Data.DataTableReader>提供穩定的列舉值。 這表示，即使基礎資料中發生的資料列刪除或新增項目，列舉值傳回呼叫<xref:System.Data.DataTableReader.GetEnumerator%2A>仍然有效。  
  
   
  
## Examples  
 下列範例示範 <xref:System.Data.DataTableReader.GetEnumerator%2A> 方法的用法。 這包括列舉值的行為，從基礎刪除資料列時<xref:System.Data.DataTable>列舉值為使用中時。  
  
 [!code-csharp[DataWorks DataTableReader.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetEnumerator/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetEnumerator/VB/source.vb#1)]  
  
 程序會在主控台視窗中顯示下列文字：  
  
```  
Peter  
Mary  
Russ  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetFieldType : int -&gt; Type" Usage="dataTableReader.GetFieldType ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">以零為基底的資料行序數。</param>
        <summary>取得 <see cref="T:System.Type" />，即是物件的資料型別。</summary>
        <returns>
          <see cref="T:System.Type" />，此為物件的資料類型。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 呼叫下列的程序，並傳入<xref:System.Data.DataTableReader>執行個體，以顯示在主控台視窗中的所有欄位和每種類型的完整名稱的清單。  
  
 [!code-csharp[DataWorks DataTableReader.GetFieldType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFieldType/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetFieldType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFieldType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
        <exception cref="T:System.InvalidOperationException">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (ordinal As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetFloat : int -&gt; single" Usage="dataTableReader.GetFloat ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">以零為基底的資料行序數。</param>
        <summary>取得指定資料行的值做為單精確度浮點數。</summary>
        <returns>資料行的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不會進行轉換;因此擷取的資料必須已經是單精確度浮點數，或必須是可強迫單精確度浮點數。  
  
 呼叫<xref:System.Data.DataTableReader.IsDBNull%2A>來呼叫這個方法之前是否有 null 值。  
  
   
  
## Examples  
 下列範例會顯示 2 內傳入的資料行的內容<xref:System.Data.DataTableReader>。 如果值在特定的資料列內的資料行是 null，則程式碼會顯示文字\<NULL >。 如果資料行中的不正確的型別，則範例會顯示每個資料列的錯誤訊息。  
  
 [!code-csharp[DataWorks DataTableReader.GetFloat#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFloat/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetFloat#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFloat/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">嘗試從已刪除的資料列擷取資料。</exception>
        <exception cref="T:System.InvalidOperationException">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
        <exception cref="T:System.InvalidCastException">指定的資料行不包含單精確度浮點數。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (ordinal As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetGuid : int -&gt; Guid" Usage="dataTableReader.GetGuid ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">以零為基底的資料行序數。</param>
        <summary>取得指定資料行的值做為全域唯一識別項 (GUID)。</summary>
        <returns>指定的資料行值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不會進行轉換;因此必須已經是所擷取的資料<xref:System.Guid>或強制型轉為`Guid`。  
  
 呼叫<xref:System.Data.DataTableReader.IsDBNull%2A>來呼叫這個方法之前是否有 null 值。  
  
   
  
## Examples  
 下列範例會顯示傳入 DataTableReader 內的 2 的資料行的內容。 如果值在特定的資料列內的資料行是 null，則程式碼會顯示文字\<NULL >。 如果資料行中的不正確的型別，則範例會顯示每個資料列的錯誤訊息。  
  
 [!code-csharp[DataWorks DataTableReader.GetGuid#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetGuid/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetGuid#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetGuid/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">嘗試從已刪除的資料列擷取資料。</exception>
        <exception cref="T:System.InvalidOperationException">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
        <exception cref="T:System.InvalidCastException">指定的資料行不包含 GUID。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (ordinal As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt16 : int -&gt; int16" Usage="dataTableReader.GetInt16 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">以零為基底的資料行序數</param>
        <summary>取得指定資料行的值做為 16 位元帶正負號的整數。</summary>
        <returns>指定的資料行值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不會進行轉換;因此，必須已經是所擷取的資料<xref:System.Int16>或強制型轉為`Int16`。  
  
 呼叫<xref:System.Data.DataTableReader.IsDBNull%2A>來呼叫這個方法之前是否有 null 值。  
  
   
  
## Examples  
 下列範例會顯示 2 內傳入的資料行的內容<xref:System.Data.DataTableReader>。 如果值在特定的資料列內的資料行是 null，則程式碼會顯示文字\<NULL >。 如果資料行中的不正確的型別，則範例會顯示每個資料列的錯誤訊息。  
  
 [!code-csharp[DataWorks DataTableReader.GetInt16#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt16/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt16#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt16/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">嘗試從已刪除的資料列擷取資料。</exception>
        <exception cref="T:System.InvalidOperationException">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
        <exception cref="T:System.InvalidCastException">指定的資料行不包含 16 位元帶正負號的整數。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (ordinal As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt32 : int -&gt; int" Usage="dataTableReader.GetInt32 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">以零為基底的資料行序數</param>
        <summary>取得指定資料行的值作為 32 位元帶正負號的整數。</summary>
        <returns>指定的資料行值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不會進行轉換;因此，必須已經是所擷取的資料<xref:System.Int32>或強制型轉為`Int32`。  
  
 呼叫<xref:System.Data.DataTableReader.IsDBNull%2A>來呼叫這個方法之前是否有 null 值。  
  
   
  
## Examples  
 下列範例會顯示 2 內傳入的資料行的內容<xref:System.Data.DataTableReader>。 如果值在特定的資料列內的資料行是 null，則程式碼會顯示文字\<NULL >。 如果資料行中的不正確的型別，則範例會顯示每個資料列的錯誤訊息。  
  
 [!code-csharp[DataWorks DataTableReader.GetInt32#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt32/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt32#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt32/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">嘗試從已刪除的資料列擷取資料。</exception>
        <exception cref="T:System.InvalidOperationException">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
        <exception cref="T:System.InvalidCastException">指定的資料行不包含 32 位元帶正負號的整數值。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (ordinal As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt64 : int -&gt; int64" Usage="dataTableReader.GetInt64 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">以零為基底的資料行序數</param>
        <summary>取得指定資料行的值做為 64 位元帶正負號的整數 (Signed Integer)。</summary>
        <returns>指定的資料行值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不會進行轉換;因此，必須已經是所擷取的資料<xref:System.Int64>或強制型轉為`Int64`。  
  
 呼叫<xref:System.Data.DataTableReader.IsDBNull%2A>來呼叫這個方法之前是否有 null 值。  
  
   
  
## Examples  
 下列範例會顯示 2 內傳入的資料行的內容<xref:System.Data.DataTableReader>。 如果值在特定的資料列內的資料行是 null，則程式碼會顯示文字\<NULL >。 如果資料行中的不正確的型別，則範例會顯示每個資料列的錯誤訊息。  
  
 [!code-csharp[DataWorks DataTableReader.GetInt64#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt64/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt64#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt64/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">嘗試從已刪除的資料列擷取資料。</exception>
        <exception cref="T:System.InvalidOperationException">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
        <exception cref="T:System.InvalidCastException">指定的資料行不包含 64 位元帶正負號的整數值。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetName : int -&gt; string" Usage="dataTableReader.GetName ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">以零為基底的資料行序數</param>
        <summary>取得指定的資料行值做為 <see cref="T:System.String" />。</summary>
        <returns>指定資料行的名稱。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `GetName`和<xref:System.Data.DataTableReader.GetOrdinal%2A>方法提供反向的功能。 也就呼叫`GetOrdinal`上呼叫的傳回值`GetName`應該會傳回原始的參數傳遞至`GetName`; 這同樣適用於的相反順序呼叫程序。  
  
   
  
## Examples  
 下列簡單的範例包含會列出在指定的所有資料行名稱的程序`DataTableReader`，和資料行的序數位置，在主控台視窗。  
  
 [!code-csharp[DataWorks DataTableReader.GetName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetName/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
        <exception cref="T:System.InvalidOperationException">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetOrdinal : string -&gt; int" Usage="dataTableReader.GetOrdinal name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">資料行名稱。</param>
        <summary>提供資料行的名稱，取得資料行序數。</summary>
        <returns>以零為基底的資料行序數。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因為大部分的方法提供<xref:System.Data.DataTableReader>類別必須提供使用序數資料行編號，您可以使用`GetOrdinal`方法來擷取資料行數目，給定的資料行的名稱。  
  
 `GetOrdinal` 第一次執行區分大小寫的查閱。 如果失敗，會使用第二個的不區分大小寫搜尋。 如果找不到的資料行編號`IndexOutOfRangeException`就會擲回。  
  
 `GetOrdinal` 假名寬度是不區分大小寫的。  
  
 因為根據序數進行查閱比具名查閱更有效率，很效率不佳，呼叫`GetOrdinal`迴圈內。 節省時間，藉由呼叫`GetOrdinal`一次，並將結果指派給整數變數以便使用於迴圈  
  
   
  
## Examples  
 如果您有資料行名稱，在此情況下的資料行名稱是由使用者提供，以及您必須擷取資料行中的資訊，您可以使用如下所示的程序來擷取所需的資訊。 在此範例中，程序接受資料行名稱，並傳回包含該資料行中目前資料列內之資料的<xref:System.Data.DataTableReader>:  
  
 [!code-csharp[DataWorks DataTableReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
        <exception cref="T:System.ArgumentException">指定的名稱不是有效的資料行名稱。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificFieldType">
      <MemberSignature Language="C#" Value="public override Type GetProviderSpecificFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetProviderSpecificFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetProviderSpecificFieldType(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificFieldType : int -&gt; Type" Usage="dataTableReader.GetProviderSpecificFieldType ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">以零為基底的資料行序數。</param>
        <summary>以提供者專屬格式，取得指定之資料行的型別。</summary>
        <returns>
          <see cref="T:System.Type" />，此為物件的資料類型。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因為<xref:System.Data.DataTableReader>一律會傳回儲存在基礎的型別<xref:System.Data.DataColumn>，藉由呼叫傳回的值<xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A>方法一律會傳回相同的型別內儲存的型別<xref:System.Data.DataTable>。 當您使用<xref:System.Data.DataTableReader>類別，呼叫<xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A>方法會傳回相同的型別呼叫<xref:System.Type.GetType%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
        <exception cref="T:System.InvalidOperationException">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
        <altmember cref="M:System.Data.DataTableReader.GetFieldType(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValue">
      <MemberSignature Language="C#" Value="public override object GetProviderSpecificValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetProviderSpecificValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetProviderSpecificValue(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificValue : int -&gt; obj" Usage="dataTableReader.GetProviderSpecificValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">已擷取其值之資料行的以零為起始的數目。</param>
        <summary>以提供者專屬格式，取得指定之資料行的值。</summary>
        <returns>提供者專屬格式之指定的資料行值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因為<xref:System.Data.DataTableReader>一律會傳回儲存在基礎的型別<xref:System.Data.DataColumn>，藉由呼叫傳回的值<xref:System.Data.DataTableReader.GetProviderSpecificValue%2A>方法一律會傳回資料做為資料儲存在相同型別的<xref:System.Data.DataTable>。 當您使用<xref:System.Data.DataTableReader>類別，呼叫<xref:System.Data.DataTableReader.GetProviderSpecificValue%2A>方法會傳回相同值，並輸入與呼叫<xref:System.Data.DataTableReader.GetValue%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">嘗試從已刪除的資料列擷取資料。</exception>
        <exception cref="T:System.InvalidOperationException">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
        <altmember cref="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValues">
      <MemberSignature Language="C#" Value="public override int GetProviderSpecificValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetProviderSpecificValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetProviderSpecificValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificValues : obj[] -&gt; int" Usage="dataTableReader.GetProviderSpecificValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">物件陣列，要以 <see cref="T:System.Data.DataTableReader" /> 中資料行的型別資訊填入。</param>
        <summary>以 <see cref="T:System.Data.DataTableReader" /> 中所有資料行的提供者專屬型別資訊，填入所提供的陣列。</summary>
        <returns>複製至陣列的資料行值數目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因為<xref:System.Data.DataTableReader>一律會傳回儲存在基礎類型的資料<xref:System.Data.DataColumn>，藉由呼叫傳回的值<xref:System.Data.DataTableReader.GetProviderSpecificValues%2A>方法一律會是相同的型別，做為資料儲存在<xref:System.Data.DataTable>。 當您使用<xref:System.Data.DataTableReader>類別，呼叫<xref:System.Data.DataTableReader.GetProviderSpecificValues%2A>方法會傳回相同的值和類型與呼叫<xref:System.Data.DataTableReader.GetValues%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">嘗試從已刪除的資料列擷取資料。</exception>
        <exception cref="T:System.InvalidOperationException">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
        <altmember cref="M:System.Data.DataTableReader.GetValues(System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="override this.GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="dataTableReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回 <see cref="T:System.Data.DataTable" />，以描述 <see cref="T:System.Data.DataTableReader" /> 的資料行中繼資料。</summary>
        <returns>描述資料行中繼資料的 <see cref="T:System.Data.DataTable" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 GetSchemaTable 方法會傳回有關每個資料行中繼資料，以下列順序：  
  
|DataReader 資料行|描述|  
|-----------------------|-----------------|  
|ColumnName|資料行名稱會出現在<xref:System.Data.DataTable>。|  
|ColumnOrdinal|資料行的序數|  
|ColumnSize|-1，否則<xref:System.Data.Common.SchemaTableColumn.ColumnSize>(或<xref:System.Data.DataColumn.MaxLength%2A>) 屬性<xref:System.Data.DataColumn>無法判斷或不相關，反之則為 0 或正整數，包含`MaxLength`值。|  
|NumericPrecision|如果資料行類型是數值類型，這會是資料行的最大有效位數。 如果資料行類型不是數值資料類型，這會是 null 值。|  
|NumericScale|如果資料行資料類型的小數位數元件，返回小數點右邊的位數。 否則，傳回 null 值。|  
|DataType|資料行的基礎類型。|  
|提供者類型|資料行的資料類型的指標。 如果資料行的資料類型而異的逐列，這個值會是<xref:System.Object>。 此資料行不能包含 null 值。|  
|IsLong|`true` 如果資料行的資料類型是<xref:System.String>及其<xref:System.Data.DataColumn.MaxLength%2A>屬性為-1。 否則為 `false`。|  
|AllowDBNull|`true` 如果 AllowDbNull 條件約束設定為 true 的資料行;否則， `false`。|  
|IsReadOnly|`true` 如果無法修改資料行;否則`false`。|  
|IsRowVersion|`false`每個資料行。|  
|IsUnique|`true`： 在沒有兩個資料列<xref:System.Data.DataTable>可以有相同的值，這個資料行中。 `IsUnique` 會保證如果資料行代表索引鍵，則為 true。 透過本身或是否有類型只適用於此資料行的 UNIQUE 條件約束。 `false`: 資料行可以包含重複的值，在`DataTable`。 此資料行的預設值是`false`。|  
|IsKey|`true`： 資料行是一組資料行的其中一個，結合起來，可唯一識別中的資料列<xref:System.Data.DataTable>。 使用的資料行集中`IsKey`設定為`true`必須唯一識別中的資料列`DataTable`。 沒有這個資料行集是資料行的最少的需求。 這組資料行可能會產生從`DataTable`主索引鍵、 唯一條件約束或唯一索引。 `false`: 資料行不是需要唯一識別資料列。 這個值是`true`如果資料行建立單一或複合主索引鍵。 否則，其值是`false`。|  
|IsAutoIncrement|`true`: 資料行至新的資料列，以固定遞增方式指派值。 `false`: 資料行不會以新的資料列，以固定遞增方式指派值。 此資料行的預設值是`false`。|  
|BaseCatalogName|包含資料行的資料存放區中的類別目錄名稱。 `Null` 如果無法判斷基底目錄名稱。 此資料行的預設值是`null`值。|  
|BaseSchemaName|這個值一律是`Null`。|  
|BaseTableName|<xref:System.Data.DataTable> 的名稱。|  
|BaseColumnName|中的資料行名稱<xref:System.Data.DataTable>。|  
|AutoIncrementSeed|值<xref:System.Data.DataTable>的<xref:System.Data.DataColumn.AutoIncrementSeed%2A>屬性。|  
|AutoIncrementStep|值<xref:System.Data.DataTable>的<xref:System.Data.DataColumn.AutoIncrementStep%2A>屬性。|  
|DefaultValue|值<xref:System.Data.DataColumn>的<xref:System.Data.DataColumn.DefaultValue%2A>屬性。|  
|運算式|如果目前的資料行的運算式資料行，但運算式中使用的所有資料行屬於相同的運算式字串`T:System.Data.DataTable`，其中包含的運算式資料行，否則為`null`。|  
|ColumnMapping|<xref:System.Data.MappingType>相關聯的值<xref:System.Data.DataColumn>。 類型可以是其中一個`Attribute`， `Element`， `Hidden`，或`SimpleContent`。 預設值是 `Element`。|  
|BaseTableNamespace|值<xref:System.Data.DataTable>的<xref:System.Data.DataTable.Namespace%2A>屬性。|  
|BaseColumnNamespace|值<xref:System.Data.DataColumn>的<xref:System.Data.DataColumn.Namespace%2A>屬性。|  
  
   
  
## Examples  
 下列主控台應用程式範例會擷取指定的資料行的結構描述資訊。 傳遞`DisplaySchemaTableInfo`程序<xref:System.Data.DataTableReader>和整數，表示中的資料行的序數位置`DataTableReader`，並在程序輸出至主控台視窗的結構描述資訊。  
  
 [!code-csharp[DataWorks DataTableReader.GetSchemaTable#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetSchemaTable/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetSchemaTable#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetSchemaTable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Data.DataTableReader" /> 已關閉。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetString : int -&gt; string" Usage="dataTableReader.GetString ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">以零為基底的資料行序數</param>
        <summary>取得指定的資料行值做為字串。</summary>
        <returns>指定的資料行值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫<xref:System.Data.DataTableReader.IsDBNull%2A>來呼叫這個方法之前是否有 null 值。  
  
   
  
## Examples  
 下列範例會顯示 2 內傳入的資料行的內容<xref:System.Data.DataTableReader>。 如果值在特定的資料列內的資料行是 null，則程式碼會顯示文字\<NULL >。 如果資料行的正確類型，也就是此範例中會顯示每個資料列的錯誤訊息。  
  
 [!code-csharp[DataWorks DataTableReader.GetString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetString/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">嘗試從已刪除的資料列擷取資料。</exception>
        <exception cref="T:System.InvalidOperationException">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
        <exception cref="T:System.InvalidCastException">指定的資料行不包含字串。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetValue : int -&gt; obj" Usage="dataTableReader.GetValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">以零為基底的資料行序數</param>
        <summary>取得使用原生格式的指定資料行值。</summary>
        <returns>指定的資料行值。 這個方法會傳回 null 資料行的 <see langword="DBNull" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 雖然您可以呼叫<xref:System.Data.DataTableReader.IsDBNull%2A>以查看是否有 null 值之前呼叫這個方法，您不必這麼做。  
  
   
  
## Examples  
 下列範例中的目前資料列內的所有資料行逐一查看<xref:System.Data.DataTableReader>，顯示每個資料行和資料行名稱的內容。 一般而言，如果您的目的是要使用擷取的資料列內的所有資料行<xref:System.Data.DataTableReader>，請考慮使用<xref:System.Data.DataTableReader.GetValues%2A>方法相反地，因為它是更有效率。  
  
 [!code-csharp[DataWorks DataTableReader.GetValue#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValue/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValue/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">嘗試從已刪除的資料列擷取資料。</exception>
        <exception cref="T:System.InvalidOperationException">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetValues : obj[] -&gt; int" Usage="dataTableReader.GetValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <see cref="T:System.Object" /> 的陣列，要從 <see cref="T:System.Data.DataTableReader" /> 複製資料行值至其中。</param>
        <summary>使用目前資料列的資料行值填入物件陣列。</summary>
        <returns>複製至陣列的資料行值數目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 對於大部分的應用程式，這個方法會提供有效率的方法，用於擷取所有的資料行，而不是個別擷取每個資料行。 如果您的目的是擷取中的資料列中的所有資料行值<xref:System.Data.DataTableReader>，則`GetValues`方法提供最有效率的解決方案。  
  
 您可以傳遞<xref:System.Object>陣列包含少於一個產生的資料列中包含的資料行數目。 資料量`Object`陣列可以保存複製到陣列。 您也可以傳遞`Object`其長度大於包含在產生的資料列，並在其中案例的其他陣列項目會維持不變方法呼叫中的資料行數目的陣列。  
  
 這個方法會放置`DBNull`null 資料行的輸出陣列中。  
  
   
  
## Examples  
 下列範例示範如何使用正確的大小，以讀取目前的資料列中所提供的所有值的陣列<xref:System.Data.DataTableReader>。 此外，此範例會示範使用固定大小的陣列，可能較小或大於可用的資料行數目。  
  
 [!code-csharp[DataWorks DataTableReader.GetValueObject#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetValueObject#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">嘗試從已刪除的資料列擷取資料。</exception>
        <exception cref="T:System.InvalidOperationException">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasRows : bool" Usage="System.Data.DataTableReader.HasRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出 <see cref="T:System.Data.DataTableReader" /> 是否包含一個或多個資料列。</summary>
        <value>如果 <see cref="T:System.Data.DataTableReader" /> 包含一個或更多資料列，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HasRows`屬性會傳回目前的結果集的相關資訊。 如果<xref:System.Data.DataTableReader>包含多個結果集，您可以檢查的值`HasRows`屬性只有在您呼叫之後，立即<xref:System.Data.DataTableReader.NextResult%2A>方法，以判斷新的結果集是否包含資料列。  
  
 使用`HasRows`屬性，以避免需在呼叫<xref:System.Data.DataTableReader.Read%2A>方法<xref:System.Data.DataTableReader>如果沒有目前的結果集內的資料列。  
  
   
  
## Examples  
 下列範例會填入兩個<xref:System.Data.DataTable>資料的執行個體。 第一個<xref:System.Data.DataTable>包含一個資料列，而第二個包含任何資料列。 這個範例會建立<xref:System.Data.DataTableReader>，其中包含同時<xref:System.Data.DataTable>物件，並呼叫 PrintData 方法，來顯示內容，檢查值<xref:System.Data.DataTableReader.HasRows%2A>才進行 PrintData 呼叫每個屬性。  
  
 [!code-csharp[DataWorks DataTableReader.HasRows#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.HasRows/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.HasRows#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.HasRows/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">嘗試擷取有關已關閉之 <see cref="T:System.Data.DataTableReader" /> 的資訊。</exception>
        <altmember cref="M:System.Data.DataTableReader.NextResult" />
        <altmember cref="M:System.Data.DataTableReader.Read" />
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.DataTableReader.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出 <see cref="T:System.Data.DataTableReader" /> 是否已關閉。</summary>
        <value>如果 <see cref="T:System.Data.DataTableReader" /> 已關閉，則傳回 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTableReader.Close%2A> 是唯一的方法和`IsClosed`並<xref:System.Data.DataTableReader.RecordsAffected%2A>是可以存取之後的唯一屬性<xref:System.Data.DataTableReader>已關閉。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.IsDBNull : int -&gt; bool" Usage="dataTableReader.IsDBNull ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">以零為基底的資料行序數</param>
        <summary>取得值，指出資料行是否含有不存在或遺漏的值。</summary>
        <returns>如果指定的資料行值等於 <see cref="T:System.DBNull" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫這個方法來呼叫具類型的 get 方法之前是否有 null 的資料行值 (例如<xref:System.Data.DataTableReader.GetByte%2A>，<xref:System.Data.DataTableReader.GetChar%2A>等等) 以避免引發錯誤。  
  
   
  
## Examples  
 下列範例會顯示 2 內傳入的資料行的內容<xref:System.Data.DataTableReader>。 如果值在特定的資料列內的資料行是 null，則程式碼會顯示文字\<NULL >。 如果資料行的正確類型，也就是此範例中會顯示每個資料列的錯誤訊息。  
  
 [!code-csharp[DataWorks DataTableReader.IsDbNull#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.IsDbNull/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.IsDbNull#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.IsDbNull/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">嘗試從已刪除的資料列擷取資料。</exception>
        <exception cref="T:System.InvalidOperationException">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得使用原生格式的指定資料行值。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int ordinal] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int ordinal); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Data.DataTableReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">以零為基底的資料行序數。</param>
        <summary>提供資料行序數，取得使用原生格式的指定資料行值。</summary>
        <value>使用原生格式的指定資料行值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個多載<xref:System.Data.DataTableReader.Item%2A>行為相同於<xref:System.Data.DataTableReader.GetValue%2A>方法。  
  
   
  
## Examples  
 下列範例會從提供的所有資料列中顯示的所有資料行，內容<xref:System.Data.DataTableReader>。 此程式碼使用<xref:System.Data.DataTableReader.Item%2A>方法 （索引子，Microsoft C# 中） 來擷取包含在每個資料行的值。  
  
 [!code-csharp[DataWorks DataTableReader.Item#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.Item/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.Item#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.Item/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">傳遞的索引超出 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1 的範圍。</exception>
        <altmember cref="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.DataTableReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">資料行名稱。</param>
        <summary>提供資料行名稱，取得使用原生格式的指定資料行值。</summary>
        <value>使用原生格式的指定資料行值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 第一次執行區分大小寫的查閱。 如果失敗，會使用第二個的不區分大小寫搜尋。  
  
 這個方法會區分假名寬度。  
  
 這個多載的版本<xref:System.Data.DataTableReader.Item%2A>對應至呼叫<xref:System.Data.DataTableReader.GetOrdinal%2A>方法，並接著呼叫<xref:System.Data.DataTableReader.GetValue%2A>方法。  
  
   
  
## Examples  
 指定<xref:System.Data.DataTableReader>和資料行名稱，GetValueByName 程序會傳回指定的資料行的值。 之前呼叫此程序，您必須建立新<xref:System.Data.DataTableReader>執行個體並呼叫它的 Read 方法來將資料列指標資料列上的至少一次。  
  
 [!code-csharp[DataWorks DataTableReader.ItemName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.ItemName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.ItemName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.ItemName/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定的名稱不是有效的資料行名稱。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">嘗試從已刪除的資料列擷取資料。</exception>
        <exception cref="T:System.InvalidOperationException">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberSignature Language="F#" Value="override this.NextResult : unit -&gt; bool" Usage="dataTableReader.NextResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將 <see cref="T:System.Data.DataTableReader" /> 前移到下一個結果集 (如果有的話)。</summary>
        <returns>如果有其他的結果集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用來處理多個可以藉由建立產生的結果<xref:System.Data.DataTableReader>透過<xref:System.Data.DataSet>，其中包含兩個或多個資料表或陣列，其中包含兩個或多個<xref:System.Data.DataTable>執行個體。  
  
 新<xref:System.Data.DataTableReader>位於第一個結果。  
  
   
  
## Examples  
 在下列範例中，TestConstructor 方法會建立兩個<xref:System.Data.DataTable>執行個體。 為了示範這個建構函式<xref:System.Data.DataTableReader>類別，此範例會建立新`DataTableReader`根據陣列，其中包含兩個`DataTables`，並執行簡單的作業前, 幾個資料行的內容列印至主控台視窗。 若要測試此應用程式，請建立新的主控台應用程式，並將範例程式碼貼到新建立的檔案。  
  
 [!code-csharp[DataWorks DataTableReader.NextResult#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.NextResult/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.NextResult#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.NextResult/VB/source.vb#1)]  
  
 主控台視窗會顯示下列結果：  
  
```  
1 Mary  
2 Andy  
3 Peter  
4 Russ  
1 Wireless Network Card  
2 Hard Drive  
3 Monitor  
4 CPU  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">嘗試在已關閉的 <see cref="T:System.Data.DataTableReader" /> 之內巡覽。</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="dataTableReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將 <see cref="T:System.Data.DataTableReader" /> 推進到下一筆記錄。</summary>
        <returns>如果有其他要讀取的資料列，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設位置<xref:System.Data.DataTableReader>之前第一筆記錄。 因此，您必須呼叫`Read`開始存取任何資料。  
  
   
  
## Examples  
 PrintColumns 程序中執行迴圈中的所有資料列<xref:System.Data.DataTableReader>，顯示在主控台視窗中的每個資料行的內容。  
  
 [!code-csharp[DataWorks DataTableReader.Read#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.Read/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.Read#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.Read/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">嘗試在關閉的 <see cref="T:System.Data.DataTableReader" /> 中讀取或存取資料行。</exception>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.DataTableReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得透過執行 SQL 陳述式所插入、變更或刪除的資料列數目。</summary>
        <value>
          <see cref="T:System.Data.DataTableReader" /> 不支援這個屬性，而且一定會傳回 0。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>