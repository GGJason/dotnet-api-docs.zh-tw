<Type Name="DataColumn" FullName="System.Data.DataColumn">
  <TypeSignature Language="C#" Value="public class DataColumn : System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataColumn extends System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class DataColumn&#xA;Inherits MarshalByValueComponent" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataColumn : System::ComponentModel::MarshalByValueComponent" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MarshalByValueComponent</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("ColumnName")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e4f95-101">表示 <see cref="T:System.Data.DataTable" /> 中資料行的結構描述。</span><span class="sxs-lookup"><span data-stu-id="e4f95-101">Represents the schema of a column in a <see cref="T:System.Data.DataTable" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f95-102"><xref:System.Data.DataColumn>是建立結構描述的基本建置組塊<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e4f95-102">The <xref:System.Data.DataColumn> is the fundamental building block for creating the schema of a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="e4f95-103">您建立結構描述加入一或多個<xref:System.Data.DataColumn>物件加入至<xref:System.Data.DataColumnCollection>。</span><span class="sxs-lookup"><span data-stu-id="e4f95-103">You build the schema by adding one or more <xref:System.Data.DataColumn> objects to the <xref:System.Data.DataColumnCollection>.</span></span> <span data-ttu-id="e4f95-104">如需詳細資訊，請參閱[新增資料行加入至 DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md)。</span><span class="sxs-lookup"><span data-stu-id="e4f95-104">For more information, see [Adding Columns to a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md).</span></span>  
  
 <span data-ttu-id="e4f95-105">每個<xref:System.Data.DataColumn>具有<xref:System.Data.DataColumn.DataType%2A>屬性，可決定的資料種類<xref:System.Data.DataColumn>包含。</span><span class="sxs-lookup"><span data-stu-id="e4f95-105">Each <xref:System.Data.DataColumn> has a <xref:System.Data.DataColumn.DataType%2A> property that determines the kind of data the <xref:System.Data.DataColumn> contains.</span></span> <span data-ttu-id="e4f95-106">比方說，您可以限制的資料類型至整數、 字串或小數位數。</span><span class="sxs-lookup"><span data-stu-id="e4f95-106">For example, you can restrict the data type to integers, or strings, or decimals.</span></span> <span data-ttu-id="e4f95-107">因為資料所包含的<xref:System.Data.DataTable>通常會合併回其原始的資料來源，您必須符合的資料來源中的資料類型。</span><span class="sxs-lookup"><span data-stu-id="e4f95-107">Because data that is contained by the <xref:System.Data.DataTable> is typically merged back into its original data source, you must match the data types to those in the data source.</span></span> <span data-ttu-id="e4f95-108">如需詳細資訊，請參閱[在 ADO.NET 中的資料類型對應](~/docs/framework/data/adonet/data-type-mappings-in-ado-net.md)。</span><span class="sxs-lookup"><span data-stu-id="e4f95-108">For more information, see [Data Type Mappings in ADO.NET](~/docs/framework/data/adonet/data-type-mappings-in-ado-net.md).</span></span>  
  
 <span data-ttu-id="e4f95-109">屬性，例如<xref:System.Data.DataColumn.AllowDBNull%2A>， <xref:System.Data.DataColumn.Unique%2A>，和<xref:System.Data.DataColumn.ReadOnly%2A>放置項目和更新的資料，以協助確保資料完整性的限制。</span><span class="sxs-lookup"><span data-stu-id="e4f95-109">Properties such as <xref:System.Data.DataColumn.AllowDBNull%2A>, <xref:System.Data.DataColumn.Unique%2A>, and <xref:System.Data.DataColumn.ReadOnly%2A> put restrictions on the entry and updating of data, thereby helping to guarantee data integrity.</span></span> <span data-ttu-id="e4f95-110">您也可以使用<xref:System.Data.DataColumn.AutoIncrement%2A>， <xref:System.Data.DataColumn.AutoIncrementSeed%2A>，和<xref:System.Data.DataColumn.AutoIncrementStep%2A>屬性以控制自動的資料產生。</span><span class="sxs-lookup"><span data-stu-id="e4f95-110">You can also use the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties to control automatic data generation.</span></span> <span data-ttu-id="e4f95-111">如需有關<xref:System.Data.DataColumn.AutoIncrement%2A>資料行，請參閱[建立自動遞增資料行](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md)。</span><span class="sxs-lookup"><span data-stu-id="e4f95-111">For more information about <xref:System.Data.DataColumn.AutoIncrement%2A> columns, see [Creating AutoIncrement Columns](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md).</span></span> <span data-ttu-id="e4f95-112">如需詳細資訊，請參閱[定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="e4f95-112">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="e4f95-113">您也要確定的值在<xref:System.Data.DataColumn>都是唯一的建立<xref:System.Data.UniqueConstraint>並將它加入至<xref:System.Data.ConstraintCollection>的<xref:System.Data.DataTable>的<xref:System.Data.DataColumn>所屬。</span><span class="sxs-lookup"><span data-stu-id="e4f95-113">You can also make sure that values in a <xref:System.Data.DataColumn> are unique by creating a <xref:System.Data.UniqueConstraint> and adding it to the <xref:System.Data.ConstraintCollection> of the <xref:System.Data.DataTable> to which the <xref:System.Data.DataColumn> belongs.</span></span> <span data-ttu-id="e4f95-114">如需詳細資訊，請參閱[DataTable 條件約束](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md)。</span><span class="sxs-lookup"><span data-stu-id="e4f95-114">For more information, see [DataTable Constraints](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md).</span></span>  
  
 <span data-ttu-id="e4f95-115">若要建立之間的關聯<xref:System.Data.DataColumn>物件建立<xref:System.Data.DataRelation>物件，並將它加入至<xref:System.Data.DataRelationCollection>的<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="e4f95-115">To create a relation between <xref:System.Data.DataColumn> objects, create a <xref:System.Data.DataRelation> object and add it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="e4f95-116">您可以使用<xref:System.Data.DataColumn.Expression%2A>屬性<xref:System.Data.DataColumn>物件來計算資料行值，或建立彙總的資料行。</span><span class="sxs-lookup"><span data-stu-id="e4f95-116">You can use the <xref:System.Data.DataColumn.Expression%2A> property of the <xref:System.Data.DataColumn> object to calculate the values in a column, or create an aggregate column.</span></span> <span data-ttu-id="e4f95-117">如需詳細資訊，請參閱[建立運算式資料行](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-expression-columns.md)。</span><span class="sxs-lookup"><span data-stu-id="e4f95-117">For more information, see [Creating Expression Columns](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-expression-columns.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4f95-118">下列範例會建立<xref:System.Data.DataTable>有數個<xref:System.Data.DataColumn>物件。</span><span class="sxs-lookup"><span data-stu-id="e4f95-118">The following example creates a <xref:System.Data.DataTable> with several <xref:System.Data.DataColumn> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="e4f95-119">此類型是安全多執行緒的讀取作業。</span><span class="sxs-lookup"><span data-stu-id="e4f95-119">This type is safe for multithreaded read operations.</span></span> <span data-ttu-id="e4f95-120">您必須同步處理任何寫入作業。</span><span class="sxs-lookup"><span data-stu-id="e4f95-120">You must synchronize any write operations.</span></span></threadsafe>
    <altmember cref="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)" />
    <altmember cref="T:System.Data.DataColumnCollection" />
    <altmember cref="P:System.Data.DataTable.Constraints" />
    <altmember cref="T:System.Data.ConstraintCollection" />
    <altmember cref="T:System.Windows.Forms.DataGrid" />
    <altmember cref="T:System.Data.DataRow" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="T:System.Data.DataSet" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
    <altmember cref="T:System.Data.DataRowCollection" />
    <altmember cref="T:System.Data.UniqueConstraint" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e4f95-121">初始化 <see cref="T:System.Data.DataColumn" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e4f95-121">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e4f95-122">初始化 <see cref="T:System.Data.DataColumn" /> 類別的新執行個體 (Instance) 為型別字串。</span><span class="sxs-lookup"><span data-stu-id="e4f95-122">Initializes a new instance of a <see cref="T:System.Data.DataColumn" /> class as type string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f95-123">建立時，<xref:System.Data.DataColumn>物件有沒有預設值<xref:System.Data.DataColumn.ColumnName%2A>或<xref:System.Data.DataColumn.Caption%2A>。</span><span class="sxs-lookup"><span data-stu-id="e4f95-123">When created, a <xref:System.Data.DataColumn> object has no default <xref:System.Data.DataColumn.ColumnName%2A> or <xref:System.Data.DataColumn.Caption%2A>.</span></span> <span data-ttu-id="e4f95-124">當您將它加入至<xref:System.Data.DataColumnCollection>，將產生的預設名稱 （"Column1"、"Column2"，等等），如果名稱未指派給<xref:System.Data.DataColumn.ColumnName%2A>。</span><span class="sxs-lookup"><span data-stu-id="e4f95-124">When you add it to a <xref:System.Data.DataColumnCollection>, a default name ("Column1", "Column2", and so on) will be generated if a name has not been assigned to the <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4f95-125">下列範例會建立新<xref:System.Data.DataColumn>、 設定各種屬性，並將它加入<xref:System.Data.DataColumnCollection>如<xref:System.Data.DataTable>物件。</span><span class="sxs-lookup"><span data-stu-id="e4f95-125">The following example creates a new <xref:System.Data.DataColumn>, sets various properties, and adds it to a <xref:System.Data.DataColumnCollection> for the <xref:System.Data.DataTable> object.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="e4f95-126">字串，表示要建立的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="e4f95-126">A string that represents the name of the column to be created.</span></span> <span data-ttu-id="e4f95-127">如果設定為 <see langword="null" /> 或空字串 ("")，則在加入資料行集合時將指定預設名稱。</span><span class="sxs-lookup"><span data-stu-id="e4f95-127">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span></span></param>
        <summary><span data-ttu-id="e4f95-128">使用指定的資料行名稱，初始化 <see cref="T:System.Data.DataColumn" /> 類別的新執行個體為類型字串。</span><span class="sxs-lookup"><span data-stu-id="e4f95-128">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class, as type string, using the specified column name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f95-129">根據預設，特定的資料行的名稱會變成<xref:System.Data.DataColumn.Caption%2A>屬性值。</span><span class="sxs-lookup"><span data-stu-id="e4f95-129">By default, the name specific to a column becomes the <xref:System.Data.DataColumn.Caption%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4f95-130">下列範例會建立新<xref:System.Data.DataColumn>與指定<xref:System.Data.DataColumn.ColumnName%2A>。</span><span class="sxs-lookup"><span data-stu-id="e4f95-130">The following example creates a new <xref:System.Data.DataColumn> with a specified <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, dataType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="e4f95-131">字串，表示要建立的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="e4f95-131">A string that represents the name of the column to be created.</span></span> <span data-ttu-id="e4f95-132">如果設定為 <see langword="null" /> 或空字串 ("")，則在加入資料行集合時將指定預設名稱。</span><span class="sxs-lookup"><span data-stu-id="e4f95-132">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span></span></param>
        <param name="dataType"><span data-ttu-id="e4f95-133">支援的 <see cref="P:System.Data.DataColumn.DataType" />。</span><span class="sxs-lookup"><span data-stu-id="e4f95-133">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span></span></param>
        <summary><span data-ttu-id="e4f95-134">使用指定的資料行名稱和資料類型，初始化 <see cref="T:System.Data.DataColumn" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e4f95-134">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified column name and data type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4f95-135">下列範例會建立新<xref:System.Data.DataColumn>與指定<xref:System.Data.DataColumn.ColumnName%2A>和<xref:System.Data.DataColumn.DataType%2A>。</span><span class="sxs-lookup"><span data-stu-id="e4f95-135">The following example creates a new <xref:System.Data.DataColumn> with a specified <xref:System.Data.DataColumn.ColumnName%2A> and <xref:System.Data.DataColumn.DataType%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e4f95-136">未指定任何的 <paramref name="dataType" />。</span><span class="sxs-lookup"><span data-stu-id="e4f95-136">No <paramref name="dataType" /> was specified.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType, string expr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType, string expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, dataType As Type, expr As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType, System::String ^ expr);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="expr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="e4f95-137">字串，表示要建立的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="e4f95-137">A string that represents the name of the column to be created.</span></span> <span data-ttu-id="e4f95-138">如果設定為 <see langword="null" /> 或空字串 ("")，則在加入資料行集合時將指定預設名稱。</span><span class="sxs-lookup"><span data-stu-id="e4f95-138">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span></span></param>
        <param name="dataType"><span data-ttu-id="e4f95-139">支援的 <see cref="P:System.Data.DataColumn.DataType" />。</span><span class="sxs-lookup"><span data-stu-id="e4f95-139">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span></span></param>
        <param name="expr"><span data-ttu-id="e4f95-140">用來建立資料行的運算式。</span><span class="sxs-lookup"><span data-stu-id="e4f95-140">The expression used to create this column.</span></span> <span data-ttu-id="e4f95-141">如需詳細資訊，請參閱 <see cref="P:System.Data.DataColumn.Expression" /> 屬性 (Property)。</span><span class="sxs-lookup"><span data-stu-id="e4f95-141">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span></span></param>
        <summary><span data-ttu-id="e4f95-142">使用指定的名稱、資料型別和運算式，初始化 <see cref="T:System.Data.DataColumn" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e4f95-142">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, and expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4f95-143">下列範例會建立計算資料行。</span><span class="sxs-lookup"><span data-stu-id="e4f95-143">The following example creates a computed column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e4f95-144">未指定任何的 <paramref name="dataType" />。</span><span class="sxs-lookup"><span data-stu-id="e4f95-144">No <paramref name="dataType" /> was specified.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType, string expr, System.Data.MappingType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType, string expr, valuetype System.Data.MappingType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType, System::String ^ expr, System::Data::MappingType type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="expr" Type="System.String" />
        <Parameter Name="type" Type="System.Data.MappingType" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="e4f95-145">字串，表示要建立的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="e4f95-145">A string that represents the name of the column to be created.</span></span> <span data-ttu-id="e4f95-146">如果設定為 <see langword="null" /> 或空字串 ("")，則在加入資料行集合時將指定預設名稱。</span><span class="sxs-lookup"><span data-stu-id="e4f95-146">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span></span></param>
        <param name="dataType"><span data-ttu-id="e4f95-147">支援的 <see cref="P:System.Data.DataColumn.DataType" />。</span><span class="sxs-lookup"><span data-stu-id="e4f95-147">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span></span></param>
        <param name="expr"><span data-ttu-id="e4f95-148">用來建立資料行的運算式。</span><span class="sxs-lookup"><span data-stu-id="e4f95-148">The expression used to create this column.</span></span> <span data-ttu-id="e4f95-149">如需詳細資訊，請參閱 <see cref="P:System.Data.DataColumn.Expression" /> 屬性 (Property)。</span><span class="sxs-lookup"><span data-stu-id="e4f95-149">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span></span></param>
        <param name="type"><span data-ttu-id="e4f95-150">其中一個 <see cref="T:System.Data.MappingType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e4f95-150">One of the <see cref="T:System.Data.MappingType" /> values.</span></span></param>
        <summary><span data-ttu-id="e4f95-151">使用指定名稱、資料型別、運算式和判斷資料行是否是屬性 (Attribute) 的值，初始化 <see cref="T:System.Data.DataColumn" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e4f95-151">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, expression, and value that determines whether the column is an attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f95-152">`type`引數集<xref:System.Data.DataColumn.ColumnMapping%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="e4f95-152">The `type` argument sets the <xref:System.Data.DataColumn.ColumnMapping%2A> property.</span></span> <span data-ttu-id="e4f95-153">屬性會指定如何<xref:System.Data.DataColumn>當對應<xref:System.Data.DataSet>轉換成 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="e4f95-153">The property specifies how a <xref:System.Data.DataColumn> is mapped when a <xref:System.Data.DataSet> is transformed into an XML document.</span></span> <span data-ttu-id="e4f95-154">例如，如果資料行名為"fName"，而且它所包含的值是"Bob"和`type`設為`MappingType.Attribute`，XML 項目應如下：</span><span class="sxs-lookup"><span data-stu-id="e4f95-154">For example, if the column is named "fName," and the value it contains is "Bob," and `type` is set to `MappingType.Attribute`, the XML element would be as follows:</span></span>  
  
 <span data-ttu-id="e4f95-155">\<Name fName = 'Bob'/></span><span class="sxs-lookup"><span data-stu-id="e4f95-155">\<Name fName = 'Bob'/></span></span>  
  
 <span data-ttu-id="e4f95-156">如需有關如何將資料行對應至項目或屬性的詳細資訊，請參閱<xref:System.Data.DataColumn.ColumnMapping%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="e4f95-156">For more information about how columns are mapped to elements or attributes, see the <xref:System.Data.DataColumn.ColumnMapping%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4f95-157">下列範例會建構一個計算資料行。</span><span class="sxs-lookup"><span data-stu-id="e4f95-157">The following example constructs a computed column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e4f95-158">未指定任何的 <paramref name="dataType" />。</span><span class="sxs-lookup"><span data-stu-id="e4f95-158">No <paramref name="dataType" /> was specified.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.ColumnMapping" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName="AllowDBNull">
      <MemberSignature Language="C#" Value="public bool AllowDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AllowDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDBNull { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4f95-159">取得或設定值，指出對於屬於資料表的資料列而言，這個資料行中是否允許 Null 值。</span><span class="sxs-lookup"><span data-stu-id="e4f95-159">Gets or sets a value that indicates whether null values are allowed in this column for rows that belong to the table.</span></span></summary>
        <value>
          <span data-ttu-id="e4f95-160">如果允許 Null 值，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e4f95-160"><see langword="true" /> if null values values are allowed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e4f95-161">預設值為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="e4f95-161">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4f95-162">下列範例會建立新<xref:System.Data.DataColumn>並設定其<xref:System.Data.DataColumn.AllowDBNull%2A>屬性`true`。</span><span class="sxs-lookup"><span data-stu-id="e4f95-162">The following example creates a new <xref:System.Data.DataColumn> and sets its <xref:System.Data.DataColumn.AllowDBNull%2A> property to `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AllowDBNull Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AllowDBNull Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AllowDBNull Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AllowDBNull Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Unique" />
      </Docs>
    </Member>
    <Member MemberName="AutoIncrement">
      <MemberSignature Language="C#" Value="public bool AutoIncrement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoIncrement" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrement" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoIncrement { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4f95-163">取得或設定值，指出對於加入至資料表的新資料列而言，該資料行是否自動遞增資料行的值。</span><span class="sxs-lookup"><span data-stu-id="e4f95-163">Gets or sets a value that indicates whether the column automatically increments the value of the column for new rows added to the table.</span></span></summary>
        <value>
          <span data-ttu-id="e4f95-164">如果資料行值自動遞增，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e4f95-164"><see langword="true" /> if the value of the column increments automatically; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e4f95-165">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e4f95-165">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f95-166">如果此資料行類型不是 Int16、 Int32 或 Int64 當設定這個屬性，<xref:System.Data.DataColumn.DataType%2A>屬性會強制轉型為 Int32。</span><span class="sxs-lookup"><span data-stu-id="e4f95-166">If the type of this column is not Int16, Int32, or Int64 when this property is set, the <xref:System.Data.DataColumn.DataType%2A> property is coerced to Int32.</span></span> <span data-ttu-id="e4f95-167">如果這是計算資料行，會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e4f95-167">An exception is generated if this is a computed column.</span></span> <span data-ttu-id="e4f95-168"><xref:System.Data.DataColumn.Expression%2A>屬性設定。</span><span class="sxs-lookup"><span data-stu-id="e4f95-168">The <xref:System.Data.DataColumn.Expression%2A> property is set.</span></span> <span data-ttu-id="e4f95-169">只有當此資料行，當加入資料行集合中，資料列的值等於預設值，會使用遞增的值。</span><span class="sxs-lookup"><span data-stu-id="e4f95-169">The incremented value is used only if the row's value for this column, when added to the columns collection, is equal to the default value.</span></span>  
  
 <span data-ttu-id="e4f95-170">您可以建立新的資料列使用<xref:System.Data.DataRow.ItemArray%2A>屬性<xref:System.Data.DataRow>類別，並傳入值的陣列。</span><span class="sxs-lookup"><span data-stu-id="e4f95-170">You can create a new row using the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class and passing in an array of values.</span></span> <span data-ttu-id="e4f95-171">這是潛在問題的資料行，其<xref:System.Data.DataColumn.AutoIncrement%2A>設`true`，因為它的值會自動產生。</span><span class="sxs-lookup"><span data-stu-id="e4f95-171">This is a potential problem for a column with its <xref:System.Data.DataColumn.AutoIncrement%2A> set to `true`, because its value is generated automatically.</span></span> <span data-ttu-id="e4f95-172">若要使用<xref:System.Data.DataRow.ItemArray%2A>屬性，放在`null`在陣列中的資料行的位置。</span><span class="sxs-lookup"><span data-stu-id="e4f95-172">To use the <xref:System.Data.DataRow.ItemArray%2A> property, place `null` in the column's position in the array.</span></span> <span data-ttu-id="e4f95-173">如需詳細資訊，請參閱<xref:System.Data.DataRow.ItemArray%2A>屬性<xref:System.Data.DataRow>類別。</span><span class="sxs-lookup"><span data-stu-id="e4f95-173">For more information, see the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class.</span></span>  
  
 <span data-ttu-id="e4f95-174">如果資料行的類型是<xref:System.Data.SqlTypes.SqlInt16>或<xref:System.Data.SqlTypes.SqlInt32>，<xref:System.Data.DataColumn.AutoIncrement%2A>將無法運作。</span><span class="sxs-lookup"><span data-stu-id="e4f95-174">If the type of the column is <xref:System.Data.SqlTypes.SqlInt16> or <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.DataColumn.AutoIncrement%2A> will not work.</span></span> <span data-ttu-id="e4f95-175">請改用 Int16 或 Int32。</span><span class="sxs-lookup"><span data-stu-id="e4f95-175">Use Int16 or Int32 instead.</span></span>  
  
 <span data-ttu-id="e4f95-176">如果資料行的類型是<xref:System.Data.SqlTypes.SqlInt64>或<xref:System.Data.SqlTypes.SqlDecimal>，<xref:System.Data.DataColumn.AutoIncrement%2A>僅部分運作。</span><span class="sxs-lookup"><span data-stu-id="e4f95-176">If the type of the column is <xref:System.Data.SqlTypes.SqlInt64> or <xref:System.Data.SqlTypes.SqlDecimal>, <xref:System.Data.DataColumn.AutoIncrement%2A> will only partially work.</span></span> <span data-ttu-id="e4f95-177">請改用 Int64 或十進位。</span><span class="sxs-lookup"><span data-stu-id="e4f95-177">Use Int64 or Decimal instead.</span></span>  
  
 <span data-ttu-id="e4f95-178">當<xref:System.Data.DataColumn.AutoIncrementStep%2A>值加入至目前的值，會隱藏溢位檢查。</span><span class="sxs-lookup"><span data-stu-id="e4f95-178">When the <xref:System.Data.DataColumn.AutoIncrementStep%2A> value is added to the current value, the overflow check is suppressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4f95-179">下列範例會設定<xref:System.Data.DataColumn.AutoIncrement%2A>， <xref:System.Data.DataColumn.AutoIncrementSeed%2A>，和<xref:System.Data.DataColumn.AutoIncrementStep%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="e4f95-179">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e4f95-180">該資料行是計算的資料行。</span><span class="sxs-lookup"><span data-stu-id="e4f95-180">The column is a computed column.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.AutoIncrementSeed" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementStep" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
      </Docs>
    </Member>
    <Member MemberName="AutoIncrementSeed">
      <MemberSignature Language="C#" Value="public long AutoIncrementSeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AutoIncrementSeed" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrementSeed" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrementSeed As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long AutoIncrementSeed { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4f95-181">取得或設定資料行的開始值，這個資料行的 <see cref="P:System.Data.DataColumn.AutoIncrement" /> 屬性設定為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="e4f95-181">Gets or sets the starting value for a column that has its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span></span> <span data-ttu-id="e4f95-182">預設值為 0。</span><span class="sxs-lookup"><span data-stu-id="e4f95-182">The default is 0.</span></span></summary>
        <value><span data-ttu-id="e4f95-183"><see cref="P:System.Data.DataColumn.AutoIncrement" /> 函式的開始值。</span><span class="sxs-lookup"><span data-stu-id="e4f95-183">The starting value for the <see cref="P:System.Data.DataColumn.AutoIncrement" /> feature.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4f95-184">下列範例會設定<xref:System.Data.DataColumn.AutoIncrement%2A>， <xref:System.Data.DataColumn.AutoIncrementSeed%2A>，和<xref:System.Data.DataColumn.AutoIncrementStep%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="e4f95-184">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementStep" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
      </Docs>
    </Member>
    <Member MemberName="AutoIncrementStep">
      <MemberSignature Language="C#" Value="public long AutoIncrementStep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AutoIncrementStep" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrementStep" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrementStep As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long AutoIncrementStep { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4f95-185">取得或設定資料行所使用的遞增，這個資料行的 <see cref="P:System.Data.DataColumn.AutoIncrement" /> 屬性設定為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="e4f95-185">Gets or sets the increment used by a column with its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="e4f95-186">自動遞增資料行值所根據的數字。</span><span class="sxs-lookup"><span data-stu-id="e4f95-186">The number by which the value of the column is automatically incremented.</span></span> <span data-ttu-id="e4f95-187">預設為 1。</span><span class="sxs-lookup"><span data-stu-id="e4f95-187">The default is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4f95-188">下列範例會設定<xref:System.Data.DataColumn.AutoIncrement%2A>， <xref:System.Data.DataColumn.AutoIncrementSeed%2A>，和<xref:System.Data.DataColumn.AutoIncrementStep%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="e4f95-188">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e4f95-189">設定的值為零。</span><span class="sxs-lookup"><span data-stu-id="e4f95-189">The value set is zero.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementSeed" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4f95-190">取得或設定資料行的標題。</span><span class="sxs-lookup"><span data-stu-id="e4f95-190">Gets or sets the caption for the column.</span></span></summary>
        <value><span data-ttu-id="e4f95-191">資料行的標題。</span><span class="sxs-lookup"><span data-stu-id="e4f95-191">The caption of the column.</span></span> <span data-ttu-id="e4f95-192">如果未設定標題，則傳回 <see cref="P:System.Data.DataColumn.ColumnName" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e4f95-192">If not set, returns the <see cref="P:System.Data.DataColumn.ColumnName" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f95-193">您可以使用<xref:System.Data.DataColumn.Caption%2A>屬性顯示的敘述性或好記名稱<xref:System.Data.DataColumn>。</span><span class="sxs-lookup"><span data-stu-id="e4f95-193">You can use the <xref:System.Data.DataColumn.Caption%2A> property to display a descriptive or friendly name for a <xref:System.Data.DataColumn>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4f95-194">下列範例會建立新<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e4f95-194">The following example creates a new <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="e4f95-195">接著它會加入三個<xref:System.Data.DataColumn>物件加入至<xref:System.Data.DataColumnCollection>並設定<xref:System.Data.DataColumn.Caption%2A>每個屬性<xref:System.Data.DataColumn>。</span><span class="sxs-lookup"><span data-stu-id="e4f95-195">It then adds three <xref:System.Data.DataColumn> objects to a <xref:System.Data.DataColumnCollection> and sets the <xref:System.Data.DataColumn.Caption%2A> property for each <xref:System.Data.DataColumn>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Caption Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Caption Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Caption Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Caption Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
      </Docs>
    </Member>
    <Member MemberName="CheckNotAllowNull">
      <MemberSignature Language="C#" Value="protected internal void CheckNotAllowNull ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void CheckNotAllowNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.CheckNotAllowNull" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub CheckNotAllowNull ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void CheckNotAllowNull();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e4f95-196">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</span><span class="sxs-lookup"><span data-stu-id="e4f95-196">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckUnique">
      <MemberSignature Language="C#" Value="protected void CheckUnique ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckUnique() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.CheckUnique" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CheckUnique ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CheckUnique();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e4f95-197">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</span><span class="sxs-lookup"><span data-stu-id="e4f95-197">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnMapping">
      <MemberSignature Language="C#" Value="public virtual System.Data.MappingType ColumnMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MappingType ColumnMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ColumnMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ColumnMapping As MappingType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::MappingType ColumnMapping { System::Data::MappingType get(); void set(System::Data::MappingType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.MappingType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4f95-198">取得或設定資料行的 <see cref="T:System.Data.MappingType" />。</span><span class="sxs-lookup"><span data-stu-id="e4f95-198">Gets or sets the <see cref="T:System.Data.MappingType" /> of the column.</span></span></summary>
        <value><span data-ttu-id="e4f95-199">其中一個 <see cref="T:System.Data.MappingType" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e4f95-199">One of the <see cref="T:System.Data.MappingType" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f95-200"><xref:System.Data.DataColumn.ColumnMapping%2A>屬性會決定如何<xref:System.Data.DataColumn>當對應<xref:System.Data.DataSet>會另存為 XML 文件使用<xref:System.Data.DataSet.WriteXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e4f95-200">The <xref:System.Data.DataColumn.ColumnMapping%2A> property determines how a <xref:System.Data.DataColumn> is mapped when a <xref:System.Data.DataSet> is saved as an XML document using the <xref:System.Data.DataSet.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="e4f95-201">例如，如果<xref:System.Data.DataColumn>名為"customerID，"且其<xref:System.Data.DataColumn.ColumnMapping%2A>屬性設定為`MappingType.Element`，資料行值將會產生下列 XML:</span><span class="sxs-lookup"><span data-stu-id="e4f95-201">For example, if a <xref:System.Data.DataColumn> is named "customerID," and its <xref:System.Data.DataColumn.ColumnMapping%2A> property is set to `MappingType.Element`, the column value will produce the following XML:</span></span>  
  
```  
<Customers>  
 <customerID>ALFKI</customerID>  
......  
 </Customers>  
 <Orders>  
 <OrderID>12345</OrderID>  
 <customerID>ALFKI</customerID>  
......  
 </Orders>  
```  
  
 <span data-ttu-id="e4f95-202">不過，如果相同的資料行對應到`MappingType.Attribute`，則會產生下列 XML:</span><span class="sxs-lookup"><span data-stu-id="e4f95-202">However, if the same column is mapped to `MappingType.Attribute`, the following XML is produced:</span></span>  
  
```  
<Customers customerID="ALFKI"........more attributes.....>  
 <Order orderID="1234"....more attributes..../>  
 <Order orderID="1234"....more attributes..../>  
...... More orders for this customer  
 </Customers>  
```  
  
 <span data-ttu-id="e4f95-203">使用<xref:System.Data.DataColumn.%23ctor%2A>建構函式，其中包含`type`引數來指定如何<xref:System.Data.DataColumn>當對應其<xref:System.Data.DataSet>轉換為 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="e4f95-203">Use the <xref:System.Data.DataColumn.%23ctor%2A> constructor that contains the `type` argument to specificy how the <xref:System.Data.DataColumn> is mapped when its <xref:System.Data.DataSet> is transformed to an XML document.</span></span>  
  
 <span data-ttu-id="e4f95-204"><xref:System.Data.DataColumn.ColumnMapping%2A>屬性會對應到建構函式引數`type`。</span><span class="sxs-lookup"><span data-stu-id="e4f95-204">The <xref:System.Data.DataColumn.ColumnMapping%2A> property corresponds to the constructor argument `type`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4f95-205">下列範例會設定<xref:System.Data.DataColumn.ColumnMapping%2A>型別屬性時，新<xref:System.Data.DataColumn>。</span><span class="sxs-lookup"><span data-stu-id="e4f95-205">The following example sets the <xref:System.Data.DataColumn.ColumnMapping%2A> type property of new <xref:System.Data.DataColumn>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ColumnMapping Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnMapping Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ColumnMapping Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnMapping Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnName">
      <MemberSignature Language="C#" Value="public string ColumnName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ColumnName" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ColumnName" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ColumnName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4f95-206">取得或設定在 <see cref="T:System.Data.DataColumnCollection" /> 中的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="e4f95-206">Gets or sets the name of the column in the <see cref="T:System.Data.DataColumnCollection" />.</span></span></summary>
        <value><span data-ttu-id="e4f95-207">資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="e4f95-207">The name of the column.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f95-208">當<xref:System.Data.DataColumn>已建立，沒有任何<xref:System.Data.DataColumn.ColumnName%2A>值。</span><span class="sxs-lookup"><span data-stu-id="e4f95-208">When a <xref:System.Data.DataColumn> is created, it has no <xref:System.Data.DataColumn.ColumnName%2A> value.</span></span> <span data-ttu-id="e4f95-209">不過，當<xref:System.Data.DataColumn>加入至<xref:System.Data.DataColumnCollection>如<xref:System.Data.DataTable>物件，它給予預設的名稱 （"Column1"、"Column2"，等等）。</span><span class="sxs-lookup"><span data-stu-id="e4f95-209">However, when the <xref:System.Data.DataColumn> is added to a <xref:System.Data.DataColumnCollection> for a <xref:System.Data.DataTable> object, it is given a default name ("Column1", "Column2", and so on).</span></span>  
  
 <span data-ttu-id="e4f95-210">根據預設，<xref:System.Data.DataColumn.Caption%2A>值設定為<xref:System.Data.DataColumn.ColumnName%2A>值。</span><span class="sxs-lookup"><span data-stu-id="e4f95-210">By default, the <xref:System.Data.DataColumn.Caption%2A> value is set to the <xref:System.Data.DataColumn.ColumnName%2A> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4f95-211">下列範例取得<xref:System.Data.DataColumn.ColumnName%2A>每個資料行中每個資料表中<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="e4f95-211">The following examples gets the <xref:System.Data.DataColumn.ColumnName%2A> for every column in every table in a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="e4f95-212">此範例也示範如何建立<xref:System.Data.DataColumn>與新<xref:System.Data.DataColumn.ColumnName%2A>。</span><span class="sxs-lookup"><span data-stu-id="e4f95-212">The example also shows how to create a <xref:System.Data.DataColumn> with a new <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ColumnName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ColumnName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e4f95-213">屬性會設定為 <see langword="null" /> 或空字串，並且資料行會屬於集合。</span><span class="sxs-lookup"><span data-stu-id="e4f95-213">The property is set to <see langword="null" /> or an empty string and the column belongs to a collection.</span></span></exception>
        <exception cref="T:System.Data.DuplicateNameException"><span data-ttu-id="e4f95-214">具有相同名稱的資料行已經存在於集合中。</span><span class="sxs-lookup"><span data-stu-id="e4f95-214">A column with the same name already exists in the collection.</span></span> <span data-ttu-id="e4f95-215">名稱比較不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="e4f95-215">The name comparison is not case sensitive.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.Caption" />
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public Type DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DataType" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DataType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.ColumnTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4f95-216">取得或設定儲存在資料行中的資料型別。</span><span class="sxs-lookup"><span data-stu-id="e4f95-216">Gets or sets the type of data stored in the column.</span></span></summary>
        <value><span data-ttu-id="e4f95-217"><see cref="T:System.Type" /> 物件，表示資料行資料型別。</span><span class="sxs-lookup"><span data-stu-id="e4f95-217">A <see cref="T:System.Type" /> object that represents the column data type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f95-218">設定<xref:System.Data.DataColumn.DataType%2A>值是很重要，以及確保正確建立和更新的資料來源中的資料。</span><span class="sxs-lookup"><span data-stu-id="e4f95-218">Setting the <xref:System.Data.DataColumn.DataType%2A> value is very important to guaranteeing the correct creation and updating of data in a data source.</span></span>  
  
 <span data-ttu-id="e4f95-219"><xref:System.Data.DataColumn.DataType%2A>屬性支援下列的基底.NET Framework 資料型別：</span><span class="sxs-lookup"><span data-stu-id="e4f95-219">The <xref:System.Data.DataColumn.DataType%2A> property supports the following base .NET Framework data types:</span></span>  
  
-   <xref:System.Boolean>  
  
-   <xref:System.Byte>  
  
-   <xref:System.Char>  
  
-   <xref:System.DateTime>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Double>  
  
-   <xref:System.Guid>  
  
-   <xref:System.Int16>  
  
-   <xref:System.Int32>  
  
-   <xref:System.Int64>  
  
-   <xref:System.SByte>  
  
-   <xref:System.Single>  
  
-   <xref:System.String>  
  
-   <xref:System.TimeSpan>  
  
-   <xref:System.UInt16>  
  
-   <xref:System.UInt32>  
  
-   <xref:System.UInt64>  
  
 <span data-ttu-id="e4f95-220">以及下列的陣列型別：</span><span class="sxs-lookup"><span data-stu-id="e4f95-220">as well as the following array type:</span></span>  
  
-   `Byte[]`  
  
 <span data-ttu-id="e4f95-221">當變更此屬性的資料行之後，已經開始儲存資料時，會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e4f95-221">An exception is generated when changing this property after the column has begun storing data.</span></span>  
  
 <span data-ttu-id="e4f95-222">如果<xref:System.Data.DataColumn.AutoIncrement%2A>設`true`，才能設定<xref:System.Data.DataColumn.DataType%2A>屬性，而且嘗試將類型設為整數類型以外的項目，會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e4f95-222">If <xref:System.Data.DataColumn.AutoIncrement%2A> is set to `true` before setting the <xref:System.Data.DataColumn.DataType%2A> property, and you try to set the type to anything except an integer type, an exception is generated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e4f95-223">資料類型的資料行`Byte[]`需要特殊處理方式，在某些情況下，因為它是在不同於基底的.NET Framework 資料類型，參考資料類型。</span><span class="sxs-lookup"><span data-stu-id="e4f95-223">A column of data type `Byte[]` requires special treatment in certain cases since, unlike the base .NET Framework data types, it is a reference data type.</span></span> <span data-ttu-id="e4f95-224">如果資料類型的資料行`Byte[]`做<xref:System.Data.DataTable.PrimaryKey%2A>，或為<xref:System.Data.DataView.Sort%2A>或<xref:System.Data.DataView.RowFilter%2A>金鑰<xref:System.Data.DataView>，資料行值的任何變更都必須包括指派`Byte[]`分別具現化資料行值`Byte[]`物件。</span><span class="sxs-lookup"><span data-stu-id="e4f95-224">If a column of data type `Byte[]` is used as a <xref:System.Data.DataTable.PrimaryKey%2A>, or as a <xref:System.Data.DataView.Sort%2A> or <xref:System.Data.DataView.RowFilter%2A> key for a <xref:System.Data.DataView>, any change to the column value must involve assigning the `Byte[]` column value to a separately instantiated `Byte[]` object.</span></span> <span data-ttu-id="e4f95-225">此指派，才能觸發排序、 篩選和主索引鍵作業所使用的內部索引更新。</span><span class="sxs-lookup"><span data-stu-id="e4f95-225">This assignment is required to trigger the update of the internal indexes used by sorting, filtering, and primary key operations.</span></span> <span data-ttu-id="e4f95-226">以下範例就是說明這種情況：</span><span class="sxs-lookup"><span data-stu-id="e4f95-226">This is illustrated by the following example:</span></span>  
  
```  
byte[] columnValue = (byte[])myDataTable.Rows[0][0];  
byte[] newValue = (byte[])columnValue.Clone();  
newValue[1] = 2;  
myDataTable.Rows[0][0] = newValue;  
```  
  
> [!NOTE]
>  <span data-ttu-id="e4f95-227">雖然可以將資料行定義為資料類型，而不是基底的.NET Framework 資料型別和`Byte[]`，這類資料行都將視為使用者定義類型，受限於下列使用量限制。</span><span class="sxs-lookup"><span data-stu-id="e4f95-227">Although it is possible to define a column as data type other than the base .NET Framework data types and `Byte[]`, such a column will be treated as a user-defined type, subject to the following usage restrictions.</span></span> <span data-ttu-id="e4f95-228">(如需有關使用者定義類型的詳細資訊，請參閱[建立和 Using User-Defined 類型](http://msdn.microsoft.com/library/ec0266d2-7e5b-47e4-938a-85ac9d04fa40)。)</span><span class="sxs-lookup"><span data-stu-id="e4f95-228">(For more information on user-defined types, see [Creating and Using User-Defined Types](http://msdn.microsoft.com/library/ec0266d2-7e5b-47e4-938a-85ac9d04fa40).)</span></span>  
  
-   <span data-ttu-id="e4f95-229">資料行不能屬於<xref:System.Data.DataView.RowFilter%2A>或<xref:System.Data.DataTable.Select%2A>運算式。</span><span class="sxs-lookup"><span data-stu-id="e4f95-229">The column cannot be part of a <xref:System.Data.DataView.RowFilter%2A> or <xref:System.Data.DataTable.Select%2A> expression.</span></span>  
  
-   <span data-ttu-id="e4f95-230">如果資料行作為<xref:System.Data.DataTable.PrimaryKey%2A>，或為<xref:System.Data.DataView.Sort%2A>或<xref:System.Data.DataView>，必須將它視為不可變動的欄位; 一旦加入至資料表資料行的資料不能變更。</span><span class="sxs-lookup"><span data-stu-id="e4f95-230">If the column is used as a <xref:System.Data.DataTable.PrimaryKey%2A>, or as a <xref:System.Data.DataView.Sort%2A> or for a <xref:System.Data.DataView>, it must be treated as an immutable field; the column data must not be changed once it has been added to the table.</span></span>  
  
-   <span data-ttu-id="e4f95-231">其<xref:System.Data.DataColumn.ColumnMapping%2A>可以只設定為`MappingType.Element`。</span><span class="sxs-lookup"><span data-stu-id="e4f95-231">Its <xref:System.Data.DataColumn.ColumnMapping%2A> can be only set to `MappingType.Element`.</span></span>  
  
-   <span data-ttu-id="e4f95-232">資料行的資料類型必須的實作都必須標記為類別<xref:System.SerializableAttribute>，而且如果實作必要<xref:System.Runtime.Serialization.ISerializable>或<xref:System.Xml.Serialization.IXmlSerializable>介面。</span><span class="sxs-lookup"><span data-stu-id="e4f95-232">The class that implements the column’s data type must be must be marked with the <xref:System.SerializableAttribute>, and if necessary implement the <xref:System.Runtime.Serialization.ISerializable> or <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
-   <span data-ttu-id="e4f95-233">變更追蹤的支援有所限制。</span><span class="sxs-lookup"><span data-stu-id="e4f95-233">Support for change tracking is limited.</span></span> <span data-ttu-id="e4f95-234">利用<xref:System.Data.DataTable>類別的變更追蹤機制，實作的資料行資料類型的類別必須實作<xref:System.ComponentModel.IChangeTracking>介面或接管負責通知<xref:System.Data.DataRow>時已經過的資料行值修改，或是藉由呼叫<xref:System.Data.DataRow.SetModified%2A>資料列或資料行值物件指派給個別具現化的資料行的值物件。</span><span class="sxs-lookup"><span data-stu-id="e4f95-234">To utilize the <xref:System.Data.DataTable> class’s change tracking mechanism, the class that implements the column’s data type must either implement the <xref:System.ComponentModel.IChangeTracking> interface, or take over the responsibility for informing the <xref:System.Data.DataRow> when the column value has been modified, either by calling <xref:System.Data.DataRow.SetModified%2A> on the row or by assigning the column value object to a separately instantiated column value object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4f95-235">下列範例會將數個資料類型的資料行<xref:System.Data.DataTable>，然後將一個資料列加入至資料表。</span><span class="sxs-lookup"><span data-stu-id="e4f95-235">The following example adds columns of several data types to a <xref:System.Data.DataTable>, and then adds one row to the table.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataType Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataType Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e4f95-236">資料行已經具有儲存的資料。</span><span class="sxs-lookup"><span data-stu-id="e4f95-236">The column already has data stored.</span></span></exception>
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Type.GetType" />
      </Docs>
    </Member>
    <Member MemberName="DateTimeMode">
      <MemberSignature Language="C#" Value="public System.Data.DataSetDateTime DateTimeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataSetDateTime DateTimeMode" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DateTimeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DateTimeMode As DataSetDateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataSetDateTime DateTimeMode { System::Data::DataSetDateTime get(); void set(System::Data::DataSetDateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataSetDateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4f95-237">取得或設定資料行的 <see langword="DateTimeMode" />。</span><span class="sxs-lookup"><span data-stu-id="e4f95-237">Gets or sets the <see langword="DateTimeMode" /> for the column.</span></span></summary>
        <value><span data-ttu-id="e4f95-238">指定之資料行的 <see cref="T:System.Data.DataSetDateTime" />。</span><span class="sxs-lookup"><span data-stu-id="e4f95-238">The <see cref="T:System.Data.DataSetDateTime" /> for the specified column.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f95-239"><xref:System.Data.DataColumn.DateTimeMode%2A>資料列會加入後即無法修改<xref:System.Data.DataColumn>，除了從修改<xref:System.Data.DataSetDateTime.Unspecified>和<xref:System.Data.DataSetDateTime.UnspecifiedLocal>，反之亦然。</span><span class="sxs-lookup"><span data-stu-id="e4f95-239">The <xref:System.Data.DataColumn.DateTimeMode%2A> cannot be modified after rows are added to a <xref:System.Data.DataColumn>, except for modifying from <xref:System.Data.DataSetDateTime.Unspecified> and <xref:System.Data.DataSetDateTime.UnspecifiedLocal> or vice-versa.</span></span> <span data-ttu-id="e4f95-240">從修改`UnspecifiedLocal`至`Unspecified`，且反之亦然允許這兩個選項之間的差異只在還原序列化期間並不會影響存放裝置。</span><span class="sxs-lookup"><span data-stu-id="e4f95-240">The modification from `UnspecifiedLocal` to `Unspecified` and vice-versa is allowed as the difference between these two options is only during serialization and does not affect the storage.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public object DefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.DefaultValueTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4f95-241">在建立新資料列時，取得或設定資料行的預設值。</span><span class="sxs-lookup"><span data-stu-id="e4f95-241">Gets or sets the default value for the column when you are creating new rows.</span></span></summary>
        <value><span data-ttu-id="e4f95-242">適合資料行的 <see cref="P:System.Data.DataColumn.DataType" /> 之值。</span><span class="sxs-lookup"><span data-stu-id="e4f95-242">A value appropriate to the column's <see cref="P:System.Data.DataColumn.DataType" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f95-243">預設值是會自動指派給資料行的值時<xref:System.Data.DataRow>建立 (例如，日期和時間<xref:System.Data.DataRow>所建立。</span><span class="sxs-lookup"><span data-stu-id="e4f95-243">A default value is the value that is automatically assigned to the column when a <xref:System.Data.DataRow> is created (for example, the date and time when the <xref:System.Data.DataRow> was created.</span></span>  
  
 <span data-ttu-id="e4f95-244">當<xref:System.Data.DataColumn.AutoIncrement%2A>設為 true，可以有沒有預設值。</span><span class="sxs-lookup"><span data-stu-id="e4f95-244">When <xref:System.Data.DataColumn.AutoIncrement%2A> is set to true, there can be no default value.</span></span>  
  
 <span data-ttu-id="e4f95-245">您可以建立新的資料列使用<xref:System.Data.DataRow.ItemArray%2A>屬性<xref:System.Data.DataRow>類別，然後將值陣列。</span><span class="sxs-lookup"><span data-stu-id="e4f95-245">You can create a new row using the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class and passing the method an array of values.</span></span> <span data-ttu-id="e4f95-246">這是預設值的資料行可能有問題，因為它的值會自動產生。</span><span class="sxs-lookup"><span data-stu-id="e4f95-246">This is a potential problem for a column with a default value because its value is generated automatically.</span></span> <span data-ttu-id="e4f95-247">若要使用<xref:System.Data.DataRow.ItemArray%2A>屬性這類資料行，與將放`null`在陣列中的資料行的位置。</span><span class="sxs-lookup"><span data-stu-id="e4f95-247">To use the <xref:System.Data.DataRow.ItemArray%2A> property with such a column, place `null` in the column's position in the array.</span></span> <span data-ttu-id="e4f95-248">如需詳細資訊，請參閱 <xref:System.Data.DataRow.ItemArray%2A> 屬性 (Property)。</span><span class="sxs-lookup"><span data-stu-id="e4f95-248">For more information, see the <xref:System.Data.DataRow.ItemArray%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4f95-249">下列範例會建立數個<xref:System.Data.DataColumn>物件具有不同的資料類型，並設定適當的預設值，每個資料行。</span><span class="sxs-lookup"><span data-stu-id="e4f95-249">The following example creates several <xref:System.Data.DataColumn> objects that have different data types, and sets appropriate default values to each column.</span></span>  
  
 [!code-vb[Classic WebData DataColumn.DefaultValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DefaultValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="e4f95-250">在加入資料列時，預設值不是資料行資料型別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="e4f95-250">When you are adding a row, the default value is not an instance of the column's data type.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.UniqueConstraint" />
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4f95-251">取得或設定運算式，用來篩選資料列、計算資料行中的值或建立彙總資料行。</span><span class="sxs-lookup"><span data-stu-id="e4f95-251">Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.</span></span></summary>
        <value><span data-ttu-id="e4f95-252">運算式，用來計算資料行的值或建立彙總資料行。</span><span class="sxs-lookup"><span data-stu-id="e4f95-252">An expression to calculate the value of a column, or create an aggregate column.</span></span> <span data-ttu-id="e4f95-253">運算式的傳回型別是由資料行的 <see cref="P:System.Data.DataColumn.DataType" /> 所判斷。</span><span class="sxs-lookup"><span data-stu-id="e4f95-253">The return type of an expression is determined by the <see cref="P:System.Data.DataColumn.DataType" /> of the column.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f95-254">使用一<xref:System.Data.DataColumn.Expression%2A>屬性是要建立導出資料行。</span><span class="sxs-lookup"><span data-stu-id="e4f95-254">One use of the <xref:System.Data.DataColumn.Expression%2A> property is to create calculated columns.</span></span> <span data-ttu-id="e4f95-255">例如，若要計算的稅額值，單價乘以特定區域的稅率。</span><span class="sxs-lookup"><span data-stu-id="e4f95-255">For example, to calculate a tax value, the unit price is multiplied by a tax rate of a specific region.</span></span> <span data-ttu-id="e4f95-256">因為稅率不同地區，它就無法將單一稅率放在資料行，相反地，這個值會計算使用<xref:System.Data.DataColumn.Expression%2A>屬性，Visual Basic 程式碼的下一節中所示：</span><span class="sxs-lookup"><span data-stu-id="e4f95-256">Because tax rates vary from region to region, it would be impossible to put a single tax rate in a column; instead, the value is calculated using the <xref:System.Data.DataColumn.Expression%2A> property, as shown in the Visual Basic code in the following section:</span></span>  
  
 <span data-ttu-id="e4f95-257">DataSet1.Tables("Products").Columns("tax").Expression = "UnitPrice \* 0.086"</span><span class="sxs-lookup"><span data-stu-id="e4f95-257">DataSet1.Tables("Products").Columns("tax").Expression = "UnitPrice \* 0.086"</span></span>  
  
 <span data-ttu-id="e4f95-258">第二種用法是建立彙總的資料行。</span><span class="sxs-lookup"><span data-stu-id="e4f95-258">A second use is to create an aggregate column.</span></span> <span data-ttu-id="e4f95-259">類似於計算的值，彙總執行根據一組完整的資料列中的作業<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e4f95-259">Similar to a calculated value, an aggregate performs an operation based on the complete set of rows in the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="e4f95-260">簡單的範例是在集合中傳回的資料列計數。</span><span class="sxs-lookup"><span data-stu-id="e4f95-260">A simple example is to count the number of rows returned in the set.</span></span> <span data-ttu-id="e4f95-261">這是您要用於計算特定的銷售人員、 完成的交易數目，此 Visual Basic 程式碼所示的方法：</span><span class="sxs-lookup"><span data-stu-id="e4f95-261">This is the method you would use to count the number of transactions completed by a particular salesperson, as shown in this Visual Basic code:</span></span>  
  
```  
DataSet1.Tables("Orders").Columns("OrderCount").Expression = "Count(OrderID)"  
```  
  
## <a name="expression-syntax"></a><span data-ttu-id="e4f95-262">運算式語法</span><span class="sxs-lookup"><span data-stu-id="e4f95-262">Expression Syntax</span></span>  
 <span data-ttu-id="e4f95-263">當您建立運算式時，使用<xref:System.Data.DataColumn.ColumnName%2A>屬性來參考資料行。</span><span class="sxs-lookup"><span data-stu-id="e4f95-263">When you create an expression, use the <xref:System.Data.DataColumn.ColumnName%2A> property to refer to columns.</span></span> <span data-ttu-id="e4f95-264">例如，如果<xref:System.Data.DataColumn.ColumnName%2A>運算式將會有一個資料行為"UnitPrice"，而另一個"Quantity"，如下：</span><span class="sxs-lookup"><span data-stu-id="e4f95-264">For example, if the <xref:System.Data.DataColumn.ColumnName%2A> for one column is "UnitPrice", and another "Quantity", the expression would be as follows:</span></span>  
  
 <span data-ttu-id="e4f95-265">"UnitPrice \* Quantity"</span><span class="sxs-lookup"><span data-stu-id="e4f95-265">"UnitPrice \* Quantity"</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e4f95-266">如果在運算式中使用資料行，即稱為該資料行有相依性運算式。</span><span class="sxs-lookup"><span data-stu-id="e4f95-266">If a column is used in an expression, then the expression is said to have a dependency on that column.</span></span> <span data-ttu-id="e4f95-267">如果相依的資料行已重新命名或移除，則會擲不回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e4f95-267">If a dependent column is renamed or removed, no exception is thrown.</span></span> <span data-ttu-id="e4f95-268">存取已中斷的運算式資料行時，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e4f95-268">An exception will be thrown when the now-broken expression column is accessed.</span></span>  
  
 <span data-ttu-id="e4f95-269">當您建立篩選運算式時，將單引號字串：</span><span class="sxs-lookup"><span data-stu-id="e4f95-269">When you create an expression for a filter, enclose strings with single quotation marks:</span></span>  
  
 <span data-ttu-id="e4f95-270">"LastName = 'Jones'"</span><span class="sxs-lookup"><span data-stu-id="e4f95-270">"LastName = 'Jones'"</span></span>  
  
 <span data-ttu-id="e4f95-271">如果資料行名稱包含任何非英數字元或以數字開頭，或符合 （不區分大小） 任何下列的保留字，它需要特殊處理下, 面所述。</span><span class="sxs-lookup"><span data-stu-id="e4f95-271">If a column name contains any non-alphanumeric characters or starts with a digit or matches (case-insensitively) any of the following reserved words, it requires special handling, as described in the following paragraphs.</span></span>  
  
 <span data-ttu-id="e4f95-272">及</span><span class="sxs-lookup"><span data-stu-id="e4f95-272">And</span></span>  
  
 <span data-ttu-id="e4f95-273">介於</span><span class="sxs-lookup"><span data-stu-id="e4f95-273">Between</span></span>  
  
 <span data-ttu-id="e4f95-274">子系</span><span class="sxs-lookup"><span data-stu-id="e4f95-274">Child</span></span>  
  
 <span data-ttu-id="e4f95-275">False</span><span class="sxs-lookup"><span data-stu-id="e4f95-275">False</span></span>  
  
 <span data-ttu-id="e4f95-276">In</span><span class="sxs-lookup"><span data-stu-id="e4f95-276">In</span></span>  
  
 <span data-ttu-id="e4f95-277">為</span><span class="sxs-lookup"><span data-stu-id="e4f95-277">Is</span></span>  
  
 <span data-ttu-id="e4f95-278">Like</span><span class="sxs-lookup"><span data-stu-id="e4f95-278">Like</span></span>  
  
 <span data-ttu-id="e4f95-279">Not</span><span class="sxs-lookup"><span data-stu-id="e4f95-279">Not</span></span>  
  
 <span data-ttu-id="e4f95-280">Null</span><span class="sxs-lookup"><span data-stu-id="e4f95-280">Null</span></span>  
  
 <span data-ttu-id="e4f95-281">或</span><span class="sxs-lookup"><span data-stu-id="e4f95-281">Or</span></span>  
  
 <span data-ttu-id="e4f95-282">父代</span><span class="sxs-lookup"><span data-stu-id="e4f95-282">Parent</span></span>  
  
 <span data-ttu-id="e4f95-283">True</span><span class="sxs-lookup"><span data-stu-id="e4f95-283">True</span></span>  
  
 <span data-ttu-id="e4f95-284">如果資料行名稱會符合上述條件的其中一個，它必須包裝在任一方括號或"'"（抑音符號） 引號。</span><span class="sxs-lookup"><span data-stu-id="e4f95-284">If a column name satisfies one of the above conditions, it must be wrapped in either square brackets or the "\`" (grave accent) quotes.</span></span> <span data-ttu-id="e4f95-285">例如，若要使用名為 「 資料行 # 」 在運算式中的資料行，您可以撰寫任一"[資料行 #]":</span><span class="sxs-lookup"><span data-stu-id="e4f95-285">For example, to use a column named "Column#" in an expression, you would write either "[Column#]":</span></span>  
  
 <span data-ttu-id="e4f95-286">總計 \* [資料行 #]</span><span class="sxs-lookup"><span data-stu-id="e4f95-286">Total \* [Column#]</span></span>  
  
 <span data-ttu-id="e4f95-287">或 「\`資料行 #'":</span><span class="sxs-lookup"><span data-stu-id="e4f95-287">or "\`Column#`":</span></span>  
  
 <span data-ttu-id="e4f95-288">總計 \*\`資料行 #'</span><span class="sxs-lookup"><span data-stu-id="e4f95-288">Total \* \`Column#\`</span></span>  
  
 <span data-ttu-id="e4f95-289">如果資料行名稱加上以方括號，則任何 ']' 和'\\' 字元 （但不是含任何其他字元） 中必須逸出方式是將它們與反斜線 ("\\") 字元。</span><span class="sxs-lookup"><span data-stu-id="e4f95-289">If the column name is enclosed in square brackets then any ']' and '\\' characters (but not any other characters) in it must be escaped by prepending them with the backslash ("\\") character.</span></span> <span data-ttu-id="e4f95-290">如果資料行名稱加上抑音符號字元它必須不包含任何抑音符號字元。</span><span class="sxs-lookup"><span data-stu-id="e4f95-290">If the column name is enclosed in grave accent characters then it must not contain any grave accent characters in it.</span></span> <span data-ttu-id="e4f95-291">例如，名為資料行 」 資料行 []\\"會被寫入：</span><span class="sxs-lookup"><span data-stu-id="e4f95-291">For example, a column named "Column[]\\" would be written:</span></span>  
  
 <span data-ttu-id="e4f95-292">總計 \* [資料行 [\\]\\\\]</span><span class="sxs-lookup"><span data-stu-id="e4f95-292">Total \* [Column[\\]\\\\]</span></span>  
  
 <span data-ttu-id="e4f95-293">或</span><span class="sxs-lookup"><span data-stu-id="e4f95-293">or</span></span>  
  
 <span data-ttu-id="e4f95-294">總計 \*\`資料行]\\`</span><span class="sxs-lookup"><span data-stu-id="e4f95-294">Total \* \`Column[]\\`</span></span>  
  
## <a name="user-defined-values"></a><span data-ttu-id="e4f95-295">使用者定義的值</span><span class="sxs-lookup"><span data-stu-id="e4f95-295">User-Defined Values</span></span>  
 <span data-ttu-id="e4f95-296">使用者定義的值可以用於運算式內資料行值進行比較。</span><span class="sxs-lookup"><span data-stu-id="e4f95-296">User-defined values may be used within expressions to be compared with column values.</span></span> <span data-ttu-id="e4f95-297">字串值應括在單引號 （和字串值中的每個單引號字元逸出方式是將它與另一個單引號字元）。</span><span class="sxs-lookup"><span data-stu-id="e4f95-297">String values should be enclosed within single quotation marks (and each single quotation character in a string value has to be escaped by prepending it with another single quotation character).</span></span> <span data-ttu-id="e4f95-298">日期值應該住井字號 （#） 或單引號 （'） 為基礎的資料提供者。</span><span class="sxs-lookup"><span data-stu-id="e4f95-298">Date values should be enclosed within pound signs (#) or single quotes (') based on the data provider.</span></span> <span data-ttu-id="e4f95-299">小數位數和科學記號標記法是允許的數字值。</span><span class="sxs-lookup"><span data-stu-id="e4f95-299">Decimals and scientific notation are permissible for numeric values.</span></span> <span data-ttu-id="e4f95-300">例如: </span><span class="sxs-lookup"><span data-stu-id="e4f95-300">For example:</span></span>  
  
 <span data-ttu-id="e4f95-301">"FirstName = 'John'"</span><span class="sxs-lookup"><span data-stu-id="e4f95-301">"FirstName = 'John'"</span></span>  
  
 <span data-ttu-id="e4f95-302">「 價格 < = 50.00"</span><span class="sxs-lookup"><span data-stu-id="e4f95-302">"Price <= 50.00"</span></span>  
  
 <span data-ttu-id="e4f95-303">「 Birthdate < #1/31/&#82;"</span><span class="sxs-lookup"><span data-stu-id="e4f95-303">"Birthdate < #1/31/82#"</span></span>  
  
 <span data-ttu-id="e4f95-304">包含列舉值的資料行，將值轉換為整數資料類型。</span><span class="sxs-lookup"><span data-stu-id="e4f95-304">For columns that contain enumeration values, cast the value to an integer data type.</span></span> <span data-ttu-id="e4f95-305">例如: </span><span class="sxs-lookup"><span data-stu-id="e4f95-305">For example:</span></span>  
  
 <span data-ttu-id="e4f95-306">"EnumColumn = 5"</span><span class="sxs-lookup"><span data-stu-id="e4f95-306">"EnumColumn = 5"</span></span>  
  
## <a name="parsing-literal-expressions"></a><span data-ttu-id="e4f95-307">剖析的常值運算式</span><span class="sxs-lookup"><span data-stu-id="e4f95-307">Parsing Literal Expressions</span></span>  
 <span data-ttu-id="e4f95-308">所有的常值運算式必須以表示的文化特性而異的地區設定。</span><span class="sxs-lookup"><span data-stu-id="e4f95-308">All literal expressions must be expressed in the invariant culture locale.</span></span> <span data-ttu-id="e4f95-309">當`DataSet`剖析，並將轉換常值運算式，它一定會使用文化特性而異，沒有目前的文化特性。</span><span class="sxs-lookup"><span data-stu-id="e4f95-309">When `DataSet` parses and converts literal expressions, it always uses the invariant culture, not the current culture.</span></span>  
  
 <span data-ttu-id="e4f95-310">單引號周圍的值時，會識別字串常值。</span><span class="sxs-lookup"><span data-stu-id="e4f95-310">String literals are identified when there are single quotes surrounding the value.</span></span> <span data-ttu-id="e4f95-311">例如: </span><span class="sxs-lookup"><span data-stu-id="e4f95-311">For example:</span></span>  
  
 <span data-ttu-id="e4f95-312">'John'</span><span class="sxs-lookup"><span data-stu-id="e4f95-312">'John'</span></span>  
  
 <span data-ttu-id="e4f95-313">`Boolean` 常值為 true 和 false。它們不加上引號運算式中。</span><span class="sxs-lookup"><span data-stu-id="e4f95-313">`Boolean` literals are true and false; they are not quoted in expressions.</span></span>  
  
 <span data-ttu-id="e4f95-314">`Integer` 常值 [+-]？[0-9] + 會被視為`System.Int32`，`System.Int64`或`System.Double`。</span><span class="sxs-lookup"><span data-stu-id="e4f95-314">`Integer` literals [+-]?[0-9]+ are treated as `System.Int32`, `System.Int64` or `System.Double`.</span></span> <span data-ttu-id="e4f95-315">`System.Double` 可能會遺失有效位數，視多大的數字是。</span><span class="sxs-lookup"><span data-stu-id="e4f95-315">`System.Double` can lose precision depending on how large the number is.</span></span> <span data-ttu-id="e4f95-316">例如，如果常值中的數字是 2147483650，`DataSet`會先嘗試剖析數字以`Int32`。</span><span class="sxs-lookup"><span data-stu-id="e4f95-316">For example, if the number in the literal is 2147483650, `DataSet` will first attempt to parse the number as an `Int32`.</span></span> <span data-ttu-id="e4f95-317">這將會失敗，因為數目太大。</span><span class="sxs-lookup"><span data-stu-id="e4f95-317">This will not succeed because the number is too large.</span></span> <span data-ttu-id="e4f95-318">在此情況下`DataSet`會剖析數字以`Int64`，這將會成功。</span><span class="sxs-lookup"><span data-stu-id="e4f95-318">In this case `DataSet` will parse the number as an `Int64`, which will succeed.</span></span> <span data-ttu-id="e4f95-319">如果常值是一個數字大於最大值的 Int64、`DataSet`常值使用，將會剖析`Double`。</span><span class="sxs-lookup"><span data-stu-id="e4f95-319">If the literal was a number larger than the maximum value of an Int64, `DataSet` will parse the literal using `Double`.</span></span>  
  
 <span data-ttu-id="e4f95-320">使用科學記號標記法，例如 4.42372E 實數常值-30，會使用剖析`System.Double`。</span><span class="sxs-lookup"><span data-stu-id="e4f95-320">Real literals using scientific notation, such as 4.42372E-30, are parsed using `System.Double`.</span></span>  
  
 <span data-ttu-id="e4f95-321">不含科學記號標記法，但小數點，實際的常值會被視為`System.Decimal`。</span><span class="sxs-lookup"><span data-stu-id="e4f95-321">Real literals without scientific notation, but with a decimal point, are treated as `System.Decimal`.</span></span> <span data-ttu-id="e4f95-322">如果數目超過支援的最大或最小值`System.Decimal`，則它會剖析為`System.Double`。</span><span class="sxs-lookup"><span data-stu-id="e4f95-322">If the number exceeds the maximum or minimum values supported by `System.Decimal`, then it is parsed as a `System.Double`.</span></span> <span data-ttu-id="e4f95-323">例如: </span><span class="sxs-lookup"><span data-stu-id="e4f95-323">For example:</span></span>  
  
 <span data-ttu-id="e4f95-324">142526.144524 將轉換成`Decimal`。</span><span class="sxs-lookup"><span data-stu-id="e4f95-324">142526.144524 will be converted to a `Decimal`.</span></span>  
  
 <span data-ttu-id="e4f95-325">345262.78036719560925667 會被視為`Double`。</span><span class="sxs-lookup"><span data-stu-id="e4f95-325">345262.78036719560925667 will be treated as a `Double`.</span></span>  
  
## <a name="operators"></a><span data-ttu-id="e4f95-326">運算子</span><span class="sxs-lookup"><span data-stu-id="e4f95-326">Operators</span></span>  
 <span data-ttu-id="e4f95-327">允許使用布林值 AND、 OR 和 NOT 運算子串連。</span><span class="sxs-lookup"><span data-stu-id="e4f95-327">Concatenation is allowed using Boolean AND, OR, and NOT operators.</span></span> <span data-ttu-id="e4f95-328">您可以使用括號群組子句，並強制執行優先順序。</span><span class="sxs-lookup"><span data-stu-id="e4f95-328">You can use parentheses to group clauses and force precedence.</span></span> <span data-ttu-id="e4f95-329">AND 運算子的優先順序高於其他運算子。</span><span class="sxs-lookup"><span data-stu-id="e4f95-329">The AND operator has precedence over other operators.</span></span> <span data-ttu-id="e4f95-330">例如: </span><span class="sxs-lookup"><span data-stu-id="e4f95-330">For example:</span></span>  
  
 <span data-ttu-id="e4f95-331">(LastName = 'smith ' 距離或 LastName = 'Jones')和 FirstName = 'John'</span><span class="sxs-lookup"><span data-stu-id="e4f95-331">(LastName = 'Smith' OR LastName = 'Jones') AND FirstName = 'John'</span></span>  
  
 <span data-ttu-id="e4f95-332">當您建立比較運算式時，允許下列運算子：</span><span class="sxs-lookup"><span data-stu-id="e4f95-332">When you create comparison expressions, the following operators are allowed:</span></span>  
  
 \<  
  
 >  
  
 \<=  
  
 >=  
  
 <>  
  
 =  
  
 <span data-ttu-id="e4f95-333">IN</span><span class="sxs-lookup"><span data-stu-id="e4f95-333">IN</span></span>  
  
 <span data-ttu-id="e4f95-334">LIKE</span><span class="sxs-lookup"><span data-stu-id="e4f95-334">LIKE</span></span>  
  
 <span data-ttu-id="e4f95-335">在運算式中也支援下列的算術運算子：</span><span class="sxs-lookup"><span data-stu-id="e4f95-335">The following arithmetic operators are also supported in expressions:</span></span>  
  
 <span data-ttu-id="e4f95-336">\+ （加號）</span><span class="sxs-lookup"><span data-stu-id="e4f95-336">\+ (addition)</span></span>  
  
 <span data-ttu-id="e4f95-337">\- (減法)</span><span class="sxs-lookup"><span data-stu-id="e4f95-337">\- (subtraction)</span></span>  
  
 <span data-ttu-id="e4f95-338">\* （乘號）</span><span class="sxs-lookup"><span data-stu-id="e4f95-338">\* (multiplication)</span></span>  
  
 <span data-ttu-id="e4f95-339">/ （除法）</span><span class="sxs-lookup"><span data-stu-id="e4f95-339">/ (division)</span></span>  
  
 <span data-ttu-id="e4f95-340">%（模數）</span><span class="sxs-lookup"><span data-stu-id="e4f95-340">% (modulus)</span></span>  
  
## <a name="string-operators"></a><span data-ttu-id="e4f95-341">字串運算子</span><span class="sxs-lookup"><span data-stu-id="e4f95-341">String Operators</span></span>  
 <span data-ttu-id="e4f95-342">若要串連的字串，請使用 + 字元。</span><span class="sxs-lookup"><span data-stu-id="e4f95-342">To concatenate a string, use the + character.</span></span> <span data-ttu-id="e4f95-343">值<xref:System.Data.DataSet.CaseSensitive%2A>屬性<xref:System.Data.DataSet>類別，判斷字串比較是否區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="e4f95-343">The value of the <xref:System.Data.DataSet.CaseSensitive%2A> property of the <xref:System.Data.DataSet> class determines whether string comparisons are case-sensitive.</span></span> <span data-ttu-id="e4f95-344">不過，您可以覆寫該值與<xref:System.Data.DataTable.CaseSensitive%2A>屬性<xref:System.Data.DataTable>類別。</span><span class="sxs-lookup"><span data-stu-id="e4f95-344">However, you can override that value with the <xref:System.Data.DataTable.CaseSensitive%2A> property of the <xref:System.Data.DataTable> class.</span></span>  
  
## <a name="wildcard-characters"></a><span data-ttu-id="e4f95-345">萬用字元</span><span class="sxs-lookup"><span data-stu-id="e4f95-345">Wildcard Characters</span></span>  
 <span data-ttu-id="e4f95-346">同時 \*，%可以交換使用 LIKE 比較中的萬用字元。</span><span class="sxs-lookup"><span data-stu-id="e4f95-346">Both the \* and % can be used interchangeably for wildcard characters in a LIKE comparison.</span></span> <span data-ttu-id="e4f95-347">如果 LIKE 子句中的字串包含 \* 或 %，這些字元必須括在括號 ([])。</span><span class="sxs-lookup"><span data-stu-id="e4f95-347">If the string in a LIKE clause contains a \* or %, those characters should be enclosed in brackets ([]).</span></span> <span data-ttu-id="e4f95-348">如果方括號是在子句中，都必須加上方括號 （例如 [] 或 []]） 加括號中的每個字元。</span><span class="sxs-lookup"><span data-stu-id="e4f95-348">If a bracket is in the clause, each bracket character should be enclosed in brackets (for example [[] or []]).</span></span> <span data-ttu-id="e4f95-349">開始和結尾的模式，或結尾的模式，或在模式開頭，允許萬用字元。</span><span class="sxs-lookup"><span data-stu-id="e4f95-349">A wildcard is allowed at the start and end of a pattern, or at the end of a pattern, or at the start of a pattern.</span></span> <span data-ttu-id="e4f95-350">例如: </span><span class="sxs-lookup"><span data-stu-id="e4f95-350">For example:</span></span>  
  
 <span data-ttu-id="e4f95-351">"ItemName 類似 '* 產品\*' 」</span><span class="sxs-lookup"><span data-stu-id="e4f95-351">"ItemName LIKE '*product\*'"</span></span>  
  
 <span data-ttu-id="e4f95-352">"ItemName 類似 '\* 產品' 」</span><span class="sxs-lookup"><span data-stu-id="e4f95-352">"ItemName LIKE '\*product'"</span></span>  
  
 <span data-ttu-id="e4f95-353">"ItemName LIKE 'product\*'"</span><span class="sxs-lookup"><span data-stu-id="e4f95-353">"ItemName LIKE 'product\*'"</span></span>  
  
 <span data-ttu-id="e4f95-354">字串中間不允許有萬用字元。</span><span class="sxs-lookup"><span data-stu-id="e4f95-354">Wildcard characters are not allowed in the middle of a string.</span></span> <span data-ttu-id="e4f95-355">例如，' te \* xt' 不允許。</span><span class="sxs-lookup"><span data-stu-id="e4f95-355">For example, 'te\*xt' is not allowed.</span></span>  
  
## <a name="parentchild-relation-referencing"></a><span data-ttu-id="e4f95-356">參考的父/子關聯性</span><span class="sxs-lookup"><span data-stu-id="e4f95-356">Parent/Child Relation Referencing</span></span>  
 <span data-ttu-id="e4f95-357">父資料表可能會在運算式中參考資料行名稱前面加上`Parent`。</span><span class="sxs-lookup"><span data-stu-id="e4f95-357">A parent table may be referenced in an expression by prepending the column name with `Parent`.</span></span> <span data-ttu-id="e4f95-358">例如，`Parent.Price`參考父資料表的資料行名為`Price`。</span><span class="sxs-lookup"><span data-stu-id="e4f95-358">For example, the `Parent.Price` references the parent table's column named `Price`.</span></span>  
  
 <span data-ttu-id="e4f95-359">當子系有一個以上的父資料列時，使用 Parent(RelationName)。ColumnName。</span><span class="sxs-lookup"><span data-stu-id="e4f95-359">When a child has more than one parent row, use Parent(RelationName).ColumnName.</span></span> <span data-ttu-id="e4f95-360">例如，Parent(RelationName)。價格會參考名價格為透過關聯性的父資料表的資料行。</span><span class="sxs-lookup"><span data-stu-id="e4f95-360">For example, the Parent(RelationName).Price references the parent table’s column named Price via the relation.</span></span>  
  
 <span data-ttu-id="e4f95-361">子資料表中的資料行可能會在運算式中參考資料行名稱前面加上`Child`。</span><span class="sxs-lookup"><span data-stu-id="e4f95-361">A column in a child table may be referenced in an expression by prepending the column name with `Child`.</span></span> <span data-ttu-id="e4f95-362">不過，因為子關聯性可能會傳回多個資料列，您必須包含參考子資料行在彙總函式。</span><span class="sxs-lookup"><span data-stu-id="e4f95-362">However, because child relationships may return multiple rows, you must include the reference to the child column in an aggregate function.</span></span> <span data-ttu-id="e4f95-363">例如，`Sum(Child.Price)`會傳回名為資料行的加總`Price`子資料表中。</span><span class="sxs-lookup"><span data-stu-id="e4f95-363">For example, `Sum(Child.Price)` would return the sum of the column named `Price` in the child table.</span></span>  
  
 <span data-ttu-id="e4f95-364">如果資料表有一個以上的子系，語法是： `Child(RelationName)`。</span><span class="sxs-lookup"><span data-stu-id="e4f95-364">If a table has more than one child, the syntax is: `Child(RelationName)`.</span></span> <span data-ttu-id="e4f95-365">比方說，如果資料表有兩個名為的子資料表`Customers`和`Orders`，而<xref:System.Data.DataRelation>物件命名為`Customers2Orders`，該參考為，如下所示：</span><span class="sxs-lookup"><span data-stu-id="e4f95-365">For example, if a table has two child tables named `Customers` and `Orders`, and the <xref:System.Data.DataRelation> object is named `Customers2Orders`, the reference would be as follows:</span></span>  
  
 <span data-ttu-id="e4f95-366">Avg(Child(Customers2Orders).Quantity)</span><span class="sxs-lookup"><span data-stu-id="e4f95-366">Avg(Child(Customers2Orders).Quantity)</span></span>  
  
## <a name="aggregates"></a><span data-ttu-id="e4f95-367">彙總</span><span class="sxs-lookup"><span data-stu-id="e4f95-367">Aggregates</span></span>  
 <span data-ttu-id="e4f95-368">支援下列彙總類型：</span><span class="sxs-lookup"><span data-stu-id="e4f95-368">The following aggregate types are supported:</span></span>  
  
 <span data-ttu-id="e4f95-369">Sum (Sum)</span><span class="sxs-lookup"><span data-stu-id="e4f95-369">Sum (Sum)</span></span>  
  
 <span data-ttu-id="e4f95-370">Avg （平均）</span><span class="sxs-lookup"><span data-stu-id="e4f95-370">Avg (Average)</span></span>  
  
 <span data-ttu-id="e4f95-371">最小值 （最小值）</span><span class="sxs-lookup"><span data-stu-id="e4f95-371">Min (Minimum)</span></span>  
  
 <span data-ttu-id="e4f95-372">最大值 （上限）</span><span class="sxs-lookup"><span data-stu-id="e4f95-372">Max (Maximum)</span></span>  
  
 <span data-ttu-id="e4f95-373">計數 （計數）</span><span class="sxs-lookup"><span data-stu-id="e4f95-373">Count (Count)</span></span>  
  
 <span data-ttu-id="e4f95-374">Stdev 函數 （統計標準差）</span><span class="sxs-lookup"><span data-stu-id="e4f95-374">StDev (Statistical standard deviation)</span></span>  
  
 <span data-ttu-id="e4f95-375">Var （統計變異數）。</span><span class="sxs-lookup"><span data-stu-id="e4f95-375">Var (Statistical variance).</span></span>  
  
 <span data-ttu-id="e4f95-376">彙總通常會執行沿著關聯性。</span><span class="sxs-lookup"><span data-stu-id="e4f95-376">Aggregates are ordinarily performed along relationships.</span></span> <span data-ttu-id="e4f95-377">使用其中一種稍早所列的函式和子資料表資料行的父子式關聯性參考先前討論中所述建立彙總的運算式。</span><span class="sxs-lookup"><span data-stu-id="e4f95-377">Create an aggregate expression by using one of the functions listed earlier and a child table column as detailed in Parent/Child Relation Referencing that was discussed earlier.</span></span> <span data-ttu-id="e4f95-378">例如: </span><span class="sxs-lookup"><span data-stu-id="e4f95-378">For example:</span></span>  
  
 <span data-ttu-id="e4f95-379">Avg(Child.Price)</span><span class="sxs-lookup"><span data-stu-id="e4f95-379">Avg(Child.Price)</span></span>  
  
 <span data-ttu-id="e4f95-380">Avg(Child(Orders2Details).Price)</span><span class="sxs-lookup"><span data-stu-id="e4f95-380">Avg(Child(Orders2Details).Price)</span></span>  
  
 <span data-ttu-id="e4f95-381">也可以在單一資料表上執行彙總。</span><span class="sxs-lookup"><span data-stu-id="e4f95-381">An aggregate can also be performed on a single table.</span></span> <span data-ttu-id="e4f95-382">例如，若要建立資料行中的圖形摘要名為"Price":</span><span class="sxs-lookup"><span data-stu-id="e4f95-382">For example, to create a summary of figures in a column named "Price":</span></span>  
  
 <span data-ttu-id="e4f95-383">Sum(Price)</span><span class="sxs-lookup"><span data-stu-id="e4f95-383">Sum(Price)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e4f95-384">如果您使用單一資料表建立彙總時，會有任何群組的功能。</span><span class="sxs-lookup"><span data-stu-id="e4f95-384">If you use a single table to create an aggregate, there would be no group-by functionality.</span></span> <span data-ttu-id="e4f95-385">相反地，所有資料列會顯示資料行中的相同的值。</span><span class="sxs-lookup"><span data-stu-id="e4f95-385">Instead, all rows would display the same value in the column.</span></span>  
  
 <span data-ttu-id="e4f95-386">如果資料表沒有任何資料列，彙總函式會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="e4f95-386">If a table has no rows, the aggregate functions will return `null`.</span></span>  
  
 <span data-ttu-id="e4f95-387">資料型別一律可以檢查來判斷<xref:System.Data.DataColumn.DataType%2A>的資料行屬性。</span><span class="sxs-lookup"><span data-stu-id="e4f95-387">Data types can always be determined by examining the <xref:System.Data.DataColumn.DataType%2A> property of a column.</span></span> <span data-ttu-id="e4f95-388">您也可以轉換使用 Convert 函數，在下一節中所顯示的資料類型。</span><span class="sxs-lookup"><span data-stu-id="e4f95-388">You can also convert data types using the Convert function, shown in the following section.</span></span>  
  
 <span data-ttu-id="e4f95-389">彙總只能套用至單一資料行與彙總也可以使用任何其他運算式。</span><span class="sxs-lookup"><span data-stu-id="e4f95-389">An aggregate can only be applied to a single column and no other expressions can be used inside the aggregate.</span></span>  
  
## <a name="functions"></a><span data-ttu-id="e4f95-390">函式</span><span class="sxs-lookup"><span data-stu-id="e4f95-390">Functions</span></span>  
 <span data-ttu-id="e4f95-391">也支援下列功能：</span><span class="sxs-lookup"><span data-stu-id="e4f95-391">The following functions are also supported:</span></span>  
  
 `CONVERT`  
  
|||  
|-|-|  
|<span data-ttu-id="e4f95-392">描述</span><span class="sxs-lookup"><span data-stu-id="e4f95-392">Description</span></span>|<span data-ttu-id="e4f95-393">將特定的運算式轉換成指定的.NET Framework 型別。</span><span class="sxs-lookup"><span data-stu-id="e4f95-393">Converts particular expression to a specified .NET Framework Type.</span></span>|  
|<span data-ttu-id="e4f95-394">語法</span><span class="sxs-lookup"><span data-stu-id="e4f95-394">Syntax</span></span>|<span data-ttu-id="e4f95-395">轉換 (`expression`， `type`)</span><span class="sxs-lookup"><span data-stu-id="e4f95-395">Convert(`expression`, `type`)</span></span>|  
|<span data-ttu-id="e4f95-396">引數</span><span class="sxs-lookup"><span data-stu-id="e4f95-396">Arguments</span></span>|<span data-ttu-id="e4f95-397">`expression` --要轉換的運算式。</span><span class="sxs-lookup"><span data-stu-id="e4f95-397">`expression` -- The expression to convert.</span></span><br /><br /> <span data-ttu-id="e4f95-398">`type` --值會轉換成.NET Framework 型別。</span><span class="sxs-lookup"><span data-stu-id="e4f95-398">`type` -- The .NET Framework type to which the value will be converted.</span></span>|  
  
 <span data-ttu-id="e4f95-399">Example: myDataColumn.Expression="Convert(total, 'System.Int32')"</span><span class="sxs-lookup"><span data-stu-id="e4f95-399">Example: myDataColumn.Expression="Convert(total, 'System.Int32')"</span></span>  
  
 <span data-ttu-id="e4f95-400">所有的轉換是有效但有下列例外狀況：`Boolean`可以強制轉型的`Byte`， `SByte`， `Int16`， `Int32`， `Int64`， `UInt16`， `UInt32`， `UInt64`， `String`和只有本身。</span><span class="sxs-lookup"><span data-stu-id="e4f95-400">All conversions are valid with the following exceptions: `Boolean` can be coerced to and from `Byte`, `SByte`, `Int16`, `Int32`, `Int64`, `UInt16`, `UInt32`, `UInt64`, `String` and itself only.</span></span> <span data-ttu-id="e4f95-401">`Char` 可以強制轉型的`Int32`， `UInt32`， `String`，和只有本身。</span><span class="sxs-lookup"><span data-stu-id="e4f95-401">`Char` can be coerced to and from `Int32`, `UInt32`, `String`, and itself only.</span></span> <span data-ttu-id="e4f95-402">`DateTime` 可以強制轉型的`String`和只有本身。</span><span class="sxs-lookup"><span data-stu-id="e4f95-402">`DateTime` can be coerced to and from `String` and itself only.</span></span> <span data-ttu-id="e4f95-403">`TimeSpan` 可以強制轉型的`String`和只有本身。</span><span class="sxs-lookup"><span data-stu-id="e4f95-403">`TimeSpan` can be coerced to and from `String` and itself only.</span></span>  
  
 `LEN`  
  
|||  
|-|-|  
|<span data-ttu-id="e4f95-404">描述</span><span class="sxs-lookup"><span data-stu-id="e4f95-404">Description</span></span>|<span data-ttu-id="e4f95-405">取得字串的長度</span><span class="sxs-lookup"><span data-stu-id="e4f95-405">Gets the length of a string</span></span>|  
|<span data-ttu-id="e4f95-406">語法</span><span class="sxs-lookup"><span data-stu-id="e4f95-406">Syntax</span></span>|<span data-ttu-id="e4f95-407">LEN(`expression`)</span><span class="sxs-lookup"><span data-stu-id="e4f95-407">LEN(`expression`)</span></span>|  
|<span data-ttu-id="e4f95-408">引數</span><span class="sxs-lookup"><span data-stu-id="e4f95-408">Arguments</span></span>|<span data-ttu-id="e4f95-409">`expression` --要評估的字串。</span><span class="sxs-lookup"><span data-stu-id="e4f95-409">`expression` -- The string to be evaluated.</span></span>|  
  
 <span data-ttu-id="e4f95-410">Example: myDataColumn.Expression="Len(ItemName)"</span><span class="sxs-lookup"><span data-stu-id="e4f95-410">Example: myDataColumn.Expression="Len(ItemName)"</span></span>  
  
 `ISNULL`  
  
|||  
|-|-|  
|<span data-ttu-id="e4f95-411">描述</span><span class="sxs-lookup"><span data-stu-id="e4f95-411">Description</span></span>|<span data-ttu-id="e4f95-412">檢查運算式並傳回已檢查的運算式或取代值。</span><span class="sxs-lookup"><span data-stu-id="e4f95-412">Checks an expression and either returns the checked expression or a replacement value.</span></span>|  
|<span data-ttu-id="e4f95-413">語法</span><span class="sxs-lookup"><span data-stu-id="e4f95-413">Syntax</span></span>|<span data-ttu-id="e4f95-414">ISNULL(`expression`, `replacementvalue`)</span><span class="sxs-lookup"><span data-stu-id="e4f95-414">ISNULL(`expression`, `replacementvalue`)</span></span>|  
|<span data-ttu-id="e4f95-415">引數</span><span class="sxs-lookup"><span data-stu-id="e4f95-415">Arguments</span></span>|<span data-ttu-id="e4f95-416">`expression` 若要檢查--運算式。</span><span class="sxs-lookup"><span data-stu-id="e4f95-416">`expression` -- The expression to check.</span></span><br /><br /> <span data-ttu-id="e4f95-417">`replacementvalue` --如果運算式是`null`，`replacementvalue`傳回。</span><span class="sxs-lookup"><span data-stu-id="e4f95-417">`replacementvalue` -- If expression is `null`, `replacementvalue` is returned.</span></span>|  
  
 <span data-ttu-id="e4f95-418">Example: myDataColumn.Expression="IsNull(price, -1)"</span><span class="sxs-lookup"><span data-stu-id="e4f95-418">Example: myDataColumn.Expression="IsNull(price, -1)"</span></span>  
  
 `IIF`  
  
|||  
|-|-|  
|<span data-ttu-id="e4f95-419">描述</span><span class="sxs-lookup"><span data-stu-id="e4f95-419">Description</span></span>|<span data-ttu-id="e4f95-420">取得其中一個值，根據邏輯運算式的結果。</span><span class="sxs-lookup"><span data-stu-id="e4f95-420">Gets one of two values depending on the result of a logical expression.</span></span>|  
|<span data-ttu-id="e4f95-421">語法</span><span class="sxs-lookup"><span data-stu-id="e4f95-421">Syntax</span></span>|<span data-ttu-id="e4f95-422">IIF(`expr`, `truepart`, `falsepart`)</span><span class="sxs-lookup"><span data-stu-id="e4f95-422">IIF(`expr`, `truepart`, `falsepart`)</span></span>|  
|<span data-ttu-id="e4f95-423">引數</span><span class="sxs-lookup"><span data-stu-id="e4f95-423">Arguments</span></span>|<span data-ttu-id="e4f95-424">`expr` --要評估的運算式。</span><span class="sxs-lookup"><span data-stu-id="e4f95-424">`expr` -- The expression to evaluate.</span></span><br /><br /> <span data-ttu-id="e4f95-425">`truepart` --要傳回運算式是否為 true 的值。</span><span class="sxs-lookup"><span data-stu-id="e4f95-425">`truepart` -- The value to return if the expression is true.</span></span><br /><br /> <span data-ttu-id="e4f95-426">`falsepart` --要傳回運算式是否為 false 的值。</span><span class="sxs-lookup"><span data-stu-id="e4f95-426">`falsepart` -- The value to return if the expression is false.</span></span>|  
  
 <span data-ttu-id="e4f95-427">Example: myDataColumn.Expression = "IIF(total>1000, 'expensive', 'dear')</span><span class="sxs-lookup"><span data-stu-id="e4f95-427">Example: myDataColumn.Expression = "IIF(total>1000, 'expensive', 'dear')</span></span>  
  
 `TRIM`  
  
|||  
|-|-|  
|<span data-ttu-id="e4f95-428">描述</span><span class="sxs-lookup"><span data-stu-id="e4f95-428">Description</span></span>|<span data-ttu-id="e4f95-429">移除所有開頭和尾端空白的字元，例如 \r、 \n、 \t，' '</span><span class="sxs-lookup"><span data-stu-id="e4f95-429">Removes all leading and trailing blank characters like \r, \n, \t, ' '</span></span>|  
|<span data-ttu-id="e4f95-430">語法</span><span class="sxs-lookup"><span data-stu-id="e4f95-430">Syntax</span></span>|<span data-ttu-id="e4f95-431">TRIM(`expression`)</span><span class="sxs-lookup"><span data-stu-id="e4f95-431">TRIM(`expression`)</span></span>|  
|<span data-ttu-id="e4f95-432">引數</span><span class="sxs-lookup"><span data-stu-id="e4f95-432">Arguments</span></span>|<span data-ttu-id="e4f95-433">`expression` --要修剪的運算式。</span><span class="sxs-lookup"><span data-stu-id="e4f95-433">`expression` -- The expression to trim.</span></span>|  
  
 `SUBSTRING`  
  
|||  
|-|-|  
|<span data-ttu-id="e4f95-434">描述</span><span class="sxs-lookup"><span data-stu-id="e4f95-434">Description</span></span>|<span data-ttu-id="e4f95-435">取得所指定的長度，從字串中指定的點開始子的字串。</span><span class="sxs-lookup"><span data-stu-id="e4f95-435">Gets a sub-string of a specified length, starting at a specified point in the string.</span></span>|  
|<span data-ttu-id="e4f95-436">語法</span><span class="sxs-lookup"><span data-stu-id="e4f95-436">Syntax</span></span>|<span data-ttu-id="e4f95-437">子字串 (`expression`， `start`， `length`)</span><span class="sxs-lookup"><span data-stu-id="e4f95-437">SUBSTRING(`expression`, `start`, `length`)</span></span>|  
|<span data-ttu-id="e4f95-438">引數</span><span class="sxs-lookup"><span data-stu-id="e4f95-438">Arguments</span></span>|<span data-ttu-id="e4f95-439">`expression` --來源字串的子字串。</span><span class="sxs-lookup"><span data-stu-id="e4f95-439">`expression` -- The source string for the substring.</span></span><br /><br /> <span data-ttu-id="e4f95-440">`start` -指定子字串開始位置的整數。</span><span class="sxs-lookup"><span data-stu-id="e4f95-440">`start` -- Integer that specifies where the substring starts.</span></span><br /><br /> <span data-ttu-id="e4f95-441">`length` -指定的子字串長度的整數。</span><span class="sxs-lookup"><span data-stu-id="e4f95-441">`length` -- Integer that specifies the length of the substring.</span></span>|  
  
 <span data-ttu-id="e4f95-442">Example: myDataColumn.Expression = "SUBSTRING(phone, 7, 8)"</span><span class="sxs-lookup"><span data-stu-id="e4f95-442">Example: myDataColumn.Expression = "SUBSTRING(phone, 7, 8)"</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e4f95-443">您可以重設<xref:System.Data.DataColumn.Expression%2A>屬性，方法是將其指派 null 值或空字串。</span><span class="sxs-lookup"><span data-stu-id="e4f95-443">You can reset the <xref:System.Data.DataColumn.Expression%2A> property by assigning it a null value or empty string.</span></span> <span data-ttu-id="e4f95-444">如果運算式資料行上設定預設值，所有先前已填滿的資料列會指派給之後的預設值<xref:System.Data.DataColumn.Expression%2A>屬性重設。</span><span class="sxs-lookup"><span data-stu-id="e4f95-444">If a default value is set on the expression column, all previously filled rows are assigned the default value after the <xref:System.Data.DataColumn.Expression%2A> property is reset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4f95-445">下列範例會建立三個資料行中的<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="e4f95-445">The following example creates three columns in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="e4f95-446">第二個和第三個資料行包含的運算式。第二個會計算稅使用變數的稅率，和第三個將計算的結果加入至第一個資料行的值。</span><span class="sxs-lookup"><span data-stu-id="e4f95-446">The second and third columns contain expressions; the second calculates tax using a variable tax rate, and the third adds the result of the calculation to the value of the first column.</span></span> <span data-ttu-id="e4f95-447">產生的資料表會顯示在<xref:System.Windows.Forms.DataGrid>控制項。</span><span class="sxs-lookup"><span data-stu-id="e4f95-447">The resulting table is displayed in a <xref:System.Windows.Forms.DataGrid> control.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Expression Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Expression Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Expression Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Expression Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e4f95-448"><see cref="P:System.Data.DataColumn.AutoIncrement" /> 或 <see cref="P:System.Data.DataColumn.Unique" /> 屬性是設定為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="e4f95-448">The <see cref="P:System.Data.DataColumn.AutoIncrement" /> or <see cref="P:System.Data.DataColumn.Unique" /> property is set to <see langword="true" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="e4f95-449">在使用 CONVERT 函式時，運算式評估為字串，但是字串不包含可以轉變為型別參數的表示。</span><span class="sxs-lookup"><span data-stu-id="e4f95-449">When you are using the CONVERT function, the expression evaluates to a string, but the string does not contain a representation that can be converted to the type parameter.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="e4f95-450">在使用 CONVERT 函式時，不可能進行所要求的轉型。</span><span class="sxs-lookup"><span data-stu-id="e4f95-450">When you are using the CONVERT function, the requested cast is not possible.</span></span> <span data-ttu-id="e4f95-451">請參閱下面段落中的型別轉換函式 (Conversion Function)，取得有關可能轉型的詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="e4f95-451">See the Conversion function in the following section for detailed information about possible casts.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e4f95-452">在使用 SUBSTRING 函式時，起始引數超出範圍。</span><span class="sxs-lookup"><span data-stu-id="e4f95-452">When you use the SUBSTRING function, the start argument is out of range.</span></span>  
  
 <span data-ttu-id="e4f95-453">-或者-</span><span class="sxs-lookup"><span data-stu-id="e4f95-453">-Or-</span></span>  
  
 <span data-ttu-id="e4f95-454">在使用 SUBSTRING 函式時，長度引數超出範圍。</span><span class="sxs-lookup"><span data-stu-id="e4f95-454">When you use the SUBSTRING function, the length argument is out of range.</span></span></exception>
        <exception cref="T:System.Exception"><span data-ttu-id="e4f95-455">在使用 LEN 函式或 TRIM 函式時，運算式不會評估為字串。</span><span class="sxs-lookup"><span data-stu-id="e4f95-455">When you use the LEN function or the TRIM function, the expression does not evaluate to a string.</span></span> <span data-ttu-id="e4f95-456">這包括評估為 <see cref="T:System.Char" /> 的運算式。</span><span class="sxs-lookup"><span data-stu-id="e4f95-456">This includes expressions that evaluate to <see cref="T:System.Char" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProperties">
      <MemberSignature Language="C#" Value="public System.Data.PropertyCollection ExtendedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.PropertyCollection ExtendedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ExtendedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtendedProperties As PropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::PropertyCollection ^ ExtendedProperties { System::Data::PropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4f95-457">取得與 <see cref="T:System.Data.DataColumn" /> 相關聯的自訂使用者資訊集合。</span><span class="sxs-lookup"><span data-stu-id="e4f95-457">Gets the collection of custom user information associated with a <see cref="T:System.Data.DataColumn" />.</span></span></summary>
        <value><span data-ttu-id="e4f95-458">自訂資訊的 <see cref="T:System.Data.PropertyCollection" />。</span><span class="sxs-lookup"><span data-stu-id="e4f95-458">A <see cref="T:System.Data.PropertyCollection" /> of custom information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f95-459"><xref:System.Data.DataColumn.ExtendedProperties%2A>屬性可讓您儲存與物件的自訂資訊。</span><span class="sxs-lookup"><span data-stu-id="e4f95-459">The <xref:System.Data.DataColumn.ExtendedProperties%2A> property lets you store custom information with the object.</span></span> <span data-ttu-id="e4f95-460">例如，您可能會儲存資料應該重新整理的時間。</span><span class="sxs-lookup"><span data-stu-id="e4f95-460">For example, you may store a time when the data should be refreshed.</span></span>  
  
 <span data-ttu-id="e4f95-461">擴充的屬性的類型必須是<xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="e4f95-461">Extended properties must be of type <xref:System.String>.</span></span> <span data-ttu-id="e4f95-462">屬性不是型別<xref:System.String>不會保存在當<xref:System.Data.DataColumn>寫入為 XML。</span><span class="sxs-lookup"><span data-stu-id="e4f95-462">Properties that are not of type <xref:System.String> are not persisted when the <xref:System.Data.DataColumn> is written as XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4f95-463">下列範例會將自訂屬性來<xref:System.Data.PropertyCollection>傳回<xref:System.Data.DataColumn.ExtendedProperties%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="e4f95-463">The following example adds a custom property to the <xref:System.Data.PropertyCollection> returned by the <xref:System.Data.DataColumn.ExtendedProperties%2A> property.</span></span> <span data-ttu-id="e4f95-464">第二個範例會擷取自訂屬性。</span><span class="sxs-lookup"><span data-stu-id="e4f95-464">The second example retrieves the custom property.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ExtendedProperties Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ExtendedProperties Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ExtendedProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ExtendedProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.PropertyCollection" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4f95-465">取得或設定文字資料行的最大長度。</span><span class="sxs-lookup"><span data-stu-id="e4f95-465">Gets or sets the maximum length of a text column.</span></span></summary>
        <value><span data-ttu-id="e4f95-466">資料行的最大長度，以字元為單位。</span><span class="sxs-lookup"><span data-stu-id="e4f95-466">The maximum length of the column in characters.</span></span> <span data-ttu-id="e4f95-467">如果資料行不具有最大長度，則值為 -1 (預設值)。</span><span class="sxs-lookup"><span data-stu-id="e4f95-467">If the column has no maximum length, the value is –1 (default).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f95-468"><xref:System.Data.DataColumn.MaxLength%2A>則會忽略非文字資料行的屬性。</span><span class="sxs-lookup"><span data-stu-id="e4f95-468">The <xref:System.Data.DataColumn.MaxLength%2A> property is ignored for non-text columns.</span></span> <span data-ttu-id="e4f95-469">A<xref:System.ArgumentException>會引發例外狀況，如果您指派<xref:System.Data.DataColumn.MaxLength%2A>非字串資料行。</span><span class="sxs-lookup"><span data-stu-id="e4f95-469">A <xref:System.ArgumentException> exception is raised if you assign <xref:System.Data.DataColumn.MaxLength%2A> to a non-string column.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4f95-470">取得或設定 <see cref="T:System.Data.DataColumn" /> 的命名空間。</span><span class="sxs-lookup"><span data-stu-id="e4f95-470">Gets or sets the namespace of the <see cref="T:System.Data.DataColumn" />.</span></span></summary>
        <value><span data-ttu-id="e4f95-471"><see cref="T:System.Data.DataColumn" /> 的命名空間。</span><span class="sxs-lookup"><span data-stu-id="e4f95-471">The namespace of the <see cref="T:System.Data.DataColumn" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f95-472"><xref:System.Data.DataColumn.Namespace%2A>屬性可在讀取和寫入 XML 文件到<xref:System.Data.DataTable>中<xref:System.Data.DataSet>使用<xref:System.Data.DataSet.ReadXml%2A>， <xref:System.Data.DataSet.WriteXml%2A>， <xref:System.Data.DataSet.ReadXmlSchema%2A>，或<xref:System.Data.DataSet.WriteXmlSchema%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e4f95-472">The <xref:System.Data.DataColumn.Namespace%2A> property is used when reading and writing an XML document into a <xref:System.Data.DataTable> in the <xref:System.Data.DataSet> using the <xref:System.Data.DataSet.ReadXml%2A>, <xref:System.Data.DataSet.WriteXml%2A>, <xref:System.Data.DataSet.ReadXmlSchema%2A>, or <xref:System.Data.DataSet.WriteXmlSchema%2A> methods.</span></span>  
  
 <span data-ttu-id="e4f95-473">XML 文件的命名空間用來限定範圍的 XML 屬性和項目時讀入<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="e4f95-473">The namespace of an XML document is used to scope XML attributes and elements when read into a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="e4f95-474">比方說，<xref:System.Data.DataSet>包含結構描述文件，讀取具有命名空間"mycompany 機 」，且嘗試讀取資料 (與<xref:System.Data.DataSet.ReadXml%2A>方法) 從文件命名空間"theirCompany。 」</span><span class="sxs-lookup"><span data-stu-id="e4f95-474">For example, a <xref:System.Data.DataSet> contains a schema read from a document that has the namespace "myCompany," and an attempt is made to read data (with the <xref:System.Data.DataSet.ReadXml%2A> method) from a document that has the namespace "theirCompany."</span></span> <span data-ttu-id="e4f95-475">未對應到現有的結構描述的任何資料都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="e4f95-475">Any data that does not correspond to the existing schema will be ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e4f95-476">命名空間已經有資料。</span><span class="sxs-lookup"><span data-stu-id="e4f95-476">The namespace already has data.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanging(class System.ComponentModel.PropertyChangedEventArgs pcevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanging (pcevent As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanging(System::ComponentModel::PropertyChangedEventArgs ^ pcevent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcevent" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="pcevent"><span data-ttu-id="e4f95-477">參數參考。</span><span class="sxs-lookup"><span data-stu-id="e4f95-477">Parameter reference.</span></span></param>
        <summary><span data-ttu-id="e4f95-478">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</span><span class="sxs-lookup"><span data-stu-id="e4f95-478">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public int Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ordinal" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ordinal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Ordinal { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4f95-479">取得 <see cref="T:System.Data.DataColumnCollection" /> 集合中 (以零起始) 的資料行位置。</span><span class="sxs-lookup"><span data-stu-id="e4f95-479">Gets the (zero-based) position of the column in the <see cref="T:System.Data.DataColumnCollection" /> collection.</span></span></summary>
        <value><span data-ttu-id="e4f95-480">資料行的位置。</span><span class="sxs-lookup"><span data-stu-id="e4f95-480">The position of the column.</span></span> <span data-ttu-id="e4f95-481">如果資料行不是集合的成員，則取得 -1。</span><span class="sxs-lookup"><span data-stu-id="e4f95-481">Gets -1 if the column is not a member of a collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4f95-482">下列範例會傳回資料行的資料行名稱、 序數和資料類型。</span><span class="sxs-lookup"><span data-stu-id="e4f95-482">The following example returns the column name, ordinal, and data type of a column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Ordinal Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Ordinal Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Ordinal Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Ordinal Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4f95-483">取得或設定建立 <see cref="T:System.Data.DataTable" /> 命名空間別名的 XML 前置詞。</span><span class="sxs-lookup"><span data-stu-id="e4f95-483">Gets or sets an XML prefix that aliases the namespace of the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <value><span data-ttu-id="e4f95-484"><see cref="T:System.Data.DataTable" /> 命名空間的 XML 前置詞。</span><span class="sxs-lookup"><span data-stu-id="e4f95-484">The XML prefix for the <see cref="T:System.Data.DataTable" /> namespace.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f95-485"><xref:System.Data.DataTable.Prefix%2A>用於整個 XML 文件，以找出項目所屬的命名空間<xref:System.Data.DataSet>物件 (為設定由<xref:System.Data.DataSet.Namespace%2A>屬性)。</span><span class="sxs-lookup"><span data-stu-id="e4f95-485">The <xref:System.Data.DataTable.Prefix%2A> is used throughout an XML document to identify elements which belong to the namespace for a <xref:System.Data.DataSet> object (as set by the <xref:System.Data.DataSet.Namespace%2A> property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePropertyChanging">
      <MemberSignature Language="C#" Value="protected internal void RaisePropertyChanging (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RaisePropertyChanging(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.RaisePropertyChanging(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub RaisePropertyChanging (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void RaisePropertyChanging(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e4f95-486">參數參考。</span><span class="sxs-lookup"><span data-stu-id="e4f95-486">Parameter reference.</span></span></param>
        <summary><span data-ttu-id="e4f95-487">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</span><span class="sxs-lookup"><span data-stu-id="e4f95-487">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4f95-488">取得或設定值，指出是否資料列一加入至資料表，就允許變更資料行。</span><span class="sxs-lookup"><span data-stu-id="e4f95-488">Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.</span></span></summary>
        <value>
          <span data-ttu-id="e4f95-489">如果資料行是唯讀，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e4f95-489"><see langword="true" /> if the column is read only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e4f95-490">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e4f95-490">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4f95-491">下列範例會建立<xref:System.Data.DataColumn>並設定其<xref:System.Data.DataColumn.ReadOnly%2A>屬性`true`。</span><span class="sxs-lookup"><span data-stu-id="e4f95-491">The following example creates a <xref:System.Data.DataColumn> and sets its <xref:System.Data.DataColumn.ReadOnly%2A> property `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e4f95-492">屬性在計算的資料行上設定為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e4f95-492">The property is set to <see langword="false" /> on a computed column.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.Unique" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
      </Docs>
    </Member>
    <Member MemberName="SetOrdinal">
      <MemberSignature Language="C#" Value="public void SetOrdinal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOrdinal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.SetOrdinal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOrdinal (ordinal As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOrdinal(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="e4f95-493">指定的序數。</span><span class="sxs-lookup"><span data-stu-id="e4f95-493">The specified ordinal.</span></span></param>
        <summary><span data-ttu-id="e4f95-494">將 <see cref="T:System.Data.DataColumn" /> 的序數或位置變更為指定的序數或位置。</span><span class="sxs-lookup"><span data-stu-id="e4f95-494">Changes the ordinal or position of the <see cref="T:System.Data.DataColumn" /> to the specified ordinal or position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f95-495">將 <xref:System.Data.DataColumn> 的序數或位置變更為指定的序數或位置。</span><span class="sxs-lookup"><span data-stu-id="e4f95-495">Changes the ordinal or position of the <xref:System.Data.DataColumn> to the specified ordinal or position.</span></span> <span data-ttu-id="e4f95-496">如果序數為小於 0 或大於現有的資料行 – 1 （大於最後一個資料行的序數） 則無效<xref:System.ArgumentException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="e4f95-496">If ordinal is less than 0 or greater than the existing number of columns – 1 (greater than the ordinal of the last column) then an Invalid <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="e4f95-497">當您變更資料行的序數時，資料行被移至資料行的集合中的新位置。</span><span class="sxs-lookup"><span data-stu-id="e4f95-497">When you change a column’s ordinal, the column is moved to the new position in the collection of columns.</span></span> <span data-ttu-id="e4f95-498">任何資料行之間的先前和新的序數將會重新編號，來調整資料行的新序數。</span><span class="sxs-lookup"><span data-stu-id="e4f95-498">Any columns between the previous and new ordinal will be renumbered, to adjust for a column's new ordinal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ Table { System::Data::DataTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4f95-499">取得資料行所屬的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="e4f95-499">Gets the <see cref="T:System.Data.DataTable" /> to which the column belongs to.</span></span></summary>
        <value><span data-ttu-id="e4f95-500"><see cref="T:System.Data.DataTable" /> 所屬的 <see cref="T:System.Data.DataColumn" />。</span><span class="sxs-lookup"><span data-stu-id="e4f95-500">The <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataColumn" /> belongs to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4f95-501">下列範例會傳回父資料表的<xref:System.Data.DataColumn>透過其<xref:System.Data.DataColumn.Table%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="e4f95-501">The following example returns the parent table of a <xref:System.Data.DataColumn> through its <xref:System.Data.DataColumn.Table%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Table Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Table Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Table Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Table Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e4f95-502">取得資料行的 <see cref="P:System.Data.DataColumn.Expression" /> (如果存在)。</span><span class="sxs-lookup"><span data-stu-id="e4f95-502">Gets the <see cref="P:System.Data.DataColumn.Expression" /> of the column, if one exists.</span></span></summary>
        <returns><span data-ttu-id="e4f95-503">如果屬性已經設定，則為 <see cref="P:System.Data.DataColumn.Expression" /> 值，否則為 <see cref="P:System.Data.DataColumn.ColumnName" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="e4f95-503">The <see cref="P:System.Data.DataColumn.Expression" /> value, if the property is set; otherwise, the <see cref="P:System.Data.DataColumn.ColumnName" /> property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e4f95-504">下列範例會使用<xref:System.Data.DataColumn.ToString%2A>屬性傳回的集合的每個成員的預設字串<xref:System.Data.DataColumn>物件。</span><span class="sxs-lookup"><span data-stu-id="e4f95-504">The following example uses the <xref:System.Data.DataColumn.ToString%2A> property to return the default string of each member of a collection of <xref:System.Data.DataColumn> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
      </Docs>
    </Member>
    <Member MemberName="Unique">
      <MemberSignature Language="C#" Value="public bool Unique { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Unique" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Unique" />
      <MemberSignature Language="VB.NET" Value="Public Property Unique As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Unique { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4f95-505">取得或設定值，指出在資料行之每個資料列中的值是否必須是唯一的。</span><span class="sxs-lookup"><span data-stu-id="e4f95-505">Gets or sets a value that indicates whether the values in each row of the column must be unique.</span></span></summary>
        <value>
          <span data-ttu-id="e4f95-506">如果值必須是唯一的，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e4f95-506"><see langword="true" /> if the value must be unique; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e4f95-507">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e4f95-507">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4f95-508">這個屬性從 false 變更為 true，因為唯一條件約束將會建立此資料行來確定值是唯一。</span><span class="sxs-lookup"><span data-stu-id="e4f95-508">As soon as this property is changed from false to true, a unique constraint will be created on this column to make sure that values are unique.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4f95-509">下列範例會建立新<xref:System.Data.DataColumn>管理員、 設定其屬性，並將它加入至資料表的資料行集合。</span><span class="sxs-lookup"><span data-stu-id="e4f95-509">The following example creates new <xref:System.Data.DataColumn>, sets its properties, and adds it to a table's columns collection.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Unique Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Unique Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Unique Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Unique Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e4f95-510">該資料行是計算的資料行。</span><span class="sxs-lookup"><span data-stu-id="e4f95-510">The column is a calculated column.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
        <altmember cref="T:System.Data.UniqueConstraint" />
        <altmember cref="P:System.Data.DataTable.Constraints" />
      </Docs>
    </Member>
  </Members>
</Type>