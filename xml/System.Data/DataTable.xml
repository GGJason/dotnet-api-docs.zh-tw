<Type Name="DataTable" FullName="System.Data.DataTable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2b4c6d4eea254ee4906c2c3917cdebe98c32d7df" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="40449542" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataTable : System.ComponentModel.MarshalByValueComponent, System.ComponentModel.IListSource, System.ComponentModel.ISupportInitialize, System.ComponentModel.ISupportInitializeNotification, System.Runtime.Serialization.ISerializable, System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit DataTable extends System.ComponentModel.MarshalByValueComponent implements class System.ComponentModel.IListSource, class System.ComponentModel.ISupportInitialize, class System.ComponentModel.ISupportInitializeNotification, class System.Runtime.Serialization.ISerializable, class System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataTable" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTable&#xA;Inherits MarshalByValueComponent&#xA;Implements IListSource, ISerializable, ISupportInitialize, ISupportInitializeNotification, IXmlSerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTable : System::ComponentModel::MarshalByValueComponent, System::ComponentModel::IListSource, System::ComponentModel::ISupportInitialize, System::ComponentModel::ISupportInitializeNotification, System::Runtime::Serialization::ISerializable, System::Xml::Serialization::IXmlSerializable" />
  <TypeSignature Language="F#" Value="type DataTable = class&#xA;    inherit MarshalByValueComponent&#xA;    interface IListSource&#xA;    interface ISupportInitializeNotification&#xA;    interface ISerializable&#xA;    interface IXmlSerializable&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.ComponentModel.MarshalByValueComponent</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitializeNotification</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.Serialization.IXmlSerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.ComponentModel.DefaultEvent("RowChanging")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.ComponentModel.DefaultProperty("TableName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Xml.Serialization.XmlSchemaProvider("GetDataTableSchema")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0c375-101">表示記憶體中資料的一個資料表。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c375-101">Represents one table of in-memory data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-102"><xref:System.Data.DataTable>是 ADO.NET 文件庫中的核心物件。</span><span class="sxs-lookup"><span data-stu-id="0c375-102">The <xref:System.Data.DataTable> is a central object in the ADO.NET library.</span></span> <span data-ttu-id="0c375-103">其他物件使用<xref:System.Data.DataTable>包括<xref:System.Data.DataSet>而<xref:System.Data.DataView>。</span><span class="sxs-lookup"><span data-stu-id="0c375-103">Other objects that use the <xref:System.Data.DataTable> include the <xref:System.Data.DataSet> and the <xref:System.Data.DataView>.</span></span>  
  
 <span data-ttu-id="0c375-104">當存取<xref:System.Data.DataTable>物件，請注意，這些有條件地區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="0c375-104">When accessing <xref:System.Data.DataTable> objects, note that they are conditionally case sensitive.</span></span> <span data-ttu-id="0c375-105">例如，如果一個<xref:System.Data.DataTable>名為"mydatatable"和另一個名為"Mydatatable 」，用來搜尋的其中一個資料表的字串會視為區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="0c375-105">For example, if one <xref:System.Data.DataTable> is named "mydatatable" and another is named "Mydatatable", a string used to search for one of the tables is regarded as case sensitive.</span></span> <span data-ttu-id="0c375-106">不過，如果"mydatatable 」 存在，而且 「 Mydatatable"並不會搜尋字串會視為為不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="0c375-106">However, if "mydatatable" exists and "Mydatatable" does not, the search string is regarded as case insensitive.</span></span> <span data-ttu-id="0c375-107">A<xref:System.Data.DataSet>可以包含兩個<xref:System.Data.DataTable>具有相同的物件<xref:System.Data.DataTable.TableName%2A>屬性值，但不同<xref:System.Data.DataTable.Namespace%2A>屬性值。</span><span class="sxs-lookup"><span data-stu-id="0c375-107">A <xref:System.Data.DataSet> can contain two <xref:System.Data.DataTable> objects that have the same <xref:System.Data.DataTable.TableName%2A> property value but different <xref:System.Data.DataTable.Namespace%2A> property values.</span></span> <span data-ttu-id="0c375-108">如需使用詳細資訊<xref:System.Data.DataTable>物件，請參閱[建立 DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-a-datatable.md)。</span><span class="sxs-lookup"><span data-stu-id="0c375-108">For more information about working with <xref:System.Data.DataTable> objects, see [Creating a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-a-datatable.md).</span></span>  
  
 <span data-ttu-id="0c375-109">如果您要建立<xref:System.Data.DataTable>程式設計的方式，您必須先定義其結構描述加<xref:System.Data.DataColumn>物件至<xref:System.Data.DataColumnCollection>(透過存取<xref:System.Data.DataTable.Columns%2A>屬性)。</span><span class="sxs-lookup"><span data-stu-id="0c375-109">If you are creating a <xref:System.Data.DataTable> programmatically, you must first define its schema by adding <xref:System.Data.DataColumn> objects to the <xref:System.Data.DataColumnCollection> (accessed through the <xref:System.Data.DataTable.Columns%2A> property).</span></span> <span data-ttu-id="0c375-110">如需有關新增<xref:System.Data.DataColumn>物件，請參閱[新增至 DataTable 的資料行](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md)。</span><span class="sxs-lookup"><span data-stu-id="0c375-110">For more information about adding <xref:System.Data.DataColumn> objects, see [Adding Columns to a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md).</span></span>  
  
 <span data-ttu-id="0c375-111">若要將資料列加入<xref:System.Data.DataTable>，您必須先使用<xref:System.Data.DataTable.NewRow%2A>方法，以傳回新<xref:System.Data.DataRow>物件。</span><span class="sxs-lookup"><span data-stu-id="0c375-111">To add rows to a <xref:System.Data.DataTable>, you must first use the <xref:System.Data.DataTable.NewRow%2A> method to return a new <xref:System.Data.DataRow> object.</span></span> <span data-ttu-id="0c375-112"><xref:System.Data.DataTable.NewRow%2A>方法會傳回具有的結構描述的資料列<xref:System.Data.DataTable>，因為它由資料表的定義<xref:System.Data.DataColumnCollection>。</span><span class="sxs-lookup"><span data-stu-id="0c375-112">The <xref:System.Data.DataTable.NewRow%2A> method returns a row with the schema of the <xref:System.Data.DataTable>, as it is defined by the table's <xref:System.Data.DataColumnCollection>.</span></span> <span data-ttu-id="0c375-113">最大數目的資料列<xref:System.Data.DataTable>可以存放區是 16,777,216。</span><span class="sxs-lookup"><span data-stu-id="0c375-113">The maximum number of rows that a <xref:System.Data.DataTable> can store is 16,777,216.</span></span> <span data-ttu-id="0c375-114">如需詳細資訊，請參閱 <<c0> [ 將資料加入至 DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md)。</span><span class="sxs-lookup"><span data-stu-id="0c375-114">For more information, see [Adding Data to a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md).</span></span>  
  
 <span data-ttu-id="0c375-115"><xref:System.Data.DataTable>也包含許多<xref:System.Data.Constraint>可用來確保資料完整性的物件。</span><span class="sxs-lookup"><span data-stu-id="0c375-115">The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.Constraint> objects that can be used to ensure the integrity of the data.</span></span> <span data-ttu-id="0c375-116">如需詳細資訊，請參閱 < [DataTable 條件約束](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md)。</span><span class="sxs-lookup"><span data-stu-id="0c375-116">For more information, see [DataTable Constraints](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md).</span></span>  
  
 <span data-ttu-id="0c375-117">有許多<xref:System.Data.DataTable>可用來判斷當對資料表進行變更的事件。</span><span class="sxs-lookup"><span data-stu-id="0c375-117">There are many <xref:System.Data.DataTable> events that can be used to determine when changes are made to a table.</span></span> <span data-ttu-id="0c375-118">其中包括 <xref:System.Data.DataTable.RowChanged>、<xref:System.Data.DataTable.RowChanging>、<xref:System.Data.DataTable.RowDeleting> 和 <xref:System.Data.DataTable.RowDeleted>。</span><span class="sxs-lookup"><span data-stu-id="0c375-118">These include <xref:System.Data.DataTable.RowChanged>, <xref:System.Data.DataTable.RowChanging>, <xref:System.Data.DataTable.RowDeleting>, and <xref:System.Data.DataTable.RowDeleted>.</span></span> <span data-ttu-id="0c375-119">如需詳細資訊，可與之事件的相關<xref:System.Data.DataTable>，請參閱 < [DataTable 事件處理](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)。</span><span class="sxs-lookup"><span data-stu-id="0c375-119">For more information about the events that can be used with a <xref:System.Data.DataTable>, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
 <span data-ttu-id="0c375-120">執行個體時<xref:System.Data.DataTable>建立時，部分的讀取/寫入屬性會設為初始值。</span><span class="sxs-lookup"><span data-stu-id="0c375-120">When an instance of <xref:System.Data.DataTable> is created, some of the read/write properties are set to initial values.</span></span> <span data-ttu-id="0c375-121">如需這些值的清單，請參閱<xref:System.Data.DataTable.%23ctor%2A?displayProperty=nameWithType>建構函式主題。</span><span class="sxs-lookup"><span data-stu-id="0c375-121">For a list of these values, see the <xref:System.Data.DataTable.%23ctor%2A?displayProperty=nameWithType> constructor topic.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-122"><xref:System.Data.DataSet>並<xref:System.Data.DataTable>物件會繼承自<xref:System.ComponentModel.MarshalByValueComponent>，並支援<xref:System.Runtime.Serialization.ISerializable>.NET Framework 遠端處理介面。</span><span class="sxs-lookup"><span data-stu-id="0c375-122">The <xref:System.Data.DataSet> and <xref:System.Data.DataTable> objects inherit from <xref:System.ComponentModel.MarshalByValueComponent>, and support the <xref:System.Runtime.Serialization.ISerializable> interface for .NET Framework remoting.</span></span> <span data-ttu-id="0c375-123">這些是您可以使用.NET Framework remoting 的唯一 ADO.NET 物件。</span><span class="sxs-lookup"><span data-stu-id="0c375-123">These are the only ADO.NET objects that you can use for .NET Framework remoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-124">下列範例會建立兩個<xref:System.Data.DataTable>物件，另一個<xref:System.Data.DataRelation>物件，並加入新的物件，以<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="0c375-124">The following example creates two <xref:System.Data.DataTable> objects and one <xref:System.Data.DataRelation> object, and adds the new objects to a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="0c375-125">資料表會再顯示在<xref:System.Windows.Forms.DataGridView>控制項。</span><span class="sxs-lookup"><span data-stu-id="0c375-125">The tables are then displayed in a <xref:System.Windows.Forms.DataGridView> control.</span></span>  
  
 [!code-csharp[Classic WebData DataTable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable Example/VB/source.vb#1)]  
  
 <span data-ttu-id="0c375-126">此範例示範如何使用特定的結構描述定義，以手動方式建立 DataTable:</span><span class="sxs-lookup"><span data-stu-id="0c375-126">This sample demonstrates how to create a DataTable manually with specific schema definitions:</span></span>  
  
-   <span data-ttu-id="0c375-127">建立多個 Datatable 並定義初始的資料行。</span><span class="sxs-lookup"><span data-stu-id="0c375-127">Create multiple DataTables and define the initial columns.</span></span>  
  
-   <span data-ttu-id="0c375-128">建立資料表條件約束。</span><span class="sxs-lookup"><span data-stu-id="0c375-128">Create the table constraints.</span></span>  
  
-   <span data-ttu-id="0c375-129">插入的值，並顯示資料表。</span><span class="sxs-lookup"><span data-stu-id="0c375-129">Insert the values and display the tables.</span></span>  
  
-   <span data-ttu-id="0c375-130">建立運算式資料行，並顯示資料表。</span><span class="sxs-lookup"><span data-stu-id="0c375-130">Create the expression columns and display the tables.</span></span>  
  
 <span data-ttu-id="0c375-131">這個程式碼範例的 C# 和 Visual Basic 專案都位於[開發人員程式碼範例](https://code.msdn.microsoft.com/How-to-create-DataTable-7abb4914)。</span><span class="sxs-lookup"><span data-stu-id="0c375-131">C# and Visual Basic projects with this code sample can be found on [Developer Code Samples](https://code.msdn.microsoft.com/How-to-create-DataTable-7abb4914).</span></span>  
  
 [!code-csharp[Classic WebData DataTable Example2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/classic webdata datatable example2/cs/source.cs#1)]
 [!code-vb[Classic WebData DataTable Example2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/classic webdata datatable example2/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="0c375-132">此類型是安全多執行緒的讀取作業。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c375-132">This type is safe for multithreaded read operations.</span>
      </span>
      <span data-ttu-id="0c375-133">您必須同步處理任何寫入作業。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0c375-133">You must synchronize any write operations.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-134">初始化 <see cref="T:System.Data.DataTable" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-134">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c375-135">不使用引數來初始化 <see cref="T:System.Data.DataTable" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-135">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class with no arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-136">建構函式設定的所有屬性的初始值<xref:System.Data.DataTable>物件。</span><span class="sxs-lookup"><span data-stu-id="0c375-136">The constructor sets initial values for all properties of the <xref:System.Data.DataTable> object.</span></span> <span data-ttu-id="0c375-137">下表顯示屬性和其預設值。</span><span class="sxs-lookup"><span data-stu-id="0c375-137">The following table shows the properties and their default values.</span></span> <span data-ttu-id="0c375-138">執行個體時<xref:System.Data.DataTable>會建立下列讀取/寫入屬性會設為初始值。</span><span class="sxs-lookup"><span data-stu-id="0c375-138">When an instance of <xref:System.Data.DataTable> is created, the following read/write properties are set to initial values.</span></span>  
  
|<span data-ttu-id="0c375-139">屬性</span><span class="sxs-lookup"><span data-stu-id="0c375-139">Property</span></span>|<span data-ttu-id="0c375-140">預設值</span><span class="sxs-lookup"><span data-stu-id="0c375-140">Default value</span></span>|  
|--------------|-------------------|  
|<span data-ttu-id="0c375-141">**CaseSensitive**</span><span class="sxs-lookup"><span data-stu-id="0c375-141">**CaseSensitive**</span></span>|<span data-ttu-id="0c375-142">與父系相同<xref:System.Data.DataSet>、 如果屬於其中一個。</span><span class="sxs-lookup"><span data-stu-id="0c375-142">Same as the parent <xref:System.Data.DataSet>, if it belongs to one.</span></span> <span data-ttu-id="0c375-143">否則為 `false`。</span><span class="sxs-lookup"><span data-stu-id="0c375-143">Otherwise, `false`.</span></span>|  
|<span data-ttu-id="0c375-144">**DisplayExpression**</span><span class="sxs-lookup"><span data-stu-id="0c375-144">**DisplayExpression**</span></span>|<span data-ttu-id="0c375-145">空字串 ("")</span><span class="sxs-lookup"><span data-stu-id="0c375-145">Empty string ("")</span></span>|  
|<span data-ttu-id="0c375-146">**地區設定**</span><span class="sxs-lookup"><span data-stu-id="0c375-146">**Locale**</span></span>|<span data-ttu-id="0c375-147">與父系相同<xref:System.Data.DataSet>物件的<xref:System.Globalization.CultureInfo>(由<xref:System.Data.DataSet.Locale%2A>屬性); 如果沒有父代不存在，預設值是目前的系統<xref:System.Globalization.CultureInfo>。</span><span class="sxs-lookup"><span data-stu-id="0c375-147">Same as the parent <xref:System.Data.DataSet> object's <xref:System.Globalization.CultureInfo> (returned by the <xref:System.Data.DataSet.Locale%2A> property); if no parent exists, the default is the current system <xref:System.Globalization.CultureInfo>.</span></span>|  
|<span data-ttu-id="0c375-148">**MinimumCapacity**</span><span class="sxs-lookup"><span data-stu-id="0c375-148">**MinimumCapacity**</span></span>|<span data-ttu-id="0c375-149">50 個資料列。</span><span class="sxs-lookup"><span data-stu-id="0c375-149">50 rows.</span></span>|  
  
 <span data-ttu-id="0c375-150">您可以變更其中任何一個屬性，透過單獨呼叫屬性的值。</span><span class="sxs-lookup"><span data-stu-id="0c375-150">You can change the value for any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-151">下列範例會建立新<xref:System.Data.DataTable>具有<xref:System.Data.DataColumn>並<xref:System.Data.DataRow>，並顯示在<xref:System.Windows.Forms.DataGridView>控制項。</span><span class="sxs-lookup"><span data-stu-id="0c375-151">The following example creates a new <xref:System.Data.DataTable> with <xref:System.Data.DataColumn> and <xref:System.Data.DataRow>, and displays it in a <xref:System.Windows.Forms.DataGridView> control.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.DataTable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.DataTable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.DataTable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.DataTable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTable (string tableName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tableName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTable(System::String ^ tableName);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTable : string -&gt; System.Data.DataTable" Usage="new System.Data.DataTable tableName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tableName">
          <span data-ttu-id="0c375-152">要提供資料表的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-152">The name to give the table.</span>
          </span>
          <span data-ttu-id="0c375-153">如果 <c>tableName</c> 是 <see langword="null" /> 或空字串，則會在新增至 <see cref="T:System.Data.DataTableCollection" /> 時提供預設名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-153">If <c>tableName</c> is <see langword="null" /> or an empty string, a default name is given when added to the <see cref="T:System.Data.DataTableCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-154">使用指定的資料表名稱，初始化 <see cref="T:System.Data.DataTable" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-154">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class with the specified table name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0c375-155">下列範例會建立<xref:System.Data.DataTable>，並顯示在<xref:System.Windows.Forms.DataGridView>控制項。</span><span class="sxs-lookup"><span data-stu-id="0c375-155">The following example creates a <xref:System.Data.DataTable> and displays it in a <xref:System.Windows.Forms.DataGridView> control.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.DataTable1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.DataTable1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.DataTable1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.DataTable1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataTable (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataTable(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTable : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Data.DataTable" Usage="new System.Data.DataTable (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="0c375-156">序列化或還原序列化物件所需的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-156">The data needed to serialize or deserialize an object.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="0c375-157">指定的序列化資料流的來源和目的端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-157">The source and destination of a given serialized stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-158">使用 <see cref="T:System.Data.DataTable" /> 和 <see cref="T:System.Runtime.Serialization.SerializationInfo" />，初始化 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-158">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class with the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and the <see cref="T:System.Runtime.Serialization.StreamingContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-159">這個實作<xref:System.Data.DataTable>建構函式是為了<xref:System.Runtime.Serialization.ISerializable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-159">This implementation of the <xref:System.Data.DataTable> constructor is required for <xref:System.Runtime.Serialization.ISerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTable (string tableName, string tableNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tableName, string tableNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tableName As String, tableNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTable(System::String ^ tableName, System::String ^ tableNamespace);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTable : string * string -&gt; System.Data.DataTable" Usage="new System.Data.DataTable (tableName, tableNamespace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="tableNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tableName">
          <span data-ttu-id="0c375-160">要提供資料表的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-160">The name to give the table.</span>
          </span>
          <span data-ttu-id="0c375-161">如果 <c>tableName</c> 是 <see langword="null" /> 或空字串，則會在新增至 <see cref="T:System.Data.DataTableCollection" /> 時提供預設名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-161">If <c>tableName</c> is <see langword="null" /> or an empty string, a default name is given when added to the <see cref="T:System.Data.DataTableCollection" />.</span>
          </span>
        </param>
        <param name="tableNamespace">
          <span data-ttu-id="0c375-162">儲存於 <see langword="DataTable" /> 中資料之 XML 表示的命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-162">The namespace for the XML representation of the data stored in the <see langword="DataTable" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-163">使用指定的資料表名稱和命名空間，初始化 <see cref="T:System.Data.DataTable" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-163">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class using the specified table name and namespace.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChanges">
      <MemberSignature Language="C#" Value="public void AcceptChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AcceptChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.AcceptChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AcceptChanges();" />
      <MemberSignature Language="F#" Value="member this.AcceptChanges : unit -&gt; unit" Usage="dataTable.AcceptChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c375-164">認可自前一次呼叫 <see cref="M:System.Data.DataTable.AcceptChanges" /> 以來對這個資料表所做的所有變更。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-164">Commits all the changes made to this table since the last time <see cref="M:System.Data.DataTable.AcceptChanges" /> was called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-165">當<xref:System.Data.DataTable.AcceptChanges%2A>呼叫時，任何<xref:System.Data.DataRow>仍處於編輯模式的物件會順利結束編輯。</span><span class="sxs-lookup"><span data-stu-id="0c375-165">When <xref:System.Data.DataTable.AcceptChanges%2A> is called, any <xref:System.Data.DataRow> object still in edit mode successfully ends its edits.</span></span> <span data-ttu-id="0c375-166"><xref:System.Data.DataRowState>也會變更： 所有`Added`並`Modified`資料列會變成`Unchanged`，和`Deleted`移除的資料列。</span><span class="sxs-lookup"><span data-stu-id="0c375-166">The <xref:System.Data.DataRowState> also changes: all `Added` and `Modified` rows become `Unchanged`, and `Deleted` rows are removed.</span></span>  
  
 <span data-ttu-id="0c375-167"><xref:System.Data.DataTable.AcceptChanges%2A>上呼叫的方法通常<xref:System.Data.DataTable>您嘗試更新之後<xref:System.Data.DataSet>使用<xref:System.Data.Common.DbDataAdapter.Update%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-167">The <xref:System.Data.DataTable.AcceptChanges%2A> method is generally called on a <xref:System.Data.DataTable> after you attempt to update the <xref:System.Data.DataSet> using the <xref:System.Data.Common.DbDataAdapter.Update%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-168">下列範例會測試每個資料表的錯誤。</span><span class="sxs-lookup"><span data-stu-id="0c375-168">The following example tests each table for errors.</span></span> <span data-ttu-id="0c375-169">如果資料表的錯誤可以協調 （藉由將它傳遞至未定義的函式），<xref:System.Data.DataTable.AcceptChanges%2A>被呼叫; 否則即為<xref:System.Data.DataTable.RejectChanges%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="0c375-169">If the table's errors can be reconciled (by passing it to an undefined function), <xref:System.Data.DataTable.AcceptChanges%2A> is called; otherwise, <xref:System.Data.DataTable.RejectChanges%2A> is called.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.AcceptChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.AcceptChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.AcceptChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.AcceptChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public virtual void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="dataTable.BeginInit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c375-170">開始對表單或另一個元件所使用的 <see cref="T:System.Data.DataTable" /> 進行初始化作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-170">Begins the initialization of a <see cref="T:System.Data.DataTable" /> that is used on a form or used by another component.</span>
          </span>
          <span data-ttu-id="0c375-171">初始化發生於執行階段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-171">The initialization occurs at run time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-172">Visual Studio.NET 設計環境會使用這個方法，開始對表單或另一個元件所使用的元件初始化。</span><span class="sxs-lookup"><span data-stu-id="0c375-172">The Visual Studio .NET design environment uses this method to start the initialization of a component that is used on a form or used by another component.</span></span> <span data-ttu-id="0c375-173"><xref:System.Data.DataTable.EndInit%2A>方法結束初始化。</span><span class="sxs-lookup"><span data-stu-id="0c375-173">The <xref:System.Data.DataTable.EndInit%2A> method ends the initialization.</span></span> <span data-ttu-id="0c375-174">使用<xref:System.Data.DataTable.BeginInit%2A>和<xref:System.Data.DataTable.EndInit%2A>方法，防止控制項被完全初始化之前使用。</span><span class="sxs-lookup"><span data-stu-id="0c375-174">Using the <xref:System.Data.DataTable.BeginInit%2A> and <xref:System.Data.DataTable.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadData">
      <MemberSignature Language="C#" Value="public void BeginLoadData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginLoadData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.BeginLoadData" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginLoadData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginLoadData();" />
      <MemberSignature Language="F#" Value="member this.BeginLoadData : unit -&gt; unit" Usage="dataTable.BeginLoadData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c375-175">載入資料時關閉告知、索引維護和條件約束。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-175">Turns off notifications, index maintenance, and constraints while loading data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-176">使用<xref:System.Data.DataTable.BeginLoadData%2A>配合<xref:System.Data.DataTable.LoadDataRow%2A>和<xref:System.Data.DataTable.EndLoadData%2A>。</span><span class="sxs-lookup"><span data-stu-id="0c375-176">Use <xref:System.Data.DataTable.BeginLoadData%2A> in conjunction with <xref:System.Data.DataTable.LoadDataRow%2A> and <xref:System.Data.DataTable.EndLoadData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaseSensitive">
      <MemberSignature Language="C#" Value="public bool CaseSensitive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CaseSensitive" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.CaseSensitive" />
      <MemberSignature Language="VB.NET" Value="Public Property CaseSensitive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CaseSensitive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CaseSensitive : bool with get, set" Usage="System.Data.DataTable.CaseSensitive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableCaseSensitiveDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-177">指示字串比較在資料表中是否區分大小寫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-177">Indicates whether string comparisons within the table are case-sensitive.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c375-178">如果比較區分大小寫，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-178">
              <see langword="true" /> if the comparison is case-sensitive; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0c375-179">預設值會設定為父 <see cref="T:System.Data.DataSet" /> 物件的 <see cref="P:System.Data.DataSet.CaseSensitive" /> 屬性，或者，如果 <see cref="T:System.Data.DataTable" /> 是獨自建立而無關 <see cref="T:System.Data.DataSet" /> 時，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-179">The default is set to the parent <see cref="T:System.Data.DataSet" /> object's <see cref="P:System.Data.DataSet.CaseSensitive" /> property, or <see langword="false" /> if the <see cref="T:System.Data.DataTable" /> was created independently of a <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-180"><xref:System.Data.DataTable.CaseSensitive%2A>屬性會影響排序、 搜尋和篩選中的字串比較。</span><span class="sxs-lookup"><span data-stu-id="0c375-180">The <xref:System.Data.DataTable.CaseSensitive%2A> property affects string comparisons in sorting, searching, and filtering.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-181">下列範例會呼叫<xref:System.Data.DataTable.Select%2A>方法兩次 on <xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-181">The following example calls the <xref:System.Data.DataTable.Select%2A> method twice on a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="0c375-182">第一次，<xref:System.Data.DataTable.CaseSensitive%2A>屬性設定為`false`，則第二個， `true`。</span><span class="sxs-lookup"><span data-stu-id="0c375-182">The first time, the <xref:System.Data.DataTable.CaseSensitive%2A> property is set to `false`, the second, to `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.CaseSensitive Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.CaseSensitive Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.CaseSensitive Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.CaseSensitive Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.Select" />
      </Docs>
    </Member>
    <Member MemberName="ChildRelations">
      <MemberSignature Language="C#" Value="public System.Data.DataRelationCollection ChildRelations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataRelationCollection ChildRelations" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.ChildRelations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildRelations As DataRelationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRelationCollection ^ ChildRelations { System::Data::DataRelationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildRelations : System.Data.DataRelationCollection" Usage="System.Data.DataTable.ChildRelations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableChildRelationsDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRelationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-183">為這個 <see cref="T:System.Data.DataTable" /> 取得子關聯的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-183">Gets the collection of child relations for this <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c375-184">
            <see cref="T:System.Data.DataRelationCollection" />，其中包含資料表的子關聯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-184">A <see cref="T:System.Data.DataRelationCollection" /> that contains the child relations for the table.</span>
          </span>
          <span data-ttu-id="0c375-185">如果沒有任何 <see cref="T:System.Data.DataRelation" /> 物件存在，則會傳回空的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-185">An empty collection is returned if no <see cref="T:System.Data.DataRelation" /> objects exist.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-186">A<xref:System.Data.DataRelation>定義兩個資料表之間的關聯性。</span><span class="sxs-lookup"><span data-stu-id="0c375-186">A <xref:System.Data.DataRelation> defines the relationship between two tables.</span></span> <span data-ttu-id="0c375-187">一般而言，兩個資料表會透過單一欄位包含相同的資料連結。</span><span class="sxs-lookup"><span data-stu-id="0c375-187">Typically, two tables are linked through a single field that contains the same data.</span></span> <span data-ttu-id="0c375-188">例如，資料表，其中包含地址資料可能包含代表國家/地區代碼的單一欄位。</span><span class="sxs-lookup"><span data-stu-id="0c375-188">For example, a table which contains address data may have a single field containing codes that represent countries/regions.</span></span> <span data-ttu-id="0c375-189">包含國家/地區資料的第二個資料表會有包含識別國家/地區的程式碼的單一欄位，而且是此程式碼插入至第一個資料表中對應的欄位。</span><span class="sxs-lookup"><span data-stu-id="0c375-189">A second table that contains country/region data will have a single field that contains the code that identifies the country/region, and it is this code which is inserted into the corresponding field in the first table.</span></span> <span data-ttu-id="0c375-190">A <xref:System.Data.DataRelation>，接著，包含 至少包含四項資訊: (1) 的第一個資料表的名稱、 （2） 的第一個資料表中的資料行名稱、 第二個資料表中，（3） 的名稱和 （4） 的第二個資料表中的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="0c375-190">A <xref:System.Data.DataRelation>, then, contains at least four pieces of information: (1) the name of the first table, (2) the column name in the first table, (3) the name of the second table, and (4) the column name in the second table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-191">下列範例會使用<xref:System.Data.DataTable.ChildRelations%2A>屬性來傳回每一個子系<xref:System.Data.DataRelation>在<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-191">The following example uses the <xref:System.Data.DataTable.ChildRelations%2A> property to return each child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="0c375-192">每個關聯性接著會做的引數<xref:System.Data.DataRow.GetChildRows%2A>方法的<xref:System.Data.DataRow>傳回陣列的資料列。</span><span class="sxs-lookup"><span data-stu-id="0c375-192">Each relation is then used as an argument in the <xref:System.Data.DataRow.GetChildRows%2A> method of the <xref:System.Data.DataRow> to return an array of rows.</span></span> <span data-ttu-id="0c375-193">然後會列印每個資料列中的資料行的值。</span><span class="sxs-lookup"><span data-stu-id="0c375-193">The value of each column in the row is then printed.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.ChildRelations Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ChildRelations Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ChildRelations Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ChildRelations Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.ParentRelations" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="dataTable.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c375-194">清除所有資料的 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-194">Clears the <see cref="T:System.Data.DataTable" /> of all data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-195">會移除所有的資料表中的所有資料列。</span><span class="sxs-lookup"><span data-stu-id="0c375-195">All rows in all tables are removed.</span></span> <span data-ttu-id="0c375-196">如果資料表有任何強制執行的子關聯性，會導致孤立的子資料列，會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0c375-196">An exception is generated if the table has any enforced child relations that would cause child rows to be orphaned.</span></span>  
  
 <span data-ttu-id="0c375-197">如果<xref:System.Data.DataSet>繫結至<xref:System.Xml.XmlDataDocument>，則呼叫<xref:System.Data.DataSet.Clear%2A?displayProperty=nameWithType>或是<xref:System.Data.DataTable.Clear%2A?displayProperty=nameWithType>引發<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="0c375-197">If the <xref:System.Data.DataSet> is bound to an <xref:System.Xml.XmlDataDocument>, calling <xref:System.Data.DataSet.Clear%2A?displayProperty=nameWithType> or <xref:System.Data.DataTable.Clear%2A?displayProperty=nameWithType> raises the <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="0c375-198">若要避免這種情況下，會周遊一次移除一個每個資料列的每個資料表。</span><span class="sxs-lookup"><span data-stu-id="0c375-198">To avoid this situation, traverse each table, removing each row one at a time.</span></span> <span data-ttu-id="0c375-199">當您使用<xref:System.Data.DataTable.NewRow%2A>若要建立新的資料列，資料列必須處理在呼叫之前<xref:System.Data.DataTable.Clear%2A>。</span><span class="sxs-lookup"><span data-stu-id="0c375-199">When you use <xref:System.Data.DataTable.NewRow%2A> to create new rows, the rows must be processed before you call <xref:System.Data.DataTable.Clear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-200">下列範例會清除所有資料的資料表。</span><span class="sxs-lookup"><span data-stu-id="0c375-200">The following example clears the table of all data.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataTable Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataTable Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::DataTable ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Data.DataTable&#xA;override this.Clone : unit -&gt; System.Data.DataTable" Usage="dataTable.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c375-201">複製 (Clone) <see cref="T:System.Data.DataTable" /> 的結構，包括所有 <see cref="T:System.Data.DataTable" /> 結構描述和條件約束。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-201">Clones the structure of the <see cref="T:System.Data.DataTable" />, including all <see cref="T:System.Data.DataTable" /> schemas and constraints.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c375-202">新的 <see cref="T:System.Data.DataTable" />，具有與目前 <see cref="T:System.Data.DataTable" /> 相同的結構描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-202">A new <see cref="T:System.Data.DataTable" /> with the same schema as the current <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-203">如果這些類別已形成，複製也會屬於相同的衍生類別。</span><span class="sxs-lookup"><span data-stu-id="0c375-203">If these classes have been derived, the clone will also be of the same derived classes.</span></span>  
  
 <span data-ttu-id="0c375-204">建立新的複製品<xref:System.Data.DataTable>相同的結構與原始<xref:System.Data.DataTable>，但不會複製任何資料 (新<xref:System.Data.DataTable>不會包含任何`DataRows`)。</span><span class="sxs-lookup"><span data-stu-id="0c375-204">Clone creates a new <xref:System.Data.DataTable> with the same structure as the original <xref:System.Data.DataTable>, but does not copy any data (the new <xref:System.Data.DataTable> will not contain any `DataRows`).</span></span> <span data-ttu-id="0c375-205">若要將結構和資料複製到新<xref:System.Data.DataTable>，使用<xref:System.Data.DataTable.Copy%2A>。</span><span class="sxs-lookup"><span data-stu-id="0c375-205">To copy both the structure and data into a new <xref:System.Data.DataTable>, use <xref:System.Data.DataTable.Copy%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-206">下列範例示範如何執行 DataTable.Clone 之後更新的結構和目的地資料表的條件約束。</span><span class="sxs-lookup"><span data-stu-id="0c375-206">The following sample demonstrates how to update the structure and constraints of the destination table after you execute DataTable.Clone.</span></span> <span data-ttu-id="0c375-207">ClonedDataTable 類別會傳回目的地資料表，並包含所有更新的事件。</span><span class="sxs-lookup"><span data-stu-id="0c375-207">The ClonedDataTable class will return a destination table and includes all the updating events.</span></span> <span data-ttu-id="0c375-208">此複本之後, 來源資料表中的結構變更並不會反映在目的地資料表中。</span><span class="sxs-lookup"><span data-stu-id="0c375-208">After the clone, structure changes in the source table won’t be reflected in the destination table.</span></span> <span data-ttu-id="0c375-209">具體來說，此範例將會：</span><span class="sxs-lookup"><span data-stu-id="0c375-209">Specifically, this sample will:</span></span>  
  
-   <span data-ttu-id="0c375-210">更新來源資料表中的資料行的變更。</span><span class="sxs-lookup"><span data-stu-id="0c375-210">Update the changes of the columns in source table.</span></span>  
  
-   <span data-ttu-id="0c375-211">更新來源資料表中 UniqueConstraint 的變更。</span><span class="sxs-lookup"><span data-stu-id="0c375-211">Update the changes of the UniqueConstraint in source table.</span></span>  
  
-   <span data-ttu-id="0c375-212">更新來源資料表中 ForeignKeyConstraint 的變更。</span><span class="sxs-lookup"><span data-stu-id="0c375-212">Update the changes of the ForeignKeyConstraint in source table.</span></span>  
  
 <span data-ttu-id="0c375-213">這個程式碼範例的 C# 和 Visual Basic 專案都位於[開發人員程式碼範例](https://code.msdn.microsoft.com/site/search?f%5B0%5D.Type=SearchText&f%5B0%5D.Value=How%20to%20automically%20update%20the%20structure%20of%20a%20cloned%20DataTable)。</span><span class="sxs-lookup"><span data-stu-id="0c375-213">C# and Visual Basic projects with this code sample can be found on [Developer Code Samples](https://code.msdn.microsoft.com/site/search?f%5B0%5D.Type=SearchText&f%5B0%5D.Value=How%20to%20automically%20update%20the%20structure%20of%20a%20cloned%20DataTable).</span></span>  
  
```csharp  
using System;  
using System.Linq;  
using System.Data;  
using System.ComponentModel;  
  
class Program {  
   static void Main(string[] args) {  
      DataTable courses = NewCourseDataTable();  
      Console.WriteLine("This is the source table:");  
      WriteDataTable(courses);  
  
      ClonedDataTable clonedResult = new ClonedDataTable(courses);  
      DataTable clonedCourses = clonedResult.DestinationTable;  
      Console.WriteLine("This is the destination table:");  
      WriteDataTable(clonedCourses);  
  
      // Add the events of updating column collection into the source table.  
      clonedResult.UpdateAddedColumn();  
      clonedResult.UpdateDeletedColumn();  
      // Add a DataColumn in source table.  
      DataColumn columnCreidts = new DataColumn("Credits", typeof(Int32));  
      courses.Columns.Add(columnCreidts);  
      Console.WriteLine("After add a column in source table, it's the result in the destination:");  
      WriteDataTable(clonedCourses);  
  
      // Add the event of updating UniqueConstraint into the source table.  
      clonedResult.UpdateUniqueConstraint();  
  
      // Add the unique constraint in source table.  
      UniqueConstraint uniqueConstraint = new UniqueConstraint(courses.Columns["CourseId"]);  
      courses.Constraints.Add(uniqueConstraint);  
  
      Console.WriteLine(@"If we add the unique constraint in source table and then insert the duplicate   
rows into the destination table, we will get the following error:");  
      InsertDuplicateData(clonedCourses);  
      Console.WriteLine();  
  
      // Add the event of updating ForeignKeyConstraint into the source table.  
      clonedResult.UpdateForeignKeyConstraint();  
  
      // Add the ForeignKeyConstraint into the source table.  
      DataTable deparments = NewDeparmentDataTable();  
      DataSet dataset = new DataSet();  
  
      dataset.Tables.Add(courses);  
      dataset.Tables.Add(clonedCourses);  
      dataset.Tables.Add(deparments);  
  
      ForeignKeyConstraint foreignKey = new ForeignKeyConstraint(deparments.Columns["DepartmentId"], courses.Columns["DepartmentId"]);  
      courses.Constraints.Add(foreignKey);  
  
      Console.WriteLine(@"If we add the foreign key constraint in source table and then insert a row   
without the parent  into the destination table, we will get the following error:");  
      InsertNoParentRow(clonedCourses);  
      Console.WriteLine();  
  
      Console.WriteLine("Please press any key to exit...");  
      Console.ReadKey();  
   }  
  
   static private DataTable NewCourseDataTable() {  
      DataTable newTable = new DataTable();  
  
      DataColumn[] columns ={   
                                      new DataColumn("CourseId", typeof(String)),  
                                      new DataColumn("CourseName",typeof(String)),                                        
                                      new DataColumn("DepartmentId", typeof(Int32))  
                                  };  
  
      newTable.Columns.AddRange(columns);  
  
      newTable.Rows.Add("C1045", "Calculus", 7);  
      newTable.Rows.Add("C1061", "Physics", 1);  
      newTable.Rows.Add("C2021", "Composition", 2);  
      newTable.Rows.Add("C2042", "Literature", 2);  
  
      return newTable;  
   }  
  
   static private DataTable NewDeparmentDataTable() {  
      DataTable newTable = new DataTable();  
  
      DataColumn[] columns ={   
                                      new DataColumn("DepartmentId", typeof(Int32)),  
                                      new DataColumn("Name",typeof(String)),  
                                  };  
  
      newTable.Columns.AddRange(columns);  
  
      newTable.Rows.Add(1, "Engineering");  
      newTable.Rows.Add(2, "English");  
      newTable.Rows.Add(4, "Economics");  
      newTable.Rows.Add(7, "Mathematics");  
  
      return newTable;  
   }  
  
   static private void WriteDataTable(DataTable table) {  
      if (table == null)  
         return;  
  
      foreach (DataColumn column in table.Columns) {  
         Console.Write("{0,-15}", column.ColumnName);  
      }  
      Console.WriteLine();  
  
      foreach (DataRow row in table.Rows) {  
         for (int i = 0; i < table.Columns.Count; i++)  
            Console.Write("{0,-15}", row[i].ToString());  
         Console.WriteLine();  
      }  
  
      Console.WriteLine();  
   }  
  
   static private void InsertDuplicateData(DataTable table) {  
      try {  
         table.Rows.Add("C1045", "Calculus", 7);  
         table.Rows.Add("C1045", "Calculus", 7);  
      } catch (Exception e) {  
         Console.WriteLine("\"" + e.Message + "\"");  
      }  
   }  
  
   private static void InsertNoParentRow(DataTable table) {  
      try {  
         table.Rows.Add("C1061", "Physics", 11);  
      } catch (Exception e) {  
         Console.WriteLine("\"" + e.Message + "\"");  
      }  
   }  
}  
  
public class ClonedDataTable {  
   private DataTable sourceTable;  
   private DataTable destinationTable;  
  
   public ClonedDataTable(DataTable source) {  
      sourceTable = source;  
      // set the cloned result  
      destinationTable = sourceTable.Clone();  
   }  
  
   public void UpdateAddedColumn() {  
      sourceTable.Columns.CollectionChanged += new CollectionChangeEventHandler(ColumnAdded);  
   }  
  
   public void UpdateDeletedColumn() {  
      sourceTable.Columns.CollectionChanged += new CollectionChangeEventHandler(ColumnDeleted);  
   }  
  
   public void UpdateUniqueConstraint() {  
      sourceTable.Constraints.CollectionChanged += new CollectionChangeEventHandler(UniqueConstraint_Changed);  
   }  
  
   public void UpdateForeignKeyConstraint() {  
      sourceTable.Constraints.CollectionChanged += new CollectionChangeEventHandler(ForeignKeyConstraint_Changed);  
   }  
  
   // After the source table adds a column, the method will add the same column in the destination table.  
   void ColumnAdded(object sender, System.ComponentModel.CollectionChangeEventArgs e) {  
      if (e.Action == CollectionChangeAction.Add) {  
         DataColumn column = e.Element as DataColumn;  
  
         if (column != null) {  
            DataColumn newColumn = new DataColumn(column.ColumnName, column.DataType, column.Expression, column.ColumnMapping);  
  
            if (!destinationTable.Columns.Contains(newColumn.ColumnName))  
               destinationTable.Columns.Add(newColumn);  
         }  
      }  
   }  
  
   // After the source table deletes a column, the method will delete the same column in the destination table.  
   void ColumnDeleted(object sender, CollectionChangeEventArgs e) {  
      if (e.Action == CollectionChangeAction.Remove) {  
         DataColumn column = e.Element as DataColumn;  
  
         if (column != null)  
            if (destinationTable.Columns.Contains(column.ColumnName))  
               destinationTable.Columns.Remove(column.ColumnName);  
      }  
   }  
  
   // After the source table changes the UniqueConstraint, this method changes the same UniqueConstraint in destination table.        
   void UniqueConstraint_Changed(object sender, CollectionChangeEventArgs e) {  
      UniqueConstraint constraint = e.Element as UniqueConstraint;  
  
      if (constraint == null)  
         return;  
  
      String constraintName = constraint.ConstraintName;  
  
      if (e.Action == CollectionChangeAction.Add) {  
         DataColumn[] columns = new DataColumn[constraint.Columns.Count()];  
         Boolean isPrimaryKey = constraint.IsPrimaryKey;  
  
         // Get the columns used in new constraint from the destiantion table.  
         for (Int32 i = 0; i < constraint.Columns.Count(); i++) {  
            String columnName = constraint.Columns[i].ColumnName;  
  
            if (destinationTable.Columns.Contains(columnName))  
               columns[i] = destinationTable.Columns[columnName];  
            else  
               return;  
         }  
  
         UniqueConstraint newConstraint = new UniqueConstraint(constraintName, columns, isPrimaryKey);  
  
         if (!destinationTable.Constraints.Contains(constraintName))  
            destinationTable.Constraints.Add(newConstraint);  
  
      } else if (e.Action == CollectionChangeAction.Remove)  
         if (destinationTable.Constraints.Contains(constraintName))  
            destinationTable.Constraints.Remove(constraintName);  
   }  
  
   // After the source table changes the ForeignKeyConstraint, this method changes    
   // the same ForeignKeyConstraint in the destination table.  
   void ForeignKeyConstraint_Changed(object sender, CollectionChangeEventArgs e) {  
      ForeignKeyConstraint constraint = e.Element as ForeignKeyConstraint;  
  
      if (constraint == null)  
         return;  
  
      // If the source and destination are not in the same DataSet, don't change the ForeignKeyConstraint.  
      if (sourceTable.DataSet != destinationTable.DataSet)  
         return;  
  
      String constraintName = constraint.ConstraintName;  
  
      if (e.Action == CollectionChangeAction.Add) {  
         DataColumn[] columns = new DataColumn[constraint.Columns.Count()];  
         DataColumn[] parentColumns = constraint.RelatedColumns;  
  
         // Get the columns used in new constraint from the destination table.  
         for (int i = 0; i < constraint.Columns.Count(); i++) {  
            String columnName = constraint.Columns[i].ColumnName;  
  
            if (destinationTable.Columns.Contains(columnName))  
               columns[i] = destinationTable.Columns[columnName];  
            else  
               return;  
         }  
  
         ForeignKeyConstraint newConstraint = new ForeignKeyConstraint(constraintName, parentColumns, columns);  
         newConstraint.AcceptRejectRule = constraint.AcceptRejectRule;  
         newConstraint.DeleteRule = constraint.DeleteRule;  
         newConstraint.UpdateRule = constraint.UpdateRule;  
  
         if (!destinationTable.Constraints.Contains(constraintName))  
            destinationTable.Constraints.Add(newConstraint);  
      } else if (e.Action == CollectionChangeAction.Remove)  
         if (destinationTable.Constraints.Contains(constraintName))  
            destinationTable.Constraints.Remove(constraintName);  
   }  
  
   // return the destination table.  
   public DataTable DestinationTable {  
      get { return destinationTable; }  
   }  
}  
```  
  
 <span data-ttu-id="0c375-214">此範例示範如何修改 DataTable 中的資料，並更新資料來源。</span><span class="sxs-lookup"><span data-stu-id="0c375-214">This sample shows how to modify data in a DataTable and update the data source.</span></span>  
  
 <span data-ttu-id="0c375-215">首先，建立資料庫：</span><span class="sxs-lookup"><span data-stu-id="0c375-215">First, create a database:</span></span>  
  
```  
USE [master]  
GO  
  
CREATE DATABASE [MySchool]   
  
GO  
  
USE [MySchool]  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Course]([CourseID] [nvarchar](10) NOT NULL,  
[Year] [smallint] NOT NULL,  
[Title] [nvarchar](100) NOT NULL,  
[Credits] [int] NOT NULL,  
[DepartmentID] [int] NOT NULL,  
 CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED   
(  
[CourseID] ASC,  
[Year] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Department]([DepartmentID] [int] IDENTITY(1,1) NOT NULL,  
[Name] [nvarchar](50) NOT NULL,  
[Budget] [money] NOT NULL,  
[StartDate] [datetime] NOT NULL,  
[Administrator] [int] NULL,  
 CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED   
(  
[DepartmentID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)  
  
SET IDENTITY_INSERT [dbo].[Department] ON   
  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)  
SET IDENTITY_INSERT [dbo].[Department] OFF  
  
ALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])  
REFERENCES [dbo].[Department] ([DepartmentID])  
GO  
ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]  
GO  
```  
  
 <span data-ttu-id="0c375-216">您現在可以編譯並執行範例。</span><span class="sxs-lookup"><span data-stu-id="0c375-216">You can now compile and run the sample.</span></span> <span data-ttu-id="0c375-217">[如何修改 DataTable 和更新資料來源中的資料](https://code.msdn.microsoft.com/How-to-modify-data-in-c68d35f4)有此範例的 Visual Basic 和 C# 專案。</span><span class="sxs-lookup"><span data-stu-id="0c375-217">[How to modify data in DataTable and update to the data source](https://code.msdn.microsoft.com/How-to-modify-data-in-c68d35f4) has Visual Basic and C# projects of this sample.</span></span>  
  
```csharp  
using System;  
using System.Data;  
using System.Data.SqlClient;  
  
class Program {  
   static void Main(string[] args) {  
  
   string MySchoolConnectionString = "Data Source=(local);Initial Catalog=MySchool;Integrated Security=True";  
  
      // Get Data  
      String selectString =  
       @"Select [CourseID],[Year],[Title],[Credits],[DepartmentID] From [dbo].[Course];  
               Select [DepartmentID],[Name],[Budget],[StartDate],[Administrator] From [dbo].[Department] ";  
  
      DataSet dataSet = new DataSet();  
      DataTable course = dataSet.Tables.Add("Course");  
      DataTable department = dataSet.Tables.Add("Department");  
  
      Console.WriteLine("Get data from database:");  
      GetDataTables(MySchoolConnectionString, selectString, dataSet, course, department);  
      Console.WriteLine();  
  
      // Use DataTable Edits to edit the data  
      String updateString =  
              @"Update [dbo].[Course] Set [Credits]=@Credits Where [CourseID]=@CourseID;";  
  
      course.ColumnChanged += OnColumnChanged;  
  
      // Set the Credits of first row is negative value, and set the Credits of second row is plus.  
      ChangeCredits(course, course.Rows[0], -1);  
      ChangeCredits(course, course.Rows[1], 11);  
  
      UpdateDataTables(MySchoolConnectionString, updateString, dataSet, "Course",  
          new SqlParameter("@CourseID", SqlDbType.NVarChar, 10, "CourseID"),  
          new SqlParameter("@Credits", SqlDbType.Int, 4, "Credits"));  
      Console.WriteLine("Only the Credits of second row is changed.");  
      ShowDataTable(course);  
      Console.WriteLine();  
  
      // Delete and Remove from DataTable  
      // Create the foreign key constraint, and set the DeleteRule with Cascade.  
      ForeignKeyConstraint courseDepartFK = new ForeignKeyConstraint("CourseDepartFK", department.Columns["DepartmentID"], course.Columns["DepartmentID"]);  
      courseDepartFK.DeleteRule = Rule.Cascade;  
      courseDepartFK.UpdateRule = Rule.Cascade;  
      courseDepartFK.AcceptRejectRule = AcceptRejectRule.None;  
      course.Constraints.Add(courseDepartFK);  
  
      String deleteString = @"Delete From [dbo].[Course] Where [CourseID]=@CourseID;";  
  
      department.Rows[0].Delete();  
      Console.WriteLine("If One row in Department table is deleted, the related rows in Course table will also be deleted.");  
      Console.WriteLine("Department DataTable:");  
      ShowDataTable(department);  
      Console.WriteLine();  
      Console.WriteLine("Course DataTable:");  
      ShowDataTable(course);  
      Console.WriteLine();  
      // Update the delete operation  
      DeleteDataTables(MySchoolConnectionString, deleteString, dataSet, "Course",  
          new SqlParameter("@CourseID", SqlDbType.NVarChar, 10, "CourseID"));  
      Console.WriteLine("After delete operation:");  
      Console.WriteLine("Course DataTable:");  
      ShowDataTable(course);  
      Console.WriteLine();  
  
      course.Rows.RemoveAt(0);  
      Console.WriteLine("Now we remove one row from Course:");  
      ShowDataTable(course);  
      DeleteDataTables(MySchoolConnectionString, deleteString, dataSet, "Course",  
          new SqlParameter("@CourseID", SqlDbType.NVarChar, 10, "CourseID"));  
   }  
  
   // Use SqlDataAdapter to get data.  
   private static void GetDataTables(String connectionString, String selectString,  
       DataSet dataSet, params DataTable[] tables) {  
      using (SqlDataAdapter adapter = new SqlDataAdapter()) {  
         adapter.SelectCommand = new SqlCommand(selectString);  
         adapter.SelectCommand.Connection = new SqlConnection(connectionString);  
  
         adapter.Fill(0, 0, tables);  
  
         foreach (DataTable table in dataSet.Tables) {  
            Console.WriteLine("Data in {0}:", table.TableName);  
            ShowDataTable(table);  
            Console.WriteLine();  
         }  
      }  
   }  
  
   // Use SqlDataAdapter to update the updata operation.  
   private static void UpdateDataTables(String connectionString, String updateString,  
       DataSet dataSet, String tableName, params SqlParameter[] parameters) {  
      using (SqlDataAdapter adapter = new SqlDataAdapter()) {  
         adapter.UpdateCommand = new SqlCommand(updateString);  
         adapter.UpdateCommand.Parameters.AddRange(parameters);  
         adapter.UpdateCommand.Connection = new SqlConnection(connectionString);  
  
         adapter.Update(dataSet, tableName);  
      }  
   }  
  
   // Use SqlDataAdapter to update delete operation.  
   private static void DeleteDataTables(String connectionString, String deleteString,  
       DataSet dataSet, String tableName, params SqlParameter[] parameters) {  
      using (SqlDataAdapter adapter = new SqlDataAdapter()) {  
         adapter.DeleteCommand = new SqlCommand(deleteString);  
         adapter.DeleteCommand.Parameters.AddRange(parameters);  
         adapter.DeleteCommand.Connection = new SqlConnection(connectionString);  
  
         adapter.Update(dataSet, tableName);  
      }  
   }  
  
   // Use DataTable Edits to modify the data.  
   private static void ChangeCredits(DataTable table, DataRow row, Int32 credits) {  
      row.BeginEdit();  
      Console.WriteLine("We change row {0}", table.Rows.IndexOf(row));  
      row["Credits"] = credits;  
      row.EndEdit();  
   }  
  
   // The method will be invoked when the value in DataTable is changed.  
   private static void OnColumnChanged(Object sender, DataColumnChangeEventArgs args) {  
      Int32 credits = 0;  
      // If Credits is changed and the value is negative, we'll cancel the edit.  
      if ((args.Column.ColumnName == "Credits") &&  
          (!Int32.TryParse(args.ProposedValue.ToString(), out credits) || credits < 0)) {  
         Console.WriteLine("The value of Credits is invalid. Edit canceled.");  
         args.Row.CancelEdit();  
      }  
   }  
  
   // Display the column and value of DataTable.  
   private static void ShowDataTable(DataTable table) {  
      foreach (DataColumn col in table.Columns) {  
         Console.Write("{0,-14}", col.ColumnName);  
      }  
      Console.WriteLine("{0,-14}", "RowState");  
  
      foreach (DataRow row in table.Rows) {  
         if (row.RowState == DataRowState.Deleted) {  
            foreach (DataColumn col in table.Columns) {  
               if (col.DataType.Equals(typeof(DateTime)))  
                  Console.Write("{0,-14:d}", row[col, DataRowVersion.Original]);  
               else if (col.DataType.Equals(typeof(Decimal)))  
                  Console.Write("{0,-14:C}", row[col, DataRowVersion.Original]);  
               else  
                  Console.Write("{0,-14}", row[col, DataRowVersion.Original]);  
            }  
         }  
         else {  
            foreach (DataColumn col in table.Columns) {  
               if (col.DataType.Equals(typeof(DateTime)))  
                  Console.Write("{0,-14:d}", row[col]);  
               else if (col.DataType.Equals(typeof(Decimal)))  
                  Console.Write("{0,-14:C}", row[col]);  
               else  
                  Console.Write("{0,-14}", row[col]);  
            }  
         }  
         Console.WriteLine("{0,-14}", row.RowState);  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.Copy" />
      </Docs>
    </Member>
    <Member MemberName="ColumnChanged">
      <MemberSignature Language="C#" Value="public event System.Data.DataColumnChangeEventHandler ColumnChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataColumnChangeEventHandler ColumnChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.ColumnChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnChanged As DataColumnChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataColumnChangeEventHandler ^ ColumnChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnChanged : System.Data.DataColumnChangeEventHandler " Usage="member this.ColumnChanged : System.Data.DataColumnChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableColumnChangedDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataColumnChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-218">發生在值已經為 <see cref="T:System.Data.DataColumn" /> 中指定的 <see cref="T:System.Data.DataRow" /> 變更之後。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-218">Occurs after a value has been changed for the specified <see cref="T:System.Data.DataColumn" /> in a <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-219">如需詳細資訊，請參閱 < [DataTable 事件處理](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)。</span><span class="sxs-lookup"><span data-stu-id="0c375-219">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.ColumnChanged Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ColumnChanged Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ColumnChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ColumnChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnChangeEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ColumnChanging">
      <MemberSignature Language="C#" Value="public event System.Data.DataColumnChangeEventHandler ColumnChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataColumnChangeEventHandler ColumnChanging" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.ColumnChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnChanging As DataColumnChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataColumnChangeEventHandler ^ ColumnChanging;" />
      <MemberSignature Language="F#" Value="member this.ColumnChanging : System.Data.DataColumnChangeEventHandler " Usage="member this.ColumnChanging : System.Data.DataColumnChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableColumnChangingDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataColumnChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-220">發生在值正在為 <see cref="T:System.Data.DataColumn" /> 中指定的 <see cref="T:System.Data.DataRow" /> 變更之後。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-220">Occurs when a value is being changed for the specified <see cref="T:System.Data.DataColumn" /> in a <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-221">如需詳細資訊，請參閱 < [DataTable 事件處理](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)。</span><span class="sxs-lookup"><span data-stu-id="0c375-221">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.ColumnChanging Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ColumnChanging Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ColumnChanging Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ColumnChanging Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Data.DataColumnCollection Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataColumnCollection Columns" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As DataColumnCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataColumnCollection ^ Columns { System::Data::DataColumnCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Columns : System.Data.DataColumnCollection" Usage="System.Data.DataTable.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableColumnsDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataColumnCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-222">取得屬於這個資料表的資料行集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-222">Gets the collection of columns that belong to this table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c375-223">
            <see cref="T:System.Data.DataColumnCollection" />，其中包含資料表的 <see cref="T:System.Data.DataColumn" /> 物件集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-223">A <see cref="T:System.Data.DataColumnCollection" /> that contains the collection of <see cref="T:System.Data.DataColumn" /> objects for the table.</span>
          </span>
          <span data-ttu-id="0c375-224">如果沒有任何 <see cref="T:System.Data.DataColumn" /> 物件存在，則會傳回空的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-224">An empty collection is returned if no <see cref="T:System.Data.DataColumn" /> objects exist.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-225"><xref:System.Data.DataColumnCollection>藉由定義每個資料行的資料類型會決定資料表的結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-225">The <xref:System.Data.DataColumnCollection> determines the schema of a table by defining the data type of each column.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-226">下列範例會列印在資料表中使用的每個資料列的每個值<xref:System.Data.DataTable.Columns%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="0c375-226">The following example prints each value of each row in a table using the <xref:System.Data.DataTable.Columns%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Columns Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Columns Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Columns Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Columns Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compute">
      <MemberSignature Language="C#" Value="public object Compute (string expression, string filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Compute(string expression, string filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Compute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compute (expression As String, filter As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Compute(System::String ^ expression, System::String ^ filter);" />
      <MemberSignature Language="F#" Value="member this.Compute : string * string -&gt; obj" Usage="dataTable.Compute (expression, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="0c375-227">要計算的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-227">The expression to compute.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="0c375-228">要限制在運算式中評估之資料列的篩選條件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-228">The filter to limit the rows that evaluate in the expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-229">計算在傳遞篩選準則的目前資料列上的指定運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-229">Computes the given expression on the current rows that pass the filter criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c375-230">
            <see cref="T:System.Object" />，設定為計算的結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-230">An <see cref="T:System.Object" />, set to the result of the computation.</span>
          </span>
          <span data-ttu-id="0c375-231">若運算式評估為 Null，傳回值會是 <see cref="F:System.DBNull.Value" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-231">If the expression evaluates to null, the return value will be <see cref="F:System.DBNull.Value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-232">`expression`參數需要的彙總函式。</span><span class="sxs-lookup"><span data-stu-id="0c375-232">The `expression` parameter requires an aggregate function.</span></span> <span data-ttu-id="0c375-233">例如，以下是合法的運算式：</span><span class="sxs-lookup"><span data-stu-id="0c375-233">For example, the following is a legal expression:</span></span>  
  
 `Count(Quantity)`  
  
 <span data-ttu-id="0c375-234">但是，這個運算式不是：</span><span class="sxs-lookup"><span data-stu-id="0c375-234">But this expression is not:</span></span>  
  
 `Sum (Quantity * UnitPrice)`  
  
 <span data-ttu-id="0c375-235">如果您必須執行兩個或多個資料行上的作業，您應該建立<xref:System.Data.DataColumn>，將其<xref:System.Data.DataColumn.Expression%2A>屬性設為適當的運算式，並使用產生的資料行上的彙總運算式。</span><span class="sxs-lookup"><span data-stu-id="0c375-235">If you must perform an operation on two or more columns, you should create a <xref:System.Data.DataColumn>, set its <xref:System.Data.DataColumn.Expression%2A> property to an appropriate expression, and use an aggregate expression on the resulting column.</span></span> <span data-ttu-id="0c375-236">在此情況下，給定<xref:System.Data.DataColumn>包含名稱 「 總計 」，而<xref:System.Data.DataColumn.Expression%2A>屬性設定為這個：</span><span class="sxs-lookup"><span data-stu-id="0c375-236">In that case, given a <xref:System.Data.DataColumn> with the name "total", and the <xref:System.Data.DataColumn.Expression%2A> property set to this:</span></span>  
  
 `"Quantity * UnitPrice"`  
  
 <span data-ttu-id="0c375-237">運算式引數<xref:System.Data.DataTable.Compute%2A>方法，將會是這樣：</span><span class="sxs-lookup"><span data-stu-id="0c375-237">The expression argument for the <xref:System.Data.DataTable.Compute%2A> method would then be this:</span></span>  
  
 `Sum(total)`  
  
 <span data-ttu-id="0c375-238">第二個參數， `filter`，決定運算式中使用哪些資料列。</span><span class="sxs-lookup"><span data-stu-id="0c375-238">The second parameter, `filter`, determines which rows are used in the expression.</span></span> <span data-ttu-id="0c375-239">例如，如果資料表包含名為"colDate 「 日期資料行，您可能會限制的資料列，使用下列運算式：</span><span class="sxs-lookup"><span data-stu-id="0c375-239">For example, if the table contains a date column named "colDate", you could limit the rows with the following expression:</span></span>  
  
 `colDate > 1/1/99 AND colDate < 17/1/99`  
  
 <span data-ttu-id="0c375-240">如需建立兩個參數的運算式規則，請參閱<xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="0c375-240">For rules on creating expressions for both parameters, see the <xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-241">下列範例會加總為 「 總計 」，其識別碼是五個銷售人員的資料行的值。</span><span class="sxs-lookup"><span data-stu-id="0c375-241">The following example sums the values of a column named "Total", for the salesperson whose identification number is five.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Compute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Compute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Compute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Compute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Constraints">
      <MemberSignature Language="C#" Value="public System.Data.ConstraintCollection Constraints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.ConstraintCollection Constraints" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Constraints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Constraints As ConstraintCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ConstraintCollection ^ Constraints { System::Data::ConstraintCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Constraints : System.Data.ConstraintCollection" Usage="System.Data.DataTable.Constraints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableConstraintsDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConstraintCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-242">取得這個資料表所維護的條件約束 (Constraint) 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-242">Gets the collection of constraints maintained by this table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c375-243">
            <see cref="T:System.Data.ConstraintCollection" />，其中包含資料表的 <see cref="T:System.Data.Constraint" /> 物件集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-243">A <see cref="T:System.Data.ConstraintCollection" /> that contains the collection of <see cref="T:System.Data.Constraint" /> objects for the table.</span>
          </span>
          <span data-ttu-id="0c375-244">如果沒有任何 <see cref="T:System.Data.Constraint" /> 物件存在，則會傳回空的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-244">An empty collection is returned if no <see cref="T:System.Data.Constraint" /> objects exist.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-245">A<xref:System.Data.ForeignKeyConstraint>限制時刪除或更新資料行 （或資料行） 中的值是執行的動作。</span><span class="sxs-lookup"><span data-stu-id="0c375-245">A <xref:System.Data.ForeignKeyConstraint> restricts the action performed when a value in a column (or columns) is either deleted or updated.</span></span> <span data-ttu-id="0c375-246">這類條件約束被要搭配主索引鍵資料行。</span><span class="sxs-lookup"><span data-stu-id="0c375-246">Such a constraint is intended to be used with primary key columns.</span></span> <span data-ttu-id="0c375-247">在父子式關係中兩個資料表之間，刪除父資料表中的值可能會影響子資料列中的下列方法之一。</span><span class="sxs-lookup"><span data-stu-id="0c375-247">In a parent/child relationship between two tables, deleting a value from the parent table can affect the child rows in one of the following ways.</span></span>  
  
-   <span data-ttu-id="0c375-248">子資料列也可以刪除 （串聯式動作）。</span><span class="sxs-lookup"><span data-stu-id="0c375-248">The child rows can also be deleted (a cascading action).</span></span>  
  
-   <span data-ttu-id="0c375-249">子資料行 （或資料行） 中的值可以設為 null 值。</span><span class="sxs-lookup"><span data-stu-id="0c375-249">The values in the child column (or columns) can be set to null values.</span></span>  
  
-   <span data-ttu-id="0c375-250">子資料行 （或資料行） 中的值可以設定為預設值。</span><span class="sxs-lookup"><span data-stu-id="0c375-250">The values in the child column (or columns) can be set to default values.</span></span>  
  
-   <span data-ttu-id="0c375-251">可以產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0c375-251">An exception can be generated.</span></span>  
  
 <span data-ttu-id="0c375-252">A<xref:System.Data.UniqueConstraint>時嘗試將值設定為非唯一值的主索引鍵中變成作用中。</span><span class="sxs-lookup"><span data-stu-id="0c375-252">A <xref:System.Data.UniqueConstraint> becomes active when attempting to set a value in a primary key to a non-unique value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-253">下列範例會將<xref:System.Data.ForeignKeyConstraint>加入條件約束的集合。</span><span class="sxs-lookup"><span data-stu-id="0c375-253">The following example adds a <xref:System.Data.ForeignKeyConstraint> to the collection of constraints.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Constraints Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Constraints Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Constraints Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Constraints Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; System.Data.DataTable" Usage="dataTable.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c375-254">複製這個 <see cref="T:System.Data.DataTable" /> 的結構和資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-254">Copies both the structure and data for this <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c375-255">新的 <see cref="T:System.Data.DataTable" />，具有與這個 <see cref="T:System.Data.DataTable" /> 相同的結構 (資料表結構描述和條件約束) 和資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-255">A new <see cref="T:System.Data.DataTable" /> with the same structure (table schemas and constraints) and data as this <see cref="T:System.Data.DataTable" />.</span>
          </span>
          <span data-ttu-id="0c375-256">如果這些類別已形成子類別，則複本也會屬於相同的子類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-256">If these classes have been derived, the copy will also be of the same derived classes.</span>
          </span>
          <span data-ttu-id="0c375-257">
            <see cref="M:System.Data.DataTable.Copy" /> 會建立與原始 <see cref="T:System.Data.DataTable" /> 具有相同結構和資料的新 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-257">
              <see cref="M:System.Data.DataTable.Copy" /> creates a new <see cref="T:System.Data.DataTable" /> with the same structure and data as the original <see cref="T:System.Data.DataTable" />.</span>
          </span>
          <span data-ttu-id="0c375-258">若要將結構複製到新的 <see cref="T:System.Data.DataTable" />，但是不複製資料，請使用 <see cref="M:System.Data.DataTable.Clone" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-258">To copy the structure to a new <see cref="T:System.Data.DataTable" />, but not the data, use <see cref="M:System.Data.DataTable.Clone" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0c375-259">下列範例會使用<xref:System.Data.DataTable.Copy%2A>方法用來建立一份原始<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-259">The following example uses the <xref:System.Data.DataTable.Copy%2A> method to create a copy of the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="0c375-260">命名空間名稱不會保留，如果它繼承自父代<xref:System.Data.DataTable>或<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="0c375-260">The namespace name is not retained if it is inherited from a parent <xref:System.Data.DataTable> or <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Copy Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Copy Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Copy Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Copy Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataView.ToTable" />
        <altmember cref="M:System.Data.DataTable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataReader">
      <MemberSignature Language="C#" Value="public System.Data.DataTableReader CreateDataReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTableReader CreateDataReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.CreateDataReader" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDataReader () As DataTableReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTableReader ^ CreateDataReader();" />
      <MemberSignature Language="F#" Value="member this.CreateDataReader : unit -&gt; System.Data.DataTableReader" Usage="dataTable.CreateDataReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTableReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c375-261">傳回對應於這個 <see cref="T:System.Data.DataTableReader" /> 之中資料的 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-261">Returns a <see cref="T:System.Data.DataTableReader" /> corresponding to the data within this <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c375-262">
            <see cref="T:System.Data.DataTableReader" />，其中包含一個結果集，對應於來源 <see cref="T:System.Data.DataTable" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-262">A <see cref="T:System.Data.DataTableReader" /> containing one result set, corresponding to the source <see cref="T:System.Data.DataTable" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0c375-263">下列的主控台應用程式會建立 <xref:System.Data.DataTable> 執行個體 (Instance)。</span><span class="sxs-lookup"><span data-stu-id="0c375-263">The following console application creates a <xref:System.Data.DataTable> instance.</span></span> <span data-ttu-id="0c375-264">範例接著會傳遞將填滿<xref:System.Data.DataTable>要呼叫的程序<xref:System.Data.DataTable.CreateDataReader%2A>方法，這個方法會逐一查看包含在結果<xref:System.Data.DataTableReader>。</span><span class="sxs-lookup"><span data-stu-id="0c375-264">The example then passes the filled <xref:System.Data.DataTable> to a procedure that calls the <xref:System.Data.DataTable.CreateDataReader%2A> method, which iterates through the results contained within the <xref:System.Data.DataTableReader>.</span></span>  
  
 [!code-csharp[DataWorks DataTable.CreateDataReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.CreateDataReader/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.CreateDataReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.CreateDataReader/VB/source.vb#1)]  
  
 <span data-ttu-id="0c375-265">此範例會在主控台視窗中顯示以下輸出：</span><span class="sxs-lookup"><span data-stu-id="0c375-265">The example displays the following output in the console window:</span></span>  
  
 `1 Mary`  
  
 `2 Andy`  
  
 `3 Peter`  
  
 `4 Russ`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.CreateDataReader" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable CreateInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable CreateInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.CreateInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateInstance () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ CreateInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : unit -&gt; System.Data.DataTable&#xA;override this.CreateInstance : unit -&gt; System.Data.DataTable" Usage="dataTable.CreateInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c375-266">建立 <see cref="T:System.Data.DataTable" /> 的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-266">Creates a new instance of <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c375-267">新的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-267">The new expression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSet">
      <MemberSignature Language="C#" Value="public System.Data.DataSet DataSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataSet DataSet" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.DataSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataSet As DataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataSet ^ DataSet { System::Data::DataSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSet : System.Data.DataSet" Usage="System.Data.DataTable.DataSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableDataSetDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-268">取得這個資料表所屬的 <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-268">Gets the <see cref="T:System.Data.DataSet" /> to which this table belongs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c375-269">這個資料表所屬的 <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-269">The <see cref="T:System.Data.DataSet" /> to which this table belongs.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-270">如果控制項資料繫結至<xref:System.Data.DataTable>，以及資料表所屬<xref:System.Data.DataSet>，您可以取得<xref:System.Data.DataSet>透過這個屬性。</span><span class="sxs-lookup"><span data-stu-id="0c375-270">If a control is data bound to a <xref:System.Data.DataTable>, and the table belongs to a <xref:System.Data.DataSet>, you can get to the <xref:System.Data.DataSet> through this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-271">下列範例會傳回父代<xref:System.Data.DataSet>透過給定資料表的<xref:System.Data.DataTable.DataSet%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="0c375-271">The following example returns the parent <xref:System.Data.DataSet> of a given table through the <xref:System.Data.DataTable.DataSet%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.DataSet Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.DataSet Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.DataSet Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.DataSet Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultView">
      <MemberSignature Language="C#" Value="public System.Data.DataView DefaultView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataView DefaultView" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.DefaultView" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultView As DataView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataView ^ DefaultView { System::Data::DataView ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultView : System.Data.DataView" Usage="System.Data.DataTable.DefaultView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableDefaultViewDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-272">取得可能含有已篩選檢視表或游標位置的資料表自訂檢視表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-272">Gets a customized view of the table that may include a filtered view, or a cursor position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c375-273">與 <see cref="T:System.Data.DataView" /> 關聯的 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-273">The <see cref="T:System.Data.DataView" /> associated with the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-274"><xref:System.Data.DataTable.DefaultView%2A>屬性會傳回<xref:System.Data.DataView>可用來排序、 篩選和搜尋<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-274">The <xref:System.Data.DataTable.DefaultView%2A> property returns a <xref:System.Data.DataView> you can use to sort, filter, and search a <xref:System.Data.DataTable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-275">下列範例會設定的屬性<xref:System.Data.DataTable>物件的<xref:System.Data.DataView>透過<xref:System.Data.DataTable.DefaultView%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="0c375-275">The following example sets a property of the <xref:System.Data.DataTable> object's <xref:System.Data.DataView> through the <xref:System.Data.DataTable.DefaultView%2A> property.</span></span> <span data-ttu-id="0c375-276">此範例也示範的繫結<xref:System.Windows.Forms.DataGridView>控制對<xref:System.Data.DataTable>名為 「 供應 」 包含資料行名為"CompanyName"。</span><span class="sxs-lookup"><span data-stu-id="0c375-276">The example also shows the binding of a <xref:System.Windows.Forms.DataGridView> control to a <xref:System.Data.DataTable> named "Suppliers" that includes a column named "CompanyName."</span></span>  
  
 [!code-csharp[Classic WebData DataTable.DefaultView Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.DefaultView Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.DefaultView Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.DefaultView Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayExpression">
      <MemberSignature Language="C#" Value="public string DisplayExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayExpression" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.DisplayExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayExpression : string with get, set" Usage="System.Data.DataTable.DisplayExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableDisplayExpressionDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-277">取得或設定會傳回用來在使用者介面中表示這個資料表之值的運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-277">Gets or sets the expression that returns a value used to represent this table in the user interface.</span>
          </span>
          <span data-ttu-id="0c375-278">
            <see langword="DisplayExpression" /> 屬性可讓您將這個資料表的名稱顯示在使用者介面中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-278">The <see langword="DisplayExpression" /> property lets you display the name of this table in a user interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c375-279">一個顯示字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-279">A display string.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Data.DataColumn.Expression" />
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public virtual void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="dataTable.EndInit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c375-280">結束對表單或另一個元件所使用的 <see cref="T:System.Data.DataTable" /> 進行初始化作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-280">Ends the initialization of a <see cref="T:System.Data.DataTable" /> that is used on a form or used by another component.</span>
          </span>
          <span data-ttu-id="0c375-281">初始化發生於執行階段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-281">The initialization occurs at run time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-282">Visual Studio.NET 設計環境會使用這個方法，結束對表單或另一個元件所使用的元件初始化。</span><span class="sxs-lookup"><span data-stu-id="0c375-282">The Visual Studio .NET design environment uses this method to end the initialization of a component that is used on a form or used by another component.</span></span> <span data-ttu-id="0c375-283"><xref:System.Data.DataTable.BeginInit%2A>方法會啟動初始化。</span><span class="sxs-lookup"><span data-stu-id="0c375-283">The <xref:System.Data.DataTable.BeginInit%2A> method starts the initialization.</span></span> <span data-ttu-id="0c375-284">使用<xref:System.Data.DataTable.BeginInit%2A>和<xref:System.Data.DataTable.EndInit%2A>方法，防止控制項被完全初始化之前使用。</span><span class="sxs-lookup"><span data-stu-id="0c375-284">Using the <xref:System.Data.DataTable.BeginInit%2A> and <xref:System.Data.DataTable.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoadData">
      <MemberSignature Language="C#" Value="public void EndLoadData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndLoadData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.EndLoadData" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndLoadData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndLoadData();" />
      <MemberSignature Language="F#" Value="member this.EndLoadData : unit -&gt; unit" Usage="dataTable.EndLoadData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c375-285">載入資料後開啟告知、索引維護和條件約束。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-285">Turns on notifications, index maintenance, and constraints after loading data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-286">使用<xref:System.Data.DataTable.EndLoadData%2A>配合<xref:System.Data.DataTable.LoadDataRow%2A>和<xref:System.Data.DataTable.BeginLoadData%2A>。</span><span class="sxs-lookup"><span data-stu-id="0c375-286">Use <xref:System.Data.DataTable.EndLoadData%2A> in conjunction with <xref:System.Data.DataTable.LoadDataRow%2A> and <xref:System.Data.DataTable.BeginLoadData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProperties">
      <MemberSignature Language="C#" Value="public System.Data.PropertyCollection ExtendedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.PropertyCollection ExtendedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.ExtendedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtendedProperties As PropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::PropertyCollection ^ ExtendedProperties { System::Data::PropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProperties : System.Data.PropertyCollection" Usage="System.Data.DataTable.ExtendedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("ExtendedPropertiesDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-287">取得自訂使用者資訊的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-287">Gets the collection of customized user information.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c375-288">
            <see cref="T:System.Data.PropertyCollection" />，含有自訂使用者資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-288">A <see cref="T:System.Data.PropertyCollection" /> that contains custom user information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-289">使用<xref:System.Data.DataTable.ExtendedProperties%2A>若要將自訂資訊加入<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-289">Use the <xref:System.Data.DataTable.ExtendedProperties%2A> to add custom information to a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="0c375-290">新增資訊`Add`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-290">Add information with the `Add` method.</span></span> <span data-ttu-id="0c375-291">擷取資訊`Item`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-291">Retrieve information with the `Item` method.</span></span>  
  
 <span data-ttu-id="0c375-292">擴充的屬性的類型必須是<xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="0c375-292">Extended properties must be of type <xref:System.String>.</span></span> <span data-ttu-id="0c375-293">不是 String 類型的屬性不會保存時<xref:System.Data.DataTable>撰寫為 XML。</span><span class="sxs-lookup"><span data-stu-id="0c375-293">Properties that are not of type String are not persisted when the <xref:System.Data.DataTable> is written as XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-294">下列範例會加入至時間戳記值<xref:System.Data.DataTable>透過<xref:System.Data.DataTable.ExtendedProperties%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="0c375-294">The following example adds a timestamp value to the <xref:System.Data.DataTable> through the <xref:System.Data.DataTable.ExtendedProperties%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.ExtendedProperties Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ExtendedProperties Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ExtendedProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ExtendedProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="fInitInProgress">
      <MemberSignature Language="C#" Value="protected internal bool fInitInProgress;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly bool fInitInProgress" />
      <MemberSignature Language="DocId" Value="F:System.Data.DataTable.fInitInProgress" />
      <MemberSignature Language="VB.NET" Value="Protected Friend fInitInProgress As Boolean " />
      <MemberSignature Language="C++ CLI" Value="protected public: bool fInitInProgress;" />
      <MemberSignature Language="F#" Value="val mutable fInitInProgress : bool" Usage="System.Data.DataTable.fInitInProgress" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-295">檢查初始化是否仍在進行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-295">Checks whether initialization is in progress.</span>
          </span>
          <span data-ttu-id="0c375-296">初始化發生於執行階段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-296">The initialization occurs at run time.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-297">取得 <see cref="T:System.Data.DataTable" /> (包含從前一次載入它或呼叫 <see cref="M:System.Data.DataTable.AcceptChanges" /> 以來所做的所有變更) 的複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-297">Gets a copy of the <see cref="T:System.Data.DataTable" /> containing all changes made to it since it was last loaded, or since <see cref="M:System.Data.DataTable.AcceptChanges" /> was called.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChanges">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable GetChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetChanges" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChanges () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetChanges();" />
      <MemberSignature Language="F#" Value="member this.GetChanges : unit -&gt; System.Data.DataTable" Usage="dataTable.GetChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c375-298">取得 <see cref="T:System.Data.DataTable" /> (包含從載入它或前一次呼叫 <see cref="M:System.Data.DataTable.AcceptChanges" /> 以來所做的所有變更) 的複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-298">Gets a copy of the <see cref="T:System.Data.DataTable" /> that contains all changes made to it since it was loaded or <see cref="M:System.Data.DataTable.AcceptChanges" /> was last called.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c375-299">這個 <see cref="T:System.Data.DataTable" /> 所產生變更的複本，如果沒有變更，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-299">A copy of the changes from this <see cref="T:System.Data.DataTable" />, or <see langword="null" /> if no changes are found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-300">建立新<xref:System.Data.DataSet>包含一份原始中的所有資料列<xref:System.Data.DataSet>具有暫止的變更。</span><span class="sxs-lookup"><span data-stu-id="0c375-300">Creates a new <xref:System.Data.DataSet> containing a copy of all rows in the original <xref:System.Data.DataSet> that have pending changes.</span></span> <span data-ttu-id="0c375-301">關聯性條件約束可能會導致其他未變更的資料列加入至新<xref:System.Data.DataSet>如果未變更的資料列包含主索引鍵對應至已變更的資料列中的外部索引鍵。</span><span class="sxs-lookup"><span data-stu-id="0c375-301">Relationship constraints can cause additional unchanged rows to be added to the new <xref:System.Data.DataSet> if the unchanged rows contain primary keys corresponding to foreign keys in the changed rows.</span></span> <span data-ttu-id="0c375-302">此方法會傳回`null`(`Nothing` Visual Basic 中) 有任何資料列中原始<xref:System.Data.DataSet>與暫止的變更。</span><span class="sxs-lookup"><span data-stu-id="0c375-302">The method returns `null` (`Nothing` in Visual Basic) if there are no rows in the original <xref:System.Data.DataSet> with pending changes.</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.GetChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.GetChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.GetChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.GetChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChanges">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetChanges (System.Data.DataRowState rowStates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable GetChanges(valuetype System.Data.DataRowState rowStates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChanges (rowStates As DataRowState) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetChanges(System::Data::DataRowState rowStates);" />
      <MemberSignature Language="F#" Value="member this.GetChanges : System.Data.DataRowState -&gt; System.Data.DataTable" Usage="dataTable.GetChanges rowStates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowStates" Type="System.Data.DataRowState" />
      </Parameters>
      <Docs>
        <param name="rowStates">
          <span data-ttu-id="0c375-303">其中一個 <see cref="T:System.Data.DataRowState" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-303">One of the <see cref="T:System.Data.DataRowState" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-304">取得 <see cref="T:System.Data.DataTable" /> (包含從前一次載入它或呼叫 <see cref="M:System.Data.DataTable.AcceptChanges" /> 以來所做的所有變更) 的複本 (由 <see cref="T:System.Data.DataRowState" /> 篩選)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-304">Gets a copy of the <see cref="T:System.Data.DataTable" /> containing all changes made to it since it was last loaded, or since <see cref="M:System.Data.DataTable.AcceptChanges" /> was called, filtered by <see cref="T:System.Data.DataRowState" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c375-305">篩選過的 <see cref="T:System.Data.DataTable" /> 複本，可以在其上執行動作，稍後會在 <see cref="T:System.Data.DataTable" /> 中使用 <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> 合併回來。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-305">A filtered copy of the <see cref="T:System.Data.DataTable" /> that can have actions performed on it, and later be merged back in the <see cref="T:System.Data.DataTable" /> using <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />.</span>
          </span>
          <span data-ttu-id="0c375-306">如果找不到所需的 <see cref="T:System.Data.DataRowState" /> 的資料列，則方法會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-306">If no rows of the desired <see cref="T:System.Data.DataRowState" /> are found, the method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-307"><xref:System.Data.DataTable.GetChanges%2A>方法用來產生第二個<xref:System.Data.DataTable>導入原始的物件，其中包含的變更。</span><span class="sxs-lookup"><span data-stu-id="0c375-307">The <xref:System.Data.DataTable.GetChanges%2A> method is used to produce a second <xref:System.Data.DataTable> object that contains only the changes introduced into the original.</span></span> <span data-ttu-id="0c375-308">使用`rowStates`引數來指定新的物件應該包含的變更類型。</span><span class="sxs-lookup"><span data-stu-id="0c375-308">Use the `rowStates` argument to specify the type of changes the new object should include.</span></span>  
  
 <span data-ttu-id="0c375-309">關聯性條件約束可能會導致要包含的不變的父資料列。</span><span class="sxs-lookup"><span data-stu-id="0c375-309">Relationship constraints may cause unchanged parent rows to be included.</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.GetChanges1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.GetChanges1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.GetChanges1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.GetChanges1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataTableSchema">
      <MemberSignature Language="C#" Value="public static System.Xml.Schema.XmlSchemaComplexType GetDataTableSchema (System.Xml.Schema.XmlSchemaSet schemaSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Schema.XmlSchemaComplexType GetDataTableSchema(class System.Xml.Schema.XmlSchemaSet schemaSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataTableSchema (schemaSet As XmlSchemaSet) As XmlSchemaComplexType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::Schema::XmlSchemaComplexType ^ GetDataTableSchema(System::Xml::Schema::XmlSchemaSet ^ schemaSet);" />
      <MemberSignature Language="F#" Value="static member GetDataTableSchema : System.Xml.Schema.XmlSchemaSet -&gt; System.Xml.Schema.XmlSchemaComplexType" Usage="System.Data.DataTable.GetDataTableSchema schemaSet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaComplexType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaSet" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="schemaSet">
          <span data-ttu-id="0c375-310">
            <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-310">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-311">這個方法會傳回 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 執行個體，此執行個體包含描述 Web 服務之 <see cref="T:System.Data.DataTable" /> 的 Web 服務描述語言 (WSDL)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-311">This method returns an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> instance containing the Web Services Description Language (WSDL) that describes the <see cref="T:System.Data.DataTable" /> for Web Services.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c375-312">
            <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-312">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetErrors">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetErrors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetErrors" />
      <MemberSignature Language="VB.NET" Value="Public Function GetErrors () As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetErrors();" />
      <MemberSignature Language="F#" Value="member this.GetErrors : unit -&gt; System.Data.DataRow[]" Usage="dataTable.GetErrors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c375-313">取得包含錯誤之 <see cref="T:System.Data.DataRow" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-313">Gets an array of <see cref="T:System.Data.DataRow" /> objects that contain errors.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c375-314">具有錯誤之 <see cref="T:System.Data.DataRow" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-314">An array of <see cref="T:System.Data.DataRow" /> objects that have errors.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-315">傳回的清單<xref:System.Data.DataRow>具有物件<xref:System.Data.DataRow.RowError%2A>設定。</span><span class="sxs-lookup"><span data-stu-id="0c375-315">Returns the list of <xref:System.Data.DataRow> objects that have <xref:System.Data.DataRow.RowError%2A> set.</span></span> <span data-ttu-id="0c375-316">例如，呼叫時可能會發生錯誤<xref:System.Data.Common.DataAdapter.Update%2A>具有<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>設為 **，則為 true**。</span><span class="sxs-lookup"><span data-stu-id="0c375-316">For example, errors can occur when calling <xref:System.Data.Common.DataAdapter.Update%2A> with <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> set to **true**.</span></span> <span data-ttu-id="0c375-317">不會叫用<xref:System.Data.DataTable.AcceptChanges%2A>上<xref:System.Data.DataTable>直到您解決所有錯誤，然後再重新送出<xref:System.Data.DataSet>更新。</span><span class="sxs-lookup"><span data-stu-id="0c375-317">Do not invoke <xref:System.Data.DataTable.AcceptChanges%2A> on the <xref:System.Data.DataTable> until you resolve all errors and resubmit the <xref:System.Data.DataSet> for updating.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-318">下列範例會使用<xref:System.Data.DataTable.GetErrors%2A>方法傳回的陣列<xref:System.Data.DataRow>有錯誤的物件。</span><span class="sxs-lookup"><span data-stu-id="0c375-318">The following example uses the <xref:System.Data.DataTable.GetErrors%2A> method to return an array of <xref:System.Data.DataRow> objects that have errors.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.GetErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.GetErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.GetErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.GetErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="dataTable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="0c375-319">
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件，其保留與 <see cref="T:System.Data.DataTable" /> 關聯的序列化資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-319">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized data associated with the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="0c375-320">
            <see cref="T:System.Runtime.Serialization.StreamingContext" /> 物件，其包含與 <see cref="T:System.Data.DataTable" /> 關聯之序列化資料流的來源和目的端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-320">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the source and destination of the serialized stream associated with the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-321">以序列化 <see cref="T:System.Data.DataTable" /> 所需的資料，填入序列化資訊物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-321">Populates a serialization information object with the data needed to serialize the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0c375-322">
            <paramref name="info" /> 參數是 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-322">The <paramref name="info" /> parameter is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRowType">
      <MemberSignature Language="C#" Value="protected virtual Type GetRowType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type GetRowType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetRowType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetRowType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ GetRowType();" />
      <MemberSignature Language="F#" Value="abstract member GetRowType : unit -&gt; Type&#xA;override this.GetRowType : unit -&gt; Type" Usage="dataTable.GetRowType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c375-323">取得資料列型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-323">Gets the row type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c375-324">傳回 <see cref="T:System.Data.DataRow" /> 的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-324">Returns the type of the <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.Schema.XmlSchema GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.Schema.XmlSchema GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSchema () As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::Schema::XmlSchema ^ GetSchema();" />
      <MemberSignature Language="F#" Value="abstract member GetSchema : unit -&gt; System.Xml.Schema.XmlSchema&#xA;override this.GetSchema : unit -&gt; System.Xml.Schema.XmlSchema" Usage="dataTable.GetSchema " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.GetSchema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c375-325">如需這個成員的說明，請參閱 <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-325">For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c375-326">
            <see cref="T:System.Xml.Schema.XmlSchema" />，描述物件的 XML 表示，該物件由 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> 方法產生，由 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> 方法取用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-326">An <see cref="T:System.Xml.Schema.XmlSchema" /> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasErrors">
      <MemberSignature Language="C#" Value="public bool HasErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.HasErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasErrors { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasErrors : bool" Usage="System.Data.DataTable.HasErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableHasErrorsDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-327">取得值，指出資料表所屬 <see cref="T:System.Data.DataSet" /> 的任何資料表中的任何資料列是否存在錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-327">Gets a value indicating whether there are errors in any of the rows in any of the tables of the <see cref="T:System.Data.DataSet" /> to which the table belongs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c375-328">
            <see langword="true" />，表示存在錯誤；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-328">
              <see langword="true" /> if errors exist; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-329">當使用者在一組資料中包含<xref:System.Data.DataTable>，如果變更會導致某些驗證失敗，您可以將標記每個變更，發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="0c375-329">As users work on a set of data contained in a <xref:System.Data.DataTable>, you can mark each change with an error if the change causes some validation failure.</span></span> <span data-ttu-id="0c375-330">您可以將標記在整個<xref:System.Data.DataRow>錯誤訊息使用<xref:System.Data.DataRow.RowError%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="0c375-330">You can mark an entire <xref:System.Data.DataRow> with an error message using the <xref:System.Data.DataRow.RowError%2A> property.</span></span> <span data-ttu-id="0c375-331">您也可以設定錯誤的資料列的每個資料行<xref:System.Data.DataRow.SetColumnError%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-331">You can also set errors on each column of the row with the <xref:System.Data.DataRow.SetColumnError%2A> method.</span></span>  
  
 <span data-ttu-id="0c375-332">更新的資料來源之前<xref:System.Data.DataSet>，我們建議您，您第一次叫用<xref:System.Data.DataSet.GetChanges%2A>方法，在目標上的<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="0c375-332">Before updating a data source with a <xref:System.Data.DataSet>, it's recommended that you first invoke the <xref:System.Data.DataSet.GetChanges%2A> method on the target <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="0c375-333">方法會產生<xref:System.Data.DataSet>包含只有原始所做的變更。</span><span class="sxs-lookup"><span data-stu-id="0c375-333">The method results in a <xref:System.Data.DataSet> that contains only the changes made to the original.</span></span> <span data-ttu-id="0c375-334">在傳送之前<xref:System.Data.DataSet>若要更新的資料來源，請檢查<xref:System.Data.DataTable.HasErrors%2A>的每個資料表，以查看任何錯誤是否已附加至資料列或資料列中的資料行的屬性。</span><span class="sxs-lookup"><span data-stu-id="0c375-334">Before sending the <xref:System.Data.DataSet> to the data source for updating, check the <xref:System.Data.DataTable.HasErrors%2A> property of each table to see if any errors have been attached to the rows or columns in the rows.</span></span>  
  
 <span data-ttu-id="0c375-335">在之後重新調整每個錯誤，清除 錯誤<xref:System.Data.DataRow.ClearErrors%2A>方法的`DataRow`。</span><span class="sxs-lookup"><span data-stu-id="0c375-335">After reconciling each error, clear the errors with the <xref:System.Data.DataRow.ClearErrors%2A> method of the `DataRow`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-336">下列範例會使用<xref:System.Data.DataTable.HasErrors%2A>來檢查資料表是否包含錯誤的屬性。</span><span class="sxs-lookup"><span data-stu-id="0c375-336">The following example uses the <xref:System.Data.DataTable.HasErrors%2A> property to check if a table contains errors.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.HasErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.HasErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.HasErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.HasErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.GetErrors" />
      </Docs>
    </Member>
    <Member MemberName="ImportRow">
      <MemberSignature Language="C#" Value="public void ImportRow (System.Data.DataRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ImportRow(class System.Data.DataRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ImportRow(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportRow (row As DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ImportRow(System::Data::DataRow ^ row);" />
      <MemberSignature Language="F#" Value="member this.ImportRow : System.Data.DataRow -&gt; unit" Usage="dataTable.ImportRow row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="row">
          <span data-ttu-id="0c375-337">要匯入的 <see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-337">The <see cref="T:System.Data.DataRow" /> to be imported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-338">將 <see cref="T:System.Data.DataRow" /> 複製至 <see cref="T:System.Data.DataTable" />，保留任何屬性設定，以及原始值和目前值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-338">Copies a <see cref="T:System.Data.DataRow" /> into a <see cref="T:System.Data.DataTable" />, preserving any property settings, as well as original and current values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-339">呼叫<xref:System.Data.DataTable.NewRow%2A>將資料列，使用現有的資料表結構描述的資料表，但具有資料列中，預設值，並設定<xref:System.Data.DataRowState>至`Detached`。</span><span class="sxs-lookup"><span data-stu-id="0c375-339">Calling <xref:System.Data.DataTable.NewRow%2A> adds a row to the table using the existing table schema, but with default values for the row, and sets the <xref:System.Data.DataRowState> to `Detached`.</span></span> <span data-ttu-id="0c375-340">呼叫<xref:System.Data.DataTable.ImportRow%2A>會保留現有<xref:System.Data.DataRowState>連同其他資料列中的值。</span><span class="sxs-lookup"><span data-stu-id="0c375-340">Calling <xref:System.Data.DataTable.ImportRow%2A> preserves the existing <xref:System.Data.DataRowState> along with other values in the row.</span></span> <span data-ttu-id="0c375-341">如果`DataRow`傳遞參數是在中斷連結的狀態，則會忽略它，並擲不回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0c375-341">If the `DataRow` that is passed as a parameter is in a detached state, it is ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="0c375-342">新的資料列會加入至資料表的結尾。</span><span class="sxs-lookup"><span data-stu-id="0c375-342">The new row will be added to the end of the data table.</span></span>  
  
 <span data-ttu-id="0c375-343">如果新的資料列違反條件約束不會加入到資料表。</span><span class="sxs-lookup"><span data-stu-id="0c375-343">If the new row violates a Constraint it won’t be added to the data table.</span></span>  
  
 <span data-ttu-id="0c375-344">您可以取得與 DataTable.Rows.Find 以及 DataTable.Rows.IndexOf 之新資料列索引。</span><span class="sxs-lookup"><span data-stu-id="0c375-344">You can get the index of the new row with as DataTable.Rows.Find and DataTable.Rows.IndexOf.</span></span> <span data-ttu-id="0c375-345">如需詳細資訊，請參閱 <xref:System.Data.DataRowCollection> 和 <xref:System.Data.DataTable.Rows%2A>。</span><span class="sxs-lookup"><span data-stu-id="0c375-345">See <xref:System.Data.DataRowCollection> and <xref:System.Data.DataTable.Rows%2A> for more information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialized">
      <MemberSignature Language="C#" Value="public event EventHandler Initialized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Initialized" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.Initialized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Initialized As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Initialized;" />
      <MemberSignature Language="F#" Value="member this.Initialized : EventHandler " Usage="member this.Initialized : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-346">發生於 <see cref="T:System.Data.DataTable" /> 初始化之後。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-346">Occurs after the <see cref="T:System.Data.DataTable" /> is initialized.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-347">如需詳細資訊，請參閱<xref:System.Data.DataTable.IsInitialized%2A>。</span><span class="sxs-lookup"><span data-stu-id="0c375-347">For more information, see <xref:System.Data.DataTable.IsInitialized%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitialized">
      <MemberSignature Language="C#" Value="public bool IsInitialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitialized" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.IsInitialized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInitialized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInitialized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInitialized : bool" Usage="System.Data.DataTable.IsInitialized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-348">取得值，指出 <see cref="T:System.Data.DataTable" /> 是否已初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-348">Gets a value that indicates whether the <see cref="T:System.Data.DataTable" /> is initialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c375-349">
            <see langword="true" /> 表示元件已完成初始化，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-349">
              <see langword="true" /> to indicate the component has completed initialization; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-350">傳回的狀態<xref:System.Data.DataTable>時它由所建構，例如 Visual Studio。</span><span class="sxs-lookup"><span data-stu-id="0c375-350">Returns the status of the <xref:System.Data.DataTable> while it’s being constructed, for instance by Visual Studio.</span></span> <span data-ttu-id="0c375-351"><xref:System.Data.DataTable.BeginInit%2A>方法將它設定為`false`並<xref:System.Data.DataTable.EndInit%2A>方法將它設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="0c375-351">The <xref:System.Data.DataTable.BeginInit%2A> method sets it to `false` and <xref:System.Data.DataTable.EndInit%2A> method sets it to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-352">使用所提供的 <see cref="T:System.Data.DataTable" />，用資料來源的值填滿 <see cref="T:System.Data.IDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-352">Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" />.</span>
          </span>
          <span data-ttu-id="0c375-353">如果 <see langword="DataTable" /> 已經包含資料列，從資料來源傳入的資料會與現有的資料列合併。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-353">If the <see langword="DataTable" /> already contains rows, the incoming data from the data source is merged with the existing rows.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-354">`Load`方法可用於數個常見的案例，從指定的資料來源取得資料，並將它加入至目前的資料容器所有為中心 (在此情況下， `DataTable`)。</span><span class="sxs-lookup"><span data-stu-id="0c375-354">The `Load` method can be used in several common scenarios, all centered around getting data from a specified data source and adding it to the current data container (in this case, a `DataTable`).</span></span> <span data-ttu-id="0c375-355">下列案例說明標準用法`DataTable`、 描述其更新，並合併行為。</span><span class="sxs-lookup"><span data-stu-id="0c375-355">These scenarios describe standard usage for a `DataTable`, describing its update and merge behavior.</span></span>  
  
 <span data-ttu-id="0c375-356">A`DataTable`會同步處理，或更新具有單一主要資料來源。</span><span class="sxs-lookup"><span data-stu-id="0c375-356">A `DataTable` synchronizes or updates with a single primary data source.</span></span> <span data-ttu-id="0c375-357">`DataTable`追蹤變更，允許與主要資料來源的同步處理。</span><span class="sxs-lookup"><span data-stu-id="0c375-357">The `DataTable` tracks changes, allowing synchronization with the primary data source.</span></span> <span data-ttu-id="0c375-358">颾魤 ㄛ`DataTable`可以接受一或多個次要資料來源的增量資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-358">In addition, a `DataTable` can accept incremental data from one or more secondary data sources.</span></span> <span data-ttu-id="0c375-359">`DataTable`不負任何責任，若要允許與次要資料來源的同步處理追蹤變更。</span><span class="sxs-lookup"><span data-stu-id="0c375-359">The `DataTable` isn't responsible for tracking changes in order to allow synchronization with the secondary data source.</span></span>  
  
 <span data-ttu-id="0c375-360">根據這些兩個的假設性的資料來源，使用者很可能需要下列其中一個下列行為：</span><span class="sxs-lookup"><span data-stu-id="0c375-360">Given these two hypothetical data sources, a user is likely to require one of the following behaviors:</span></span>  
  
-   <span data-ttu-id="0c375-361">初始化`DataTable`從主要資料來源。</span><span class="sxs-lookup"><span data-stu-id="0c375-361">Initialize `DataTable` from a primary data source.</span></span> <span data-ttu-id="0c375-362">在此案例中，使用者想要初始化空`DataTable`以主要資料來源的值。</span><span class="sxs-lookup"><span data-stu-id="0c375-362">In this scenario, the user wants to initialize an empty `DataTable` with values from the primary data source.</span></span> <span data-ttu-id="0c375-363">稍後，使用者想要將變更傳播回主要資料來源。</span><span class="sxs-lookup"><span data-stu-id="0c375-363">Later the user intends to propagate changes back to the primary data source.</span></span>  
  
-   <span data-ttu-id="0c375-364">保留變更，並重新同步處理主要資料來源。</span><span class="sxs-lookup"><span data-stu-id="0c375-364">Preserve changes and re-synchronize from the primary data source.</span></span> <span data-ttu-id="0c375-365">在此案例中，使用者想要採取`DataTable`填入先前案例中，並執行增量同步處理與主要資料來源，保留在中所做的修改`DataTable`。</span><span class="sxs-lookup"><span data-stu-id="0c375-365">In this scenario, the user wants to take the `DataTable` filled in the previous scenario and perform an incremental synchronization with the primary data source, preserving modifications made in the `DataTable`.</span></span>  
  
-   <span data-ttu-id="0c375-366">累加的資料摘要，從次要資料來源。</span><span class="sxs-lookup"><span data-stu-id="0c375-366">Incremental data feed from secondary data sources.</span></span> <span data-ttu-id="0c375-367">在此案例中，使用者想要合併從一或多個次要資料來源的變更並傳播這些變更回復到主要資料來源。</span><span class="sxs-lookup"><span data-stu-id="0c375-367">In this scenario, the user wants to merge changes from one or more secondary data sources, and propagate those changes back to the primary data source.</span></span>  
  
 <span data-ttu-id="0c375-368">`Load`方法會進行所有這些情況下可能。</span><span class="sxs-lookup"><span data-stu-id="0c375-368">The `Load` method makes all these scenarios possible.</span></span> <span data-ttu-id="0c375-369">所有保留一個多載這個方法可讓您指定的載入選項的參數，指出如何已經在資料列<xref:System.Data.DataTable>結合所載入的資料列。</span><span class="sxs-lookup"><span data-stu-id="0c375-369">All but one of the overloads for this method allows you to specify a load option parameter, indicating how rows already in a <xref:System.Data.DataTable> combine with rows being loaded.</span></span> <span data-ttu-id="0c375-370">（不允許您指定的行為的多載會使用預設負載選項）。下表描述所提供的三種載入選項<xref:System.Data.LoadOption>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="0c375-370">(The overload that doesn't allow you to specify the behavior uses the default load option.) The following table describes the three load options provided by the <xref:System.Data.LoadOption> enumeration.</span></span> <span data-ttu-id="0c375-371">在每個案例中，描述當內送資料中的資料列的主索引鍵符合現有的資料列的主索引鍵表示的行為。</span><span class="sxs-lookup"><span data-stu-id="0c375-371">In each case, the description indicates the behavior when the primary key of a row in the incoming data matches the primary key of an existing row.</span></span>  
  
|<span data-ttu-id="0c375-372">載入選項</span><span class="sxs-lookup"><span data-stu-id="0c375-372">Load Option</span></span>|<span data-ttu-id="0c375-373">描述</span><span class="sxs-lookup"><span data-stu-id="0c375-373">Description</span></span>|  
|-----------------|-----------------|  
|<span data-ttu-id="0c375-374">`PreserveChanges` (預設值)</span><span class="sxs-lookup"><span data-stu-id="0c375-374">`PreserveChanges` (default)</span></span>|<span data-ttu-id="0c375-375">使用內送資料列的值更新資料列的原始版本。</span><span class="sxs-lookup"><span data-stu-id="0c375-375">Updates the original version of the row with the value of the incoming row.</span></span>|  
|`OverwriteChanges`|<span data-ttu-id="0c375-376">傳入的資料列的值更新資料列的目前和原始版本。</span><span class="sxs-lookup"><span data-stu-id="0c375-376">Updates the current and original versions of the row with the value of the incoming row.</span></span>|  
|`Upsert`|<span data-ttu-id="0c375-377">使用內送資料列的值來更新資料列的目前版本。</span><span class="sxs-lookup"><span data-stu-id="0c375-377">Updates the current version of the row with the value of the incoming row.</span></span>|  
  
 <span data-ttu-id="0c375-378">一般情況下，`PreserveChanges`並`OverwriteChanges`選項適用的案例中，使用者必須同步處理`DataSet`和其與主要資料來源的變更。</span><span class="sxs-lookup"><span data-stu-id="0c375-378">In general, the `PreserveChanges` and `OverwriteChanges` options are intended for scenarios in which the user needs to synchronize the `DataSet` and its changes with the primary data source.</span></span> <span data-ttu-id="0c375-379">`Upsert`選項有助於從一或多個次要資料來源的彙總變更。</span><span class="sxs-lookup"><span data-stu-id="0c375-379">The `Upsert` option facilitates aggregating changes from one or more secondary data sources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-380">下列範例示範數個相關事宜呼叫<xref:System.Data.DataTable.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-380">The following example demonstrates several of the issues involved with calling the <xref:System.Data.DataTable.Load%2A> method.</span></span> <span data-ttu-id="0c375-381">此範例著重於結構描述問題，包括 推斷的結構描述，從載入的第一， <xref:System.Data.IDataReader>，和不相容的結構描述，以及具有遺失或其他資料行的結構描述，接著處理。</span><span class="sxs-lookup"><span data-stu-id="0c375-381">First, the example focuses on schema issues, including inferring a schema from the loaded <xref:System.Data.IDataReader>, and then handling incompatible schemas, and schemas with missing or additional columns.</span></span> <span data-ttu-id="0c375-382">此範例接著專注在資料問題，包括處理各種不同的載入選項。</span><span class="sxs-lookup"><span data-stu-id="0c375-382">The example then focuses on data issues, including handling the various loading options.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-383">此範例示範如何使用其中一個多載版本`Load`。</span><span class="sxs-lookup"><span data-stu-id="0c375-383">This example shows how to use one of the overloaded versions of `Load`.</span></span> <span data-ttu-id="0c375-384">如需可能會提供其他範例，請參閱個別的多載的主題。</span><span class="sxs-lookup"><span data-stu-id="0c375-384">For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-csharp[DataWorks DataTableLoad#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableLoad/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableLoad#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableLoad/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.DataSet.Load" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Data.IDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Data.IDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Load(System.Data.IDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Data::IDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Data.IDataReader -&gt; unit" Usage="dataTable.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="0c375-385">
            <see cref="T:System.Data.IDataReader" />，提供結果集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-385">An <see cref="T:System.Data.IDataReader" /> that provides a result set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-386">使用所提供的 <see cref="T:System.Data.DataTable" />，用資料來源的值填滿 <see cref="T:System.Data.IDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-386">Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" />.</span>
          </span>
          <span data-ttu-id="0c375-387">如果 <see cref="T:System.Data.DataTable" /> 已經包含資料列，從資料來源傳入的資料會與現有的資料列合併。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-387">If the <see cref="T:System.Data.DataTable" /> already contains rows, the incoming data from the data source is merged with the existing rows.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-388"><xref:System.Data.DataTable.Load%2A>方法會取用第一個結果集從載入<xref:System.Data.IDataReader>，並順利完成之後，讀取器的位置設下一個結果集，如果有的話。</span><span class="sxs-lookup"><span data-stu-id="0c375-388">The <xref:System.Data.DataTable.Load%2A> method consumes the first result set from the loaded <xref:System.Data.IDataReader>, and after successful completion, sets the reader's position to the next result set, if any.</span></span> <span data-ttu-id="0c375-389">將資料，轉換時`Load`方法會使用相同的轉換規則<xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-389">When converting data, the `Load` method uses the same conversion rules as the <xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="0c375-390"><xref:System.Data.DataTable.Load%2A>方法必須考慮到三個特定的問題時將資料從載入<xref:System.Data.IDataReader>執行個體： 結構描述、 資料和事件的作業。</span><span class="sxs-lookup"><span data-stu-id="0c375-390">The <xref:System.Data.DataTable.Load%2A> method must take into account three specific issues when loading the data from an <xref:System.Data.IDataReader> instance: schema, data, and event operations.</span></span> <span data-ttu-id="0c375-391">使用結構描述時<xref:System.Data.DataTable.Load%2A>方法可能會遇到的條件下, 表中所述。</span><span class="sxs-lookup"><span data-stu-id="0c375-391">When working with the schema, the <xref:System.Data.DataTable.Load%2A> method may encounter conditions as described in the following table.</span></span> <span data-ttu-id="0c375-392">結構描述作業進行的所有匯入的結果集，即使沒有包含資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-392">The schema operations take place for all imported result sets, even those containing no data.</span></span>  
  
|<span data-ttu-id="0c375-393">條件</span><span class="sxs-lookup"><span data-stu-id="0c375-393">Condition</span></span>|<span data-ttu-id="0c375-394">行為</span><span class="sxs-lookup"><span data-stu-id="0c375-394">Behavior</span></span>|  
|---------------|--------------|  
|<span data-ttu-id="0c375-395"><xref:System.Data.DataTable>沒有結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-395">The <xref:System.Data.DataTable> has no schema.</span></span>|<span data-ttu-id="0c375-396"><xref:System.Data.DataTable.Load%2A>方法會根據來自匯入的結果集的結構描述推測出<xref:System.Data.IDataReader>。</span><span class="sxs-lookup"><span data-stu-id="0c375-396">The <xref:System.Data.DataTable.Load%2A> method infers the schema based on the result set from the imported <xref:System.Data.IDataReader>.</span></span>|  
|<span data-ttu-id="0c375-397"><xref:System.Data.DataTable>有結構描述，但它與載入結構描述不相容。</span><span class="sxs-lookup"><span data-stu-id="0c375-397">The <xref:System.Data.DataTable> has a schema, but it is incompatible with the loaded schema.</span></span>|<span data-ttu-id="0c375-398"><xref:System.Data.DataTable.Load%2A>方法會擲回的例外狀況對應到當您嘗試載入不相容的結構描述中的資料時，就會發生的特定錯誤。</span><span class="sxs-lookup"><span data-stu-id="0c375-398">The <xref:System.Data.DataTable.Load%2A> method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</span></span>|  
|<span data-ttu-id="0c375-399">結構描述相容，但載入的結果集的結構描述包含資料行，不存在於<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-399">The schemas are compatible, but the loaded result set schema contains columns that do not exist in the <xref:System.Data.DataTable>.</span></span>|<span data-ttu-id="0c375-400"><xref:System.Data.DataTable.Load%2A>方法加入額外的資料行，以`DataTable`的結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-400">The <xref:System.Data.DataTable.Load%2A> method adds the extra columns to `DataTable`'s schema.</span></span> <span data-ttu-id="0c375-401">方法擲回例外狀況，如果對應中的資料行<xref:System.Data.DataTable>和載入的結果集不是相容的值。</span><span class="sxs-lookup"><span data-stu-id="0c375-401">The method throws an exception if corresponding columns in the <xref:System.Data.DataTable> and the loaded result set are not value compatible.</span></span> <span data-ttu-id="0c375-402">此方法也會擷取從結果集中所有加入的資料行的條件約束資訊。</span><span class="sxs-lookup"><span data-stu-id="0c375-402">The method also retrieves constraint information from the result set for all added columns.</span></span> <span data-ttu-id="0c375-403">除了 Primary Key 條件約束的情況下，只有，會使用此條件約束資訊目前<xref:System.Data.DataTable>不包含任何資料行開頭的載入作業。</span><span class="sxs-lookup"><span data-stu-id="0c375-403">Except for the case of Primary Key constraint, this constraint information is used only if the current <xref:System.Data.DataTable> does not contain any columns at the start of the load operation.</span></span>|  
|<span data-ttu-id="0c375-404">結構描述相容，但載入的結果集的結構描述包含較少的資料行比`DataTable`。</span><span class="sxs-lookup"><span data-stu-id="0c375-404">The schemas are compatible, but the loaded result set schema contains fewer columns than does the `DataTable`.</span></span>|<span data-ttu-id="0c375-405">如果遺漏的資料行已定義了預設值或資料行的資料類型可為 null，<xref:System.Data.DataTable.Load%2A>方法可讓資料列加入，以取代預設值或`null`遺漏的資料行的值。</span><span class="sxs-lookup"><span data-stu-id="0c375-405">If a missing column has a default value defined or the column's data type is nullable, the <xref:System.Data.DataTable.Load%2A> method allows the rows to be added, substituting the default or `null` value for the missing column.</span></span> <span data-ttu-id="0c375-406">如果沒有預設值或`null`可用，則`Load`方法會擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0c375-406">If no default value or `null` can be used, then the `Load` method throws an exception.</span></span> <span data-ttu-id="0c375-407">如果未不提供任何特定的預設值，`Load`方法會使用`null`值為隱含的預設值。</span><span class="sxs-lookup"><span data-stu-id="0c375-407">If no specific default value has been supplied, the `Load` method uses the `null` value as the implied default value.</span></span>|  
  
 <span data-ttu-id="0c375-408">考慮的行為之前，先`Load`方面的資料作業的方法，請考慮，每個資料列內<xref:System.Data.DataTable>會維護目前的值和每個資料行的原始值。</span><span class="sxs-lookup"><span data-stu-id="0c375-408">Before considering the behavior of the `Load` method in terms of data operations, consider that each row within a <xref:System.Data.DataTable> maintains both the current value and the original value for each column.</span></span> <span data-ttu-id="0c375-409">這些值可能是同等權限，或如果自填滿之後已變更的資料列中的資料可能會不同`DataTable`。</span><span class="sxs-lookup"><span data-stu-id="0c375-409">These values may be equivalent, or may be different if the data in the row has been changed since filling the `DataTable`.</span></span>  <span data-ttu-id="0c375-410">如需詳細資訊，請參閱 <<c0> [ 資料列狀態和資料列版本](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)。</span><span class="sxs-lookup"><span data-stu-id="0c375-410">For more information, see [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md).</span></span>  
  
 <span data-ttu-id="0c375-411">這個版本的`Load`方法會嘗試保留目前的值，在每個資料列，讓原始的值保持不變。</span><span class="sxs-lookup"><span data-stu-id="0c375-411">This version of the `Load` method attempts to preserve the current values in each row, leaving the original value intact.</span></span> <span data-ttu-id="0c375-412">(如果您想要更細微地控制的內送資料的行為，請參閱<xref:System.Data.DataTable.Load%2A?displayProperty=nameWithType>。)如果現有的資料列和內送資料列包含對應的主索引鍵值，使用其目前的資料列狀態值來處理資料列，否則它會被視為新的資料列。</span><span class="sxs-lookup"><span data-stu-id="0c375-412">(If you want finer control over the behavior of incoming data, see <xref:System.Data.DataTable.Load%2A?displayProperty=nameWithType>.) If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</span></span>  
  
 <span data-ttu-id="0c375-413">事件作業方面<xref:System.Data.DataTable.RowChanging>才會變更每個資料列，就會發生事件而<xref:System.Data.DataTable.RowChanged>變更每個資料列之後，就會發生事件。</span><span class="sxs-lookup"><span data-stu-id="0c375-413">In terms of event operations, the <xref:System.Data.DataTable.RowChanging> event occurs before each row is changed, and the <xref:System.Data.DataTable.RowChanged> event occurs after each row has been changed.</span></span> <span data-ttu-id="0c375-414">在每個案例中，<xref:System.Data.DataRowChangeEventArgs.Action%2A>屬性<xref:System.Data.DataRowChangeEventArgs>傳遞至事件處理常式的執行個體包含與事件相關聯的特定動作的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="0c375-414">In each case, the <xref:System.Data.DataRowChangeEventArgs.Action%2A> property of the <xref:System.Data.DataRowChangeEventArgs> instance passed to the event handler contains information about the particular action associated with the event.</span></span> <span data-ttu-id="0c375-415">此動作的值取決於資料列之前的載入作業的狀態。</span><span class="sxs-lookup"><span data-stu-id="0c375-415">This action value depends on the state of the row before the load operation.</span></span> <span data-ttu-id="0c375-416">在每個案例中，這兩個事件發生，而且動作是針對每個相同。</span><span class="sxs-lookup"><span data-stu-id="0c375-416">In each case, both events occur, and the action is the same for each.</span></span> <span data-ttu-id="0c375-417">動作可套用到每個資料列，目前或原始版本，或兩者，根據目前的資料列狀態。</span><span class="sxs-lookup"><span data-stu-id="0c375-417">The action may be applied to either the current or original version of each row, or both, depending on the current row state.</span></span>  
  
 <span data-ttu-id="0c375-418">下表顯示行為`Load`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-418">The following table displays behavior for the `Load` method.</span></span> <span data-ttu-id="0c375-419">（標示為"（不會出現） 」） 的最後一個資料列描述不符合任何現有的資料列的內送資料列的行為。</span><span class="sxs-lookup"><span data-stu-id="0c375-419">The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</span></span> <span data-ttu-id="0c375-420">此資料表中的每個資料格會描述資料列中欄位的目前和原始值連同<xref:System.Data.DataRowState>後的值為`Load`方法完成。</span><span class="sxs-lookup"><span data-stu-id="0c375-420">Each cell in this table describes the current and original value for a field within a row, along with the <xref:System.Data.DataRowState> for the value after the `Load` method has completed.</span></span> <span data-ttu-id="0c375-421">方法在此情況下，不允許您指定 [載入] 選項，並使用預設值， `PreserveChanges`。</span><span class="sxs-lookup"><span data-stu-id="0c375-421">In this case, the method doesn't allow you to indicate the load option, and uses the default, `PreserveChanges`.</span></span>  
  
|<span data-ttu-id="0c375-422">現有 DataRowState</span><span class="sxs-lookup"><span data-stu-id="0c375-422">Existing DataRowState</span></span>|<span data-ttu-id="0c375-423">值之後`Load`方法和事件動作</span><span class="sxs-lookup"><span data-stu-id="0c375-423">Values after `Load` method, and event action</span></span>|  
|---------------------------|--------------------------------------------------|  
|<span data-ttu-id="0c375-424">已加入</span><span class="sxs-lookup"><span data-stu-id="0c375-424">Added</span></span>|<span data-ttu-id="0c375-425">目前 =\<現有 ></span><span class="sxs-lookup"><span data-stu-id="0c375-425">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="0c375-426">原始 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-426">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-427">狀態 =\<修改 ></span><span class="sxs-lookup"><span data-stu-id="0c375-427">State = \<Modified></span></span><br /><br /> <span data-ttu-id="0c375-428">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="0c375-428">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="0c375-429">修改時間</span><span class="sxs-lookup"><span data-stu-id="0c375-429">Modified</span></span>|<span data-ttu-id="0c375-430">目前 =\<現有 ></span><span class="sxs-lookup"><span data-stu-id="0c375-430">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="0c375-431">原始 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-431">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-432">狀態 =\<修改 ></span><span class="sxs-lookup"><span data-stu-id="0c375-432">State = \<Modified></span></span><br /><br /> <span data-ttu-id="0c375-433">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="0c375-433">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="0c375-434">Deleted</span><span class="sxs-lookup"><span data-stu-id="0c375-434">Deleted</span></span>|<span data-ttu-id="0c375-435">目前 =\<無法使用 ></span><span class="sxs-lookup"><span data-stu-id="0c375-435">Current = \<Not available></span></span><br /><br /> <span data-ttu-id="0c375-436">原始 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-436">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-437">狀態 =\<刪除 ></span><span class="sxs-lookup"><span data-stu-id="0c375-437">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="0c375-438">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="0c375-438">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="0c375-439">Unchanged</span><span class="sxs-lookup"><span data-stu-id="0c375-439">Unchanged</span></span>|<span data-ttu-id="0c375-440">目前 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-440">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-441">原始 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-441">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-442">狀態 =\<變更 ></span><span class="sxs-lookup"><span data-stu-id="0c375-442">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="0c375-443">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="0c375-443">RowAction = ChangeCurrentAndOriginal</span></span>|  
|<span data-ttu-id="0c375-444">（不會出現）</span><span class="sxs-lookup"><span data-stu-id="0c375-444">(Not present)</span></span>|<span data-ttu-id="0c375-445">目前 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-445">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-446">原始 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-446">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-447">狀態 =\<變更 ></span><span class="sxs-lookup"><span data-stu-id="0c375-447">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="0c375-448">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="0c375-448">RowAction = ChangeCurrentAndOriginal</span></span>|  
  
 <span data-ttu-id="0c375-449">中的值<xref:System.Data.DataColumn>可以透過使用屬性這類限制<xref:System.Data.DataColumn.ReadOnly%2A>和<xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="0c375-449">Values in a <xref:System.Data.DataColumn> can be constrained through use of properties such as <xref:System.Data.DataColumn.ReadOnly%2A> and <xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="0c375-450">`Load`方法會處理這類資料行與資料行的屬性所定義的行為一致的方式。</span><span class="sxs-lookup"><span data-stu-id="0c375-450">The `Load` method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</span></span> <span data-ttu-id="0c375-451">讀取的唯一條件約束上<xref:System.Data.DataColumn>只適用於記憶體中發生的變更。</span><span class="sxs-lookup"><span data-stu-id="0c375-451">The read only constraint on a <xref:System.Data.DataColumn> is applicable only for changes that occur in memory.</span></span> <span data-ttu-id="0c375-452">`Load`方法的覆寫唯讀的資料行值，如有需要。</span><span class="sxs-lookup"><span data-stu-id="0c375-452">The `Load` method's overwrites the read-only column values, if needed.</span></span>  
  
 <span data-ttu-id="0c375-453">若要判斷哪一個版本要用來比較連入的資料列，目前的資料列的主索引鍵欄位`Load`方法會使用原始版本的資料列中主索引鍵值，若有的話。</span><span class="sxs-lookup"><span data-stu-id="0c375-453">To determine which version of the primary key field to use for comparing the current row with an incoming row, the `Load` method uses the original version of the primary key value within a row, if it exists.</span></span> <span data-ttu-id="0c375-454">否則，`Load`方法會使用目前版本的主索引鍵欄位。</span><span class="sxs-lookup"><span data-stu-id="0c375-454">Otherwise, the `Load` method uses the current version of the primary key field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-455">下列範例示範數個相關事宜呼叫<xref:System.Data.DataTable.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-455">The following example demonstrates several of the issues involved with calling the <xref:System.Data.DataTable.Load%2A> method.</span></span> <span data-ttu-id="0c375-456">此範例著重於結構描述問題，包括 推斷的結構描述，從載入的第一， <xref:System.Data.IDataReader>，和不相容的結構描述，以及具有遺失或其他資料行的結構描述，接著處理。</span><span class="sxs-lookup"><span data-stu-id="0c375-456">First, the example focuses on schema issues, including inferring a schema from the loaded <xref:System.Data.IDataReader>, and then handling incompatible schemas, and schemas with missing or additional columns.</span></span> <span data-ttu-id="0c375-457">此範例接著會呼叫`Load`方法，顯示資料之前和之後載入作業。</span><span class="sxs-lookup"><span data-stu-id="0c375-457">The example then calls the `Load` method, displaying the data both before and after the load operation.</span></span>  
  
 [!code-csharp[DataWorks DataTableLoad.IDataReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableLoad.IDataReader/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableLoad.IDataReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableLoad.IDataReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Data.IDataReader reader, System.Data.LoadOption loadOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Data.IDataReader reader, valuetype System.Data.LoadOption loadOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Data::IDataReader ^ reader, System::Data::LoadOption loadOption);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Data.IDataReader * System.Data.LoadOption -&gt; unit" Usage="dataTable.Load (reader, loadOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" />
        <Parameter Name="loadOption" Type="System.Data.LoadOption" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="0c375-458">
            <see cref="T:System.Data.IDataReader" />，提供一個或多個結果集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-458">An <see cref="T:System.Data.IDataReader" /> that provides one or more result sets.</span>
          </span>
        </param>
        <param name="loadOption">
          <span data-ttu-id="0c375-459">來自 <see cref="T:System.Data.LoadOption" /> 列舉的值，指出已經在 <see cref="T:System.Data.DataTable" /> 中的資料列如何與共用相同主索引鍵的傳入資料列結合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-459">A value from the <see cref="T:System.Data.LoadOption" /> enumeration that indicates how rows already in the <see cref="T:System.Data.DataTable" /> are combined with incoming rows that share the same primary key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-460">使用所提供的 <see cref="T:System.Data.DataTable" />，用資料來源的值填滿 <see cref="T:System.Data.IDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-460">Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" />.</span>
          </span>
          <span data-ttu-id="0c375-461">如果 <see langword="DataTable" /> 已經包含資料列，從資料來源傳入的資料會根據 <paramref name="loadOption" /> 參數的值，與現有的資料列合併。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-461">If the <see langword="DataTable" /> already contains rows, the incoming data from the data source is merged with the existing rows according to the value of the <paramref name="loadOption" /> parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-462">`Load`方法會取用第一個結果集從載入<xref:System.Data.IDataReader>，並順利完成之後，讀取器的位置設下一個結果集，如果有的話。</span><span class="sxs-lookup"><span data-stu-id="0c375-462">The `Load` method consumes the first result set from the loaded <xref:System.Data.IDataReader>, and after successful completion, sets the reader's position to the next result set, if any.</span></span> <span data-ttu-id="0c375-463">將資料，轉換時`Load`方法會使用相同的轉換規則<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-463">When converting data, the `Load` method uses the same conversion rules as the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method.</span></span>  
  
 <span data-ttu-id="0c375-464">`Load`方法必須考慮到三個特定的問題時將資料從載入<xref:System.Data.IDataReader>執行個體： 結構描述、 資料和事件的作業。</span><span class="sxs-lookup"><span data-stu-id="0c375-464">The `Load` method must take into account three specific issues when loading the data from an <xref:System.Data.IDataReader> instance: schema, data, and event operations.</span></span> <span data-ttu-id="0c375-465">使用結構描述時`Load`方法可能會遇到的條件下, 表中所述。</span><span class="sxs-lookup"><span data-stu-id="0c375-465">When working with the schema, the `Load` method may encounter conditions as described in the following table.</span></span> <span data-ttu-id="0c375-466">結構描述作業進行的所有匯入的結果集，即使沒有包含資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-466">The schema operations take place for all imported result sets, even those containing no data.</span></span>  
  
|<span data-ttu-id="0c375-467">條件</span><span class="sxs-lookup"><span data-stu-id="0c375-467">Condition</span></span>|<span data-ttu-id="0c375-468">行為</span><span class="sxs-lookup"><span data-stu-id="0c375-468">Behavior</span></span>|  
|---------------|--------------|  
|<span data-ttu-id="0c375-469"><xref:System.Data.DataTable>沒有結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-469">The <xref:System.Data.DataTable> has no schema.</span></span>|<span data-ttu-id="0c375-470">`Load`方法會根據來自匯入的結果集的結構描述推測出<xref:System.Data.IDataReader>。</span><span class="sxs-lookup"><span data-stu-id="0c375-470">The `Load` method infers the schema based on the result set from the imported <xref:System.Data.IDataReader>.</span></span>|  
|<span data-ttu-id="0c375-471"><xref:System.Data.DataTable>有結構描述，但它與載入結構描述不相容。</span><span class="sxs-lookup"><span data-stu-id="0c375-471">The <xref:System.Data.DataTable> has a schema, but it is incompatible with the loaded schema.</span></span>|<span data-ttu-id="0c375-472">`Load`方法會擲回的例外狀況對應到當您嘗試載入不相容的結構描述中的資料時，就會發生的特定錯誤。</span><span class="sxs-lookup"><span data-stu-id="0c375-472">The `Load` method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</span></span>|  
|<span data-ttu-id="0c375-473">結構描述相容，但載入的結果集的結構描述包含不存在於中的資料行`DataTable`。</span><span class="sxs-lookup"><span data-stu-id="0c375-473">The schemas are compatible, but the loaded result set schema contains columns that don't exist in the `DataTable`.</span></span>|<span data-ttu-id="0c375-474">`Load`方法加入額外的資料行，以`DataTable`的結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-474">The `Load` method adds the extra columns to `DataTable`’s schema.</span></span> <span data-ttu-id="0c375-475">方法擲回例外狀況，如果對應中的資料行<xref:System.Data.DataTable>和載入的結果集不是相容的值。</span><span class="sxs-lookup"><span data-stu-id="0c375-475">The method throws an exception if corresponding columns in the <xref:System.Data.DataTable> and the loaded result set are not value compatible.</span></span> <span data-ttu-id="0c375-476">此方法也會擷取從結果集中所有加入的資料行的條件約束資訊。</span><span class="sxs-lookup"><span data-stu-id="0c375-476">The method also retrieves constraint information from the result set for all added columns.</span></span> <span data-ttu-id="0c375-477">除了 Primary Key 條件約束的情況下，只有，會使用此條件約束資訊目前<xref:System.Data.DataTable>不包含任何資料行開頭的載入作業。</span><span class="sxs-lookup"><span data-stu-id="0c375-477">Except for the case of Primary Key constraint, this constraint information is used only if the current <xref:System.Data.DataTable> does not contain any columns at the start of the load operation.</span></span>|  
|<span data-ttu-id="0c375-478">結構描述相容，但載入的結果集的結構描述包含較少的資料行比`DataTable`。</span><span class="sxs-lookup"><span data-stu-id="0c375-478">The schemas are compatible, but the loaded result set schema contains fewer columns than does the `DataTable`.</span></span>|<span data-ttu-id="0c375-479">如果遺漏的資料行已定義了預設值或資料行的資料類型可為 null，`Load`方法可讓資料列加入，以取代遺失的資料行的預設值或 null 值。</span><span class="sxs-lookup"><span data-stu-id="0c375-479">If a missing column has a default value defined or the column's data type is nullable, the `Load` method allows the rows to be added, substituting the default or null value for the missing column.</span></span> <span data-ttu-id="0c375-480">如果可以使用沒有預設值或 null，則`Load`方法會擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0c375-480">If no default value or null can be used, then the `Load` method throws an exception.</span></span> <span data-ttu-id="0c375-481">如果未不提供任何特定的預設值，`Load`方法的 null 值做為隱含的預設值。</span><span class="sxs-lookup"><span data-stu-id="0c375-481">If no specific default value has been supplied, the `Load` method uses the null value as the implied default value.</span></span>|  
  
 <span data-ttu-id="0c375-482">考慮的行為之前，先`Load`方面的資料作業的方法，請考慮，每個資料列內<xref:System.Data.DataTable>會維護目前的值和每個資料行的原始值。</span><span class="sxs-lookup"><span data-stu-id="0c375-482">Before considering the behavior of the `Load` method in terms of data operations, consider that each row within a <xref:System.Data.DataTable> maintains both the current value and the original value for each column.</span></span> <span data-ttu-id="0c375-483">這些值可能是同等權限，或如果自填滿之後已變更的資料列中的資料可能會不同`DataTable`。</span><span class="sxs-lookup"><span data-stu-id="0c375-483">These values may be equivalent, or may be different if the data in the row has been changed since filling the `DataTable`.</span></span> <span data-ttu-id="0c375-484">請參閱[資料列狀態和資料列版本](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="0c375-484">See [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md) for more information.</span></span>  
  
 <span data-ttu-id="0c375-485">在此方法呼叫中，指定<xref:System.Data.LoadOption>參數會影響處理內送資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-485">In this method call, the specified <xref:System.Data.LoadOption> parameter influences the processing of the incoming data.</span></span> <span data-ttu-id="0c375-486">Load 方法應如何處理具有相同主索引鍵，為現有的資料列載入資料列？</span><span class="sxs-lookup"><span data-stu-id="0c375-486">How should the Load method handle loading rows that have the same primary key as existing rows?</span></span> <span data-ttu-id="0c375-487">它應該修改目前的值、 原始值，或兩者？</span><span class="sxs-lookup"><span data-stu-id="0c375-487">Should it modify current values, original values, or both?</span></span> <span data-ttu-id="0c375-488">這些問題及其他項目，由控制`loadOption`參數。</span><span class="sxs-lookup"><span data-stu-id="0c375-488">These issues, and more, are controlled by the `loadOption` parameter.</span></span>  
  
 <span data-ttu-id="0c375-489">如果現有的資料列和內送資料列包含對應的主索引鍵值，使用其目前的資料列狀態值來處理資料列，否則它會被視為新的資料列。</span><span class="sxs-lookup"><span data-stu-id="0c375-489">If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</span></span>  
  
 <span data-ttu-id="0c375-490">事件作業方面<xref:System.Data.DataTable.RowChanging>才會變更每個資料列，就會發生事件而<xref:System.Data.DataTable.RowChanged>變更每個資料列之後，就會發生事件。</span><span class="sxs-lookup"><span data-stu-id="0c375-490">In terms of event operations, the <xref:System.Data.DataTable.RowChanging> event occurs before each row is changed, and the <xref:System.Data.DataTable.RowChanged> event occurs after each row has been changed.</span></span> <span data-ttu-id="0c375-491">在每個案例中，<xref:System.Data.DataRowChangeEventArgs.Action%2A>屬性<xref:System.Data.DataRowChangeEventArgs>傳遞至事件處理常式的執行個體包含與事件相關聯的特定動作的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="0c375-491">In each case, the <xref:System.Data.DataRowChangeEventArgs.Action%2A> property of the <xref:System.Data.DataRowChangeEventArgs> instance passed to the event handler contains information about the particular action associated with the event.</span></span> <span data-ttu-id="0c375-492">此動作的值會因載入作業前的資料列的狀態而有所不同。</span><span class="sxs-lookup"><span data-stu-id="0c375-492">This action value varies, depending on the state of the row before the load operation.</span></span> <span data-ttu-id="0c375-493">在每個案例中，這兩個事件發生，而且動作是針對每個相同。</span><span class="sxs-lookup"><span data-stu-id="0c375-493">In each case, both events occur, and the action is the same for each.</span></span> <span data-ttu-id="0c375-494">動作可套用到每個資料列，目前或原始版本，或兩者，根據目前的資料列狀態。</span><span class="sxs-lookup"><span data-stu-id="0c375-494">The action may be applied to either the current or original version of each row, or both, depending on the current row state.</span></span>  
  
 <span data-ttu-id="0c375-495">下表顯示與每個呼叫時，Load 方法的行為`LoadOption`值，然後也會顯示這些值所載入的資料列的資料列狀態的互動。</span><span class="sxs-lookup"><span data-stu-id="0c375-495">The following table displays behavior for the Load method when called with each of the `LoadOption` values, and also shows how the values interact with the row state for the row being loaded.</span></span> <span data-ttu-id="0c375-496">（標示為"（不會出現） 」） 的最後一個資料列描述不符合任何現有的資料列的內送資料列的行為。</span><span class="sxs-lookup"><span data-stu-id="0c375-496">The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</span></span> <span data-ttu-id="0c375-497">此資料表中的每個資料格會描述資料列中欄位的目前和原始值連同<xref:System.Data.DataRowState>後的值為`Load`方法完成。</span><span class="sxs-lookup"><span data-stu-id="0c375-497">Each cell in this table describes the current and original value for a field within a row, along with the <xref:System.Data.DataRowState> for the value after the `Load` method has completed.</span></span>  
  
|<span data-ttu-id="0c375-498">現有 DataRowState</span><span class="sxs-lookup"><span data-stu-id="0c375-498">Existing DataRowState</span></span>|<span data-ttu-id="0c375-499">更新插入</span><span class="sxs-lookup"><span data-stu-id="0c375-499">Upsert</span></span>|<span data-ttu-id="0c375-500">OverwriteChanges</span><span class="sxs-lookup"><span data-stu-id="0c375-500">OverwriteChanges</span></span>|<span data-ttu-id="0c375-501">PreserveChanges （預設行為）</span><span class="sxs-lookup"><span data-stu-id="0c375-501">PreserveChanges (Default behavior)</span></span>|  
|---------------------------|------------|----------------------|------------------------------------------|  
|<span data-ttu-id="0c375-502">已加入</span><span class="sxs-lookup"><span data-stu-id="0c375-502">Added</span></span>|<span data-ttu-id="0c375-503">目前 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-503">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-504">原始 =-\<無法使用 ></span><span class="sxs-lookup"><span data-stu-id="0c375-504">Original = -\<Not available></span></span><br /><br /> <span data-ttu-id="0c375-505">狀態 =\<加入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-505">State = \<Added></span></span><br /><br /> <span data-ttu-id="0c375-506">RowAction = 變更</span><span class="sxs-lookup"><span data-stu-id="0c375-506">RowAction = Change</span></span>|<span data-ttu-id="0c375-507">目前 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-507">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-508">原始 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-508">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-509">狀態 =\<變更 ></span><span class="sxs-lookup"><span data-stu-id="0c375-509">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="0c375-510">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="0c375-510">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="0c375-511">目前 =\<現有 ></span><span class="sxs-lookup"><span data-stu-id="0c375-511">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="0c375-512">原始 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-512">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-513">狀態 =\<修改 ></span><span class="sxs-lookup"><span data-stu-id="0c375-513">State = \<Modified></span></span><br /><br /> <span data-ttu-id="0c375-514">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="0c375-514">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="0c375-515">修改時間</span><span class="sxs-lookup"><span data-stu-id="0c375-515">Modified</span></span>|<span data-ttu-id="0c375-516">目前 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-516">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-517">原始 =\<現有 ></span><span class="sxs-lookup"><span data-stu-id="0c375-517">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="0c375-518">狀態 =\<修改 ></span><span class="sxs-lookup"><span data-stu-id="0c375-518">State = \<Modified></span></span><br /><br /> <span data-ttu-id="0c375-519">RowAction = 變更</span><span class="sxs-lookup"><span data-stu-id="0c375-519">RowAction = Change</span></span>|<span data-ttu-id="0c375-520">目前 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-520">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-521">原始 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-521">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-522">狀態 =\<變更 ></span><span class="sxs-lookup"><span data-stu-id="0c375-522">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="0c375-523">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="0c375-523">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="0c375-524">目前 =\<現有 ></span><span class="sxs-lookup"><span data-stu-id="0c375-524">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="0c375-525">原始 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-525">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-526">狀態 =\<修改 ></span><span class="sxs-lookup"><span data-stu-id="0c375-526">State = \<Modified></span></span><br /><br /> <span data-ttu-id="0c375-527">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="0c375-527">RowAction =ChangeOriginal</span></span>|  
<span data-ttu-id="0c375-528">eleted</span><span class="sxs-lookup"><span data-stu-id="0c375-528">eleted</span></span>|<span data-ttu-id="0c375-529">（負載運作不會影響已刪除的資料列）</span><span class="sxs-lookup"><span data-stu-id="0c375-529">(Load does not affect deleted rows)</span></span><br /><br /> <span data-ttu-id="0c375-530">目前 =---美元</span><span class="sxs-lookup"><span data-stu-id="0c375-530">Current = ---</span></span><br /><br /> <span data-ttu-id="0c375-531">原始 =\<現有 ></span><span class="sxs-lookup"><span data-stu-id="0c375-531">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="0c375-532">狀態 =\<刪除 ></span><span class="sxs-lookup"><span data-stu-id="0c375-532">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="0c375-533">（新的資料列會加入具有下列特性）</span><span class="sxs-lookup"><span data-stu-id="0c375-533">(New row is added with the following characteristics)</span></span><br /><br /> <span data-ttu-id="0c375-534">目前 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-534">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-535">原始 =\<無法使用 ></span><span class="sxs-lookup"><span data-stu-id="0c375-535">Original = \<Not available></span></span><br /><br /> <span data-ttu-id="0c375-536">狀態 =\<加入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-536">State = \<Added></span></span><br /><br /> <span data-ttu-id="0c375-537">RowAction = 新增</span><span class="sxs-lookup"><span data-stu-id="0c375-537">RowAction = Add</span></span>|<span data-ttu-id="0c375-538">復原刪除和</span><span class="sxs-lookup"><span data-stu-id="0c375-538">Undo delete and</span></span><br /><br /> <span data-ttu-id="0c375-539">目前 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-539">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-540">原始 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-540">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-541">狀態 =\<變更 ></span><span class="sxs-lookup"><span data-stu-id="0c375-541">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="0c375-542">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="0c375-542">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="0c375-543">目前 =\<無法使用 ></span><span class="sxs-lookup"><span data-stu-id="0c375-543">Current = \<Not available></span></span><br /><br /> <span data-ttu-id="0c375-544">原始 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-544">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-545">狀態 =\<刪除 ></span><span class="sxs-lookup"><span data-stu-id="0c375-545">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="0c375-546">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="0c375-546">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="0c375-547">Unchanged</span><span class="sxs-lookup"><span data-stu-id="0c375-547">Unchanged</span></span>|<span data-ttu-id="0c375-548">目前 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-548">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-549">原始 =\<現有 ></span><span class="sxs-lookup"><span data-stu-id="0c375-549">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="0c375-550">如果新的值是與現有的值相同則</span><span class="sxs-lookup"><span data-stu-id="0c375-550">If new value is the same as the existing value then</span></span><br /><br /> <span data-ttu-id="0c375-551">狀態 =\<變更 ></span><span class="sxs-lookup"><span data-stu-id="0c375-551">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="0c375-552">RowAction = Nothing</span><span class="sxs-lookup"><span data-stu-id="0c375-552">RowAction = Nothing</span></span><br /><br /> <span data-ttu-id="0c375-553">Else</span><span class="sxs-lookup"><span data-stu-id="0c375-553">Else</span></span><br /><br /> <span data-ttu-id="0c375-554">狀態 =\<修改 ></span><span class="sxs-lookup"><span data-stu-id="0c375-554">State = \<Modified></span></span><br /><br /> <span data-ttu-id="0c375-555">RowAction = 變更</span><span class="sxs-lookup"><span data-stu-id="0c375-555">RowAction = Change</span></span>|<span data-ttu-id="0c375-556">目前 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-556">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-557">原始 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-557">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-558">狀態 =\<變更 ></span><span class="sxs-lookup"><span data-stu-id="0c375-558">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="0c375-559">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="0c375-559">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="0c375-560">目前 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-560">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-561">原始 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-561">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-562">狀態 =\<變更 ></span><span class="sxs-lookup"><span data-stu-id="0c375-562">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="0c375-563">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="0c375-563">RowAction = ChangeCurrentAndOriginal</span></span>|  
<span data-ttu-id="0c375-564">不會出現）</span><span class="sxs-lookup"><span data-stu-id="0c375-564">Not present)</span></span>|<span data-ttu-id="0c375-565">目前 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-565">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-566">原始 =\<無法使用 ></span><span class="sxs-lookup"><span data-stu-id="0c375-566">Original = \<Not available></span></span><br /><br /> <span data-ttu-id="0c375-567">狀態 =\<加入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-567">State = \<Added></span></span><br /><br /> <span data-ttu-id="0c375-568">RowAction = 新增</span><span class="sxs-lookup"><span data-stu-id="0c375-568">RowAction = Add</span></span>|<span data-ttu-id="0c375-569">目前 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-569">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-570">原始 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-570">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-571">狀態 =\<變更 ></span><span class="sxs-lookup"><span data-stu-id="0c375-571">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="0c375-572">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="0c375-572">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="0c375-573">目前 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-573">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-574">原始 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-574">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-575">狀態 =\<變更 ></span><span class="sxs-lookup"><span data-stu-id="0c375-575">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="0c375-576">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="0c375-576">RowAction = ChangeCurrentAndOriginal</span></span>|  
  
 <span data-ttu-id="0c375-577">中的值<xref:System.Data.DataColumn>可以透過使用屬性這類限制<xref:System.Data.DataColumn.ReadOnly%2A>和<xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="0c375-577">Values in a <xref:System.Data.DataColumn> can be constrained through use of properties such as <xref:System.Data.DataColumn.ReadOnly%2A> and <xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="0c375-578">`Load`方法會處理這類資料行與資料行的屬性所定義的行為一致的方式。</span><span class="sxs-lookup"><span data-stu-id="0c375-578">The `Load` method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</span></span> <span data-ttu-id="0c375-579">讀取的唯一條件約束上<xref:System.Data.DataColumn>只適用於記憶體中發生的變更。</span><span class="sxs-lookup"><span data-stu-id="0c375-579">The read only constraint on a <xref:System.Data.DataColumn> is applicable only for changes that occur in memory.</span></span> <span data-ttu-id="0c375-580">`Load`方法的覆寫唯讀的資料行值，如有需要。</span><span class="sxs-lookup"><span data-stu-id="0c375-580">The `Load` method's overwrites the read-only column values, if needed.</span></span>  
  
 <span data-ttu-id="0c375-581">如果您指定的 OverwriteChanges] 或 [PreserveChanges 選項呼叫時`Load`方法，則假設由內送資料來自`DataTable`的主要資料來源和資料表追蹤變更，並可以傳播將變更傳回資料來源。</span><span class="sxs-lookup"><span data-stu-id="0c375-581">If you specify the OverwriteChanges or PreserveChanges options when calling the `Load` method, then the assumption is made that the incoming data is coming from the `DataTable`'s primary data source, and the DataTable tracks changes and can propagate the changes back to the data source.</span></span> <span data-ttu-id="0c375-582">如果您選取 [插入] 選項，則會假設資料來自其中一個次要資料來源，例如中介層元件，可能是更改由使用者所提供的資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-582">If you select the Upsert option, it is assumed that the data is coming from one of a secondary data source, such as data provided by a middle-tier component, perhaps altered by a user.</span></span> <span data-ttu-id="0c375-583">在此案例中，假設是，目的是要彙總資料中的一或多個資料來源從`DataTable`，並可能傳播回到主要資料來源的資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-583">In this case, the assumption is that the intent is to aggregate data from one or more data sources in the `DataTable`, and then perhaps propagate the data back to the primary data source.</span></span> <span data-ttu-id="0c375-584"><xref:System.Data.LoadOption>參數用來決定要用於主索引鍵比較的資料列的特定版本。</span><span class="sxs-lookup"><span data-stu-id="0c375-584">The <xref:System.Data.LoadOption> parameter is used for determining the specific version of the row that is to be used for primary key comparison.</span></span> <span data-ttu-id="0c375-585">下表提供詳細資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-585">The table below provides the details.</span></span>  
  
|<span data-ttu-id="0c375-586">載入選項</span><span class="sxs-lookup"><span data-stu-id="0c375-586">Load option</span></span>|<span data-ttu-id="0c375-587">用於主索引鍵比較的 DataRow version</span><span class="sxs-lookup"><span data-stu-id="0c375-587">DataRow version used for primary key comparison</span></span>|  
|-----------------|-----------------------------------------------------|  
|`OverwriteChanges`|<span data-ttu-id="0c375-588">原始版本 （若有的話），否則為目前的版本</span><span class="sxs-lookup"><span data-stu-id="0c375-588">Original version, if it exists, otherwise Current version</span></span>|  
|`PreserveChanges`|<span data-ttu-id="0c375-589">原始版本 （若有的話），否則為目前的版本</span><span class="sxs-lookup"><span data-stu-id="0c375-589">Original version, if it exists, otherwise Current version</span></span>|  
|`Upsert`|<span data-ttu-id="0c375-590">目前的版本 （若有的話），否則原始版本</span><span class="sxs-lookup"><span data-stu-id="0c375-590">Current version, if it exists, otherwise Original version</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="0c375-591">下列範例示範數個相關事宜呼叫<xref:System.Data.DataTable.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-591">The following example demonstrates several of the issues involved with calling the <xref:System.Data.DataTable.Load%2A> method.</span></span> <span data-ttu-id="0c375-592">此範例著重於結構描述問題，包括 推斷的結構描述，從載入的第一， <xref:System.Data.IDataReader>，和不相容的結構描述，以及具有遺失或其他資料行的結構描述，接著處理。</span><span class="sxs-lookup"><span data-stu-id="0c375-592">First, the example focuses on schema issues, including inferring a schema from the loaded <xref:System.Data.IDataReader>, and then handling incompatible schemas, and schemas with missing or additional columns.</span></span> <span data-ttu-id="0c375-593">此範例接著專注在資料問題，包括處理各種不同的載入選項。</span><span class="sxs-lookup"><span data-stu-id="0c375-593">The example then focuses on data issues, including handling the various loading options.</span></span>  
  
 [!code-csharp[DataWorks DataTableLoad.LoadOption#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableLoad.LoadOption/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableLoad.LoadOption#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableLoad.LoadOption/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load (System.Data.IDataReader reader, System.Data.LoadOption loadOption, System.Data.FillErrorEventHandler errorHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.Data.IDataReader reader, valuetype System.Data.LoadOption loadOption, class System.Data.FillErrorEventHandler errorHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load(System::Data::IDataReader ^ reader, System::Data::LoadOption loadOption, System::Data::FillErrorEventHandler ^ errorHandler);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Data.IDataReader * System.Data.LoadOption * System.Data.FillErrorEventHandler -&gt; unit&#xA;override this.Load : System.Data.IDataReader * System.Data.LoadOption * System.Data.FillErrorEventHandler -&gt; unit" Usage="dataTable.Load (reader, loadOption, errorHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" />
        <Parameter Name="loadOption" Type="System.Data.LoadOption" />
        <Parameter Name="errorHandler" Type="System.Data.FillErrorEventHandler" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="0c375-594">
            <see cref="T:System.Data.IDataReader" />，提供結果集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-594">A <see cref="T:System.Data.IDataReader" /> that provides a result set.</span>
          </span>
        </param>
        <param name="loadOption">
          <span data-ttu-id="0c375-595">來自 <see cref="T:System.Data.LoadOption" /> 列舉的值，指出已經在 <see cref="T:System.Data.DataTable" /> 中的資料列如何與共用相同主索引鍵的傳入資料列結合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-595">A value from the <see cref="T:System.Data.LoadOption" /> enumeration that indicates how rows already in the <see cref="T:System.Data.DataTable" /> are combined with incoming rows that share the same primary key.</span>
          </span>
        </param>
        <param name="errorHandler">
          <span data-ttu-id="0c375-596">載入資料時發生錯誤，要呼叫的 <see cref="T:System.Data.FillErrorEventHandler" /> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-596">A <see cref="T:System.Data.FillErrorEventHandler" /> delegate to call when an error occurs while loading data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-597">使用所提供的 <see cref="T:System.Data.DataTable" />，以資料來源的值填滿 <see cref="T:System.Data.IDataReader" />，使用錯誤處理委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-597">Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" /> using an error-handling delegate.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-598">`Load`方法會取用第一個結果集從載入<xref:System.Data.IDataReader>，並順利完成之後，讀取器的位置設下一個結果集，如果有的話。</span><span class="sxs-lookup"><span data-stu-id="0c375-598">The `Load` method consumes the first result set from the loaded <xref:System.Data.IDataReader>, and after successful completion, sets the reader's position to the next result set, if any.</span></span> <span data-ttu-id="0c375-599">將資料，轉換時`Load`方法會使用相同的轉換規則<xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-599">When converting data, the `Load` method uses the same conversion rules as the <xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="0c375-600">`Load`方法必須考慮到三個特定的問題時將資料從載入<xref:System.Data.IDataReader>執行個體： 結構描述、 資料和事件的作業。</span><span class="sxs-lookup"><span data-stu-id="0c375-600">The `Load` method must take into account three specific issues when loading the data from an <xref:System.Data.IDataReader> instance: schema, data, and event operations.</span></span> <span data-ttu-id="0c375-601">使用結構描述時`Load`方法可能會遇到的條件下, 表中所述。</span><span class="sxs-lookup"><span data-stu-id="0c375-601">When working with the schema, the `Load` method may encounter conditions as described in the following table.</span></span> <span data-ttu-id="0c375-602">結構描述作業進行的所有匯入的結果集，即使沒有包含資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-602">The schema operations take place for all imported result sets, even those containing no data.</span></span>  
  
|<span data-ttu-id="0c375-603">條件</span><span class="sxs-lookup"><span data-stu-id="0c375-603">Condition</span></span>|<span data-ttu-id="0c375-604">行為</span><span class="sxs-lookup"><span data-stu-id="0c375-604">Behavior</span></span>|  
|---------------|--------------|  
|<span data-ttu-id="0c375-605"><xref:System.Data.DataTable>沒有結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-605">The <xref:System.Data.DataTable> has no schema.</span></span>|<span data-ttu-id="0c375-606">`Load`方法會根據來自匯入的結果集的結構描述推測出<xref:System.Data.IDataReader>。</span><span class="sxs-lookup"><span data-stu-id="0c375-606">The `Load` method infers the schema based on the result set from the imported <xref:System.Data.IDataReader>.</span></span>|  
|<span data-ttu-id="0c375-607"><xref:System.Data.DataTable>有結構描述，但它與載入結構描述不相容。</span><span class="sxs-lookup"><span data-stu-id="0c375-607">The <xref:System.Data.DataTable> has a schema, but it is incompatible with the loaded schema.</span></span>|<span data-ttu-id="0c375-608">`Load`方法會擲回的例外狀況對應到當您嘗試載入不相容的結構描述中的資料時，就會發生的特定錯誤。</span><span class="sxs-lookup"><span data-stu-id="0c375-608">The `Load` method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</span></span>|  
|<span data-ttu-id="0c375-609">結構描述相容，但載入的結果集的結構描述包含不存在於中的資料行`DataTable`。</span><span class="sxs-lookup"><span data-stu-id="0c375-609">The schemas are compatible, but the loaded result set schema contains columns that don't exist in the `DataTable`.</span></span>|<span data-ttu-id="0c375-610">`Load`方法會加入額外的資料行至`DataTable`的結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-610">The `Load` method adds the extra column(s) to `DataTable`’s schema.</span></span> <span data-ttu-id="0c375-611">方法擲回例外狀況，如果對應中的資料行<xref:System.Data.DataTable>和載入的結果集不是相容的值。</span><span class="sxs-lookup"><span data-stu-id="0c375-611">The method throws an exception if corresponding columns in the <xref:System.Data.DataTable> and the loaded result set are not value compatible.</span></span> <span data-ttu-id="0c375-612">此方法也會擷取從結果集中所有加入的資料行的條件約束資訊。</span><span class="sxs-lookup"><span data-stu-id="0c375-612">The method also retrieves constraint information from the result set for all added columns.</span></span> <span data-ttu-id="0c375-613">除了 Primary Key 條件約束的情況下，只有，會使用此條件約束資訊目前<xref:System.Data.DataTable>不包含任何資料行開頭的載入作業。</span><span class="sxs-lookup"><span data-stu-id="0c375-613">Except for the case of Primary Key constraint, this constraint information is used only if the current <xref:System.Data.DataTable> does not contain any columns at the start of the load operation.</span></span>|  
|<span data-ttu-id="0c375-614">結構描述相容，但載入的結果集的結構描述包含較少的資料行比`DataTable`。</span><span class="sxs-lookup"><span data-stu-id="0c375-614">The schemas are compatible, but the loaded result set schema contains fewer columns than does the `DataTable`.</span></span>|<span data-ttu-id="0c375-615">如果遺漏的資料行已定義了預設值或資料行的資料類型可為 null，`Load`方法可讓資料列加入，以取代遺失的資料行的預設值或 null 值。</span><span class="sxs-lookup"><span data-stu-id="0c375-615">If a missing column has a default value defined or the column's data type is nullable, the `Load` method allows the rows to be added, substituting the default or null value for the missing column.</span></span> <span data-ttu-id="0c375-616">如果可以使用沒有預設值或 null，則`Load`方法會擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0c375-616">If no default value or null can be used, then the `Load` method throws an exception.</span></span> <span data-ttu-id="0c375-617">如果未不提供任何特定的預設值，`Load`方法的 null 值做為隱含的預設值。</span><span class="sxs-lookup"><span data-stu-id="0c375-617">If no specific default value has been supplied, the `Load` method uses the null value as the implied default value.</span></span>|  
  
 <span data-ttu-id="0c375-618">考慮的行為之前，先`Load`方面的資料作業的方法，請考慮，每個資料列內<xref:System.Data.DataTable>會維護目前的值和每個資料行的原始值。</span><span class="sxs-lookup"><span data-stu-id="0c375-618">Before considering the behavior of the `Load` method in terms of data operations, consider that each row within a <xref:System.Data.DataTable> maintains both the current value and the original value for each column.</span></span> <span data-ttu-id="0c375-619">這些值可能是同等權限，或如果自填滿之後已變更的資料列中的資料可能會不同`DataTable`。</span><span class="sxs-lookup"><span data-stu-id="0c375-619">These values may be equivalent, or may be different if the data in the row has been changed since filling the `DataTable`.</span></span> <span data-ttu-id="0c375-620">請參閱[資料列狀態和資料列版本](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="0c375-620">See [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md) for more information.</span></span>  
  
 <span data-ttu-id="0c375-621">在此方法呼叫中，指定<xref:System.Data.LoadOption>參數會影響處理內送資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-621">In this method call, the specified <xref:System.Data.LoadOption> parameter influences the processing of the incoming data.</span></span> <span data-ttu-id="0c375-622">Load 方法應如何處理具有相同主索引鍵，為現有的資料列載入資料列？</span><span class="sxs-lookup"><span data-stu-id="0c375-622">How should the Load method handle loading rows that have the same primary key as existing rows?</span></span> <span data-ttu-id="0c375-623">它應該修改目前的值、 原始值，或兩者？</span><span class="sxs-lookup"><span data-stu-id="0c375-623">Should it modify current values, original values, or both?</span></span> <span data-ttu-id="0c375-624">這些問題及其他項目，由控制`loadOption`參數。</span><span class="sxs-lookup"><span data-stu-id="0c375-624">These issues, and more, are controlled by the `loadOption` parameter.</span></span>  
  
 <span data-ttu-id="0c375-625">如果現有的資料列和內送資料列包含對應的主索引鍵值，使用其目前的資料列狀態值來處理資料列，否則它會被視為新的資料列。</span><span class="sxs-lookup"><span data-stu-id="0c375-625">If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</span></span>  
  
 <span data-ttu-id="0c375-626">事件作業方面<xref:System.Data.DataTable.RowChanging>才會變更每個資料列，就會發生事件而<xref:System.Data.DataTable.RowChanged>變更每個資料列之後，就會發生事件。</span><span class="sxs-lookup"><span data-stu-id="0c375-626">In terms of event operations, the <xref:System.Data.DataTable.RowChanging> event occurs before each row is changed, and the <xref:System.Data.DataTable.RowChanged> event occurs after each row has been changed.</span></span> <span data-ttu-id="0c375-627">在每個案例中，<xref:System.Data.DataRowChangeEventArgs.Action%2A>屬性<xref:System.Data.DataRowChangeEventArgs>傳遞至事件處理常式的執行個體包含與事件相關聯的特定動作的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="0c375-627">In each case, the <xref:System.Data.DataRowChangeEventArgs.Action%2A> property of the <xref:System.Data.DataRowChangeEventArgs> instance passed to the event handler contains information about the particular action associated with the event.</span></span> <span data-ttu-id="0c375-628">此動作的值會因載入作業前的資料列的狀態而有所不同。</span><span class="sxs-lookup"><span data-stu-id="0c375-628">This action value varies, depending on the state of the row before the load operation.</span></span> <span data-ttu-id="0c375-629">在每個案例中，這兩個事件發生，而且動作是針對每個相同。</span><span class="sxs-lookup"><span data-stu-id="0c375-629">In each case, both events occur, and the action is the same for each.</span></span> <span data-ttu-id="0c375-630">動作可套用到每個資料列，目前或原始版本，或兩者，根據目前的資料列狀態。</span><span class="sxs-lookup"><span data-stu-id="0c375-630">The action may be applied to either the current or original version of each row, or both, depending on the current row state.</span></span>  
  
 <span data-ttu-id="0c375-631">下表顯示與每個呼叫時，Load 方法的行為`LoadOption`值，然後也會顯示這些值所載入的資料列的資料列狀態的互動。</span><span class="sxs-lookup"><span data-stu-id="0c375-631">The following table displays behavior for the Load method when called with each of the `LoadOption` values, and also shows how the values interact with the row state for the row being loaded.</span></span> <span data-ttu-id="0c375-632">（標示為"（不會出現） 」） 的最後一個資料列描述不符合任何現有的資料列的內送資料列的行為。</span><span class="sxs-lookup"><span data-stu-id="0c375-632">The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</span></span> <span data-ttu-id="0c375-633">此資料表中的每個資料格會描述資料列中欄位的目前和原始值連同<xref:System.Data.DataRowState>後的值為`Load`方法完成。</span><span class="sxs-lookup"><span data-stu-id="0c375-633">Each cell in this table describes the current and original value for a field within a row, along with the <xref:System.Data.DataRowState> for the value after the `Load` method has completed.</span></span>  
  
|<span data-ttu-id="0c375-634">現有 DataRowState</span><span class="sxs-lookup"><span data-stu-id="0c375-634">Existing DataRowState</span></span>|<span data-ttu-id="0c375-635">更新插入</span><span class="sxs-lookup"><span data-stu-id="0c375-635">Upsert</span></span>|<span data-ttu-id="0c375-636">OverwriteChanges</span><span class="sxs-lookup"><span data-stu-id="0c375-636">OverwriteChanges</span></span>|<span data-ttu-id="0c375-637">PreserveChanges （預設行為）</span><span class="sxs-lookup"><span data-stu-id="0c375-637">PreserveChanges (Default behavior)</span></span>|  
|---------------------------|------------|----------------------|------------------------------------------|  
|<span data-ttu-id="0c375-638">已加入</span><span class="sxs-lookup"><span data-stu-id="0c375-638">Added</span></span>|<span data-ttu-id="0c375-639">目前 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-639">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-640">原始 =-\<無法使用 ></span><span class="sxs-lookup"><span data-stu-id="0c375-640">Original = -\<Not available></span></span><br /><br /> <span data-ttu-id="0c375-641">狀態 =\<加入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-641">State = \<Added></span></span><br /><br /> <span data-ttu-id="0c375-642">RowAction = 變更</span><span class="sxs-lookup"><span data-stu-id="0c375-642">RowAction = Change</span></span>|<span data-ttu-id="0c375-643">目前 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-643">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-644">原始 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-644">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-645">狀態 =\<變更 ></span><span class="sxs-lookup"><span data-stu-id="0c375-645">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="0c375-646">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="0c375-646">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="0c375-647">目前 =\<現有 ></span><span class="sxs-lookup"><span data-stu-id="0c375-647">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="0c375-648">原始 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-648">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-649">狀態 =\<修改 ></span><span class="sxs-lookup"><span data-stu-id="0c375-649">State = \<Modified></span></span><br /><br /> <span data-ttu-id="0c375-650">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="0c375-650">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="0c375-651">修改時間</span><span class="sxs-lookup"><span data-stu-id="0c375-651">Modified</span></span>|<span data-ttu-id="0c375-652">目前 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-652">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-653">原始 =\<現有 ></span><span class="sxs-lookup"><span data-stu-id="0c375-653">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="0c375-654">狀態 =\<修改 ></span><span class="sxs-lookup"><span data-stu-id="0c375-654">State = \<Modified></span></span><br /><br /> <span data-ttu-id="0c375-655">RowAction = 變更</span><span class="sxs-lookup"><span data-stu-id="0c375-655">RowAction = Change</span></span>|<span data-ttu-id="0c375-656">目前 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-656">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-657">原始 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-657">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-658">狀態 =\<變更 ></span><span class="sxs-lookup"><span data-stu-id="0c375-658">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="0c375-659">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="0c375-659">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="0c375-660">目前 =\<現有 ></span><span class="sxs-lookup"><span data-stu-id="0c375-660">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="0c375-661">原始 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-661">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-662">狀態 =\<修改 ></span><span class="sxs-lookup"><span data-stu-id="0c375-662">State = \<Modified></span></span><br /><br /> <span data-ttu-id="0c375-663">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="0c375-663">RowAction =ChangeOriginal</span></span>|  
<span data-ttu-id="0c375-664">eleted</span><span class="sxs-lookup"><span data-stu-id="0c375-664">eleted</span></span>|<span data-ttu-id="0c375-665">（負載運作不會影響已刪除的資料列）</span><span class="sxs-lookup"><span data-stu-id="0c375-665">(Load does not affect deleted rows)</span></span><br /><br /> <span data-ttu-id="0c375-666">目前 =---美元</span><span class="sxs-lookup"><span data-stu-id="0c375-666">Current = ---</span></span><br /><br /> <span data-ttu-id="0c375-667">原始 =\<現有 ></span><span class="sxs-lookup"><span data-stu-id="0c375-667">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="0c375-668">狀態 =\<刪除 ></span><span class="sxs-lookup"><span data-stu-id="0c375-668">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="0c375-669">（新的資料列會加入具有下列特性）</span><span class="sxs-lookup"><span data-stu-id="0c375-669">(New row is added with the following characteristics)</span></span><br /><br /> <span data-ttu-id="0c375-670">目前 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-670">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-671">原始 =\<無法使用 ></span><span class="sxs-lookup"><span data-stu-id="0c375-671">Original = \<Not available></span></span><br /><br /> <span data-ttu-id="0c375-672">狀態 =\<加入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-672">State = \<Added></span></span><br /><br /> <span data-ttu-id="0c375-673">RowAction = 新增</span><span class="sxs-lookup"><span data-stu-id="0c375-673">RowAction = Add</span></span>|<span data-ttu-id="0c375-674">復原刪除和</span><span class="sxs-lookup"><span data-stu-id="0c375-674">Undo delete and</span></span><br /><br /> <span data-ttu-id="0c375-675">目前 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-675">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-676">原始 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-676">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-677">狀態 =\<變更 ></span><span class="sxs-lookup"><span data-stu-id="0c375-677">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="0c375-678">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="0c375-678">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="0c375-679">目前 =\<無法使用 ></span><span class="sxs-lookup"><span data-stu-id="0c375-679">Current = \<Not available></span></span><br /><br /> <span data-ttu-id="0c375-680">原始 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-680">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-681">狀態 =\<刪除 ></span><span class="sxs-lookup"><span data-stu-id="0c375-681">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="0c375-682">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="0c375-682">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="0c375-683">Unchanged</span><span class="sxs-lookup"><span data-stu-id="0c375-683">Unchanged</span></span>|<span data-ttu-id="0c375-684">目前 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-684">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-685">原始 =\<現有 ></span><span class="sxs-lookup"><span data-stu-id="0c375-685">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="0c375-686">如果新的值是與現有的值相同則</span><span class="sxs-lookup"><span data-stu-id="0c375-686">If new value is the same as the existing value then</span></span><br /><br /> <span data-ttu-id="0c375-687">狀態 =\<變更 ></span><span class="sxs-lookup"><span data-stu-id="0c375-687">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="0c375-688">RowAction = Nothing</span><span class="sxs-lookup"><span data-stu-id="0c375-688">RowAction = Nothing</span></span><br /><br /> <span data-ttu-id="0c375-689">Else</span><span class="sxs-lookup"><span data-stu-id="0c375-689">Else</span></span><br /><br /> <span data-ttu-id="0c375-690">狀態 =\<修改 ></span><span class="sxs-lookup"><span data-stu-id="0c375-690">State = \<Modified></span></span><br /><br /> <span data-ttu-id="0c375-691">RowAction = 變更</span><span class="sxs-lookup"><span data-stu-id="0c375-691">RowAction = Change</span></span>|<span data-ttu-id="0c375-692">目前 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-692">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-693">原始 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-693">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-694">狀態 =\<變更 ></span><span class="sxs-lookup"><span data-stu-id="0c375-694">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="0c375-695">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="0c375-695">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="0c375-696">目前 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-696">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-697">原始 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-697">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-698">狀態 =\<變更 ></span><span class="sxs-lookup"><span data-stu-id="0c375-698">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="0c375-699">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="0c375-699">RowAction = ChangeCurrentAndOriginal</span></span>|  
<span data-ttu-id="0c375-700">不會出現）</span><span class="sxs-lookup"><span data-stu-id="0c375-700">Not present)</span></span>|<span data-ttu-id="0c375-701">目前 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-701">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-702">原始 =\<無法使用 ></span><span class="sxs-lookup"><span data-stu-id="0c375-702">Original = \<Not available></span></span><br /><br /> <span data-ttu-id="0c375-703">狀態 =\<加入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-703">State = \<Added></span></span><br /><br /> <span data-ttu-id="0c375-704">RowAction = 新增</span><span class="sxs-lookup"><span data-stu-id="0c375-704">RowAction = Add</span></span>|<span data-ttu-id="0c375-705">目前 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-705">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-706">原始 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-706">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-707">狀態 =\<變更 ></span><span class="sxs-lookup"><span data-stu-id="0c375-707">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="0c375-708">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="0c375-708">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="0c375-709">目前 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-709">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-710">原始 =\<連入 ></span><span class="sxs-lookup"><span data-stu-id="0c375-710">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="0c375-711">狀態 =\<變更 ></span><span class="sxs-lookup"><span data-stu-id="0c375-711">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="0c375-712">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="0c375-712">RowAction = ChangeCurrentAndOriginal</span></span>|  
  
 <span data-ttu-id="0c375-713">中的值<xref:System.Data.DataColumn>可以透過使用屬性這類限制<xref:System.Data.DataColumn.ReadOnly%2A>和<xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="0c375-713">Values in a <xref:System.Data.DataColumn> can be constrained through use of properties such as <xref:System.Data.DataColumn.ReadOnly%2A> and <xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="0c375-714">`Load`方法會處理這類資料行與資料行的屬性所定義的行為一致的方式。</span><span class="sxs-lookup"><span data-stu-id="0c375-714">The `Load` method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</span></span> <span data-ttu-id="0c375-715">讀取的唯一條件約束上<xref:System.Data.DataColumn>只適用於記憶體中發生的變更。</span><span class="sxs-lookup"><span data-stu-id="0c375-715">The read only constraint on a <xref:System.Data.DataColumn> is applicable only for changes that occur in memory.</span></span> <span data-ttu-id="0c375-716">`Load`方法的覆寫唯讀的資料行值，如有需要。</span><span class="sxs-lookup"><span data-stu-id="0c375-716">The `Load` method's overwrites the read-only column values, if needed.</span></span>  
  
 <span data-ttu-id="0c375-717">如果您指定的 OverwriteChanges] 或 [PreserveChanges 選項呼叫時`Load`方法，則假設由內送資料來自`DataTable`的主要資料來源和資料表追蹤變更，並可以傳播將變更傳回資料來源。</span><span class="sxs-lookup"><span data-stu-id="0c375-717">If you specify the OverwriteChanges or PreserveChanges options when calling the `Load` method, then the assumption is made that the incoming data is coming from the `DataTable`'s primary data source, and the DataTable tracks changes and can propagate the changes back to the data source.</span></span> <span data-ttu-id="0c375-718">如果您選取 [插入] 選項，則會假設資料來自其中一個次要資料來源，例如中介層元件，可能是更改由使用者所提供的資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-718">If you select the Upsert option, it is assumed that the data is coming from one of a secondary data source, such as data provided by a middle-tier component, perhaps altered by a user.</span></span> <span data-ttu-id="0c375-719">在此案例中，假設是，目的是要彙總資料中的一或多個資料來源從`DataTable`，並可能傳播回到主要資料來源的資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-719">In this case, the assumption is that the intent is to aggregate data from one or more data sources in the `DataTable`, and then perhaps propagate the data back to the primary data source.</span></span> <span data-ttu-id="0c375-720"><xref:System.Data.LoadOption>參數用來決定要用於主索引鍵比較的資料列的特定版本。</span><span class="sxs-lookup"><span data-stu-id="0c375-720">The <xref:System.Data.LoadOption> parameter is used for determining the specific version of the row that is to be used for primary key comparison.</span></span> <span data-ttu-id="0c375-721">下表提供詳細資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-721">The table below provides the details.</span></span>  
  
|<span data-ttu-id="0c375-722">載入選項</span><span class="sxs-lookup"><span data-stu-id="0c375-722">Load option</span></span>|<span data-ttu-id="0c375-723">用於主索引鍵比較的 DataRow version</span><span class="sxs-lookup"><span data-stu-id="0c375-723">DataRow version used for primary key comparison</span></span>|  
|-----------------|-----------------------------------------------------|  
|`OverwriteChanges`|<span data-ttu-id="0c375-724">原始版本 （若有的話），否則為目前的版本</span><span class="sxs-lookup"><span data-stu-id="0c375-724">Original version, if it exists, otherwise Current version</span></span>|  
|`PreserveChanges`|<span data-ttu-id="0c375-725">原始版本 （若有的話），否則為目前的版本</span><span class="sxs-lookup"><span data-stu-id="0c375-725">Original version, if it exists, otherwise Current version</span></span>|  
|`Upsert`|<span data-ttu-id="0c375-726">目前的版本 （若有的話），否則原始版本</span><span class="sxs-lookup"><span data-stu-id="0c375-726">Current version, if it exists, otherwise Original version</span></span>|  
  
 <span data-ttu-id="0c375-727">`errorHandler`參數是<xref:System.Data.FillErrorEventHandler>指的在載入資料時，發生錯誤時所呼叫的程序的委派。</span><span class="sxs-lookup"><span data-stu-id="0c375-727">The `errorHandler` parameter is a <xref:System.Data.FillErrorEventHandler> delegate that refers to a procedure that is called when an error occurs while loading data.</span></span> <span data-ttu-id="0c375-728"><xref:System.Data.FillErrorEventArgs>傳遞至程序的參數提供屬性，可讓您擷取資訊所發生的錯誤，目前的資料列的資料，而<xref:System.Data.DataTable>被填入。</span><span class="sxs-lookup"><span data-stu-id="0c375-728">The <xref:System.Data.FillErrorEventArgs> parameter passed to the procedure provides properties that allow you to retrieve information about the error that occurred, the current row of data, and the <xref:System.Data.DataTable> being filled.</span></span> <span data-ttu-id="0c375-729">使用此委派的機制，而不是更簡單的 try/catch 區塊，可讓您判斷錯誤處理狀況，並繼續處理，如果您想。</span><span class="sxs-lookup"><span data-stu-id="0c375-729">Using this delegate mechanism, rather than a simpler try/catch block, allows you to determine the error, handle the situation, and continue processing if you like.</span></span> <span data-ttu-id="0c375-730"><xref:System.Data.FillErrorEventArgs>參數提供<xref:System.Data.FillErrorEventArgs.Continue%2A>屬性： 將此屬性設定為`true`表示您有處理錯誤，而且想要繼續處理。</span><span class="sxs-lookup"><span data-stu-id="0c375-730">The <xref:System.Data.FillErrorEventArgs> parameter supplies a <xref:System.Data.FillErrorEventArgs.Continue%2A> property: set this property to `true` to indicate that you have handled the error and wish to continue processing.</span></span> <span data-ttu-id="0c375-731">將屬性設定為`false`來代表您想要停止處理。</span><span class="sxs-lookup"><span data-stu-id="0c375-731">Set the property to `false` to indicate that you wish to halt processing.</span></span> <span data-ttu-id="0c375-732">請注意，將屬性設定為`false`造成觸發要擲回例外狀況的問題程式碼。</span><span class="sxs-lookup"><span data-stu-id="0c375-732">Be aware that setting the property to `false` causes the code that triggered the problem to throw an exception.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DataWorks DataTableLoad.ErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableLoad.ErrorEventHandler/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableLoad.ErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableLoad.ErrorEventHandler/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadDataRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-733">尋找並更新特定資料列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-733">Finds and updates a specific row.</span>
          </span>
          <span data-ttu-id="0c375-734">如果找不到符合的資料列，則使用指定值來建立新的資料列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-734">If no matching row is found, a new row is created using the given values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadDataRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow LoadDataRow (object[] values, bool fAcceptChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow LoadDataRow(object[] values, bool fAcceptChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadDataRow (values As Object(), fAcceptChanges As Boolean) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ LoadDataRow(cli::array &lt;System::Object ^&gt; ^ values, bool fAcceptChanges);" />
      <MemberSignature Language="F#" Value="member this.LoadDataRow : obj[] * bool -&gt; System.Data.DataRow" Usage="dataTable.LoadDataRow (values, fAcceptChanges)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
        <Parameter Name="fAcceptChanges" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="0c375-735">用來建立新資料列的值陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-735">An array of values used to create the new row.</span>
          </span>
        </param>
        <param name="fAcceptChanges">
          <span data-ttu-id="0c375-736">若要接受變更，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-736">
              <see langword="true" /> to accept changes; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-737">尋找並更新特定資料列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-737">Finds and updates a specific row.</span>
          </span>
          <span data-ttu-id="0c375-738">如果找不到符合的資料列，則使用指定值來建立新的資料列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-738">If no matching row is found, a new row is created using the given values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c375-739">新的 <see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-739">The new <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-740"><xref:System.Data.DataTable.LoadDataRow%2A>方法會採用值的陣列，並在 主索引鍵資料行中尋找相符的值。</span><span class="sxs-lookup"><span data-stu-id="0c375-740">The <xref:System.Data.DataTable.LoadDataRow%2A> method takes an array of values and finds the matching value(s) in the primary key column(s).</span></span>  
  
 <span data-ttu-id="0c375-741">如果資料行有預設值，請在要設定該資料行的預設值的陣列傳遞 null 值。</span><span class="sxs-lookup"><span data-stu-id="0c375-741">If a column has a default value, pass a null value in the array to set the default value for that column.</span></span> <span data-ttu-id="0c375-742">同樣地，如果資料行有其<xref:System.Data.DataColumn.AutoIncrement%2A>屬性設定為 true，則傳遞 null 值的陣列中要設定自動產生資料列的值。</span><span class="sxs-lookup"><span data-stu-id="0c375-742">Similarly, if a column has its <xref:System.Data.DataColumn.AutoIncrement%2A> property set to true, pass a null value in the array to set the automatically generated value for the row.</span></span>  
  
 <span data-ttu-id="0c375-743">如果`fAcceptChanges`參數是`true`或未指定，則會新增新的資料，然後<xref:System.Data.DataTable.AcceptChanges%2A>呼叫以接受中的所有變更<xref:System.Data.DataTable>; 如果引數是`false`，新加入的資料列會標示為插入和變更現有的資料列會標示為修改。</span><span class="sxs-lookup"><span data-stu-id="0c375-743">If the `fAcceptChanges` parameter is `true` or not specified, the new data is added and then <xref:System.Data.DataTable.AcceptChanges%2A> is called to accept all changes in the <xref:System.Data.DataTable>; if the argument is `false`, newly added rows are marked as insertions, and changes to existing rows are marked as modifications.</span></span>  
  
 <span data-ttu-id="0c375-744">期間也會發生例外狀況<xref:System.Data.DataTable.ColumnChanging>或<xref:System.Data.DataTable.RowChanging>事件。</span><span class="sxs-lookup"><span data-stu-id="0c375-744">Exceptions can also occur during either a <xref:System.Data.DataTable.ColumnChanging> or <xref:System.Data.DataTable.RowChanging> event.</span></span> <span data-ttu-id="0c375-745">如果發生例外狀況，資料列不會加入至資料表。</span><span class="sxs-lookup"><span data-stu-id="0c375-745">If an exception occurs, the row is not added to the table.</span></span>  
  
 <span data-ttu-id="0c375-746">使用<xref:System.Data.DataTable.LoadDataRow%2A>配合<xref:System.Data.DataTable.BeginLoadData%2A>和<xref:System.Data.DataTable.EndLoadData%2A>。</span><span class="sxs-lookup"><span data-stu-id="0c375-746">Use <xref:System.Data.DataTable.LoadDataRow%2A> in conjunction with <xref:System.Data.DataTable.BeginLoadData%2A> and <xref:System.Data.DataTable.EndLoadData%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-747">下列範例會使用<xref:System.Data.DataTable.LoadDataRow%2A>方法，以嘗試尋找一個資料列。</span><span class="sxs-lookup"><span data-stu-id="0c375-747">The following example uses the <xref:System.Data.DataTable.LoadDataRow%2A> method to attempt to find a row.</span></span> <span data-ttu-id="0c375-748">如果找到這類的資料列，則值會用來建立新的資料列。</span><span class="sxs-lookup"><span data-stu-id="0c375-748">If no such row is found, the values are used to create a new row.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.LoadDataRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.LoadDataRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.LoadDataRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.LoadDataRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0c375-749">陣列大於資料表中的資料行數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-749">The array is larger than the number of columns in the table.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0c375-750">數值不符合其個別的資料行型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-750">A value doesn't match its respective column type.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.ConstraintException">
          <span data-ttu-id="0c375-751">加入資料列會使條件約束失效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-751">Adding the row invalidates a constraint.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.NoNullAllowedException">
          <span data-ttu-id="0c375-752">嘗試將 Null 置於 <see cref="P:System.Data.DataColumn.AllowDBNull" /> 為 False 的資料行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-752">Attempting to put a null in a column where <see cref="P:System.Data.DataColumn.AllowDBNull" /> is false.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LoadDataRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow LoadDataRow (object[] values, System.Data.LoadOption loadOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow LoadDataRow(object[] values, valuetype System.Data.LoadOption loadOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ LoadDataRow(cli::array &lt;System::Object ^&gt; ^ values, System::Data::LoadOption loadOption);" />
      <MemberSignature Language="F#" Value="member this.LoadDataRow : obj[] * System.Data.LoadOption -&gt; System.Data.DataRow" Usage="dataTable.LoadDataRow (values, loadOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
        <Parameter Name="loadOption" Type="System.Data.LoadOption" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="0c375-753">用來建立新資料列的值陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-753">An array of values used to create the new row.</span>
          </span>
        </param>
        <param name="loadOption">
          <span data-ttu-id="0c375-754">用來判斷陣列值如何套用至現有資料列中對應的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-754">Used to determine how the array values are applied to the corresponding values in an existing row.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-755">尋找並更新特定資料列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-755">Finds and updates a specific row.</span>
          </span>
          <span data-ttu-id="0c375-756">如果找不到符合的資料列，則使用指定值來建立新的資料列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-756">If no matching row is found, a new row is created using the given values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c375-757">新的 <see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-757">The new <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-758"><xref:System.Data.DataTable.LoadDataRow%2A>方法會採用值的陣列，並在 主索引鍵資料行中尋找相符的值。</span><span class="sxs-lookup"><span data-stu-id="0c375-758">The <xref:System.Data.DataTable.LoadDataRow%2A> method takes an array of values and finds the matching value(s) in the primary key column(s).</span></span>  
  
 <span data-ttu-id="0c375-759">如果資料行有預設值，請在要設定該資料行的預設值的陣列傳遞 null 值。</span><span class="sxs-lookup"><span data-stu-id="0c375-759">If a column has a default value, pass a null value in the array to set the default value for that column.</span></span> <span data-ttu-id="0c375-760">同樣地，如果資料行有其<xref:System.Data.DataColumn.AutoIncrement%2A>屬性設定為 true，則傳遞 null 值的陣列中要設定自動產生資料列的值。</span><span class="sxs-lookup"><span data-stu-id="0c375-760">Similarly, if a column has its <xref:System.Data.DataColumn.AutoIncrement%2A> property set to true, pass a null value in the array to set the automatically generated value for the row.</span></span>  
  
 <span data-ttu-id="0c375-761">值`loadOption`參數用來判斷陣列中的值套用至現有的資料列的方式。</span><span class="sxs-lookup"><span data-stu-id="0c375-761">The value of the `loadOption` parameter is used to determine how the values in the array are applied to an existing row.</span></span> <span data-ttu-id="0c375-762">比方說，如果`loadOption`設定為`OverwriteChanges`，則`Original`並`Current`每個資料行的值會取代傳入的資料列中的值和`RowState`屬性設定為`Unchanged`。</span><span class="sxs-lookup"><span data-stu-id="0c375-762">For example, if `loadOption` is set to `OverwriteChanges`, the `Original` and `Current` values of each column are replaced with the values in the incoming row and the `RowState` property is set to `Unchanged`.</span></span>  
  
 <span data-ttu-id="0c375-763">期間也會發生例外狀況<xref:System.Data.DataTable.ColumnChanging>或<xref:System.Data.DataTable.RowChanging>事件。</span><span class="sxs-lookup"><span data-stu-id="0c375-763">Exceptions can also occur during either a <xref:System.Data.DataTable.ColumnChanging> or <xref:System.Data.DataTable.RowChanging> event.</span></span> <span data-ttu-id="0c375-764">如果發生例外狀況，資料列不會加入至資料表。</span><span class="sxs-lookup"><span data-stu-id="0c375-764">If an exception occurs, the row is not added to the table.</span></span>  
  
 <span data-ttu-id="0c375-765">使用<xref:System.Data.DataTable.LoadDataRow%2A>配合<xref:System.Data.DataTable.BeginLoadData%2A>和<xref:System.Data.DataTable.EndLoadData%2A>。</span><span class="sxs-lookup"><span data-stu-id="0c375-765">Use <xref:System.Data.DataTable.LoadDataRow%2A> in conjunction with <xref:System.Data.DataTable.BeginLoadData%2A> and <xref:System.Data.DataTable.EndLoadData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Locale">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Locale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Locale" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Locale" />
      <MemberSignature Language="VB.NET" Value="Public Property Locale As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Locale { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Locale : System.Globalization.CultureInfo with get, set" Usage="System.Data.DataTable.Locale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableLocaleDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-766">取得或設定用來在資料表中比較字串的地區設定 (Locale) 資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-766">Gets or sets the locale information used to compare strings within the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c375-767">
            <see cref="T:System.Globalization.CultureInfo" />，包含使用者電腦地區設定的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-767">A <see cref="T:System.Globalization.CultureInfo" /> that contains data about the user's machine locale.</span>
          </span>
          <span data-ttu-id="0c375-768">預設值為 <see cref="T:System.Data.DataSet" /> 所屬的 <see cref="T:System.Globalization.CultureInfo" /> 物件的 <see cref="P:System.Data.DataSet.Locale" /> (由 <see cref="T:System.Data.DataTable" /> 屬性傳回)，如果資料表不屬於 <see cref="T:System.Data.DataSet" />，則預設值是目前系統 <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-768">The default is the <see cref="T:System.Data.DataSet" /> object's <see cref="T:System.Globalization.CultureInfo" /> (returned by the <see cref="P:System.Data.DataSet.Locale" /> property) to which the <see cref="T:System.Data.DataTable" /> belongs; if the table doesn't belong to a <see cref="T:System.Data.DataSet" />, the default is the current system <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-769">A<xref:System.Globalization.CultureInfo>代表特定文化特性或社群的軟體喜好設定。</span><span class="sxs-lookup"><span data-stu-id="0c375-769">A <xref:System.Globalization.CultureInfo> represents the software preferences of a particular culture or community.</span></span>  
  
 <span data-ttu-id="0c375-770">用來進行字串比較<xref:System.Globalization.CultureInfo>會影響比較、 排序和篩選。</span><span class="sxs-lookup"><span data-stu-id="0c375-770">When used for string comparisons, the <xref:System.Globalization.CultureInfo> affects sorting, comparisons, and filtering.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-771">資料行中包含的運算式，<xref:System.StringComparison.InvariantCulture>用。</span><span class="sxs-lookup"><span data-stu-id="0c375-771">In columns that contain expressions, the <xref:System.StringComparison.InvariantCulture> is used.</span></span> <span data-ttu-id="0c375-772"><xref:System.StringComparison.CurrentCulture>會被忽略。</span><span class="sxs-lookup"><span data-stu-id="0c375-772">The <xref:System.StringComparison.CurrentCulture> is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-773">下列範例會設定<xref:System.Globalization.CultureInfo>透過<xref:System.Data.DataTable.Locale%2A>並列印 ISO 語言名稱。</span><span class="sxs-lookup"><span data-stu-id="0c375-773">The following example sets the <xref:System.Globalization.CultureInfo> through the <xref:System.Data.DataTable.Locale%2A> and prints the ISO language name.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Locale Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Locale Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Locale Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Locale Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Merge">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-774">將指定的 <see cref="T:System.Data.DataTable" /> 與目前的 <see cref="T:System.Data.DataTable" /> 合併。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-774">Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-775">`Merge`方法用來合併兩個<xref:System.Data.DataTable>有大致相似的結構描述的物件。</span><span class="sxs-lookup"><span data-stu-id="0c375-775">The `Merge` method is used to merge two <xref:System.Data.DataTable> objects that have largely similar schemas.</span></span> <span data-ttu-id="0c375-776">合併用戶端應用程式上通常用來將資料來源的最新的變更合併到現有<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-776">A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="0c375-777">這可讓用戶端應用程式已重新整理<xref:System.Data.DataTable>從資料來源的最新的資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-777">This allows the client application to have a refreshed <xref:System.Data.DataTable> with the latest data from the data source.</span></span>  
  
 <span data-ttu-id="0c375-778">合併作業會納入考量，只有原始資料表，以及要合併的資料表。</span><span class="sxs-lookup"><span data-stu-id="0c375-778">The merge operation takes into account only the original table, and the table to be merged.</span></span> <span data-ttu-id="0c375-779">不會受到影響或包含子資料表。</span><span class="sxs-lookup"><span data-stu-id="0c375-779">Child tables are not affected or included.</span></span> <span data-ttu-id="0c375-780">如果資料表有一或多個定義的關聯性一部分的子資料表必須個別合併子系的每個資料表。</span><span class="sxs-lookup"><span data-stu-id="0c375-780">If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-781">下列主控台應用程式示範的行為`missingSchemaAction`參數<xref:System.Data.DataTable.Merge%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-781">The following console application demonstrates the behavior of the `missingSchemaAction` parameter of the <xref:System.Data.DataTable.Merge%2A> method.</span></span> <span data-ttu-id="0c375-782">這個範例會建立兩個相同的資料表，以修改第二個版本的結構描述版本。</span><span class="sxs-lookup"><span data-stu-id="0c375-782">This example creates two versions of the same table, modifying the schema for the second version.</span></span> <span data-ttu-id="0c375-783">程式碼會接著嘗試將第二個資料表合併到第一個。</span><span class="sxs-lookup"><span data-stu-id="0c375-783">The code then attempts to merge the second table into the first.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-784">此範例示範如何使用其中一個多載版本的合併。</span><span class="sxs-lookup"><span data-stu-id="0c375-784">This example shows how to use one of the overloaded versions of Merge.</span></span> <span data-ttu-id="0c375-785">如需可能會提供其他範例，請參閱個別的多載的主題。</span><span class="sxs-lookup"><span data-stu-id="0c375-785">For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-csharp[DataWorks DataTableMergeOverload#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableMergeOverload/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableMergeOverload#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableMergeOverload/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (System.Data.DataTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Merge(class System.Data.DataTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Merge(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Merge (table As DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Merge(System::Data::DataTable ^ table);" />
      <MemberSignature Language="F#" Value="member this.Merge : System.Data.DataTable -&gt; unit" Usage="dataTable.Merge table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="0c375-786">
            <see cref="T:System.Data.DataTable" />，要與目前的 <see cref="T:System.Data.DataTable" /> 合併。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-786">The <see cref="T:System.Data.DataTable" /> to be merged with the current <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-787">將指定的 <see cref="T:System.Data.DataTable" /> 與目前的 <see cref="T:System.Data.DataTable" /> 合併。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-787">Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-788">Merge 方法用來合併兩個<xref:System.Data.DataTable>有大致相似的結構描述的物件。</span><span class="sxs-lookup"><span data-stu-id="0c375-788">The Merge method is used to merge two <xref:System.Data.DataTable> objects that have largely similar schemas.</span></span> <span data-ttu-id="0c375-789">合併用戶端應用程式上通常用來將資料來源的最新的變更合併到現有<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-789">A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="0c375-790">這可讓用戶端應用程式已重新整理<xref:System.Data.DataTable>從資料來源的最新的資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-790">This allows the client application to have a refreshed <xref:System.Data.DataTable> with the latest data from the data source.</span></span>  
  
 <span data-ttu-id="0c375-791">合併作業會納入考量，只有原始資料表，以及要合併的資料表。</span><span class="sxs-lookup"><span data-stu-id="0c375-791">The merge operation takes into account only the original table, and the table to be merged.</span></span> <span data-ttu-id="0c375-792">不會受到影響或包含子資料表。</span><span class="sxs-lookup"><span data-stu-id="0c375-792">Child tables are not affected or included.</span></span> <span data-ttu-id="0c375-793">如果資料表有一或多個定義的關聯性一部分的子資料表必須個別合併子系的每個資料表。</span><span class="sxs-lookup"><span data-stu-id="0c375-793">If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</span></span>  
  
 <span data-ttu-id="0c375-794">`Merge`結尾的一系列包含驗證變更、 錯誤，重新調整、 更新資料來源的變更，以及最後重新整理現有的程序通常會呼叫方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-794">The `Merge` method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="0c375-795">當執行合併，現有的資料，在合併之前所做的變更會保留依預設，合併作業期間。</span><span class="sxs-lookup"><span data-stu-id="0c375-795">When performing a merge, changes made to the existing data before the merge are preserved by default during the merge operation.</span></span> <span data-ttu-id="0c375-796">開發人員可以針對這個方法，呼叫其中一個其他兩個多載，並指定，則為 false 的值，以修改此行為`preserveChanges`參數。</span><span class="sxs-lookup"><span data-stu-id="0c375-796">Developers can modify this behavior by calling one of the other two overloads for this method, and specifying a false value for the `preserveChanges` parameter.</span></span>  
  
 <span data-ttu-id="0c375-797">在用戶端應用程式中，通常會有單一按鈕，讓使用者可以按一下，收集變更的資料，並驗證它再將它傳送回中介層元件。</span><span class="sxs-lookup"><span data-stu-id="0c375-797">In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</span></span> <span data-ttu-id="0c375-798">在此案例中，<xref:System.Data.DataTable.GetChanges%2A>第一次叫用方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-798">In this scenario, the <xref:System.Data.DataTable.GetChanges%2A> method is first invoked.</span></span> <span data-ttu-id="0c375-799">方法會傳回第二個<xref:System.Data.DataTable>適合用來驗證和合併。</span><span class="sxs-lookup"><span data-stu-id="0c375-799">That method returns a second <xref:System.Data.DataTable> optimized for validating and merging.</span></span> <span data-ttu-id="0c375-800">此第二個<xref:System.Data.DataTable>物件只包含<xref:System.Data.DataRow>已變更，導致子集的原始物件<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-800">This second <xref:System.Data.DataTable> object contains only the <xref:System.Data.DataRow> objects that were changed, resulting in a subset of the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="0c375-801">這個子集通常比較小，因此更有效率地傳遞回中介層元件。</span><span class="sxs-lookup"><span data-stu-id="0c375-801">This subset is generally smaller and thus more efficiently passed back to a middle tier component.</span></span> <span data-ttu-id="0c375-802">然後中, 介層元件會透過預存程序，以變更更新原始資料來源。</span><span class="sxs-lookup"><span data-stu-id="0c375-802">The middle tier component then updates the original data source with the changes through stored procedures.</span></span> <span data-ttu-id="0c375-803">中介層就可以傳送回其中一個新<xref:System.Data.DataTable>（藉由執行原始查詢一次），包含原始資料和資料來源的最新的資料，或它可以傳回的任何變更，已對它從資料來源子集。</span><span class="sxs-lookup"><span data-stu-id="0c375-803">The middle tier can then send back either a new <xref:System.Data.DataTable> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</span></span> <span data-ttu-id="0c375-804">（例如，如果資料來源會自動建立唯一的主索引鍵值，這些值可以傳播回用戶端應用程式。）在任一情況下，傳回<xref:System.Data.DataTable>可以合併至用戶端應用程式的原始<xref:System.Data.DataTable>與<xref:System.Data.DataTable.Merge%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-804">(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <xref:System.Data.DataTable> can be merged back into the client application's original <xref:System.Data.DataTable> with the <xref:System.Data.DataTable.Merge%2A> method.</span></span>  
  
 <span data-ttu-id="0c375-805">合併新的來源時<xref:System.Data.DataTable>到目標，任何來源的資料列與<xref:System.Data.DataRowState>的值`Unchanged`， `Modified`，或`Deleted`，會將具有相同的主索引鍵值的目標資料列比對。</span><span class="sxs-lookup"><span data-stu-id="0c375-805">When merging a new source <xref:System.Data.DataTable> into the target, any source rows with a <xref:System.Data.DataRowState> value of `Unchanged`, `Modified`, or `Deleted`, is matched to target rows with the same primary key values.</span></span> <span data-ttu-id="0c375-806">來源的資料列<xref:System.Data.DataRowState>的值`Added`就會對應到新的來源資料列的相同主索引鍵值的新目標資料列。</span><span class="sxs-lookup"><span data-stu-id="0c375-806">Source rows with a <xref:System.Data.DataRowState> value of `Added` are matched to new target rows with the same primary key values as the new source rows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-807">下列主控台應用程式會建立簡單<xref:System.Data.DataTable>並將資料加入至資料表。</span><span class="sxs-lookup"><span data-stu-id="0c375-807">The following console application creates a simple <xref:System.Data.DataTable> and adds data to the table.</span></span> <span data-ttu-id="0c375-808">這個範例會建立一份資料表，並加入資料列的複本。</span><span class="sxs-lookup"><span data-stu-id="0c375-808">The example then creates a copy of the table, adding rows to the copy.</span></span> <span data-ttu-id="0c375-809">最後，此範例會呼叫<xref:System.Data.DataTable.Merge%2A>方法來合併的第二個資料表中的資料，與第一個資料表中的資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-809">Finally, the example calls the <xref:System.Data.DataTable.Merge%2A> method to merge the data in the second table with the data in the first table.</span></span>  
  
 [!code-csharp[DataWorks DataTable.Merge#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.Merge/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.Merge#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.Merge/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (System.Data.DataTable table, bool preserveChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Merge(class System.Data.DataTable table, bool preserveChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Merge (table As DataTable, preserveChanges As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Merge(System::Data::DataTable ^ table, bool preserveChanges);" />
      <MemberSignature Language="F#" Value="member this.Merge : System.Data.DataTable * bool -&gt; unit" Usage="dataTable.Merge (table, preserveChanges)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="preserveChanges" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="0c375-810">
            <see langword="DataTable" />，要與目前的 <see langword="DataTable" /> 合併。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-810">The <see langword="DataTable" /> to be merged with the current <see langword="DataTable" />.</span>
          </span>
        </param>
        <param name="preserveChanges">
          <span data-ttu-id="0c375-811">若要保留目前 <see langword="true" /> 中的變更，則為 <see langword="DataTable" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-811">
              <see langword="true" />, to preserve changes in the current <see langword="DataTable" />; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-812">合併指定的 <see cref="T:System.Data.DataTable" /> 與目前的 <see langword="DataTable" />，指出是否保留目前 <see langword="DataTable" /> 中的變更。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-812">Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see langword="DataTable" />, indicating whether to preserve changes in the current <see langword="DataTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-813">Merge 方法用來合併兩個<xref:System.Data.DataTable>有大致相似的結構描述的物件。</span><span class="sxs-lookup"><span data-stu-id="0c375-813">The Merge method is used to merge two <xref:System.Data.DataTable> objects that have largely similar schemas.</span></span> <span data-ttu-id="0c375-814">合併用戶端應用程式上通常用來將資料來源的最新的變更合併到現有<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-814">A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="0c375-815">這可讓用戶端應用程式已重新整理<xref:System.Data.DataTable>從資料來源的最新的資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-815">This allows the client application to have a refreshed <xref:System.Data.DataTable> with the latest data from the data source.</span></span>  
  
 <span data-ttu-id="0c375-816">合併作業會納入考量，只有原始資料表，以及要合併的資料表。</span><span class="sxs-lookup"><span data-stu-id="0c375-816">The merge operation takes into account only the original table, and the table to be merged.</span></span> <span data-ttu-id="0c375-817">不會受到影響或包含子資料表。</span><span class="sxs-lookup"><span data-stu-id="0c375-817">Child tables are not affected or included.</span></span> <span data-ttu-id="0c375-818">如果資料表有一或多個定義的關聯性一部分的子資料表必須個別合併子系的每個資料表。</span><span class="sxs-lookup"><span data-stu-id="0c375-818">If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</span></span>  
  
 <span data-ttu-id="0c375-819">`Merge`結尾的一系列包含驗證變更、 錯誤，重新調整、 更新資料來源的變更，以及最後重新整理現有的程序通常會呼叫方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-819">The `Merge` method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="0c375-820">除非開發人員指定為 false 時執行的合併，將現有的資料，在合併之前所做的變更會保留在合併作業期間`preserveChanges`參數。</span><span class="sxs-lookup"><span data-stu-id="0c375-820">When performing a merge, changes made to the existing data before the merge are preserved during the merge operation unless the developer specifies false for the `preserveChanges` parameter.</span></span> <span data-ttu-id="0c375-821">如果`preserveChanges`參數設為`true`，傳入的值不會覆寫現有的資料列的目前資料列版本中現有的值。</span><span class="sxs-lookup"><span data-stu-id="0c375-821">If the `preserveChanges` parameter is set to `true`, incoming values do not overwrite existing values in the Current row version of the existing row.</span></span> <span data-ttu-id="0c375-822">如果`preserveChanges`參數設為`false`，內送值就會覆寫現有的資料列的目前資料列版本中的現有值。</span><span class="sxs-lookup"><span data-stu-id="0c375-822">If the `preserveChanges` parameter is set to `false`, incoming values do overwrite the existing values in the Current row version of the existing row.</span></span> <span data-ttu-id="0c375-823">如需有關資料列版本的詳細資訊，請參閱[資料列狀態和資料列版本](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)。</span><span class="sxs-lookup"><span data-stu-id="0c375-823">For more information about row versions, see [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md).</span></span>  
  
 <span data-ttu-id="0c375-824">在用戶端應用程式中，通常會有單一按鈕，讓使用者可以按一下，收集變更的資料，並驗證它再將它傳送回中介層元件。</span><span class="sxs-lookup"><span data-stu-id="0c375-824">In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</span></span> <span data-ttu-id="0c375-825">在此案例中，<xref:System.Data.DataTable.GetChanges%2A>第一次叫用方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-825">In this scenario, the <xref:System.Data.DataTable.GetChanges%2A> method is first invoked.</span></span> <span data-ttu-id="0c375-826">方法會傳回第二個<xref:System.Data.DataTable>適合用來驗證和合併。</span><span class="sxs-lookup"><span data-stu-id="0c375-826">That method returns a second <xref:System.Data.DataTable> optimized for validating and merging.</span></span> <span data-ttu-id="0c375-827">此第二個<xref:System.Data.DataTable>物件只包含<xref:System.Data.DataTable>並<xref:System.Data.DataRow>物件的已變更，導致原始的子集<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-827">This second <xref:System.Data.DataTable> object contains only the <xref:System.Data.DataTable> and <xref:System.Data.DataRow> objects that were changed, resulting in a subset of the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="0c375-828">這個子集是通常是較小，因此這個子集會更有效率地傳回給中介層元件。</span><span class="sxs-lookup"><span data-stu-id="0c375-828">This subset is generally smaller, and thus this subset is more efficiently passed back to a middle tier component.</span></span> <span data-ttu-id="0c375-829">然後中, 介層元件會透過預存程序，以變更更新原始資料來源。</span><span class="sxs-lookup"><span data-stu-id="0c375-829">The middle tier component then updates the original data source with the changes through stored procedures.</span></span> <span data-ttu-id="0c375-830">中介層就可以傳送回其中一個新<xref:System.Data.DataTable>（藉由執行原始查詢一次），包含原始資料和資料來源的最新的資料，或它可以傳回的任何變更，已對它從資料來源子集。</span><span class="sxs-lookup"><span data-stu-id="0c375-830">The middle tier can then send back either a new <xref:System.Data.DataTable> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</span></span> <span data-ttu-id="0c375-831">（例如，如果資料來源會自動建立唯一的主索引鍵值，這些值可以傳播回用戶端應用程式。）在任一情況下，傳回<xref:System.Data.DataTable>可以合併至用戶端應用程式的原始<xref:System.Data.DataTable>與<xref:System.Data.DataTable.Merge%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-831">(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <xref:System.Data.DataTable> can be merged back into the client application's original <xref:System.Data.DataTable> with the <xref:System.Data.DataTable.Merge%2A> method.</span></span>  
  
 <span data-ttu-id="0c375-832">合併新的來源時<xref:System.Data.DataTable>到目標，任何來源的資料列與<xref:System.Data.DataRowState>的值`Unchanged`， `Modified`，或`Deleted`與進行比對具有相同的主索引鍵值的目標資料列。</span><span class="sxs-lookup"><span data-stu-id="0c375-832">When merging a new source <xref:System.Data.DataTable> into the target, any source rows with a <xref:System.Data.DataRowState> value of `Unchanged`, `Modified`, or `Deleted` are matched to target rows with the same primary key values.</span></span> <span data-ttu-id="0c375-833">來源的資料列<xref:System.Data.DataRowState>的值`Added`就會對應到新的來源資料列的相同主索引鍵值的新目標資料列。</span><span class="sxs-lookup"><span data-stu-id="0c375-833">Source rows with a <xref:System.Data.DataRowState> value of `Added` are matched to new target rows with the same primary key values as the new source rows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-834">下列主控台應用程式會建立<xref:System.Data.DataTable>包含資料列，修改的部分資料的資料列，並嘗試從不同的資料合併<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-834">The following console application creates a <xref:System.Data.DataTable> containing rows, modifies some of the data in those rows, and attempts to merge data from a different <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="0c375-835">此範例會示範不同的行為，如`preserveChanges`參數。</span><span class="sxs-lookup"><span data-stu-id="0c375-835">The example demonstrates the different behaviors for the `preserveChanges` parameter.</span></span>  
  
 [!code-csharp[DataWorks DataTable.MergePreserveChanges#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.MergePreserveChanges/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.MergePreserveChanges#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.MergePreserveChanges/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (System.Data.DataTable table, bool preserveChanges, System.Data.MissingSchemaAction missingSchemaAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Merge(class System.Data.DataTable table, bool preserveChanges, valuetype System.Data.MissingSchemaAction missingSchemaAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Merge(System::Data::DataTable ^ table, bool preserveChanges, System::Data::MissingSchemaAction missingSchemaAction);" />
      <MemberSignature Language="F#" Value="member this.Merge : System.Data.DataTable * bool * System.Data.MissingSchemaAction -&gt; unit" Usage="dataTable.Merge (table, preserveChanges, missingSchemaAction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="preserveChanges" Type="System.Boolean" />
        <Parameter Name="missingSchemaAction" Type="System.Data.MissingSchemaAction" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="0c375-836">
            <see cref="T:System.Data.DataTable" />，要與目前的 <see cref="T:System.Data.DataTable" /> 合併。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-836">The <see cref="T:System.Data.DataTable" /> to be merged with the current <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </param>
        <param name="preserveChanges">
          <span data-ttu-id="0c375-837">若要保留目前 <see langword="true" /> 中的變更，則為 <see cref="T:System.Data.DataTable" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-837">
              <see langword="true" />, to preserve changes in the current <see cref="T:System.Data.DataTable" />; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <param name="missingSchemaAction">
          <span data-ttu-id="0c375-838">其中一個 <see cref="T:System.Data.MissingSchemaAction" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-838">One of the <see cref="T:System.Data.MissingSchemaAction" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-839">合併指定的 <see cref="T:System.Data.DataTable" /> 與目前的 <see langword="DataTable" />，指出是否保留變更，以及如何處理目前在 <see langword="DataTable" /> 中缺少的結構描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-839">Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see langword="DataTable" />, indicating whether to preserve changes and how to handle missing schema in the current <see langword="DataTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-840">`Merge`方法用來合併兩個<xref:System.Data.DataTable>有大致相似的結構描述的物件。</span><span class="sxs-lookup"><span data-stu-id="0c375-840">The `Merge` method is used to merge two <xref:System.Data.DataTable> objects that have largely similar schemas.</span></span> <span data-ttu-id="0c375-841">合併用戶端應用程式上通常用來將資料來源的最新的變更合併到現有<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-841">A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="0c375-842">這可讓用戶端應用程式已重新整理<xref:System.Data.DataTable>從資料來源的最新的資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-842">This allows the client application to have a refreshed <xref:System.Data.DataTable> with the latest data from the data source.</span></span>  
  
 <span data-ttu-id="0c375-843">合併作業會納入考量，只有原始資料表，以及要合併的資料表。</span><span class="sxs-lookup"><span data-stu-id="0c375-843">The merge operation takes into account only the original table, and the table to be merged.</span></span> <span data-ttu-id="0c375-844">不會受到影響或包含子資料表。</span><span class="sxs-lookup"><span data-stu-id="0c375-844">Child tables are not affected or included.</span></span> <span data-ttu-id="0c375-845">如果資料表有一或多個定義的關聯性一部分的子資料表必須個別合併子系的每個資料表。</span><span class="sxs-lookup"><span data-stu-id="0c375-845">If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</span></span>  
  
 <span data-ttu-id="0c375-846">`Merge`結尾的一系列包含驗證變更、 錯誤，重新調整、 更新資料來源的變更，以及最後重新整理現有的程序通常會呼叫方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-846">The `Merge` method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="0c375-847">除非開發人員指定為 false 時執行的合併，將現有的資料，在合併之前所做的變更會保留在合併作業期間`preserveChanges`參數。</span><span class="sxs-lookup"><span data-stu-id="0c375-847">When performing a merge, changes made to the existing data before the merge are preserved during the merge operation unless the developer specifies false for the `preserveChanges` parameter.</span></span> <span data-ttu-id="0c375-848">如果`preserveChanges`參數設為`true`，傳入的值不會覆寫現有的資料列的目前資料列版本中現有的值。</span><span class="sxs-lookup"><span data-stu-id="0c375-848">If the `preserveChanges` parameter is set to `true`, incoming values do not overwrite existing values in the Current row version of the existing row.</span></span> <span data-ttu-id="0c375-849">如果`preserveChanges`參數設為`false`，內送值就會覆寫現有的資料列的目前資料列版本中的現有值。</span><span class="sxs-lookup"><span data-stu-id="0c375-849">If the `preserveChanges` parameter is set to `false`, incoming values do overwrite the existing values in the Current row version of the existing row.</span></span> <span data-ttu-id="0c375-850">如需有關資料列版本的詳細資訊，請參閱[資料列狀態和資料列版本](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)。</span><span class="sxs-lookup"><span data-stu-id="0c375-850">For more information about row versions, see [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md).</span></span>  
  
 <span data-ttu-id="0c375-851">在用戶端應用程式中，通常會有單一按鈕，讓使用者可以按一下，收集變更的資料，並驗證它再將它傳送回中介層元件。</span><span class="sxs-lookup"><span data-stu-id="0c375-851">In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</span></span> <span data-ttu-id="0c375-852">在此案例中，<xref:System.Data.DataTable.GetChanges%2A>第一次叫用方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-852">In this scenario, the <xref:System.Data.DataTable.GetChanges%2A> method is first invoked.</span></span> <span data-ttu-id="0c375-853">方法會傳回第二個<xref:System.Data.DataTable>適合用來驗證和合併。</span><span class="sxs-lookup"><span data-stu-id="0c375-853">That method returns a second <xref:System.Data.DataTable> optimized for validating and merging.</span></span> <span data-ttu-id="0c375-854">此第二個<xref:System.Data.DataTable>物件只包含<xref:System.Data.DataTable>並<xref:System.Data.DataRow>物件的已變更，導致原始的子集<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-854">This second <xref:System.Data.DataTable> object contains only the <xref:System.Data.DataTable> and <xref:System.Data.DataRow> objects that were changed, resulting in a subset of the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="0c375-855">這個子集是通常是較小，因此這個子集會更有效率地傳回給中介層元件。</span><span class="sxs-lookup"><span data-stu-id="0c375-855">This subset is generally smaller, and thus this subset is more efficiently passed back to a middle tier component.</span></span> <span data-ttu-id="0c375-856">然後中, 介層元件會透過預存程序，以變更更新原始資料來源。</span><span class="sxs-lookup"><span data-stu-id="0c375-856">The middle tier component then updates the original data source with the changes through stored procedures.</span></span> <span data-ttu-id="0c375-857">中介層就可以傳送回其中一個新<xref:System.Data.DataTable>（藉由執行原始查詢一次），包含原始資料和資料來源的最新的資料，或它可以傳回的任何變更，已對它從資料來源子集。</span><span class="sxs-lookup"><span data-stu-id="0c375-857">The middle tier can then send back either a new <xref:System.Data.DataTable> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</span></span> <span data-ttu-id="0c375-858">（例如，如果資料來源會自動建立唯一的主索引鍵值，這些值可以傳播回用戶端應用程式。）在任一情況下，傳回<xref:System.Data.DataTable>可以合併至用戶端應用程式的原始<xref:System.Data.DataTable>與<xref:System.Data.DataTable.Merge%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-858">(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <xref:System.Data.DataTable> can be merged back into the client application's original <xref:System.Data.DataTable> with the <xref:System.Data.DataTable.Merge%2A> method.</span></span>  
  
 <span data-ttu-id="0c375-859">當<xref:System.Data.DataTable.Merge%2A>呼叫方法時，兩個結構描述<xref:System.Data.DataTable>比較物件，因為它是可能的結構描述可能已變更。</span><span class="sxs-lookup"><span data-stu-id="0c375-859">When the <xref:System.Data.DataTable.Merge%2A> method is called, the schemas of the two <xref:System.Data.DataTable> objects are compared, because it is possible that the schemas may have been changed.</span></span> <span data-ttu-id="0c375-860">比方說，在企業對企業案例中，新的資料行可能有已加入 XML 結構描述由自動化程序。</span><span class="sxs-lookup"><span data-stu-id="0c375-860">For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</span></span> <span data-ttu-id="0c375-861">如果來源<xref:System.Data.DataTable>包含結構描述項目 (新增<xref:System.Data.DataColumn>物件)，在目標中遺漏，結構描述項目可以藉由設定新增到目標`missingSchemaAction`引數`MissingSchemaAction.Add`。</span><span class="sxs-lookup"><span data-stu-id="0c375-861">If the source <xref:System.Data.DataTable> contains schema elements (added <xref:System.Data.DataColumn> objects) that are missing in the target, the schema elements can be added to the target by setting the `missingSchemaAction` argument to `MissingSchemaAction.Add`.</span></span> <span data-ttu-id="0c375-862">在此情況下，合併<xref:System.Data.DataTable>包含加入的結構描述和資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-862">In that case, the merged <xref:System.Data.DataTable> contains the added schema and data.</span></span>  
  
 <span data-ttu-id="0c375-863">合併的結構描述之後, 便會合併資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-863">After merging schemas, the data is merged.</span></span>  
  
 <span data-ttu-id="0c375-864">合併新的來源時<xref:System.Data.DataTable>到目標，任何來源的資料列與<xref:System.Data.DataRowState>的值`Unchanged`， `Modified`，或`Deleted`與進行比對具有相同的主索引鍵值的目標資料列。</span><span class="sxs-lookup"><span data-stu-id="0c375-864">When merging a new source <xref:System.Data.DataTable> into the target, any source rows with a <xref:System.Data.DataRowState> value of `Unchanged`, `Modified`, or `Deleted` are matched to target rows with the same primary key values.</span></span> <span data-ttu-id="0c375-865">來源的資料列<xref:System.Data.DataRowState>的值`Added`就會對應到新的來源資料列的相同主索引鍵值的新目標資料列。</span><span class="sxs-lookup"><span data-stu-id="0c375-865">Source rows with a <xref:System.Data.DataRowState> value of `Added` are matched to new target rows with the same primary key values as the new source rows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-866">下列主控台應用程式示範的行為`missingSchemaAction`參數<xref:System.Data.DataTable.Merge%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-866">The following console application demonstrates the behavior of the `missingSchemaAction` parameter of the <xref:System.Data.DataTable.Merge%2A> method.</span></span> <span data-ttu-id="0c375-867">這個範例會建立兩個相同的資料表，以修改第二個版本的結構描述版本。</span><span class="sxs-lookup"><span data-stu-id="0c375-867">This example creates two versions of the same table, modifying the schema for the second version.</span></span> <span data-ttu-id="0c375-868">程式碼會接著嘗試將第二個資料表合併到第一個。</span><span class="sxs-lookup"><span data-stu-id="0c375-868">The code then attempts to merge the second table into the first.</span></span>  
  
 [!code-csharp[DataWorks DataTable.MergeMissingSchemaAction#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.MergeMissingSchemaAction/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.MergeMissingSchemaAction#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.MergeMissingSchemaAction/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumCapacity">
      <MemberSignature Language="C#" Value="public int MinimumCapacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumCapacity" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.MinimumCapacity" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumCapacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumCapacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumCapacity : int with get, set" Usage="System.Data.DataTable.MinimumCapacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(50)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableMinimumCapacityDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-869">取得或設定這個資料表的初始開始大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-869">Gets or sets the initial starting size for this table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c375-870">這個資料表的資料列中的初始開始大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-870">The initial starting size in rows of this table.</span>
          </span>
          <span data-ttu-id="0c375-871">預設值為 50。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-871">The default is 50.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-872"><xref:System.Data.DataTable.MinimumCapacity%2A>可讓系統擷取資料之前建立一組適合的資源。</span><span class="sxs-lookup"><span data-stu-id="0c375-872">The <xref:System.Data.DataTable.MinimumCapacity%2A> allows the system to create an appropriate set of resources before fetching data.</span></span> <span data-ttu-id="0c375-873">情況下當效能至關重要，設定這個屬性可以將效能最佳化。</span><span class="sxs-lookup"><span data-stu-id="0c375-873">In a situation when performance is critical, setting this property can optimize performance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-874">下列範例會設定<xref:System.Data.DataTable.MinimumCapacity%2A>的<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-874">The following example sets the <xref:System.Data.DataTable.MinimumCapacity%2A> of a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.MinimumCapacity Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.MinimumCapacity Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.MinimumCapacity Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.MinimumCapacity Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Data.DataTable.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableNamespaceDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-875">為在 <see cref="T:System.Data.DataTable" /> 中所儲存資料的 XML 表示取得或設定命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-875">Gets or sets the namespace for the XML representation of the data stored in the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c375-876">
            <see cref="T:System.Data.DataTable" /> 的命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-876">The namespace of the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow NewRow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow NewRow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.NewRow" />
      <MemberSignature Language="VB.NET" Value="Public Function NewRow () As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ NewRow();" />
      <MemberSignature Language="F#" Value="member this.NewRow : unit -&gt; System.Data.DataRow" Usage="dataTable.NewRow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c375-877">使用與資料表相同的結構描述來建立新的 <see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-877">Creates a new <see cref="T:System.Data.DataRow" /> with the same schema as the table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c375-878">
            <see cref="T:System.Data.DataRow" />，具有與 <see cref="T:System.Data.DataTable" /> 相同的結構描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-878">A <see cref="T:System.Data.DataRow" /> with the same schema as the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-879">您必須使用<xref:System.Data.DataTable.NewRow%2A>方法來建立新<xref:System.Data.DataRow>具有相同的結構描述物件<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-879">You must use the <xref:System.Data.DataTable.NewRow%2A> method to create new <xref:System.Data.DataRow> objects with the same schema as the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="0c375-880">在建立後<xref:System.Data.DataRow>，您可以將它加入<xref:System.Data.DataRowCollection>，透過<xref:System.Data.DataTable>物件的<xref:System.Data.DataTable.Rows%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="0c375-880">After creating a <xref:System.Data.DataRow>, you can add it to the <xref:System.Data.DataRowCollection>, through the <xref:System.Data.DataTable> object's <xref:System.Data.DataTable.Rows%2A> property.</span></span> <span data-ttu-id="0c375-881">當您使用<xref:System.Data.DataTable.NewRow%2A>若要建立新的資料列，資料列必須加入或從資料表刪除，才能呼叫<xref:System.Data.DataTable.Clear%2A>。</span><span class="sxs-lookup"><span data-stu-id="0c375-881">When you use <xref:System.Data.DataTable.NewRow%2A> to create new rows, the rows must be added to or deleted from the data table before you call <xref:System.Data.DataTable.Clear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-882">下列範例會建立<xref:System.Data.DataTable>，加入兩個<xref:System.Data.DataColumn>物件，判斷資料表的結構描述，並會建立數個新<xref:System.Data.DataRow>物件，使用<xref:System.Data.DataTable.NewRow%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-882">The following example creates a <xref:System.Data.DataTable>, adds two <xref:System.Data.DataColumn> objects that determine the table's schema, and creates several new <xref:System.Data.DataRow> objects using the <xref:System.Data.DataTable.NewRow%2A> method.</span></span> <span data-ttu-id="0c375-883">那些<xref:System.Data.DataRow>物件將會新增至<xref:System.Data.DataRowCollection>使用<xref:System.Data.DataRowCollection.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-883">Those <xref:System.Data.DataRow> objects are then added to the <xref:System.Data.DataRowCollection> using the <xref:System.Data.DataRowCollection.Add%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.NewRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.NewRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.NewRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.NewRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewRowArray">
      <MemberSignature Language="C#" Value="protected internal System.Data.DataRow[] NewRowArray (int size);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Data.DataRow[] NewRowArray(int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.NewRowArray(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function NewRowArray (size As Integer) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ NewRowArray(int size);" />
      <MemberSignature Language="F#" Value="member this.NewRowArray : int -&gt; System.Data.DataRow[]" Usage="dataTable.NewRowArray size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="0c375-884">描述陣列大小的 <see cref="T:System.Int32" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-884">A <see cref="T:System.Int32" /> value that describes the size of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-885">傳回 <see cref="T:System.Data.DataRow" /> 的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-885">Returns an array of <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c375-886">新陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-886">The new array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewRowFromBuilder">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataRow NewRowFromBuilder (System.Data.DataRowBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataRow NewRowFromBuilder(class System.Data.DataRowBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function NewRowFromBuilder (builder As DataRowBuilder) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataRow ^ NewRowFromBuilder(System::Data::DataRowBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="abstract member NewRowFromBuilder : System.Data.DataRowBuilder -&gt; System.Data.DataRow&#xA;override this.NewRowFromBuilder : System.Data.DataRowBuilder -&gt; System.Data.DataRow" Usage="dataTable.NewRowFromBuilder builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Data.DataRowBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="0c375-887">
            <see cref="T:System.Data.DataRowBuilder" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-887">A <see cref="T:System.Data.DataRowBuilder" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-888">從現有的資料列建立新的資料列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-888">Creates a new row from an existing row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c375-889">
            <see cref="T:System.Data.DataRow" /> 衍生類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-889">A <see cref="T:System.Data.DataRow" /> derived class.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnColumnChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnColumnChanged (System.Data.DataColumnChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnColumnChanged(class System.Data.DataColumnChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnColumnChanged (e As DataColumnChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnColumnChanged(System::Data::DataColumnChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnChanged : System.Data.DataColumnChangeEventArgs -&gt; unit&#xA;override this.OnColumnChanged : System.Data.DataColumnChangeEventArgs -&gt; unit" Usage="dataTable.OnColumnChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataColumnChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0c375-890">
            <see cref="T:System.Data.DataColumnChangeEventArgs" />，其中包含事件資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-890">A <see cref="T:System.Data.DataColumnChangeEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-891">引發 <see cref="E:System.Data.DataTable.ColumnChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-891">Raises the <see cref="E:System.Data.DataTable.ColumnChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-892">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="0c375-892">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0c375-893">如需概觀，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="0c375-893">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0c375-894">
            <para>當覆寫<see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-894">
              <para>When overriding <see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnChanging">
      <MemberSignature Language="C#" Value="protected internal virtual void OnColumnChanging (System.Data.DataColumnChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnColumnChanging(class System.Data.DataColumnChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnColumnChanging (e As DataColumnChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnColumnChanging(System::Data::DataColumnChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnChanging : System.Data.DataColumnChangeEventArgs -&gt; unit&#xA;override this.OnColumnChanging : System.Data.DataColumnChangeEventArgs -&gt; unit" Usage="dataTable.OnColumnChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataColumnChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0c375-895">
            <see cref="T:System.Data.DataColumnChangeEventArgs" />，其中包含事件資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-895">A <see cref="T:System.Data.DataColumnChangeEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-896">引發 <see cref="E:System.Data.DataTable.ColumnChanging" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-896">Raises the <see cref="E:System.Data.DataTable.ColumnChanging" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-897">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="0c375-897">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0c375-898">如需概觀，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="0c375-898">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0c375-899">
            <para>當覆寫<see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-899">
              <para>When overriding <see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanging(class System.ComponentModel.PropertyChangedEventArgs pcevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanging (pcevent As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanging(System::ComponentModel::PropertyChangedEventArgs ^ pcevent);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanging : System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanging : System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="dataTable.OnPropertyChanging pcevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcevent" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="pcevent">
          <span data-ttu-id="0c375-900">
            <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />，其中包含事件資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-900">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-901">引發 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-901">Raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-902">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="0c375-902">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0c375-903">如需概觀，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="0c375-903">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0c375-904">
            <para>當覆寫<see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-904">
              <para>When overriding <see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRemoveColumn">
      <MemberSignature Language="C#" Value="protected virtual void OnRemoveColumn (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRemoveColumn(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRemoveColumn (column As DataColumn)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRemoveColumn(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="abstract member OnRemoveColumn : System.Data.DataColumn -&gt; unit&#xA;override this.OnRemoveColumn : System.Data.DataColumn -&gt; unit" Usage="dataTable.OnRemoveColumn column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">
          <span data-ttu-id="0c375-905">正在移除的 <see cref="T:System.Data.DataColumn" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-905">The <see cref="T:System.Data.DataColumn" /> being removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-906">向 <see cref="T:System.Data.DataTable" /> 通知 <see cref="T:System.Data.DataColumn" /> 正在移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-906">Notifies the <see cref="T:System.Data.DataTable" /> that a <see cref="T:System.Data.DataColumn" /> is being removed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-907">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="0c375-907">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0c375-908">如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="0c375-908">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0c375-909">
            <para>當覆寫<see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-909">
              <para>When overriding <see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowChanged (System.Data.DataRowChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowChanged(class System.Data.DataRowChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowChanged (e As DataRowChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowChanged(System::Data::DataRowChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowChanged : System.Data.DataRowChangeEventArgs -&gt; unit&#xA;override this.OnRowChanged : System.Data.DataRowChangeEventArgs -&gt; unit" Usage="dataTable.OnRowChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0c375-910">
            <see cref="T:System.Data.DataRowChangeEventArgs" />，其中包含事件資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-910">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-911">引發 <see cref="E:System.Data.DataTable.RowChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-911">Raises the <see cref="E:System.Data.DataTable.RowChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-912">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="0c375-912">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0c375-913">如需概觀，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="0c375-913">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0c375-914">
            <para>當覆寫<see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-914">
              <para>When overriding <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnRowChanging (System.Data.DataRowChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowChanging(class System.Data.DataRowChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowChanging (e As DataRowChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowChanging(System::Data::DataRowChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowChanging : System.Data.DataRowChangeEventArgs -&gt; unit&#xA;override this.OnRowChanging : System.Data.DataRowChangeEventArgs -&gt; unit" Usage="dataTable.OnRowChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0c375-915">
            <see cref="T:System.Data.DataRowChangeEventArgs" />，其中包含事件資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-915">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-916">引發 <see cref="E:System.Data.DataTable.RowChanging" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-916">Raises the <see cref="E:System.Data.DataTable.RowChanging" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-917">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="0c375-917">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0c375-918">如需概觀，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="0c375-918">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0c375-919">
            <para>當覆寫<see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-919">
              <para>When overriding <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDeleted (System.Data.DataRowChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDeleted(class System.Data.DataRowChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDeleted (e As DataRowChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDeleted(System::Data::DataRowChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDeleted : System.Data.DataRowChangeEventArgs -&gt; unit&#xA;override this.OnRowDeleted : System.Data.DataRowChangeEventArgs -&gt; unit" Usage="dataTable.OnRowDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0c375-920">
            <see cref="T:System.Data.DataRowChangeEventArgs" />，其中包含事件資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-920">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-921">引發 <see cref="E:System.Data.DataTable.RowDeleted" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-921">Raises the <see cref="E:System.Data.DataTable.RowDeleted" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-922">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="0c375-922">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0c375-923">如需概觀，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="0c375-923">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0c375-924">
            <para>當覆寫<see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-924">
              <para>When overriding <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDeleting (System.Data.DataRowChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDeleting(class System.Data.DataRowChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDeleting (e As DataRowChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDeleting(System::Data::DataRowChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRowDeleting : System.Data.DataRowChangeEventArgs -&gt; unit&#xA;override this.OnRowDeleting : System.Data.DataRowChangeEventArgs -&gt; unit" Usage="dataTable.OnRowDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0c375-925">
            <see cref="T:System.Data.DataRowChangeEventArgs" />，其中包含事件資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-925">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-926">引發 <see cref="E:System.Data.DataTable.RowDeleting" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-926">Raises the <see cref="E:System.Data.DataTable.RowDeleting" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-927">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="0c375-927">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0c375-928">如需概觀，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="0c375-928">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0c375-929">
            <para>當覆寫<see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" />方法。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-929">
              <para>When overriding <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnTableCleared">
      <MemberSignature Language="C#" Value="protected virtual void OnTableCleared (System.Data.DataTableClearEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTableCleared(class System.Data.DataTableClearEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTableCleared (e As DataTableClearEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTableCleared(System::Data::DataTableClearEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTableCleared : System.Data.DataTableClearEventArgs -&gt; unit&#xA;override this.OnTableCleared : System.Data.DataTableClearEventArgs -&gt; unit" Usage="dataTable.OnTableCleared e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataTableClearEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0c375-930">
            <see cref="T:System.Data.DataTableClearEventArgs" />，其中包含事件資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-930">A <see cref="T:System.Data.DataTableClearEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-931">引發 <see cref="E:System.Data.DataTable.TableCleared" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-931">Raises the <see cref="E:System.Data.DataTable.TableCleared" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-932">會引發<xref:System.Data.DataTable.TableCleared>事件，立即在所有資料列已成功清除之前後，才會觸發<xref:System.Data.DataTable.Clear%2A>方法會將控制項傳回至呼叫端。</span><span class="sxs-lookup"><span data-stu-id="0c375-932">Raises the <xref:System.Data.DataTable.TableCleared> event, which is fired immediately after all rows have been successfully cleared but before the <xref:System.Data.DataTable.Clear%2A> method returns control back to the caller.</span></span>  
  
 <span data-ttu-id="0c375-933">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="0c375-933">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0c375-934">如需概觀，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="0c375-934">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTableClearing">
      <MemberSignature Language="C#" Value="protected virtual void OnTableClearing (System.Data.DataTableClearEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTableClearing(class System.Data.DataTableClearEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTableClearing (e As DataTableClearEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTableClearing(System::Data::DataTableClearEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTableClearing : System.Data.DataTableClearEventArgs -&gt; unit&#xA;override this.OnTableClearing : System.Data.DataTableClearEventArgs -&gt; unit" Usage="dataTable.OnTableClearing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataTableClearEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0c375-935">
            <see cref="T:System.Data.DataTableClearEventArgs" />，其中包含事件資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-935">A <see cref="T:System.Data.DataTableClearEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-936">引發 <see cref="E:System.Data.DataTable.TableClearing" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-936">Raises the <see cref="E:System.Data.DataTable.TableClearing" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-937">會引發<xref:System.Data.DataTable.TableClearing>事件引發之前處理<xref:System.Data.DataTable.Clear%2A>作業開始。</span><span class="sxs-lookup"><span data-stu-id="0c375-937">Raises the <xref:System.Data.DataTable.TableClearing> event, which is fired before processing of the <xref:System.Data.DataTable.Clear%2A> operation begins.</span></span>  
  
 <span data-ttu-id="0c375-938">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="0c375-938">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0c375-939">如需概觀，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="0c375-939">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTableNewRow">
      <MemberSignature Language="C#" Value="protected virtual void OnTableNewRow (System.Data.DataTableNewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTableNewRow(class System.Data.DataTableNewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTableNewRow (e As DataTableNewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTableNewRow(System::Data::DataTableNewRowEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTableNewRow : System.Data.DataTableNewRowEventArgs -&gt; unit&#xA;override this.OnTableNewRow : System.Data.DataTableNewRowEventArgs -&gt; unit" Usage="dataTable.OnTableNewRow e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataTableNewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0c375-940">
            <see cref="T:System.Data.DataTableNewRowEventArgs" />，其中包含事件資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-940">A <see cref="T:System.Data.DataTableNewRowEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-941">引發 <see cref="E:System.Data.DataTable.TableNewRow" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-941">Raises the <see cref="E:System.Data.DataTable.TableNewRow" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-942">會引發<xref:System.Data.DataTable.TableNewRow>，所引發的事件之後的新<xref:System.Data.DataRow>使用已建立<xref:System.Data.DataTable.NewRow%2A>。</span><span class="sxs-lookup"><span data-stu-id="0c375-942">Raises the <xref:System.Data.DataTable.TableNewRow> event, which fires after a new <xref:System.Data.DataRow> has been created using <xref:System.Data.DataTable.NewRow%2A>.</span></span>  
  
 <span data-ttu-id="0c375-943">引發事件會透過委派叫用此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="0c375-943">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0c375-944">如需概觀，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="0c375-944">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentRelations">
      <MemberSignature Language="C#" Value="public System.Data.DataRelationCollection ParentRelations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataRelationCollection ParentRelations" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.ParentRelations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentRelations As DataRelationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRelationCollection ^ ParentRelations { System::Data::DataRelationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentRelations : System.Data.DataRelationCollection" Usage="System.Data.DataTable.ParentRelations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableParentRelationsDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRelationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-945">為這個 <see cref="T:System.Data.DataTable" /> 取得父關聯的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-945">Gets the collection of parent relations for this <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c375-946">
            <see cref="T:System.Data.DataRelationCollection" />，其中包含資料表的父關聯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-946">A <see cref="T:System.Data.DataRelationCollection" /> that contains the parent relations for the table.</span>
          </span>
          <span data-ttu-id="0c375-947">如果沒有任何 <see cref="T:System.Data.DataRelation" /> 物件存在，則會傳回空的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-947">An empty collection is returned if no <see cref="T:System.Data.DataRelation" /> objects exist.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0c375-948">下列範例會使用<xref:System.Data.DataTable.ParentRelations%2A>屬性來傳回每個父系<xref:System.Data.DataRelation>在<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-948">The following example uses the <xref:System.Data.DataTable.ParentRelations%2A> property to return each parent <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="0c375-949">每個關聯性接著會做的引數<xref:System.Data.DataRow.GetParentRows%2A>方法的<xref:System.Data.DataRow>傳回陣列的資料列。</span><span class="sxs-lookup"><span data-stu-id="0c375-949">Each relation is then used as an argument in the <xref:System.Data.DataRow.GetParentRows%2A> method of the <xref:System.Data.DataRow> to return an array of rows.</span></span> <span data-ttu-id="0c375-950">然後會列印每個資料列中的資料行的值。</span><span class="sxs-lookup"><span data-stu-id="0c375-950">The value of each column in the row is then printed.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.ParentRelations Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ParentRelations Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ParentRelations Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ParentRelations Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string with get, set" Usage="System.Data.DataTable.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTablePrefixDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-951">為在 <see cref="T:System.Data.DataTable" /> 中所儲存資料的 XML 表示取得或設定命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-951">Gets or sets the namespace for the XML representation of the data stored in the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c375-952">
            <see cref="T:System.Data.DataTable" /> 的前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-952">The prefix of the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryKey">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn[] PrimaryKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataColumn[] PrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.PrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public Property PrimaryKey As DataColumn()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Data::DataColumn ^&gt; ^ PrimaryKey { cli::array &lt;System::Data::DataColumn ^&gt; ^ get(); void set(cli::array &lt;System::Data::DataColumn ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryKey : System.Data.DataColumn[] with get, set" Usage="System.Data.DataTable.PrimaryKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.PrimaryKeyTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTablePrimaryKeyDescr")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-953">取得或設定資料行的陣列，這些資料行是做為資料表 (Data Table) 之主索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-953">Gets or sets an array of columns that function as primary keys for the data table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c375-954">
            <see cref="T:System.Data.DataColumn" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-954">An array of <see cref="T:System.Data.DataColumn" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-955">資料表的主索引鍵必須是唯一識別資料表中的記錄。</span><span class="sxs-lookup"><span data-stu-id="0c375-955">The primary key of a table must be unique to identify the record in the table.</span></span> <span data-ttu-id="0c375-956">它也是可能的資料表具有主索引鍵的兩個或多個資料行所組成。</span><span class="sxs-lookup"><span data-stu-id="0c375-956">It's also possible to have a table with a primary key made up of two or more columns.</span></span> <span data-ttu-id="0c375-957">會發生這種情況時的單一資料行不能包含足夠的唯一值。</span><span class="sxs-lookup"><span data-stu-id="0c375-957">This occurs when a single column can't contain enough unique values.</span></span> <span data-ttu-id="0c375-958">例如，"FirstName"和"LastName"的資料行可能包含兩個資料行主要金鑰。</span><span class="sxs-lookup"><span data-stu-id="0c375-958">For example, a two column primary key might consist of a "FirstName" and "LastName" column.</span></span> <span data-ttu-id="0c375-959">主索引鍵可以組成的多個資料行，因為<xref:System.Data.DataTable.PrimaryKey%2A>屬性所組成的陣列<xref:System.Data.DataColumn>物件。</span><span class="sxs-lookup"><span data-stu-id="0c375-959">Because primary keys can be made up of more than one column, the <xref:System.Data.DataTable.PrimaryKey%2A> property consists of an array of <xref:System.Data.DataColumn> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-960">第一個範例示範如何傳回主要索引鍵資料行，如<xref:System.Data.DataTable>顯示在`DataGrid`。</span><span class="sxs-lookup"><span data-stu-id="0c375-960">The first example shows how to return the primary key columns for a <xref:System.Data.DataTable> displayed in a `DataGrid`.</span></span> <span data-ttu-id="0c375-961">第二個範例示範如何設定主索引鍵資料行，如<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-961">The second example demonstrates how to set the primary key columns for a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.PrimaryKey Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.PrimaryKey Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.PrimaryKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.PrimaryKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DataException">
          <span data-ttu-id="0c375-962">索引鍵為外部索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-962">The key is a foreign key.</span>
          </span>
        </exception>
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="P:System.Data.DataTable.PrimaryKey" />
        <altmember cref="T:System.Data.DataColumnCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadXml">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-963">將 XML 結構描述和資料讀入 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-963">Reads XML schema and data into the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-964"><xref:System.Data.DataTable.ReadXml%2A>方法來讀取資料，或同時提供資料和結構描述讀入<xref:System.Data.DataTable>從 XML 文件，而<xref:System.Data.DataTable.ReadXmlSchema%2A>方法會讀取結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-964">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span> <span data-ttu-id="0c375-965">若要讀取資料和結構描述，請使用其中一種`ReadXML`包含的多載`XmlReadMode`參數，並將其值設定為`ReadSchema`。</span><span class="sxs-lookup"><span data-stu-id="0c375-965">To read both data and schema, use one of the `ReadXML` overloads that include the `XmlReadMode` parameter, and set its value to `ReadSchema`.</span></span>  
  
 <span data-ttu-id="0c375-966">請注意，這也適用於<xref:System.Data.DataTable.WriteXml%2A>和<xref:System.Data.DataTable.WriteXmlSchema%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="0c375-966">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="0c375-967">要寫入 XML 資料，或結構描述和資料`DataTable`，使用`WriteXml`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-967">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="0c375-968">若要寫入的結構描述，使用`WriteXmlSchema`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-968">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-969"><xref:System.InvalidOperationException>如果中的資料行型別將會擲回`DataRow`正在讀取或寫入實作<xref:System.Dynamic.IDynamicMetaObjectProvider>並不會實作<xref:System.Xml.Serialization.IXmlSerializable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-969">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.DataSet.ReadXml" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public System.Data.XmlReadMode ReadXml (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.XmlReadMode ReadXml(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXml(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::XmlReadMode ReadXml(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.ReadXml : System.IO.Stream -&gt; System.Data.XmlReadMode" Usage="dataTable.ReadXml stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="0c375-970">衍生自 <see cref="T:System.IO.Stream" /> 的物件</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-970">An object that derives from <see cref="T:System.IO.Stream" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-971">使用指定的 <see cref="T:System.Data.DataTable" />，將 XML 結構描述和資料讀入 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-971">Reads XML schema and data into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c375-972">
            <see cref="T:System.Data.XmlReadMode" />，用來讀取資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-972">The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-973">目前<xref:System.Data.DataTable>以及從提供的資料載入其下階<xref:System.IO.Stream>。</span><span class="sxs-lookup"><span data-stu-id="0c375-973">The current <xref:System.Data.DataTable> and its descendents are loaded with the data from the supplied <xref:System.IO.Stream>.</span></span> <span data-ttu-id="0c375-974">這個方法的行為是相同<xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType>方法，但也在此情況下，資料會載入僅適用於目前的資料表和子系。</span><span class="sxs-lookup"><span data-stu-id="0c375-974">The behavior of this method is identical to that of the <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> method, except that in this case, data is loaded only for the current table and its descendants.</span></span>  
  
 <span data-ttu-id="0c375-975"><xref:System.Data.DataTable.ReadXml%2A>方法來讀取資料，或同時提供資料和結構描述讀入<xref:System.Data.DataTable>從 XML 文件，而<xref:System.Data.DataTable.ReadXmlSchema%2A>方法會讀取結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-975">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span>  
  
 <span data-ttu-id="0c375-976">請注意，這也適用於<xref:System.Data.DataTable.WriteXml%2A>和<xref:System.Data.DataTable.WriteXmlSchema%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="0c375-976">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="0c375-977">要寫入 XML 資料，或結構描述和資料`DataTable`，使用`WriteXml`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-977">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="0c375-978">若要寫入的結構描述，使用`WriteXmlSchema`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-978">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-979"><xref:System.InvalidOperationException>如果中的資料行型別將會擲回`DataRow`正在讀取或寫入實作<xref:System.Dynamic.IDynamicMetaObjectProvider>並不會實作<xref:System.Xml.Serialization.IXmlSerializable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-979">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="0c375-980">如果指定的內嵌結構描述，則內嵌結構描述用來擴充現有的關聯式結構載入資料前。</span><span class="sxs-lookup"><span data-stu-id="0c375-980">If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</span></span> <span data-ttu-id="0c375-981">如果有任何衝突 （例如，相同的資料行定義為不同的資料型別相同資料表中） 會引發例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0c375-981">If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</span></span>  
  
 <span data-ttu-id="0c375-982">如果未不指定任何內嵌結構描述，就會推斷，視需要透過關聯式結構擴充根據 XML 文件的結構。</span><span class="sxs-lookup"><span data-stu-id="0c375-982">If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</span></span> <span data-ttu-id="0c375-983">如果無法推斷透過延伸架構才能公開的所有資料，則會引發例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0c375-983">If the schema cannot be extended through inference in order to expose all data, an exception is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-984">`DataSet`不會將 XML 項目關聯與其對應`DataColumn`或`DataTable`合法 XML 字元，例如 ("_") 中序列化的 XML 逸出。</span><span class="sxs-lookup"><span data-stu-id="0c375-984">The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like ("_") are escaped in the serialized XML.</span></span> <span data-ttu-id="0c375-985">`DataSet`本身只會在 XML 項目名稱中不合法的 XML 字元的逸出，因此只能取用相同。</span><span class="sxs-lookup"><span data-stu-id="0c375-985">The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same.</span></span> <span data-ttu-id="0c375-986">在 XML 項目名稱的合法字元會逸出，當處理時忽略此元素。</span><span class="sxs-lookup"><span data-stu-id="0c375-986">When legal characters in XML element name are escaped, the element is ignored while processing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-987">下列範例會建立<xref:System.Data.DataTable>包含兩個資料行和 10 個資料列。</span><span class="sxs-lookup"><span data-stu-id="0c375-987">The following example creates a <xref:System.Data.DataTable> containing two columns and ten rows.</span></span> <span data-ttu-id="0c375-988">該範例會寫入<xref:System.Data.DataTable>結構描述和資料至記憶體資料流，藉由叫用<xref:System.Data.DataTable.WriteXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-988">The example writes the <xref:System.Data.DataTable> schema and data to a memory stream, by invoking the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span> <span data-ttu-id="0c375-989">此範例會建立第二個<xref:System.Data.DataTable>，並呼叫<xref:System.Data.DataTable.ReadXml%2A>来填入結構描述和資料的方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-989">The example creates a second <xref:System.Data.DataTable> and calls the <xref:System.Data.DataTable.ReadXml%2A> method to fill it with schema and data.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXml#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXml/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXml#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXml/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public System.Data.XmlReadMode ReadXml (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.XmlReadMode ReadXml(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXml(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadXml (reader As TextReader) As XmlReadMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::XmlReadMode ReadXml(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.ReadXml : System.IO.TextReader -&gt; System.Data.XmlReadMode" Usage="dataTable.ReadXml reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="0c375-990">
            <see cref="T:System.IO.TextReader" />，將用來讀取資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-990">The <see cref="T:System.IO.TextReader" /> that will be used to read the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-991">使用指定的 <see cref="T:System.Data.DataTable" />，將 XML 結構描述和資料讀入 <see cref="T:System.IO.TextReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-991">Reads XML schema and data into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c375-992">
            <see cref="T:System.Data.XmlReadMode" />，用來讀取資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-992">The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-993">目前<xref:System.Data.DataTable>以及從提供的資料載入其下階<xref:System.IO.TextReader>。</span><span class="sxs-lookup"><span data-stu-id="0c375-993">The current <xref:System.Data.DataTable> and its descendents are loaded with the data from the supplied <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="0c375-994">這個方法的行為是相同<xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType>方法，但也在此情況下，資料會載入僅適用於目前的資料表和子系。</span><span class="sxs-lookup"><span data-stu-id="0c375-994">The behavior of this method is identical to that of the <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> method, except that in this case, data is loaded only for the current table and its descendants.</span></span>  
  
 <span data-ttu-id="0c375-995"><xref:System.Data.DataTable.ReadXml%2A>方法來讀取資料，或同時提供資料和結構描述讀入<xref:System.Data.DataTable>從 XML 文件，而<xref:System.Data.DataTable.ReadXmlSchema%2A>方法會讀取結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-995">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span>  
  
 <span data-ttu-id="0c375-996">請注意，這也適用於<xref:System.Data.DataTable.WriteXml%2A>和<xref:System.Data.DataTable.WriteXmlSchema%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="0c375-996">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="0c375-997">要寫入 XML 資料，或結構描述和資料`DataTable`，使用`WriteXml`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-997">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="0c375-998">若要寫入的結構描述，使用`WriteXmlSchema`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-998">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-999"><xref:System.InvalidOperationException>如果中的資料行型別將會擲回`DataRow`正在讀取或寫入實作<xref:System.Dynamic.IDynamicMetaObjectProvider>並不會實作<xref:System.Xml.Serialization.IXmlSerializable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-999">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="0c375-1000">如果指定的內嵌結構描述，則內嵌結構描述用來擴充現有的關聯式結構載入資料前。</span><span class="sxs-lookup"><span data-stu-id="0c375-1000">If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</span></span> <span data-ttu-id="0c375-1001">如果有任何衝突 （例如，相同的資料行定義為不同的資料型別相同資料表中） 會引發例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0c375-1001">If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</span></span>  
  
 <span data-ttu-id="0c375-1002">如果未不指定任何內嵌結構描述，就會推斷，視需要透過關聯式結構擴充根據 XML 文件的結構。</span><span class="sxs-lookup"><span data-stu-id="0c375-1002">If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</span></span> <span data-ttu-id="0c375-1003">如果無法推斷透過延伸架構才能公開的所有資料，則會引發例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0c375-1003">If the schema cannot be extended through inference in order to expose all data, an exception is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-1004">`DataSet`不會將 XML 項目關聯與其對應`DataColumn`或`DataTable`合法 XML 字元，例如 ("_") 中序列化的 XML 逸出。</span><span class="sxs-lookup"><span data-stu-id="0c375-1004">The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like ("_") are escaped in the serialized XML.</span></span> <span data-ttu-id="0c375-1005">`DataSet`本身只會在 XML 項目名稱中不合法的 XML 字元的逸出，因此只能取用相同。</span><span class="sxs-lookup"><span data-stu-id="0c375-1005">The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same.</span></span> <span data-ttu-id="0c375-1006">在 XML 項目名稱的合法字元會逸出，當處理時忽略此元素。</span><span class="sxs-lookup"><span data-stu-id="0c375-1006">When legal characters in XML element name are escaped, the element is ignored while processing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-1007">下列範例會建立<xref:System.Data.DataTable>包含兩個資料行和 10 個資料列。</span><span class="sxs-lookup"><span data-stu-id="0c375-1007">The following example creates a <xref:System.Data.DataTable> containing two columns and ten rows.</span></span> <span data-ttu-id="0c375-1008">該範例會寫入<xref:System.Data.DataTable>結構描述和資料至記憶體資料流，藉由叫用<xref:System.Data.DataTable.WriteXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1008">The example writes the <xref:System.Data.DataTable> schema and data to a memory stream, by invoking the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span> <span data-ttu-id="0c375-1009">此範例會建立第二個<xref:System.Data.DataTable>，並呼叫<xref:System.Data.DataTable.ReadXml%2A>来填入結構描述和資料的方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1009">The example creates a second <xref:System.Data.DataTable> and calls the <xref:System.Data.DataTable.ReadXml%2A> method to fill it with schema and data.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlText#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlText/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlText#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlText/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public System.Data.XmlReadMode ReadXml (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.XmlReadMode ReadXml(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadXml (fileName As String) As XmlReadMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::XmlReadMode ReadXml(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.ReadXml : string -&gt; System.Data.XmlReadMode" Usage="dataTable.ReadXml fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="0c375-1010">要從中讀取資料的檔案名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1010">The name of the file from which to read the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1011">將 XML 結構描述和資料從指定的檔案讀入 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1011">Reads XML schema and data into the <see cref="T:System.Data.DataTable" /> from the specified file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c375-1012">
            <see cref="T:System.Data.XmlReadMode" />，用來讀取資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1012">The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1013">目前<xref:System.Data.DataTable>和其下階會與來自命名的檔案中所提供的資料載入<xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1013">The current <xref:System.Data.DataTable> and its descendents are loaded with the data from the file named in the supplied <xref:System.String>.</span></span> <span data-ttu-id="0c375-1014">這個方法的行為是相同<xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType>方法，但也在此情況下，資料會載入僅適用於目前的資料表和子系。</span><span class="sxs-lookup"><span data-stu-id="0c375-1014">The behavior of this method is identical to that of the <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> method, except that in this case, data is loaded only for the current table and its descendants.</span></span>  
  
 <span data-ttu-id="0c375-1015"><xref:System.Data.DataTable.ReadXml%2A>方法來讀取資料，或同時提供資料和結構描述讀入<xref:System.Data.DataTable>從 XML 文件，而<xref:System.Data.DataTable.ReadXmlSchema%2A>方法會讀取結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-1015">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span>  
  
 <span data-ttu-id="0c375-1016">請注意，這也適用於<xref:System.Data.DataTable.WriteXml%2A>和<xref:System.Data.DataTable.WriteXmlSchema%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="0c375-1016">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="0c375-1017">要寫入 XML 資料，或結構描述和資料`DataTable`，使用`WriteXml`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1017">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="0c375-1018">若要寫入的結構描述，使用`WriteXmlSchema`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1018">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-1019"><xref:System.InvalidOperationException>如果中的資料行型別將會擲回`DataRow`正在讀取或寫入實作<xref:System.Dynamic.IDynamicMetaObjectProvider>並不會實作<xref:System.Xml.Serialization.IXmlSerializable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1019">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="0c375-1020">如果指定的內嵌結構描述，則內嵌結構描述用來擴充現有的關聯式結構載入資料前。</span><span class="sxs-lookup"><span data-stu-id="0c375-1020">If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</span></span> <span data-ttu-id="0c375-1021">如果有任何衝突 （例如，相同的資料行定義為不同的資料型別相同資料表中） 會引發例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0c375-1021">If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</span></span>  
  
 <span data-ttu-id="0c375-1022">如果未不指定任何內嵌結構描述，就會推斷，視需要透過關聯式結構擴充根據 XML 文件的結構。</span><span class="sxs-lookup"><span data-stu-id="0c375-1022">If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</span></span> <span data-ttu-id="0c375-1023">如果無法推斷透過延伸架構才能公開的所有資料，則會引發例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0c375-1023">If the schema cannot be extended through inference in order to expose all data, an exception is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-1024">`DataSet`不會將 XML 項目關聯與其對應`DataColumn`或`DataTable`合法 XML 字元，例如 ("_") 中序列化的 XML 逸出。</span><span class="sxs-lookup"><span data-stu-id="0c375-1024">The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like ("_") are escaped in the serialized XML.</span></span> <span data-ttu-id="0c375-1025">`DataSet`本身只會在 XML 項目名稱中不合法的 XML 字元的逸出，因此只能取用相同。</span><span class="sxs-lookup"><span data-stu-id="0c375-1025">The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same.</span></span> <span data-ttu-id="0c375-1026">在 XML 項目名稱的合法字元會逸出，當處理時忽略此元素。</span><span class="sxs-lookup"><span data-stu-id="0c375-1026">When legal characters in XML element name are escaped, the element is ignored while processing.</span></span>  
  
```csharp  
using System.Data;  
public class A {  
   static void Main(string[] args) {  
      DataTable tabl = new DataTable("mytable");  
      tabl.Columns.Add(new DataColumn("id", typeof(int)));  
      for (int i = 0; i < 10; i++) {  
         DataRow row = tabl.NewRow();  
         row["id"] = i;  
         tabl.Rows.Add(row);  
      }  
      tabl.WriteXml("f.xml", XmlWriteMode.WriteSchema);  
      DataTable newt = new DataTable();  
      newt.ReadXml("f.xml");  
   }  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="0c375-1027">下列範例會建立<xref:System.Data.DataTable>包含兩個資料行和 10 個資料列。</span><span class="sxs-lookup"><span data-stu-id="0c375-1027">The following example creates a <xref:System.Data.DataTable> containing two columns and ten rows.</span></span> <span data-ttu-id="0c375-1028">範例會將寫入<xref:System.Data.DataTable>結構描述和資料磁碟。</span><span class="sxs-lookup"><span data-stu-id="0c375-1028">The example writes the <xref:System.Data.DataTable> schema and data to disk.</span></span> <span data-ttu-id="0c375-1029">此範例會建立第二個<xref:System.Data.DataTable>，並呼叫<xref:System.Data.DataTable.ReadXml%2A>来填入結構描述和資料的方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1029">The example creates a second <xref:System.Data.DataTable> and calls the <xref:System.Data.DataTable.ReadXml%2A> method to fill it with schema and data.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlString/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public System.Data.XmlReadMode ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.XmlReadMode ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadXml (reader As XmlReader) As XmlReadMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::XmlReadMode ReadXml(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.ReadXml : System.Xml.XmlReader -&gt; System.Data.XmlReadMode" Usage="dataTable.ReadXml reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="0c375-1030">
            <see cref="T:System.Xml.XmlReader" />，將用來讀取資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1030">The <see cref="T:System.Xml.XmlReader" /> that will be used to read the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1031">使用指定的 <see cref="T:System.Data.DataTable" />，將 XML 結構描述和資料讀入 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1031">Reads XML Schema and Data into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c375-1032">
            <see cref="T:System.Data.XmlReadMode" />，用來讀取資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1032">The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1033">目前<xref:System.Data.DataTable>和其下階會與來自命名的檔案中所提供的資料載入<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1033">The current <xref:System.Data.DataTable> and its descendents are loaded with the data from the file named in the supplied <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="0c375-1034">這個方法的行為是相同<xref:System.Data.DataTable.ReadXml%2A>方法，但也在此情況下，資料會載入僅適用於目前的資料表和子系。</span><span class="sxs-lookup"><span data-stu-id="0c375-1034">The behavior of this method is identical to that of the <xref:System.Data.DataTable.ReadXml%2A> method, except that in this case, data is loaded only for the current table and its descendants.</span></span>  
  
 <span data-ttu-id="0c375-1035"><xref:System.Data.DataTable.ReadXml%2A>方法來讀取資料，或同時提供資料和結構描述讀入<xref:System.Data.DataTable>從 XML 文件，而<xref:System.Data.DataTable.ReadXmlSchema%2A>方法會讀取結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-1035">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span>  
  
 <span data-ttu-id="0c375-1036">請注意，這也適用於<xref:System.Data.DataTable.WriteXml%2A>和<xref:System.Data.DataTable.WriteXmlSchema%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="0c375-1036">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="0c375-1037">要寫入 XML 資料，或結構描述和資料`DataTable`，使用`WriteXml`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1037">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="0c375-1038">若要寫入的結構描述，使用`WriteXmlSchema`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1038">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-1039"><xref:System.InvalidOperationException>如果中的資料行型別將會擲回`DataRow`正在讀取或寫入實作<xref:System.Dynamic.IDynamicMetaObjectProvider>並不會實作<xref:System.Xml.Serialization.IXmlSerializable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1039">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="0c375-1040">如果指定的內嵌結構描述，則內嵌結構描述用來擴充現有的關聯式結構載入資料前。</span><span class="sxs-lookup"><span data-stu-id="0c375-1040">If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</span></span> <span data-ttu-id="0c375-1041">如果有任何衝突 （例如，相同的資料行定義為不同的資料型別相同資料表中） 會引發例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0c375-1041">If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</span></span>  
  
 <span data-ttu-id="0c375-1042">如果未不指定任何內嵌結構描述，就會推斷，視需要透過關聯式結構擴充根據 XML 文件的結構。</span><span class="sxs-lookup"><span data-stu-id="0c375-1042">If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</span></span> <span data-ttu-id="0c375-1043">如果無法推斷透過延伸架構才能公開的所有資料，則會引發例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0c375-1043">If the schema cannot be extended through inference in order to expose all data, an exception is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-1044">`DataSet`不會將 XML 項目關聯與其對應`DataColumn`或`DataTable`合法 XML 字元，例如 ("_") 中序列化的 XML 逸出。</span><span class="sxs-lookup"><span data-stu-id="0c375-1044">The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like ("_") are escaped in the serialized XML.</span></span> <span data-ttu-id="0c375-1045">`DataSet`本身只會在 XML 項目名稱中不合法的 XML 字元的逸出，因此只能取用相同。</span><span class="sxs-lookup"><span data-stu-id="0c375-1045">The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same.</span></span> <span data-ttu-id="0c375-1046">在 XML 項目名稱的合法字元會逸出，當處理時忽略此元素。</span><span class="sxs-lookup"><span data-stu-id="0c375-1046">When legal characters in XML element name are escaped, the element is ignored while processing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-1047">下列範例會建立<xref:System.Data.DataTable>包含兩個資料行和 10 個資料列。</span><span class="sxs-lookup"><span data-stu-id="0c375-1047">The following example creates a <xref:System.Data.DataTable> containing two columns and ten rows.</span></span> <span data-ttu-id="0c375-1048">該範例會寫入<xref:System.Data.DataTable>結構描述和資料<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1048">The example writes the <xref:System.Data.DataTable> schema and data to an <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="0c375-1049">此範例會建立第二個<xref:System.Data.DataTable>，並呼叫<xref:System.Data.DataTable.ReadXml%2A>方法將填入結構描述和資料從<xref:System.Xml.XmlReader>執行個體。</span><span class="sxs-lookup"><span data-stu-id="0c375-1049">The example creates a second <xref:System.Data.DataTable> and calls the <xref:System.Data.DataTable.ReadXml%2A> method to fill it with schema and data from the <xref:System.Xml.XmlReader> instance.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlXmlReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlXmlReader/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlXmlReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlXmlReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadXmlSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-1050">將 XML 結構描述讀入 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1050">Reads an XML schema into the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1051">使用`ReadXmlSchema`方法用來建立的結構描述<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1051">Use the `ReadXmlSchema` method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="0c375-1052">結構描述包含資料表、 關聯和條件約束的定義。</span><span class="sxs-lookup"><span data-stu-id="0c375-1052">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="0c375-1053">若要寫入 XML 文件中的結構描述，請使用<xref:System.Data.DataTable.WriteXmlSchema%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1053">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="0c375-1054">XML 結構描述會根據標準 XSD 解譯。</span><span class="sxs-lookup"><span data-stu-id="0c375-1054">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="0c375-1055">`ReadXmlSchema`通常會再叫用會叫用方法<xref:System.Data.DataTable.ReadXml%2A>方法用來填滿<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1055">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the <xref:System.Data.DataTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.DataSet.ReadXmlSchema" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadXmlSchema">
      <MemberSignature Language="C#" Value="public void ReadXmlSchema (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadXmlSchema(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXmlSchema(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.ReadXmlSchema : System.IO.Stream -&gt; unit" Usage="dataTable.ReadXmlSchema stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="0c375-1056">用來讀取結構描述的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1056">The stream used to read the schema.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1057">使用指定的資料流，將 XML 結構描述讀入 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1057">Reads an XML schema into the <see cref="T:System.Data.DataTable" /> using the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1058">使用<xref:System.Data.DataTable.ReadXmlSchema%2A>方法用來建立的結構描述<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1058">Use the <xref:System.Data.DataTable.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="0c375-1059">結構描述包含資料表、 關聯和條件約束的定義。</span><span class="sxs-lookup"><span data-stu-id="0c375-1059">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="0c375-1060">若要寫入 XML 文件中的結構描述，請使用<xref:System.Data.DataTable.WriteXmlSchema%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1060">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="0c375-1061">XML 結構描述會根據標準 XSD 解譯。</span><span class="sxs-lookup"><span data-stu-id="0c375-1061">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="0c375-1062">如果 msdata:DataType 和 xs: type 類型不相符，可能會發生資料損毀。</span><span class="sxs-lookup"><span data-stu-id="0c375-1062">Data corruption can occur if the msdata:DataType and the xs:type types do not match.</span></span> <span data-ttu-id="0c375-1063">將會擲不回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0c375-1063">No exception will be thrown.</span></span>  
  
 <span data-ttu-id="0c375-1064">`ReadXmlSchema`通常會再叫用會叫用方法<xref:System.Data.DataTable.ReadXml%2A>方法用來填滿<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1064">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="0c375-1065">若要建立使用 XML 結構描述的巢狀關聯性，使用隱含的巢狀項目。</span><span class="sxs-lookup"><span data-stu-id="0c375-1065">To create a nested relation using XML schema, use implicit nested elements.</span></span> <span data-ttu-id="0c375-1066">您也可以設定要使用明確的資料行名稱的巢狀的關聯。</span><span class="sxs-lookup"><span data-stu-id="0c375-1066">You can also configure the nested relation to use explicit column names.</span></span> <span data-ttu-id="0c375-1067">必須在加入巢狀關聯相對應 DataTables 讓隱含巢狀項目。</span><span class="sxs-lookup"><span data-stu-id="0c375-1067">Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-1068">下列主控台應用程式建立新<xref:System.Data.DataTable>，並將寫入至該資料表的結構描述<xref:System.IO.MemoryStream>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1068">The following console application creates a new <xref:System.Data.DataTable>, and writes the schema for that table to a <xref:System.IO.MemoryStream>.</span></span> <span data-ttu-id="0c375-1069">然後，此範例會建立新<xref:System.Data.DataTable>，並從儲存的 XML 結構描述中讀取它的結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-1069">Then, the example creates a new <xref:System.Data.DataTable> and reads its schema from the saved XML schema.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlIOStream#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlIOStream/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlIOStream#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlIOStream/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="ReadXmlSchema">
      <MemberSignature Language="C#" Value="public void ReadXmlSchema (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadXmlSchema(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXmlSchema (reader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXmlSchema(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.ReadXmlSchema : System.IO.TextReader -&gt; unit" Usage="dataTable.ReadXmlSchema reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="0c375-1070">
            <see cref="T:System.IO.TextReader" />，用來讀取結構描述資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1070">The <see cref="T:System.IO.TextReader" /> used to read the schema information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1071">使用指定的 <see cref="T:System.Data.DataTable" />，將 XML 結構描述讀入 <see cref="T:System.IO.TextReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1071">Reads an XML schema into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1072">使用<xref:System.Data.DataTable.ReadXmlSchema%2A>方法用來建立的結構描述<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1072">Use the <xref:System.Data.DataTable.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="0c375-1073">結構描述包含資料表、 關聯和條件約束的定義。</span><span class="sxs-lookup"><span data-stu-id="0c375-1073">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="0c375-1074">若要寫入 XML 文件中的結構描述，請使用<xref:System.Data.DataTable.WriteXmlSchema%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1074">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="0c375-1075">XML 結構描述會根據標準 XSD 解譯。</span><span class="sxs-lookup"><span data-stu-id="0c375-1075">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="0c375-1076">如果 msdata:DataType 和 xs: type 類型不相符，可能會發生資料損毀。</span><span class="sxs-lookup"><span data-stu-id="0c375-1076">Data corruption can occur if the msdata:DataType and the xs:type types do not match.</span></span> <span data-ttu-id="0c375-1077">將會擲不回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0c375-1077">No exception will be thrown.</span></span>  
  
 <span data-ttu-id="0c375-1078">`ReadXmlSchema`通常會再叫用會叫用方法<xref:System.Data.DataTable.ReadXml%2A>方法用來填滿<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1078">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="0c375-1079">若要建立使用 XML 結構描述的巢狀關聯性，使用隱含的巢狀項目。</span><span class="sxs-lookup"><span data-stu-id="0c375-1079">To create a nested relation using XML schema, use implicit nested elements.</span></span> <span data-ttu-id="0c375-1080">您也可以重新設定以使用明確的資料行名稱的巢狀關聯性。</span><span class="sxs-lookup"><span data-stu-id="0c375-1080">You can also reconfigure the nested relation to use explicit column names.</span></span> <span data-ttu-id="0c375-1081">必須在加入巢狀關聯相對應 DataTables 讓隱含巢狀項目。</span><span class="sxs-lookup"><span data-stu-id="0c375-1081">Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-1082">下列主控台應用程式建立新<xref:System.Data.DataTable>，並將寫入至該資料表的結構描述<xref:System.IO.MemoryStream>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1082">The following console application creates a new <xref:System.Data.DataTable>, and writes the schema for that table to a <xref:System.IO.MemoryStream>.</span></span> <span data-ttu-id="0c375-1083">然後，此範例會建立新<xref:System.Data.DataTable>及讀取其結構描述，從已儲存的 XML 結構描述，使用<xref:System.IO.StreamReader>(繼承自<xref:System.IO.TextReader>) 做為其來源。</span><span class="sxs-lookup"><span data-stu-id="0c375-1083">Then, the example creates a new <xref:System.Data.DataTable> and reads its schema from the saved XML schema, using a <xref:System.IO.StreamReader> (which inherits from <xref:System.IO.TextReader>) as its source.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlSchema#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchema/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlSchema#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchema/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)" />
      </Docs>
    </Member>
    <Member MemberName="ReadXmlSchema">
      <MemberSignature Language="C#" Value="public void ReadXmlSchema (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadXmlSchema(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXmlSchema (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXmlSchema(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.ReadXmlSchema : string -&gt; unit" Usage="dataTable.ReadXmlSchema fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="0c375-1084">要從中讀取結構描述資訊的檔案名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1084">The name of the file from which to read the schema information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1085">從指定的檔案，將 XML 結構描述讀入 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1085">Reads an XML schema into the <see cref="T:System.Data.DataTable" /> from the specified file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1086">使用<xref:System.Data.DataTable.ReadXmlSchema%2A>方法用來建立的結構描述<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1086">Use the <xref:System.Data.DataTable.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="0c375-1087">結構描述包含資料表、 關聯和條件約束的定義。</span><span class="sxs-lookup"><span data-stu-id="0c375-1087">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="0c375-1088">若要寫入 XML 文件中的結構描述，請使用<xref:System.Data.DataTable.WriteXmlSchema%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1088">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="0c375-1089">XML 結構描述會根據標準 XSD 解譯。</span><span class="sxs-lookup"><span data-stu-id="0c375-1089">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="0c375-1090">如果 msdata:DataType 和 xs: type 類型不相符，可能會發生資料損毀。</span><span class="sxs-lookup"><span data-stu-id="0c375-1090">Data corruption can occur if the msdata:DataType and the xs:type types do not match.</span></span> <span data-ttu-id="0c375-1091">將會擲不回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0c375-1091">No exception will be thrown.</span></span>  
  
 <span data-ttu-id="0c375-1092">`ReadXmlSchema`通常會再叫用會叫用方法<xref:System.Data.DataTable.ReadXml%2A>方法用來填滿`DataTable`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1092">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the `DataTable`.</span></span>  
  
 <span data-ttu-id="0c375-1093">若要建立使用 XML 結構描述的巢狀關聯性，使用隱含的巢狀項目。</span><span class="sxs-lookup"><span data-stu-id="0c375-1093">To create a nested relation using XML schema, use implicit nested elements.</span></span> <span data-ttu-id="0c375-1094">您也可以重新設定以使用明確的資料行名稱的巢狀關聯性。</span><span class="sxs-lookup"><span data-stu-id="0c375-1094">You can also reconfigure the nested relation to use explicit column names.</span></span> <span data-ttu-id="0c375-1095">必須在加入巢狀關聯相對應 DataTables 讓隱含巢狀項目。</span><span class="sxs-lookup"><span data-stu-id="0c375-1095">Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-1096">下列主控台應用程式建立新<xref:System.Data.DataTable>，並將該資料表的結構描述寫入檔案。</span><span class="sxs-lookup"><span data-stu-id="0c375-1096">The following console application creates a new <xref:System.Data.DataTable>, and writes the schema for that table to a file.</span></span> <span data-ttu-id="0c375-1097">然後，此範例會建立新<xref:System.Data.DataTable>並讀取其結構描述，從已儲存的 XML 結構描述，將檔案做為其來源。</span><span class="sxs-lookup"><span data-stu-id="0c375-1097">Then, the example creates a new <xref:System.Data.DataTable> and reads its schema from the saved XML schema, using the file as its source.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlSchemaString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchemaString/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlSchemaString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchemaString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.ReadXmlSchema(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ReadXmlSchema">
      <MemberSignature Language="C#" Value="public void ReadXmlSchema (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadXmlSchema(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXmlSchema (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXmlSchema(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.ReadXmlSchema : System.Xml.XmlReader -&gt; unit" Usage="dataTable.ReadXmlSchema reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="0c375-1098">
            <see cref="T:System.Xml.XmlReader" />，用來讀取結構描述資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1098">The <see cref="T:System.Xml.XmlReader" /> used to read the schema information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1099">使用指定的 <see cref="T:System.Data.DataTable" />，將 XML 結構描述讀入 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1099">Reads an XML schema into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1100">使用<xref:System.Data.DataTable.ReadXmlSchema%2A>方法用來建立的結構描述<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1100">Use the <xref:System.Data.DataTable.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="0c375-1101">結構描述包含資料表、 關聯和條件約束的定義。</span><span class="sxs-lookup"><span data-stu-id="0c375-1101">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="0c375-1102">若要寫入 XML 文件中的結構描述，請使用<xref:System.Data.DataTable.WriteXmlSchema%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1102">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="0c375-1103">XML 結構描述會根據標準 XSD 解譯。</span><span class="sxs-lookup"><span data-stu-id="0c375-1103">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="0c375-1104">如果 msdata:DataType 和 xs: type 類型不相符，可能會發生資料損毀。</span><span class="sxs-lookup"><span data-stu-id="0c375-1104">Data corruption can occur if the msdata:DataType and the xs:type types do not match.</span></span> <span data-ttu-id="0c375-1105">將會擲不回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0c375-1105">No exception will be thrown.</span></span>  
  
 <span data-ttu-id="0c375-1106">`ReadXmlSchema`通常會再叫用會叫用方法<xref:System.Data.DataTable.ReadXml%2A>方法用來填滿<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1106">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-1107">建立使用 XML 結構描述的巢狀關聯性的方式是將隱含的巢狀項目。</span><span class="sxs-lookup"><span data-stu-id="0c375-1107">The way to create a nested relation using XML schema is to have implicit nested elements.</span></span> <span data-ttu-id="0c375-1108">此外，巢狀的關聯可以重新建立，以使用明確的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="0c375-1108">Additionally, the nested relation could be re-wired, to use explicit column names.</span></span> <span data-ttu-id="0c375-1109">是強制性的隱含巢狀的相對應 DataTables，加入巢狀關聯的項目。</span><span class="sxs-lookup"><span data-stu-id="0c375-1109">It is mandatory for elements to be implicitly nested for the corresponding DataTables to participate in a nested relation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-1110">下列主控台應用程式建立新<xref:System.Data.DataTable>，並將寫入至該資料表的結構描述<xref:System.IO.MemoryStream>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1110">The following console application creates a new <xref:System.Data.DataTable>, and writes the schema for that table to a <xref:System.IO.MemoryStream>.</span></span> <span data-ttu-id="0c375-1111">然後，此範例會建立新<xref:System.Data.DataTable>及讀取其結構描述，從已儲存的 XML 結構描述，使用<xref:System.Xml.XmlTextReader>(繼承自<xref:System.Xml.XmlReader>) 做為其來源。</span><span class="sxs-lookup"><span data-stu-id="0c375-1111">Then, the example creates a new <xref:System.Data.DataTable> and reads its schema from the saved XML schema, using a <xref:System.Xml.XmlTextReader> (which inherits from <xref:System.Xml.XmlReader>) as its source.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlSchemaReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchemaReader/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlSchemaReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchemaReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)" />
      </Docs>
    </Member>
    <Member MemberName="ReadXmlSerializable">
      <MemberSignature Language="C#" Value="protected virtual void ReadXmlSerializable (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReadXmlSerializable(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ReadXmlSerializable (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ReadXmlSerializable(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member ReadXmlSerializable : System.Xml.XmlReader -&gt; unit&#xA;override this.ReadXmlSerializable : System.Xml.XmlReader -&gt; unit" Usage="dataTable.ReadXmlSerializable reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="0c375-1112">
            <see cref="T:System.Xml.XmlReader" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1112">A <see cref="T:System.Xml.XmlReader" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1113">從 XML 資料流讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1113">Reads from an XML stream.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RejectChanges">
      <MemberSignature Language="C#" Value="public void RejectChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RejectChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.RejectChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub RejectChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RejectChanges();" />
      <MemberSignature Language="F#" Value="member this.RejectChanges : unit -&gt; unit" Usage="dataTable.RejectChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c375-1114">復原從資料表載入以來，或前一次呼叫 <see cref="M:System.Data.DataTable.AcceptChanges" /> 以來，對該資料表所做的所有變更。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1114">Rolls back all changes that have been made to the table since it was loaded, or the last time <see cref="M:System.Data.DataTable.AcceptChanges" /> was called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1115">當<xref:System.Data.DataTable.RejectChanges%2A>呼叫時，任何<xref:System.Data.DataRow>仍處於編輯模式的物件取消其編輯。</span><span class="sxs-lookup"><span data-stu-id="0c375-1115">When <xref:System.Data.DataTable.RejectChanges%2A> is called, any <xref:System.Data.DataRow> objects that are still in edit-mode cancel their edits.</span></span> <span data-ttu-id="0c375-1116">新的資料列被移除。</span><span class="sxs-lookup"><span data-stu-id="0c375-1116">New rows are removed.</span></span> <span data-ttu-id="0c375-1117">資料列<xref:System.Data.DataRowState>設定為`Modified`或`Deleted`傳回回其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="0c375-1117">Rows with the <xref:System.Data.DataRowState> set to `Modified` or `Deleted` return back to their original state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-1118">下列範例可讓多項變更<xref:System.Data.DataTable>，但會變更拒絕藉由叫用<xref:System.Data.DataTable.RejectChanges%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1118">The following example makes several changes to a <xref:System.Data.DataTable>, but rejects the changes by invoking the <xref:System.Data.DataTable.RejectChanges%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.RejectChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RejectChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RejectChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RejectChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemotingFormat">
      <MemberSignature Language="C#" Value="public System.Data.SerializationFormat RemotingFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SerializationFormat RemotingFormat" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.RemotingFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property RemotingFormat As SerializationFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SerializationFormat RemotingFormat { System::Data::SerializationFormat get(); void set(System::Data::SerializationFormat value); };" />
      <MemberSignature Language="F#" Value="member this.RemotingFormat : System.Data.SerializationFormat with get, set" Usage="System.Data.DataTable.RemotingFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SerializationFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-1119">取得或設定序列化格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1119">Gets or sets the serialization format.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c375-1120">指定 <see langword="Binary" /> 或 <see langword="Xml" /> 序列化的 <see cref="T:System.Data.SerializationFormat" /> 列舉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1120">A <see cref="T:System.Data.SerializationFormat" /> enumeration specifying either <see langword="Binary" /> or <see langword="Xml" /> serialization.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="dataTable.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c375-1121">重設 <see cref="T:System.Data.DataTable" /> 為它的原始狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1121">Resets the <see cref="T:System.Data.DataTable" /> to its original state.</span>
          </span>
          <span data-ttu-id="0c375-1122">重設會移除資料表的所有資料、索引、關聯和資料行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1122">Reset removes all data, indexes, relations, and columns of the table.</span>
          </span>
          <span data-ttu-id="0c375-1123">如果資料集包含 DataTable，則重設資料表之後，資料表仍將是資料集的一部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1123">If a DataSet includes a DataTable, the table will still be part of the DataSet after the table is reset.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowChanged">
      <MemberSignature Language="C#" Value="public event System.Data.DataRowChangeEventHandler RowChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataRowChangeEventHandler RowChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.RowChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowChanged As DataRowChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataRowChangeEventHandler ^ RowChanged;" />
      <MemberSignature Language="F#" Value="member this.RowChanged : System.Data.DataRowChangeEventHandler " Usage="member this.RowChanged : System.Data.DataRowChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableRowChangedDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-1124">在成功變更 <see cref="T:System.Data.DataRow" /> 之後發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1124">Occurs after a <see cref="T:System.Data.DataRow" /> has been changed successfully.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1125">如需詳細資訊，請參閱 < [DataTable 事件處理](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)。</span><span class="sxs-lookup"><span data-stu-id="0c375-1125">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.RowChanged Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RowChanged Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RowChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RowChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowChanging">
      <MemberSignature Language="C#" Value="public event System.Data.DataRowChangeEventHandler RowChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataRowChangeEventHandler RowChanging" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.RowChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowChanging As DataRowChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataRowChangeEventHandler ^ RowChanging;" />
      <MemberSignature Language="F#" Value="member this.RowChanging : System.Data.DataRowChangeEventHandler " Usage="member this.RowChanging : System.Data.DataRowChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableRowChangingDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-1126">發生在 <see cref="T:System.Data.DataRow" /> 正在變更時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1126">Occurs when a <see cref="T:System.Data.DataRow" /> is changing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1127">如需詳細資訊，請參閱 < [DataTable 事件處理](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)。</span><span class="sxs-lookup"><span data-stu-id="0c375-1127">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.RowChanging Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RowChanging Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RowChanging Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RowChanging Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDeleted">
      <MemberSignature Language="C#" Value="public event System.Data.DataRowChangeEventHandler RowDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataRowChangeEventHandler RowDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.RowDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDeleted As DataRowChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataRowChangeEventHandler ^ RowDeleted;" />
      <MemberSignature Language="F#" Value="member this.RowDeleted : System.Data.DataRowChangeEventHandler " Usage="member this.RowDeleted : System.Data.DataRowChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableRowDeletedDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-1128">發生在資料表中的資料列已經刪除之後。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1128">Occurs after a row in the table has been deleted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1129">如需詳細資訊，請參閱 < [DataTable 事件處理](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)。</span><span class="sxs-lookup"><span data-stu-id="0c375-1129">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.RowDeleted Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RowDeleted Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RowDeleted Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RowDeleted Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDeleting">
      <MemberSignature Language="C#" Value="public event System.Data.DataRowChangeEventHandler RowDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataRowChangeEventHandler RowDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.RowDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDeleting As DataRowChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataRowChangeEventHandler ^ RowDeleting;" />
      <MemberSignature Language="F#" Value="member this.RowDeleting : System.Data.DataRowChangeEventHandler " Usage="member this.RowDeleting : System.Data.DataRowChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableRowDeletingDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-1130">發生在資料表中的資料列將要刪除之前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1130">Occurs before a row in the table is about to be deleted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1131">如需詳細資訊，請參閱 < [DataTable 事件處理](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)。</span><span class="sxs-lookup"><span data-stu-id="0c375-1131">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.RowDeleting Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RowDeleting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RowDeleting Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RowDeleting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public System.Data.DataRowCollection Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataRowCollection Rows" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As DataRowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRowCollection ^ Rows { System::Data::DataRowCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Rows : System.Data.DataRowCollection" Usage="System.Data.DataTable.Rows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableRowsDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-1132">取得屬於這個資料表的資料列集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1132">Gets the collection of rows that belong to this table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c375-1133">
            <see cref="T:System.Data.DataRowCollection" /> (包含 <see cref="T:System.Data.DataRow" /> 物件)，否則為 Null 值 (如果 <see cref="T:System.Data.DataRow" /> 物件不存在)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1133">A <see cref="T:System.Data.DataRowCollection" /> that contains <see cref="T:System.Data.DataRow" /> objects; otherwise a null value if no <see cref="T:System.Data.DataRow" /> objects exist.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1134">若要建立新<xref:System.Data.DataRow>，您必須使用<xref:System.Data.DataTable.NewRow%2A>方法，以傳回新的物件。</span><span class="sxs-lookup"><span data-stu-id="0c375-1134">To create a new <xref:System.Data.DataRow>, you must use the <xref:System.Data.DataTable.NewRow%2A> method to return a new object.</span></span> <span data-ttu-id="0c375-1135">這類物件會自動設定根據定義的結構描述<xref:System.Data.DataTable>透過其集合<xref:System.Data.DataColumn>物件。</span><span class="sxs-lookup"><span data-stu-id="0c375-1135">Such an object is automatically configured according to the schema defined for the <xref:System.Data.DataTable> through its collection of <xref:System.Data.DataColumn> objects.</span></span> <span data-ttu-id="0c375-1136">建立新的資料列，並設定資料列中的每個資料行的值之後, 加入的資料列<xref:System.Data.DataRowCollection>使用`Add`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1136">After creating a new row and setting the values for each column in the row, add the row to the <xref:System.Data.DataRowCollection> using the `Add` method.</span></span>  
  
 <span data-ttu-id="0c375-1137">每個<xref:System.Data.DataRow>集合中代表資料表中的資料列。</span><span class="sxs-lookup"><span data-stu-id="0c375-1137">Each <xref:System.Data.DataRow> in the collection represents a row of data in the table.</span></span> <span data-ttu-id="0c375-1138">若要認可的變更資料列中的資料行的值，您必須叫用<xref:System.Data.DataTable.AcceptChanges%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1138">To commit a change to the value of a column in the row, you must invoke the <xref:System.Data.DataTable.AcceptChanges%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-1139">下面顯示傳回，並設定資料列的兩個的範例。</span><span class="sxs-lookup"><span data-stu-id="0c375-1139">The following shows two examples of returning and setting rows.</span></span> <span data-ttu-id="0c375-1140">第一個範例會使用<xref:System.Data.DataTable.Rows%2A>屬性，並列印每個資料列的每個資料行的值。</span><span class="sxs-lookup"><span data-stu-id="0c375-1140">The first example uses the <xref:System.Data.DataTable.Rows%2A> property and prints the value of each column for every row.</span></span> <span data-ttu-id="0c375-1141">第二個範例會使用<xref:System.Data.DataTable>物件的<xref:System.Data.DataTable.NewRow%2A>方法來建立新<xref:System.Data.DataRow>物件的結構描述<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1141">The second example uses the <xref:System.Data.DataTable> object's <xref:System.Data.DataTable.NewRow%2A> method to create a new <xref:System.Data.DataRow> object with the schema of the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="0c375-1142">設定資料列的值之後, 加入的資料列<xref:System.Data.DataRowCollection>透過`Add`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1142">After setting the row values, the row is added to the <xref:System.Data.DataRowCollection> through the `Add` method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Rows Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Rows Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Rows Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Rows Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="T:System.Data.DataRow" />
        <altmember cref="T:System.Data.DataRowCollection" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Select">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-1143">取得 <see cref="T:System.Data.DataRow" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1143">Gets an array of <see cref="T:System.Data.DataRow" /> objects.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; System.Data.DataRow[]" Usage="dataTable.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c375-1144">取得所有 <see cref="T:System.Data.DataRow" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1144">Gets an array of all <see cref="T:System.Data.DataRow" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c375-1145">
            <see cref="T:System.Data.DataRow" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1145">An array of <see cref="T:System.Data.DataRow" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1146">若要確保適當的排序順序，指定排序準則<xref:System.Data.DataTable.Select%2A>或<xref:System.Data.DataTable.Select%2A>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1146">To ensure the proper sort order, specify sort criteria with <xref:System.Data.DataTable.Select%2A> or <xref:System.Data.DataTable.Select%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-1147">下列範例會傳回的陣列<xref:System.Data.DataRow>物件透過<xref:System.Data.DataTable.Select%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1147">The following example returns an array of <xref:System.Data.DataRow> objects through the <xref:System.Data.DataTable.Select%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Select Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Select Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Select Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Select Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.CaseSensitive" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select (string filterExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] Select(string filterExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Select(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (filterExpression As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ Select(System::String ^ filterExpression);" />
      <MemberSignature Language="F#" Value="member this.Select : string -&gt; System.Data.DataRow[]" Usage="dataTable.Select filterExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterExpression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filterExpression">
          <span data-ttu-id="0c375-1148">用來篩選資料列的準則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1148">The criteria to use to filter the rows.</span>
          </span>
          <span data-ttu-id="0c375-1149">如需如何篩選資料列的範例，請參閱 [DataView RowFilter Syntax [C#]](http://www.csharp-examples.net/dataview-rowfilter/) (DataView RowFilter 語法 [C#])。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1149">For examples on how to filter rows, see [DataView RowFilter Syntax [C#]](http://www.csharp-examples.net/dataview-rowfilter/).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1150">取得所有符合篩選準則之 <see cref="T:System.Data.DataRow" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1150">Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c375-1151">
            <see cref="T:System.Data.DataRow" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1151">An array of <see cref="T:System.Data.DataRow" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1152">若要建立`filterExpression`引數，使用相同的規則適用於<xref:System.Data.DataColumn>類別的<xref:System.Data.DataColumn.Expression%2A>建立篩選的屬性值。</span><span class="sxs-lookup"><span data-stu-id="0c375-1152">To create the `filterExpression` argument, use the same rules that apply to the <xref:System.Data.DataColumn> class's <xref:System.Data.DataColumn.Expression%2A> property value for creating filters.</span></span>  
  
 <span data-ttu-id="0c375-1153">若要確保適當的排序順序，指定排序準則<xref:System.Data.DataTable.Select%2A>或<xref:System.Data.DataTable.Select%2A>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1153">To ensure the proper sort order, specify sort criteria with <xref:System.Data.DataTable.Select%2A> or <xref:System.Data.DataTable.Select%2A>.</span></span>  
  
 <span data-ttu-id="0c375-1154">如果篩選器上的資料行包含 null 值，它將無法結果的一部分。</span><span class="sxs-lookup"><span data-stu-id="0c375-1154">If the column on the filter contains a null value, it will not be part of the result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-1155">下列範例會使用篩選條件運算式傳回的陣列<xref:System.Data.DataRow>物件。</span><span class="sxs-lookup"><span data-stu-id="0c375-1155">The following example uses a filter expression to return an array of <xref:System.Data.DataRow> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Select1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Select1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Select1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Select1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.CaseSensitive" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select (string filterExpression, string sort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] Select(string filterExpression, string sort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Select(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (filterExpression As String, sort As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ Select(System::String ^ filterExpression, System::String ^ sort);" />
      <MemberSignature Language="F#" Value="member this.Select : string * string -&gt; System.Data.DataRow[]" Usage="dataTable.Select (filterExpression, sort)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterExpression" Type="System.String" />
        <Parameter Name="sort" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filterExpression">
          <span data-ttu-id="0c375-1156">用來篩選資料列的準則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1156">The criteria to use to filter the rows.</span>
          </span>
          <span data-ttu-id="0c375-1157">如需如何篩選資料列的範例，請參閱 [DataView RowFilter Syntax [C#]](http://www.csharp-examples.net/dataview-rowfilter/) (DataView RowFilter 語法 [C#])。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1157">For examples on how to filter rows, see [DataView RowFilter Syntax [C#]](http://www.csharp-examples.net/dataview-rowfilter/).</span>
          </span>
        </param>
        <param name="sort">
          <span data-ttu-id="0c375-1158">指定資料行和排序方向的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1158">A string specifying the column and sort direction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1159">取得按照指定排序順序符合篩選條件的所有 <see cref="T:System.Data.DataRow" /> 物件之陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1159">Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter criteria, in the specified sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c375-1160">符合篩選條件運算式的 <see cref="T:System.Data.DataRow" /> 物件之陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1160">An array of <see cref="T:System.Data.DataRow" /> objects matching the filter expression.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1161">表單`filterExpression`引數，使用相同的規則來建立<xref:System.Data.DataColumn>類別的<xref:System.Data.DataColumn.Expression%2A>屬性值。</span><span class="sxs-lookup"><span data-stu-id="0c375-1161">To form the `filterExpression` argument, use the same rules for creating the <xref:System.Data.DataColumn> class's <xref:System.Data.DataColumn.Expression%2A> property value.</span></span> <span data-ttu-id="0c375-1162">`Sort`引數也會使用相同的規則建立類別的<xref:System.Data.DataColumn.Expression%2A>字串。</span><span class="sxs-lookup"><span data-stu-id="0c375-1162">The `Sort` argument also uses the same rules for creating class's <xref:System.Data.DataColumn.Expression%2A> strings.</span></span>  
  
 <span data-ttu-id="0c375-1163">如果篩選器上的資料行包含 null 值，它將無法結果的一部分。</span><span class="sxs-lookup"><span data-stu-id="0c375-1163">If the column on the filter contains a null value, it will not be part of the result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-1164">下列範例會使用篩選條件運算式傳回的陣列<xref:System.Data.DataRow>物件。</span><span class="sxs-lookup"><span data-stu-id="0c375-1164">The following example uses a filter expression to return an array of <xref:System.Data.DataRow> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Select2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Select2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Select2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Select2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.CaseSensitive" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select (string filterExpression, string sort, System.Data.DataViewRowState recordStates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] Select(string filterExpression, string sort, valuetype System.Data.DataViewRowState recordStates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (filterExpression As String, sort As String, recordStates As DataViewRowState) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ Select(System::String ^ filterExpression, System::String ^ sort, System::Data::DataViewRowState recordStates);" />
      <MemberSignature Language="F#" Value="member this.Select : string * string * System.Data.DataViewRowState -&gt; System.Data.DataRow[]" Usage="dataTable.Select (filterExpression, sort, recordStates)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterExpression" Type="System.String" />
        <Parameter Name="sort" Type="System.String" />
        <Parameter Name="recordStates" Type="System.Data.DataViewRowState" />
      </Parameters>
      <Docs>
        <param name="filterExpression">
          <span data-ttu-id="0c375-1165">用來篩選資料列的準則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1165">The criteria to use to filter the rows.</span>
          </span>
          <span data-ttu-id="0c375-1166">如需如何篩選資料列的範例，請參閱 [DataView RowFilter Syntax [C#]](http://www.csharp-examples.net/dataview-rowfilter/) (DataView RowFilter 語法 [C#])。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1166">For examples on how to filter rows, see [DataView RowFilter Syntax [C#]](http://www.csharp-examples.net/dataview-rowfilter/).</span>
          </span>
        </param>
        <param name="sort">
          <span data-ttu-id="0c375-1167">指定資料行和排序方向的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1167">A string specifying the column and sort direction.</span>
          </span>
        </param>
        <param name="recordStates">
          <span data-ttu-id="0c375-1168">其中一個 <see cref="T:System.Data.DataViewRowState" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1168">One of the <see cref="T:System.Data.DataViewRowState" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1169">取得符合篩選條件 (按照排序順序，並符合指定狀態) 的所有 <see cref="T:System.Data.DataRow" /> 物件之陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1169">Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter in the order of the sort that match the specified state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c375-1170">
            <see cref="T:System.Data.DataRow" /> 物件的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1170">An array of <see cref="T:System.Data.DataRow" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1171">表單`filterExpression`引數，使用相同的規則來建立<xref:System.Data.DataColumn>類別的<xref:System.Data.DataColumn.Expression%2A>屬性值。</span><span class="sxs-lookup"><span data-stu-id="0c375-1171">To form the `filterExpression` argument, use the same rules for creating the <xref:System.Data.DataColumn> class's <xref:System.Data.DataColumn.Expression%2A> property value.</span></span> <span data-ttu-id="0c375-1172">`Sort`引數也會使用相同的規則建立類別的<xref:System.Data.DataColumn.Expression%2A>字串。</span><span class="sxs-lookup"><span data-stu-id="0c375-1172">The `Sort` argument also uses the same rules for creating class's <xref:System.Data.DataColumn.Expression%2A> strings.</span></span>  
  
 <span data-ttu-id="0c375-1173">如果篩選器上的資料行包含 null 值，它將無法結果的一部分。</span><span class="sxs-lookup"><span data-stu-id="0c375-1173">If the column on the filter contains a null value, it will not be part of the result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-1174">下列範例會使用篩選條件運算式和記錄狀態，要傳回的陣列<xref:System.Data.DataRow>物件。</span><span class="sxs-lookup"><span data-stu-id="0c375-1174">The following example uses a filter expression and record state to return an array of <xref:System.Data.DataRow> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Select3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Select3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Select3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Select3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : System.ComponentModel.ISite with get, set" Usage="System.Data.DataTable.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-1175">取得或設定 <see cref="T:System.Data.DataTable" /> 的 <see cref="T:System.ComponentModel.ISite" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1175">Gets or sets an <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c375-1176">
            <see cref="T:System.ComponentModel.ISite" /> 的 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1176">An <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1177">站台繫結<xref:System.ComponentModel.Component>至<xref:System.ComponentModel.Container>和啟用它們，之間的通訊，以及提供讓要管理其元件的容器。</span><span class="sxs-lookup"><span data-stu-id="0c375-1177">Sites bind a <xref:System.ComponentModel.Component> to a <xref:System.ComponentModel.Container> and enable communication between them, as well as provide a way for the container to manage its components.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IListSource::ContainsListCollection { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-1178">如需這個成員的說明，請參閱 <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1178">For a description of this member, see <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c375-1179">如果集合為 <see cref="T:System.Collections.IList" /> 物件的集合，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1179">
              <see langword="true" /> if the collection is a collection of <see cref="T:System.Collections.IList" /> objects; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1180">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="0c375-1180">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0c375-1181">只有在 <xref:System.Data.DataTable> 執行個體轉換成 <xref:System.ComponentModel.IListSource> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="0c375-1181">It can be used only when the <xref:System.Data.DataTable> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c375-1182">如需這個成員的說明，請參閱 <see cref="M:System.ComponentModel.IListSource.GetList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1182">For a description of this member, see <see cref="M:System.ComponentModel.IListSource.GetList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c375-1183">
            <see cref="T:System.Collections.IList" />，從物件繫結至資料來源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1183">An <see cref="T:System.Collections.IList" /> that can be bound to a data source from the object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1184">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="0c375-1184">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0c375-1185">只有在 <xref:System.Data.DataTable> 執行個體轉換成 <xref:System.ComponentModel.IListSource> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="0c375-1185">It can be used only when the <xref:System.Data.DataTable> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.GetSchema">
      <MemberSignature Language="C#" Value="System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Xml.Schema.XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema" />
      <MemberSignature Language="VB.NET" Value="Function GetSchema () As XmlSchema Implements IXmlSerializable.GetSchema" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Xml::Schema::XmlSchema ^ System.Xml.Serialization.IXmlSerializable.GetSchema() = System::Xml::Serialization::IXmlSerializable::GetSchema;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.GetSchema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c375-1186">如需這個成員的說明，請參閱 <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1186">For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c375-1187">
            <see cref="T:System.Xml.Schema.XmlSchema" />，描述物件的 XML 表示，該物件由 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> 方法產生，由 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> 方法取用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1187">An <see cref="T:System.Xml.Schema.XmlSchema" /> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1188">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="0c375-1188">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0c375-1189">只有在 <xref:System.Data.DataSet> 執行個體轉換成 <xref:System.Xml.Serialization.IXmlSerializable> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="0c375-1189">It can be used only when the <xref:System.Data.DataSet> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.ReadXml">
      <MemberSignature Language="C#" Value="void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Xml.Serialization.IXmlSerializable.ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Sub ReadXml (reader As XmlReader) Implements IXmlSerializable.ReadXml" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Xml.Serialization.IXmlSerializable.ReadXml(System::Xml::XmlReader ^ reader) = System::Xml::Serialization::IXmlSerializable::ReadXml;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="0c375-1190">XmlReader。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1190">An XmlReader.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1191">如需這個成員的說明，請參閱 <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1191">For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1192">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="0c375-1192">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0c375-1193">只有在 <xref:System.Data.DataSet> 執行個體轉換成 <xref:System.Xml.Serialization.IXmlSerializable> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="0c375-1193">It can be used only when the <xref:System.Data.DataSet> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.WriteXml">
      <MemberSignature Language="C#" Value="void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Xml.Serialization.IXmlSerializable.WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Sub WriteXml (writer As XmlWriter) Implements IXmlSerializable.WriteXml" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Xml.Serialization.IXmlSerializable.WriteXml(System::Xml::XmlWriter ^ writer) = System::Xml::Serialization::IXmlSerializable::WriteXml;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="0c375-1194">XmlWriter。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1194">An XmlWriter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1195">如需這個成員的說明，請參閱 <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1195">For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1196">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="0c375-1196">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0c375-1197">只有在 <xref:System.Data.DataSet> 執行個體轉換成 <xref:System.Xml.Serialization.IXmlSerializable> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="0c375-1197">It can be used only when the <xref:System.Data.DataSet> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableCleared">
      <MemberSignature Language="C#" Value="public event System.Data.DataTableClearEventHandler TableCleared;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataTableClearEventHandler TableCleared" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.TableCleared" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TableCleared As DataTableClearEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataTableClearEventHandler ^ TableCleared;" />
      <MemberSignature Language="F#" Value="member this.TableCleared : System.Data.DataTableClearEventHandler " Usage="member this.TableCleared : System.Data.DataTableClearEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTableClearEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-1198">發生在清除 <see cref="T:System.Data.DataTable" /> 之後。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1198">Occurs after a <see cref="T:System.Data.DataTable" /> is cleared.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1199"><xref:System.Data.DataTable.TableCleared>事件引發之後的所有資料列已成功清除之前，立即<xref:System.Data.DataTable.Clear%2A>方法會將控制項傳回至呼叫端。</span><span class="sxs-lookup"><span data-stu-id="0c375-1199">The <xref:System.Data.DataTable.TableCleared> event is fired immediately after all rows have been successfully cleared but before the <xref:System.Data.DataTable.Clear%2A> method returns control back to the caller.</span></span> <span data-ttu-id="0c375-1200"><xref:System.Data.DataTable.TableCleared>如果清除作業期間發生任何例外狀況，不會引發事件。</span><span class="sxs-lookup"><span data-stu-id="0c375-1200">The <xref:System.Data.DataTable.TableCleared> event is not fired if there are any exceptions during the clear operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableClearing">
      <MemberSignature Language="C#" Value="public event System.Data.DataTableClearEventHandler TableClearing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataTableClearEventHandler TableClearing" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.TableClearing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TableClearing As DataTableClearEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataTableClearEventHandler ^ TableClearing;" />
      <MemberSignature Language="F#" Value="member this.TableClearing : System.Data.DataTableClearEventHandler " Usage="member this.TableClearing : System.Data.DataTableClearEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTableClearEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-1201">發生於清除 <see cref="T:System.Data.DataTable" /> 時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1201">Occurs when a <see cref="T:System.Data.DataTable" /> is cleared.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1202"><xref:System.Data.DataTable.TableClearing>引發事件的處理之前<xref:System.Data.DataTable.Clear%2A>作業開始。</span><span class="sxs-lookup"><span data-stu-id="0c375-1202">The <xref:System.Data.DataTable.TableClearing> event is fired before processing of the <xref:System.Data.DataTable.Clear%2A> operation begins.</span></span> <span data-ttu-id="0c375-1203">時會引發此事件一律時<xref:System.Data.DataTable.Clear%2A>叫用方法時，即使資料表包含零個資料列。</span><span class="sxs-lookup"><span data-stu-id="0c375-1203">This event is always fired when the <xref:System.Data.DataTable.Clear%2A> method is invoked, even if the table contains zero rows.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableName">
      <MemberSignature Language="C#" Value="public string TableName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TableName" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.TableName" />
      <MemberSignature Language="VB.NET" Value="Public Property TableName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TableName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TableName : string with get, set" Usage="System.Data.DataTable.TableName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataTableTableNameDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-1204">取得或設定 <see cref="T:System.Data.DataTable" /> 的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1204">Gets or sets the name of the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0c375-1205">
            <see cref="T:System.Data.DataTable" /> 的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1205">The name of the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1206"><xref:System.Data.DataTable.TableName%2A>用來傳回此資料表，從父代<xref:System.Data.DataSet>物件的<xref:System.Data.DataTableCollection>(由<xref:System.Data.DataSet.Tables%2A>屬性)。</span><span class="sxs-lookup"><span data-stu-id="0c375-1206">The <xref:System.Data.DataTable.TableName%2A> is used to return this table from the parent <xref:System.Data.DataSet> object's <xref:System.Data.DataTableCollection> (returned by the <xref:System.Data.DataSet.Tables%2A> property).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-1207">下列範例會列印<xref:System.Data.DataTable.TableName%2A>集合中的每個資料表<xref:System.Data.DataTable>物件。</span><span class="sxs-lookup"><span data-stu-id="0c375-1207">The following example prints the <xref:System.Data.DataTable.TableName%2A> for each table in a collection of <xref:System.Data.DataTable> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.TableName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.TableName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.TableName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.TableName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0c375-1208">
            <see langword="null" /> 或空字串 ("") 會傳入，並且這個資料表屬於集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1208">
              <see langword="null" /> or empty string ("") is passed in and this table belongs to a collection.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DuplicateNameException">
          <span data-ttu-id="0c375-1209">資料表屬於已經具有相同名稱之資料表的集合 </span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1209">The table belongs to a collection that already has a table with the same name.</span>
          </span>
          <span data-ttu-id="0c375-1210">(比較是區分大小寫的)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1210">(Comparison is case-sensitive).</span>
          </span>
        </exception>
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="P:System.Data.DataSet.Tables" />
      </Docs>
    </Member>
    <Member MemberName="TableNewRow">
      <MemberSignature Language="C#" Value="public event System.Data.DataTableNewRowEventHandler TableNewRow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataTableNewRowEventHandler TableNewRow" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.TableNewRow" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TableNewRow As DataTableNewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataTableNewRowEventHandler ^ TableNewRow;" />
      <MemberSignature Language="F#" Value="member this.TableNewRow : System.Data.DataTableNewRowEventHandler " Usage="member this.TableNewRow : System.Data.DataTableNewRowEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTableNewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-1211">發生在插入新的 <see cref="T:System.Data.DataRow" /> 時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1211">Occurs when a new <see cref="T:System.Data.DataRow" /> is inserted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1212">引發之後的新<xref:System.Data.DataRow>使用已建立<xref:System.Data.DataTable.NewRow%2A>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1212">Fires after a new <xref:System.Data.DataRow> has been created using <xref:System.Data.DataTable.NewRow%2A>.</span></span> <span data-ttu-id="0c375-1213">時會引發此事件之前所叫用`NewRow`方法會傳回。</span><span class="sxs-lookup"><span data-stu-id="0c375-1213">This event is fired before the invoked `NewRow` method returns.</span></span> <span data-ttu-id="0c375-1214">新<xref:System.Data.DataRow>執行個體卸離後，尚未加入至集合。</span><span class="sxs-lookup"><span data-stu-id="0c375-1214">The new <xref:System.Data.DataRow> instance is detached; it has not been added to the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="dataTable.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0c375-1215">如果存在串連的字串，則取得 <see cref="P:System.Data.DataTable.TableName" /> 和 <see cref="P:System.Data.DataTable.DisplayExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1215">Gets the <see cref="P:System.Data.DataTable.TableName" /> and <see cref="P:System.Data.DataTable.DisplayExpression" />, if there is one as a concatenated string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0c375-1216">字串，由 <see cref="P:System.Data.DataTable.TableName" /> 和 <see cref="P:System.Data.DataTable.DisplayExpression" /> 值組成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1216">A string consisting of the <see cref="P:System.Data.DataTable.TableName" /> and the <see cref="P:System.Data.DataTable.DisplayExpression" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1217">取得<xref:System.Data.DataTable.TableName%2A>並<xref:System.Data.DataTable.DisplayExpression%2A>如<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1217">Gets the <xref:System.Data.DataTable.TableName%2A> and <xref:System.Data.DataTable.DisplayExpression%2A> for the <xref:System.Data.DataTable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-1218">下列範例會傳回<xref:System.Data.DataTable.TableName%2A>並<xref:System.Data.DataTable.DisplayExpression%2A>使用<xref:System.Data.DataTable.ToString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1218">The following example returns the <xref:System.Data.DataTable.TableName%2A> and <xref:System.Data.DataTable.DisplayExpression%2A> using the <xref:System.Data.DataTable.ToString%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteXml">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-1219">將 <see cref="T:System.Data.DataTable" /> 的目前內容寫成 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1219">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1220"><xref:System.Data.DataTable.WriteXml%2A>方法來撰寫資料，或同時提供資料和結構描述<xref:System.Data.DataTable>XML 文件，而<xref:System.Data.DataTable.WriteXmlSchema%2A>方法會將寫入的結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-1220">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="0c375-1221">若要寫入資料和結構描述，使用其中一個多載，包括<xref:System.Data.XmlWriteMode>參數，並將其值設定為`WriteSchema`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1221">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="0c375-1222">請注意，這也適用於<xref:System.Data.DataTable.ReadXml%2A>和<xref:System.Data.DataTable.ReadXmlSchema%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="0c375-1222">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="0c375-1223">若要讀取 XML 資料，或結構描述和資料讀入`DataTable`，使用`ReadXml`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1223">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="0c375-1224">若要讀取的結構描述，使用`ReadXmlSchema`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1224">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-1225"><xref:System.InvalidOperationException>如果中的資料行型別將會擲回`DataRow`正在讀取或寫入實作<xref:System.Dynamic.IDynamicMetaObjectProvider>並不會實作<xref:System.Xml.Serialization.IXmlSerializable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1225">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-1226">下列主控台應用程式會建立兩個<xref:System.Data.DataTable>執行個體，會新增至每個<xref:System.Data.DataSet>，會建立<xref:System.Data.DataRelation>相關的兩個資料表，然後再使用<xref:System.Data.DataTable.WriteXml%2A>方法來寫入父資料表內包含的資料<xref:System.IO.TextWriter>.</span><span class="sxs-lookup"><span data-stu-id="0c375-1226">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXml%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="0c375-1227">設定時，此範例會示範行為`writeHierarchy`其值的每個參數。</span><span class="sxs-lookup"><span data-stu-id="0c375-1227">The example demonstrates the behavior when setting the `writeHierarchy` parameter to each of its values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-1228">此範例示範如何使用其中一種 WriteXml 多載版本。</span><span class="sxs-lookup"><span data-stu-id="0c375-1228">This example shows how to use one of the overloaded versions of WriteXml.</span></span> <span data-ttu-id="0c375-1229">如需可能會提供其他範例，請參閱個別的多載的主題。</span><span class="sxs-lookup"><span data-stu-id="0c375-1229">For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXmlOverload#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlOverload/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXmlOverload#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlOverload/VB/source.vb#1)]  
  
 <span data-ttu-id="0c375-1230">此範例會在主控台視窗中顯示以下輸出：</span><span class="sxs-lookup"><span data-stu-id="0c375-1230">The example displays the following output in the console window:</span></span>  
  
```  
==============================  
Customer table, without hierarchy  
==============================  
<NewDataSet>  
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema  
" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
      <xs:complexType>  
        <xs:choice minOccurs="0" maxOccurs="unbounded">  
          <xs:element name="Table1">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="ID" type="xs:int" />  
                <xs:element name="Name" type="xs:string" minOccurs="0" />  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
        </xs:choice>  
      </xs:complexType>  
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table1" />  
        <xs:field xpath="ID" />  
      </xs:unique>  
    </xs:element>  
  </xs:schema>  
  <Table1>  
    <ID>1</ID>  
    <Name>Mary</Name>  
  </Table1>  
  <Table1>  
    <ID>2</ID>  
    <Name>Andy</Name>  
  </Table1>  
  <Table1>  
    <ID>3</ID>  
    <Name>Peter</Name>  
  </Table1>  
  <Table1>  
    <ID>4</ID>  
    <Name>Russ</Name>  
  </Table1>  
</NewDataSet>  
==============================  
Customer table, with hierarchy  
==============================  
<NewDataSet>  
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema  
" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
      <xs:complexType>  
        <xs:choice minOccurs="0" maxOccurs="unbounded">  
          <xs:element name="Table1">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="ID" type="xs:int" />  
                <xs:element name="Name" type="xs:string" minOccurs="0" />  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
          <xs:element name="Table2">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="OrderID" type="xs:int" />  
                <xs:element name="CustomerID" type="xs:int" minOccurs="0" />  
                <xs:element name="OrderDate" type="xs:dateTime" minOccurs="0" />  
  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
        </xs:choice>  
      </xs:complexType>  
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table1" />  
        <xs:field xpath="ID" />  
      </xs:unique>  
      <xs:unique name="Table2_Constraint1" msdata:ConstraintName="Constraint1" m  
sdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table2" />  
        <xs:field xpath="OrderID" />  
      </xs:unique>  
      <xs:keyref name="CustomerOrder" refer="Constraint1">  
        <xs:selector xpath=".//Table2" />  
        <xs:field xpath="CustomerID" />  
      </xs:keyref>  
    </xs:element>  
  </xs:schema>  
  <Table1>  
    <ID>1</ID>  
    <Name>Mary</Name>  
  </Table1>  
  <Table1>  
    <ID>2</ID>  
    <Name>Andy</Name>  
  </Table1>  
  <Table1>  
    <ID>3</ID>  
    <Name>Peter</Name>  
  </Table1>  
  <Table1>  
    <ID>4</ID>  
    <Name>Russ</Name>  
  </Table1>  
  <Table2>  
    <OrderID>1</OrderID>  
    <CustomerID>1</CustomerID>  
    <OrderDate>2003-12-02T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>2</OrderID>  
    <CustomerID>1</CustomerID>  
    <OrderDate>2004-01-03T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>3</OrderID>  
    <CustomerID>2</CustomerID>  
    <OrderDate>2004-11-13T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>4</OrderID>  
    <CustomerID>3</CustomerID>  
    <OrderDate>2004-05-16T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>5</OrderID>  
    <CustomerID>3</CustomerID>  
    <OrderDate>2004-05-22T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>6</OrderID>  
    <CustomerID>4</CustomerID>  
    <OrderDate>2004-06-15T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
</NewDataSet>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.Stream -&gt; unit" Usage="dataTable.WriteXml stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="0c375-1231">將資料寫入其中的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1231">The stream to which the data will be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1232">使用指定的 <see cref="T:System.IO.Stream" />，將 <see cref="T:System.Data.DataTable" /> 目前的內容寫入為 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1232">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1233"><xref:System.Data.DataTable.WriteXml%2A>方法來撰寫資料，或同時提供資料和結構描述<xref:System.Data.DataTable>XML 文件，而<xref:System.Data.DataTable.WriteXmlSchema%2A>方法會將寫入的結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-1233">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="0c375-1234">若要寫入資料和結構描述，使用其中一個多載，其中包含<xref:System.Data.XmlWriteMode>參數，並將其值設定為`WriteSchema`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1234">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="0c375-1235">請注意，這也適用於<xref:System.Data.DataTable.ReadXml%2A>和<xref:System.Data.DataTable.ReadXmlSchema%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="0c375-1235">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="0c375-1236">若要讀取 XML 資料，或結構描述和資料讀入`DataTable`，使用`ReadXml`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1236">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="0c375-1237">若要讀取的結構描述，使用`ReadXmlSchema`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1237">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-1238"><xref:System.InvalidOperationException>如果中的資料行型別將會擲回`DataRow`正在讀取或寫入實作<xref:System.Dynamic.IDynamicMetaObjectProvider>並不會實作<xref:System.Xml.Serialization.IXmlSerializable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1238">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.TextWriter -&gt; unit" Usage="dataTable.WriteXml writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="0c375-1239">用來撰寫內容的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1239">The <see cref="T:System.IO.TextWriter" /> with which to write the content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1240">使用指定的 <see cref="T:System.IO.TextWriter" />，將 <see cref="T:System.Data.DataTable" /> 目前的內容寫入為 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1240">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1241"><xref:System.Data.DataTable.WriteXml%2A>方法來撰寫資料，或同時提供資料和結構描述<xref:System.Data.DataTable>XML 文件，而<xref:System.Data.DataTable.WriteXmlSchema%2A>方法會將寫入的結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-1241">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="0c375-1242">若要寫入資料和結構描述，使用其中一個多載，其中包含<xref:System.Data.XmlWriteMode>參數，並將其值設定為`WriteSchema`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1242">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="0c375-1243">請注意，這也適用於<xref:System.Data.DataTable.ReadXml%2A>和<xref:System.Data.DataTable.ReadXmlSchema%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="0c375-1243">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="0c375-1244">若要讀取 XML 資料，或結構描述和資料讀入`DataTable`，使用`ReadXml`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1244">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="0c375-1245">若要讀取的結構描述，使用`ReadXmlSchema`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1245">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-1246"><xref:System.InvalidOperationException>如果中的資料行型別將會擲回`DataRow`正在讀取或寫入實作<xref:System.Dynamic.IDynamicMetaObjectProvider>並不會實作<xref:System.Xml.Serialization.IXmlSerializable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1246">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : string -&gt; unit" Usage="dataTable.WriteXml fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="0c375-1247">要寫入 XML 資料的檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1247">The file to which to write the XML data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1248">使用指定的檔案，將 <see cref="T:System.Data.DataTable" /> 目前的內容寫成 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1248">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1249"><xref:System.Data.DataTable.WriteXml%2A>方法來撰寫資料，或同時提供資料和結構描述<xref:System.Data.DataTable>XML 文件，而<xref:System.Data.DataTable.WriteXmlSchema%2A>方法會將寫入的結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-1249">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="0c375-1250">若要寫入資料和結構描述，使用其中一個多載，其中包含<xref:System.Data.XmlWriteMode>參數，並將其值設定為`WriteSchema`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1250">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="0c375-1251">請注意，這也適用於<xref:System.Data.DataTable.ReadXml%2A>和<xref:System.Data.DataTable.ReadXmlSchema%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="0c375-1251">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="0c375-1252">若要讀取 XML 資料，或結構描述和資料讀入`DataTable`，使用`ReadXml`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1252">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="0c375-1253">若要讀取的結構描述，使用`ReadXmlSchema`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1253">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-1254"><xref:System.InvalidOperationException>如果中的資料行型別將會擲回`DataRow`正在讀取或寫入實作<xref:System.Dynamic.IDynamicMetaObjectProvider>並不會實作<xref:System.Xml.Serialization.IXmlSerializable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1254">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.Xml.XmlWriter -&gt; unit" Usage="dataTable.WriteXml writer" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="0c375-1255">要用來寫入內容的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1255">The <see cref="T:System.Xml.XmlWriter" /> with which to write the contents.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1256">使用指定的 <see cref="T:System.Xml.XmlWriter" />，將 <see cref="T:System.Data.DataTable" /> 目前的內容寫入為 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1256">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1257"><xref:System.Data.DataTable.WriteXml%2A>方法來撰寫資料，或同時提供資料和結構描述<xref:System.Data.DataTable>XML 文件，而<xref:System.Data.DataTable.WriteXmlSchema%2A>方法會將寫入的結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-1257">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="0c375-1258">若要寫入資料和結構描述，使用其中一個多載，包括<xref:System.Data.XmlWriteMode>參數，並將其值設定為`WriteSchema`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1258">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="0c375-1259">請注意，這也適用於<xref:System.Data.DataTable.ReadXml%2A>和<xref:System.Data.DataTable.ReadXmlSchema%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="0c375-1259">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="0c375-1260">若要讀取 XML 資料，或結構描述和資料讀入`DataTable`，使用`ReadXml`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1260">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="0c375-1261">若要讀取的結構描述，使用`ReadXmlSchema`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1261">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-1262"><xref:System.InvalidOperationException>如果中的資料行型別將會擲回`DataRow`正在讀取或寫入實作<xref:System.Dynamic.IDynamicMetaObjectProvider>並不會實作<xref:System.Xml.Serialization.IXmlSerializable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1262">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.Stream stream, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.Stream stream, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::Stream ^ stream, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.Stream * bool -&gt; unit" Usage="dataTable.WriteXml (stream, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="0c375-1263">將資料寫入其中的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1263">The stream to which the data will be written.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="0c375-1264">如果為 <see langword="true" />，就會寫入目前資料表及它所有子代的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1264">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="0c375-1265">如果為 <see langword="false" /> (預設值)，就只會寫入目前資料表的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1265">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1266">使用指定的 <see cref="T:System.IO.Stream" />，將 <see cref="T:System.Data.DataTable" /> 目前的內容寫入為 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1266">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="0c375-1267">若要儲存資料表及其所有子系的資料，請將 <paramref name="writeHierarchy" /> 參數設定為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1267">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1268">使用<xref:System.Data.DataTable.WriteXmlSchema%2A>方法來寫入的結構描述<xref:System.Data.DataTable>XML 文件。</span><span class="sxs-lookup"><span data-stu-id="0c375-1268">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="0c375-1269">結構描述包含資料表、 關聯和條件約束的定義。</span><span class="sxs-lookup"><span data-stu-id="0c375-1269">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="0c375-1270">XML 結構描述是使用 XSD 標準來撰寫。</span><span class="sxs-lookup"><span data-stu-id="0c375-1270">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="0c375-1271">若要將資料寫入 XML 文件中，使用<xref:System.Data.DataTable.WriteXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1271">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="0c375-1272">通常`WriteXml`方法寫入只針對目前資料表的資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-1272">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="0c375-1273">要寫入目前資料表及其所有子系，資料相關的資料表，請呼叫方法`writeHierarchy`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1273">To write the data for the current table and all of its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-1274"><xref:System.InvalidOperationException>如果中的資料行型別將會擲回`DataRow`正在讀取或寫入實作<xref:System.Dynamic.IDynamicMetaObjectProvider>並不會實作<xref:System.Xml.Serialization.IXmlSerializable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1274">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.Stream stream, System.Data.XmlWriteMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.Stream stream, valuetype System.Data.XmlWriteMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::Stream ^ stream, System::Data::XmlWriteMode mode);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.Stream * System.Data.XmlWriteMode -&gt; unit" Usage="dataTable.WriteXml (stream, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="0c375-1275">將資料寫入其中的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1275">The stream to which the data will be written.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="0c375-1276">其中一個 <see cref="T:System.Data.XmlWriteMode" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1276">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1277">使用指定的 <see cref="T:System.Data.DataTable" />，寫入 <see cref="T:System.Data.XmlWriteMode" /> 的目前資料 (並選擇性寫入結構描述) 至指定的檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1277">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> to the specified file using the specified <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="0c375-1278">若要寫入結構描述，請設定 <paramref name="mode" /> 參數的值為 <see langword="WriteSchema" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1278">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1279"><xref:System.Data.DataTable.WriteXml%2A>方法來撰寫資料，或同時提供資料和結構描述<xref:System.Data.DataTable>XML 文件，而<xref:System.Data.DataTable.WriteXmlSchema%2A>方法會將寫入的結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-1279">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="0c375-1280">若要寫入資料和結構描述，使用其中一個多載，其中包含<xref:System.Data.XmlWriteMode>參數，並將其值設定為`WriteSchema`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1280">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="0c375-1281">請注意，這也適用於<xref:System.Data.DataTable.ReadXml%2A>和<xref:System.Data.DataTable.ReadXmlSchema%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="0c375-1281">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="0c375-1282">若要讀取 XML 資料，或結構描述和資料讀入`DataTable`，使用`ReadXml`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1282">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="0c375-1283">若要讀取的結構描述，使用`ReadXmlSchema`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1283">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-1284"><xref:System.InvalidOperationException>如果中的資料行型別將會擲回`DataRow`正在讀取或寫入實作<xref:System.Dynamic.IDynamicMetaObjectProvider>並不會實作<xref:System.Xml.Serialization.IXmlSerializable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1284">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.TextWriter writer, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.TextWriter writer, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As TextWriter, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::TextWriter ^ writer, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.TextWriter * bool -&gt; unit" Usage="dataTable.WriteXml (writer, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="0c375-1285">用來撰寫內容的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1285">The <see cref="T:System.IO.TextWriter" /> with which to write the content.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="0c375-1286">如果為 <see langword="true" />，就會寫入目前資料表及它所有子代的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1286">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="0c375-1287">如果為 <see langword="false" /> (預設值)，就只會寫入目前資料表的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1287">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1288">使用指定的 <see cref="T:System.IO.TextWriter" />，將 <see cref="T:System.Data.DataTable" /> 目前的內容寫入為 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1288">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.TextWriter" />.</span>
          </span>
          <span data-ttu-id="0c375-1289">若要儲存資料表及其所有子系的資料，請將 <paramref name="writeHierarchy" /> 參數設定為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1289">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1290"><xref:System.Data.DataTable.WriteXml%2A>方法來撰寫資料，或同時提供資料和結構描述<xref:System.Data.DataTable>XML 文件，而<xref:System.Data.DataTable.WriteXmlSchema%2A>方法會將寫入的結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-1290">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="0c375-1291">若要寫入資料和結構描述，使用其中一個多載，其中包含<xref:System.Data.XmlWriteMode>參數，並將其值設定為`WriteSchema`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1291">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="0c375-1292">通常`WriteXml`方法寫入只針對目前資料表的資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-1292">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="0c375-1293">若要寫入目前資料表和其所有子系、 相關資料表的資料，使用呼叫方法`writeHierarchy`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1293">To write the data for the current table and all its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-1294"><xref:System.InvalidOperationException>如果中的資料行型別將會擲回`DataRow`正在讀取或寫入實作<xref:System.Dynamic.IDynamicMetaObjectProvider>並不會實作<xref:System.Xml.Serialization.IXmlSerializable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1294">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-1295">下列主控台應用程式會建立兩個<xref:System.Data.DataTable>執行個體，會新增至每個<xref:System.Data.DataSet>，會建立<xref:System.Data.DataRelation>相關的兩個資料表，然後再使用<xref:System.Data.DataTable.WriteXml%2A>方法來寫入父資料表內包含的資料<xref:System.IO.TextWriter>.</span><span class="sxs-lookup"><span data-stu-id="0c375-1295">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXml%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="0c375-1296">設定時，此範例會示範行為`writeHierarchy`參數來`true`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1296">The example demonstrates the behavior when setting the `writeHierarchy` parameter to `true`.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXml#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXml/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXml#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXml/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.TextWriter writer, System.Data.XmlWriteMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.TextWriter writer, valuetype System.Data.XmlWriteMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As TextWriter, mode As XmlWriteMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::TextWriter ^ writer, System::Data::XmlWriteMode mode);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.TextWriter * System.Data.XmlWriteMode -&gt; unit" Usage="dataTable.WriteXml (writer, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="0c375-1297">寫入文件所用的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1297">The <see cref="T:System.IO.TextWriter" /> used to write the document.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="0c375-1298">其中一個 <see cref="T:System.Data.XmlWriteMode" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1298">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1299">使用指定的 <see cref="T:System.Data.DataTable" /> 和 <see cref="T:System.IO.TextWriter" />，寫入 <see cref="T:System.Data.XmlWriteMode" /> 的目前資料，並選擇性寫入結構描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1299">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextWriter" /> and <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="0c375-1300">若要寫入結構描述，請設定 <paramref name="mode" /> 參數的值為 <see langword="WriteSchema" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1300">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1301"><xref:System.Data.DataTable.WriteXml%2A>方法來撰寫資料，或同時提供資料和結構描述<xref:System.Data.DataTable>XML 文件，而<xref:System.Data.DataTable.WriteXmlSchema%2A>方法會將寫入的結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-1301">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="0c375-1302">若要寫入資料和結構描述，使用其中一個多載，其中包含<xref:System.Data.XmlWriteMode>參數，並將其值設定為`WriteSchema`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1302">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="0c375-1303">請注意，這也適用於<xref:System.Data.DataTable.ReadXml%2A>和<xref:System.Data.DataTable.ReadXmlSchema%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="0c375-1303">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="0c375-1304">若要讀取 XML 資料，或結構描述和資料讀入`DataTable`，使用`ReadXml`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1304">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="0c375-1305">若要讀取的結構描述，使用`ReadXmlSchema`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1305">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-1306"><xref:System.InvalidOperationException>如果中的資料行型別將會擲回`DataRow`正在讀取或寫入實作<xref:System.Dynamic.IDynamicMetaObjectProvider>並不會實作<xref:System.Xml.Serialization.IXmlSerializable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1306">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (string fileName, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(string fileName, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (fileName As String, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::String ^ fileName, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : string * bool -&gt; unit" Usage="dataTable.WriteXml (fileName, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="0c375-1307">要寫入 XML 資料的檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1307">The file to which to write the XML data.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="0c375-1308">如果為 <see langword="true" />，就會寫入目前資料表及它所有子代的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1308">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="0c375-1309">如果為 <see langword="false" /> (預設值)，就只會寫入目前資料表的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1309">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1310">使用指定的檔案，將 <see cref="T:System.Data.DataTable" /> 目前的內容寫成 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1310">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified file.</span>
          </span>
          <span data-ttu-id="0c375-1311">若要儲存資料表及其所有子系的資料，請將 <paramref name="writeHierarchy" /> 參數設定為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1311">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1312"><xref:System.Data.DataTable.WriteXml%2A>方法來撰寫資料，或同時提供資料和結構描述<xref:System.Data.DataTable>XML 文件，而<xref:System.Data.DataTable.WriteXmlSchema%2A>方法會將寫入的結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-1312">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="0c375-1313">若要寫入資料和結構描述，使用其中一個多載，其中包含<xref:System.Data.XmlWriteMode>參數，並將其值設定為`WriteSchema`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1313">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="0c375-1314">請注意，這也適用於<xref:System.Data.DataTable.ReadXml%2A>和<xref:System.Data.DataTable.ReadXmlSchema%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="0c375-1314">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="0c375-1315">若要讀取 XML 資料，或結構描述和資料讀入`DataTable`，使用`ReadXml`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1315">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="0c375-1316">若要讀取的結構描述，使用`ReadXmlSchema`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1316">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="0c375-1317">通常`WriteXml`方法寫入只針對目前資料表的資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-1317">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="0c375-1318">要寫入目前資料表及其所有子系，資料相關的資料表，請呼叫方法`writeHierarchy`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1318">To write the data for the current table and all of its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-1319"><xref:System.InvalidOperationException>如果中的資料行型別將會擲回`DataRow`正在讀取或寫入實作<xref:System.Dynamic.IDynamicMetaObjectProvider>並不會實作<xref:System.Xml.Serialization.IXmlSerializable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1319">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (string fileName, System.Data.XmlWriteMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(string fileName, valuetype System.Data.XmlWriteMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (fileName As String, mode As XmlWriteMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::String ^ fileName, System::Data::XmlWriteMode mode);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : string * System.Data.XmlWriteMode -&gt; unit" Usage="dataTable.WriteXml (fileName, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="0c375-1320">資料將寫入其中的檔案名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1320">The name of the file to which the data will be written.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="0c375-1321">其中一個 <see cref="T:System.Data.XmlWriteMode" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1321">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1322">使用指定的檔案和 <see cref="T:System.Data.DataTable" />，寫入 <see cref="T:System.Data.XmlWriteMode" /> 的目前資料，並選擇性寫入結構描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1322">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified file and <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="0c375-1323">若要寫入結構描述，請設定 <paramref name="mode" /> 參數的值為 <see langword="WriteSchema" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1323">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1324"><xref:System.Data.DataTable.WriteXml%2A>方法來撰寫資料，或同時提供資料和結構描述<xref:System.Data.DataTable>XML 文件，而<xref:System.Data.DataTable.WriteXmlSchema%2A>方法會將寫入的結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-1324">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="0c375-1325">若要寫入資料和結構描述，使用其中一個多載，包括<xref:System.Data.XmlWriteMode>參數，並將其值設定為`WriteSchema`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1325">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="0c375-1326">請注意，這也適用於<xref:System.Data.DataTable.ReadXml%2A>和<xref:System.Data.DataTable.ReadXmlSchema%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="0c375-1326">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="0c375-1327">若要讀取 XML 資料，或結構描述和資料讀入`DataTable`，使用`ReadXml`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1327">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="0c375-1328">若要讀取的結構描述，使用`ReadXmlSchema`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1328">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-1329"><xref:System.InvalidOperationException>如果中的資料行型別將會擲回`DataRow`正在讀取或寫入實作<xref:System.Dynamic.IDynamicMetaObjectProvider>並不會實作<xref:System.Xml.Serialization.IXmlSerializable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1329">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.Xml.XmlWriter writer, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.Xml.XmlWriter * bool -&gt; unit" Usage="dataTable.WriteXml (writer, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="0c375-1330">要用來寫入內容的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1330">The <see cref="T:System.Xml.XmlWriter" /> with which to write the contents.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="0c375-1331">如果為 <see langword="true" />，就會寫入目前資料表及它所有子代的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1331">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="0c375-1332">如果為 <see langword="false" /> (預設值)，就只會寫入目前資料表的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1332">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1333">使用指定的 <see cref="T:System.Xml.XmlWriter" />，將 <see cref="T:System.Data.DataTable" /> 目前的內容寫入為 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1333">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1334"><xref:System.Data.DataTable.WriteXml%2A>方法來撰寫資料，或同時提供資料和結構描述<xref:System.Data.DataTable>XML 文件，而<xref:System.Data.DataTable.WriteXmlSchema%2A>方法會將寫入的結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-1334">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="0c375-1335">若要寫入資料和結構描述，使用其中一個多載，包括<xref:System.Data.XmlWriteMode>參數，並將其值設定為`WriteSchema`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1335">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="0c375-1336">請注意，這也適用於<xref:System.Data.DataTable.ReadXml%2A>和<xref:System.Data.DataTable.ReadXmlSchema%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="0c375-1336">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="0c375-1337">若要讀取 XML 資料，或結構描述和資料讀入`DataTable`，使用`ReadXml`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1337">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="0c375-1338">若要讀取的結構描述，使用`ReadXmlSchema`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1338">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="0c375-1339">通常`WriteXml`方法寫入只針對目前資料表的資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-1339">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="0c375-1340">若要寫入目前資料表和整個子系、 相關資料表的資料，使用呼叫方法`writeHierarchy`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1340">To write the data for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-1341"><xref:System.InvalidOperationException>如果中的資料行型別將會擲回`DataRow`正在讀取或寫入實作<xref:System.Dynamic.IDynamicMetaObjectProvider>並不會實作<xref:System.Xml.Serialization.IXmlSerializable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1341">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer, System.Data.XmlWriteMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.Xml.XmlWriter writer, valuetype System.Data.XmlWriteMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter, mode As XmlWriteMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer, System::Data::XmlWriteMode mode);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.Xml.XmlWriter * System.Data.XmlWriteMode -&gt; unit" Usage="dataTable.WriteXml (writer, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="0c375-1342">寫入文件所用的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1342">The <see cref="T:System.Xml.XmlWriter" /> used to write the document.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="0c375-1343">其中一個 <see cref="T:System.Data.XmlWriteMode" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1343">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1344">使用指定的 <see cref="T:System.Data.DataTable" /> 和 <see cref="T:System.Xml.XmlWriter" />，寫入 <see cref="T:System.Data.XmlWriteMode" /> 的目前資料，並選擇性寫入結構描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1344">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlWriter" /> and <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="0c375-1345">若要寫入結構描述，請設定 <paramref name="mode" /> 參數的值為 <see langword="WriteSchema" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1345">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1346"><xref:System.Data.DataTable.WriteXml%2A>方法來撰寫資料，或同時提供資料和結構描述<xref:System.Data.DataTable>XML 文件，而<xref:System.Data.DataTable.WriteXmlSchema%2A>方法會將寫入的結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-1346">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="0c375-1347">若要寫入資料和結構描述，使用其中一個多載，包括<xref:System.Data.XmlWriteMode>參數，並將其值設定為`WriteSchema`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1347">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="0c375-1348">請注意，這也適用於<xref:System.Data.DataTable.ReadXml%2A>和<xref:System.Data.DataTable.ReadXmlSchema%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="0c375-1348">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="0c375-1349">若要讀取 XML 資料，或結構描述和資料讀入`DataTable`，使用`ReadXml`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1349">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="0c375-1350">若要讀取的結構描述，使用`ReadXmlSchema`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1350">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-1351"><xref:System.InvalidOperationException>如果中的資料行型別將會擲回`DataRow`正在讀取或寫入實作<xref:System.Dynamic.IDynamicMetaObjectProvider>並不會實作<xref:System.Xml.Serialization.IXmlSerializable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1351">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.Stream stream, System.Data.XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.Stream stream, valuetype System.Data.XmlWriteMode mode, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::Stream ^ stream, System::Data::XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.Stream * System.Data.XmlWriteMode * bool -&gt; unit" Usage="dataTable.WriteXml (stream, mode, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="0c375-1352">將資料寫入其中的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1352">The stream to which the data will be written.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="0c375-1353">其中一個 <see cref="T:System.Data.XmlWriteMode" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1353">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="0c375-1354">如果為 <see langword="true" />，就會寫入目前資料表及它所有子代的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1354">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="0c375-1355">如果為 <see langword="false" /> (預設值)，就只會寫入目前資料表的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1355">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1356">使用指定的 <see cref="T:System.Data.DataTable" />，寫入 <see cref="T:System.Data.XmlWriteMode" /> 的目前資料 (並選擇性寫入結構描述) 至指定的檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1356">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> to the specified file using the specified <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="0c375-1357">若要寫入結構描述，請設定 <paramref name="mode" /> 參數的值為 <see langword="WriteSchema" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1357">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
          <span data-ttu-id="0c375-1358">若要儲存資料表及其所有子系的資料，請將 <paramref name="writeHierarchy" /> 參數設定為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1358">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1359"><xref:System.Data.DataTable.WriteXml%2A>方法來撰寫資料，或同時提供資料和結構描述`DataTable`XML 文件，而<xref:System.Data.DataTable.WriteXmlSchema%2A>方法會將寫入的結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-1359">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a `DataTable` into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="0c375-1360">若要寫入資料和結構描述，使用其中一個多載，其中包含`XmlWriteMode`參數，並將其值設定為`WriteSchema`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1360">To write both data and schema, use one of the overloads that includes the `XmlWriteMode` parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="0c375-1361">請注意，這也適用於<xref:System.Data.DataTable.ReadXml%2A>和<xref:System.Data.DataTable.ReadXmlSchema%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="0c375-1361">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="0c375-1362">若要讀取 XML 資料，或結構描述和資料讀入`DataTable`，使用`ReadXml`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1362">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="0c375-1363">若要讀取的結構描述，使用`ReadXmlSchema`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1363">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="0c375-1364">一般來說，`WriteXml`方法會將儲存在目前資料表的資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-1364">Normally, the `WriteXml` method saves data only for the current table.</span></span> <span data-ttu-id="0c375-1365">`WriteXml`方法來撰寫資料，或同時提供資料和結構描述`DataTable`XML 文件，而`WriteXmlSchema`方法會將寫入的結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-1365">The `WriteXml` method provides a way to write either data only, or both data and schema from a `DataTable` into an XML document, whereas the `WriteXmlSchema` method writes only the schema.</span></span> <span data-ttu-id="0c375-1366">若要寫入資料和結構描述，使用其中一個多載，其中包含`XmlWriteMode`參數，並將其值設定為`WriteSchema`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1366">To write both data and schema, use one of the overloads that includes the `XmlWriteMode` parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="0c375-1367">請注意，這也適用於<xref:System.Data.DataTable.ReadXml%2A>和<xref:System.Data.DataTable.ReadXmlSchema%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="0c375-1367">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="0c375-1368">若要讀取 XML 資料，或結構描述和資料讀入`DataTable`，使用`ReadXml`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1368">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="0c375-1369">若要讀取的結構描述，使用`ReadXmlSchema`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1369">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="0c375-1370">通常`WriteXml`方法寫入只針對目前資料表的資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-1370">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="0c375-1371">要寫入目前資料表及其所有子系，資料相關的資料表，請呼叫方法`writeHierarchy`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1371">To write the data for the current table and all of its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-1372"><xref:System.InvalidOperationException>如果中的資料行型別將會擲回`DataRow`正在讀取或寫入實作<xref:System.Dynamic.IDynamicMetaObjectProvider>並不會實作<xref:System.Xml.Serialization.IXmlSerializable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1372">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.TextWriter writer, System.Data.XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.TextWriter writer, valuetype System.Data.XmlWriteMode mode, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As TextWriter, mode As XmlWriteMode, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::TextWriter ^ writer, System::Data::XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.IO.TextWriter * System.Data.XmlWriteMode * bool -&gt; unit" Usage="dataTable.WriteXml (writer, mode, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="0c375-1373">寫入文件所用的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1373">The <see cref="T:System.IO.TextWriter" /> used to write the document.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="0c375-1374">其中一個 <see cref="T:System.Data.XmlWriteMode" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1374">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="0c375-1375">如果為 <see langword="true" />，就會寫入目前資料表及它所有子代的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1375">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="0c375-1376">如果為 <see langword="false" /> (預設值)，就只會寫入目前資料表的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1376">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1377">使用指定的 <see cref="T:System.Data.DataTable" /> 和 <see cref="T:System.IO.TextWriter" />，寫入 <see cref="T:System.Data.XmlWriteMode" /> 的目前資料，並選擇性寫入結構描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1377">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextWriter" /> and <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="0c375-1378">若要寫入結構描述，請設定 <paramref name="mode" /> 參數的值為 <see langword="WriteSchema" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1378">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
          <span data-ttu-id="0c375-1379">若要儲存資料表及其所有子系的資料，請將 <paramref name="writeHierarchy" /> 參數設定為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1379">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1380"><xref:System.Data.DataTable.WriteXml%2A>方法來撰寫資料，或同時提供資料和結構描述<xref:System.Data.DataTable>XML 文件，而<xref:System.Data.DataTable.WriteXmlSchema%2A>方法會將寫入的結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-1380">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="0c375-1381">若要寫入資料和結構描述，使用其中一個多載，其中包含<xref:System.Data.XmlWriteMode>參數，並將其值設定為`WriteSchema`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1381">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="0c375-1382">請注意，這也適用於<xref:System.Data.DataTable.ReadXml%2A>和<xref:System.Data.DataTable.ReadXmlSchema%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="0c375-1382">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="0c375-1383">若要讀取 XML 資料，或結構描述和資料讀入`DataTable`，使用`ReadXml`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1383">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="0c375-1384">若要讀取的結構描述，使用`ReadXmlSchema`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1384">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="0c375-1385">一般來說，`WriteXml`方法會將儲存在目前資料表的資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-1385">Normally, the `WriteXml` method saves data only for the current table.</span></span> <span data-ttu-id="0c375-1386"><xref:System.Data.DataTable.WriteXml%2A>方法來撰寫資料，或同時提供資料和結構描述<xref:System.Data.DataTable>XML 文件，而<xref:System.Data.DataTable.WriteXmlSchema%2A>方法會將寫入的結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-1386">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="0c375-1387">若要寫入資料和結構描述，使用其中一個多載，其中包含<xref:System.Data.XmlWriteMode>參數，並將其值設定為`WriteSchema`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1387">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="0c375-1388">請注意，這也適用於<xref:System.Data.DataTable.ReadXml%2A>和<xref:System.Data.DataTable.ReadXmlSchema%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="0c375-1388">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="0c375-1389">若要讀取 XML 資料，或結構描述和資料讀入`DataTable`，使用`ReadXml`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1389">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="0c375-1390">若要讀取的結構描述，使用`ReadXmlSchema`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1390">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="0c375-1391">通常`WriteXml`方法寫入只針對目前資料表的資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-1391">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="0c375-1392">要寫入目前資料表及其所有子系，資料相關的資料表，請呼叫方法`writeHierarchy`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1392">To write the data for the current table and all of its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-1393"><xref:System.InvalidOperationException>如果中的資料行型別將會擲回`DataRow`正在讀取或寫入實作<xref:System.Dynamic.IDynamicMetaObjectProvider>並不會實作<xref:System.Xml.Serialization.IXmlSerializable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1393">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-1394">下列主控台應用程式會建立兩個<xref:System.Data.DataTable>執行個體，會新增至每個<xref:System.Data.DataSet>，會建立<xref:System.Data.DataRelation>相關的兩個資料表，然後再使用<xref:System.Data.DataTable.WriteXml%2A>方法來寫入父資料表內包含的資料<xref:System.IO.TextWriter>.</span><span class="sxs-lookup"><span data-stu-id="0c375-1394">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXml%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="0c375-1395">設定時，此範例會示範行為`writeHierarchy`其值的每個參數。</span><span class="sxs-lookup"><span data-stu-id="0c375-1395">The example demonstrates the behavior when setting the `writeHierarchy` parameter to each of its values.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXmlIO#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlIO/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXmlIO#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlIO/VB/source.vb#1)]  
  
 <span data-ttu-id="0c375-1396">此範例會在主控台視窗中顯示以下輸出：</span><span class="sxs-lookup"><span data-stu-id="0c375-1396">The example displays the following output in the console window:</span></span>  
  
```  
==============================  
Customer table, without hierarchy  
==============================  
<NewDataSet>  
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema  
" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
      <xs:complexType>  
        <xs:choice minOccurs="0" maxOccurs="unbounded">  
          <xs:element name="Table1">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="ID" type="xs:int" />  
                <xs:element name="Name" type="xs:string" minOccurs="0" />  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
        </xs:choice>  
      </xs:complexType>  
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table1" />  
        <xs:field xpath="ID" />  
      </xs:unique>  
    </xs:element>  
  </xs:schema>  
  <Table1>  
    <ID>1</ID>  
    <Name>Mary</Name>  
  </Table1>  
  <Table1>  
    <ID>2</ID>  
    <Name>Andy</Name>  
  </Table1>  
  <Table1>  
    <ID>3</ID>  
    <Name>Peter</Name>  
  </Table1>  
  <Table1>  
    <ID>4</ID>  
    <Name>Russ</Name>  
  </Table1>  
</NewDataSet>  
==============================  
Customer table, with hierarchy  
==============================  
<NewDataSet>  
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema  
" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
      <xs:complexType>  
        <xs:choice minOccurs="0" maxOccurs="unbounded">  
          <xs:element name="Table1">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="ID" type="xs:int" />  
                <xs:element name="Name" type="xs:string" minOccurs="0" />  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
          <xs:element name="Table2">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="OrderID" type="xs:int" />  
                <xs:element name="CustomerID" type="xs:int" minOccurs="0" />  
                <xs:element name="OrderDate" type="xs:dateTime" minOccurs="0" />  
  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
        </xs:choice>  
      </xs:complexType>  
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table1" />  
        <xs:field xpath="ID" />  
      </xs:unique>  
      <xs:unique name="Table2_Constraint1" msdata:ConstraintName="Constraint1" m  
sdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table2" />  
        <xs:field xpath="OrderID" />  
      </xs:unique>  
      <xs:keyref name="CustomerOrder" refer="Constraint1">  
        <xs:selector xpath=".//Table2" />  
        <xs:field xpath="CustomerID" />  
      </xs:keyref>  
    </xs:element>  
  </xs:schema>  
  <Table1>  
    <ID>1</ID>  
    <Name>Mary</Name>  
  </Table1>  
  <Table1>  
    <ID>2</ID>  
    <Name>Andy</Name>  
  </Table1>  
  <Table1>  
    <ID>3</ID>  
    <Name>Peter</Name>  
  </Table1>  
  <Table1>  
    <ID>4</ID>  
    <Name>Russ</Name>  
  </Table1>  
  <Table2>  
    <OrderID>1</OrderID>  
    <CustomerID>1</CustomerID>  
    <OrderDate>2003-12-02T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>2</OrderID>  
    <CustomerID>1</CustomerID>  
    <OrderDate>2004-01-03T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>3</OrderID>  
    <CustomerID>2</CustomerID>  
    <OrderDate>2004-11-13T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>4</OrderID>  
    <CustomerID>3</CustomerID>  
    <OrderDate>2004-05-16T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>5</OrderID>  
    <CustomerID>3</CustomerID>  
    <OrderDate>2004-05-22T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>6</OrderID>  
    <CustomerID>4</CustomerID>  
    <OrderDate>2004-06-15T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
</NewDataSet>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (string fileName, System.Data.XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(string fileName, valuetype System.Data.XmlWriteMode mode, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (fileName As String, mode As XmlWriteMode, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::String ^ fileName, System::Data::XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : string * System.Data.XmlWriteMode * bool -&gt; unit" Usage="dataTable.WriteXml (fileName, mode, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="0c375-1397">資料將寫入其中的檔案名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1397">The name of the file to which the data will be written.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="0c375-1398">其中一個 <see cref="T:System.Data.XmlWriteMode" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1398">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="0c375-1399">如果為 <see langword="true" />，就會寫入目前資料表及它所有子代的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1399">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="0c375-1400">如果為 <see langword="false" /> (預設值)，就只會寫入目前資料表的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1400">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1401">使用指定的檔案和 <see cref="T:System.Data.DataTable" />，寫入 <see cref="T:System.Data.XmlWriteMode" /> 的目前資料，並選擇性寫入結構描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1401">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified file and <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="0c375-1402">若要寫入結構描述，請設定 <paramref name="mode" /> 參數的值為 <see langword="WriteSchema" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1402">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
          <span data-ttu-id="0c375-1403">若要儲存資料表及其所有子系的資料，請將 <paramref name="writeHierarchy" /> 參數設定為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1403">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1404"><xref:System.Data.DataTable.WriteXml%2A>方法來撰寫資料，或同時提供資料和結構描述<xref:System.Data.DataTable>XML 文件，而<xref:System.Data.DataTable.WriteXmlSchema%2A>方法會將寫入的結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-1404">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="0c375-1405">若要寫入資料和結構描述，使用其中一個多載，包括<xref:System.Data.XmlWriteMode>參數，並將其值設定為`WriteSchema`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1405">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="0c375-1406">請注意，這也適用於<xref:System.Data.DataTable.ReadXml%2A>和<xref:System.Data.DataTable.ReadXmlSchema%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="0c375-1406">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="0c375-1407">若要讀取 XML 資料，或結構描述和資料讀入`DataTable`，使用`ReadXml`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1407">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="0c375-1408">若要讀取的結構描述，使用`ReadXmlSchema`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1408">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="0c375-1409">一般來說，`WriteXml`方法會將儲存在目前資料表的資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-1409">Normally, the `WriteXml` method saves data only for the current table.</span></span> <span data-ttu-id="0c375-1410">如果您想要儲存目前的資料表和的結構描述中，所有的資料<xref:System.Data.DataTable.WriteXml%2A>方法來撰寫資料，或同時提供資料和結構描述<xref:System.Data.DataTable>XML 文件，而<xref:System.Data.DataTable.WriteXmlSchema%2A>方法會將寫入的結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-1410">If you want to save the data for the current table and all of schema, the <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="0c375-1411">若要寫入資料和結構描述，使用其中一個多載，包括<xref:System.Data.XmlWriteMode>參數，並將其值設定為`WriteSchema`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1411">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="0c375-1412">請注意，這也適用於<xref:System.Data.DataTable.ReadXml%2A>和<xref:System.Data.DataTable.ReadXmlSchema%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="0c375-1412">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="0c375-1413">若要讀取 XML 資料，或結構描述和資料讀入`DataTable`，使用`ReadXml`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1413">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="0c375-1414">若要讀取的結構描述，使用`ReadXmlSchema`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1414">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="0c375-1415">通常`WriteXml`方法寫入只針對目前資料表的資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-1415">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="0c375-1416">若要寫入目前資料表和所有子系、 相關資料表的資料，使用呼叫方法`writeHierarchy`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1416">To write the data for the current table and all descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-1417"><xref:System.InvalidOperationException>如果中的資料行型別將會擲回`DataRow`正在讀取或寫入實作<xref:System.Dynamic.IDynamicMetaObjectProvider>並不會實作<xref:System.Xml.Serialization.IXmlSerializable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1417">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer, System.Data.XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.Xml.XmlWriter writer, valuetype System.Data.XmlWriteMode mode, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter, mode As XmlWriteMode, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer, System::Data::XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXml : System.Xml.XmlWriter * System.Data.XmlWriteMode * bool -&gt; unit" Usage="dataTable.WriteXml (writer, mode, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="0c375-1418">寫入文件所用的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1418">The <see cref="T:System.Xml.XmlWriter" /> used to write the document.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="0c375-1419">其中一個 <see cref="T:System.Data.XmlWriteMode" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1419">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="0c375-1420">如果為 <see langword="true" />，就會寫入目前資料表及它所有子代的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1420">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="0c375-1421">如果為 <see langword="false" /> (預設值)，就只會寫入目前資料表的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1421">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1422">使用指定的 <see cref="T:System.Data.DataTable" /> 和 <see cref="T:System.Xml.XmlWriter" />，寫入 <see cref="T:System.Data.XmlWriteMode" /> 的目前資料，並選擇性寫入結構描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1422">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlWriter" /> and <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="0c375-1423">若要寫入結構描述，請設定 <paramref name="mode" /> 參數的值為 <see langword="WriteSchema" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1423">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
          <span data-ttu-id="0c375-1424">若要儲存資料表及其所有子系的資料，請將 <paramref name="writeHierarchy" /> 參數設定為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1424">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1425"><xref:System.Data.DataTable.WriteXml%2A>方法來撰寫資料，或同時提供資料和結構描述<xref:System.Data.DataTable>XML 文件，而<xref:System.Data.DataTable.WriteXmlSchema%2A>方法會將寫入的結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-1425">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="0c375-1426">若要寫入資料和結構描述，使用其中一個多載，包括<xref:System.Data.XmlWriteMode>參數，並將其值設定為`WriteSchema`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1426">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="0c375-1427">請注意，這也適用於<xref:System.Data.DataTable.ReadXml%2A>和<xref:System.Data.DataTable.ReadXmlSchema%2A>方法，分別。</span><span class="sxs-lookup"><span data-stu-id="0c375-1427">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="0c375-1428">若要讀取 XML 資料，或結構描述和資料讀入`DataTable`，使用`ReadXml`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1428">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="0c375-1429">若要讀取的結構描述，使用`ReadXmlSchema`方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1429">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="0c375-1430">通常`WriteXml`方法寫入只針對目前資料表的資料。</span><span class="sxs-lookup"><span data-stu-id="0c375-1430">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="0c375-1431">若要寫入目前資料表和整個子系、 相關資料表的資料，使用呼叫方法`writeHierarchy`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1431">To write the data for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-1432"><xref:System.InvalidOperationException>如果中的資料行型別將會擲回`DataRow`正在讀取或寫入實作<xref:System.Dynamic.IDynamicMetaObjectProvider>並不會實作<xref:System.Xml.Serialization.IXmlSerializable>。</span><span class="sxs-lookup"><span data-stu-id="0c375-1432">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteXmlSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0c375-1433">將 <see cref="T:System.Data.DataTable" /> 目前的資料結構撰寫成 XML 結構描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1433">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1434">使用<xref:System.Data.DataTable.WriteXmlSchema%2A>方法來寫入的結構描述<xref:System.Data.DataTable>XML 文件。</span><span class="sxs-lookup"><span data-stu-id="0c375-1434">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="0c375-1435">結構描述包含資料表、 關聯和條件約束的定義。</span><span class="sxs-lookup"><span data-stu-id="0c375-1435">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="0c375-1436">XML 結構描述是使用 XSD 標準來撰寫。</span><span class="sxs-lookup"><span data-stu-id="0c375-1436">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="0c375-1437">若要將資料寫入 XML 文件中，使用<xref:System.Data.DataTable.WriteXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1437">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-1438">下列主控台應用程式會建立兩個<xref:System.Data.DataTable>執行個體，會新增至每個<xref:System.Data.DataSet>，會建立<xref:System.Data.DataRelation>相關的兩個資料表，然後再使用<xref:System.Data.DataTable.WriteXmlSchema%2A>方法來寫入父資料表內包含的資料<xref:System.IO.TextWriter>.</span><span class="sxs-lookup"><span data-stu-id="0c375-1438">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="0c375-1439">設定時，此範例會示範行為`writeHierarchy`其值的每個參數。</span><span class="sxs-lookup"><span data-stu-id="0c375-1439">The example demonstrates the behavior when setting the `writeHierarchy` parameter to each of its values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c375-1440">此範例示範如何使用其中一個多載版本`WriteXmlSchema`如，可能有其他範例，請參閱個別的多載的主題。</span><span class="sxs-lookup"><span data-stu-id="0c375-1440">This example shows how to use one of the overloaded versions of `WriteXmlSchema` For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXmlSchemaOverload#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlSchemaOverload/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXmlSchemaOverload#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlSchemaOverload/VB/source.vb#1)]  
  
 <span data-ttu-id="0c375-1441">此範例會在主控台視窗中顯示以下輸出：</span><span class="sxs-lookup"><span data-stu-id="0c375-1441">The example displays the following output in the console window:</span></span>  
  
```  
==============================  
Customer table, without hierarchy  
==============================  
<?xml version="1.0" encoding="utf-16"?>  
<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema"  
xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Ta  
ble1">  
    <xs:complexType>  
      <xs:choice minOccurs="0" maxOccurs="unbounded">  
        <xs:element name="Table1">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="ID" type="xs:int" />  
              <xs:element name="Name" type="xs:string" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
      </xs:choice>  
    </xs:complexType>  
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table1" />  
      <xs:field xpath="ID" />  
    </xs:unique>  
  </xs:element>  
</xs:schema>  
==============================  
Customer table, with hierarchy  
==============================  
<?xml version="1.0" encoding="utf-16"?>  
<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema"  
xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
    <xs:complexType>  
      <xs:choice minOccurs="0" maxOccurs="unbounded">  
        <xs:element name="Table1">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="ID" type="xs:int" />  
              <xs:element name="Name" type="xs:string" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
        <xs:element name="Table2">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="OrderID" type="xs:int" />  
              <xs:element name="CustomerID" type="xs:int" minOccurs="0" />  
              <xs:element name="OrderDate" type="xs:dateTime" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
      </xs:choice>  
    </xs:complexType>  
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table1" />  
      <xs:field xpath="ID" />  
    </xs:unique>  
    <xs:unique name="Table2_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table2" />  
      <xs:field xpath="OrderID" />  
    </xs:unique>  
    <xs:keyref name="CustomerOrder" refer="Constraint1">  
      <xs:selector xpath=".//Table2" />  
      <xs:field xpath="CustomerID" />  
    </xs:keyref>  
  </xs:element>  
</xs:schema>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.IO.Stream -&gt; unit" Usage="dataTable.WriteXmlSchema stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="0c375-1442">XML 結構描述將寫入其中的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1442">The stream to which the XML schema will be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1443">將 <see cref="T:System.Data.DataTable" /> 目前的資料結構撰寫成 XML 結構描述，寫入至指定的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1443">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1444">使用<xref:System.Data.DataTable.WriteXmlSchema%2A>方法來寫入的結構描述<xref:System.Data.DataTable>XML 文件。</span><span class="sxs-lookup"><span data-stu-id="0c375-1444">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="0c375-1445">結構描述包含資料表、 關聯和條件約束的定義。</span><span class="sxs-lookup"><span data-stu-id="0c375-1445">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="0c375-1446">XML 結構描述是使用 XSD 標準來撰寫。</span><span class="sxs-lookup"><span data-stu-id="0c375-1446">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="0c375-1447">若要將資料寫入 XML 文件中，使用<xref:System.Data.DataTable.WriteXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1447">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.IO.TextWriter -&gt; unit" Usage="dataTable.WriteXmlSchema writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="0c375-1448">要用來寫入的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1448">The <see cref="T:System.IO.TextWriter" /> with which to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1449">使用指定的 <see cref="T:System.Data.DataTable" />，將 <see cref="T:System.IO.TextWriter" /> 目前的資料結構撰寫成 XML 結構描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1449">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1450">使用<xref:System.Data.DataTable.WriteXmlSchema%2A>方法來寫入的結構描述<xref:System.Data.DataTable>XML 文件。</span><span class="sxs-lookup"><span data-stu-id="0c375-1450">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="0c375-1451">結構描述包含資料表、 關聯和條件約束的定義。</span><span class="sxs-lookup"><span data-stu-id="0c375-1451">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="0c375-1452">XML 結構描述是使用 XSD 標準來撰寫。</span><span class="sxs-lookup"><span data-stu-id="0c375-1452">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="0c375-1453">若要將資料寫入 XML 文件中，使用<xref:System.Data.DataTable.WriteXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1453">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : string -&gt; unit" Usage="dataTable.WriteXmlSchema fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="0c375-1454">要使用的檔案名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1454">The name of the file to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1455">將 <see cref="T:System.Data.DataTable" /> 目前的資料結構撰寫成 XML 結構描述，寫入至指定的檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1455">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1456">使用<xref:System.Data.DataTable.WriteXmlSchema%2A>方法來寫入的結構描述<xref:System.Data.DataTable>XML 文件。</span><span class="sxs-lookup"><span data-stu-id="0c375-1456">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="0c375-1457">結構描述包含資料表、 關聯和條件約束的定義。</span><span class="sxs-lookup"><span data-stu-id="0c375-1457">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="0c375-1458">XML 結構描述是使用 XSD 標準來撰寫。</span><span class="sxs-lookup"><span data-stu-id="0c375-1458">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="0c375-1459">若要將資料寫入 XML 文件中，使用<xref:System.Data.DataTable.WriteXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1459">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.Xml.XmlWriter -&gt; unit" Usage="dataTable.WriteXmlSchema writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="0c375-1460">要使用的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1460">The <see cref="T:System.Xml.XmlWriter" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1461">使用指定的 <see cref="T:System.Data.DataTable" />，將 <see cref="T:System.Xml.XmlWriter" /> 目前的資料結構撰寫成 XML 結構描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1461">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1462">使用<xref:System.Data.DataTable.WriteXmlSchema%2A>方法來寫入的結構描述<xref:System.Data.DataTable>XML 文件。</span><span class="sxs-lookup"><span data-stu-id="0c375-1462">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="0c375-1463">結構描述包含資料表、 關聯和條件約束的定義。</span><span class="sxs-lookup"><span data-stu-id="0c375-1463">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="0c375-1464">XML 結構描述是使用 XSD 標準來撰寫。</span><span class="sxs-lookup"><span data-stu-id="0c375-1464">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="0c375-1465">若要將資料寫入 XML 文件中，使用<xref:System.Data.DataTable.WriteXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1465">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.IO.Stream stream, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.IO.Stream stream, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::IO::Stream ^ stream, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.IO.Stream * bool -&gt; unit" Usage="dataTable.WriteXmlSchema (stream, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="0c375-1466">XML 結構描述將寫入其中的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1466">The stream to which the XML schema will be written.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="0c375-1467">如果為 <see langword="true" />，就會寫入目前資料表及其所有子代的結構描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1467">If <see langword="true" />, write the schema of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="0c375-1468">如果為 <see langword="false" /> (預設值)，就只會寫入目前資料表的結構描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1468">If <see langword="false" /> (the default value), write the schema for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1469">將 <see cref="T:System.Data.DataTable" /> 目前的資料結構撰寫成 XML 結構描述，寫入至指定的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1469">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified stream.</span>
          </span>
          <span data-ttu-id="0c375-1470">若要儲存資料表及其所有子代的結構描述，請將 <paramref name="writeHierarchy" /> 參數設定為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1470">To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1471">使用<xref:System.Data.DataTable.WriteXmlSchema%2A>方法來寫入的結構描述<xref:System.Data.DataTable>XML 文件。</span><span class="sxs-lookup"><span data-stu-id="0c375-1471">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="0c375-1472">結構描述包含資料表、 關聯和條件約束的定義。</span><span class="sxs-lookup"><span data-stu-id="0c375-1472">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="0c375-1473">XML 結構描述是使用 XSD 標準來撰寫。</span><span class="sxs-lookup"><span data-stu-id="0c375-1473">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="0c375-1474">若要將資料寫入 XML 文件中，使用<xref:System.Data.DataTable.WriteXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1474">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="0c375-1475">通常`WriteXmlSchema`方法寫入只在目前資料表的結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-1475">Normally the `WriteXmlSchema` method writes the schema only for the current table.</span></span> <span data-ttu-id="0c375-1476">若要寫入目前資料表和整個子系、 相關資料表的結構描述，使用呼叫方法`writeHierarchy`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1476">To write the schema for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.IO.TextWriter writer, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.IO.TextWriter writer, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (writer As TextWriter, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::IO::TextWriter ^ writer, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.IO.TextWriter * bool -&gt; unit" Usage="dataTable.WriteXmlSchema (writer, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="0c375-1477">要用來寫入的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1477">The <see cref="T:System.IO.TextWriter" /> with which to write.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="0c375-1478">如果為 <see langword="true" />，就會寫入目前資料表及其所有子代的結構描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1478">If <see langword="true" />, write the schema of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="0c375-1479">如果為 <see langword="false" /> (預設值)，就只會寫入目前資料表的結構描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1479">If <see langword="false" /> (the default value), write the schema for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1480">使用指定的 <see cref="T:System.Data.DataTable" />，將 <see cref="T:System.IO.TextWriter" /> 目前的資料結構撰寫成 XML 結構描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1480">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.IO.TextWriter" />.</span>
          </span>
          <span data-ttu-id="0c375-1481">若要儲存資料表及其所有子代的結構描述，請將 <paramref name="writeHierarchy" /> 參數設定為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1481">To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1482">使用<xref:System.Data.DataTable.WriteXmlSchema%2A>方法來寫入的結構描述<xref:System.Data.DataTable>XML 文件。</span><span class="sxs-lookup"><span data-stu-id="0c375-1482">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="0c375-1483">結構描述包含資料表、 關聯和條件約束的定義。</span><span class="sxs-lookup"><span data-stu-id="0c375-1483">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="0c375-1484">XML 結構描述是使用 XSD 標準來撰寫。</span><span class="sxs-lookup"><span data-stu-id="0c375-1484">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="0c375-1485">若要將資料寫入 XML 文件中，使用<xref:System.Data.DataTable.WriteXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1485">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="0c375-1486">通常`WriteXmlSchema`方法寫入只在目前資料表的結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-1486">Normally the `WriteXmlSchema` method writes the schema only for the current table.</span></span> <span data-ttu-id="0c375-1487">若要寫入目前資料表和整個子系、 相關資料表的結構描述，使用呼叫方法`writeHierarchy`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1487">To write the schema for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c375-1488">下列主控台應用程式會建立兩個<xref:System.Data.DataTable>執行個體，會新增至每個<xref:System.Data.DataSet>，會建立<xref:System.Data.DataRelation>相關的兩個資料表，然後再使用<xref:System.Data.DataTable.WriteXmlSchema%2A>方法來寫入父資料表內包含的資料<xref:System.IO.TextWriter>.</span><span class="sxs-lookup"><span data-stu-id="0c375-1488">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="0c375-1489">設定時，此範例會示範行為`writeHierarchy`其值的每個參數。</span><span class="sxs-lookup"><span data-stu-id="0c375-1489">The example demonstrates the behavior when setting the `writeHierarchy` parameter to each of its values.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXmlSchema#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlSchema/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXmlSchema#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlSchema/VB/source.vb#1)]  
  
 <span data-ttu-id="0c375-1490">此範例會在主控台視窗中顯示以下輸出：</span><span class="sxs-lookup"><span data-stu-id="0c375-1490">The example displays the following output in the console window:</span></span>  
  
```  
==============================  
Customer table, without hierarchy  
==============================  
<?xml version="1.0" encoding="utf-16"?>  
<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema"  
xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Ta  
ble1">  
    <xs:complexType>  
      <xs:choice minOccurs="0" maxOccurs="unbounded">  
        <xs:element name="Table1">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="ID" type="xs:int" />  
              <xs:element name="Name" type="xs:string" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
      </xs:choice>  
    </xs:complexType>  
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table1" />  
      <xs:field xpath="ID" />  
    </xs:unique>  
  </xs:element>  
</xs:schema>  
==============================  
Customer table, with hierarchy  
==============================  
<?xml version="1.0" encoding="utf-16"?>  
<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema"  
xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
    <xs:complexType>  
      <xs:choice minOccurs="0" maxOccurs="unbounded">  
        <xs:element name="Table1">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="ID" type="xs:int" />  
              <xs:element name="Name" type="xs:string" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
        <xs:element name="Table2">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="OrderID" type="xs:int" />  
              <xs:element name="CustomerID" type="xs:int" minOccurs="0" />  
              <xs:element name="OrderDate" type="xs:dateTime" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
      </xs:choice>  
    </xs:complexType>  
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table1" />  
      <xs:field xpath="ID" />  
    </xs:unique>  
    <xs:unique name="Table2_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table2" />  
      <xs:field xpath="OrderID" />  
    </xs:unique>  
    <xs:keyref name="CustomerOrder" refer="Constraint1">  
      <xs:selector xpath=".//Table2" />  
      <xs:field xpath="CustomerID" />  
    </xs:keyref>  
  </xs:element>  
</xs:schema>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (string fileName, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(string fileName, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (fileName As String, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::String ^ fileName, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : string * bool -&gt; unit" Usage="dataTable.WriteXmlSchema (fileName, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="0c375-1491">要使用的檔案名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1491">The name of the file to use.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="0c375-1492">如果為 <see langword="true" />，就會寫入目前資料表及其所有子代的結構描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1492">If <see langword="true" />, write the schema of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="0c375-1493">如果為 <see langword="false" /> (預設值)，就只會寫入目前資料表的結構描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1493">If <see langword="false" /> (the default value), write the schema for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1494">將 <see cref="T:System.Data.DataTable" /> 目前的資料結構撰寫成 XML 結構描述，寫入至指定的檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1494">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified file.</span>
          </span>
          <span data-ttu-id="0c375-1495">若要儲存資料表及其所有子代的結構描述，請將 <paramref name="writeHierarchy" /> 參數設定為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1495">To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1496">使用<xref:System.Data.DataTable.WriteXmlSchema%2A>方法來寫入的結構描述<xref:System.Data.DataTable>XML 文件。</span><span class="sxs-lookup"><span data-stu-id="0c375-1496">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="0c375-1497">結構描述包含資料表、 關聯和條件約束的定義。</span><span class="sxs-lookup"><span data-stu-id="0c375-1497">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="0c375-1498">XML 結構描述是使用 XSD 標準來撰寫。</span><span class="sxs-lookup"><span data-stu-id="0c375-1498">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="0c375-1499">若要將資料寫入 XML 文件中，使用<xref:System.Data.DataTable.WriteXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1499">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="0c375-1500">通常`WriteXmlSchema`方法寫入只在目前資料表的結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-1500">Normally the `WriteXmlSchema` method writes the schema only for the current table.</span></span> <span data-ttu-id="0c375-1501">若要寫入目前資料表和整個子系、 相關資料表的結構描述，使用呼叫方法`writeHierarchy`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1501">To write the schema for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.Xml.XmlWriter writer, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.Xml.XmlWriter writer, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (writer As XmlWriter, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::Xml::XmlWriter ^ writer, bool writeHierarchy);" />
      <MemberSignature Language="F#" Value="member this.WriteXmlSchema : System.Xml.XmlWriter * bool -&gt; unit" Usage="dataTable.WriteXmlSchema (writer, writeHierarchy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="0c375-1502">寫入文件所用的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1502">The <see cref="T:System.Xml.XmlWriter" /> used to write the document.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="0c375-1503">如果為 <see langword="true" />，就會寫入目前資料表及其所有子代的結構描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1503">If <see langword="true" />, write the schema of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="0c375-1504">如果為 <see langword="false" /> (預設值)，就只會寫入目前資料表的結構描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1504">If <see langword="false" /> (the default value), write the schema for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0c375-1505">使用指定的 <see cref="T:System.Data.DataTable" />，將 <see cref="T:System.Xml.XmlWriter" /> 目前的資料結構撰寫成 XML 結構描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1505">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
          <span data-ttu-id="0c375-1506">若要儲存資料表及其所有子代的結構描述，請將 <paramref name="writeHierarchy" /> 參數設定為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0c375-1506">To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c375-1507">使用<xref:System.Data.DataTable.WriteXmlSchema%2A>方法來寫入的結構描述<xref:System.Data.DataTable>XML 文件。</span><span class="sxs-lookup"><span data-stu-id="0c375-1507">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="0c375-1508">結構描述包含資料表、 關聯和條件約束的定義。</span><span class="sxs-lookup"><span data-stu-id="0c375-1508">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="0c375-1509">XML 結構描述是使用 XSD 標準來撰寫。</span><span class="sxs-lookup"><span data-stu-id="0c375-1509">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="0c375-1510">若要將資料寫入 XML 文件中，使用<xref:System.Data.DataTable.WriteXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0c375-1510">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="0c375-1511">通常`WriteXmlSchema`方法寫入只在目前資料表的結構描述。</span><span class="sxs-lookup"><span data-stu-id="0c375-1511">Normally the `WriteXmlSchema` method writes the schema only for the current table.</span></span> <span data-ttu-id="0c375-1512">若要寫入目前資料表和整個子系、 相關資料表的結構描述，使用呼叫方法`writeHierarchy`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="0c375-1512">To write the schema for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>