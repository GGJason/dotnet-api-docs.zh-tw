<Type Name="IDataAdapter" FullName="System.Data.IDataAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c3ba188b4aa23926c517bdb170261648720c47e6" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37668909" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataAdapter" />
  <TypeSignature Language="F#" Value="type IDataAdapter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="91d2c-101">允許物件實作 DataAdapter，並表示用來填滿和更新 <see cref="T:System.Data.DataSet" /> 並更新資料來源的方法集和對應動作相關屬性集。</span>
      <span class="sxs-lookup">
        <span data-stu-id="91d2c-101">Allows an object to implement a DataAdapter, and represents a set of methods and mapping action-related properties that are used to fill and update a <see cref="T:System.Data.DataSet" /> and update a data source.</span>
      </span>
      <span data-ttu-id="91d2c-102">
        <see cref="T:System.Data.IDbDataAdapter" /> 執行個體適用於本身為 (或類似於) 採用文字命令 (例如 Transact-SQL) 之關聯式資料庫的資料來源，而 <see cref="T:System.Data.IDataAdapter" /> 執行個體則可以使用任何類型的資料來源。</span>
      <span class="sxs-lookup">
        <span data-stu-id="91d2c-102">
          <see cref="T:System.Data.IDbDataAdapter" /> instances are for data sources that are (or resemble) relational databases with textual commands (like Transact-SQL), while <see cref="T:System.Data.IDataAdapter" /> instances could can use any type of data source.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91d2c-103"><xref:System.Data.IDataAdapter>介面可讓繼承的類別來實作資料配接器類別，代表資料來源之間的橋樑， <xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="91d2c-103">The <xref:System.Data.IDataAdapter> interface allows an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="91d2c-104">如需詳細資料配接器類別的詳細資訊，請參閱[從 DataAdapter 填入 DataSet](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md)。</span><span class="sxs-lookup"><span data-stu-id="91d2c-104">For more information about DataAdapter classes, see [Populating a DataSet from a DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md).</span></span>  
  
 <span data-ttu-id="91d2c-105">應用程式不會建立的執行個體<xref:System.Data.IDataAdapter>介面直接，但會實作繼承的類別的執行個體<xref:System.Data.IDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="91d2c-105">An application does not create an instance of the <xref:System.Data.IDataAdapter> interface directly, but implements an instance of a class that inherits <xref:System.Data.IDataAdapter>.</span></span>  
  
 <span data-ttu-id="91d2c-106">繼承的類別<xref:System.Data.IDataAdapter>必須實作繼承的成員，以及它們通常會定義要新增提供者特有的功能的其他成員。</span><span class="sxs-lookup"><span data-stu-id="91d2c-106">Classes that inherit <xref:System.Data.IDataAdapter> must implement the inherited members, and they typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="91d2c-107">例如，<xref:System.Data.IDataAdapter>介面會定義<xref:System.Data.IDataAdapter.Fill%2A>採用方法<xref:System.Data.DataSet>做為參數。</span><span class="sxs-lookup"><span data-stu-id="91d2c-107">For example, the <xref:System.Data.IDataAdapter> interface defines a <xref:System.Data.IDataAdapter.Fill%2A> method that takes a <xref:System.Data.DataSet> as a parameter.</span></span> <span data-ttu-id="91d2c-108">依次<xref:System.Data.OleDb.OleDbDataAdapter>類別會繼承<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法，也會定義兩個額外的多載<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>需要 ADO 資料錄集物件，做為參數的方法。</span><span class="sxs-lookup"><span data-stu-id="91d2c-108">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method and also defines two additional overloads of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method that take an ADO Recordset object as a parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91d2c-109">下列範例會使用衍生的類別， <xref:System.Data.SqlClient.SqlCommand>， <xref:System.Data.SqlClient.SqlDataAdapter>，和<xref:System.Data.SqlClient.SqlConnection>、 從資料庫選取資料錄。</span><span class="sxs-lookup"><span data-stu-id="91d2c-109">The following example uses the derived classes, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter>, and <xref:System.Data.SqlClient.SqlConnection>, to select records from a database.</span></span> <span data-ttu-id="91d2c-110">區域分布<xref:System.Data.DataSet>再傳回。</span><span class="sxs-lookup"><span data-stu-id="91d2c-110">The filled <xref:System.Data.DataSet> is then returned.</span></span> <span data-ttu-id="91d2c-111">若要這樣做，方法傳遞初始化<xref:System.Data.DataSet>，連接字串，而是 TRANSACT-SQL SELECT 陳述式的查詢字串。</span><span class="sxs-lookup"><span data-stu-id="91d2c-111">To do this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is a Transact-SQL SELECT statement.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="91d2c-112">
        <para>若要升級.NET Framework 資料提供者之間的一致性，命名為在表單中繼承的類別<paramref name="Prv" />DataAdapter 其中<paramref name="Prv" />是統一的前置詞提供給特定的.NET Framework 資料提供者命名空間中的所有類別。例如，<paramref name="Sql" />是的前置詞<see cref="T:System.Data.SqlClient.SqlDataAdapter" />類別中<see langword="System.Data.SqlClient" />命名空間。當您繼承自<see cref="T:System.Data.IDataAdapter" />介面，您應該實作下列建構函式： <list type="table"><listheader><term>項目</term><description>描述</description></listheader><item><term> PrvDataAdapter() </term><description>初始化 PrvDataAdapter 類別的新執行個體。</description></item><item><term> (PrvCommand selectCommand) PrvDataAdapter </term><description>初始化 PrvDataAdapter 類別的新執行個體使用指定的 SQL SELECT 陳述式。</description></item><item><term> （字串 selectCommandText，字串 selectConnectionString） PrvDataAdapter </term><description>初始化 PrvDataAdapter 類別的新執行個體所使用的 SQL SELECT 陳述式和連接字串。</description></item><item><term> （字串 selectCommandText、 PrvConnection selectConnection） PrvDataAdapter </term><description>初始化 PrvDataAdapter 類別的新執行個體所使用的 SQL SELECT 陳述式和 PrvConnection 物件。  </description></item></list></para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="91d2c-112">
          <para>To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="Prv" /> DataAdapter where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace. For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the <see langword="System.Data.SqlClient" /> namespace.  When you inherit from the <see cref="T:System.Data.IDataAdapter" /> interface, you should implement the following constructors:  <list type="table"><listheader><term> Item  </term><description> Description  </description></listheader><item><term> PrvDataAdapter()  </term><description> Initializes a new instance of the PrvDataAdapter class.  </description></item><item><term> PrvDataAdapter(PrvCommand selectCommand)  </term><description> Initializes a new instance of the PrvDataAdapter class by using the specified SQL SELECT statement.  </description></item><item><term> PrvDataAdapter(string selectCommandText, string selectConnectionString)  </term><description> Initializes a new instance of the PrvDataAdapter class by using an SQL SELECT statement and a connection string.  </description></item><item><term> PrvDataAdapter(string selectCommandText, PrvConnection selectConnection)  </term><description> Initializes a new instance of the PrvDataAdapter class by using an SQL SELECT statement and a PrvConnection object.  </description></item></list></para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="abstract member Fill : System.Data.DataSet -&gt; int" Usage="iDataAdapter.Fill dataSet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="91d2c-113">要填入資料錄和結構描述 (如果必要的話) 的 <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91d2c-113">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91d2c-114">使用 <see cref="T:System.Data.DataSet" /> 名稱，加入或更新 <see cref="T:System.Data.DataSet" /> 中的資料列，以符合那些在資料來源中的資料列，並建立命名為 "Table" 的 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91d2c-114">Adds or updates rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> name, and creates a <see cref="T:System.Data.DataTable" /> named "Table".</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="91d2c-115">成功加入至 <see cref="T:System.Data.DataSet" /> 或在其中重新整理的資料列數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91d2c-115">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="91d2c-116">這不包含被不傳回資料列之陳述式所影響的資料列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91d2c-116">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91d2c-117"><xref:System.Data.IDataAdapter.Fill%2A> 從使用 SELECT 陳述式指定由相關聯的資料來源擷取資料列<xref:System.Data.IDbDataAdapter.SelectCommand%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="91d2c-117"><xref:System.Data.IDataAdapter.Fill%2A> retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="91d2c-118">SELECT 陳述式相關聯的連接物件必須是有效的但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="91d2c-118">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="91d2c-119">如果連線已關閉之前<xref:System.Data.IDataAdapter.Fill%2A>會呼叫它，它會開啟來擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="91d2c-119">If the connection is closed before <xref:System.Data.IDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="91d2c-120">如果連接已開啟之前<xref:System.Data.IDataAdapter.Fill%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="91d2c-120">If the connection is open before <xref:System.Data.IDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="91d2c-121"><xref:System.Data.IDataAdapter.Fill%2A>作業，然後將資料列加入到目的地<xref:System.Data.DataTable>中的物件<xref:System.Data.DataSet>建立<xref:System.Data.DataTable>物件如果它們尚不存在。</span><span class="sxs-lookup"><span data-stu-id="91d2c-121">The <xref:System.Data.IDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="91d2c-122">建立時<xref:System.Data.DataTable>物件，<xref:System.Data.IDataAdapter.Fill%2A>作業通常會建立只有資料行名稱中繼資料。</span><span class="sxs-lookup"><span data-stu-id="91d2c-122">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.IDataAdapter.Fill%2A> operation usually creates only column name metadata.</span></span> <span data-ttu-id="91d2c-123">不過，如果<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>屬性設定為`AddWithKey`，也會建立適當的主索引鍵和條件約束。</span><span class="sxs-lookup"><span data-stu-id="91d2c-123">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="91d2c-124">如果 `SelectCommand` 傳回 OUTER JOIN 的結果，則 `DataAdapter` 便不會為產生的 <xref:System.Data.DataTable.PrimaryKey%2A> 設定 <xref:System.Data.DataTable> 值。</span><span class="sxs-lookup"><span data-stu-id="91d2c-124">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="91d2c-125">您必須明確定義以確保正確解析重複的資料列的主索引鍵。</span><span class="sxs-lookup"><span data-stu-id="91d2c-125">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="91d2c-126">如需詳細資訊，請參閱 <<c0> [ 定義主索引鍵](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="91d2c-126">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="91d2c-127">如果<xref:System.Data.IDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生連續的資料行，並使用模式 」 columnname1"、"columnname2 」、 「 columnname3"，等等的名稱。</span><span class="sxs-lookup"><span data-stu-id="91d2c-127">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the successive columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="91d2c-128">如果內送資料中包含未命名資料行，它們都放<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="91d2c-128">If the incoming data contains unnamed columns, they are put in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="91d2c-129">當多個結果集加入至<xref:System.Data.DataSet>，每個結果集放在個別的資料表。</span><span class="sxs-lookup"><span data-stu-id="91d2c-129">When multiple result sets are added to the <xref:System.Data.DataSet>, each result set is put in a separate table.</span></span> <span data-ttu-id="91d2c-130">其他結果集的命名方式將整數值附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"，等等）。</span><span class="sxs-lookup"><span data-stu-id="91d2c-130">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="91d2c-131">使用資料行和資料表名稱，以確保沒有這些命名模式的衝突時，應用程式應謹慎小心。</span><span class="sxs-lookup"><span data-stu-id="91d2c-131">Applications should use caution when using column and table names to ensure that conflicts with these naming patterns do not occur.</span></span>  
  
 <span data-ttu-id="91d2c-132">當 SELECT 陳述式，用來填入<xref:System.Data.DataSet>傳回多個結果，例如 SQL 陳述式的批次，如果其中一個結果包含錯誤，所有後續的結果會略過且未新增到<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="91d2c-132">When the SELECT statement that is used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statement, if one of the results contains an error, all successive results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="91d2c-133">您可以使用<xref:System.Data.IDataAdapter.Fill%2A>上多次相同的方法<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="91d2c-133">You can use the <xref:System.Data.IDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="91d2c-134">如果主索引鍵存在，內送資料列會合併與相符的資料列已經存在。</span><span class="sxs-lookup"><span data-stu-id="91d2c-134">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="91d2c-135">如果沒有主索引鍵存在，將內送資料列附加至<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="91d2c-135">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="91d2c-136">當處理批次 SQL 陳述式會傳回多個結果，實作<xref:System.Data.IDataAdapter.Fill%2A>和<xref:System.Data.IDataAdapter.FillSchema%2A>.NET Framework 資料提供者會擷取第一個結果的結構描述資訊。</span><span class="sxs-lookup"><span data-stu-id="91d2c-136">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.IDataAdapter.Fill%2A> and <xref:System.Data.IDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="abstract member FillSchema : System.Data.DataSet * System.Data.SchemaType -&gt; System.Data.DataTable[]" Usage="iDataAdapter.FillSchema (dataSet, schemaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="91d2c-137">
            <see cref="T:System.Data.DataSet" />，以資料來源中的結構描述來填入其中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91d2c-137">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="91d2c-138">其中一個 <see cref="T:System.Data.SchemaType" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91d2c-138">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91d2c-139">將名稱為 "Table" 的 <see cref="T:System.Data.DataTable" /> 加入至指定的 <see cref="T:System.Data.DataSet" />，並根據指定的 <see cref="T:System.Data.SchemaType" />，設定結構描述以符合資料來源中的資料表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91d2c-139">Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="91d2c-140">
            <see cref="T:System.Data.DataTable" /> 物件的陣列，包含從資料來源傳回的結構描述資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91d2c-140">An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91d2c-141"><xref:System.Data.IDataAdapter.FillSchema%2A>方法會擷取結構描述從資料來源使用<xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="91d2c-141">The <xref:System.Data.IDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="91d2c-142">連接物件相關聯<xref:System.Data.IDbDataAdapter.SelectCommand%2A>必須是有效的但它不需要開啟。</span><span class="sxs-lookup"><span data-stu-id="91d2c-142">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="91d2c-143">如果連線已關閉之前<xref:System.Data.IDataAdapter.FillSchema%2A>會呼叫它，它會開啟來擷取資料，然後關閉。</span><span class="sxs-lookup"><span data-stu-id="91d2c-143">If the connection is closed before <xref:System.Data.IDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="91d2c-144">如果連接已開啟之前<xref:System.Data.IDataAdapter.FillSchema%2A>是呼叫，它會保持開啟狀態。</span><span class="sxs-lookup"><span data-stu-id="91d2c-144">If the connection is open before <xref:System.Data.IDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="91d2c-145">A<xref:System.Data.IDataAdapter.FillSchema%2A>作業會將加入<xref:System.Data.DataTable>到目的地<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="91d2c-145">A <xref:System.Data.IDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="91d2c-146">接著它會加入至資料行<xref:System.Data.DataColumnCollection>的<xref:System.Data.DataTable>，並設定下列<xref:System.Data.DataColumn>如果它們存在於資料來源的屬性：</span><span class="sxs-lookup"><span data-stu-id="91d2c-146">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable> and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="91d2c-147"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="91d2c-147"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="91d2c-148">您必須設定<xref:System.Data.DataColumn.AutoIncrementStep%2A>和<xref:System.Data.DataColumn.AutoIncrementSeed%2A>分開。</span><span class="sxs-lookup"><span data-stu-id="91d2c-148">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="91d2c-149"><xref:System.Data.IDataAdapter.FillSchema%2A> 也會設定<xref:System.Data.DataTable.PrimaryKey%2A>和<xref:System.Data.DataTable.Constraints%2A>屬性根據下列規則：</span><span class="sxs-lookup"><span data-stu-id="91d2c-149"><xref:System.Data.IDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="91d2c-150">如果所傳回的一或多個主要的索引鍵資料行<xref:System.Data.IDbDataAdapter.SelectCommand%2A>，做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="91d2c-150">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="91d2c-151">如果傳回沒有主索引鍵資料行，但唯一資料行，唯一的資料行會使用主索引鍵，如果所有唯一的資料行不可為 null。</span><span class="sxs-lookup"><span data-stu-id="91d2c-151">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if all the unique columns are non-nullable.</span></span> <span data-ttu-id="91d2c-152">如果任何資料行可為 null，<xref:System.Data.UniqueConstraint>新增至<xref:System.Data.ConstraintCollection>，但<xref:System.Data.DataTable.PrimaryKey%2A>屬性未設定。</span><span class="sxs-lookup"><span data-stu-id="91d2c-152">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="91d2c-153">如果傳回主要索引鍵資料行及唯一的資料行，將主索引鍵資料行做為主要索引鍵資料行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="91d2c-153">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="91d2c-154">請注意，會將主索引鍵和唯一條件約束加入至<xref:System.Data.ConstraintCollection>不加入根據先前的規則，但其他條件約束類型。</span><span class="sxs-lookup"><span data-stu-id="91d2c-154">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the previous rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="91d2c-155">如果唯一的叢集資料行或將 SQL Server 資料表中的資料行上定義索引和叢集索引中的資料行的名稱將會傳回一組個別的資料行上定義主索引鍵條件約束。</span><span class="sxs-lookup"><span data-stu-id="91d2c-155">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="91d2c-156">若要傳回的名稱或主索引鍵資料行的名稱，使用指定的主索引鍵名稱的 SELECT 陳述式中的查詢提示。</span><span class="sxs-lookup"><span data-stu-id="91d2c-156">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="91d2c-157">如需如何指定查詢提示的詳細資訊，請參閱[查詢提示 & Amp;#40;transact-SQL&AMP;#41;](http://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="91d2c-157">For more information about how to specify query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="91d2c-158">如果<xref:System.Data.IDataAdapter>遇到重複的資料行在填入<xref:System.Data.DataTable>，它會產生連續的資料行，並使用模式 」 columnname1"、"columnname2 」、 「 columnname3"，等等的名稱。</span><span class="sxs-lookup"><span data-stu-id="91d2c-158">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the successive columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="91d2c-159">如果內送資料中包含未命名資料行，它們都放<xref:System.Data.DataSet>根據模式"Column1"、"Column2"，依此類推。</span><span class="sxs-lookup"><span data-stu-id="91d2c-159">If the incoming data contains unnamed columns, they are put in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="91d2c-160">當多個結果集加入至<xref:System.Data.DataSet>，每個結果集放在個別的資料表。</span><span class="sxs-lookup"><span data-stu-id="91d2c-160">When multiple result sets are added to the <xref:System.Data.DataSet>, each result set is put in a separate table.</span></span> <span data-ttu-id="91d2c-161">其他結果集的命名方式將整數值附加至指定的資料表名稱 （例如，"Table"、"Table1"、"Table2"，等等）。</span><span class="sxs-lookup"><span data-stu-id="91d2c-161">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="91d2c-162">使用資料行和資料表名稱，以確保沒有這些命名模式的衝突時，應用程式應謹慎小心。</span><span class="sxs-lookup"><span data-stu-id="91d2c-162">Applications should use caution when using column and table names to ensure that conflicts with these naming patterns do not occur.</span></span>  
  
 <span data-ttu-id="91d2c-163"><xref:System.Data.IDataAdapter.FillSchema%2A> 傳回任何資料列。</span><span class="sxs-lookup"><span data-stu-id="91d2c-163"><xref:System.Data.IDataAdapter.FillSchema%2A> returns no rows.</span></span> <span data-ttu-id="91d2c-164">使用<xref:System.Data.IDataAdapter.Fill%2A>方法，以將資料列加入<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="91d2c-164">Use the <xref:System.Data.IDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />
      </Docs>
    </Member>
    <Member MemberName="GetFillParameters">
      <MemberSignature Language="C#" Value="public System.Data.IDataParameter[] GetFillParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataParameter[] GetFillParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataAdapter.GetFillParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFillParameters () As IDataParameter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::IDataParameter ^&gt; ^ GetFillParameters();" />
      <MemberSignature Language="F#" Value="abstract member GetFillParameters : unit -&gt; System.Data.IDataParameter[]" Usage="iDataAdapter.GetFillParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="91d2c-165">取得在執行 SQL SELECT 陳述式時由使用者設定的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91d2c-165">Gets the parameters set by the user when executing an SQL SELECT statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="91d2c-166">
            <see cref="T:System.Data.IDataParameter" /> 物件的陣列，含有由使用者設定的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91d2c-166">An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set by the user.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
```  
private static void GetParameters(String connectiongString) {  
           using (SqlConnection conn = new SqlConnection(connectiongString)) {  
              String queryString = "Select [CourseID],[Title],[Credits] from [MySchool].[dbo].[Course] where [Year]=@Year and [Credit]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MissingMappingAction">
      <MemberSignature Language="C#" Value="public System.Data.MissingMappingAction MissingMappingAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MissingMappingAction MissingMappingAction" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataAdapter.MissingMappingAction" />
      <MemberSignature Language="VB.NET" Value="Public Property MissingMappingAction As MissingMappingAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::MissingMappingAction MissingMappingAction { System::Data::MissingMappingAction get(); void set(System::Data::MissingMappingAction value); };" />
      <MemberSignature Language="F#" Value="member this.MissingMappingAction : System.Data.MissingMappingAction with get, set" Usage="System.Data.IDataAdapter.MissingMappingAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.MissingMappingAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="91d2c-167">指示或指定未對應的來源資料表或資料行是否為了篩選或引發錯誤，而使用它們的來源名稱傳遞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91d2c-167">Indicates or specifies whether unmapped source tables or columns are passed with their source names in order to be filtered or to raise an error.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="91d2c-168">其中一個 <see cref="T:System.Data.MissingMappingAction" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91d2c-168">One of the <see cref="T:System.Data.MissingMappingAction" /> values.</span>
          </span>
          <span data-ttu-id="91d2c-169">預設值為 <see langword="Passthrough" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91d2c-169">The default is <see langword="Passthrough" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91d2c-170"><xref:System.Data.IDataAdapter.TableMappings%2A>屬性會提供傳回的記錄之間的主要對應和<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="91d2c-170">The <xref:System.Data.IDataAdapter.TableMappings%2A> property provides the master mapping between the returned records and the <xref:System.Data.DataSet>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="91d2c-171">設定的值不是其中一個 <see cref="T:System.Data.MissingMappingAction" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91d2c-171">The value set is not one of the <see cref="T:System.Data.MissingMappingAction" /> values.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.IDataAdapter.MissingSchemaAction" />
      </Docs>
    </Member>
    <Member MemberName="MissingSchemaAction">
      <MemberSignature Language="C#" Value="public System.Data.MissingSchemaAction MissingSchemaAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MissingSchemaAction MissingSchemaAction" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataAdapter.MissingSchemaAction" />
      <MemberSignature Language="VB.NET" Value="Public Property MissingSchemaAction As MissingSchemaAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::MissingSchemaAction MissingSchemaAction { System::Data::MissingSchemaAction get(); void set(System::Data::MissingSchemaAction value); };" />
      <MemberSignature Language="F#" Value="member this.MissingSchemaAction : System.Data.MissingSchemaAction with get, set" Usage="System.Data.IDataAdapter.MissingSchemaAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.MissingSchemaAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="91d2c-172">指示或指定遺漏的來源資料表、資料行和關聯性 (Relationship) 是否加入至資料集結構描述 (Schema)、已忽略，或造成要引發的錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91d2c-172">Indicates or specifies whether missing source tables, columns, and their relationships are added to the dataset schema, ignored, or cause an error to be raised.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="91d2c-173">其中一個 <see cref="T:System.Data.MissingSchemaAction" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91d2c-173">One of the <see cref="T:System.Data.MissingSchemaAction" /> values.</span>
          </span>
          <span data-ttu-id="91d2c-174">預設值為 <see langword="Add" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91d2c-174">The default is <see langword="Add" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="91d2c-175">設定的值不是其中一個 <see cref="T:System.Data.MissingSchemaAction" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91d2c-175">The value set is not one of the <see cref="T:System.Data.MissingSchemaAction" /> values.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.Common.DataAdapter.MissingMappingAction" />
      </Docs>
    </Member>
    <Member MemberName="TableMappings">
      <MemberSignature Language="C#" Value="public System.Data.ITableMappingCollection TableMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.ITableMappingCollection TableMappings" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataAdapter.TableMappings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TableMappings As ITableMappingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ITableMappingCollection ^ TableMappings { System::Data::ITableMappingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TableMappings : System.Data.ITableMappingCollection" Usage="System.Data.IDataAdapter.TableMappings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.ITableMappingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="91d2c-176">指示來源資料表如何對應至資料集資料表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91d2c-176">Indicates how a source table is mapped to a dataset table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="91d2c-177">集合，提供傳回的資料錄和 <see cref="T:System.Data.DataSet" /> 之間的主要對應。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91d2c-177">A collection that provides the master mapping between the returned records and the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="91d2c-178">預設值為空集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91d2c-178">The default value is an empty collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91d2c-179"><xref:System.Data.IDataAdapter>用於名為"Table"的來源資料表的對應。</span><span class="sxs-lookup"><span data-stu-id="91d2c-179">The <xref:System.Data.IDataAdapter> uses only the mappings for the source table named "Table".</span></span> <span data-ttu-id="91d2c-180">所有 SELECT、 INSERT、 DELETE 和 UPDATE 陳述式，傳回的資料必須執行使用一致的資料行命名。</span><span class="sxs-lookup"><span data-stu-id="91d2c-180">All SELECT, INSERT, DELETE, and UPDATE statements returning data must do so using consistent column naming.</span></span> <span data-ttu-id="91d2c-181">傳回記錄中的資料行名稱必須是唯一，否則資料行名稱重複的覆寫先前的資料。</span><span class="sxs-lookup"><span data-stu-id="91d2c-181">The column names returned in the records must be unique, otherwise columns with duplicate names overwrite previous data.</span></span> <span data-ttu-id="91d2c-182">在  <xref:System.Data.IDataAdapter.Update%2A>，則只會對應到名為"Table"的來源資料表的資料表必須協調其變更。</span><span class="sxs-lookup"><span data-stu-id="91d2c-182">On <xref:System.Data.IDataAdapter.Update%2A>, only the table mapped to the source table named "Table" will have its changes reconciled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Update(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="abstract member Update : System.Data.DataSet -&gt; int" Usage="iDataAdapter.Update dataSet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="91d2c-183">用來更新資料來源的 <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91d2c-183">The <see cref="T:System.Data.DataSet" /> used to update the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91d2c-184">從命名為 "Table" 之 <see cref="T:System.Data.DataSet" /> 的指定 <see cref="T:System.Data.DataTable" /> 中，為每個插入、更新或刪除的資料列呼叫對應的 INSERT、UPDATE 或 DELETE 陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91d2c-184">Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataSet" /> from a <see cref="T:System.Data.DataTable" /> named "Table".</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="91d2c-185">自 <see cref="T:System.Data.DataSet" /> 中成功更新的資料列數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91d2c-185">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91d2c-186">當應用程式呼叫<xref:System.Data.IDataAdapter.Update%2A>方法中，<xref:System.Data.IDataAdapter>會檢查<xref:System.Data.DataRow.RowState%2A>屬性，並執行必要的 INSERT、 UPDATE 或 DELETE 陳述式，反覆地針對每個的資料列中，然後再根據順序中設定的索引<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="91d2c-186">When an application calls the <xref:System.Data.IDataAdapter.Update%2A> method, the <xref:System.Data.IDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="91d2c-187">例如，<xref:System.Data.IDataAdapter.Update%2A>可能會執行 DELETE 陳述式，後面接著 INSERT 陳述式和另一個的 DELETE 陳述式，因為順序中的資料列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="91d2c-187">For example, <xref:System.Data.IDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, because of the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="91d2c-188">請注意，這些陳述式都不會執行以批次程序;個別更新每個資料列。</span><span class="sxs-lookup"><span data-stu-id="91d2c-188">Be aware that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="91d2c-189">應用程式可以呼叫<xref:System.Data.DataSet.GetChanges%2A>方法，如果您必須控制陳述式類型 （例如，在更新之前插入） 的順序。</span><span class="sxs-lookup"><span data-stu-id="91d2c-189">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method if you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="91d2c-190">如需詳細資訊，請參閱 <<c0> [ 使用 Dataadapter 更新資料來源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="91d2c-190">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="91d2c-191">如果尚未指定 INSERT、 UPDATE 或 DELETE 陳述式，<xref:System.Data.Common.DataAdapter.Update%2A>方法會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="91d2c-191">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="91d2c-192">不過，您可以建立<xref:System.Data.SqlClient.SqlCommandBuilder>或是<xref:System.Data.OleDb.OleDbCommandBuilder>物件來自動產生單一資料表更新的 SQL 陳述式，如果您將設定`SelectCommand`.NET Framework 資料提供者的屬性。</span><span class="sxs-lookup"><span data-stu-id="91d2c-192">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="91d2c-193">然後，您未設定任何其他 SQL 陳述式會產生 CommandBuilder。</span><span class="sxs-lookup"><span data-stu-id="91d2c-193">Then, any additional SQL statements that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="91d2c-194">此層代 」 邏輯需要索引鍵資料行資訊會出現在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="91d2c-194">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="91d2c-195">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="91d2c-195">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="91d2c-196"><xref:System.Data.Common.DataAdapter.Update%2A>方法會從第一個對應，然後再執行更新中所列的資料表擷取資料列。</span><span class="sxs-lookup"><span data-stu-id="91d2c-196">The <xref:System.Data.Common.DataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="91d2c-197"><xref:System.Data.Common.DataAdapter.Update%2A>然後更新使用的值的資料列<xref:System.Data.IDbCommand.UpdatedRowSource%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="91d2c-197">The <xref:System.Data.Common.DataAdapter.Update%2A> then updates the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="91d2c-198">傳回任何其他資料列都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="91d2c-198">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="91d2c-199">任何資料載入回後<xref:System.Data.DataSet>，則<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>引發事件時，讓使用者能夠檢查協調<xref:System.Data.DataSet>資料列和任何輸出命令所傳回的參數。</span><span class="sxs-lookup"><span data-stu-id="91d2c-199">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="91d2c-200">已成功更新資料列之後，會接受該資料列所做的變更。</span><span class="sxs-lookup"><span data-stu-id="91d2c-200">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="91d2c-201">當使用<xref:System.Data.IDataAdapter.Update%2A>，執行的順序如下所示：</span><span class="sxs-lookup"><span data-stu-id="91d2c-201">When using <xref:System.Data.IDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="91d2c-202">中的值<xref:System.Data.DataRow>會移至 參數值。</span><span class="sxs-lookup"><span data-stu-id="91d2c-202">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="91d2c-203">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="91d2c-203">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="91d2c-204">執行命令。</span><span class="sxs-lookup"><span data-stu-id="91d2c-204">The command executes.</span></span>  
  
4.  <span data-ttu-id="91d2c-205">如果命令設定為`FirstReturnedRecord`，則第一個傳回的結果會放在<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="91d2c-205">If the command is set to `FirstReturnedRecord`, then the first returned result is put in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="91d2c-206">如果沒有輸出參數，它們都放<xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="91d2c-206">If there are output parameters, they are put in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="91d2c-207">便會引發 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="91d2c-207">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="91d2c-208">呼叫 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="91d2c-208"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="91d2c-209">每個相關聯的命令<xref:System.Data.IDataAdapter>通常都有一個與其相關聯的參數集合。</span><span class="sxs-lookup"><span data-stu-id="91d2c-209">Each command associated with the <xref:System.Data.IDataAdapter> usually has a parameter collection associated with it.</span></span> <span data-ttu-id="91d2c-210">參數會對應至目前的資料列，透過`SourceColumn`並`SourceVersion`屬性的.NET Framework 資料提供者的`Parameter`類別。</span><span class="sxs-lookup"><span data-stu-id="91d2c-210">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="91d2c-211">`SourceColumn` 是指<xref:System.Data.DataTable>資料行，<xref:System.Data.IDataAdapter>以取得目前資料列的參數值的參考。</span><span class="sxs-lookup"><span data-stu-id="91d2c-211">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.IDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="91d2c-212">`SourceColumn` 在套用任何資料表對應之前，是指未對應的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="91d2c-212">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="91d2c-213">如果`SourceColumn`指的是不存在的資料行中，所採取的動作取決於下列其中一種<xref:System.Data.MissingMappingAction>值。</span><span class="sxs-lookup"><span data-stu-id="91d2c-213">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="91d2c-214">列舉值</span><span class="sxs-lookup"><span data-stu-id="91d2c-214">Enumeration Value</span></span>|<span data-ttu-id="91d2c-215">採取的動作</span><span class="sxs-lookup"><span data-stu-id="91d2c-215">Action Taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="91d2c-216">使用中的資料表名稱與來源資料行名稱<xref:System.Data.DataSet>如果不不存在任何對應。</span><span class="sxs-lookup"><span data-stu-id="91d2c-216">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="91d2c-217">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="91d2c-217">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="91d2c-218">時明確設定的對應，遺漏對應的輸入參數是通常會因發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="91d2c-218">When the mappings are explicitly set, a missing mapping for an input parameter is usually caused by an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="91d2c-219">A<xref:System.SystemException>產生。</span><span class="sxs-lookup"><span data-stu-id="91d2c-219">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="91d2c-220">`SourceColumn`屬性也會用來對應輸出的值，或輸入/輸出參數傳回`DataSet`。</span><span class="sxs-lookup"><span data-stu-id="91d2c-220">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="91d2c-221">如果它是指不存在的資料行，則會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="91d2c-221">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="91d2c-222">`SourceVersion` .NET Framework 資料提供者的屬性`Parameter`類別會決定是否要使用`Original`， `Current`，或`Proposed`版本的資料行的值。</span><span class="sxs-lookup"><span data-stu-id="91d2c-222">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the `Original`, `Current`, or `Proposed` version of the column value.</span></span> <span data-ttu-id="91d2c-223">這項功能是經常用來在 UPDATE 陳述式來檢查有開放式同步存取違規的 WHERE 子句中包含原始值。</span><span class="sxs-lookup"><span data-stu-id="91d2c-223">This capability is frequently used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="91d2c-224">如果在更新資料列時發生錯誤，會擲回例外狀況，並執行更新已停止。</span><span class="sxs-lookup"><span data-stu-id="91d2c-224">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="91d2c-225">若要繼續更新作業，而不會產生例外狀況，當發生錯誤時，設定<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>屬性，以`true`再呼叫<xref:System.Data.Common.DbDataAdapter.Update%2A>。</span><span class="sxs-lookup"><span data-stu-id="91d2c-225">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="91d2c-226">您也可以回應內每個資料列依錯誤`RowUpdated`DataAdapter 的事件。</span><span class="sxs-lookup"><span data-stu-id="91d2c-226">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="91d2c-227">若要繼續更新作業，而不會產生例外狀況內`RowUpdated`事件，設定<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>屬性<xref:System.Data.Common.RowUpdatedEventArgs>至<xref:System.Data.UpdateStatus.Continue>。</span><span class="sxs-lookup"><span data-stu-id="91d2c-227">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91d2c-228">下列範例會使用衍生的類別中，<xref:System.Data.OleDb.OleDbDataAdapter>至<xref:System.Data.Common.DataAdapter.Update%2A>資料來源。</span><span class="sxs-lookup"><span data-stu-id="91d2c-228">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to <xref:System.Data.Common.DataAdapter.Update%2A> the data source.</span></span> <span data-ttu-id="91d2c-229">這個範例假設您已建立<xref:System.Data.OleDb.OleDbDataAdapter>和<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="91d2c-229">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DataAdapter.IDataAdapter.Update Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataAdapter.IDataAdapter.Update Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataAdapter.IDataAdapter.Update Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataAdapter.IDataAdapter.Update Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="91d2c-230">嘗試執行 INSERT、UPDATE 或 DELETE 陳述式會造成沒有資料錄受影響。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91d2c-230">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>