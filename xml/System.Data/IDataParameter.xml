<Type Name="IDataParameter" FullName="System.Data.IDataParameter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3973071f6b4b1c91ad77e1e18755658dff506347" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53298850" /></Metadata><TypeSignature Language="C#" Value="public interface IDataParameter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataParameter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDataParameter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataParameter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataParameter" />
  <TypeSignature Language="F#" Value="type IDataParameter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>代表 Command 物件的參數及 (選擇性) 其與 <see cref="T:System.Data.DataSet" /> 資料行的對應，而且是由存取資料來源的 .NET Framework 資料提供者所實作。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.IDataParameter>介面可讓繼承的類別來實作參數類別，代表命令物件的參數。 如需參數類別的詳細資訊，請參閱[設定參數和參數資料類型](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)。  
  
 應用程式不會建立的執行個體<xref:System.Data.IDataParameter>介面直接，但建立繼承的類別的執行個體<xref:System.Data.IDataParameter>。  
  
 繼承的類別<xref:System.Data.IDataParameter>必須實作繼承的成員，並通常會定義要新增提供者特有的功能的其他成員。 例如，<xref:System.Data.IDataParameter>介面會定義<xref:System.Data.IDataParameter.DbType%2A>屬性。 依次<xref:System.Data.OleDb.OleDbParameter>類別會繼承這個屬性，而且也會定義<xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>屬性。  
  
   
  
## Examples  
 下列範例會建立多個衍生類別中，執行個體<xref:System.Data.SqlClient.SqlParameter>，透過<xref:System.Data.SqlClient.SqlParameterCollection>內的集合<xref:System.Data.SqlClient.SqlDataAdapter>。 這些參數用來從資料來源選取資料，並將放在資料<xref:System.Data.DataSet>。 這個範例假設<xref:System.Data.DataSet>和<xref:System.Data.SqlClient.SqlDataAdapter>已經建立具有適當的結構描述、 命令和連線。  
  
 [!code-csharp[Classic WebData SqlParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>若要升級.NET Framework 資料提供者之間的一致性，命名為在表單中繼承的類別<paramref name="Prv" />參數，<paramref name="Prv" />是統一的前置詞提供給特定的.NET Framework 資料提供者命名空間中的所有類別。 例如，<paramref name="Sql" />是的前置詞<see cref="T:System.Data.SqlClient.SqlCommand" />類別中<see langword="System.Data.SqlClient" />命名空間。  
  
當您繼承自<see cref="T:System.Data.IDataParameter" />介面，您應該實作下列建構函式： 
 <list type="table"><listheader><term> 項目 
 </term><description> 描述 
 </description></listheader><item><term> PrvParameter() 
 </term><description> 初始化參數類別的新執行個體。  
  
 </description></item><item><term> PrvParameter （字串名稱，PrvDbType 資料類型） 
 </term><description> 初始化具有參數名稱和資料類型的參數類別的新執行個體。  
  
 </description></item><item><term> PrvParameter （字串名稱，物件的值） 
 </term><description> 初始化具有參數名稱和物件參數的值，參數類別的新執行個體。  
  
 </description></item><item><term> PrvParameter 字串名稱、 PrvDbType 資料類型 (int 大小） 
 </term><description> 初始化具有參數名稱、 資料類型和寬度的參數類別的新執行個體。  
  
 </description></item><item><term> PrvParameter （字串名稱，PrvDbType 資料型別、 int 大小，字串 srcColumn） 
 </term><description> 初始化參數名稱、 資料類型、 寬度和來源資料行名稱的 DbParameter 類別的新執行個體。  
  
 </description></item><item><term> PrvParameter （字串參數名稱、 PrvDbType dbType、 int 大小、 ParameterDirection 方向、 布林值的 isNullable、 位元組精確度、 位元組的小數位數、 字串 srcColumn、 DataRowVersion srcVersion、 物件的值） 
 </term><description> 初始化的新執行個體<see cref="T:System.Data.OleDb.OleDbParameter" />類別使用參數名稱、 資料類型、 寬度、 來源資料行名稱、 參數方向、 數值有效位數和其他屬性。  
  
 </description></item></list></para></block>
  </Docs>
  <Members>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberSignature Language="F#" Value="member this.DbType : System.Data.DbType with get, set" Usage="System.Data.IDataParameter.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定參數的 <see cref="T:System.Data.DbType" />。</summary>
        <value>其中一個 <see cref="T:System.Data.DbType" /> 值。 預設為 <see cref="F:System.Data.DbType.String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 （Prv 代表提供者特定前置詞） PrvDbType 和<xref:System.Data.SqlClient.SqlParameter.DbType%2A>連結。 因此，設定<xref:System.Data.SqlClient.SqlParameter.DbType%2A>PrvDbType 變成支援 PrvDbType。  
  
 如需支援的資料類型的清單，請參閱適當的.NET Framework 資料提供者 PrvDbType 成員。 如需詳細資訊，請參閱 < [DataAdapter 的參數](~/docs/framework/data/adonet/dataadapter-parameters.md)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">屬性並未設定為有效的 <see cref="T:System.Data.DbType" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Data.ParameterDirection with get, set" Usage="System.Data.IDataParameter.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，表示參數是僅限輸入、僅限輸出、雙向或預存程序傳回值參數。</summary>
        <value>其中一個 <see cref="T:System.Data.ParameterDirection" /> 值。 預設為 <see langword="Input" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Data.ParameterDirection>是輸出，以及執行相關聯<xref:System.Data.SqlClient.SqlCommand>不會傳回一個值，<xref:System.Data.IDataParameter>包含 null 值。  
  
 在讀取最後一個結果集的最後一個資料列之後， `Output`， `InputOut`，和`ReturnValue`參數會更新。  
  
   
  
## Examples  
 下列範例會建立實作類別的執行個體<xref:System.Data.SqlClient.SqlParameter>，並將其部分屬性。  
  
 [!code-csharp[Classic WebData SqlParameter.Direction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Direction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.Direction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Direction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">屬性未設定為其中一個有效的 <see cref="T:System.Data.ParameterDirection" /> 值。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool" Usage="System.Data.IDataParameter.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，這個值指出參數是否接受 Null 值。</summary>
        <value>如果接受 Null 值，則為 <see langword="true" />；否則為 <see langword="false" />。 預設為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用處理 null 值<xref:System.DBNull>類別。  
  
   
  
## Examples  
 下列範例會建立實作類別的執行個體<xref:System.Data.SqlClient.SqlParameter>，並將其部分屬性。  
  
 [!code-csharp[Classic WebData SqlParameter.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public string ParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.ParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterName : string with get, set" Usage="System.Data.IDataParameter.ParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Data.IDataParameter" /> 的名稱。</summary>
        <value><see cref="T:System.Data.IDataParameter" /> 的名稱。 預設為空字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <xref:System.Data.IDataParameter.ParameterName%2A>表單中指定\@ *paramname*。 您必須設定<xref:System.Data.IDataParameter.ParameterName%2A>之前執行需要提供參數的命令。  
  
   
  
## Examples  
 下列範例會建立實作類別的執行個體<xref:System.Data.SqlClient.SqlParameter>，並將其部分屬性。  
  
 [!code-csharp[Classic WebData SqlParameter.ParameterName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.ParameterName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.SourceColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceColumn : string with get, set" Usage="System.Data.IDataParameter.SourceColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定來源資料行的名稱，其對應至 <see cref="T:System.Data.DataSet" /> 並用於載入或傳回 <see cref="P:System.Data.IDataParameter.Value" />。</summary>
        <value>對應至 <see cref="T:System.Data.DataSet" /> 的來源資料行名稱。 預設為空字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值之間的連結<xref:System.Data.IDataParameter>而<xref:System.Data.DataTable>可能的值而定的雙向<xref:System.Data.IDataParameter.Direction%2A>屬性。  
  
   
  
## Examples  
 下列範例會建立實作類別的執行個體<xref:System.Data.SqlClient.SqlParameter>，並將其部分屬性。  
  
 [!code-csharp[Classic WebData SqlParameter.SourceColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SourceColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceColumn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVersion">
      <MemberSignature Language="C#" Value="public System.Data.DataRowVersion SourceVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowVersion SourceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.SourceVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceVersion As DataRowVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRowVersion SourceVersion { System::Data::DataRowVersion get(); void set(System::Data::DataRowVersion value); };" />
      <MemberSignature Language="F#" Value="member this.SourceVersion : System.Data.DataRowVersion with get, set" Usage="System.Data.IDataParameter.SourceVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Data.DataRowVersion" />，以在載入 <see cref="P:System.Data.IDataParameter.Value" /> 時使用。</summary>
        <value>其中一個 <see cref="T:System.Data.DataRowVersion" /> 值。 預設為 <see langword="Current" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性由<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>期間<xref:System.Data.Common.DbDataAdapter.Update%2A>來決定是否使用參數值的原始或目前的值。 這可讓更新的主索引鍵。 這個屬性會忽略<xref:System.Data.IDbDataAdapter.InsertCommand%2A>和<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>。 此屬性設定為新版<xref:System.Data.DataRow>供<xref:System.Data.DataRow.Item%2A>屬性，或<xref:System.Data.DataRow.GetChildRows%2A>方法<xref:System.Data.DataRow>物件。  
  
   
  
## Examples  
 下列範例會建立實作類別的執行個體<xref:System.Data.SqlClient.SqlParameter>，並將其部分屬性。  
  
 [!code-csharp[Classic WebData SqlParameter.SourceVersion Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceVersion Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SourceVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">屬性未設定為其中一個 <see cref="T:System.Data.DataRowVersion" /> 值。</exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Data.IDataParameter.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定參數的值。</summary>
        <value><see cref="T:System.Object" />，為參數的值。 預設值為 null。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 輸入參數的值繫結至<xref:System.Data.IDbCommand>傳送到伺服器。 輸出和傳回值參數，此值設定完成<xref:System.Data.IDbCommand>和<xref:System.Data.IDataReader>已關閉。  
  
 當傳送 null 參數值到伺服器，必須指定使用者`DBNull`、 不是 null。 系統中的 Null 值是沒有值的空物件。 `DBNull` 用於表示 null 值。  
  
 如果應用程式指定的資料庫型別，繫結的值會轉換成該類型，提供者將資料傳送到伺服器時。 提供者會嘗試將任何類型的值如果支援<xref:System.IConvertible>介面。 如果指定的型別不相容的值，可能會導致轉換錯誤。  
  
 <xref:System.Data.SqlClient.SqlParameter.Value%2A>屬性會覆寫<xref:System.Data.Common.DbDataAdapter.Update%2A>。  
  
   
  
## Examples  
 下列範例會建立實作類別的執行個體<xref:System.Data.SqlClient.SqlParameter>，並將其部分屬性。  
  
 [!code-csharp[Classic WebData SqlParameter.Value Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Value Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.Value Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Value Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
