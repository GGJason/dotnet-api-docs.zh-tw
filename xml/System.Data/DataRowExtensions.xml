<Type Name="DataRowExtensions" FullName="System.Data.DataRowExtensions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2955547893c2a3e380261c92289f9705c03a5d52" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52603864" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class DataRowExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataRowExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRowExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DataRowExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataRowExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type DataRowExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>定義 <see cref="T:System.Data.DataRow" /> 類別的擴充方法。 這是靜態類別。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataSet> API 已擴充加上兩個新方法<xref:System.Data.DataRow>類別<xref:System.Data.DataRowExtensions.Field%2A>和<xref:System.Data.DataRowExtensions.SetField%2A>。 您可以使用這些表單[!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)]運算式和方法查詢<xref:System.Data.DataTable>物件。 它們是用來存取資料行值的建議的方法[!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)]運算式和方法的查詢。 如需詳細資訊，請參閱 <<c0> [ 泛型 Field 和 SetField 方法](~/docs/framework/data/adonet/generic-field-and-setfield-methods-linq-to-dataset.md)。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Field&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>提供強型別存取 <see cref="T:System.Data.DataRow" /> 中每個資料行的值。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, column As DataColumn) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * System.Data.DataColumn -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, column)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <typeparam name="T">泛型參數，會指定資料行的傳回型別。</typeparam>
        <param name="row">輸入 <see cref="T:System.Data.DataRow" />，作用為擴充方法的 <see langword="this" /> 執行個體。</param>
        <param name="column">輸入 <see cref="T:System.Data.DataColumn" /> 物件，指定要傳回其值的資料行。</param>
        <summary>提供強型別的權限以存取指定之資料列中每一個資料行的值。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /> 方法也支援可為 null 的型別。</summary>
        <returns>
          <paramref name="T" /> 指定之 <see cref="T:System.Data.DataColumn" /> 的 <paramref name="column" /> 型別值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataSet>類別代表**null**值<xref:System.DBNull.Value>的執行個體<xref:System.DBNull>類別。  A[!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)]存取的資料行的運算式**null**值會產生<xref:System.InvalidCastException>在執行階段。 此外，<xref:System.Data.DataSet>不支援可為 null 的類型。 <xref:System.Data.DataRowExtensions.Field%2A>方法來存取資料行做為可為 null 的型別提供支援。  如果基礎值<xref:System.Data.DataSet>已<xref:System.DBNull.Value>，傳回可為 null 的型別會有值為**null**。  
  
 如果指定的值<xref:System.Data.DataColumn>是<xref:System.DBNull.Value>並`T`是參考類型或可為 null 的型別，傳回的型別會**null**。 <xref:System.Data.DataRowExtensions.Field%2A>方法將不會傳回<xref:System.DBNull.Value>。  
  
 <xref:System.Data.DataRowExtensions.Field%2A>方法不會執行類型轉換。 如果需要型別轉換，您應該先使用取得的資料行值<xref:System.Data.DataRowExtensions.Field%2A>方法。 資料行值則應該轉換成另一種類型。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">基礎資料行的實值型別不能轉換成泛型參數 <paramref name="T" /> 所指定的型別。</exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="column" /> 所指定的資料行不會出現在 <see cref="T:System.Data.DataTable" /> 所屬的 <see cref="T:System.Data.DataRow" />。</exception>
        <exception cref="T:System.NullReferenceException">**null** 值已指派給不可為 Null 的類型。</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnIndex As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, int columnIndex);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * int -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, columnIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">泛型參數，會指定資料行的傳回型別。</typeparam>
        <param name="row">輸入 <see cref="T:System.Data.DataRow" />，作用為擴充方法的 <see langword="this" /> 執行個體。</param>
        <param name="columnIndex">資料行索引。</param>
        <summary>提供強型別的權限以存取指定之資料列中每一個資料行的值。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /> 方法也支援可為 null 的型別。</summary>
        <returns>
          <paramref name="T" /> 指定之 <see cref="T:System.Data.DataColumn" /> 的 <paramref name="columnIndex" /> 型別值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataSet>類別代表**null**值<xref:System.DBNull.Value>的執行個體<xref:System.DBNull>類別。  A[!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)]存取的資料行的運算式**null**值會產生<xref:System.InvalidCastException>在執行階段。 此外，<xref:System.Data.DataSet>不支援可為 null 的類型。 <xref:System.Data.DataRowExtensions.Field%2A>方法來存取資料行做為可為 null 的型別提供支援。  如果基礎值<xref:System.Data.DataSet>已<xref:System.DBNull.Value>，傳回可為 null 的型別會有值為**null**。  
  
 如果指定的值<xref:System.Data.DataColumn>是**null**並`T`是參考型別或可為 null 的型別，則會傳回型別**null**。  <xref:System.Data.DataRowExtensions.Field%2A>方法將不會傳回<xref:System.DBNull.Value>。  
  
 <xref:System.Data.DataRowExtensions.Field%2A>方法不會執行類型轉換。 如果需要型別轉換，您應該先使用取得的資料行值<xref:System.Data.DataRowExtensions.Field%2A>方法。 資料行值則應該轉換成另一種類型。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">基礎資料行的實值型別不能轉換成泛型參數 <paramref name="T" /> 所指定的型別。</exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="ordinal" /> 所指定的資料行不會存在於 <see cref="T:System.Data.DataTable" /> 所屬的 <see cref="T:System.Data.DataRow" />。</exception>
        <exception cref="T:System.NullReferenceException">**null** 值已指派給不可為 Null 的類型。</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnName As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * string -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, columnName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">泛型參數，會指定資料行的傳回型別。</typeparam>
        <param name="row">輸入 <see cref="T:System.Data.DataRow" />，作用為擴充方法的 <see langword="this" /> 執行個體。</param>
        <param name="columnName">要傳回其值的資料行名稱。</param>
        <summary>提供強型別的權限以存取指定之資料列中每一個資料行的值。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /> 方法也支援可為 null 的型別。</summary>
        <returns>
          <paramref name="T" /> 指定之 <see cref="T:System.Data.DataColumn" /> 的 <paramref name="columnName" /> 型別值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataSet>類別代表**null**值<xref:System.DBNull.Value>的執行個體<xref:System.DBNull>類別。 A[!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)]存取的資料行的運算式**null**值會產生<xref:System.InvalidCastException>在執行階段。 此外，<xref:System.Data.DataSet>不支援可為 null 的類型。 <xref:System.Data.DataRowExtensions.Field%2A>方法來存取資料行做為可為 null 的型別提供支援。 如果基礎值<xref:System.Data.DataSet>已<xref:System.DBNull.Value>，傳回可為 null 的型別會有值為**null**。  
  
 如果指定的值<xref:System.Data.DataColumn>是**null**並`T`是參考類型或可為 null 的型別，傳回的型別會**null**。 <xref:System.Data.DataRowExtensions.Field%2A>方法將不會傳回<xref:System.DBNull.Value>。  
  
 <xref:System.Data.DataRowExtensions.Field%2A>方法不會執行類型轉換。 如果需要型別轉換，您應該先使用取得的資料行值<xref:System.Data.DataRowExtensions.Field%2A>方法。 資料行值則應該轉換成另一種類型。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">基礎資料行的實值型別不能轉換成泛型參數 <paramref name="T" /> 所指定的型別。</exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="columnName" /> 所指定的資料行不會出現在 <see cref="T:System.Data.DataTable" /> 所屬的 <see cref="T:System.Data.DataRow" />。</exception>
        <exception cref="T:System.NullReferenceException">
          <see langword="null" /> 值已指派給不可為 null 的型別。</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, column As DataColumn, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::Data::DataColumn ^ column, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * System.Data.DataColumn * System.Data.DataRowVersion -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, column, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">泛型參數，會指定資料行的傳回型別。</typeparam>
        <param name="row">輸入 <see cref="T:System.Data.DataRow" />，作用為擴充方法的 <see langword="this" /> 執行個體。</param>
        <param name="column">輸入 <see cref="T:System.Data.DataColumn" /> 物件，指定要傳回其值的資料行。</param>
        <param name="version">
          <see cref="T:System.Data.DataRowVersion" /> 列舉，會指定要傳回之資料行值的版本，例如 <see langword="Current" /> 或 <see langword="Original" /> 版本。</param>
        <summary>提供強型別的權限以存取指定之資料列中每一個資料行的值。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /> 方法也支援可為 null 的型別。</summary>
        <returns>
          <paramref name="T" /> 和 <paramref name="column" /> 指定之 <see cref="T:System.Data.DataColumn" /> 的 <paramref name="version" /> 型別值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataSet>類別代表**null**值<xref:System.DBNull.Value>的執行個體<xref:System.DBNull>類別。  A[!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)]存取的資料行的運算式**null**值會產生<xref:System.InvalidCastException>在執行階段。 此外，<xref:System.Data.DataSet>不支援可為 null 的類型。 <xref:System.Data.DataRowExtensions.Field%2A>方法來存取資料行做為可為 null 的型別提供支援。  如果基礎值<xref:System.Data.DataSet>已<xref:System.DBNull.Value>，傳回可為 null 的型別會有值為**null**。  
  
 如果指定的值<xref:System.Data.DataColumn>為 null 並`T`是參考型別或可為 null 的型別，則會傳回型別**null**。 <xref:System.Data.DataRowExtensions.Field%2A>方法將不會傳回<xref:System.DBNull.Value>。  
  
 <xref:System.Data.DataRowExtensions.Field%2A>方法不會執行類型轉換。 如果需要型別轉換，您應該先使用取得的資料行值<xref:System.Data.DataRowExtensions.Field%2A>方法。 資料行值則應該轉換成另一種類型。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">基礎資料行的實值型別不能轉換成泛型參數 <paramref name="T" /> 所指定的型別。</exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="column" /> 所指定的資料行不會存在於 <see cref="T:System.Data.DataTable" /> 所屬的 <see cref="T:System.Data.DataRow" />。</exception>
        <exception cref="T:System.NullReferenceException">**null** 值已指派給不可為 Null 的類型。</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, int columnIndex, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnIndex As Integer, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, int columnIndex, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * int * System.Data.DataRowVersion -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, columnIndex, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">泛型參數，會指定資料行的傳回型別。</typeparam>
        <param name="row">輸入 <see cref="T:System.Data.DataRow" />，作用為擴充方法的 <see langword="this" /> 執行個體。</param>
        <param name="columnIndex">要傳回其值的資料行之以零起始的序數。</param>
        <param name="version">
          <see cref="T:System.Data.DataRowVersion" /> 列舉，會指定要傳回之資料行值的版本，例如 <see langword="Current" /> 或 <see langword="Original" /> 版本。</param>
        <summary>提供強型別的權限以存取指定之資料列中每一個資料行的值。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /> 方法也支援可為 null 的型別。</summary>
        <returns>
          <paramref name="T" /> 和 <paramref name="ordinal" /> 指定之 <see cref="T:System.Data.DataColumn" /> 的 <paramref name="version" /> 型別值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataSet>類別代表**null**值<xref:System.DBNull.Value>的執行個體<xref:System.DBNull>類別。  A[!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)]存取的資料行的運算式**null**值會產生<xref:System.InvalidCastException>在執行階段。 此外，<xref:System.Data.DataSet>不支援可為 null 的類型。 <xref:System.Data.DataRowExtensions.Field%2A>方法來存取資料行做為可為 null 的型別提供支援。  如果基礎值<xref:System.Data.DataSet>已<xref:System.DBNull.Value>，傳回可為 null 的型別會有值為**null**。  
  
 如果指定的值<xref:System.Data.DataColumn>為 null 並`T`是參考型別或可為 null 的型別，則會傳回型別**null**。 <xref:System.Data.DataRowExtensions.Field%2A>方法將不會傳回<xref:System.DBNull.Value>。  
  
 <xref:System.Data.DataRowExtensions.Field%2A>方法不會執行類型轉換。 如果需要型別轉換，您應該先使用取得的資料行值<xref:System.Data.DataRowExtensions.Field%2A>方法。 資料行值則應該轉換成另一種類型。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">基礎資料行的實值型別不能轉換成泛型參數 <paramref name="T" /> 所指定的型別。</exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="ordinal" /> 所指定的資料行不會存在於 <see cref="T:System.Data.DataTable" /> 所屬的 <see cref="T:System.Data.DataRow" />。</exception>
        <exception cref="T:System.NullReferenceException">**null** 值已指派給不可為 Null 的類型。</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, string columnName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, string columnName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnName As String, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::String ^ columnName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * string * System.Data.DataRowVersion -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, columnName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">泛型參數，會指定資料行的傳回型別。</typeparam>
        <param name="row">輸入 <see cref="T:System.Data.DataRow" />，作用為擴充方法的 <see langword="this" /> 執行個體。</param>
        <param name="columnName">要傳回其值的資料行名稱。</param>
        <param name="version">
          <see cref="T:System.Data.DataRowVersion" /> 列舉，會指定要傳回之資料行值的版本，例如 <see langword="Current" /> 或 <see langword="Original" /> 版本。</param>
        <summary>提供強型別的權限以存取指定之資料列中每一個資料行的值。 <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /> 方法也支援可為 null 的型別。</summary>
        <returns>
          <paramref name="T" /> 和 <paramref name="columnName" /> 指定之 <see cref="T:System.Data.DataColumn" /> 的 <paramref name="version" /> 型別值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataSet>類別代表**null**值<xref:System.DBNull.Value>的執行個體<xref:System.DBNull>類別。  A[!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)]存取的資料行的運算式**null**值會產生<xref:System.InvalidCastException>在執行階段。 此外，<xref:System.Data.DataSet>不支援可為 null 的類型。 <xref:System.Data.DataRowExtensions.Field%2A>方法來存取資料行做為可為 null 的型別提供支援。  如果基礎值<xref:System.Data.DataSet>已<xref:System.DBNull.Value>，傳回可為 null 的型別會有值為**null**。  
  
 如果指定的值<xref:System.Data.DataColumn>為 null 並`T`是參考型別或可為 null 的型別，則會傳回型別**null**。 <xref:System.Data.DataRowExtensions.Field%2A>方法將不會傳回<xref:System.DBNull.Value>。  
  
 <xref:System.Data.DataRowExtensions.Field%2A>方法不會執行類型轉換。 如果需要型別轉換，您應該先使用取得的資料行值<xref:System.Data.DataRowExtensions.Field%2A>方法。 資料行值則應該轉換成另一種類型。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">基礎資料行的實值型別不能轉換成泛型參數 <paramref name="T" /> 所指定的型別。</exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="columnName" /> 所指定的資料行不會存在於 <see cref="T:System.Data.DataTable" /> 所屬的 <see cref="T:System.Data.DataRow" />。</exception>
        <exception cref="T:System.NullReferenceException">**null** 值已指派給不可為 Null 的類型。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetField&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在 <see cref="T:System.Data.DataRow" /> 中，為指定的資料行設定新的值。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, column As DataColumn, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, System::Data::DataColumn ^ column, T value);" />
      <MemberSignature Language="F#" Value="static member SetField : System.Data.DataRow * System.Data.DataColumn * 'T -&gt; unit" Usage="System.Data.DataRowExtensions.SetField (row, column, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">泛型參數，會指定資料行的實值型別。</typeparam>
        <param name="row">輸入 <see cref="T:System.Data.DataRow" />，作用為擴充方法的 <see langword="this" /> 執行個體。</param>
        <param name="column">輸入 <see cref="T:System.Data.DataColumn" />，指定要擷取哪個資料列值。</param>
        <param name="value">指定之資料行的新資料列值，這個值的類型為 <c>T</c>。</param>
        <summary>在 <see cref="T:System.Data.DataRow" /> 中，為指定的資料行設定新的值。 <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /> 方法也支援可為 null 的型別。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`value`已**null**，則<xref:System.Data.DataRowExtensions.SetField%2A>方法轉換**null**值<xref:System.DBNull.Value>在基礎<xref:System.Data.DataColumn>。  
  
 <xref:System.Data.DataRowExtensions.SetField%2A>方法不會執行任何類型的轉換。 不過，這並不表示不會進行型別轉換。 <xref:System.Data.DataRowExtensions.SetField%2A>方法會公開[!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)]行為<xref:System.Data.DataRow>類別。 無法執行類型轉換，藉由<xref:System.Data.DataRow>物件和轉換的值則會儲存到資料列。  
  
 可以透過向上傳遞例外狀況<xref:System.Data.DataRowExtensions.SetField%2A>方法，從基礎<xref:System.Data.DataRow>物件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">找不到 <paramref name="column" /> 指定的資料行。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="column" /> 為 **null**。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">嘗試在已刪除的資料列上設定值時發生。</exception>
        <exception cref="T:System.InvalidCastException">基礎資料行的實值型別不能轉換成泛型參數 <paramref name="T" /> 所指定的型別。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, int columnIndex, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, columnIndex As Integer, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, int columnIndex, T value);" />
      <MemberSignature Language="F#" Value="static member SetField : System.Data.DataRow * int * 'T -&gt; unit" Usage="System.Data.DataRowExtensions.SetField (row, columnIndex, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">泛型參數，會指定資料行的實值型別。</typeparam>
        <param name="row">輸入 <see cref="T:System.Data.DataRow" />，作用為擴充方法的 <see langword="this" /> 執行個體。</param>
        <param name="columnIndex">要設定其值的資料行之以零起始的序數。</param>
        <param name="value">指定之資料行的新資料列值，這個值的類型為 <c>T</c>。</param>
        <summary>在 <see cref="T:System.Data.DataRow" /> (會針對它呼叫此方法) 中，為指定的資料行設定新的值。 <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /> 方法也支援可為 null 的型別。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`value`已**null**，則<xref:System.Data.DataRowExtensions.SetField%2A>方法轉換**null**值<xref:System.DBNull.Value>在基礎<xref:System.Data.DataColumn>。  
  
 <xref:System.Data.DataRowExtensions.SetField%2A>方法不會執行任何類型的轉換。 不過，這並不表示不會進行型別轉換。 <xref:System.Data.DataRowExtensions.SetField%2A>方法會公開[!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)]行為<xref:System.Data.DataRow>類別。 無法執行類型轉換，藉由<xref:System.Data.DataRow>物件和轉換的值則會儲存到資料列。  
  
 可以透過向上傳遞例外狀況<xref:System.Data.DataRowExtensions.SetField%2A>方法，從基礎<xref:System.Data.DataRow>物件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">嘗試在已刪除的資料列上設定值時發生。</exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <paramref name="ordinal" /> 引數超出範圍。</exception>
        <exception cref="T:System.InvalidCastException">基礎資料行的實值型別不能轉換成泛型參數 <paramref name="T" /> 所指定的型別。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, string columnName, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, string columnName, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, columnName As String, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, System::String ^ columnName, T value);" />
      <MemberSignature Language="F#" Value="static member SetField : System.Data.DataRow * string * 'T -&gt; unit" Usage="System.Data.DataRowExtensions.SetField (row, columnName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">泛型參數，會指定資料行的實值型別。</typeparam>
        <param name="row">輸入 <see cref="T:System.Data.DataRow" />，作用為擴充方法的 <see langword="this" /> 執行個體。</param>
        <param name="columnName">要設定其值的資料行名稱。</param>
        <param name="value">指定之資料行的新資料列值，這個值的類型為 <c>T</c>。</param>
        <summary>在 <see cref="T:System.Data.DataRow" /> 中，為指定的資料行設定新的值。 <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /> 方法也支援可為 null 的型別。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`value`已**null**，則<xref:System.Data.DataRowExtensions.SetField%2A>方法轉換**null**值<xref:System.DBNull.Value>在基礎<xref:System.Data.DataColumn>。  
  
 <xref:System.Data.DataRowExtensions.SetField%2A>方法不會執行任何類型的轉換。 不過，這並不表示不會進行型別轉換。 <xref:System.Data.DataRowExtensions.SetField%2A>方法會公開[!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)]行為<xref:System.Data.DataRow>類別。 無法執行類型轉換，藉由<xref:System.Data.DataRow>物件和轉換的值則會儲存到資料列。  
  
 可以透過向上傳遞例外狀況<xref:System.Data.DataRowExtensions.SetField%2A>方法，從基礎<xref:System.Data.DataRow>物件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">找不到 <paramref name="columnName" /> 指定的資料行。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">嘗試在已刪除的資料列上設定值時發生。</exception>
        <exception cref="T:System.InvalidCastException">基礎資料行的實值型別不能轉換成泛型參數 <paramref name="T" /> 所指定的型別。</exception>
      </Docs>
    </Member>
  </Members>
</Type>