<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataSet.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e05b5b2-d481-4262-b7b7-7de7ac2afe072e2a9f9609b7cc29be43e2c8071d5d8e731d0672.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e2a9f9609b7cc29be43e2c8071d5d8e731d0672</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/07/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.DataSet">
          <source>Represents an in-memory cache of data.</source>
          <target state="translated">代表資料的記憶體中快取。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, which is an in-memory cache of data retrieved from a data source, is a major component of the ADO.NET architecture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>，這就是資料來源擷取資料的記憶體中快取是 ADO.NET 架構的主要元件。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> consists of a collection of <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects that you can relate to each other with <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>組成的集合<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>物件，您可以與彼此相關以<ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>You can also enforce data integrity in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> by using the <ph id="ph2">&lt;xref:System.Data.UniqueConstraint&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> objects.</source>
          <target state="translated">您也可以強制執行中的資料完整性<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>使用<ph id="ph2">&lt;xref:System.Data.UniqueConstraint&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>For further details about working with <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> objects, see <bpt id="p1">[</bpt>DataSets, DataTables, and DataViews<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/index.md)</ept>.</source>
          <target state="translated">如需有關使用的詳細資訊<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>物件，請參閱<bpt id="p1">[</bpt>資料集、 Datatable 和 Dataview<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Whereas <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects contain the data, the <ph id="ph2">&lt;xref:System.Data.DataRelationCollection&gt;</ph> allows you to navigate though the table hierarchy.</source>
          <target state="translated">而<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>物件包含的資料，<ph id="ph2">&lt;xref:System.Data.DataRelationCollection&gt;</ph>可讓您巡覽資料表階層架構。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The tables are contained in a <ph id="ph1">&lt;xref:System.Data.DataTableCollection&gt;</ph> accessed through the <ph id="ph2">&lt;xref:System.Data.DataSet.Tables%2A&gt;</ph> property.</source>
          <target state="translated">資料表包含在<ph id="ph1">&lt;xref:System.Data.DataTableCollection&gt;</ph>透過存取<ph id="ph2">&lt;xref:System.Data.DataSet.Tables%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>When accessing <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects, note that they are conditionally case sensitive.</source>
          <target state="translated">當存取<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>物件，請注意，它們是有條件地區分大小寫。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>For example, if one <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is named "mydatatable" and another is named "Mydatatable", a string used to search for one of the tables is regarded as case sensitive.</source>
          <target state="translated">例如，如果一個<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>名為"mydatatable"和另一個名為"Mydatatable 」，用來搜尋的其中一個資料表的字串會視為區分大小寫。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>However, if "mydatatable" exists and "Mydatatable" does not, the search string is regarded as case insensitive.</source>
          <target state="translated">不過，如果"mydatatable 」 存在，"Mydatatable"並不會搜尋字串會視為為不區分大小寫。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>For more information about working with <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects, see <bpt id="p1">[</bpt>Creating a DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-a-datatable.md)</ept>.</source>
          <target state="translated">如需有關使用<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>物件，請參閱<bpt id="p1">[</bpt>建立 DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-a-datatable.md)</ept>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> can read and write data and schema as XML documents.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>可以讀取和寫入資料和結構描述為 XML 文件。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The data and schema can then be transported across HTTP and used by any application, on any platform that is XML-enabled.</source>
          <target state="translated">資料和結構描述可以會透過 HTTP 傳輸並啟用 XML 的任何平台上的任何應用程式，使用。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>You can save the schema as an XML schema with the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method, and both schema and data can be saved using the <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">您可以將結構描述儲存為 XML 結構描述與<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法，這個方法，而結構描述和資料可以儲存使用<ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>To read an XML document that includes both schema and data, use the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method.</source>
          <target state="translated">若要讀取 XML 文件包含結構描述和資料，使用<ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>In a typical multiple-tier implementation, the steps for creating and refreshing a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, and in turn, updating the original data are to:</source>
          <target state="translated">在典型的多層式實作，建立及重新整理步驟<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>，而且接著，更新的原始資料的：</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Build and fill each <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> in a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with data from a data source using a <ph id="ph3">&lt;xref:System.Data.Common.DataAdapter&gt;</ph>.</source>
          <target state="translated">建立並填入每個<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>中<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>使用資料來源的資料<ph id="ph3">&lt;xref:System.Data.Common.DataAdapter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Change the data in individual <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects by adding, updating, or deleting <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects.</source>
          <target state="translated">變更中個別的資料<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>藉由加入、 更新或刪除物件<ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Invoke the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method to create a second <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> that features only the changes to the data.</source>
          <target state="translated">叫用<ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph>方法，以建立第二個<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>該功能的資料變更。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Call the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph>, passing the second <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> as an argument.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph>，傳遞第二個<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>做為引數。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Invoke the <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method to merge the changes from the second <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> into the first.</source>
          <target state="translated">叫用<ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>方法，將合併的變更，在第二個<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>到第一個。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Invoke the <ph id="ph1">&lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;</ph> on the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">叫用<ph id="ph1">&lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;</ph>上<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Alternatively, invoke <ph id="ph1">&lt;xref:System.Data.DataSet.RejectChanges%2A&gt;</ph> to cancel the changes.</source>
          <target state="translated">或者，叫用<ph id="ph1">&lt;xref:System.Data.DataSet.RejectChanges%2A&gt;</ph>取消所做的變更。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects inherit from <ph id="ph3">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph>, and support the <ph id="ph4">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface for remoting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>物件繼承自<ph id="ph3">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph>，並支援<ph id="ph4">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>遠端執行功能的介面。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>These are the only ADO.NET objects that can be remoted.</source>
          <target state="translated">這些是唯一可以進行遠端通訊的 ADO.NET 物件。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Classes inherited from <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> are not finalized by the garbage collector, because the finalizer has been suppressed in <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">類別繼承自<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>不完成記憶體回收行程，因為已經在隱藏的完成項<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The derived class can call the <ph id="ph1">&lt;xref:System.GC.ReRegisterForFinalize%2A&gt;</ph> method in its constructor to allow the class to be finalized by the garbage collector.</source>
          <target state="translated">在衍生的類別可以呼叫<ph id="ph1">&lt;xref:System.GC.ReRegisterForFinalize%2A&gt;</ph>其建構函式，以允許記憶體回收行程最終處理而類別中的方法。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The following example consists of several methods that, combined, create and fill a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> from the <bpt id="p1">**</bpt>Northwind<ept id="p1">**</ept> database.</source>
          <target state="translated">下列範例包含數種方法，結合，建立並填入<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>從<bpt id="p1">**</bpt>Northwind<ept id="p1">**</ept>資料庫。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>This type is safe for multithreaded read operations.</source>
          <target state="translated">此類型是安全多執行緒的讀取作業。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>You must synchronize any write operations.</source>
          <target state="translated">您必須同步處理任何寫入作業。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="T:System.Data.DataSet">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.#ctor">
          <source>This implementation of the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> constructor takes no parameters, and creates a default name, "NewDataSet," for the new instance.</source>
          <target state="translated">這項實作<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>建構函式不採用任何參數，並建立一個預設名稱，"NewDataSet，"新的執行個體。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.#ctor">
          <source>A name for the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is required to ensure that the XML representation of the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> always has a name for the document element, which is the highest-level element in a schema definition.</source>
          <target state="translated">名稱<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>，才能確保的 XML 表示法<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>一律會有文件項目，也就是最高層級的項目結構描述定義中的名稱。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.#ctor">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, and adds two <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects to it.</source>
          <target state="translated">下列範例會建立新<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>，並加入兩個<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>給它的物件。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.#ctor(System.String)">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 的名稱。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.#ctor(System.String)">
          <source>Initializes a new instance of a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> class with the given name.</source>
          <target state="translated">使用指定名稱，初始化 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.#ctor(System.String)">
          <source>A name for the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is required to ensure that the XML representation of the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> always has a name for the document element, which is the highest level element in a schema definition.</source>
          <target state="translated">名稱<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>，才能確保的 XML 表示法<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>一律會有文件項目，也就是最高的層級項目結構描述定義中的名稱。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.#ctor(System.String)">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, to which two <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects are added.</source>
          <target state="translated">下列範例會建立新<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>的兩個<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>物件就會加入。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The data needed to serialize or deserialize an object.</source>
          <target state="translated">序列化或還原序列化物件所需的資料。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The source and destination of a given serialized stream.</source>
          <target state="translated">指定的序列化資料流的來源和目的端。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> class that has the given serialization information and context.</source>
          <target state="translated">初始化具有指定序列化資訊和內容之 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)">
          <source>The boolean value.</source>
          <target state="translated">布林值。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.AcceptChanges">
          <source>Commits all the changes made to this <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> since it was loaded or since the last time <ph id="ph2">&lt;see cref="M:System.Data.DataSet.AcceptChanges" /&gt;</ph> was called.</source>
          <target state="translated">認可從載入這個 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 物件或前一次呼叫 <ph id="ph2">&lt;see cref="M:System.Data.DataSet.AcceptChanges" /&gt;</ph> 以來，對該物件做的所有變更。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source>Both the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> classes have <ph id="ph3">&lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;</ph> methods.</source>
          <target state="translated">同時<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>類別具有<ph id="ph3">&lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source>Calling <ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> at the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> level causes the <ph id="ph3">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> method for each <ph id="ph4">&lt;xref:System.Data.DataRow&gt;</ph> to be called.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph>在<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>層級原因<ph id="ph3">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph>每個方法<ph id="ph4">&lt;xref:System.Data.DataRow&gt;</ph>呼叫。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source>Similarly, invoking <ph id="ph1">&lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;</ph> on the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> causes <ph id="ph3">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> to be called on each table within the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">同樣地，叫用<ph id="ph1">&lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;</ph>上<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>導致<ph id="ph3">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph>中每一個資料表上呼叫<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source>In this manner, you have multiple levels at which the method can be invoked.</source>
          <target state="translated">如此一來，在中，您必須在可以叫用此方法的多個層級。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> enables you to invoke the method on all subordinate objects (for example, tables and rows) with one call.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>可讓您叫用所有從屬物件 （例如，資料表和資料列） 中的某個呼叫的方法。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source>When you call <ph id="ph1">`AcceptChanges`</ph> on the <ph id="ph2">`DataSet`</ph>, any <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects still in edit-mode end their edits successfully.</source>
          <target state="translated">當您呼叫<ph id="ph1">`AcceptChanges`</ph>上<ph id="ph2">`DataSet`</ph>，任何<ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>物件仍在編輯模式中的順利結束編輯。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> property of each <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> also changes; <ph id="ph3">`Added`</ph> and <ph id="ph4">`Modified`</ph> rows become <ph id="ph5">`Unchanged`</ph>, and <ph id="ph6">`Deleted`</ph> rows are removed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph>每個屬性<ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>也會變更。<ph id="ph3">`Added`</ph>和<ph id="ph4">`Modified`</ph>資料列會變成<ph id="ph5">`Unchanged`</ph>，和<ph id="ph6">`Deleted`</ph>會移除資料列。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source>If the <ph id="ph1">`DataSet`</ph> contains <ph id="ph2">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> objects, invoking the <ph id="ph3">`AcceptChanges`</ph> method also causes the <ph id="ph4">&lt;xref:System.Data.ForeignKeyConstraint.AcceptRejectRule%2A&gt;</ph> to be enforced.</source>
          <target state="translated">如果<ph id="ph1">`DataSet`</ph>包含<ph id="ph2">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph>叫用的物件<ph id="ph3">`AcceptChanges`</ph>方法也會導致<ph id="ph4">&lt;xref:System.Data.ForeignKeyConstraint.AcceptRejectRule%2A&gt;</ph>強制執行。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source><ph id="ph1">`AcceptChanges`</ph> and <ph id="ph2">`RejectChanges`</ph> only apply to <ph id="ph3">`DataRow`</ph> related changes (that is, Add, Remove, Delete, and Modify).</source>
          <target state="translated"><ph id="ph1">`AcceptChanges`</ph> 和<ph id="ph2">`RejectChanges`</ph>只會套用到<ph id="ph3">`DataRow`</ph>相關的變更 （亦即，新增、 移除、 刪除和修改）。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source>They are not applicable to schema or structural changes.</source>
          <target state="translated">它們並不適用於結構描述或結構化變更。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source>Calling AcceptChanges will not replicate these changes back to the data source if the DataSet was filled using a DataAdapter.</source>
          <target state="translated">呼叫 AcceptChanges 不會複寫這些變更回資料來源是否已填入資料集，使用資料配接器。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source>In that situation, call <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> instead.</source>
          <target state="translated">在此情況下，呼叫<ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph>改為。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source>See <bpt id="p1">[</bpt>Updating Data Sources with DataAdapters<ept id="p1">](http://msdn.microsoft.com/library/33y2221y.aspx)</ept> for more information.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>以 Dataadapter 更新資料來源<ept id="p1">](http://msdn.microsoft.com/library/33y2221y.aspx)</ept>如需詳細資訊。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source>The following example adds a <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> in a <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">下列範例會將<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>至<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>中<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;</ph> method is then called on the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, which cascades to all <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objects that it contains.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;</ph>方法接著會在呼叫<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>，哪些串聯，聯集全部<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>它所包含的物件。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.BeginInit">
          <source>Begins the initialization of a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> that is used on a form or used by another component.</source>
          <target state="translated">開始對表單或另一個元件所使用的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 進行初始化作業。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.BeginInit">
          <source>The initialization occurs at run time.</source>
          <target state="translated">初始化發生於執行階段。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.BeginInit">
          <source>The Visual Studio .NET design environment uses this method to start the initialization of a component that is used on a form or used by another component.</source>
          <target state="translated">Visual Studio.NET 設計環境會使用這個方法來開始初始化用於表單或為另一個元件所使用的元件。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.BeginInit">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.EndInit%2A&gt;</ph> method ends the initialization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.EndInit%2A&gt;</ph>方法結束初始化。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.BeginInit">
          <source>Using the <ph id="ph1">&lt;xref:System.Data.DataSet.BeginInit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.EndInit%2A&gt;</ph> methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataSet.BeginInit%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataSet.EndInit%2A&gt;</ph>方法可防止控制項完全初始化之前使用。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.CaseSensitive">
          <source>Gets or sets a value indicating whether string comparisons within <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects are case-sensitive.</source>
          <target state="translated">取得或設定值，指出在 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 物件中的字串比較是否為區分大小寫。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.CaseSensitive">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if string comparisons are case-sensitive; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果字串比較為區分大小寫，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.CaseSensitive">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.CaseSensitive">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.CaseSensitive%2A&gt;</ph> property affects how sorting, searching, and filtering operations are performed on each <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> object contained in a <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> when using the <ph id="ph4">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.CaseSensitive%2A&gt;</ph>如何排序、 搜尋和篩選作業執行的每個屬性會影響<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>中所含物件<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>時使用<ph id="ph4">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.CaseSensitive">
          <source>By default, setting the <ph id="ph1">&lt;xref:System.Data.DataSet.CaseSensitive%2A&gt;</ph> property for a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> also sets the <ph id="ph3">&lt;xref:System.Data.DataTable.CaseSensitive%2A&gt;</ph> property of each associated <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> to the same value.</source>
          <target state="translated">根據預設，設定<ph id="ph1">&lt;xref:System.Data.DataSet.CaseSensitive%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>也會設定<ph id="ph3">&lt;xref:System.Data.DataTable.CaseSensitive%2A&gt;</ph>的每個相關聯的屬性<ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>為相同的值。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.CaseSensitive">
          <source>The following example toggles the <ph id="ph1">&lt;xref:System.Data.DataSet.CaseSensitive%2A&gt;</ph> property.</source>
          <target state="translated">下列範例會切換<ph id="ph1">&lt;xref:System.Data.DataSet.CaseSensitive%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Clear">
          <source>Clears the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> of any data by removing all rows in all tables.</source>
          <target state="translated">移除所有資料表中的資料列，以清除任何資料的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Clear">
          <source>If the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is bound to an <ph id="ph2">&lt;xref:System.Xml.XmlDataDocument&gt;</ph>, calling <ph id="ph3">&lt;xref:System.Data.DataSet.Clear%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph4">&lt;xref:System.Data.DataTable.Clear%2A?displayProperty=nameWithType&gt;</ph> raises the <ph id="ph5">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>繫結至<ph id="ph2">&lt;xref:System.Xml.XmlDataDocument&gt;</ph>，則呼叫<ph id="ph3">&lt;xref:System.Data.DataSet.Clear%2A?displayProperty=nameWithType&gt;</ph>或<ph id="ph4">&lt;xref:System.Data.DataTable.Clear%2A?displayProperty=nameWithType&gt;</ph>引發<ph id="ph5">&lt;xref:System.NotSupportedException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Clear">
          <source>To avoid this situation, traverse each table, removing each row one at a time.</source>
          <target state="translated">若要避免這種情況下，會周遊一次移除一個每個資料列的每個資料表。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Clear">
          <source>The following example clears the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> of all rows in all tables.</source>
          <target state="translated">下列範例會清除<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>的所有資料表中的所有資料列。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Clone">
          <source>Copies the structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, including all <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> schemas, relations, and constraints.</source>
          <target state="translated">複製 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 的結構，包括所有 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 結構描述、關聯和條件約束。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Clone">
          <source>Does not copy any data.</source>
          <target state="translated">不要複製任何資料。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with the same schema as the current <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, but none of the data.</source>
          <target state="translated">具有與目前的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 相同結構描述之新 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>，但是沒有資料。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Clone">
          <source>If these classes have been subclassed, the clone will also be of the same subclasses.</source>
          <target state="translated">如果這些類別具有已子類別化，複製也會屬於相同的子類別。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Clone">
          <source>The following example creates a clone of a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object's schema.</source>
          <target state="translated">下列範例會建立複製的<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>物件的結構描述。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Copy">
          <source>Copies both the structure and data for this <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">複製這個 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 的結構和資料。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Copy">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with the same structure (table schemas, relations, and constraints) and data as this <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">新的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>，具有與這個 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 相同的結構 (資料表結構描述、關聯和條件約束) 和資料。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Copy">
          <source>If these classes have been subclassed, the copy will also be of the same subclasses.</source>
          <target state="translated">如果這些類別已形成子類別，則複本也會屬於相同的子類別。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Copy">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataSet.Copy%2A&gt;</ph> method to create a copy of the original <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Data.DataSet.Copy%2A&gt;</ph>方法來建立一份原始<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="T:System.Data.DataSet">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> with one result set per <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, in the same sequence as the tables appear in the <ph id="ph3">&lt;see cref="P:System.Data.DataSet.Tables" /&gt;</ph> collection.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>，每個 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 有一個結果集，順序與資料表出現在 <ph id="ph3">&lt;see cref="P:System.Data.DataSet.Tables" /&gt;</ph> 集合中的順序相同。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>In order to ensure the order of the result sets within the returned <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>, if a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> within the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> is empty, it will be represented by an empty result set within the returned <ph id="ph4">`DataTableReader`</ph>.</source>
          <target state="translated">若要確保結果集內傳回的順序<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>，如果<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>內<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>是空的它將由表示空的結果集內傳回<ph id="ph4">`DataTableReader`</ph>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>This example, a Console application, creates three <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances and adds each to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">此範例中，主控台應用程式，會建立三個<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>執行個體，並將每個要<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Data.DataSet.CreateDataReader%2A&gt;</ph> method and displays the contents of the returned <ph id="ph2">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">範例會呼叫<ph id="ph1">&lt;xref:System.Data.DataSet.CreateDataReader%2A&gt;</ph>方法，並顯示傳回之內容<ph id="ph2">&lt;xref:System.Data.DataTableReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Note that the order of the result sets in the <ph id="ph1">`DataTableReader`</ph> is controlled by the order of the <ph id="ph2">`DataTable`</ph> instances passed as parameters.</source>
          <target state="translated">請注意，在 設定結果的順序<ph id="ph1">`DataTableReader`</ph>控制依以下順序<ph id="ph2">`DataTable`</ph>做為參數傳遞的執行個體。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>This example shows how to use one of the overloaded versions of <ph id="ph1">`CreateDataReader`</ph>.</source>
          <target state="translated">這個範例示範如何使用其中一個多載版本<ph id="ph1">`CreateDataReader`</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>For other examples that might be available, see the individual overload topics.</source>
          <target state="translated">如需可能會提供其他範例，請參閱個別的多載的主題。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The example displays the following code in the Console window:</source>
          <target state="translated">此範例會在主控台視窗中顯示下列程式碼：</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.CreateDataReader">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> with one result set per <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, in the same sequence as the tables appear in the <ph id="ph3">&lt;see cref="P:System.Data.DataSet.Tables" /&gt;</ph> collection.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>，每個 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 有一個結果集，順序與資料表出現在 <ph id="ph3">&lt;see cref="P:System.Data.DataSet.Tables" /&gt;</ph> 集合中的順序相同。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.CreateDataReader">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> containing one or more result sets, corresponding to the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> instances contained within the source <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>，包含一個或多個結果集，對應於包含在來源 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 之中的 <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.CreateDataReader">
          <source>In order to ensure the order of the result sets within the returned <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>, if a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> within the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> is empty, it is represented by an empty result set within the returned <ph id="ph4">`DataTableReader`</ph>.</source>
          <target state="translated">若要確保結果集內傳回的順序<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>，如果<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>內<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>是空的它會以空的結果集內傳回<ph id="ph4">`DataTableReader`</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.CreateDataReader">
          <source>The following example creates three <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances, and adds each to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">下列範例會建立三個<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>例項，並將每個要加入<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.CreateDataReader">
          <source>The example then passes the filled <ph id="ph1">`DataSet`</ph> to a procedure that calls the <ph id="ph2">&lt;xref:System.Data.DataSet.CreateDataReader%2A&gt;</ph> method, and proceeds to iterate through all the result sets contained within the <ph id="ph3">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">此範例接著會將傳遞填<ph id="ph1">`DataSet`</ph>要呼叫的程序<ph id="ph2">&lt;xref:System.Data.DataSet.CreateDataReader%2A&gt;</ph>方法，然後繼續進行逐一查看所有結果集內包含<ph id="ph3">&lt;xref:System.Data.DataTableReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.CreateDataReader">
          <source>The example displays the results in the Console window.</source>
          <target state="translated">這個範例會在主控台視窗中顯示結果。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
          <source>An array of DataTables providing the order of the result sets to be returned in the <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">DataTable 的陣列提供要在 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> 中傳回的結果集順序。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> with one result set per <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>，每一個 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 有一個結果集。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> containing one or more result sets, corresponding to the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> instances contained within the source <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>，包含一個或多個結果集，對應於包含在來源 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 之中的 <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
          <source>The returned result sets are in the order specified by the <ph id="ph1">&lt;paramref name="dataTables" /&gt;</ph> parameter.</source>
          <target state="translated">傳回的結果集的順序是 <ph id="ph1">&lt;paramref name="dataTables" /&gt;</ph> 參數所指定的順序。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
          <source>In order to ensure that the order of the result sets within the returned <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>, if a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> within the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> is empty, it is represented by an empty result set within the returned <ph id="ph4">`DataTableReader`</ph>.</source>
          <target state="translated">為了確保結果的順序設定內傳回<ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>，如果<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>內<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>是空的它會以空的結果集內傳回<ph id="ph4">`DataTableReader`</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
          <source>Because this overloaded version allows you to supply a list of <ph id="ph1">`DataTable`</ph> instances as parameters, you can specify the order in which the result sets appear within the returned <ph id="ph2">`DataTableReader`</ph>.</source>
          <target state="translated">因為這個多載的版本，可讓您提供一份<ph id="ph1">`DataTable`</ph>做為參數的情況下，您可以指定結果集內傳回的出現的順序<ph id="ph2">`DataTableReader`</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
          <source>This example, a Console application, creates three <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances and adds each to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">此範例中，主控台應用程式，會建立三個<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>執行個體，並將每個要<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Data.DataSet.CreateDataReader%2A&gt;</ph> method and displays the contents of the returned <ph id="ph2">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">範例會呼叫<ph id="ph1">&lt;xref:System.Data.DataSet.CreateDataReader%2A&gt;</ph>方法，並顯示傳回之內容<ph id="ph2">&lt;xref:System.Data.DataTableReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
          <source>Note that the order of the result sets in the <ph id="ph1">`DataTableReader`</ph> is controlled by the order of the <ph id="ph2">`DataTable`</ph> instances passed as parameters.</source>
          <target state="translated">請注意，在 設定結果的順序<ph id="ph1">`DataTableReader`</ph>控制依以下順序<ph id="ph2">`DataTable`</ph>做為參數傳遞的執行個體。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
          <source>The example displays the results in the Console window.</source>
          <target state="translated">這個範例會在主控台視窗中顯示結果。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.DataSetName">
          <source>Gets or sets the name of the current <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">取得或設定目前 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 的名稱。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.DataSetName">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 的名稱。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.DataSetName">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with the given <ph id="ph2">&lt;xref:System.Data.DataSet.DataSetName%2A&gt;</ph>.</source>
          <target state="translated">下列範例會建立新<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>與給定<ph id="ph2">&lt;xref:System.Data.DataSet.DataSetName%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.DefaultViewManager">
          <source>Gets a custom view of the data contained in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to allow filtering, searching, and navigating using a custom <ph id="ph2">&lt;see cref="T:System.Data.DataViewManager" /&gt;</ph>.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> (它允許使用自訂的 <ph id="ph2">&lt;see cref="T:System.Data.DataViewManager" /&gt;</ph> 進行篩選、搜尋和巡覽) 所包含的資料之自訂檢視。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.DefaultViewManager">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataViewManager" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataViewManager" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.DefaultViewManager">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataViewManager&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.Data.DataSet.DefaultViewManager%2A&gt;</ph> property allows you to create custom settings for each <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> in the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataViewManager&gt;</ph>傳回<ph id="ph2">&lt;xref:System.Data.DataSet.DefaultViewManager%2A&gt;</ph>屬性可讓您為每個建立自訂設定<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>中<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.DefaultViewManager">
          <source>When you obtain a <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, the sort order, filtering, and <ph id="ph3">&lt;xref:System.Data.DataViewRowState&gt;</ph> are configured according to the settings in the <ph id="ph4">&lt;xref:System.Data.DataSet.DefaultViewManager%2A&gt;</ph> property.</source>
          <target state="translated">當您取得<ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph>從<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，排序次序、 篩選和<ph id="ph3">&lt;xref:System.Data.DataViewRowState&gt;</ph>根據中的設定會設定<ph id="ph4">&lt;xref:System.Data.DataSet.DefaultViewManager%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.DefaultViewManager">
          <source>The following example gets the default <ph id="ph1">&lt;xref:System.Data.DataViewManager&gt;</ph> for a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, and adds a <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> to the <ph id="ph4">&lt;xref:System.Data.DataTableCollection&gt;</ph>.</source>
          <target state="translated">下列範例會取得預設<ph id="ph1">&lt;xref:System.Data.DataViewManager&gt;</ph>如<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>，並將<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>至<ph id="ph4">&lt;xref:System.Data.DataTableCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="T:System.Data.DataSet">
          <source>Determines the <ph id="ph1">&lt;see cref="P:System.Data.DataSet.SchemaSerializationMode" /&gt;</ph> for a <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">判斷 <ph id="ph1">&lt;see cref="P:System.Data.DataSet.SchemaSerializationMode" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>This method can be called when deserializing a typed <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> to determine its <ph id="ph2">&lt;xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;</ph>.</source>
          <target state="translated">還原序列化的型別時，就可以呼叫這個方法<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>來判斷其<ph id="ph2">&lt;xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance that is passed during deserialization of the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 執行個體，是在 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 的還原序列化期間傳遞的。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)">
          <source>Determines the <ph id="ph1">&lt;see cref="P:System.Data.DataSet.SchemaSerializationMode" /&gt;</ph> for a <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">判斷 <ph id="ph1">&lt;see cref="P:System.Data.DataSet.SchemaSerializationMode" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.SchemaSerializationMode" /&gt;</ph> enumeration indicating whether schema information has been omitted from the payload.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SchemaSerializationMode" /&gt;</ph> 列舉，指出結構描述資訊是否已從承載中省略。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)">
          <source>This method can be called when deserializing a typed <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> to determine its <ph id="ph2">&lt;xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;</ph>.</source>
          <target state="translated">還原序列化的型別時，就可以呼叫這個方法<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>來判斷其<ph id="ph2">&lt;xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that a <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>’s protected constructor <ph id="ph3">&lt;see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /&gt;</ph> is invoked with during deserialization in remoting scenarios.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>，在遠端作業案例中，以 <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph> 的保護建構函式 <ph id="ph3">&lt;see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /&gt;</ph> 叫用。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that a <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>’s protected constructor <ph id="ph3">&lt;see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /&gt;</ph> is invoked with during deserialization in remoting scenarios.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>，在遠端作業案例中，以 <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph> 的保護建構函式 <ph id="ph3">&lt;see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /&gt;</ph> 叫用。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Determines the <ph id="ph1">&lt;see cref="P:System.Data.DataSet.SchemaSerializationMode" /&gt;</ph> for a <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">判斷 <ph id="ph1">&lt;see cref="P:System.Data.DataSet.SchemaSerializationMode" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.SchemaSerializationMode" /&gt;</ph> enumeration indicating whether schema information has been omitted from the payload.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SchemaSerializationMode" /&gt;</ph> 列舉，指出結構描述資訊是否已從承載中省略。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This method can be called when deserializing a typed <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> to determine its <ph id="ph2">&lt;xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;</ph>.</source>
          <target state="translated">還原序列化的型別時，就可以呼叫這個方法<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>來判斷其<ph id="ph2">&lt;xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.EndInit">
          <source>Ends the initialization of a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> that is used on a form or used by another component.</source>
          <target state="translated">結束對表單或另一個元件所使用的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 進行初始化作業。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.EndInit">
          <source>The initialization occurs at run time.</source>
          <target state="translated">初始化發生於執行階段。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.EndInit">
          <source>The Visual Studio .NET design environment uses this method to end the initialization of a component that is used on a form or used by another component.</source>
          <target state="translated">Visual Studio.NET 設計環境會使用這個方法來結束初始化用於表單或為另一個元件所使用的元件。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.EndInit">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.BeginInit%2A&gt;</ph> method starts the initialization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.BeginInit%2A&gt;</ph>方法初始化開始。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.EndInit">
          <source>Using the <ph id="ph1">&lt;xref:System.Data.DataSet.BeginInit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.EndInit%2A&gt;</ph> methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataSet.BeginInit%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataSet.EndInit%2A&gt;</ph>方法可防止控制項完全初始化之前使用。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.EnforceConstraints">
          <source>Gets or sets a value indicating whether constraint rules are followed when attempting any update operation.</source>
          <target state="translated">取得或設定值，指出在嘗試任何更新作業時，是否遵循條件約束 (Constraint) 規則。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.EnforceConstraints">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if rules are enforced; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果強制遵循規則，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.EnforceConstraints">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.EnforceConstraints">
          <source>Constraints are set at the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> level (<ph id="ph2">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph> property).</source>
          <target state="translated">條件約束會在設定<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>層級 (<ph id="ph2">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph>屬性)。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.EnforceConstraints">
          <source>For more information about creating constraints, see <bpt id="p1">[</bpt>DataTable Constraints<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md)</ept>.</source>
          <target state="translated">如需有關建立條件約束的詳細資訊，請參閱<bpt id="p1">[</bpt>DataTable 條件約束<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md)</ept>。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.EnforceConstraints">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with one table, one column, five rows, and one <ph id="ph2">&lt;xref:System.Data.UniqueConstraint&gt;</ph>.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>其中包含一個資料表，一個資料行、 五個資料列，一個<ph id="ph2">&lt;xref:System.Data.UniqueConstraint&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.EnforceConstraints">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph> and the values of each row are set to the same value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph>屬性設定為<ph id="ph2">`false`</ph>和每個資料列的值都會設為相同的值。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.EnforceConstraints">
          <source>When the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property is reset to <ph id="ph2">`true`</ph>, a <ph id="ph3">&lt;xref:System.Data.ConstraintException&gt;</ph> is generated.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph>屬性重設為<ph id="ph2">`true`</ph>、<ph id="ph3">&lt;xref:System.Data.ConstraintException&gt;</ph>產生。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.EnforceConstraints">
          <source>One or more constraints cannot be enforced.</source>
          <target state="translated">一個或多個條件約束無法強制遵循。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.ExtendedProperties">
          <source>Gets the collection of customized user information associated with the <ph id="ph1">&lt;see langword="DataSet" /&gt;</ph>.</source>
          <target state="translated">取得與 <ph id="ph1">&lt;see langword="DataSet" /&gt;</ph> 相關聯的自訂使用者資訊集合。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.ExtendedProperties">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.PropertyCollection" /&gt;</ph> with all custom user information.</source>
          <target state="translated">具有所有自訂使用者資訊的 <ph id="ph1">&lt;see cref="T:System.Data.PropertyCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.ExtendedProperties">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.ExtendedProperties%2A&gt;</ph> property enables you to store custom information with the <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.ExtendedProperties%2A&gt;</ph>屬性可讓您儲存自訂的資訊與<ph id="ph2">`DataSet`</ph>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.ExtendedProperties">
          <source>For example, you might store a time when the data should be refreshed.</source>
          <target state="translated">例如，您可能會儲存資料應該重新整理的時間。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.ExtendedProperties">
          <source>Extended properties must be of type <ph id="ph1">&lt;xref:System.String&gt;</ph> if you want them persisted when the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> is written as XML.</source>
          <target state="translated">擴充的屬性的類型必須是<ph id="ph1">&lt;xref:System.String&gt;</ph>如果您想要它們時保存<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>寫入為 XML。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.ExtendedProperties">
          <source>The following example adds a custom property to the <ph id="ph1">&lt;xref:System.Data.PropertyCollection&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.Data.DataColumn.ExtendedProperties%2A&gt;</ph> property.</source>
          <target state="translated">下列範例會將自訂屬性來<ph id="ph1">&lt;xref:System.Data.PropertyCollection&gt;</ph>傳回<ph id="ph2">&lt;xref:System.Data.DataColumn.ExtendedProperties%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.ExtendedProperties">
          <source>The second example retrieves the custom property.</source>
          <target state="translated">第二個範例會擷取自訂屬性。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="T:System.Data.DataSet">
          <source>Gets a copy of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> containing all changes made to it since it was last loaded, or since <ph id="ph2">&lt;see cref="M:System.Data.DataSet.AcceptChanges" /&gt;</ph> was called.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> (包含從前一次載入它或呼叫 <ph id="ph2">&lt;see cref="M:System.Data.DataSet.AcceptChanges" /&gt;</ph> 以來所做的所有變更) 的複本。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetChanges">
          <source>Gets a copy of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> that contains all changes made to it since it was loaded or since <ph id="ph2">&lt;see cref="M:System.Data.DataSet.AcceptChanges" /&gt;</ph> was last called.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> (包含從載入它或前一次呼叫 <ph id="ph2">&lt;see cref="M:System.Data.DataSet.AcceptChanges" /&gt;</ph> 以來所做的所有變更) 的複本。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetChanges">
          <source>A copy of the changes from this <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> that can have actions performed on it and later be merged back in using <ph id="ph2">&lt;see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /&gt;</ph>.</source>
          <target state="translated">這個 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 所產生變更的複本，可在其上執行動作，並且稍後使用 <ph id="ph2">&lt;see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /&gt;</ph> 合併回來。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetChanges">
          <source>If no changed rows are found, the method returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果找不到已變更的資料列，則方法會傳回 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetChanges">
          <source>Creates a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> that contains a copy of all rows in the original <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> that have pending changes.</source>
          <target state="translated">建立新<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含的所有資料列的原始複本<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>具有暫止的變更。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetChanges">
          <source>Relationship constraints can cause additional unchanged rows to be added to the new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> if the unchanged rows contain primary keys corresponding to foreign keys in the changed rows.</source>
          <target state="translated">關聯性條件約束會造成其他不變的資料列新增至新<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>如果變更的資料列包含對應至外部索引鍵中的變更資料列的主索引鍵。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetChanges">
          <source>The method returns <ph id="ph1">`null`</ph> if there are no rows in the original <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> that have pending changes.</source>
          <target state="translated">方法會傳回<ph id="ph1">`null`</ph>是否有任何資料列在原始<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>具有暫止的變更。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetChanges">
          <source>The following example creates a simple <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with one table, two columns, and ten rows.</source>
          <target state="translated">下列範例會建立簡單<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>一個資料表、 兩個資料行，與十個資料列。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetChanges">
          <source>Two values are changed, and one row is added.</source>
          <target state="translated">變更兩個值，並加入一個資料列。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetChanges">
          <source>A subset of the changed data is created using the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method.</source>
          <target state="translated">使用建立的已變更的資料子集<ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetChanges">
          <source>After reconciling errors, a new column is added to the subset, changing the schema.</source>
          <target state="translated">調解錯誤，新的資料行新增至後變更結構描述的子集。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetChanges">
          <source>When the <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is called with the <ph id="ph2">`missingSchemaAction`</ph> set to <ph id="ph3">`MissingSchemaAction.Add`</ph>, the new column is added to the original <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> object's schema.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>方法呼叫<ph id="ph2">`missingSchemaAction`</ph>設<ph id="ph3">`MissingSchemaAction.Add`</ph>，新的資料行加入到原始<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>物件的結構描述。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> values.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
          <source>Gets a copy of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> containing all changes made to it since it was last loaded, or since <ph id="ph2">&lt;see cref="M:System.Data.DataSet.AcceptChanges" /&gt;</ph> was called, filtered by <ph id="ph3">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph>.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> (包含從前一次載入它或呼叫 <ph id="ph2">&lt;see cref="M:System.Data.DataSet.AcceptChanges" /&gt;</ph> 以來所做的所有變更) 的複本 (由 <ph id="ph3">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> 篩選)。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
          <source>A filtered copy of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> that can have actions performed on it, and subsequently be merged back in using <ph id="ph2">&lt;see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /&gt;</ph>.</source>
          <target state="translated">篩選過的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 複本，可以在其上執行動作，然後在使用 <ph id="ph2">&lt;see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /&gt;</ph> 時合併回來。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
          <source>If no rows of the desired <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> are found, the method returns <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果找不到所需的 <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> 的資料列，則方法會傳回 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method is used to produce a second <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> object that contains only the changes introduced into the original.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph>方法用來產生第二個<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>導入原始的物件，其中包含所做的變更。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
          <source>Use the <ph id="ph1">`rowStates`</ph> argument to specify the type of changes the new object should include.</source>
          <target state="translated">使用<ph id="ph1">`rowStates`</ph>引數以指定的變更應該包含新的物件類型。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
          <source>This returned copy is designed to be merged back in to this original <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">傳回此複本設計來合併回原始此<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
          <source>Relationship constraints may cause parent rows marked <ph id="ph1">`Unchanged`</ph> to be included.</source>
          <target state="translated">關聯性條件約束可能會導致父資料列標示為<ph id="ph1">`Unchanged`</ph>包含。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
          <source>If no rows of the desired <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> are found, the <ph id="ph2">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">如果所需的任何資料列<ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph>找不到，<ph id="ph2">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph>方法會傳回<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method to create a second <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> object, which is then used to update a data source.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph>方法，以建立第二個<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>物件，然後用來更新資料來源。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)">
          <source>The specified schema set.</source>
          <target state="translated">指定的結構描述集。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)">
          <source>Gets a copy of <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> for the DataSet.</source>
          <target state="translated">取得資料集之 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 的複本。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)">
          <source>A copy of <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 的複本。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized data associated with the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>，保留與 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 關聯的序列化資料。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>，含有與 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 關聯的序列資料流的來源和目的端。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a serialization information object with the data needed to serialize the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">以序列化 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 所需的資料，填入序列化資訊物件。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;paramref name="info" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetSchemaSerializable">
          <source>Returns a serializable <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XMLSchema" /&gt;</ph> instance.</source>
          <target state="translated">傳回可序列化的 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XMLSchema" /&gt;</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetSchemaSerializable">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XMLSchema" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XMLSchema" /&gt;</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The streaming context.</source>
          <target state="translated">資料流內容。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Deserializes the table data from the binary or XML stream.</source>
          <target state="translated">從二進位或 XML 資料流還原序列化資料表資料。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetXml">
          <source>Returns the XML representation of the data stored in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">傳回儲存於 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 的資料之 XML 表示。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetXml">
          <source>A string that is a representation of the data stored in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">字串，儲存於 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 的資料表示。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXml">
          <source>Calling this method is identical to calling <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> with <ph id="ph2">&lt;xref:System.Data.XmlWriteMode&gt;</ph> set to <ph id="ph3">&lt;xref:System.Data.XmlWriteMode.IgnoreSchema&gt;</ph>.</source>
          <target state="translated">呼叫此方法等於呼叫<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>與<ph id="ph2">&lt;xref:System.Data.XmlWriteMode&gt;</ph>設<ph id="ph3">&lt;xref:System.Data.XmlWriteMode.IgnoreSchema&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXml">
          <source><ph id="ph1">&lt;xref:System.Data.DataSet.GetXml%2A&gt;</ph> returns XML as a string, and therefore requires more overhead than <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> to write XML to a file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.GetXml%2A&gt;</ph> 傳回 XML 字串形式，因此需要以更多成本負擔比<ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>寫入 XML 檔案。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXml">
          <source>If you build a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> using schema inference and serialize it using XML or Web services, the column ordering may change.</source>
          <target state="translated">如果您要建置<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>使用結構描述推斷和序列化它使用 XML 或 Web 服務的資料行順序可能會變更。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXml">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, adds sample data, and then displays the data in XML format.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>、 新增範例資料，並以 XML 格式顯示資料。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXml">
          <source>This sample demonstrates how to write data into an XML file from a DataSet and read data into DataSet from XML.</source>
          <target state="translated">這個範例示範如何從資料集將資料寫入 XML 檔案，並從 XML 將資料讀入資料集。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXml">
          <source>This sample will create one dataset with two tables, use two ways to export a dataset into the XML files (WriteXml and GetXml), and use two ways (ReadXml and InferXmlSchema) to import a dataset from the XML files.</source>
          <target state="translated">這個範例會使用兩個資料表建立一個資料集、 使用兩種方式可將資料集匯出至 XML 檔案 （WriteXml 和 GetXml），並使用兩種方式 （ReadXml 和 InferXmlSchema），從 XML 檔案匯入資料集。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXml">
          <source>Before you compile and run the sample, you need to create four XML files in the sample directory.</source>
          <target state="translated">在編譯和執行範例之前，您需要在 範例目錄中建立四個 XML 檔案。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXml">
          <source>First, create ElementsWithAttributes.xml:</source>
          <target state="translated">首先，建立 ElementsWithAttributes.xml:</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXml">
          <source>Next, create ElementsWithChildElementsxml.xml:</source>
          <target state="translated">接下來，建立 ElementsWithChildElementsxml.xml:</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXml">
          <source>Now create ElementsWithOnlyAttributes.xml:</source>
          <target state="translated">現在建立 ElementsWithOnlyAttributes.xml:</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXml">
          <source>And finally, create RepeatingElements.xml:</source>
          <target state="translated">然後最後，建立 RepeatingElements.xml:</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXml">
          <source>Now you can compile and run the following source code.</source>
          <target state="translated">現在您可以編譯並執行下列的原始程式碼。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXml">
          <source><bpt id="p1">[</bpt>How to Store Data of DataSet into XML File<ept id="p1">](https://code.msdn.microsoft.com/How-to-Store-Data-of-7b9710f3)</ept> has Visual Basic and C# projects for this sample.</source>
          <target state="translated"><bpt id="p1">[</bpt>如何儲存資料的資料集至 XML 檔案<ept id="p1">](https://code.msdn.microsoft.com/How-to-Store-Data-of-7b9710f3)</ept>具有此範例的 Visual Basic 和 C# 專案。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetXmlSchema">
          <source>Returns the XML Schema for the XML representation of the data stored in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">為儲存於 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 的資料之 XML 表示，傳回 XML 結構描述。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetXmlSchema">
          <source>String that is the XML Schema for the XML representation of the data stored in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">字串，為儲存於 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 的資料之 XML 表示的 XML 結構描述。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXmlSchema">
          <source>Calling this method is identical to calling <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>, except that only the primary schema is written.</source>
          <target state="translated">呼叫此方法等於呼叫<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>，只不過寫入主要結構描述。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXmlSchema">
          <source><ph id="ph1">&lt;xref:System.Data.DataSet.GetXmlSchema%2A&gt;</ph> returns XML as a string, and therefore requires more overhead than <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> to write XML to a file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.GetXmlSchema%2A&gt;</ph> 傳回 XML 字串形式，因此需要以更多成本負擔比<ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>寫入 XML 檔案。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXmlSchema">
          <source>If you build a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> using schema inference and serialize it using XML or Web services, the column ordering may change.</source>
          <target state="translated">如果您要建置<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>使用結構描述推斷和序列化它使用 XML 或 Web 服務的資料行順序可能會變更。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXmlSchema">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, and then displays the schema in XML format.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，然後以 XML 格式顯示結構描述。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="T:System.Data.DataSet">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> has changes, including new, deleted, or modified rows.</source>
          <target state="translated">取得值，表示 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 是否包含變更，包括加入、刪除或修改的資料列。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.HasChanges">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> has changes, including new, deleted, or modified rows.</source>
          <target state="translated">取得值，表示 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 是否包含變更，包括加入、刪除或修改的資料列。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.HasChanges">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> has changes; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 包含變更，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.HasChanges">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method to create a second <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> object that is then used to update a data source.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph>方法，以建立第二個<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>物件，然後用來更新資料來源。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> values.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> has changes, including new, deleted, or modified rows, filtered by <ph id="ph2">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph>.</source>
          <target state="translated">取得值，指出 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 是否包含變更，包括加入、刪除或修改的資料列 (由 <ph id="ph2">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> 篩選)。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> has changes; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 包含變更，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
          <source>Examine the <ph id="ph1">&lt;xref:System.Data.DataSet.HasChanges%2A&gt;</ph> property of the <ph id="ph2">`DataSet`</ph> before invoking the <ph id="ph3">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method.</source>
          <target state="translated">檢查<ph id="ph1">&lt;xref:System.Data.DataSet.HasChanges%2A&gt;</ph>屬性<ph id="ph2">`DataSet`</ph>叫用之前<ph id="ph3">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method to create a second <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> object, which is then used to update a data source.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph>方法，以建立第二個<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>物件，然後用來更新資料來源。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.HasErrors">
          <source>Gets a value indicating whether there are errors in any of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects within this <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">取得值，指出這個 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 內的 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 物件中是否有任何一個有錯誤。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.HasErrors">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if any table contains an error;otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果任何資料表含有錯誤，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.HasErrors">
          <source>Each <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> in a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> also has a <ph id="ph3">&lt;xref:System.Data.DataTable.HasErrors%2A&gt;</ph> property.</source>
          <target state="translated">每個<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>中<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>還有<ph id="ph3">&lt;xref:System.Data.DataTable.HasErrors%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.HasErrors">
          <source>Use the <ph id="ph1">`HasErrors`</ph> property of the <ph id="ph2">`DataSet`</ph> first, to determine if any table has errors, before checking individual <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objects.</source>
          <target state="translated">使用<ph id="ph1">`HasErrors`</ph>屬性<ph id="ph2">`DataSet`</ph>首先，判斷資料表是否錯誤，檢查個別之前<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.HasErrors">
          <source>If a <ph id="ph1">`DataTable`</ph> has errors, the <ph id="ph2">&lt;xref:System.Data.DataTable.GetErrors%2A&gt;</ph> method returns an array of <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects containing the errors.</source>
          <target state="translated">如果<ph id="ph1">`DataTable`</ph>有錯誤，錯誤<ph id="ph2">&lt;xref:System.Data.DataTable.GetErrors%2A&gt;</ph>方法傳回的陣列<ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>包含錯誤的物件。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.HasErrors">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataSet.HasErrors%2A&gt;</ph> property to determine whether a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> object contains errors.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Data.DataSet.HasErrors%2A&gt;</ph>屬性來判斷是否<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>物件包含錯誤。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.HasErrors">
          <source>If so, the errors for each <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> in each <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> are printed.</source>
          <target state="translated">若是如此，每個錯誤<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>中每個<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>會列印。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="T:System.Data.DataSet">
          <source>Applies XML schema to the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">將 XML 結構描述套用至 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])">
          <source>The <ph id="ph1">&lt;see langword="Stream" /&gt;</ph> from which to read the schema.</source>
          <target state="translated">要從其中讀取結構描述的來源 <ph id="ph1">&lt;see langword="Stream" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])">
          <source>An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.</source>
          <target state="translated">要從結構描述 (Schema) 推斷中排除之命名空間統一資源識別元 (URI) 字串的陣列。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])">
          <source>Applies the XML schema from the specified <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">從指定的 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>，將 XML 結構描述套用至 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])">
          <source>The <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph> from which to read the schema.</source>
          <target state="translated">要從其中讀取結構描述的來源 <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])">
          <source>An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.</source>
          <target state="translated">要從結構描述 (Schema) 推斷中排除之命名空間統一資源識別元 (URI) 字串的陣列。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])">
          <source>Applies the XML schema from the specified <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">從指定的 <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>，將 XML 結構描述套用至 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
          <source>The name of the file (including the path) from which to read the schema.</source>
          <target state="translated">要從中讀取結構描述的來源檔案名稱 (包含路徑)。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
          <source>An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.</source>
          <target state="translated">要從結構描述 (Schema) 推斷中排除之命名空間統一資源識別元 (URI) 字串的陣列。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
          <source>Applies the XML schema from the specified file to the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">從指定的檔案，將 XML 結構描述套用至 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
          <source><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> is not set to <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> 並不是設定為 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
          <source>For reading and writing files.</source>
          <target state="translated">用於讀取和寫入檔案。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])">
          <source>The <ph id="ph1">&lt;see langword="XMLReader" /&gt;</ph> from which to read the schema.</source>
          <target state="translated">要從其中讀取結構描述的來源 <ph id="ph1">&lt;see langword="XMLReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])">
          <source>An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.</source>
          <target state="translated">要從結構描述 (Schema) 推斷中排除之命名空間統一資源識別元 (URI) 字串的陣列。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])">
          <source>Applies the XML schema from the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">從指定的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>，將 XML 結構描述套用至 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="E:System.Data.DataSet.Initialized">
          <source>Occurs after the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> is initialized.</source>
          <target state="translated">發生於 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 初始化之後。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataSet.Initialized">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Data.DataSet.IsInitialized%2A&gt;</ph>.</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;xref:System.Data.DataSet.IsInitialized%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.InitializeDerivedDataSet">
          <source>Deserialize all of the tables data of the DataSet from the binary or XML stream.</source>
          <target state="translated">從二進位或 XML 資料流還原序列化資料集的所有資料表資料。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Inspects the format of the serialized representation of the <ph id="ph1">&lt;see langword="DataSet" /&gt;</ph>.</source>
          <target state="translated">檢查 <ph id="ph1">&lt;see langword="DataSet" /&gt;</ph> 之序列化表示的格式。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> represents a <ph id="ph3">&lt;see langword="DataSet" /&gt;</ph> serialized in its binary format, <ph id="ph4">&lt;see langword="false" /&gt;</ph> otherwise.</source>
          <target state="translated">如果指定的 <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 表示以二進位格式序列化的 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，則為 <ph id="ph3">&lt;see langword="DataSet" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.IsInitialized">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> is initialized.</source>
          <target state="translated">取得值，指出 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 是否已初始化。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.IsInitialized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate the component has completed initialization; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示元件已完成初始化，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.IsInitialized">
          <source>Returns the status of the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> while it’s being constructed, for instance by Visual Studio.</source>
          <target state="translated">傳回的狀態<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>時它由所建構，例如 Visual Studio。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.IsInitialized">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.BeginInit%2A&gt;</ph> method sets it to <ph id="ph2">`false`</ph> and <ph id="ph3">&lt;xref:System.Data.DataSet.EndInit%2A&gt;</ph> method sets it to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.BeginInit%2A&gt;</ph>方法將它設定為<ph id="ph2">`false`</ph>和<ph id="ph3">&lt;xref:System.Data.DataSet.EndInit%2A&gt;</ph>方法將它設定為<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="T:System.Data.DataSet">
          <source>Fills a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with values from a data source using the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>.</source>
          <target state="translated">使用所提供的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>，用資料來源的值填滿 <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method provides a technique for filling a single <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> with data, retrieved from an <ph id="ph3">&lt;xref:System.Data.IDataReader&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph>方法提供的技巧，以便填滿單一<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>從擷取的資料<ph id="ph3">&lt;xref:System.Data.IDataReader&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>This method provides the same functionality, but allows you to load multiple result sets from an <ph id="ph1">`IDataReader`</ph> into multiple tables within a <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated">這個方法會提供相同的功能，但可讓您從多個結果集載入<ph id="ph1">`IDataReader`</ph>分成多個資料表內<ph id="ph2">`DataSet`</ph>。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>If the <ph id="ph1">`DataSet`</ph> already contains rows, the incoming data from the data source is merged with the existing rows.</source>
          <target state="translated">如果 <ph id="ph1">`DataSet`</ph> 已經包含資料列，從資料來源傳入的資料會與現有的資料列合併。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The <ph id="ph1">`Load`</ph> method can be used in several common scenarios, all centered around getting data from a specified data source and adding it to the current data container (in this case, a <ph id="ph2">`DataSet`</ph>).</source>
          <target state="translated"><ph id="ph1">`Load`</ph>方法可以用數種常見案例，所有中心從指定的資料來源取得資料，並將它加入至目前的資料容器中 (在此情況下， <ph id="ph2">`DataSet`</ph>)。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>These scenarios describe standard usage for a <ph id="ph1">`DataSet`</ph>, describing its update and merge behavior.</source>
          <target state="translated">下列案例說明標準用法<ph id="ph1">`DataSet`</ph>，描述其更新，以及合併行為。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>A <ph id="ph1">`DataSet`</ph> synchronizes or updates with a single primary data source.</source>
          <target state="translated">A<ph id="ph1">`DataSet`</ph>同步處理或單一主要資料來源的更新。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The <ph id="ph1">`DataSet`</ph> tracks changes, allowing synchronization with the primary data source.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>追蹤變更，允許與主要資料來源的同步處理。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>In addition, a <ph id="ph1">`DataSet`</ph> can accept incremental data from one or more secondary data sources.</source>
          <target state="translated">此外，<ph id="ph1">`DataSet`</ph>可以接受一或多個次要資料來源的增量資料。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The <ph id="ph1">`DataSet`</ph> isn't responsible for tracking changes in order to allow synchronization with the secondary data source.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>不負責追蹤變更，才能允許與次要資料來源的同步處理。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Given these two hypothetical data sources, a user is likely to require one of the following behaviors:</source>
          <target state="translated">指定這些兩個假設性的資料來源，使用者很可能需要下列行為的其中一個：</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Initialize <ph id="ph1">`DataSet`</ph> from a primary data source.</source>
          <target state="translated">初始化<ph id="ph1">`DataSet`</ph>從主要資料來源。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>In this scenario, the user wants to initialize an empty <ph id="ph1">`DataSet`</ph> with values from the primary data source.</source>
          <target state="translated">在此案例中，使用者想要初始化空<ph id="ph1">`DataSet`</ph>與主要資料來源中的值。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>One or more DataTable's contents are modified.</source>
          <target state="translated">會修改一或多個資料表的內容。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Later the user intends to propagate changes back to the primary data source.</source>
          <target state="translated">稍後，使用者想要將變更傳送回主要資料來源。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Preserve changes and re-synchronize from the primary data source.</source>
          <target state="translated">保留變更，並重新同步處理主要資料來源。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>In this scenario, the user wants to take the <ph id="ph1">`DataSet`</ph> filled in the previous scenario and perform an incremental synchronization with the primary data source, preserving modifications made in the <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated">在此案例中，使用者想要採取<ph id="ph1">`DataSet`</ph>區域分布在前述案例中，執行增量同步處理與主要資料來源，保留中所做的修改<ph id="ph2">`DataSet`</ph>。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Incremental data feed from secondary data sources.</source>
          <target state="translated">累加式的資料摘要，從次要資料來源。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>In this scenario, the user wants to merge changes from one or more secondary data sources, and propagate those changes back to the primary data source.</source>
          <target state="translated">在此案例中，使用者想要合併一或多個次要資料來源的變更，並將變更傳播回到主要資料來源。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The <ph id="ph1">`Load`</ph> method makes all these scenarios possible.</source>
          <target state="translated"><ph id="ph1">`Load`</ph>方法可讓所有這些情況。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>This method allows you to specify a load option parameter, indicating how rows already in a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> combine with rows being loaded.</source>
          <target state="translated">這個方法可讓您指定負載選項參數，指出如何資料列已在<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>結合正在載入的資料列。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The following table describes the three load options provided by the <ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph> enumeration.</source>
          <target state="translated">下表描述所提供的三種負載選項<ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph>列舉型別。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>In each case, the description indicates the behavior when the primary key of a row in the incoming data matches the primary key of an existing row.</source>
          <target state="translated">在每個案例中，說明當內送資料中的資料列的主索引鍵符合現有的資料列的主索引鍵表示的行為。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Load Option</source>
          <target state="translated">載入選項</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source><ph id="ph1">`PreserveChanges`</ph> (default)</source>
          <target state="translated"><ph id="ph1">`PreserveChanges`</ph> (預設值)</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Updates the original version of the row with the value of the incoming row.</source>
          <target state="translated">內送資料列的值，更新資料列的原始版本。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Updates the current and original versions of the row with the value of the incoming row.</source>
          <target state="translated">使用內送資料列的值更新資料列的目前和原始版本。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Updates the current version of the row with the value of the incoming row.</source>
          <target state="translated">內送資料列的值，更新資料列的目前版本。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>In general, the <ph id="ph1">`PreserveChanges`</ph> and <ph id="ph2">`OverwriteChanges`</ph> options are intended for scenarios in which the user needs to synchronize the <ph id="ph3">`DataSet`</ph> and its changes with the primary data source.</source>
          <target state="translated">一般情況下，<ph id="ph1">`PreserveChanges`</ph>和<ph id="ph2">`OverwriteChanges`</ph>選項適用於使用者要同步處理的案例<ph id="ph3">`DataSet`</ph>及它的主要資料來源的變更。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The <ph id="ph1">`Upsert`</ph> option facilitates aggregating changes from one or more secondary data sources.</source>
          <target state="translated"><ph id="ph1">`Upsert`</ph>選項可以協助彙總一或多個次要資料來源的變更。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> that provides one or more result sets.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>，提供一個或多個結果集。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> enumeration that indicates how rows already in the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> instances within the <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> will be combined with incoming rows that share the same primary key.</source>
          <target state="translated">來自 <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> 列舉的值，表示已經在 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 之內 <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 執行個體中的資料列如何與共用相同主索引鍵的傳入資料列結合。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> instances, from which the <ph id="ph2">&lt;see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])" /&gt;</ph> method retrieves name and namespace information.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 執行個體的陣列，<ph id="ph2">&lt;see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])" /&gt;</ph> 方法從中擷取名稱和命名空間資訊。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>Each of these tables must be a member of the <ph id="ph1">&lt;see cref="T:System.Data.DataTableCollection" /&gt;</ph> contained by this <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">這些資料表的每一個都必須為這個 <ph id="ph1">&lt;see cref="T:System.Data.DataTableCollection" /&gt;</ph> 所包含 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 的成員。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>Fills a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with values from a data source using the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>, using an array of <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> instances to supply the schema and namespace information.</source>
          <target state="translated">使用所提供的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>，以資料來源的值，填入 <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>，使用 <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 執行個體的陣列，以提供結構描述和命名空間資訊。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method provides a technique for filling a single <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> with data, retrieved from an <ph id="ph3">&lt;xref:System.Data.IDataReader&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph>方法提供的技巧，以便填滿單一<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>從擷取的資料<ph id="ph3">&lt;xref:System.Data.IDataReader&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>This method provides the same functionality, but allows you to load multiple result sets from an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> into multiple tables within a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">這個方法會提供相同的功能，但可讓您從多個結果集載入<ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>分成多個資料表內<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>The load operation will fail with an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> if any of the source data columns in the incoming <ph id="ph2">`reader`</ph> are computed columns.</source>
          <target state="translated">在載入作業將會失敗並<ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>若有任何內送的來源資料行<ph id="ph2">`reader`</ph>是計算資料行。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>The <ph id="ph1">`loadOption`</ph> parameter allows you to specify how you want the imported data to interact with existing data, and can be any of the values from the <ph id="ph2">&lt;xref:System.Data.LoadOption&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">`loadOption`</ph>參數可讓您指定要匯入現有的資料進行互動的資料及可以是任何值的方式<ph id="ph2">&lt;xref:System.Data.LoadOption&gt;</ph>列舉型別。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>See the documentation for the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph><ph id="ph2">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method for more information on using this parameter.</source>
          <target state="translated">請參閱文件<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph><ph id="ph2">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph>如需有關使用此參數的方法。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>The <ph id="ph1">`tables`</ph> parameter allows you to specify an array of <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> instances, indicating the order of the tables corresponding to each result set loaded from the reader.</source>
          <target state="translated"><ph id="ph1">`tables`</ph>參數可讓您指定的陣列<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>執行個體，指出資料表對應至每一個結果集從讀取器的載入順序。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Load%2A&gt;</ph> method fills each supplied <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> instance with data from a single result set from the source data reader.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.Load%2A&gt;</ph>方法填滿每個提供<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>具有資料從單一結果集，從來源資料讀取器執行個體。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>After each result set, the <ph id="ph1">&lt;xref:System.Data.DataSet.Load%2A&gt;</ph> method moves on to the next result set within the reader, until there are no more result sets.</source>
          <target state="translated">每個結果集之後,<ph id="ph1">&lt;xref:System.Data.DataSet.Load%2A&gt;</ph>方法會移到下一個結果集內讀取器，直到沒有其他結果集。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>The name resolution scheme for this method is the same as that followed by the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> class.</source>
          <target state="translated">這個方法的名稱解析配置等同於後續<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, adds two <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> instances to the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, and then fills the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> using the <ph id="ph5">&lt;xref:System.Data.DataSet.Load%2A&gt;</ph> method, retrieving data from a <ph id="ph6">&lt;xref:System.Data.DataTableReader&gt;</ph> that contains two result sets.</source>
          <target state="translated">下列範例會建立新<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>，加入兩個<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>執行個體來<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>，然後填入<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>使用<ph id="ph5">&lt;xref:System.Data.DataSet.Load%2A&gt;</ph>方法，擷取資料，從<ph id="ph6">&lt;xref:System.Data.DataTableReader&gt;</ph>包含兩個結果集。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>Finally, the example displays the contents of the tables in the console window.</source>
          <target state="translated">最後，這個範例會顯示在主控台視窗中資料表的內容。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> that provides one or more result sets.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>，提供一個或多個結果集。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> enumeration that indicates how rows already in the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> instances within the <ph id="ph3">&lt;see langword="DataSet" /&gt;</ph> will be combined with incoming rows that share the same primary key.</source>
          <target state="translated">來自 <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> 列舉的值，表示已經在 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 之內 <ph id="ph3">&lt;see langword="DataSet" /&gt;</ph> 執行個體中的資料列如何與共用相同主索引鍵的傳入資料列結合。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>An array of strings, from which the <ph id="ph1">&lt;see langword="Load" /&gt;</ph> method retrieves table name information.</source>
          <target state="translated">字串的陣列，<ph id="ph1">&lt;see langword="Load" /&gt;</ph> 方法從中擷取資料表名稱資訊。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>Fills a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with values from a data source using the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>, using an array of strings to supply the names for the tables within the <ph id="ph3">&lt;see langword="DataSet" /&gt;</ph>.</source>
          <target state="translated">使用所提供的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>，以資料來源的值填入 <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>，使用字串的陣列來提供 <ph id="ph3">&lt;see langword="DataSet" /&gt;</ph> 之內的資料表名稱。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method provides a technique for filling a single <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> with data, retrieved from an <ph id="ph3">&lt;xref:System.Data.IDataReader&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph>方法提供的技巧，以便填滿單一<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>從擷取的資料<ph id="ph3">&lt;xref:System.Data.IDataReader&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>This method provides the same functionality, but allows you to load multiple result sets from an <ph id="ph1">`IDataReader`</ph> into multiple tables within a <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated">這個方法會提供相同的功能，但可讓您從多個結果集載入<ph id="ph1">`IDataReader`</ph>分成多個資料表內<ph id="ph2">`DataSet`</ph>。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>The load operation will fail with an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> if any of the source data columns in the incoming <ph id="ph2">`reader`</ph> are computed columns.</source>
          <target state="translated">在載入作業將會失敗並<ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>若有任何內送的來源資料行<ph id="ph2">`reader`</ph>是計算資料行。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>The <ph id="ph1">`loadOption`</ph> parameter allows you to specify how you want the imported data to interact with existing data, and can be any of the values from the <ph id="ph2">&lt;xref:System.Data.LoadOption&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">`loadOption`</ph>參數可讓您指定要匯入現有的資料進行互動的資料及可以是任何值的方式<ph id="ph2">&lt;xref:System.Data.LoadOption&gt;</ph>列舉型別。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>See the documentation for the <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method for more information on using this parameter.</source>
          <target state="translated">請參閱文件<ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph>如需有關使用此參數的方法。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>The <ph id="ph1">`tables`</ph> parameter allows you to specify an array of table names, indicating the order of the tables corresponding to each result set loaded from the reader.</source>
          <target state="translated"><ph id="ph1">`tables`</ph>參數可讓您用來指定資料表名稱，表示對應至每一個結果集載入從讀取器的資料表順序的陣列。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>The <ph id="ph1">`Load`</ph> method attempts to find a table within the <ph id="ph2">`DataSet`</ph> matching the name found in the array of table names, in order.</source>
          <target state="translated"><ph id="ph1">`Load`</ph>方法會嘗試尋找內資料表<ph id="ph2">`DataSet`</ph>陣列中的順序中的資料表名稱，找到符合的名稱。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>If a matching table is found, that table is loaded with the content of the current result set.</source>
          <target state="translated">如果找到相符的資料表，該資料表會載入目前的結果集的內容。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>If no matching table is found, a table is created using the name supplied in the array of table names, and the new table's schema is inferred from the result set.</source>
          <target state="translated">如果找到相符的資料表，建立資料表所使用的資料表名稱陣列中提供的名稱，並從結果集推斷新的資料表結構描述。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>After each result set, the <ph id="ph1">`Load`</ph> method moves on to the next result set within the reader, until there are no more result sets.</source>
          <target state="translated">每個結果集之後,<ph id="ph1">`Load`</ph>方法會移到下一個結果集內讀取器，直到沒有其他結果集。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>The default namespace associated with <ph id="ph1">`DataSet`</ph>, if any, is associated with each newly created <ph id="ph2">`DataTable`</ph>.</source>
          <target state="translated">與相關聯的預設命名空間<ph id="ph1">`DataSet`</ph>，如果與每個新建立的任何項目，是相關聯<ph id="ph2">`DataTable`</ph>。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>The name resolution scheme for this method is the same as that followed by the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> class.</source>
          <target state="translated">這個方法的名稱解析配置等同於後續<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>The following Console application example first creates tables and loads data from a reader into a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, using the <ph id="ph2">`Load`</ph> method.</source>
          <target state="translated">下列主控台應用程式範例首先會建立資料表，並會從讀取器讀入資料載入<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>，並使用<ph id="ph2">`Load`</ph>方法。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>The example then adds tables to a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> and attempts to fill the tables with data from a <ph id="ph2">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">然後範例會加入至資料表<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>，嘗試填入資料表中的資料和<ph id="ph2">&lt;xref:System.Data.DataTableReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>In this example, because the parameters passed to the <ph id="ph1">`Load`</ph> method indicate a table name that does not exist, the <ph id="ph2">`Load`</ph> method creates a new table to match the name passed as a parameter.</source>
          <target state="translated">在此範例中，因為參數傳遞給<ph id="ph1">`Load`</ph>方法指出不存在的資料表名稱<ph id="ph2">`Load`</ph>方法會建立新的資料表，以符合做為參數傳遞的名稱。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>Once the data has been loaded, the example displays the contents of all its tables in the Console window.</source>
          <target state="translated">一旦已載入的資料，這個範例會顯示在主控台視窗及其所有資料表的內容。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> that provides one or more result sets.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>，提供一個或多個結果集。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> enumeration that indicates how rows already in the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> instances within the <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> will be combined with incoming rows that share the same primary key.</source>
          <target state="translated">來自 <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> 列舉的值，表示已經在 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 之內 <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 執行個體中的資料列如何與共用相同主索引鍵的傳入資料列結合。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.FillErrorEventHandler" /&gt;</ph> delegate to call when an error occurs while loading data.</source>
          <target state="translated">載入資料時發生錯誤，要呼叫的 <ph id="ph1">&lt;see cref="T:System.Data.FillErrorEventHandler" /&gt;</ph> 委派。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> instances, from which the <ph id="ph2">&lt;see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])" /&gt;</ph> method retrieves name and namespace information.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 執行個體的陣列，<ph id="ph2">&lt;see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])" /&gt;</ph> 方法從中擷取名稱和命名空間資訊。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>Fills a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with values from a data source using the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>, using an array of <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> instances to supply the schema and namespace information.</source>
          <target state="translated">使用所提供的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>，以資料來源的值，填入 <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>，使用 <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 執行個體的陣列，以提供結構描述和命名空間資訊。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method provides a technique for filling a single <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> with data, retrieved from an <ph id="ph3">&lt;xref:System.Data.IDataReader&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph>方法提供的技巧，以便填滿單一<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>從擷取的資料<ph id="ph3">&lt;xref:System.Data.IDataReader&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>This method provides the same functionality, but allows you to load multiple result sets from an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> into multiple tables within a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">這個方法會提供相同的功能，但可讓您從多個結果集載入<ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>分成多個資料表內<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>The load operation will fail with an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> if any of the source data columns in the incoming <ph id="ph2">`reader`</ph> are computed columns.</source>
          <target state="translated">在載入作業將會失敗並<ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>若有任何內送的來源資料行<ph id="ph2">`reader`</ph>是計算資料行。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>The <ph id="ph1">`loadOption`</ph> parameter allows you to specify how you want the imported data to interact with existing data, and can be any of the values from the <ph id="ph2">&lt;xref:System.Data.LoadOption&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">`loadOption`</ph>參數可讓您指定要匯入現有的資料進行互動的資料及可以是任何值的方式<ph id="ph2">&lt;xref:System.Data.LoadOption&gt;</ph>列舉型別。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>See the documentation for the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph><ph id="ph2">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method for more information on using this parameter.</source>
          <target state="translated">請參閱文件<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph><ph id="ph2">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph>如需有關使用此參數的方法。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>The <ph id="ph1">`errorHandler`</ph> parameter is a <ph id="ph2">&lt;xref:System.Data.FillErrorEventHandler&gt;</ph> delegate that refers to a procedure that is called when an error occurs while loading data.</source>
          <target state="translated"><ph id="ph1">`errorHandler`</ph>參數是<ph id="ph2">&lt;xref:System.Data.FillErrorEventHandler&gt;</ph>載入資料時，發生錯誤時呼叫的程序是指的委派。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.FillErrorEventArgs&gt;</ph> parameter passed to the procedure provides properties that allow you to retrieve information about the error that occurred, the current row of data, and the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> being filled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.FillErrorEventArgs&gt;</ph>參數傳遞至程序提供可讓您擷取發生的錯誤，目前的資料，資料列的相關資訊的屬性和<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>被填入。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>Using this delegate mechanism, rather than a simpler try/catch block, allows you to determine the error, handle the situation, and continue processing if you like.</source>
          <target state="translated">使用此委派機制，而不是簡單的 try/catch 區塊，可讓您判斷錯誤處理狀況，並繼續處理，如果您想。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.FillErrorEventArgs&gt;</ph> parameter supplies a <ph id="ph2">&lt;xref:System.Data.FillErrorEventArgs.Continue%2A&gt;</ph> property: set this property to <ph id="ph3">`true`</ph> to indicate that you have handled the error and wish to continue processing; set the property to <ph id="ph4">`false`</ph> to indicate that you wish to halt processing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.FillErrorEventArgs&gt;</ph>參數提供<ph id="ph2">&lt;xref:System.Data.FillErrorEventArgs.Continue%2A&gt;</ph>屬性： 將此屬性設定為<ph id="ph3">`true`</ph>，表示處理錯誤和想来繼續處理，將屬性設定為<ph id="ph4">`false`</ph>指出您想要停止處理。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>Be aware that setting the property to <ph id="ph1">`false`</ph> causes the code that triggered the problem to throw an exception.</source>
          <target state="translated">請注意，將屬性設<ph id="ph1">`false`</ph>導致觸發要擲回例外狀況的問題將程式碼。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>The <ph id="ph1">`tables`</ph> parameter allows you to specify an array of <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> instances, indicating the order of the tables corresponding to each result set loaded from the reader.</source>
          <target state="translated"><ph id="ph1">`tables`</ph>參數可讓您指定的陣列<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>執行個體，指出資料表對應至每一個結果集從讀取器的載入順序。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Load%2A&gt;</ph> method fills each supplied <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> instance with data from a single result set from the source data reader.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.Load%2A&gt;</ph>方法填滿每個提供<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>具有資料從單一結果集，從來源資料讀取器執行個體。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>After each result set, the <ph id="ph1">&lt;xref:System.Data.DataSet.Load%2A&gt;</ph> method moves on to the next result set within the reader, until there are no more result sets.</source>
          <target state="translated">每個結果集之後,<ph id="ph1">&lt;xref:System.Data.DataSet.Load%2A&gt;</ph>方法會移到下一個結果集內讀取器，直到沒有其他結果集。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>The name resolution scheme for this method is the same as that followed by the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> class.</source>
          <target state="translated">這個方法的名稱解析配置等同於後續<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>The following example adds a table to a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, and then attempts to use the <ph id="ph2">&lt;xref:System.Data.DataSet.Load%2A&gt;</ph> method to load data from a <ph id="ph3">&lt;xref:System.Data.DataTableReader&gt;</ph> that contains an incompatible schema.</source>
          <target state="translated">下列範例會將資料表以<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>，然後嘗試使用<ph id="ph2">&lt;xref:System.Data.DataSet.Load%2A&gt;</ph>方法來載入資料<ph id="ph3">&lt;xref:System.Data.DataTableReader&gt;</ph>，其中包含不相容的結構描述。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>Rather than trapping the error, this example uses a <ph id="ph1">&lt;xref:System.Data.FillErrorEventHandler&gt;</ph> delegate to investigate and handle the error.</source>
          <target state="translated">而不是設陷錯誤，這個範例會使用<ph id="ph1">&lt;xref:System.Data.FillErrorEventHandler&gt;</ph>調查和處理錯誤的委派。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>The output is displayed in the console window.</source>
          <target state="translated">輸出會顯示在主控台視窗中。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.Locale">
          <source>Gets or sets the locale information used to compare strings within the table.</source>
          <target state="translated">取得或設定用來在資料表中比較字串的地區設定 (Locale) 資訊。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Locale">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> that contains data about the user's machine locale.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>，包含使用者電腦地區設定的資料。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Locale">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Locale">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Locale%2A&gt;</ph> property specifies the locale for which sorting applies.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.Locale%2A&gt;</ph>屬性指定的地區設定的排序會套用。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Locale">
          <source>By default, setting the <ph id="ph1">&lt;xref:System.Data.DataSet.Locale%2A&gt;</ph> for a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> also sets the <ph id="ph3">&lt;xref:System.Data.DataSet.Locale%2A&gt;</ph> for each <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> object in that <ph id="ph5">`DataSet`</ph> to the same value.</source>
          <target state="translated">根據預設，設定<ph id="ph1">&lt;xref:System.Data.DataSet.Locale%2A&gt;</ph>如<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>也會設定<ph id="ph3">&lt;xref:System.Data.DataSet.Locale%2A&gt;</ph>每個<ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>中的物件<ph id="ph5">`DataSet`</ph>為相同的值。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Locale">
          <source>In columns that contain expressions, the <ph id="ph1">&lt;xref:System.StringComparison.InvariantCulture&gt;</ph> is used.</source>
          <target state="translated">資料行中包含的運算式，<ph id="ph1">&lt;xref:System.StringComparison.InvariantCulture&gt;</ph>用。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Locale">
          <source>The <ph id="ph1">&lt;xref:System.StringComparison.CurrentCulture&gt;</ph> is ignored.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.StringComparison.CurrentCulture&gt;</ph>會被忽略。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Locale">
          <source>The following example gets the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> for a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> and prints the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.DisplayName%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.EnglishName%2A&gt;</ph> properties.</source>
          <target state="translated">下列範例會取得<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>如<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>並列印<ph id="ph3">&lt;xref:System.Globalization.CultureInfo.DisplayName%2A&gt;</ph>和<ph id="ph4">&lt;xref:System.Globalization.CultureInfo.EnglishName%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="T:System.Data.DataSet">
          <source>Merges a specified <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, or array of <ph id="ph3">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects into the current <ph id="ph4">&lt;see langword="DataSet" /&gt;</ph> or <ph id="ph5">&lt;see langword="DataTable" /&gt;</ph>.</source>
          <target state="translated">將指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 物件的陣列合併到目前的 <ph id="ph4">&lt;see langword="DataSet" /&gt;</ph> 或 <ph id="ph5">&lt;see langword="DataTable" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>The array of <ph id="ph1">&lt;see langword="DataRow" /&gt;</ph> objects to be merged into the <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DataRow" /&gt;</ph> 物件的陣列，將合併至 <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>Merges an array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects into the current <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 物件的陣列合併到目前的 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is used to merge two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects that have largely similar schemas.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>方法用來合併兩個<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>有大致相似的結構描述的物件。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">合併用戶端應用程式上通常用來將資料來源的最新的變更合併至現有<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>This allows the client application to have a refreshed <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with the latest data from the data source.</source>
          <target state="translated">這可讓用戶端應用程式已重新整理<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>從資料來源的最新的資料。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>方法通常稱為結尾的一系列程序牽涉到驗證的變更、 重新調整錯誤、 變更，更新資料來源和最後重新整理現有<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">在用戶端應用程式中，是很常見的單一按鈕，讓使用者可以按一下收集變更的資料，再將它傳送回中介層元件進行驗證。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method is first invoked.</source>
          <target state="translated">在此案例中，<ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph>首次叫用方法。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>That method returns a second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> optimized for validating and merging.</source>
          <target state="translated">方法會傳回第二個<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>適合用來驗證和合併。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>This second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object contains only the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects that were changed, resulting in a subset of the original <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">此第二個<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>物件只包含<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>物件已變更，導致原始子集<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>This subset is generally smaller and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">這個子集通常比較小，因此更有效率地傳遞回中介層元件。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">然後中, 介層元件會透過預存程序，以變更更新原始資料來源。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>The middle tier can then send back either a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">中介層就可以傳送回其中一個新<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>（藉由執行原始查詢一次），包含原始資料和資料來源的最新的資料，或可重新傳送的任何變更，已對它從資料來源子集。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> can be merged back into the client application's original <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the <ph id="ph3">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method.</source>
          <target state="translated">（例如，如果資料來源會自動建立唯一的主索引鍵值，這些值可以傳播回用戶端應用程式。）在任一情況下，傳回<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>可以合併至用戶端應用程式的原始<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>與<ph id="ph3">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>When the <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is called, the schemas of the two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>呼叫方法時，兩個結構描述<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>物件進行比較，因為它是可能的結構描述可能已經變更。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">例如，在企業對企業案例中，新的資料行可能已新增至 XML 結構描述自動化程序。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>If the source <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains schema elements (added <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph3">`missingSchemaAction`</ph> argument to <ph id="ph4">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">如果來源<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含結構描述項目 (加入<ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>物件) 中遺失目標中，結構描述項目可以藉由設定新增至目標<ph id="ph3">`missingSchemaAction`</ph>引數<ph id="ph4">`MissingSchemaAction.Add`</ph>。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>In that case, the merged <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains the added schema and data.</source>
          <target state="translated">在此情況下，合併<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含新增結構描述和資料。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">合併結構描述後, 資料會合併。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>When merging a new source <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> into the target, any source rows with a <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, or <ph id="ph5">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">合併新的來源時<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>到目標，任何來源的資料列與<ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph>值<ph id="ph3">`Unchanged`</ph>， <ph id="ph4">`Modified`</ph>，或<ph id="ph5">`Deleted`</ph>會對應到相同的主索引鍵值的目標資料列。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>Source rows with a <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">來源的資料列<ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph>值<ph id="ph2">`Added`</ph>會對應到新的目標資料列與相同的主索引鍵值為新的來源資料列。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">合併期間，會停用條件約束。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>If any constraints cannot be enabled at the end of a merge, a <ph id="ph1">&lt;xref:System.Data.ConstraintException&gt;</ph> is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">如果任何條件約束無法啟用合併，結尾<ph id="ph1">&lt;xref:System.Data.ConstraintException&gt;</ph>產生，停用條件約束時，合併的資料都會保留下來。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">在此情況下，<ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph>屬性設定為<ph id="ph2">`false`</ph>，並且所有的資料列，而不會標示錯誤。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>The errors must be resolved before attempting to reset the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">必須先解決錯誤，然後再嘗試重設<ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph>屬性<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;see langword="DataSet" /&gt;</ph> whose data and schema will be merged.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DataSet" /&gt;</ph>，其資料及結構描述將被合併。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>Merges a specified <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and its schema into the current <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>.</source>
          <target state="translated">將指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 及其結構描述合併到目前的 <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is used to merge two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects that have largely similar schemas.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>方法用來合併兩個<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>有大致相似的結構描述的物件。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">合併用戶端應用程式上通常用來將資料來源的最新的變更合併至現有<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>This allows the client application to have a refreshed <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with the latest data from the data source.</source>
          <target state="translated">這可讓用戶端應用程式已重新整理<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>從資料來源的最新的資料。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>方法通常稱為結尾的一系列程序牽涉到驗證的變更、 重新調整錯誤、 變更，更新資料來源和最後重新整理現有<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">在用戶端應用程式中，是很常見的單一按鈕，讓使用者可以按一下收集變更的資料，再將它傳送回中介層元件進行驗證。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method is first invoked.</source>
          <target state="translated">在此案例中，<ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph>首次叫用方法。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>That method returns a second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> optimized for validating and merging.</source>
          <target state="translated">方法會傳回第二個<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>適合用來驗證和合併。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>This second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object contains only the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects that were changed, resulting in a subset of the original <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">此第二個<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>物件只包含<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>物件已變更，導致原始子集<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">這個子集是容量較小時，因此更有效率地傳遞回中介層元件。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">然後中, 介層元件會透過預存程序，以變更更新原始資料來源。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>The middle tier can then send back either a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">中介層就可以傳送回其中一個新<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>（藉由執行原始查詢一次），包含原始資料和資料來源的最新的資料，或可重新傳送的任何變更，已對它從資料來源子集。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> can be merged back into the client application's original <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the <ph id="ph3">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method.</source>
          <target state="translated">（例如，如果資料來源會自動建立唯一的主索引鍵值，這些值可以傳播回用戶端應用程式。）在任一情況下，傳回<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>可以合併至用戶端應用程式的原始<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>與<ph id="ph3">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>When the <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is called, the schemas of the two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>呼叫方法時，兩個結構描述<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>物件進行比較，因為它是可能的結構描述可能已經變更。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">例如，在企業對企業案例中，新的資料行可能已新增至 XML 結構描述自動化程序。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>If the source <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains schema elements (added <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph3">`missingSchemaAction`</ph> argument to <ph id="ph4">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">如果來源<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含結構描述項目 (加入<ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>物件) 中遺失目標中，結構描述項目可以藉由設定新增至目標<ph id="ph3">`missingSchemaAction`</ph>引數<ph id="ph4">`MissingSchemaAction.Add`</ph>。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>In that case, the merged <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains the added schema and data.</source>
          <target state="translated">在此情況下，合併<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含新增結構描述和資料。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">合併結構描述後, 資料會合併。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>When merging a new source <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> into the target, any source rows with a <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, or <ph id="ph5">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">合併新的來源時<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>到目標，任何來源的資料列與<ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph>值<ph id="ph3">`Unchanged`</ph>， <ph id="ph4">`Modified`</ph>，或<ph id="ph5">`Deleted`</ph>會對應到相同的主索引鍵值的目標資料列。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">來源的資料列<ph id="ph1">`DataRowState`</ph>值<ph id="ph2">`Added`</ph>會對應到新的目標資料列與相同的主索引鍵值為新的來源資料列。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">合併期間，會停用條件約束。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>If any constraints cannot be enabled at the end of merge, a <ph id="ph1">&lt;xref:System.Data.ConstraintException&gt;</ph> is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">如果任何條件約束無法啟用 「 合併 」 結尾<ph id="ph1">&lt;xref:System.Data.ConstraintException&gt;</ph>產生，停用條件約束時，合併的資料都會保留下來。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">在此情況下，<ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph>屬性設定為<ph id="ph2">`false`</ph>，並且所有的資料列，而不會標示錯誤。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>The errors must be resolved before attempting to reset the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">必須先解決錯誤，然後再嘗試重設<ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph>屬性<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph>, Update, and <ph id="ph2">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> methods on a <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph>、 更新和<ph id="ph2">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>方法<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>One or more constraints cannot be enabled.</source>
          <target state="translated">一個或多個條件約束無法啟用。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;paramref name="dataSet" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dataSet" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose data and schema will be merged.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>，其資料及結構描述將被合併。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>Merges a specified <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> and its schema into the current <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">將指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 及其結構描述合併到目前的 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is used to merge two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects that have largely similar schemas.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>方法用來合併兩個<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>有大致相似的結構描述的物件。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">合併用戶端應用程式上通常用來將資料來源的最新的變更合併至現有<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>This allows the client application to have a refreshed <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with the latest data from the data source.</source>
          <target state="translated">這可讓用戶端應用程式已重新整理<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>從資料來源的最新的資料。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>方法通常稱為結尾的一系列程序牽涉到驗證的變更、 重新調整錯誤、 變更，更新資料來源和最後重新整理現有<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">在用戶端應用程式中，是很常見的單一按鈕，讓使用者可以按一下收集變更的資料，再將它傳送回中介層元件進行驗證。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method is first invoked.</source>
          <target state="translated">在此案例中，<ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph>首次叫用方法。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>That method returns a second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> optimized for validating and merging.</source>
          <target state="translated">方法會傳回第二個<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>適合用來驗證和合併。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>This second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object contains only the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects that were changed, resulting in a subset of the original <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">此第二個<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>物件只包含<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>物件已變更，導致原始子集<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">這個子集是容量較小時，因此更有效率地傳遞回中介層元件。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">然後中, 介層元件會透過預存程序，以變更更新原始資料來源。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>The middle tier can then send back either a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">中介層就可以傳送回其中一個新<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>（藉由執行原始查詢一次），包含原始資料和資料來源的最新的資料，或可重新傳送的任何變更，已對它從資料來源子集。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> can be merged back into the client application's original <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the <ph id="ph3">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method.</source>
          <target state="translated">（例如，如果資料來源會自動建立唯一的主索引鍵值，這些值可以傳播回用戶端應用程式。）在任一情況下，傳回<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>可以合併至用戶端應用程式的原始<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>與<ph id="ph3">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>When the <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is called, the schemas of the two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>呼叫方法時，兩個結構描述<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>物件進行比較，因為它是可能的結構描述可能已經變更。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">例如，在企業對企業案例中，新的資料行可能已新增至 XML 結構描述自動化程序。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>If the source <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains schema elements (added <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph3">`missingSchemaAction`</ph> argument to <ph id="ph4">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">如果來源<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含結構描述項目 (加入<ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>物件) 中遺失目標中，結構描述項目可以藉由設定新增至目標<ph id="ph3">`missingSchemaAction`</ph>引數<ph id="ph4">`MissingSchemaAction.Add`</ph>。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>In that case, the merged <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains the added schema and data.</source>
          <target state="translated">在此情況下，合併<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含新增結構描述和資料。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">合併結構描述後, 資料會合併。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>When merging a new source <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> into the target, any source rows with a <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, or <ph id="ph5">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">合併新的來源時<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>到目標，任何來源的資料列與<ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph>值<ph id="ph3">`Unchanged`</ph>， <ph id="ph4">`Modified`</ph>，或<ph id="ph5">`Deleted`</ph>會對應到相同的主索引鍵值的目標資料列。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">來源的資料列<ph id="ph1">`DataRowState`</ph>值<ph id="ph2">`Added`</ph>會對應到新的目標資料列與相同的主索引鍵值為新的來源資料列。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">合併期間，會停用條件約束。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>If any constraints cannot be enabled at the end of merge, a <ph id="ph1">&lt;xref:System.Data.ConstraintException&gt;</ph> is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">如果任何條件約束無法啟用 「 合併 」 結尾<ph id="ph1">&lt;xref:System.Data.ConstraintException&gt;</ph>產生，停用條件約束時，合併的資料都會保留下來。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">在此情況下，<ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph>屬性設定為<ph id="ph2">`false`</ph>，並且所有的資料列，而不會標示錯誤。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>The errors must be resolved before attempting to reset the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">必須先解決錯誤，然後再嘗試重設<ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph>屬性<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>The following example creates a simple <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with one table, two columns, and ten rows.</source>
          <target state="translated">下列範例會建立簡單<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>一個資料表、 兩個資料行，與十個資料列。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>A second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is created that is identical to the first.</source>
          <target state="translated">第二個<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>也就是建立與第一個。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>Two rows are added to the second table, which is then merged into the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">兩個資料列會加入第二個資料表，然後合併到<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;paramref name="table" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="table" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>The <ph id="ph1">&lt;see langword="DataSet" /&gt;</ph> whose data and schema will be merged.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DataSet" /&gt;</ph>，其資料及結構描述將被合併。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve changes in the current <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要保留目前 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 中的變更，則為 <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>Merges a specified <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and its schema into the current <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>, preserving or discarding any changes in this <ph id="ph3">&lt;see langword="DataSet" /&gt;</ph> according to the given argument.</source>
          <target state="translated">將指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 及其結構描述合併到目前的 <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph> 中，根據給定參數保留或忽略這個 <ph id="ph3">&lt;see langword="DataSet" /&gt;</ph> 中的任何變更。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is used to merge two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects that have largely similar schemas.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>方法用來合併兩個<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>有大致相似的結構描述的物件。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">合併用戶端應用程式上通常用來將資料來源的最新的變更合併至現有<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>This allows the client application to have a refreshed <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with the latest data from the data source.</source>
          <target state="translated">這可讓用戶端應用程式已重新整理<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>從資料來源的最新的資料。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>方法通常稱為結尾的一系列程序牽涉到驗證的變更、 重新調整錯誤、 變更，更新資料來源和最後重新整理現有<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">在用戶端應用程式中，是很常見的單一按鈕，讓使用者可以按一下收集變更的資料，再將它傳送回中介層元件進行驗證。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method is first invoked.</source>
          <target state="translated">在此案例中，<ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph>首次叫用方法。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>That method returns a second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> optimized for validating and merging.</source>
          <target state="translated">方法會傳回第二個<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>適合用來驗證和合併。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>This second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object contains only the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects that were changed, resulting in a subset of the original <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">此第二個<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>物件只包含<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>物件已變更，導致原始子集<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">這個子集是容量較小時，因此更有效率地傳遞回中介層元件。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">然後中, 介層元件會透過預存程序，以變更更新原始資料來源。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>The middle tier can then send back either a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">中介層就可以傳送回其中一個新<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>（藉由執行原始查詢一次），包含原始資料和資料來源的最新的資料，或可重新傳送的任何變更，已對它從資料來源子集。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> can be merged back into the client application's original <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the <ph id="ph3">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method.</source>
          <target state="translated">（例如，如果資料來源會自動建立唯一的主索引鍵值，這些值可以傳播回用戶端應用程式。）在任一情況下，傳回<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>可以合併至用戶端應用程式的原始<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>與<ph id="ph3">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>When the <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is called, the schemas of the two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>呼叫方法時，兩個結構描述<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>物件進行比較，因為它是可能的結構描述可能已經變更。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">例如，在企業對企業案例中，新的資料行可能已新增至 XML 結構描述自動化程序。</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>If the source <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains schema elements (added <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph3">`missingSchemaAction`</ph> argument to <ph id="ph4">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">如果來源<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含結構描述項目 (加入<ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>物件) 中遺失目標中，結構描述項目可以藉由設定新增至目標<ph id="ph3">`missingSchemaAction`</ph>引數<ph id="ph4">`MissingSchemaAction.Add`</ph>。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>In that case, the merged <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains the added schema and data.</source>
          <target state="translated">在此情況下，合併<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含新增結構描述和資料。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">合併結構描述後, 資料會合併。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>When merging a new source <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> into the target, any source rows with a <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, or <ph id="ph5">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">合併新的來源時<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>到目標，任何來源的資料列與<ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph>值<ph id="ph3">`Unchanged`</ph>， <ph id="ph4">`Modified`</ph>，或<ph id="ph5">`Deleted`</ph>會對應到相同的主索引鍵值的目標資料列。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">來源的資料列<ph id="ph1">`DataRowState`</ph>值<ph id="ph2">`Added`</ph>會對應到新的目標資料列與相同的主索引鍵值為新的來源資料列。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">合併期間，會停用條件約束。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>If any constraints cannot be enabled at the end of merge, a <ph id="ph1">&lt;xref:System.Data.ConstraintException&gt;</ph> is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">如果任何條件約束無法啟用 「 合併 」 結尾<ph id="ph1">&lt;xref:System.Data.ConstraintException&gt;</ph>產生，停用條件約束時，合併的資料都會保留下來。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">在此情況下，<ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph>屬性設定為<ph id="ph2">`false`</ph>，並且所有的資料列，而不會標示錯誤。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>The errors must be resolved before attempting to reset the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">必須先解決錯誤，然後再嘗試重設<ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph>屬性<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>The following example creates a simple <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with one table, two columns, and ten rows.</source>
          <target state="translated">下列範例會建立簡單<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>一個資料表、 兩個資料行，與十個資料列。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>After adding ten rows, two values are changed, and one row is added.</source>
          <target state="translated">新增十個資料列後, 兩個值會變更，並加入一個資料列。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>A subset of the changed data is created using the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method.</source>
          <target state="translated">使用建立的已變更的資料子集<ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>After reconciling errors, the subset data is merged into the original <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">之後，重新調整錯誤，子集資料合併至原始<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>The array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects to be merged into the <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 物件的陣列，將合併至 <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve changes in the <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要保留 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 中的變更，則為 <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph> values.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>Merges an array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects into the current <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, preserving or discarding changes in the <ph id="ph3">&lt;see langword="DataSet" /&gt;</ph> and handling an incompatible schema according to the given arguments.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 物件的陣列合併到目前的 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中，根據給定參數保留或忽略 <ph id="ph3">&lt;see langword="DataSet" /&gt;</ph> 中的變更，並處理不相容的結構描述。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is used to merge two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects that have largely similar schemas.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>方法用來合併兩個<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>有大致相似的結構描述的物件。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">合併用戶端應用程式上通常用來將資料來源的最新的變更合併至現有<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>This allows the client application to have a refreshed <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with the latest data from the data source.</source>
          <target state="translated">這可讓用戶端應用程式已重新整理<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>從資料來源的最新的資料。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>方法通常稱為結尾的一系列程序牽涉到驗證的變更、 重新調整錯誤、 變更，更新資料來源和最後重新整理現有<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">在用戶端應用程式中，是很常見的單一按鈕，讓使用者可以按一下收集變更的資料，再將它傳送回中介層元件進行驗證。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method is first invoked.</source>
          <target state="translated">在此案例中，<ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph>首次叫用方法。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>That method returns a second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> optimized for validating and merging.</source>
          <target state="translated">方法會傳回第二個<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>適合用來驗證和合併。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>This second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object contains only the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects that were changed, resulting in a subset of the original <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">此第二個<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>物件只包含<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>物件已變更，導致原始子集<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">這個子集是容量較小時，因此更有效率地傳遞回中介層元件。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">然後中, 介層元件會透過預存程序，以變更更新原始資料來源。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>The middle tier can then send back either a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">中介層就可以傳送回其中一個新<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>（藉由執行原始查詢一次），包含原始資料和資料來源的最新的資料，或可重新傳送的任何變更，已對它從資料來源子集。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> can be merged back into the client application's original <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the <ph id="ph3">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method.</source>
          <target state="translated">（例如，如果資料來源會自動建立唯一的主索引鍵值，這些值可以傳播回用戶端應用程式。）在任一情況下，傳回<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>可以合併至用戶端應用程式的原始<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>與<ph id="ph3">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>To facilitate explanation of the <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method, we use "target" to signify the current <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, and "source" to name the second (parameter) <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">為了方便說明<ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>方法，我們使用 「 目標 」 來表示目前<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>，和 「 來源 」 名稱的第二個 （參數） <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>The target <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is so named because it is the object upon which an action (the merge) occurs.</source>
          <target state="translated">目標<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>如此命名，因為它是在其動作 （合併），就會發生的物件。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>The second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is called a "source" because the information it contains does not change, but instead is merged into the current <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">第二個<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>稱為 「 來源 」，因為它包含的資訊不會變更，但改為合併到目前<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>When the <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is called, the schemas of the two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>呼叫方法時，兩個結構描述<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>物件進行比較，因為它是可能的結構描述可能已經變更。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">例如，在企業對企業案例中，新的資料行可能已新增至 XML 結構描述自動化程序。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>If the source <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains schema elements (added <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph3">`missingSchemaAction`</ph> argument to <ph id="ph4">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">如果來源<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含結構描述項目 (加入<ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>物件) 中遺失目標中，結構描述項目可以藉由設定新增至目標<ph id="ph3">`missingSchemaAction`</ph>引數<ph id="ph4">`MissingSchemaAction.Add`</ph>。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>In that case, the merged <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains the added schema and data.</source>
          <target state="translated">在此情況下，合併<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含新增結構描述和資料。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">合併結構描述後, 資料會合併。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>When merging a new source <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> into the target, any source rows with a <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, or <ph id="ph5">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">合併新的來源時<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>到目標，任何來源的資料列與<ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph>值<ph id="ph3">`Unchanged`</ph>， <ph id="ph4">`Modified`</ph>，或<ph id="ph5">`Deleted`</ph>會對應到相同的主索引鍵值的目標資料列。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">來源的資料列<ph id="ph1">`DataRowState`</ph>值<ph id="ph2">`Added`</ph>會對應到新的目標資料列與相同的主索引鍵值為新的來源資料列。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">合併期間，會停用條件約束。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>If any constraints cannot be enabled at the end of merge, a <ph id="ph1">&lt;xref:System.Data.ConstraintException&gt;</ph> is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">如果任何條件約束無法啟用 「 合併 」 結尾<ph id="ph1">&lt;xref:System.Data.ConstraintException&gt;</ph>產生，停用條件約束時，合併的資料都會保留下來。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">在此情況下，<ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph>屬性設定為<ph id="ph2">`false`</ph>，並且所有的資料列，而不會標示錯誤。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>The errors must be resolved before attempting to reset the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">必須先解決錯誤，然後再嘗試重設<ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph>屬性<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">&lt;see langword="DataSet" /&gt;</ph> whose data and schema will be merged.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DataSet" /&gt;</ph>，其資料及結構描述將被合併。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve changes in the current <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要保留目前 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 中的變更，則為 <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph> values.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>Merges a specified <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and its schema with the current <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>, preserving or discarding changes in the current <ph id="ph3">&lt;see langword="DataSet" /&gt;</ph> and handling an incompatible schema according to the given arguments.</source>
          <target state="translated">將指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 及其結構描述與目前的 <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph> 合併，根據給定參數保留或忽略目前 <ph id="ph3">&lt;see langword="DataSet" /&gt;</ph> 中的變更，並處理不相容的結構描述。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is used to merge two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects that have largely similar schemas.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>方法用來合併兩個<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>有大致相似的結構描述的物件。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">合併用戶端應用程式上通常用來將資料來源的最新的變更合併至現有<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>This allows the client application to have a refreshed <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with the latest data from the data source.</source>
          <target state="translated">這可讓用戶端應用程式已重新整理<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>從資料來源的最新的資料。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>方法通常稱為結尾的一系列程序牽涉到驗證的變更、 重新調整錯誤、 變更，更新資料來源和最後重新整理現有<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">在用戶端應用程式中，是很常見的單一按鈕，讓使用者可以按一下收集變更的資料，再將它傳送回中介層元件進行驗證。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method is first invoked.</source>
          <target state="translated">在此案例中，<ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph>首次叫用方法。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>That method returns a second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> optimized for validating and merging.</source>
          <target state="translated">方法會傳回第二個<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>適合用來驗證和合併。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>This second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object contains only the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects that were changed, resulting in a subset of the original <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">此第二個<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>物件只包含<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>物件已變更，導致原始子集<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">這個子集是容量較小時，因此更有效率地傳遞回中介層元件。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">然後中, 介層元件會透過預存程序，以變更更新原始資料來源。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The middle tier can then send back either a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">中介層就可以傳送回其中一個新<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>（藉由執行原始查詢一次），包含原始資料和資料來源的最新的資料，或可重新傳送的任何變更，已對它從資料來源子集。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> can be merged back into the client application's original <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the <ph id="ph3">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method.</source>
          <target state="translated">（例如，如果資料來源會自動建立唯一的主索引鍵值，這些值可以傳播回用戶端應用程式。）在任一情況下，傳回<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>可以合併至用戶端應用程式的原始<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>與<ph id="ph3">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>To facilitate explanation of the <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method, we use "target" to signify the current <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, and "source" to name the second (parameter) <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">為了方便說明<ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>方法，我們使用 「 目標 」 來表示目前<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>，和 「 來源 」 名稱的第二個 （參數） <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The target <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is so named because it is the object upon which an action (the merge) occurs.</source>
          <target state="translated">目標<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>如此命名，因為它是在其動作 （合併），就會發生的物件。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is called a "source" because the information it contains does not change, but instead is merged into the current <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">第二個<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>稱為 「 來源 」，因為它包含的資訊不會變更，但改為合併到目前<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>When the <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is called, the schemas of the two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>呼叫方法時，兩個結構描述<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>物件進行比較，因為它是可能的結構描述可能已經變更。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">例如，在企業對企業案例中，新的資料行可能已新增至 XML 結構描述自動化程序。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>If the source <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains schema elements (added <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph3">`missingSchemaAction`</ph> argument to <ph id="ph4">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">如果來源<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含結構描述項目 (加入<ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>物件) 中遺失目標中，結構描述項目可以藉由設定新增至目標<ph id="ph3">`missingSchemaAction`</ph>引數<ph id="ph4">`MissingSchemaAction.Add`</ph>。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>In that case, the merged <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains the added schema and data.</source>
          <target state="translated">在此情況下，合併<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含新增結構描述和資料。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">合併結構描述後, 資料會合併。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>When merging a new source <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> into the target, any source rows with a <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, or <ph id="ph5">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">合併新的來源時<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>到目標，任何來源的資料列與<ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph>值<ph id="ph3">`Unchanged`</ph>， <ph id="ph4">`Modified`</ph>，或<ph id="ph5">`Deleted`</ph>會對應到相同的主索引鍵值的目標資料列。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">來源的資料列<ph id="ph1">`DataRowState`</ph>值<ph id="ph2">`Added`</ph>會對應到新的目標資料列與相同的主索引鍵值為新的來源資料列。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">合併期間，會停用條件約束。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>If any constraints cannot be enabled at the end of merge, a <ph id="ph1">&lt;xref:System.Data.ConstraintException&gt;</ph> is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">如果任何條件約束無法啟用 「 合併 」 結尾<ph id="ph1">&lt;xref:System.Data.ConstraintException&gt;</ph>產生，停用條件約束時，合併的資料都會保留下來。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">在此情況下，<ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph>屬性設定為<ph id="ph2">`false`</ph>，並且所有的資料列，而不會標示錯誤。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The errors must be resolved before attempting to reset the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">必須先解決錯誤，然後再嘗試重設<ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph>屬性<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The following example creates a simple <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with one table, two columns, and ten rows.</source>
          <target state="translated">下列範例會建立簡單<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>一個資料表、 兩個資料行，與十個資料列。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>Two values are changed, and one row is added.</source>
          <target state="translated">變更兩個值，並加入一個資料列。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>A subset of the changed data is created using the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method.</source>
          <target state="translated">使用建立的已變更的資料子集<ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>After reconciling errors, a new column is added to the subset, changing the schema.</source>
          <target state="translated">調解錯誤，新的資料行新增至後變更結構描述的子集。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>When the <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is called with the <ph id="ph2">`missingSchemaAction`</ph> set to <ph id="ph3">`MissingSchemaAction.Add`</ph>, the new column is added to the original <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> object's schema.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>方法呼叫<ph id="ph2">`missingSchemaAction`</ph>設<ph id="ph3">`MissingSchemaAction.Add`</ph>，新的資料行加入到原始<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>物件的結構描述。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">&lt;paramref name="dataSet" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dataSet" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">&lt;see langword="DataTable" /&gt;</ph> whose data and schema will be merged.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DataTable" /&gt;</ph>，其資料及結構描述將被合併。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph> values.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve changes in the <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若要保留 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 中的變更，則為 <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>Merges a specified <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> and its schema into the current <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>, preserving or discarding changes in the <ph id="ph3">&lt;see langword="DataSet" /&gt;</ph> and handling an incompatible schema according to the given arguments.</source>
          <target state="translated">將指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 及其結構描述合併到目前的 <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>，根據給定引數保留或忽略 <ph id="ph3">&lt;see langword="DataSet" /&gt;</ph> 中的變更，並處理不相容的結構描述。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is used to merge two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects that have largely similar schemas.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>方法用來合併兩個<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>有大致相似的結構描述的物件。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">合併用戶端應用程式上通常用來將資料來源的最新的變更合併至現有<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>This allows the client application to have a refreshed <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with the latest data from the data source.</source>
          <target state="translated">這可讓用戶端應用程式已重新整理<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>從資料來源的最新的資料。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>方法通常稱為結尾的一系列程序牽涉到驗證的變更、 重新調整錯誤、 變更，更新資料來源和最後重新整理現有<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>iOn a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">Middle 用戶端應用程式，它是具有單一按鈕，讓使用者可以按一下，收集變更的資料，並送回中介層元件之前先進行驗證。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method is first invoked.</source>
          <target state="translated">在此案例中，<ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph>首次叫用方法。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>That method returns a second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> optimized for validating and merging.</source>
          <target state="translated">方法會傳回第二個<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>適合用來驗證和合併。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>This second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object contains only the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects that were changed, resulting in a subset of the original <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">此第二個<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>物件只包含<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>物件已變更，導致原始子集<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">這個子集是容量較小時，因此更有效率地傳遞回中介層元件。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">然後中, 介層元件會透過預存程序，以變更更新原始資料來源。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The middle tier can then send back either a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">中介層就可以傳送回其中一個新<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>（藉由執行原始查詢一次），包含原始資料和資料來源的最新的資料，或可重新傳送的任何變更，已對它從資料來源子集。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> can be merged back into the client application's original <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the <ph id="ph3">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method.</source>
          <target state="translated">（例如，如果資料來源會自動建立唯一的主索引鍵值，這些值可以傳播回用戶端應用程式。）在任一情況下，傳回<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>可以合併至用戶端應用程式的原始<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>與<ph id="ph3">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>When the <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is called, the schemas of the two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph>呼叫方法時，兩個結構描述<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>物件進行比較，因為它是可能的結構描述可能已經變更。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">例如，在企業對企業案例中，新的資料行可能已新增至 XML 結構描述自動化程序。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>If the source <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains schema elements (added <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph3">`missingSchemaAction`</ph> argument to <ph id="ph4">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">如果來源<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含結構描述項目 (加入<ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>物件) 中遺失目標中，結構描述項目可以藉由設定新增至目標<ph id="ph3">`missingSchemaAction`</ph>引數<ph id="ph4">`MissingSchemaAction.Add`</ph>。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>In that case, the merged <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains the added schema and data.</source>
          <target state="translated">在此情況下，合併<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含新增結構描述和資料。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">合併結構描述後, 資料會合併。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>When merging a new source <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> into the target, any source rows with a <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, or <ph id="ph5">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">合併新的來源時<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>到目標，任何來源的資料列與<ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph>值<ph id="ph3">`Unchanged`</ph>， <ph id="ph4">`Modified`</ph>，或<ph id="ph5">`Deleted`</ph>會對應到相同的主索引鍵值的目標資料列。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">來源的資料列<ph id="ph1">`DataRowState`</ph>值<ph id="ph2">`Added`</ph>會對應到新的目標資料列與相同的主索引鍵值為新的來源資料列。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">合併期間，會停用條件約束。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>If any constraints cannot be enabled at the end of merge, a <ph id="ph1">&lt;xref:System.Data.ConstraintException&gt;</ph> is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">如果任何條件約束無法啟用 「 合併 」 結尾<ph id="ph1">&lt;xref:System.Data.ConstraintException&gt;</ph>產生，停用條件約束時，合併的資料都會保留下來。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">在此情況下，<ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph>屬性設定為<ph id="ph2">`false`</ph>，並且所有的資料列，而不會標示錯誤。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The errors must be resolved before attempting to reset the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">必須先解決錯誤，然後再嘗試重設<ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph>屬性<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The following example creates a simple <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with one table, two columns, and ten rows.</source>
          <target state="translated">下列範例會建立簡單<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>一個資料表、 兩個資料行，與十個資料列。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>A second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is created that is nearly identical to the first except that a new <ph id="ph2">`DataColumn`</ph> is added to the table.</source>
          <target state="translated">第二個<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>也就是建立與第一個幾乎完全相同之處在於新<ph id="ph2">`DataColumn`</ph>加入至資料表。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>Two rows are added to the second table, which is then merged into the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with the <ph id="ph2">`preserveChanges`</ph> argument set to <ph id="ph3">`false`</ph>, and the <ph id="ph4">`missingSchemaAction`</ph> argument set to <ph id="ph5">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">兩個資料列會加入第二個資料表，然後合併到<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>與<ph id="ph2">`preserveChanges`</ph>引數設定為<ph id="ph3">`false`</ph>，而<ph id="ph4">`missingSchemaAction`</ph>引數設定為<ph id="ph5">`MissingSchemaAction.Add`</ph>。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">&lt;paramref name="dataSet" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dataSet" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="E:System.Data.DataSet.MergeFailed">
          <source>Occurs when a target and source <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> have the same primary key value, and <ph id="ph2">&lt;see cref="P:System.Data.DataSet.EnforceConstraints" /&gt;</ph> is set to true.</source>
          <target state="translated">當目標和來源 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 有相同的主索引鍵值，且 <ph id="ph2">&lt;see cref="P:System.Data.DataSet.EnforceConstraints" /&gt;</ph> 設定為 True 時發生。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataSet.MergeFailed">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">如需處理事件的詳細資訊，請參閱<bpt id="p1">[</bpt>NIB： 使用事件<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataSet.MergeFailed">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Data.DataSet.MergeFailed&gt;</ph> event.</source>
          <target state="translated">下列範例示範如何使用<ph id="ph1">&lt;xref:System.Data.DataSet.MergeFailed&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.Namespace">
          <source>Gets or sets the namespace of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">取得或設定 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 的命名空間。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Namespace">
          <source>The namespace of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 的命名空間。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Namespace">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Namespace%2A&gt;</ph> property is used when reading and writing an XML document into the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> using the <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>, or <ph id="ph6">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.Namespace%2A&gt;</ph>屬性可在讀取和寫入 XML 文件到<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>使用<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>，或<ph id="ph6">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Namespace">
          <source>The namespace of an XML document is used to scope XML attributes and elements when read into a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">XML 文件的命名空間用來限定範圍的 XML 屬性和項目時讀入<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Namespace">
          <source>For example, if a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains a schema that was read from a document with the namespace "myCompany," and an attempt is made to read data only from a document with a different namespace, any data that does not correspond to the existing schema is ignored.</source>
          <target state="translated">例如，如果<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含結構描述，已從具有命名空間"mycompany 機 」 的文件和嘗試從具有不同的命名空間的文件只讀取資料，任何未對應到現有的結構描述的資料會被忽略。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Namespace">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Data.DataSet.Prefix%2A&gt;</ph> before calling the <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會設定<ph id="ph1">&lt;xref:System.Data.DataSet.Prefix%2A&gt;</ph>之前先呼叫<ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.Namespace">
          <source>The namespace already has data.</source>
          <target state="translated">命名空間已經有資料。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyChangedEventArgs" /&gt;</ph>，其中包含事件資料。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph> event.</source>
          <target state="translated">引發 <ph id="ph1">&lt;see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引發事件會透過委派叫用此事件處理常式。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">如需概觀，請參閱<bpt id="p1">[</bpt>處理和引發事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class' <ph id="ph2">&lt;see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">在覆寫<ph id="ph1">&lt;see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph>在衍生類別中，請務必呼叫基底類別<ph id="ph2">&lt;see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> being removed.</source>
          <target state="translated">正在移除的 <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)">
          <source>Occurs when a <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> object is removed from a <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">發生於從 <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> 移除 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 時。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)">
          <source>This method should be overridden by subclasses to restrict tables being removed</source>
          <target state="translated">要移除的資料表限制的子類別應該覆寫這個方法</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> being removed.</source>
          <target state="translated">正在移除的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
          <source>Occurs when a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> is removed from a <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">發生於從 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 移除 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 時。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
          <source>This method can be overridden by subclasses to restrict tables from being removed.</source>
          <target state="translated">這個方法可以覆寫子類別，以限制資料表中移除。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
          <source>The following example shows a class derived from the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with the <ph id="ph2">&lt;xref:System.Data.DataSet.OnRemoveTable%2A&gt;</ph> method overridden.</source>
          <target state="translated">下列範例示範衍生自類別<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>與<ph id="ph2">&lt;xref:System.Data.DataSet.OnRemoveTable%2A&gt;</ph>覆寫方法。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.Prefix">
          <source>Gets or sets an XML prefix that aliases the namespace of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">取得或設定建立 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 命名空間別名的 XML 前置詞。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Prefix">
          <source>The XML prefix for the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> namespace.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 命名空間的 XML 前置詞。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Prefix">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Prefix%2A&gt;</ph> property is used throughout an XML document to identify elements which belong to the namespace of the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> object (as set by the <ph id="ph3">&lt;xref:System.Data.DataSet.Namespace%2A&gt;</ph> property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.Prefix%2A&gt;</ph>屬性用於整個 XML 文件，以找出項目所屬的命名空間<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>物件 (為設定由<ph id="ph3">&lt;xref:System.Data.DataSet.Namespace%2A&gt;</ph>屬性)。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Prefix">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Data.DataSet.Prefix%2A&gt;</ph> before calling the <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會設定<ph id="ph1">&lt;xref:System.Data.DataSet.Prefix%2A&gt;</ph>之前先呼叫<ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.RaisePropertyChanging(System.String)">
          <source>The name of the property that is about to change.</source>
          <target state="translated">將要變更的屬性名稱。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.RaisePropertyChanging(System.String)">
          <source>Sends a notification that the specified <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> property is about to change.</source>
          <target state="translated">傳送一個指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 屬性即將變更的告知。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="T:System.Data.DataSet">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">將 XML 結構描述和資料讀入 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>An object that derives from <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">衍生自 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 的物件。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>，將 XML 結構描述和資料讀入 <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> used to read the data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>，用來讀取資料。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>方法來讀取資料，或同時提供資料和結構描述<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>從 XML 文件，而<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法讀取的結構描述。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">若要讀取資料和結構描述，請使用其中一種<ph id="ph1">`ReadXML`</ph>包含的多載<ph id="ph2">`mode`</ph>參數，並將其值設定為<ph id="ph3">`ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">請注意，也適用於<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法，分別。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要寫入的 XML 資料，或結構描述和資料從<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要寫入的結構描述，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，但未實作<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">如果指定的內嵌結構描述，則內嵌結構描述用來擴充現有的關聯式結構之前載入的資料。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">如果有任何衝突 （例如，相同的資料行定義為不同的資料型別相同資料表中） 會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">如果未不指定任何內嵌結構描述，就會推斷，視需要透過關聯式結構擴充根據 XML 文件的結構。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">如果無法透過推斷延伸架構才能公開的所有資料，會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>The <ph id="ph1">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph2">`DataColumn`</ph> or <ph id="ph3">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>不將 XML 項目關聯與其對應<ph id="ph2">`DataColumn`</ph>或<ph id="ph3">`DataTable`</ph>合法的 XML 字元，例如 ("_") 在序列化 xml 逸出。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>本身只逸出 XML 項目名稱中不合法的 XML 字元，並因此可以只使用相同。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">當 XML 項目名稱中的合法字元會逸出時，處理時忽略此元素。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>If the XML Schema for a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> includes <ph id="ph2">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> to load the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">如果 XML 結構描述<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含<ph id="ph2">`targetNamespace`</ph>、 可能不會讀取資料，並呼叫時，您可能會遇到例外狀況<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>載入<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>xml 程式碼，包含非限定命名空間的項目。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema, as the following example demonstrates.</source>
          <target state="translated">若要讀取不合格的項目，設定<ph id="ph1">`elementFormDefault`</ph>等於"qualified"中的 XML 結構描述，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>If the schema for your <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated">如果結構描述您<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含項目嘗試讀取到結構描述時，發生例外狀況的名稱相同，但不同的類型，請在相同的命名空間，<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>與<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>藉由指定<ph id="ph4">`XmlReadMode.ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果您使用.NET Framework 1.0 版，則不會發生這個例外狀況。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>The following example first creates a simple <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with one <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, two columns, and ten rows.</source>
          <target state="translated">下列範例會先建立簡單<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>與一個<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，兩個資料行和十個資料列。</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> schema and data are written to disk by invoking the <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>結構描述和資料會寫入磁碟，然後叫用<ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>A second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is created and the <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method is used to fill it with schema and data.</source>
          <target state="translated">第二個<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>建立和<ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>方法用來填入結構描述和資料。</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph> from which to read the schema and data.</source>
          <target state="translated">要從中讀取結構描述和資料的 <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>，將 XML 結構描述和資料讀入 <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> used to read the data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>，用來讀取資料。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>方法來讀取資料，或同時提供資料和結構描述<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>從 XML 文件，而<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法讀取的結構描述。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">若要讀取資料和結構描述，請使用其中一種<ph id="ph1">`ReadXML`</ph>包含的多載<ph id="ph2">`mode`</ph>參數，並將其值設定為<ph id="ph3">`ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">請注意，也適用於<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法，分別。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要寫入的 XML 資料，或結構描述和資料從<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要寫入的結構描述，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，但未實作<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">如果指定的內嵌結構描述，則內嵌結構描述用來擴充現有的關聯式結構之前載入的資料。</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">如果有任何衝突 （例如，相同的資料行定義為不同的資料型別相同資料表中） 會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">如果未不指定任何內嵌結構描述，就會推斷，視需要透過關聯式結構擴充根據 XML 文件的結構。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">如果無法透過推斷延伸架構才能公開的所有資料，會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>The <ph id="ph1">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph2">`DataColumn`</ph> or <ph id="ph3">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>不將 XML 項目關聯與其對應<ph id="ph2">`DataColumn`</ph>或<ph id="ph3">`DataTable`</ph>合法的 XML 字元，例如 ("_") 在序列化 xml 逸出。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>本身只逸出 XML 項目名稱中不合法的 XML 字元，並因此可以只使用相同。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">當 XML 項目名稱中的合法字元會逸出時，處理時忽略此元素。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>If the XML Schema for a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> includes <ph id="ph2">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> to load the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">如果 XML 結構描述<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含<ph id="ph2">`targetNamespace`</ph>、 可能不會讀取資料，並呼叫時，您可能會遇到例外狀況<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>載入<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>xml 程式碼，包含非限定命名空間的項目。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">若要讀取不合格的項目，設定<ph id="ph1">`elementFormDefault`</ph>等於"qualified"中的 XML 結構描述如下列範例所示。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>Classes that inherit from the <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> class include the <ph id="ph2">&lt;xref:System.IO.StreamReader&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.StringReader&gt;</ph> classes.</source>
          <target state="translated">類別繼承自<ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph>類別包含<ph id="ph2">&lt;xref:System.IO.StreamReader&gt;</ph>和<ph id="ph3">&lt;xref:System.IO.StringReader&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>If the schema for your <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated">如果結構描述您<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含項目嘗試讀取到結構描述時，發生例外狀況的名稱相同，但不同的類型，請在相同的命名空間，<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>與<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>藉由指定<ph id="ph4">`XmlReadMode.ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果您使用.NET Framework 1.0 版，則不會發生這個例外狀況。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>The following example first creates a simple <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with one <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, two columns, and ten rows.</source>
          <target state="translated">下列範例會先建立簡單<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>與一個<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，兩個資料行和十個資料列。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> schema and data are written to disk by invoking the <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>結構描述和資料會寫入磁碟，然後叫用<ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>A second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is created and the <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method is used to fill it with schema and data.</source>
          <target state="translated">第二個<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>建立和<ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>方法用來填入結構描述和資料。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>The filename (including the path) from which to read.</source>
          <target state="translated">要讀取的檔案名稱 (包括路徑)。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> using the specified file.</source>
          <target state="translated">使用指定的檔案，將 XML 結構描述和資料讀入 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>The <ph id="ph1">&lt;see langword="XmlReadMode" /&gt;</ph> used to read the data.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlReadMode" /&gt;</ph>，用來讀取資料。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>方法來讀取資料，或同時提供資料和結構描述<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>從 XML 文件，而<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法讀取的結構描述。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">若要讀取資料和結構描述，請使用其中一種<ph id="ph1">`ReadXML`</ph>包含的多載<ph id="ph2">`mode`</ph>參數，並將其值設定為<ph id="ph3">`ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">請注意，也適用於<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法，分別。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要寫入的 XML 資料，或結構描述和資料從<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要寫入的結構描述，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，但未實作<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">如果指定的內嵌結構描述，則內嵌結構描述用來擴充現有的關聯式結構之前載入的資料。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">如果有任何衝突 （例如，相同的資料行定義為不同的資料型別相同資料表中） 會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">如果未不指定任何內嵌結構描述，就會推斷，視需要透過關聯式結構擴充根據 XML 文件的結構。</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">如果無法透過推斷延伸架構才能公開的所有資料，會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>The <ph id="ph1">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph2">`DataColumn`</ph> or <ph id="ph3">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>不將 XML 項目關聯與其對應<ph id="ph2">`DataColumn`</ph>或<ph id="ph3">`DataTable`</ph>合法的 XML 字元，例如 ("_") 在序列化 xml 逸出。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>本身只逸出 XML 項目名稱中不合法的 XML 字元，並因此可以只使用相同。</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">當 XML 項目名稱中的合法字元會逸出時，處理時忽略此元素。</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>If the XML Schema for a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> includes a <ph id="ph2">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> to load the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">如果 XML 結構描述<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含<ph id="ph2">`targetNamespace`</ph>、 可能不會讀取資料，並呼叫時，您可能會遇到例外狀況<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>載入<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>xml 程式碼，包含非限定命名空間的項目。</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">若要讀取不合格的項目，設定<ph id="ph1">`elementFormDefault`</ph>等於"qualified"中的 XML 結構描述如下列範例所示。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>If the schema for your <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated">如果結構描述您<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含項目嘗試讀取到結構描述時，發生例外狀況的名稱相同，但不同的類型，請在相同的命名空間，<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>與<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>藉由指定<ph id="ph4">`XmlReadMode.ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果您使用.NET Framework 1.0 版，則不會發生這個例外狀況。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>The following example first creates a simple <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with one <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, two columns, and ten rows.</source>
          <target state="translated">下列範例會先建立簡單<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>與一個<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，兩個資料行和十個資料列。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> schema and data are written to disk by invoking the <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>結構描述和資料會寫入磁碟，然後叫用<ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>A second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is created and the <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method is used to fill it with schema and data.</source>
          <target state="translated">第二個<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>建立和<ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>方法用來填入結構描述和資料。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> is not set to <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> 並不是設定為 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>for reading and writing files.</source>
          <target state="translated">用於讀取和寫入檔案。</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> from which to read.</source>
          <target state="translated">要讀取的來源 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>，將 XML 結構描述和資料讀入 <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see langword="XmlReadMode" /&gt;</ph> used to read the data.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlReadMode" /&gt;</ph>，用來讀取資料。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>方法來讀取資料，或同時提供資料和結構描述<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>從 XML 文件，而<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法讀取的結構描述。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">若要讀取資料和結構描述，請使用其中一種<ph id="ph1">`ReadXML`</ph>包含的多載<ph id="ph2">`mode`</ph>參數，並將其值設定為<ph id="ph3">`ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">請注意，也適用於<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法，分別。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要寫入的 XML 資料，或結構描述和資料從<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要寫入的結構描述，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，但未實作<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">如果指定的內嵌結構描述，則內嵌結構描述用來擴充現有的關聯式結構之前載入的資料。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">如果有任何衝突 （例如，相同的資料行定義為不同的資料型別相同資料表中） 會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">如果未不指定任何內嵌結構描述，就會推斷，視需要透過關聯式結構擴充根據 XML 文件的結構。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">如果無法透過推斷延伸架構才能公開的所有資料，會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph2">`DataColumn`</ph> or <ph id="ph3">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>不將 XML 項目關聯與其對應<ph id="ph2">`DataColumn`</ph>或<ph id="ph3">`DataTable`</ph>合法的 XML 字元，例如 ("_") 在序列化 xml 逸出。</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>本身只逸出 XML 項目名稱中不合法的 XML 字元，並因此可以只使用相同。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">當 XML 項目名稱中的合法字元會逸出時，處理時忽略此元素。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>If the XML Schema for a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> includes a <ph id="ph2">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> to load the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">如果 XML 結構描述<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含<ph id="ph2">`targetNamespace`</ph>、 可能不會讀取資料，並呼叫時，您可能會遇到例外狀況<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>載入<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>xml 程式碼，包含非限定命名空間的項目。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">若要讀取不合格的項目，設定<ph id="ph1">`elementFormDefault`</ph>等於"qualified"中的 XML 結構描述如下列範例所示。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlTextReader?displayProperty=nameWithType&gt;</ph> inherits from <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlTextReader?displayProperty=nameWithType&gt;</ph> 繼承自 <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>If the schema for your <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated">如果結構描述您<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含項目嘗試讀取到結構描述時，發生例外狀況的名稱相同，但不同的類型，請在相同的命名空間，<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>與<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>藉由指定<ph id="ph4">`XmlReadMode.ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果您使用.NET Framework 1.0 版，則不會發生這個例外狀況。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>The following example first creates a simple <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with one <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, two columns, and ten rows.</source>
          <target state="translated">下列範例會先建立簡單<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>與一個<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，兩個資料行和十個資料列。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> schema and data are written to disk by invoking the <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>結構描述和資料會寫入磁碟，然後叫用<ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>A second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is created and the <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method is used to fill it with schema and data.</source>
          <target state="translated">第二個<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>建立和<ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>方法用來填入結構描述和資料。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> from which to read.</source>
          <target state="translated">要讀取的來源 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> values.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>，將 XML 結構描述和資料讀入 <ph id="ph3">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">&lt;see langword="XmlReadMode" /&gt;</ph> used to read the data.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlReadMode" /&gt;</ph>，用來讀取資料。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>方法來讀取資料，或同時提供資料和結構描述<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>從 XML 文件，而<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法讀取的結構描述。</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">若要讀取資料和結構描述，請使用其中一種<ph id="ph1">`ReadXML`</ph>包含的多載<ph id="ph2">`mode`</ph>參數，並將其值設定為<ph id="ph3">`ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>The same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">同樣適用於<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法，分別。</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要寫入的 XML 資料，或結構描述和資料從<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要寫入的結構描述，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>When you use <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> and you set <ph id="ph2">&lt;xref:System.Data.XmlReadMode&gt;</ph> to <ph id="ph3">`Diffgram`</ph>, the content of the target <ph id="ph4">`DataSet`</ph> and the original <ph id="ph5">`DataSet`</ph> may differ because of how the diffgram is generated and processed.</source>
          <target state="translated">當您使用<ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>和您設定<ph id="ph2">&lt;xref:System.Data.XmlReadMode&gt;</ph>至<ph id="ph3">`Diffgram`</ph>，目標內容<ph id="ph4">`DataSet`</ph>和原始<ph id="ph5">`DataSet`</ph>可能因為 diffgram 是產生和處理方式不同。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>For more information on diffgrams, see <bpt id="p1">[</bpt>DiffGrams<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/diffgrams.md)</ept>.</source>
          <target state="translated">如需有關 diffgram 的詳細資訊，請參閱<bpt id="p1">[</bpt>DiffGrams<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/diffgrams.md)</ept>。</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，但未實作<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">如果指定的內嵌結構描述，則內嵌結構描述用來擴充現有的關聯式結構之前載入的資料。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">如果有任何衝突 （例如，相同的資料行定義為不同的資料型別相同資料表中） 會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">如果未不指定任何內嵌結構描述，就會推斷，視需要透過關聯式結構擴充根據 XML 文件的結構。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">如果無法透過推斷延伸架構才能公開的所有資料，會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph2">`DataColumn`</ph> or <ph id="ph3">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>不將 XML 項目關聯與其對應<ph id="ph2">`DataColumn`</ph>或<ph id="ph3">`DataTable`</ph>合法的 XML 字元，例如 ("_") 在序列化 xml 逸出。</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>本身只逸出 XML 項目名稱中不合法的 XML 字元，並因此可以只使用相同。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">當 XML 項目名稱中的合法字元會逸出時，處理時忽略此元素。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>If the XML Schema for a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> includes <ph id="ph2">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> to load the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">如果 XML 結構描述<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含<ph id="ph2">`targetNamespace`</ph>、 可能不會讀取資料，並呼叫時，您可能會遇到例外狀況<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>載入<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>xml 程式碼，包含非限定命名空間的項目。</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">若要讀取不合格的項目，設定<ph id="ph1">`elementFormDefault`</ph>等於"qualified"中的 XML 結構描述如下列範例所示。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>If the schema for your <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated">如果結構描述您<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含項目嘗試讀取到結構描述時，發生例外狀況的名稱相同，但不同的類型，請在相同的命名空間，<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>與<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>藉由指定<ph id="ph4">`XmlReadMode.ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果您使用.NET Framework 1.0 版，則不會發生這個例外狀況。</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> from which to read.</source>
          <target state="translated">要讀取的來源 <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> values.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>，將 XML 結構描述和資料讀入 <ph id="ph3">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">&lt;see langword="XmlReadMode" /&gt;</ph> used to read the data.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlReadMode" /&gt;</ph>，用來讀取資料。</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>方法來讀取資料，或同時提供資料和結構描述<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>從 XML 文件，而<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法讀取的結構描述。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">若要讀取資料和結構描述，請使用其中一種<ph id="ph1">`ReadXML`</ph>包含的多載<ph id="ph2">`mode`</ph>參數，並將其值設定為<ph id="ph3">`ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">請注意，也適用於<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法，分別。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要寫入的 XML 資料，或結構描述和資料從<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要寫入的結構描述，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，但未實作<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">如果指定的內嵌結構描述，則內嵌結構描述用來擴充現有的關聯式結構之前載入的資料。</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">如果有任何衝突 （例如，相同的資料行定義為不同的資料型別相同資料表中） 會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">如果未不指定任何內嵌結構描述，就會推斷，視需要透過關聯式結構擴充根據 XML 文件的結構。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">如果無法透過推斷延伸架構才能公開的所有資料，會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph2">`DataColumn`</ph> or <ph id="ph3">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>不將 XML 項目關聯與其對應<ph id="ph2">`DataColumn`</ph>或<ph id="ph3">`DataTable`</ph>合法的 XML 字元，例如 ("_") 在序列化 xml 逸出。</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>本身只逸出 XML 項目名稱中不合法的 XML 字元，並因此可以只使用相同。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">當 XML 項目名稱中的合法字元會逸出時，處理時忽略此元素。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>If the XML Schema for a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> includes <ph id="ph2">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> to load the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">如果 XML 結構描述<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含<ph id="ph2">`targetNamespace`</ph>、 可能不會讀取資料，並呼叫時，您可能會遇到例外狀況<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>載入<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>xml 程式碼，包含非限定命名空間的項目。</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">若要讀取不合格的項目，設定<ph id="ph1">`elementFormDefault`</ph>等於"qualified"中的 XML 結構描述如下列範例所示。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>If the schema for your <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated">如果結構描述您<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含項目嘗試讀取到結構描述時，發生例外狀況的名稱相同，但不同的類型，請在相同的命名空間，<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>與<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>藉由指定<ph id="ph4">`XmlReadMode.ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果您使用.NET Framework 1.0 版，則不會發生這個例外狀況。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>The filename (including the path) from which to read.</source>
          <target state="translated">要讀取的檔案名稱 (包括路徑)。</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> values.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> using the specified file and <ph id="ph2">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>.</source>
          <target state="translated">使用指定的檔案和 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>，將 XML 結構描述和資料讀入 <ph id="ph2">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">&lt;see langword="XmlReadMode" /&gt;</ph> used to read the data.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlReadMode" /&gt;</ph>，用來讀取資料。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>方法來讀取資料，或同時提供資料和結構描述<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>從 XML 文件，而<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法讀取的結構描述。</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">若要讀取資料和結構描述，請使用其中一種<ph id="ph1">`ReadXML`</ph>包含的多載<ph id="ph2">`mode`</ph>參數，並將其值設定為<ph id="ph3">`ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">請注意，也適用於<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法，分別。</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要寫入的 XML 資料，或結構描述和資料從<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要寫入的結構描述，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，但未實作<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">如果指定的內嵌結構描述，則內嵌結構描述用來擴充現有的關聯式結構之前載入的資料。</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">如果有任何衝突 （例如，相同的資料行定義為不同的資料型別相同資料表中） 會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">如果未不指定任何內嵌結構描述，就會推斷，視需要透過關聯式結構擴充根據 XML 文件的結構。</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">如果無法透過推斷延伸架構才能公開的所有資料，會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph2">`DataColumn`</ph> or <ph id="ph3">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>不將 XML 項目關聯與其對應<ph id="ph2">`DataColumn`</ph>或<ph id="ph3">`DataTable`</ph>合法的 XML 字元，例如 ("_") 在序列化 xml 逸出。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>本身只逸出 XML 項目名稱中不合法的 XML 字元，並因此可以只使用相同。</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">當 XML 項目名稱中的合法字元會逸出時，處理時忽略此元素。</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>If the XML Schema for a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> includes a <ph id="ph2">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> to load the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">如果 XML 結構描述<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含<ph id="ph2">`targetNamespace`</ph>、 可能不會讀取資料，並呼叫時，您可能會遇到例外狀況<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>載入<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>xml 程式碼，包含非限定命名空間的項目。</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">若要讀取不合格的項目，設定<ph id="ph1">`elementFormDefault`</ph>等於"qualified"中的 XML 結構描述如下列範例所示。</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>If the schema for your <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated">如果結構描述您<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含項目嘗試讀取到結構描述時，發生例外狀況的名稱相同，但不同的類型，請在相同的命名空間，<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>與<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>藉由指定<ph id="ph4">`XmlReadMode.ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果您使用.NET Framework 1.0 版，則不會發生這個例外狀況。</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> is not set to <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> 並不是設定為 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>for reading and writing files.</source>
          <target state="translated">用於讀取和寫入檔案。</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> from which to read.</source>
          <target state="translated">要讀取的來源 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> values.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>，將 XML 結構描述和資料讀入 <ph id="ph3">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">&lt;see langword="XmlReadMode" /&gt;</ph> used to read the data.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlReadMode" /&gt;</ph>，用來讀取資料。</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>方法來讀取資料，或同時提供資料和結構描述<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>從 XML 文件，而<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法讀取的結構描述。</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">若要讀取資料和結構描述，請使用其中一種<ph id="ph1">`ReadXML`</ph>包含的多載<ph id="ph2">`mode`</ph>參數，並將其值設定為<ph id="ph3">`ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">請注意，也適用於<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法，分別。</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要寫入的 XML 資料，或結構描述和資料從<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要寫入的結構描述，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，但未實作<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">如果指定的內嵌結構描述，則內嵌結構描述用來擴充現有的關聯式結構之前載入的資料。</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">如果有任何衝突 （例如，相同的資料行定義為不同的資料型別相同資料表中） 會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">如果未不指定任何內嵌結構描述，就會推斷，視需要透過關聯式結構擴充根據 XML 文件的結構。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">如果無法透過推斷延伸架構才能公開的所有資料，會引發例外狀況。</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph2">`DataColumn`</ph> or <ph id="ph3">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>不將 XML 項目關聯與其對應<ph id="ph2">`DataColumn`</ph>或<ph id="ph3">`DataTable`</ph>合法的 XML 字元，例如 ("_") 在序列化 xml 逸出。</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>本身只逸出 XML 項目名稱中不合法的 XML 字元，並因此可以只使用相同。</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">當 XML 項目名稱中的合法字元會逸出時，處理時忽略此元素。</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>If the XML Schema for a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> includes a <ph id="ph2">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> to load the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">如果 XML 結構描述<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含<ph id="ph2">`targetNamespace`</ph>、 可能不會讀取資料，並呼叫時，您可能會遇到例外狀況<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>載入<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>xml 程式碼，包含非限定命名空間的項目。</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">若要讀取不合格的項目，設定<ph id="ph1">`elementFormDefault`</ph>等於"qualified"中的 XML 結構描述如下列範例所示。</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>If the schema for your <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated">如果結構描述您<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含項目嘗試讀取到結構描述時，發生例外狀況的名稱相同，但不同的類型，請在相同的命名空間，<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>與<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>藉由指定<ph id="ph4">`XmlReadMode.ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果您使用.NET Framework 1.0 版，則不會發生這個例外狀況。</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="T:System.Data.DataSet">
          <source>Reads an XML schema into the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">將 XML 結構描述讀入 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> from which to read.</source>
          <target state="translated">要讀取的來源 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
          <source>Reads the XML schema from the specified <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> into the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">從指定的 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>，將 XML 結構描述讀入 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method to create the schema for a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法建立的結構描述<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">結構描述包含資料表、 關聯和條件約束的定義。</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">若要寫入的 XML 文件結構描述，請使用<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 標準寫入 XML 結構描述。</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
          <source>Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">如果 msdata:DataType 和 xs: type 類型不相符，就會發生資料損毀。</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
          <source>No exception will be thrown.</source>
          <target state="translated">將會擲不回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method is generally invoked before invoking the <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method which is used to fill the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法一般叫用之前叫用<ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>方法用來填滿<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> class include <ph id="ph2">&lt;xref:System.IO.BufferedStream&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.MemoryStream&gt;</ph>, and <ph id="ph5">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">類別衍生自<ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>類別包含<ph id="ph2">&lt;xref:System.IO.BufferedStream&gt;</ph>， <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph>， <ph id="ph4">&lt;xref:System.IO.MemoryStream&gt;</ph>，和<ph id="ph5">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
          <source>If the schema for your <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains elements of the same name, but different type, in the same namespace, an exception is be thrown when you attempt to read the schema into the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>.</source>
          <target state="translated">如果結構描述您<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含元素的名稱相同，但相同的命名空間中的不同型別擲回例外狀況是當您嘗試讀取到結構描述<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>與<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果您使用.NET Framework 1.0 版，則不會發生這個例外狀況。</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> object to read an XML schema with, and invokes the <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method with the object.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph>物件讀取 XML 結構描述，並叫用<ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>與物件的方法。</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> from which to read.</source>
          <target state="translated">要讀取的來源 <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
          <source>Reads the XML schema from the specified <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> into the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">從指定的 <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>，將 XML 結構描述讀入 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method to create the schema for a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法建立的結構描述<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">結構描述包含資料表、 關聯和條件約束的定義。</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">若要寫入的 XML 文件結構描述，請使用<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 標準寫入 XML 結構描述。</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
          <source>Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">如果 msdata:DataType 和 xs: type 類型不相符，就會發生資料損毀。</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
          <source>No exception will be thrown.</source>
          <target state="translated">將會擲不回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method is generally invoked before invoking the <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method which is used to fill the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法一般叫用之前叫用<ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>方法用來填滿<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
          <source>Classes that inherit from the <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> class include the <ph id="ph2">&lt;xref:System.IO.StreamReader&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.StringReader&gt;</ph> classes.</source>
          <target state="translated">類別繼承自<ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph>類別包含<ph id="ph2">&lt;xref:System.IO.StreamReader&gt;</ph>和<ph id="ph3">&lt;xref:System.IO.StringReader&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
          <source>If the schema for your <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains elements of the same name, but different type, in the same namespace, an exception is be thrown when you attempt to read the schema into the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>.</source>
          <target state="translated">如果結構描述您<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含元素的名稱相同，但相同的命名空間中的不同型別擲回例外狀況是當您嘗試讀取到結構描述<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>與<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果您使用.NET Framework 1.0 版，則不會發生這個例外狀況。</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> object to read a schema with, and invokes the <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method with the object.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph>物件讀取結構描述，並叫用<ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>與物件的方法。</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXmlSchema(System.String)">
          <source>The file name (including the path) from which to read.</source>
          <target state="translated">要讀取的來源檔案名稱 (包括路徑)。</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXmlSchema(System.String)">
          <source>Reads the XML schema from the specified file into the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">從指定的檔案，將 XML 結構描述讀入 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method to create the schema for a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法建立的結構描述<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.String)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">結構描述包含資料表、 關聯和條件約束的定義。</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.String)">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">若要寫入的 XML 文件結構描述，請使用<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.String)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 標準寫入 XML 結構描述。</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.String)">
          <source>Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">如果 msdata:DataType 和 xs: type 類型不相符，就會發生資料損毀。</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.String)">
          <source>No exception will be thrown.</source>
          <target state="translated">將會擲不回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method is generally invoked before invoking the <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method which is used to fill the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法一般叫用之前叫用<ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>方法用來填滿<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.String)">
          <source>If the schema for your <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>.</source>
          <target state="translated">如果結構描述您<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含項目嘗試讀取到結構描述時，發生例外狀況的名稱相同，但不同的類型，請在相同的命名空間，<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>與<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.String)">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果您使用.NET Framework 1.0 版，則不會發生這個例外狀況。</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXmlSchema(System.String)">
          <source><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> is not set to <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> 並不是設定為 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.String)">
          <source>for reading and writing files.</source>
          <target state="translated">用於讀取和寫入檔案。</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> from which to read.</source>
          <target state="translated">要讀取的來源 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
          <source>Reads the XML schema from the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> into the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">從指定的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>，將 XML 結構描述讀入 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method to create the schema for a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法建立的結構描述<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">結構描述包含資料表、 關聯和條件約束的定義。</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 標準寫入 XML 結構描述。</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
          <source>Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">如果 msdata:DataType 和 xs: type 類型不相符，就會發生資料損毀。</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
          <source>No exception will be thrown.</source>
          <target state="translated">將會擲不回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method is generally invoked before invoking the <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method which is used to fill the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法一般叫用之前叫用<ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>方法用來填滿<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader?displayProperty=nameWithType&gt;</ph> class is abstract.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader?displayProperty=nameWithType&gt;</ph>類別是抽象的。</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
          <source>A class that inherits from the <ph id="ph1">`XmlReader`</ph> is the <ph id="ph2">&lt;xref:System.Xml.XmlTextReader?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated">類別繼承自<ph id="ph1">`XmlReader`</ph>是<ph id="ph2">&lt;xref:System.Xml.XmlTextReader?displayProperty=nameWithType&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
          <source>If the schema for your <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains elements of the same name, but different type, in the same namespace, an exception is be thrown when you attempt to read the schema into the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>.</source>
          <target state="translated">如果結構描述您<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含元素的名稱相同，但相同的命名空間中的不同型別擲回例外狀況是當您嘗試讀取到結構描述<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>與<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">如果您使用.NET Framework 1.0 版，則不會發生這個例外狀況。</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileStream?displayProperty=nameWithType&gt;</ph> object.</source>
          <target state="translated">下列範例會建立新<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>和<ph id="ph2">&lt;xref:System.IO.FileStream?displayProperty=nameWithType&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> object, created with a file path and file name, is used to create an <ph id="ph2">&lt;xref:System.Xml.XmlTextReader?displayProperty=nameWithType&gt;</ph> that is passed as an argument to the <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph>建立的檔案路徑與檔案名稱的物件用來建立<ph id="ph2">&lt;xref:System.Xml.XmlTextReader?displayProperty=nameWithType&gt;</ph>做為引數傳遞<ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)">
          <source>The specified XML reader.</source>
          <target state="translated">指定的 XML 讀取器。</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)">
          <source>Ignores attributes and returns an empty DataSet.</source>
          <target state="translated">忽略屬性並傳回空白資料集。</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.RejectChanges">
          <source>Rolls back all the changes made to the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> since it was created, or since the last time <ph id="ph2">&lt;see cref="M:System.Data.DataSet.AcceptChanges" /&gt;</ph> was called.</source>
          <target state="translated">復原從建立 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 物件或前一次呼叫 <ph id="ph2">&lt;see cref="M:System.Data.DataSet.AcceptChanges" /&gt;</ph> 以來，對該物件做的所有變更。</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.RejectChanges">
          <source>Invoke the <ph id="ph1">&lt;xref:System.Data.DataSet.RejectChanges%2A?displayProperty=nameWithType&gt;</ph> to call the <ph id="ph2">&lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=nameWithType&gt;</ph> method on all <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objects contained by the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">叫用<ph id="ph1">&lt;xref:System.Data.DataSet.RejectChanges%2A?displayProperty=nameWithType&gt;</ph>呼叫<ph id="ph2">&lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=nameWithType&gt;</ph>方法上所有<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>所包含之物件<ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.RejectChanges">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objects contained by the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> can each be set into edit mode by invoking the <ph id="ph3">&lt;xref:System.Data.DataRow.BeginEdit%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> 所包含之物件<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>可每個被設定進入編輯模式下叫用<ph id="ph3">&lt;xref:System.Data.DataRow.BeginEdit%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.RejectChanges">
          <source>After invoking the <ph id="ph1">&lt;xref:System.Data.DataRow.EndEdit%2A?displayProperty=nameWithType&gt;</ph> method, changes can be rejected by calling the <ph id="ph2">&lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=nameWithType&gt;</ph> on the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> to which the <ph id="ph4">&lt;xref:System.Data.DataRow&gt;</ph> objects belong.</source>
          <target state="translated">叫用後<ph id="ph1">&lt;xref:System.Data.DataRow.EndEdit%2A?displayProperty=nameWithType&gt;</ph>方法，可以藉由呼叫拒絕變更<ph id="ph2">&lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=nameWithType&gt;</ph>上<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>的<ph id="ph4">&lt;xref:System.Data.DataRow&gt;</ph>所屬的物件。</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.RejectChanges">
          <source>When the <ph id="ph1">&lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=nameWithType&gt;</ph> method is called, any rows still in edit-mode cancel their edits.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=nameWithType&gt;</ph>呼叫方法時，請編輯模式中的任何資料列取消編輯。</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.RejectChanges">
          <source>New rows are removed.</source>
          <target state="translated">新的資料列被移除。</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.RejectChanges">
          <source>Modified and deleted rows return back to their original state (<ph id="ph1">`DataRowState.Unchanged`</ph>).</source>
          <target state="translated">修改和刪除資料列會傳回至其原始狀態 (<ph id="ph1">`DataRowState.Unchanged`</ph>)。</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.RejectChanges">
          <source>AcceptChanges and RejectChanges only apply to <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> related changes (that is, <ph id="ph2">`Add`</ph>, <ph id="ph3">`Remove`</ph>, <ph id="ph4">`Delete`</ph>, and <ph id="ph5">`Modify`</ph>).</source>
          <target state="translated">AcceptChanges 和 RejectChanges 只會套用到<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>相關的變更 (亦即<ph id="ph2">`Add`</ph>， <ph id="ph3">`Remove`</ph>， <ph id="ph4">`Delete`</ph>，和<ph id="ph5">`Modify`</ph>)。</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.RejectChanges">
          <source>They are not applicable to schema or structural changes.</source>
          <target state="translated">它們並不適用於結構描述或結構化變更。</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.RejectChanges">
          <source>The following example shows a class derived from the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> class.</source>
          <target state="translated">下列範例示範衍生自類別<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.RejectChanges">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.RejectChanges%2A&gt;</ph> event is invoked from within a function.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.RejectChanges%2A&gt;</ph>事件會從叫用函式內。</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.Relations">
          <source>Get the collection of relations that link tables and allow navigation from parent tables to child tables.</source>
          <target state="translated">取得連結資料表並允許從父資料表到子資料表進行巡覽之關聯的集合。</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Relations">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRelationCollection" /&gt;</ph> that contains a collection of <ph id="ph2">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> objects.</source>
          <target state="translated">包含 <ph id="ph1">&lt;see cref="T:System.Data.DataRelationCollection" /&gt;</ph> 物件集合的 <ph id="ph2">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Relations">
          <source>An empty collection is returned if no <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> objects exist.</source>
          <target state="translated">如果沒有任何 <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> 物件存在，則會傳回空的集合。</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Relations">
          <source>The following example prints the column name of all child tables through the <ph id="ph1">&lt;xref:System.Data.DataSet.Relations%2A&gt;</ph> property.</source>
          <target state="translated">下列範例會列印到所有的子資料表的資料行名稱<ph id="ph1">&lt;xref:System.Data.DataSet.Relations%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.RemotingFormat">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Data.SerializationFormat" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> used during remoting.</source>
          <target state="translated">取得或設定遠端作業中使用之 <ph id="ph1">&lt;see cref="T:System.Data.SerializationFormat" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.RemotingFormat">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SerializationFormat" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SerializationFormat" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Reset">
          <source>Clears all tables and removes all relations, foreign constraints, and tables from the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">清除所有資料表，並從 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中移除所有關聯、外部條件約束和資料表。</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Reset">
          <source>Subclasses should override <ph id="ph1">&lt;see cref="M:System.Data.DataSet.Reset" /&gt;</ph> to restore a <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to its original state.</source>
          <target state="translated">子類別應該覆寫 <ph id="ph1">&lt;see cref="M:System.Data.DataSet.Reset" /&gt;</ph> 以還原 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 到它的原始狀態。</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.SchemaSerializationMode">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Data.SchemaSerializationMode" /&gt;</ph> for a <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">取得或設定 <ph id="ph1">&lt;see cref="T:System.Data.SchemaSerializationMode" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.SchemaSerializationMode">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Data.SchemaSerializationMode" /&gt;</ph> for a <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">取得或設定 <ph id="ph1">&lt;see cref="T:System.Data.SchemaSerializationMode" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.SchemaSerializationMode">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> serializes its schema and instance data by default in Web services and remoting scenarios.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> Web 服務和遠端處理案例中，預設序列化其結構描述和執行個體資料。</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.SchemaSerializationMode">
          <source>Setting the <ph id="ph1">&lt;xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;</ph> property of a typed <ph id="ph2">`DataSet`</ph> to <ph id="ph3">&lt;xref:System.Data.SchemaSerializationMode.ExcludeSchema&gt;</ph> causes schema information to be excluded from the serialization payload.</source>
          <target state="translated">設定<ph id="ph1">&lt;xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;</ph>的具類型的屬性<ph id="ph2">`DataSet`</ph>至<ph id="ph3">&lt;xref:System.Data.SchemaSerializationMode.ExcludeSchema&gt;</ph>會導致序列化裝載要排除的結構描述資訊。</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.SchemaSerializationMode">
          <source><ph id="ph1">&lt;xref:System.Data.SchemaSerializationMode.ExcludeSchema&gt;</ph> is supported only for a typed <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SchemaSerializationMode.ExcludeSchema&gt;</ph> 支援僅針對具型別的<ph id="ph2">`DataSet`</ph>。</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.SchemaSerializationMode">
          <source>For an un-typed <ph id="ph1">`DataSet`</ph> this property can only be set to <ph id="ph2">&lt;xref:System.Data.SchemaSerializationMode.IncludeSchema&gt;</ph>.</source>
          <target state="translated">針對不具型別的<ph id="ph1">`DataSet`</ph>這個屬性只能設定為<ph id="ph2">&lt;xref:System.Data.SchemaSerializationMode.IncludeSchema&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.SchemaSerializationMode">
          <source><ph id="ph1">&lt;xref:System.Data.SchemaSerializationMode.ExcludeSchema&gt;</ph> should only be used in cases where the schema information of the underlying typed <ph id="ph2">`DataTables`</ph>, <ph id="ph3">`DataRelations`</ph> and <ph id="ph4">`Constraints`</ph> has not been modified.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SchemaSerializationMode.ExcludeSchema&gt;</ph> 應該只用於在其中具類型的基礎結構描述資訊的情況下<ph id="ph2">`DataTables`</ph>，<ph id="ph3">`DataRelations`</ph>和<ph id="ph4">`Constraints`</ph>尚未修改。</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.SchemaSerializationMode">
          <source>If modifications have occurred, complete schema information should be serialized with <ph id="ph1">&lt;xref:System.Data.SchemaSerializationMode.IncludeSchema&gt;</ph>.</source>
          <target state="translated">如果需要修改應該以序列化發生、 完整的結構描述資訊<ph id="ph1">&lt;xref:System.Data.SchemaSerializationMode.IncludeSchema&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.SchemaSerializationMode">
          <source><ph id="ph1">&lt;xref:System.Data.SchemaSerializationMode.ExcludeSchema&gt;</ph> is supported in version 2.0 of the .NET Framework or later.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SchemaSerializationMode.ExcludeSchema&gt;</ph> 支援 2.0 版的.NET framework 或更新版本。</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.SchemaSerializationMode">
          <source>When <ph id="ph1">&lt;xref:System.Data.SchemaSerializationMode.ExcludeSchema&gt;</ph> is set, only the top level runtime properties present on the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> are serialized.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Data.SchemaSerializationMode.ExcludeSchema&gt;</ph>設定，只有最上層的層級執行階段屬性上有<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>會序列化。</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.SchemaSerializationMode">
          <source>In addition, they are serialized only if they happen to be different from the default values.</source>
          <target state="translated">此外，它們會序列化才發生不同的預設值。</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.SchemaSerializationMode">
          <source>None of the <ph id="ph1">`Tables`</ph>, <ph id="ph2">`Relations`</ph> or <ph id="ph3">`Constraints`</ph> are serialized.</source>
          <target state="translated">沒有任何<ph id="ph1">`Tables`</ph>，<ph id="ph2">`Relations`</ph>或<ph id="ph3">`Constraints`</ph>會序列化。</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.SchemaSerializationMode">
          <source>The serialized runtime properties include <ph id="ph1">&lt;xref:System.Data.DataSet.DataSetName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.DataSet.Namespace%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.DataSet.Prefix%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Data.DataSet.Locale%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Data.DataSet.CaseSensitive%2A&gt;</ph>.</source>
          <target state="translated">序列化的執行階段屬性包括<ph id="ph1">&lt;xref:System.Data.DataSet.DataSetName%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Data.DataSet.Namespace%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Data.DataSet.Prefix%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Data.DataSet.Locale%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph>，和<ph id="ph6">&lt;xref:System.Data.DataSet.CaseSensitive%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.SchemaSerializationMode">
          <source>These properties are serialized to make sure that overall runtime data integrity is preserved.</source>
          <target state="translated">這些屬性會序列化以確定會保留整體的執行階段資料的完整性。</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ShouldSerializeRelations">
          <source>Gets a value indicating whether <ph id="ph1">&lt;see cref="P:System.Data.DataSet.Relations" /&gt;</ph> property should be persisted.</source>
          <target state="translated">取得值，表示是否應該保存 <ph id="ph1">&lt;see cref="P:System.Data.DataSet.Relations" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ShouldSerializeRelations">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has been changed from its default; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果屬性值已經從其預設值變更，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ShouldSerializeRelations">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">您通常使用這個方法，如果您要建立的設計工具<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>，或建立您自己的控制項加入<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ShouldSerializeRelations">
          <source>The following examples show a class derived from the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> class.</source>
          <target state="translated">下列範例會示範衍生自類別<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ShouldSerializeRelations">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Reset%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.ShouldSerializeRelations%2A&gt;</ph> methods are invoked from within functions in the derived class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.Reset%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataSet.ShouldSerializeRelations%2A&gt;</ph>方法會從叫用在衍生類別中的函式內。</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ShouldSerializeTables">
          <source>Gets a value indicating whether <ph id="ph1">&lt;see cref="P:System.Data.DataSet.Tables" /&gt;</ph> property should be persisted.</source>
          <target state="translated">取得值，表示是否應該保存 <ph id="ph1">&lt;see cref="P:System.Data.DataSet.Tables" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ShouldSerializeTables">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has been changed from its default; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果屬性值已經從其預設值變更，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ShouldSerializeTables">
          <source>You typically use this method only if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">您通常使用這個方法，您可能想要建立的設計工具時，才<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>，或建立您自己的控制項加入<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ShouldSerializeTables">
          <source>The following example shows a class derived from the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> class.</source>
          <target state="translated">下列範例示範衍生自類別<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ShouldSerializeTables">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.ShouldSerializeTables%2A&gt;</ph> method is called from within functions in the derived class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.ShouldSerializeTables%2A&gt;</ph>衍生類別中的函式中呼叫方法。</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.Site">
          <source>Gets or sets an <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">取得或設定 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Site">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Site">
          <source>Sites bind a <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> to a <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> and enable communication between them, as well as provide a way for the container to manage its components.</source>
          <target state="translated">站台繫結<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>至<ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph>和啟用它們之間的通訊，以及提供容器以管理其元件的方法。</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="P:System.ComponentModel.IListSource.ContainsListCollection" /&gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱 <ph id="ph1">&lt;see cref="P:System.ComponentModel.IListSource.ContainsListCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="P:System.ComponentModel.IListSource.ContainsListCollection" /&gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱 <ph id="ph1">&lt;see cref="P:System.ComponentModel.IListSource.ContainsListCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.ComponentModel.IListSource.GetList" /&gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱 <ph id="ph1">&lt;see cref="M:System.ComponentModel.IListSource.GetList" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.ComponentModel.IListSource.GetList" /&gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱 <ph id="ph1">&lt;see cref="M:System.ComponentModel.IListSource.GetList" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /&gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱 <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /&gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱 <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱 <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱 <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.Tables">
          <source>Gets the collection of tables contained in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">取得包含在 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 中的資料表的集合。</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Tables">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTableCollection" /&gt;</ph> contained by this <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableCollection" /&gt;</ph>，這個 <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 所包含的集合。</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Tables">
          <source>An empty collection is returned if no <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects exist.</source>
          <target state="translated">如果沒有任何 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 物件存在，則會傳回空的集合。</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Tables">
          <source>To add tables to the collection, use <ph id="ph1">&lt;xref:System.Data.DataTableCollection.Add%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.DataTableCollection&gt;</ph>.</source>
          <target state="translated">若要將資料表加入至集合，使用<ph id="ph1">&lt;xref:System.Data.DataTableCollection.Add%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Data.DataTableCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Tables">
          <source>To remove tables, use the <ph id="ph1">&lt;xref:System.Data.DataTableCollection.Remove%2A&gt;</ph> method.</source>
          <target state="translated">若要移除資料表，請使用<ph id="ph1">&lt;xref:System.Data.DataTableCollection.Remove%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Tables">
          <source>The following example returns the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object's <ph id="ph2">&lt;xref:System.Data.DataTableCollection&gt;</ph>, and prints the columns and rows in each table.</source>
          <target state="translated">下列範例會傳回<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>物件的<ph id="ph2">&lt;xref:System.Data.DataTableCollection&gt;</ph>，並列印每個資料表中的資料列與資料行。</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" uid="T:System.Data.DataSet">
          <source>Writes XML data, and optionally the schema, from the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">從 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 寫入 XML 資料，並選擇性寫入結構描述。</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object used to write to a file.</source>
          <target state="translated">用來寫入檔案的 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
          <source>Writes the current data for the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>，寫入 <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 的目前資料。</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">`WriteXml`</ph>方法提供說明如何撰寫，不論是資料或資料和結構描述從<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>XML 文件，而<ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法會寫入的結構描述。</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">`mode`</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">寫入資料和結構描述，請使用其中一個多載，其中包含<ph id="ph1">`mode`</ph>參數，並將其值設定為<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">請注意，也適用於<ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法，分別。</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">讀取 XML 資料，或結構描述和資料<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要讀取的結構描述，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，但未實作<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.IO.FileStream?displayProperty=nameWithType&gt;</ph> object.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.IO.FileStream?displayProperty=nameWithType&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
          <source>The object is then used with the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method to write an XML document.</source>
          <target state="translated">物件然後搭配<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>方法來撰寫 XML 文件。</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object with which to write.</source>
          <target state="translated">用來寫入的 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
          <source>Writes the current data for the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>，寫入 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 的目前資料。</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">`WriteXml`</ph>方法提供說明如何撰寫，不論是資料或資料和結構描述從<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>XML 文件，而<ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法會寫入的結構描述。</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">`mode`</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">寫入資料和結構描述，請使用其中一個多載，其中包含<ph id="ph1">`mode`</ph>參數，並將其值設定為<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">請注意，也適用於<ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法，分別。</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">讀取 XML 資料，或結構描述和資料<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要讀取的結構描述，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，但未實作<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.String)">
          <source>The file name (including the path) to which to write.</source>
          <target state="translated">要寫入的目的檔案名稱 (包括路徑)。</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.String)">
          <source>Writes the current data for the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to the specified file.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 的目前資料寫入指定的檔案。</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String)">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">`WriteXml`</ph>方法提供說明如何撰寫，不論是資料或資料和結構描述從<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>XML 文件，而<ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法會寫入的結構描述。</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">`mode`</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">寫入資料和結構描述，請使用其中一個多載，其中包含<ph id="ph1">`mode`</ph>參數，並將其值設定為<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">請注意，也適用於<ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法，分別。</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">讀取 XML 資料，或結構描述和資料<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要讀取的結構描述，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，但未實作<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.String)">
          <source><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> is not set to <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> 並不是設定為 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String)">
          <source>for reading and writing files.</source>
          <target state="translated">用於讀取和寫入檔案。</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> with which to write.</source>
          <target state="translated">要用來寫入的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
          <source>Writes the current data for the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 的目前資料寫入指定的 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">`WriteXml`</ph>方法提供說明如何撰寫，不論是資料或資料和結構描述從<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>XML 文件，而<ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法會寫入的結構描述。</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">`mode`</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">寫入資料和結構描述，請使用其中一個多載，其中包含<ph id="ph1">`mode`</ph>參數，並將其值設定為<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">請注意，也適用於<ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法，分別。</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">讀取 XML 資料，或結構描述和資料<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要讀取的結構描述，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，但未實作<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object used to write to a file.</source>
          <target state="translated">用來寫入檔案的 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>，寫入 <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> 的目前資料，並選擇性寫入結構描述。</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">若要寫入結構描述，請設定 <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> 參數的值為 <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">`WriteXml`</ph>方法提供說明如何撰寫，不論是資料或資料和結構描述從<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>XML 文件，而<ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法會寫入的結構描述。</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>To write both data and schema, set the <ph id="ph1">`mode`</ph> parameter to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要撰寫資料和結構描述，設定<ph id="ph1">`mode`</ph>參數<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">請注意，也適用於<ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法，分別。</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">讀取 XML 資料，或結構描述和資料<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要讀取的結構描述，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，但未實作<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object used to write the document.</source>
          <target state="translated">用來寫入文件的 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>，寫入 <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> 的目前資料，並選擇性寫入結構描述。</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">若要寫入結構描述，請設定 <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> 參數的值為 <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">`WriteXml`</ph>方法提供說明如何撰寫，不論是資料或資料和結構描述從<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>XML 文件，而<ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法會寫入的結構描述。</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>To write both data and schema, set the <ph id="ph1">`mode`</ph> parameter to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要撰寫資料和結構描述，設定<ph id="ph1">`mode`</ph>參數<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">請注意，也適用於<ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法，分別。</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">讀取 XML 資料，或結構描述和資料<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要讀取的結構描述，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，但未實作<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>The following example first creates a simple <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with one <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, two columns, and ten rows.</source>
          <target state="translated">下列範例會先建立簡單<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>與一個<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，兩個資料行和十個資料列。</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> schema and data are written to disk by invoking the <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>結構描述和資料會寫入磁碟，然後叫用<ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>A second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is created and the <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method is used to fill it with schema and data.</source>
          <target state="translated">第二個<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>建立和<ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>方法用來填入結構描述和資料。</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>The file name (including the path) to which to write.</source>
          <target state="translated">要寫入的目的檔案名稱 (包括路徑)。</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to the specified file using the specified <ph id="ph2">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>，寫入 <ph id="ph2">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> 的目前資料 (並選擇性寫入結構描述) 至指定的檔案。</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">若要寫入結構描述，請設定 <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> 參數的值為 <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">`WriteXml`</ph>方法提供說明如何撰寫，不論是資料或資料和結構描述從<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>XML 文件，而<ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法會寫入的結構描述。</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>To write both data and schema, set the <ph id="ph1">`mode`</ph> parameter to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要撰寫資料和結構描述，設定<ph id="ph1">`mode`</ph>參數<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">請注意，也適用於<ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法，分別。</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">讀取 XML 資料，或結構描述和資料<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要讀取的結構描述，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，但未實作<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method to write an XML document.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>方法來撰寫 XML 文件。</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> is not set to <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> 並不是設定為 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>for reading and writing files.</source>
          <target state="translated">用於讀取和寫入檔案。</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> with which to write.</source>
          <target state="translated">要用來寫入的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated">其中一個 <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>，寫入 <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> 的目前資料，並選擇性寫入結構描述。</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">若要寫入結構描述，請設定 <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> 參數的值為 <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">`WriteXml`</ph>方法提供說明如何撰寫，不論是資料或資料和結構描述從<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>XML 文件，而<ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法會寫入的結構描述。</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>To write both data and schema, set the <ph id="ph1">`mode`</ph> parameter to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要撰寫資料和結構描述，設定<ph id="ph1">`mode`</ph>參數<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">請注意，也適用於<ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>方法，分別。</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">讀取 XML 資料，或結構描述和資料<ph id="ph1">`DataSet`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要讀取的結構描述，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>會擲回的資料行類型<ph id="ph2">`DataRow`</ph>正在讀取或寫入實作<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，但未實作<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.IO.FileStream?displayProperty=nameWithType&gt;</ph> object that is used to create a new <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter&gt;</ph>.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.IO.FileStream?displayProperty=nameWithType&gt;</ph>物件，用來建立新<ph id="ph2">&lt;xref:System.Xml.XmlTextWriter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> object is used with the <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method to write an XML document.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph>物件搭配<ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>方法來撰寫 XML 文件。</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" uid="T:System.Data.DataSet">
          <source>Writes the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> structure as an XML schema.</source>
          <target state="translated">寫入 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 結構做為 XML 結構描述。</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object used to write to a file.</source>
          <target state="translated">用來寫入檔案的 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
          <source>Writes the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> structure as an XML schema to the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 結構做為 XML 結構描述寫入指定的 <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> to an XML document.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法來寫入的結構描述<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>XML 文件。</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">結構描述包含資料表、 關聯和條件約束的定義。</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">若要寫入的 XML 文件結構描述，請使用<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 標準寫入 XML 結構描述。</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">若要將資料寫入 XML 文件中，使用<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> class include <ph id="ph2">&lt;xref:System.IO.BufferedStream&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.MemoryStream&gt;</ph>, and <ph id="ph5">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">類別衍生自<ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>類別包含<ph id="ph2">&lt;xref:System.IO.BufferedStream&gt;</ph>， <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph>， <ph id="ph4">&lt;xref:System.IO.MemoryStream&gt;</ph>，和<ph id="ph5">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> object that is passed to the <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method to write the schema to disk.</source>
          <target state="translated">下列範例會建立新<ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph>物件傳遞至<ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>寫入磁碟的結構描述的方法。</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object with which to write.</source>
          <target state="translated">用來寫入的 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
          <source>Writes the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> structure as an XML schema to the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 結構做為 XML 結構描述寫入指定的 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> to an XML document.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法來寫入的結構描述<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>XML 文件。</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">結構描述包含資料表、 關聯和條件約束的定義。</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">若要寫入的 XML 文件結構描述，請使用<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 標準寫入 XML 結構描述。</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">若要將資料寫入 XML 文件中，使用<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
          <source>Classes the derive from the <ph id="ph1">&lt;xref:System.IO.TextWriter?displayProperty=nameWithType&gt;</ph> class include the <ph id="ph2">&lt;xref:System.Web.HttpWriter?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.CodeDom.Compiler.IndentedTextWriter?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.IO.StreamWriter?displayProperty=nameWithType&gt;</ph>, and <ph id="ph6">&lt;xref:System.IO.StringWriter?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">類別和從其中衍生<ph id="ph1">&lt;xref:System.IO.TextWriter?displayProperty=nameWithType&gt;</ph>類別包含<ph id="ph2">&lt;xref:System.Web.HttpWriter?displayProperty=nameWithType&gt;</ph>， <ph id="ph3">&lt;xref:System.CodeDom.Compiler.IndentedTextWriter?displayProperty=nameWithType&gt;</ph>， <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType&gt;</ph>， <ph id="ph5">&lt;xref:System.IO.StreamWriter?displayProperty=nameWithType&gt;</ph>，和<ph id="ph6">&lt;xref:System.IO.StringWriter?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Text.StringBuilder?displayProperty=nameWithType&gt;</ph> object to that is used to create a new <ph id="ph2">&lt;xref:System.IO.StringWriter?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">下列範例會建立<ph id="ph1">&lt;xref:System.Text.StringBuilder?displayProperty=nameWithType&gt;</ph>的物件用來建立新<ph id="ph2">&lt;xref:System.IO.StringWriter?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;xref:System.IO.StringWriter&gt;</ph> is passed to the <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method, and the resulting string is printed to the console window.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.StringWriter&gt;</ph>傳遞至<ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法，而且產生的字串會列印到主控台視窗。</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.String)">
          <source>The file name (including the path) to which to write.</source>
          <target state="translated">要寫入的目的檔案名稱 (包括路徑)。</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.String)">
          <source>Writes the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> structure as an XML schema to a file.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 結構做為 XML 結構描述寫入檔案。</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> to an XML document.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法來寫入的結構描述<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>XML 文件。</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.String)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">結構描述包含資料表、 關聯和條件約束的定義。</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.String)">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">若要寫入的 XML 文件結構描述，請使用<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.String)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 標準寫入 XML 結構描述。</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.String)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">若要將資料寫入 XML 文件中，使用<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.String)">
          <source><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> is not set to <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> 並不是設定為 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.String)">
          <source>for reading and writing files.</source>
          <target state="translated">用於讀取和寫入檔案。</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> to write to.</source>
          <target state="translated">要寫入的目標 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>Writes the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> structure as an XML schema to an <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 結構做為 XML 結構描述寫入 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> to an XML document.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法來寫入的結構描述<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>XML 文件。</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">結構描述包含資料表、 關聯和條件約束的定義。</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">若要寫入的 XML 文件結構描述，請使用<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 標準寫入 XML 結構描述。</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">若要將資料寫入 XML 文件中，使用<ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>One class that inherits from the <ph id="ph1">&lt;xref:System.Xml.XmlWriter?displayProperty=nameWithType&gt;</ph> class is the <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> class.</source>
          <target state="translated">繼承自一個類別<ph id="ph1">&lt;xref:System.Xml.XmlWriter?displayProperty=nameWithType&gt;</ph>類別是<ph id="ph2">&lt;xref:System.Xml.XmlTextWriter&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.IO.FileStream?displayProperty=nameWithType&gt;</ph> object with the specified path.</source>
          <target state="translated">下列範例會建立新<ph id="ph1">&lt;xref:System.IO.FileStream?displayProperty=nameWithType&gt;</ph>物件使用指定的路徑。</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> object is used to create an <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph>物件用來建立<ph id="ph2">&lt;xref:System.Xml.XmlTextWriter&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method is then invoked with the <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> object to write the schema to the disk.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>然後叫用方法<ph id="ph2">&lt;xref:System.Xml.XmlTextWriter&gt;</ph>寫入磁碟的結構描述的物件。</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object to write to.</source>
          <target state="translated">要寫入的目標 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})">
          <source>A delegate used to convert <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to string.</source>
          <target state="translated">用於將 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 轉換成字串的委派。</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})">
          <source>Writes the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> structure as an XML schema to the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 結構做為 XML 結構描述寫入指定的 <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object to write to.</source>
          <target state="translated">要寫入的目標 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})">
          <source>A delegate used to convert <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to string.</source>
          <target state="translated">用於將 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 轉換成字串的委派。</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})">
          <source>Writes the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> structure as an XML schema to the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 結構當做 XML 結構描述寫入至指定的 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})">
          <source>The name of the file to write to.</source>
          <target state="translated">要寫入的檔案名稱。</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})">
          <source>A delegate used to convert <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to string.</source>
          <target state="translated">用於將 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 轉換成字串的委派。</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})">
          <source>Writes the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> structure as an XML schema to a file.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 結構做為 XML 結構描述寫入檔案。</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object to write to.</source>
          <target state="translated">要寫入的目標 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})">
          <source>A delegate used to convert <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to string.</source>
          <target state="translated">用於將 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 轉換成字串的委派。</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})">
          <source>Writes the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> structure as an XML schema to the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 結構當做 XML 結構描述寫入至指定的 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>