<Type Name="DataRow" FullName="System.Data.DataRow">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fabdfdf54d23254420539e87d08a2eb95a1e8a27" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56762881" /></Metadata><TypeSignature Language="C#" Value="public class DataRow" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataRow extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRow" />
  <TypeSignature Language="VB.NET" Value="Public Class DataRow" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataRow" />
  <TypeSignature Language="F#" Value="type DataRow = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 <see cref="T:System.Data.DataTable" /> 中的資料列。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataRow>並<xref:System.Data.DataColumn>物件為主要元件<xref:System.Data.DataTable>。 使用<xref:System.Data.DataRow>物件及其屬性與方法，以擷取和評估; 以及插入、 刪除和更新中的值<xref:System.Data.DataTable>。 <xref:System.Data.DataRowCollection>代表的實際<xref:System.Data.DataRow>中的物件<xref:System.Data.DataTable>，而<xref:System.Data.DataColumnCollection>包含<xref:System.Data.DataColumn>描述的結構描述物件的<xref:System.Data.DataTable>。 使用多載<xref:System.Data.DataRow.Item%2A>屬性來傳回或設定值<xref:System.Data.DataColumn>。  
  
 使用<xref:System.Data.DataRow.HasVersion%2A>並<xref:System.Data.DataRow.IsNull%2A>屬性，以判斷狀態的特定資料列的值，而<xref:System.Data.DataRow.RowState*>屬性來決定相對於其父資料列的狀態<xref:System.Data.DataTable>。  
  
 若要建立新<xref:System.Data.DataRow>，使用<xref:System.Data.DataTable.NewRow%2A>方法<xref:System.Data.DataTable>物件。 之後建立新<xref:System.Data.DataRow>，使用<xref:System.Data.DataRowCollection.Add%2A>方法來加入新<xref:System.Data.DataRow>至<xref:System.Data.DataRowCollection>。 最後，呼叫<xref:System.Data.DataRow.AcceptChanges%2A>方法的<xref:System.Data.DataTable>供確認新增的物件。 如需有關將資料加入至<xref:System.Data.DataTable>，請參閱 <<c2> [ 將資料加入至 DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md)。  
  
 您可以刪除<xref:System.Data.DataRow>從<xref:System.Data.DataRowCollection>藉由呼叫<xref:System.Data.DataRowCollection.Remove%2A>方法<xref:System.Data.DataRowCollection>，或藉由呼叫<xref:System.Data.DataRow.Delete%2A>方法<xref:System.Data.DataRow>物件。 <xref:System.Data.DataRowCollection.Remove%2A>方法會移除集合中的資料列。 相反地，<xref:System.Data.DataRow.Delete%2A>標記<xref:System.Data.DataRow>移除。 當您呼叫時，就會發生真正的移除作業<xref:System.Data.DataRow.AcceptChanges%2A>方法。 藉由呼叫<xref:System.Data.DataRow.Delete%2A>，您可以透過程式設計方式檢查哪一個資料列會標示為待移除之前會實際刪除它們。 如需詳細資訊，請參閱 <<c0> [ 刪除 DataRow](~/docs/framework/data/adonet/dataset-datatable-dataview/datarow-deletion.md)。  
  
   
  
## Examples  
 下列範例會建立新<xref:System.Data.DataRow>藉由呼叫<xref:System.Data.DataTable.NewRow%2A>方法<xref:System.Data.DataTable>物件。  
  
 [!code-csharp[Classic WebData DataRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>此類型是安全多執行緒的讀取作業。 您必須同步處理任何寫入作業。</threadsafe>
    <altmember cref="M:System.Data.DataRow.AcceptChanges" />
    <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
    <altmember cref="T:System.Data.DataColumnCollection" />
    <altmember cref="T:System.Data.DataColumn" />
    <altmember cref="T:System.Data.DataRowView" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
    <altmember cref="M:System.Data.DataRow.IsNull(System.Int32)" />
    <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
    <altmember cref="T:System.Data.DataRowCollection" />
    <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">在 ADO.NET 中使用資料集</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal DataRow (System.Data.DataRowBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Data.DataRowBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (builder As DataRowBuilder)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; DataRow(System::Data::DataRowBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="new System.Data.DataRow : System.Data.DataRowBuilder -&gt; System.Data.DataRow" Usage="new System.Data.DataRow builder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Data.DataRowBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">產生器</param>
        <summary>將新的 DataRow 執行個體初始化。 從產生器建構資料列。 僅供內部使用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChanges">
      <MemberSignature Language="C#" Value="public void AcceptChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AcceptChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.AcceptChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AcceptChanges();" />
      <MemberSignature Language="F#" Value="member this.AcceptChanges : unit -&gt; unit" Usage="dataRow.AcceptChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>認可自前一次呼叫 <see cref="M:System.Data.DataRow.AcceptChanges" /> 以來，對這個資料列所做的所有變更。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當叫用<xref:System.Data.DataRow.AcceptChanges%2A>，則<xref:System.Data.DataRow.EndEdit%2A>隱含地呼叫方法來結束任何編輯。 如果<xref:System.Data.DataRow.RowState*>的資料列已加入或修改<xref:System.Data.DataRow.RowState*>會變成未變更。 如果<xref:System.Data.DataRow.RowState*>已刪除，會移除資料列。  
  
 如需詳細資訊，請參閱 <xref:System.Data.DataRow.BeginEdit%2A> 方法。  
  
 <xref:System.Data.DataTable>類別也有<xref:System.Data.DataTable.AcceptChanges%2A>方法，這會影響到整份資料表所做的變更。 如需詳細資訊和程式碼範例示範如何接受或拒絕個別的資料列的變更，請參閱[AcceptChanges 和 RejectChanges](~/docs/framework/data/adonet/dataset-datatable-dataview/acceptchanges-and-rejectchanges.md)。  
  
   
  
## Examples  
 下列範例會先建立新<xref:System.Data.DataTable>包含一個資料行，然後建立單一<xref:System.Data.DataRow>。 作為<xref:System.Data.DataRow>是建立、 新增、 修改和刪除，其<xref:System.Data.DataRow.RowState*>列印。  
  
 [!code-csharp[Classic WebData DataRow.AcceptChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.AcceptChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">資料列不屬於資料表。</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">在 ADO.NET 中使用資料集</related>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="dataRow.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在 <see cref="T:System.Data.DataRow" /> 物件上開始編輯作業。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Data.DataRow.BeginEdit%2A>方法將<xref:System.Data.DataRow>進入編輯模式。 在此模式中，事件會暫時停用，讓使用者對多個資料列中的變更，而不觸發驗證規則。 比方說，如果您必須確定資料行的總金額的值等於借方的值，而且信用額度的資料列中的資料行，您可以將每個資料列放置於編輯模式，若要暫停的資料列的值驗證，直到使用者嘗試認可的值。  
  
 <xref:System.Data.DataRow.BeginEdit%2A>當使用者變更的資料繫結控制項; 值隱含地呼叫方法<xref:System.Data.DataRow.EndEdit%2A>方法會隱含呼叫，當您叫用<xref:System.Data.DataTable.AcceptChanges%2A>方法<xref:System.Data.DataTable>物件。 在此編輯模式時，<xref:System.Data.DataRow>儲存的原始和新表示法提議的值。 因此，只要<xref:System.Data.DataRow.EndEdit%2A>尚未呼叫方法，您可以擷取的原始或建議的版本並傳遞`DataRowVersion.Original`或`DataRowVersion.Proposed`如`version`參數<xref:System.Data.DataRow.Item%2A>屬性。 您也可以藉由叫用來取消任何編輯在此時<xref:System.Data.DataRow.CancelEdit%2A>方法。  
  
 若要查看的資料列是否包含的原始或建議的值，請呼叫<xref:System.Data.DataRow.HasVersion%2A>方法。  
  
> [!NOTE]
>  <xref:System.Data.DataRow.BeginEdit%2A>方法會暫時停止<xref:System.Data.DataTable.RowChanging>事件，但`delete`作業則否。  
  
   
  
## Examples  
 此範例會建立簡單<xref:System.Data.DataTable>與其中一個<xref:System.Data.DataColumn>到五部<xref:System.Data.DataRow>物件，和<xref:System.Data.UniqueConstraint>。 A<xref:System.Data.DataTable.RowChanged>事件處理常式也會加入資料列的值正在變更時進行監視。 叫用後<xref:System.Data.DataRow.BeginEdit%2A>上現有的資料列的條件約束和事件會暫時停用，並列印的原始和建議值。 <xref:System.Data.DataRow.BeginEdit%2A>會再次叫用來將兩個資料列設定為相同的值。 當<xref:System.Data.DataRow.EndEdit%2A>呼叫時，<xref:System.Data.UniqueConstraint>在相同的值會強制執行。  
  
 [!code-csharp[Classic WebData DataRow.BeginEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.BeginEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">在 <see cref="E:System.Data.DataTable.RowChanging" /> 事件中呼叫該方法。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">在刪除的資料列上呼叫該方法。</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">在 ADO.NET 中使用資料集</related>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; unit" Usage="dataRow.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取消資料列上目前的編輯。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需詳細資訊，請參閱 <xref:System.Data.DataRow.BeginEdit%2A> 方法。  
  
   
  
## Examples  
 下列範例會編輯的最後一個資料列中的一個資料行值<xref:System.Windows.Forms.DataGrid>控制項。 此範例會使用<xref:System.Data.DataRow.BeginEdit%2A>， <xref:System.Data.DataRow.EndEdit%2A>，來編輯資料行的值，並認可變更資料列的方法。  
  
 [!code-csharp[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">在 <see cref="E:System.Data.DataTable.RowChanging" /> 事件中呼叫該方法。</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">在 ADO.NET 中使用資料集</related>
      </Docs>
    </Member>
    <Member MemberName="ClearErrors">
      <MemberSignature Language="C#" Value="public void ClearErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearErrors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.ClearErrors" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearErrors ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearErrors();" />
      <MemberSignature Language="F#" Value="member this.ClearErrors : unit -&gt; unit" Usage="dataRow.ClearErrors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>清除資料列的錯誤。 這包括 <see cref="P:System.Data.DataRow.RowError" /> 和以 <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" /> 設定的錯誤。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Data.DataRow.SetColumnError%2A>和<xref:System.Data.DataRow.GetColumnError%2A>設定，並傳回錯誤的個別資料行。  
  
 設定<xref:System.Data.DataRow.RowError%2A>屬性將設定套用到整個資料列的錯誤。  
  
 若要判斷資料行集合是否有任何錯誤，請使用<xref:System.Data.DataRow.HasErrors%2A>方法。 因此，您可以使用<xref:System.Data.DataRow.GetColumnsInError%2A>方法來擷取錯誤的所有資料行。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Data.DataRow.HasErrors%2A>尋找錯誤。 如果資料列的錯誤，<xref:System.Data.DataRow.GetColumnsInError%2A>方法會傳回發生錯誤，它可以解決的資料行的陣列。 <xref:System.Data.DataRow.ClearErrors%2A>方法接著會呼叫清除所有錯誤。  
  
 [!code-csharp[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">在 ADO.NET 中使用資料集</related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; unit" Usage="dataRow.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>刪除 <see cref="T:System.Data.DataRow" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Data.DataRow.RowState*>新增的資料列時，<xref:System.Data.DataRow.RowState*>會變成`Detached`當您呼叫時，將會移除資料表中的資料列和<xref:System.Data.DataRow.AcceptChanges%2A>。  
  
 <xref:System.Data.DataRow.RowState*>會變成`Deleted`使用之後<xref:System.Data.DataRow.Delete%2A>上的現有方法<xref:System.Data.DataRow>。 它會保持`Deleted`直到您呼叫<xref:System.Data.DataRow.AcceptChanges%2A>。 此時，<xref:System.Data.DataRow>從資料表中移除。  
  
 <xref:System.Data.DataRow.Delete%2A> 您不應該呼叫在 foreach 迴圈中逐一查看時<xref:System.Data.DataRowCollection>物件。 <xref:System.Data.DataRow.Delete%2A> 修改集合的狀態。  
  
 可以還原已刪除的資料列，叫用<xref:System.Data.DataRow.RejectChanges%2A>。  
  
> [!NOTE]
>  <xref:System.Data.DataRow.BeginEdit%2A>方法會暫時停止<xref:System.Data.DataTable.RowChanging>事件，但刪除作業則否。  
  
   
  
## Examples  
 下列範例會建立簡單<xref:System.Data.DataTable>兩個資料行與 10 個資料列。 刪除數個後<xref:System.Data.DataRow>的項目<xref:System.Data.DataRow.Delete%2A>方法，其中一個資料列藉由叫用還原<xref:System.Data.DataRow.RejectChanges%2A>。  
  
 [!code-csharp[Classic WebData DataRow.Delete Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Delete Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException"><see cref="T:System.Data.DataRow" /> 已經刪除。</exception>
        <altmember cref="T:System.Data.DataRowState" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">在 ADO.NET 中使用資料集</related>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.EndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndEdit();" />
      <MemberSignature Language="F#" Value="member this.EndEdit : unit -&gt; unit" Usage="dataRow.EndEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>結束資料列上發生的編輯。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果發生例外狀況中，當您設定屬性時，會產生例外狀況<xref:System.Data.DataTable.RowChanging>事件。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Data.DataRow.EndEdit%2A>方法以結束編輯<xref:System.Data.DataRow>若驗證函式會傳回 true 值。  
  
 [!code-csharp[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">在 <see cref="E:System.Data.DataTable.RowChanging" /> 事件中呼叫該方法。</exception>
        <exception cref="T:System.Data.ConstraintException">編輯中斷條件約束。</exception>
        <exception cref="T:System.Data.ReadOnlyException">資料列屬於資料表，而且編輯嘗試變更唯讀資料行的值。</exception>
        <exception cref="T:System.Data.NoNullAllowedException">編輯嘗試將 Null 值置於 <see cref="P:System.Data.DataColumn.AllowDBNull" /> 為 False 的資料行。</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">在 ADO.NET 中使用資料集</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildRows">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得 <see cref="T:System.Data.DataRow" /> 的子資料列。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relation As DataRelation) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : System.Data.DataRelation -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">要使用的 <see cref="T:System.Data.DataRelation" />。</param>
        <summary>使用指定的 <see cref="T:System.Data.DataRow" />，取得這個 <see cref="T:System.Data.DataRelation" /> 的子資料列。</summary>
        <returns><see cref="T:System.Data.DataRow" /> 物件的陣列，或是長度為零的陣列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTable>也包含的集合<xref:System.Data.DataRelation>所傳回的物件<xref:System.Data.DataTable.ChildRelations%2A>屬性。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Data.DataRow.GetChildRows%2A>來傳回的子<xref:System.Data.DataRow>物件的每一個子系<xref:System.Data.DataRelation>在<xref:System.Data.DataTable>。 然後會列印每個資料列中的資料行的值。  
  
 [!code-csharp[Classic WebData DataRow.GetChildRows2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetChildRows2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">關聯和資料列不屬於相同資料表。</exception>
        <exception cref="T:System.ArgumentNullException">relation 為 <see langword="null" />。</exception>
        <exception cref="T:System.Data.RowNotInTableException">資料列不屬於資料表。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">資料列沒有這個版本的資料。</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">在 ADO.NET 中使用資料集</related>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relationName As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : string -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName">要使用的 <see cref="P:System.Data.DataRelation.RelationName" /> 的 <see cref="T:System.Data.DataRelation" />。</param>
        <summary>使用 <see cref="T:System.Data.DataRow" /> 的指定 <see cref="P:System.Data.DataRelation.RelationName" />，取得 <see cref="T:System.Data.DataRelation" /> 的子資料列。</summary>
        <returns><see cref="T:System.Data.DataRow" /> 物件的陣列，或是長度為零的陣列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTable>也包含的集合<xref:System.Data.DataRelation>所傳回的物件<xref:System.Data.DataTable.ChildRelations%2A>屬性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">關聯和資料列不屬於相同資料表。</exception>
        <exception cref="T:System.Data.RowNotInTableException">資料列不屬於資料表。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relation As DataRelation, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">要使用的 <see cref="T:System.Data.DataRelation" />。</param>
        <param name="version">其中一個 <see cref="T:System.Data.DataRowVersion" /> 值，指定要取得的資料版本。 可能的值為 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</param>
        <summary>使用指定的 <see cref="T:System.Data.DataRow" /> 和 <see cref="T:System.Data.DataRelation" />，取得 <see cref="T:System.Data.DataRowVersion" /> 的子資料列。</summary>
        <returns><see cref="T:System.Data.DataRow" /> 物件的陣列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTable>也包含的集合<xref:System.Data.DataRelation>所傳回的物件<xref:System.Data.DataTable.ChildRelations%2A>屬性。  
  
 使用<xref:System.Data.DataRow.HasVersion%2A>屬性來判斷是否<xref:System.Data.DataRowVersion>您想要存在。  
  
 如果<xref:System.Data.DataRowVersion.Default>指定時，所使用的版本而定<xref:System.Data.DataRow.RowState*>所在的資料列`GetChildRows`叫用。 如果在其上的資料列`GetChildRows`叫用具有`RowState`的`Modified`， `New`，或`Unchanged`，則<xref:System.Data.DataRowVersion.Current>的資料列版本用於擷取與在其目前的版本中的值相符的相關的子資料列。 如果在其上的資料列`GetChildRows`叫用具有`RowState`的`Deleted`，則<xref:System.Data.DataRowVersion.Original>的資料列版本用於擷取與原始版本的值相符的相關的子資料列。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Data.DataRow.GetChildRows%2A>來傳回的子<xref:System.Data.DataRow>物件的每一個子系<xref:System.Data.DataRelation>在<xref:System.Data.DataTable>。 然後列印的資料列中指定的版本與每個資料行的值。  
  
 [!code-csharp[Classic WebData DataRow.GetChildRows3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetChildRows3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">關聯和資料列不屬於相同資料表。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.Data.RowNotInTableException">資料列不屬於資料表。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">資料列沒有要求的 <see cref="T:System.Data.DataRowVersion" />。</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataRowVersion" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">在 ADO.NET 中使用資料集</related>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relationName As String, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : string * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName">要使用的 <see cref="P:System.Data.DataRelation.RelationName" /> 的 <see cref="T:System.Data.DataRelation" />。</param>
        <param name="version">其中一個 <see cref="T:System.Data.DataRowVersion" /> 值，指定要取得的資料版本。 可能的值為 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</param>
        <summary>使用 <see cref="T:System.Data.DataRow" /> 的指定 <see cref="P:System.Data.DataRelation.RelationName" /> 和 <see cref="T:System.Data.DataRelation" />，取得 <see cref="T:System.Data.DataRowVersion" /> 的子資料列。</summary>
        <returns><see cref="T:System.Data.DataRow" /> 物件的陣列，或是長度為零的陣列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTable>也包含的集合<xref:System.Data.DataRelation>所傳回的物件<xref:System.Data.DataTable.ChildRelations%2A>屬性。  
  
 使用<xref:System.Data.DataRow.HasVersion%2A>屬性來判斷是否<xref:System.Data.DataRowVersion>您想要存在。  
  
 如果<xref:System.Data.DataRowVersion.Default>指定時，所使用的版本而定<xref:System.Data.DataRow.RowState*>所在的資料列`GetChildRows`叫用。 如果在其上的資料列`GetChildRows`叫用具有`RowState`的`Modified`， `New`，或`Unchanged`，則<xref:System.Data.DataRowVersion.Current>的資料列版本用於擷取與在其目前的版本中的值相符的相關的子資料列。 如果在其上的資料列`GetChildRows`叫用具有`RowState`的`Deleted`，則<xref:System.Data.DataRowVersion.Original>的資料列版本用於擷取與原始版本的值相符的相關的子資料列。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">關聯和資料列不屬於相同資料表。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.Data.RowNotInTableException">資料列不屬於資料表。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">資料列沒有要求的 <see cref="T:System.Data.DataRowVersion" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetColumnError">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得資料行的錯誤描述。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (column As DataColumn) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : System.Data.DataColumn -&gt; string" Usage="dataRow.GetColumnError column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column"><see cref="T:System.Data.DataColumn" />。</param>
        <summary>取得指定 <see cref="T:System.Data.DataColumn" /> 的錯誤描述。</summary>
        <returns>錯誤描述的文字。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Data.DataRow.SetColumnError%2A>方法來設定資料行的錯誤。  
  
 若要判斷資料行集合是否有任何錯誤，請使用<xref:System.Data.DataRow.HasErrors%2A>方法。 因此，您可以使用<xref:System.Data.DataRow.GetColumnsInError%2A>方法來擷取錯誤的所有資料行。 或者，<xref:System.Data.DataTable.GetErrors%2A>方法的<xref:System.Data.DataTable>傳回發生錯誤的所有資料列。  
  
 若要清除的資料行集合的所有錯誤，請使用<xref:System.Data.DataRow.ClearErrors%2A>方法。  
  
   
  
## Examples  
 下列範例會設定為指定的錯誤描述<xref:System.Data.DataRow>。  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (columnIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : int -&gt; string" Usage="dataRow.GetColumnError columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">資料行的以零起始的索引。</param>
        <summary>取得索引指定的資料行的錯誤描述。</summary>
        <returns>錯誤描述的文字。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Data.DataRow.SetColumnError%2A>方法來設定資料行的錯誤。  
  
 若要判斷資料行集合是否有任何錯誤，請使用<xref:System.Data.DataRow.HasErrors%2A>方法。 因此，您可以使用<xref:System.Data.DataRow.GetColumnsInError%2A>方法來擷取錯誤的所有資料行。  
  
 若要清除的資料行集合的所有錯誤，請使用<xref:System.Data.DataRow.ClearErrors%2A>方法。  
  
   
  
## Examples  
 下列範例會設定為指定的錯誤描述<xref:System.Data.DataRow>。  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><paramref name="columnIndex" /> 引數超出範圍。</exception>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (columnName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : string -&gt; string" Usage="dataRow.GetColumnError columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">資料行名稱。</param>
        <summary>取得名稱指定的資料行的錯誤描述。</summary>
        <returns>錯誤描述的文字。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Data.DataRow.SetColumnError%2A>方法來設定資料行的錯誤。  
  
 若要判斷資料行集合是否有任何錯誤，請使用<xref:System.Data.DataRow.HasErrors%2A>方法。 因此，您可以使用<xref:System.Data.DataRow.GetColumnsInError%2A>方法來擷取錯誤的所有資料行。  
  
 若要清除的資料行集合的所有錯誤，請使用<xref:System.Data.DataRow.ClearErrors%2A>方法。  
  
   
  
## Examples  
 下列範例會設定為指定的錯誤描述<xref:System.Data.DataRow>。  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnsInError">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn[] GetColumnsInError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataColumn[] GetColumnsInError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnsInError" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnsInError () As DataColumn()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataColumn ^&gt; ^ GetColumnsInError();" />
      <MemberSignature Language="F#" Value="member this.GetColumnsInError : unit -&gt; System.Data.DataColumn[]" Usage="dataRow.GetColumnsInError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得具有錯誤的資料行陣列。</summary>
        <returns>包含錯誤的 <see cref="T:System.Data.DataColumn" /> 物件陣列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataRow.GetColumnsInError%2A>可讓您減少的<xref:System.Data.DataColumn>必須藉由傳回只會有錯誤的資料行才處理錯誤的物件。 錯誤可以設定為個別的資料行與<xref:System.Data.DataRow.SetColumnError%2A>方法。 若要進一步減少處理的數目，請查看<xref:System.Data.DataRow.HasErrors%2A>的屬性<xref:System.Data.DataRow>類別，以判斷是否<xref:System.Data.DataRow>叫用之前有錯誤<xref:System.Data.DataRow.GetColumnsInError%2A>。  
  
 使用<xref:System.Data.DataRow.ClearErrors%2A>方法，以清除資料列上的所有錯誤。 這包括 <xref:System.Data.DataRow.RowError%2A>。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Data.DataRow.HasErrors%2A>尋找錯誤。 如果資料列的錯誤，<xref:System.Data.DataRow.GetColumnsInError%2A>方法會傳回發生錯誤，它可以解決的資料行的陣列。 <xref:System.Data.DataRow.ClearErrors%2A>方法接著會呼叫清除所有錯誤。  
  
 [!code-csharp[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParentRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得 <see cref="T:System.Data.DataRow" /> 的父資料列。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relation As DataRelation) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : System.Data.DataRelation -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">要使用的 <see cref="T:System.Data.DataRelation" />。</param>
        <summary>使用指定的 <see cref="T:System.Data.DataRow" />，取得 <see cref="T:System.Data.DataRelation" /> 的父資料列。</summary>
        <returns>目前資料列的父 <see cref="T:System.Data.DataRow" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在  <xref:System.Data.DataSet>，所有父系的集合<xref:System.Data.DataRelation>物件的資料集由<xref:System.Data.DataRow.GetParentRows%2A>方法。  
  
 <xref:System.Data.DataTable>也包含的集合<xref:System.Data.DataRelation>所傳回的物件<xref:System.Data.DataTable.ParentRelations%2A>屬性。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Data.DataRow.GetParentRow%2A>來傳回的子<xref:System.Data.DataRow>物件的每一個子系<xref:System.Data.DataRelation>在<xref:System.Data.DataTable>。 然後會列印每個資料列中的資料行的值。  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> 不屬於 <see cref="T:System.Data.DataTable" />。  
  
-或-

資料列為 <see langword="null" />。</exception>
        <exception cref="T:System.Data.DataException">子資料行有多個父代。</exception>
        <exception cref="T:System.Data.InvalidConstraintException">這個資料列不屬於 <see cref="T:System.Data.DataRelation" /> 物件的子資料表。</exception>
        <exception cref="T:System.Data.RowNotInTableException">資料列不屬於資料表。</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relationName As String) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : string -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName"><see cref="P:System.Data.DataRelation.RelationName" /> 的 <see cref="T:System.Data.DataRelation" />。</param>
        <summary>使用 <see cref="T:System.Data.DataRow" /> 的指定 <see cref="P:System.Data.DataRelation.RelationName" />，取得 <see cref="T:System.Data.DataRelation" /> 的父資料列。</summary>
        <returns>目前資料列的父 <see cref="T:System.Data.DataRow" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在  <xref:System.Data.DataSet>，所有父系的集合<xref:System.Data.DataRelation>物件的資料集由<xref:System.Data.DataRow.GetParentRows%2A>方法。  
  
 <xref:System.Data.DataTable>也包含的集合<xref:System.Data.DataRelation>所傳回的物件<xref:System.Data.DataTable.ParentRelations%2A>屬性。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Data.DataRow.GetParentRow%2A>若要從每個父資料列，每個列印值<xref:System.Data.DataRow>在<xref:System.Data.DataTable>。  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">關聯和資料列不屬於相同資料表。</exception>
        <exception cref="T:System.Data.DataException">子資料行有多個父代。</exception>
        <exception cref="T:System.Data.RowNotInTableException">資料列不屬於資料表。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relation As DataRelation, version As DataRowVersion) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">要使用的 <see cref="T:System.Data.DataRelation" />。</param>
        <param name="version">其中一個 <see cref="T:System.Data.DataRowVersion" /> 值，指定要取得的資料版本。</param>
        <summary>使用指定的 <see cref="T:System.Data.DataRow" /> 和 <see cref="T:System.Data.DataRelation" />，取得 <see cref="T:System.Data.DataRowVersion" /> 的父資料列。</summary>
        <returns>目前資料列的父 <see cref="T:System.Data.DataRow" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在  <xref:System.Data.DataSet>，所有父系的集合<xref:System.Data.DataRelation>物件的資料集由<xref:System.Data.DataRow.GetParentRows%2A>方法。  
  
 <xref:System.Data.DataTable>也包含的集合<xref:System.Data.DataRelation>所傳回的物件<xref:System.Data.DataTable.ParentRelations%2A>屬性。  
  
 使用<xref:System.Data.DataRow.HasVersion%2A>屬性來判斷是否<xref:System.Data.DataRowVersion>您想要存在。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Data.DataRow.GetParentRow%2A>來傳回的子<xref:System.Data.DataRow>物件的每一個子系<xref:System.Data.DataRelation>在<xref:System.Data.DataTable>。 然後會列印每個資料列中的資料行的值。  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">資料列為 <see langword="null" />。  
  
-或-

<paramref name="relation" /> 不屬於這個資料表的父關聯。</exception>
        <exception cref="T:System.Data.DataException">子資料行有多個父代。</exception>
        <exception cref="T:System.Data.InvalidConstraintException">關聯的子資料表不是資料列所屬的資料表。</exception>
        <exception cref="T:System.Data.RowNotInTableException">資料列不屬於資料表。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">資料列沒有這個版本的資料。</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataRowVersion" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relationName As String, version As DataRowVersion) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : string * System.Data.DataRowVersion -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName"><see cref="P:System.Data.DataRelation.RelationName" /> 的 <see cref="T:System.Data.DataRelation" />。</param>
        <param name="version">其中一個 <see cref="T:System.Data.DataRowVersion" /> 值。</param>
        <summary>使用 <see cref="T:System.Data.DataRow" /> 的指定 <see cref="P:System.Data.DataRelation.RelationName" /> 和 <see cref="T:System.Data.DataRelation" />，取得 <see cref="T:System.Data.DataRowVersion" /> 的父資料列。</summary>
        <returns>目前資料列的父 <see cref="T:System.Data.DataRow" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在  <xref:System.Data.DataSet>，所有父系的集合<xref:System.Data.DataRelation>物件的資料集由<xref:System.Data.DataRow.GetParentRows%2A>方法。  
  
 <xref:System.Data.DataTable>也包含的集合<xref:System.Data.DataRelation>所傳回的物件<xref:System.Data.DataTable.ParentRelations%2A>屬性。  
  
 使用<xref:System.Data.DataRow.HasVersion%2A>屬性來判斷是否<xref:System.Data.DataRowVersion>您想要存在。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Data.DataRow.GetParentRow%2A>若要從每個父資料列，每個列印值<xref:System.Data.DataRow>在<xref:System.Data.DataTable>。  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">關聯和資料列不屬於相同資料表。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.Data.DataException">子資料行有多個父代。</exception>
        <exception cref="T:System.Data.RowNotInTableException">資料列不屬於資料表。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">資料列沒有要求的 <see cref="T:System.Data.DataRowVersion" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParentRows">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得 <see cref="T:System.Data.DataRow" /> 的父資料列。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relation As DataRelation) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : System.Data.DataRelation -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">要使用的 <see cref="T:System.Data.DataRelation" />。</param>
        <summary>使用指定的 <see cref="T:System.Data.DataRow" />，取得 <see cref="T:System.Data.DataRelation" /> 的父資料列。</summary>
        <returns><see cref="T:System.Data.DataRow" /> 物件的陣列，或是長度為零的陣列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在  <xref:System.Data.DataSet>，所有父系的集合<xref:System.Data.DataRelation>物件的資料集由<xref:System.Data.DataRow.GetParentRows%2A>方法。  
  
 <xref:System.Data.DataTable>也包含的集合<xref:System.Data.DataRelation>所傳回的物件<xref:System.Data.DataTable.ParentRelations%2A>屬性。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Data.DataRow.GetParentRows%2A>來傳回的子<xref:System.Data.DataRow>物件的每一個子系<xref:System.Data.DataRelation>在<xref:System.Data.DataTable>。 然後會列印每個資料列中的資料行的值。  
  
 [!code-vb[Classic WebData DataRow.GetParentRows2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Data.DataRelation" /> 不屬於這個資料列的 <see cref="T:System.Data.DataSet" />。</exception>
        <exception cref="T:System.ArgumentNullException">資料列為 <see langword="null" />。</exception>
        <exception cref="T:System.Data.InvalidConstraintException">關聯的子資料表不是資料列所屬的資料表。</exception>
        <exception cref="T:System.Data.RowNotInTableException">資料列不屬於 <see cref="T:System.Data.DataTable" />。</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relationName As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : string -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName"><see cref="P:System.Data.DataRelation.RelationName" /> 的 <see cref="T:System.Data.DataRelation" />。</param>
        <summary>使用 <see cref="T:System.Data.DataRow" /> 的指定 <see cref="P:System.Data.DataRelation.RelationName" />，取得 <see cref="T:System.Data.DataRelation" /> 的父資料列。</summary>
        <returns><see cref="T:System.Data.DataRow" /> 物件的陣列，或是長度為零的陣列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在  <xref:System.Data.DataSet>，所有父系的集合<xref:System.Data.DataRelation>物件的資料集由<xref:System.Data.DataRow.GetParentRows%2A>方法。  
  
 <xref:System.Data.DataTable>也包含的集合<xref:System.Data.DataRelation>所傳回的物件<xref:System.Data.DataTable.ParentRelations%2A>屬性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">關聯和資料列不屬於相同資料表。</exception>
        <exception cref="T:System.Data.RowNotInTableException">資料列不屬於資料表。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relation As DataRelation, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">要使用的 <see cref="T:System.Data.DataRelation" />。</param>
        <param name="version">其中一個 <see cref="T:System.Data.DataRowVersion" /> 值，指定要取得的資料版本。</param>
        <summary>使用指定的 <see cref="T:System.Data.DataRow" /> 和 <see cref="T:System.Data.DataRelation" />，取得 <see cref="T:System.Data.DataRowVersion" /> 的父資料列。</summary>
        <returns><see cref="T:System.Data.DataRow" /> 物件的陣列，或是長度為零的陣列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在  <xref:System.Data.DataSet>，所有父系的集合<xref:System.Data.DataRelation>物件的資料集由<xref:System.Data.DataRow.GetParentRows%2A>方法。  
  
 <xref:System.Data.DataTable>也包含的集合<xref:System.Data.DataRelation>所傳回的物件<xref:System.Data.DataTable.ParentRelations%2A>屬性。  
  
 使用<xref:System.Data.DataRow.HasVersion%2A>屬性來判斷是否<xref:System.Data.DataRowVersion>您想要存在。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Data.DataRow.GetParentRows%2A>來傳回的子<xref:System.Data.DataRow>物件的每一個子系<xref:System.Data.DataRelation>在<xref:System.Data.DataTable>。 然後會列印每個資料列中的資料行的值。  
  
 [!code-vb[Classic WebData DataRow.GetParentRows3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="T:System.Data.DataRelation" /> 不屬於這個資料列的 <see cref="T:System.Data.DataSet" />。</exception>
        <exception cref="T:System.ArgumentNullException">資料列為 <see langword="null" />。</exception>
        <exception cref="T:System.Data.InvalidConstraintException">關聯的子資料表不是資料列所屬的資料表。</exception>
        <exception cref="T:System.Data.RowNotInTableException">資料列不屬於 <see cref="T:System.Data.DataTable" />。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">資料列沒有要求的 <see cref="T:System.Data.DataRowVersion" />。</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relationName As String, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : string * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName"><see cref="P:System.Data.DataRelation.RelationName" /> 的 <see cref="T:System.Data.DataRelation" />。</param>
        <param name="version">其中一個 <see cref="T:System.Data.DataRowVersion" /> 值，指定要取得的資料版本。 可能的值為 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</param>
        <summary>使用 <see cref="T:System.Data.DataRow" /> 的指定 <see cref="P:System.Data.DataRelation.RelationName" /> 和 <see cref="T:System.Data.DataRelation" />，取得 <see cref="T:System.Data.DataRowVersion" /> 的父資料列。</summary>
        <returns><see cref="T:System.Data.DataRow" /> 物件的陣列，或是長度為零的陣列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在  <xref:System.Data.DataSet>，所有父系的集合<xref:System.Data.DataRelation>物件的資料集由<xref:System.Data.DataRow.GetParentRows%2A>方法。  
  
 <xref:System.Data.DataTable>也包含的集合<xref:System.Data.DataRelation>所傳回的物件<xref:System.Data.DataTable.ParentRelations%2A>屬性。  
  
 使用<xref:System.Data.DataRow.HasVersion%2A>屬性來判斷是否<xref:System.Data.DataRowVersion>您想要存在。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">關聯和資料列不屬於相同資料表。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.Data.RowNotInTableException">資料列不屬於資料表。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">資料列沒有要求的 <see cref="T:System.Data.DataRowVersion" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="HasErrors">
      <MemberSignature Language="C#" Value="public bool HasErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.HasErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasErrors { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasErrors : bool" Usage="System.Data.DataRow.HasErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出資料列中是否有錯誤。</summary>
        <value>如果資料列含有錯誤，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HasErrors` 會傳回`true`如果有的話<xref:System.Data.DataColumn>物件的資料列中包含錯誤，或如果<xref:System.Data.DataRow.RowError%2A>屬性<xref:System.Data.DataRow>不是空的字串。  
  
 驗證資料時，您可以設定錯誤的資料列中的任何資料行上。 這類的資料行中顯示時<xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>控制項，來通知使用者該資料行是錯誤的紅色驚嘆號標示。  
  
 使用<xref:System.Data.DataRow.SetColumnError%2A>任何資料行上設定錯誤。  
  
 使用<xref:System.Data.DataRow.GetColumnError%2A>和`GetColumnsInError`方法來傳回資料行，但發生錯誤。  
  
 <xref:System.Data.DataRow.ClearErrors%2A>方法會清除所有資料列的錯誤。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Data.DataRow.HasErrors%2A>尋找錯誤。 如果資料列的錯誤，<xref:System.Data.DataRow.GetColumnsInError%2A>方法會傳回發生錯誤，它可以解決的資料行的陣列。 <xref:System.Data.DataRow.ClearErrors%2A>方法接著會呼叫清除所有錯誤。  
  
 [!code-csharp[Classic WebData DataRow.HasErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.HasErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasVersion">
      <MemberSignature Language="C#" Value="public bool HasVersion (System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasVersion(valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasVersion (version As DataRowVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasVersion(System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.HasVersion : System.Data.DataRowVersion -&gt; bool" Usage="dataRow.HasVersion version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="version">其中一個 <see cref="T:System.Data.DataRowVersion" /> 值，指定資料列的版本。</param>
        <summary>取得值，指出是否有指定的版本。</summary>
        <returns>如果版本存在，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需詳細資訊，請參閱 <xref:System.Data.DataRow.BeginEdit%2A> 方法。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Data.DataRow.HasVersion%2A>方法，以判斷資料行的目前值和建議的值都相同。 如果是的話，則會取消編輯。 否則，<xref:System.Data.DataRow.AcceptChanges%2A>呼叫方法來結束編輯。  
  
 [!code-vb[Classic WebData DataRow.HasVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsNull">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得值，指出指定的資料行是否包含 Null 值。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (column As DataColumn) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.IsNull : System.Data.DataColumn -&gt; bool" Usage="dataRow.IsNull column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column"><see cref="T:System.Data.DataColumn" />。</param>
        <summary>取得值，指出指定的 <see cref="T:System.Data.DataColumn" /> 是否含有 Null 值。</summary>
        <returns>如果資料行包含 Null 值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會列印每個資料列的每個資料表中的每個資料行<xref:System.Data.DataSet>。 如果資料列設定為 null 的值，不會列印值。  
  
 [!code-vb[Classic WebData DataRow.IsNull2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="column" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.Data.RowNotInTableException">資料列不屬於資料表。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (columnIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.IsNull : int -&gt; bool" Usage="dataRow.IsNull columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">資料行的以零起始的索引。</param>
        <summary>取得值，指出指定之索引處的資料行是否包含 Null 值。</summary>
        <returns>如果資料行包含 Null 值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例的資料行的值變更為 null 的值，並接著會使用<xref:System.Data.DataRow.IsNull%2A>方法，以判斷值是否為 null。  
  
 [!code-vb[Classic WebData DataRow.IsNull Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">無資料行對應至 <paramref name="columnIndex" /> 指定的索引。</exception>
        <exception cref="T:System.Data.RowNotInTableException">資料列不屬於資料表。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (columnName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="member this.IsNull : string -&gt; bool" Usage="dataRow.IsNull columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">資料行名稱。</param>
        <summary>取得值，指出具名資料行是否包含 Null 值。</summary>
        <returns>如果資料行包含 Null 值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例的資料行的值變更為 null 的值，並接著會使用<xref:System.Data.DataRow.IsNull%2A>方法，以判斷值是否為 null。  
  
 [!code-vb[Classic WebData DataRow.IsNull1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">找不到 <paramref name="columnName" /> 指定的資料行。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="columnName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.Data.RowNotInTableException">資料列不屬於資料表。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(class System.Data.DataColumn column, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (column As DataColumn, version As DataRowVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::Data::DataColumn ^ column, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.IsNull : System.Data.DataColumn * System.Data.DataRowVersion -&gt; bool" Usage="dataRow.IsNull (column, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column"><see cref="T:System.Data.DataColumn" />。</param>
        <param name="version">其中一個 <see cref="T:System.Data.DataRowVersion" /> 值，指定資料列的版本。 可能的值為 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</param>
        <summary>取得值，指出指定的 <see cref="T:System.Data.DataColumn" /> 和 <see cref="T:System.Data.DataRowVersion" /> 是否包含 Null 值。</summary>
        <returns>如果資料行包含 Null 值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="column" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.Data.RowNotInTableException">資料列不屬於資料表。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">資料列沒有要求的 <paramref name="version" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得或設定儲存於指定資料行的資料。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Data.DataColumn)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(column As DataColumn) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Data::DataColumn ^] { System::Object ^ get(System::Data::DataColumn ^ column); void set(System::Data::DataColumn ^ column, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Data.DataColumn) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">包含資料的 <see cref="T:System.Data.DataColumn" />。</param>
        <summary>取得或設定儲存於指定的 <see cref="T:System.Data.DataColumn" /> 中的資料。</summary>
        <value><see cref="T:System.Object" />，包含資料。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果發生例外狀況中，當您設定屬性時，會產生例外狀況<xref:System.Data.DataTable.ColumnChanging>事件。  
  
 如果這是立即編輯時，請參閱<xref:System.Data.DataRow.EndEdit%2A>可以產生的例外狀況。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Data.DataRow.Item%2A>屬性來取得和設定特定的資料行索引的值。 第一個範例中的使用者按一下任何資料列中取得的第一個資料行值<xref:System.Windows.Forms.DataGrid>控制項。 第二個設定值，這個值做為引數傳遞至方法。  
  
 [!code-vb[Classic WebData DataRow.this2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">資料行不屬於這個資料表。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="column" /> 為 null。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">嘗試在刪除的資料列上設定值。</exception>
        <exception cref="T:System.InvalidCastException">數值和資料行的資料型別不相符。</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnIndex As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int columnIndex); void set(int columnIndex, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">資料行的以零起始的索引。</param>
        <summary>取得或設定儲存於索引指定的資料行中的資料。</summary>
        <value><see cref="T:System.Object" />，包含資料。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果發生例外狀況中，當您設定屬性時，會產生例外狀況<xref:System.Data.DataTable.ColumnChanging>事件。  
  
 如果這是編輯時，請參閱<xref:System.Data.DataRow.EndEdit%2A>可以產生的例外狀況。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Data.DataRow.Item%2A>屬性來取得和設定特定的資料行索引的值。 第一個範例中的使用者按一下任何資料列中取得的第一個資料行值<xref:System.Windows.Forms.DataGrid>控制項。  
  
 [!code-csharp[Classic WebData DataRow.this Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">嘗試在刪除的資料列上設定值時發生。</exception>
        <exception cref="T:System.IndexOutOfRangeException"><paramref name="columnIndex" /> 引數超出範圍。</exception>
        <exception cref="T:System.InvalidCastException">設定了值而新值的 <see cref="T:System.Type" /> 與 <see cref="P:System.Data.DataColumn.DataType" /> 不相符時發生。</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ columnName); void set(System::String ^ columnName, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">資料行名稱。</param>
        <summary>取得或設定儲存於名稱所指定之資料行的資料。</summary>
        <value><see cref="T:System.Object" />，包含資料。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果發生例外狀況中，當您設定屬性時，會產生例外狀況<xref:System.Data.DataTable.ColumnChanging>事件。  
  
 如果這是立即編輯時，請參閱<xref:System.Data.DataRow.EndEdit%2A>可以產生的例外狀況。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Data.DataRow.Item%2A>屬性來取得和設定特定的資料行索引的值。 第一個範例中的使用者按一下任何資料列中取得的第一個資料行值<xref:System.Windows.Forms.DataGrid>控制項。 第二個設定值，這個值做為引數傳遞至方法。  
  
 [!code-csharp[Classic WebData DataRow.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">找不到 <paramref name="columnName" /> 指定的資料行。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">嘗試在刪除的資料列上設定值時發生。</exception>
        <exception cref="T:System.InvalidCastException">當設定值而其 <see cref="T:System.Type" /> 與 <see cref="P:System.Data.DataColumn.DataType" /> 不相符時發生。</exception>
        <exception cref="T:System.Data.NoNullAllowedException">發生於您嘗試將 null 值插入至 <see cref="P:System.Data.DataColumn.AllowDBNull" /> 設定為 <see langword="false" /> 的資料行時。</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Data.DataColumn, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(column As DataColumn, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Data::DataColumn ^, System::Data::DataRowVersion] { System::Object ^ get(System::Data::DataColumn ^ column, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Data.DataColumn * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column"><see cref="T:System.Data.DataColumn" />，其中包含資料行的相關資訊。</param>
        <param name="version">其中一個 <see cref="T:System.Data.DataRowVersion" /> 值，指定您所要的資料列版本。 可能的值為 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</param>
        <summary>取得儲存於指定的 <see cref="T:System.Data.DataColumn" /> 中指定版本的資料。</summary>
        <value><see cref="T:System.Object" />，包含資料。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `version`不應該與混淆<xref:System.Data.DataRow.RowState*>屬性。 `version`引數描述相對於資料行的原始值的資料行所包含之資料的狀態。  
  
 如果發生例外狀況中，當您設定屬性時，會產生例外狀況<xref:System.Data.DataTable.ColumnChanging>事件。  
  
 如果這是立即編輯時，請參閱<xref:System.Data.DataRow.EndEdit%2A>可以產生的例外狀況。  
  
   
  
## Examples  
 下列範例會取得目前值的已按下 儲存格<xref:System.Windows.Forms.DataGrid>控制項。  
  
 [!code-csharp[Classic WebData DataRow.this5 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">此資料行不屬於此資料表。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="column" /> 引數包含 Null。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">資料列沒有這個版本的資料。</exception>
        <altmember cref="T:System.Data.DataRowVersion" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(columnIndex As Integer, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int, System::Data::DataRowVersion] { System::Object ^ get(int columnIndex, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(int * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnIndex">資料行的以零起始的索引。</param>
        <param name="version">其中一個 <see cref="T:System.Data.DataRowVersion" /> 值，指定您所要的資料列版本。 可能的值為 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</param>
        <summary>取得儲存於資料行中的資料，它是由要擷取的資料索引和版本所指定。</summary>
        <value><see cref="T:System.Object" />，包含資料。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您只能建立或更新的資料列之後您呼叫,<xref:System.Data.DataRow.BeginEdit%2A>方法; 同樣地，<xref:System.Data.DataRow.EndEdit%2A>方法必須呼叫以認可編輯。 在您呼叫後<xref:System.Data.DataRow.EndEdit%2A>方法，並在呼叫之前<xref:System.Data.DataRow.AcceptChanges%2A>方法中，值會儲存提議的原始和新的內部表示。 因此，直到您呼叫<xref:System.Data.DataRow.AcceptChanges%2A>，您可以使用`version`引數來指定哪個版本的資料行的值，您需要請`DataRowVersion.Original`或`DataRowVersion.Proposed`。 不過，一旦您呼叫<xref:System.Data.DataRow.AcceptChanges%2A>方法中，資料行的版本會還原為`DataRowVersion.Original`。 如果新資料列，您也可以傳遞`DataRowVersion.Default`參數來擷取資料行的預設值。 當傳遞`DataRowVersion.Current`，屬性會傳回目前值，其版本可能是任何內容。  
  
> [!NOTE]
>  <xref:System.Data.DataRow.BeginEdit%2A>當您變更資料繫結控制項的值或隱含地呼叫方法<xref:System.Data.DataRow>物件加入至<xref:System.Data.DataRowCollection>;<xref:System.Data.DataRow.EndEdit%2A>方法會隱含呼叫，當您呼叫下列方法： <xref:System.Data.DataRow.AcceptChanges%2A>方法<xref:System.Data.DataRow>物件，<xref:System.Data.DataTable.AcceptChanges%2A>方法<xref:System.Data.DataTable>物件，或<xref:System.Data.DataRow.CancelEdit%2A>方法。  
  
 相反地，<xref:System.Data.DataRowVersion>列舉型別`Current`傳回的資料之後的版本<xref:System.Data.DataRow.EndEdit%2A>已呼叫方法。  
  
 `version`引數不應混淆與<xref:System.Data.DataRow.RowState*>屬性。 `version`引數描述相對於資料行的原始值的資料行所包含之資料的狀態。 <xref:System.Data.DataRow.RowState*>屬性會描述相對於其父代的整個資料列狀態<xref:System.Data.DataTable>。  
  
 如果發生例外狀況中，當您設定屬性時，會產生例外狀況<xref:System.Data.DataTable.ColumnChanging>事件。  
  
 如果這是立即編輯時，請參閱<xref:System.Data.DataRow.EndEdit%2A>可以產生的例外狀況。  
  
   
  
## Examples  
 下列範例會取得目前透過資料行的值<xref:System.Data.DataRow.Item%2A>屬性<xref:System.Data.DataRow>物件。  
  
 [!code-vb[Classic WebData DataRow.this3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><paramref name="columnIndex" /> 引數超出範圍。</exception>
        <exception cref="T:System.InvalidCastException">數值和資料行的資料型別不相符。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">資料列沒有這個版本的資料。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">嘗試在刪除的資料列上設定值。</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(columnName As String, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^, System::Data::DataRowVersion] { System::Object ^ get(System::String ^ columnName, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnName">資料行名稱。</param>
        <param name="version">其中一個 <see cref="T:System.Data.DataRowVersion" /> 值，指定您所要的資料列版本。 可能的值為 <see langword="Default" />、<see langword="Original" />、<see langword="Current" /> 和 <see langword="Proposed" />。</param>
        <summary>取得儲存於具名資料行中指定版本的資料。</summary>
        <value><see cref="T:System.Object" />，包含資料。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 版本不應混淆與<xref:System.Data.DataRow.RowState*>屬性。 `version`引數描述相對於資料行的原始值的資料行所包含之資料的狀態。 <xref:System.Data.DataRow.RowState*>屬性會描述相對於其父代的整個資料列狀態<xref:System.Data.DataTable>。  
  
 如果發生例外狀況中，當您設定屬性時，會產生例外狀況<xref:System.Data.DataTable.ColumnChanging>事件。  
  
 如果這是立即編輯時，請參閱<xref:System.Data.DataRow.EndEdit%2A>可以產生的例外狀況。  
  
   
  
## Examples  
 下列範例會取得目前版本的資料在已按下 儲存格的<xref:System.Windows.Forms.DataGrid>控制項。  
  
 [!code-csharp[Classic WebData DataRow.this4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">找不到 <paramref name="columnName" /> 指定的資料行。</exception>
        <exception cref="T:System.InvalidCastException">數值和資料行的資料型別不相符。</exception>
        <exception cref="T:System.Data.VersionNotFoundException">資料列沒有這個版本的資料。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">資料列已經刪除。</exception>
        <altmember cref="T:System.Data.DataRowVersion" />
      </Docs>
    </Member>
    <Member MemberName="ItemArray">
      <MemberSignature Language="C#" Value="public object[] ItemArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] ItemArray" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.ItemArray" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemArray As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Object ^&gt; ^ ItemArray { cli::array &lt;System::Object ^&gt; ^ get(); void set(cli::array &lt;System::Object ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemArray : obj[] with get, set" Usage="System.Data.DataRow.ItemArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>透過陣列取得或設定這個資料列的所有值。</summary>
        <value>類型為 <see cref="T:System.Object" /> 的陣列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個屬性來設定或取得透過陣列的這個資料列的值。 如果您使用這個屬性來設定值時，陣列必須有相同的大小和順序的資料行集合。 傳遞`null`在<xref:System.Data.DataRow.ItemArray%2A>指出未指定任何值。  
  
 使用者可以產生的例外狀況<xref:System.Data.DataTable.ColumnChanging>事件或<xref:System.Data.DataTable.RowChanging>事件。  
  
   
  
## Examples  
 下列範例示範如何取得及設定使用的值<xref:System.Data.DataRow.ItemArray%2A>屬性。  
  
 [!code-csharp[Classic WebData DataRow.ItemArray Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ItemArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">陣列大於資料表中的資料行數目。</exception>
        <exception cref="T:System.InvalidCastException">陣列中的值與其在個別的 <see cref="P:System.Data.DataColumn.DataType" /> 中之 <see cref="T:System.Data.DataColumn" /> 不相符。</exception>
        <exception cref="T:System.Data.ConstraintException">編輯中斷條件約束。</exception>
        <exception cref="T:System.Data.ReadOnlyException">編輯嘗試變更唯讀資料行的值。</exception>
        <exception cref="T:System.Data.NoNullAllowedException">某項編輯作業嘗試將 null 值置於資料行中，而該資料行中 <see cref="P:System.Data.DataColumn.AllowDBNull" /> 物件的 <see cref="T:System.Data.DataColumn" /> 為 <see langword="false" />。</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">資料列已經刪除。</exception>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.DataColumn" />
      </Docs>
    </Member>
    <Member MemberName="RejectChanges">
      <MemberSignature Language="C#" Value="public void RejectChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RejectChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.RejectChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub RejectChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RejectChanges();" />
      <MemberSignature Language="F#" Value="member this.RejectChanges : unit -&gt; unit" Usage="dataRow.RejectChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>拒絕自前一次呼叫 <see cref="M:System.Data.DataRow.AcceptChanges" /> 以來，對資料列所做的所有變更。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您呼叫<xref:System.Data.DataRow.RejectChanges%2A>方法，<xref:System.Data.DataRow.CancelEdit%2A>隱含地呼叫方法來取消任何編輯。 如果<xref:System.Data.DataRow.RowState*>遭到刪除或修改資料列就會還原成其先前的值，和<xref:System.Data.DataRow.RowState*>變得不變。 如果<xref:System.Data.DataRow.RowState*>加入時，會移除資料列。  
  
   
  
## Examples  
 下列範例會建立簡單<xref:System.Data.DataTable>2 個資料行與 10 個資料列。 後幾<xref:System.Data.DataRow>會刪除項目與<xref:System.Data.DataRow.Delete%2A>方法，其中一個資料列藉由叫用還原<xref:System.Data.DataRow.RejectChanges%2A>。  
  
 [!code-csharp[Classic WebData DataRow.Delete Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Delete Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">資料列不屬於資料表。</exception>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.IsNull(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RowError">
      <MemberSignature Language="C#" Value="public string RowError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RowError" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.RowError" />
      <MemberSignature Language="VB.NET" Value="Public Property RowError As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RowError { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RowError : string with get, set" Usage="System.Data.DataRow.RowError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定資料列的自訂錯誤描述。</summary>
        <value>描述錯誤的文字。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 會使用<xref:System.Data.DataRow.HasErrors%2A>先判斷屬性是否<xref:System.Data.DataRow>包含錯誤。  
  
   
  
## Examples  
 下列範例會設定資料表中顯示的十個資料列的錯誤文字<xref:System.Windows.Forms.DataGrid>控制項。  
  
 [!code-csharp[Classic WebData DataRow.RowError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.RowError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <altmember cref="P:System.Data.DataSet.HasErrors" />
      </Docs>
    </Member>
    <Member MemberName="RowState">
      <MemberSignature Language="C#" Value="public System.Data.DataRowState RowState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowState RowState" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.RowState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowState As DataRowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRowState RowState { System::Data::DataRowState get(); };" />
      <MemberSignature Language="F#" Value="member this.RowState : System.Data.DataRowState" Usage="System.Data.DataRow.RowState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得關於資料列與 <see cref="T:System.Data.DataRowCollection" /> 之關聯性 (Relationship) 的資料列目前狀態。</summary>
        <value>其中一個 <see cref="T:System.Data.DataRowState" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Data.DataRow.RowState*>取決於兩個因素： 已執行的作業類型的資料列，以及是否<xref:System.Data.DataRow.AcceptChanges%2A>已在呼叫<xref:System.Data.DataRow>。  
  
   
  
## Examples  
 下列範例會先建立新<xref:System.Data.DataTable>包含一個資料行，然後建立單一<xref:System.Data.DataRow>。 作為<xref:System.Data.DataRow>是建立、 新增、 修改和刪除，其<xref:System.Data.DataRow.RowState*>列印。  
  
 [!code-csharp[Classic WebData DataRow.RowState Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.RowState Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="T:System.Data.DataRowView" />
        <altmember cref="M:System.Data.DataRow.Delete" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
        <altmember cref="M:System.Data.DataRow.SetAdded" />
        <altmember cref="M:System.Data.DataRow.SetModified" />
      </Docs>
    </Member>
    <Member MemberName="SetAdded">
      <MemberSignature Language="C#" Value="public void SetAdded ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAdded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetAdded" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAdded ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAdded();" />
      <MemberSignature Language="F#" Value="member this.SetAdded : unit -&gt; unit" Usage="dataRow.SetAdded " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將 <see cref="P:System.Data.DataRow.RowState" /> 的 <see cref="T:System.Data.DataRow" /> 變更為 <see langword="Added" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 將 <xref:System.Data.DataRow.RowState*> 的 <xref:System.Data.DataRow> 變更為 `Added`。 如果目前資料列不是在`Unchanged`或有`Added`狀態時，就會擲回<xref:System.InvalidOperationException>訊息，`SetAdded`只上叫用`DataRow`執行個體`RowState`是`Unchanged`。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetModified" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColumnError">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>設定資料行的錯誤描述。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (System.Data.DataColumn column, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(class System.Data.DataColumn column, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (column As DataColumn, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(System::Data::DataColumn ^ column, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : System.Data.DataColumn * string -&gt; unit" Usage="dataRow.SetColumnError (column, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">要為其設定錯誤描述的 <see cref="T:System.Data.DataColumn" />。</param>
        <param name="error">錯誤描述。</param>
        <summary>對指定為 <see cref="T:System.Data.DataColumn" /> 的資料行設定錯誤描述。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要檢查錯誤描述，請使用<xref:System.Data.DataRow.GetColumnError%2A>方法。  
  
 若要判斷資料行集合是否有任何錯誤，請使用<xref:System.Data.DataRow.HasErrors%2A>屬性。 因此，您可以使用<xref:System.Data.DataRow.GetColumnsInError%2A>方法來擷取錯誤的所有資料行。  
  
 如果`null`或空字串會當做傳入`error`參數<xref:System.Data.DataRow>行為就如同已設定的任何錯誤和<xref:System.Data.DataRow.HasErrors%2A>屬性會傳回 false。  
  
 若要設定自訂的錯誤描述整個資料列上，使用<xref:System.Data.DataRow.RowError%2A>屬性。  
  
 若要判斷資料行集合是否有任何錯誤，請使用<xref:System.Data.DataRow.HasErrors%2A>方法。  
  
 若要清除的資料行集合的所有錯誤，請使用<xref:System.Data.DataRow.ClearErrors%2A>方法。  
  
   
  
## Examples  
 下列範例會設定為指定的錯誤描述<xref:System.Data.DataRow>。  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (int columnIndex, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(int32 columnIndex, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (columnIndex As Integer, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(int columnIndex, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : int * string -&gt; unit" Usage="dataRow.SetColumnError (columnIndex, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnIndex">資料行的以零起始的索引。</param>
        <param name="error">錯誤描述。</param>
        <summary>設定索引指定的資料行的錯誤描述。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 方法用來指定資料行上設定自訂的錯誤描述。 您可以使用<xref:System.Windows.Forms.ErrorProvider>控制項來顯示錯誤文字。  
  
 若要檢查錯誤描述，請使用<xref:System.Data.DataRow.GetColumnError%2A>方法。  
  
 若要判斷資料行集合是否有任何錯誤，請使用<xref:System.Data.DataRow.HasErrors%2A>屬性。 因此，您可以使用<xref:System.Data.DataRow.GetColumnsInError%2A>方法來擷取錯誤的所有資料行。  
  
 如果`null`或空字串會當做傳入`error`參數<xref:System.Data.DataRow>行為就如同已設定的任何錯誤和<xref:System.Data.DataRow.HasErrors%2A>屬性會傳回 false。  
  
 若要設定自訂的錯誤描述整個資料列上，使用<xref:System.Data.DataRow.RowError%2A>屬性。  
  
 若要清除的資料行集合的所有錯誤，請使用<xref:System.Data.DataRow.ClearErrors%2A>方法。  
  
 若要設定套用到整個資料列的錯誤文字，設定<xref:System.Data.DataRow.RowError%2A>屬性。  
  
   
  
## Examples  
 下列範例會設定為指定的錯誤描述<xref:System.Data.DataRow>。  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><paramref name="columnIndex" /> 引數超出範圍</exception>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (string columnName, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(string columnName, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (columnName As String, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(System::String ^ columnName, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : string * string -&gt; unit" Usage="dataRow.SetColumnError (columnName, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">資料行名稱。</param>
        <param name="error">錯誤描述。</param>
        <summary>設定名稱指定的資料行的錯誤描述。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 資料行的名稱設<xref:System.Data.DataColumn.ColumnName%2A>屬性<xref:System.Data.DataColumn>類別。  
  
 若要檢查錯誤描述，請使用<xref:System.Data.DataRow.GetColumnError%2A>方法。  
  
 若要判斷資料行集合是否有任何錯誤，請使用<xref:System.Data.DataRow.HasErrors%2A>屬性。 因此，您可以使用<xref:System.Data.DataRow.GetColumnsInError%2A>方法來擷取錯誤的所有資料行。  
  
 如果`null`或空字串會當做傳入`error`參數<xref:System.Data.DataRow>行為就如同已設定的任何錯誤和<xref:System.Data.DataRow.HasErrors%2A>屬性會傳回 false。  
  
 若要設定自訂的錯誤描述整個資料列上，使用<xref:System.Data.DataRow.RowError%2A>屬性。  
  
 若要判斷資料行集合是否有任何錯誤，請使用<xref:System.Data.DataRow.HasErrors%2A>方法。  
  
 若要清除的資料行集合的所有錯誤，請使用<xref:System.Data.DataRow.ClearErrors%2A>方法。  
  
   
  
## Examples  
 下列範例會設定為指定的錯誤描述<xref:System.Data.DataRow>。  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetModified">
      <MemberSignature Language="C#" Value="public void SetModified ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetModified" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetModified ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetModified();" />
      <MemberSignature Language="F#" Value="member this.SetModified : unit -&gt; unit" Usage="dataRow.SetModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將 <see cref="P:System.Data.DataRow.RowState" /> 的 <see cref="T:System.Data.DataRow" /> 變更為 <see langword="Modified" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 將 <xref:System.Data.DataRow.RowState*> 的 <xref:System.Data.DataRow> 變更為 `Modified`。 如果目前資料列不是在`Unchanged`或有`Added`狀態時，就會擲回<xref:System.InvalidOperationException>訊息，`SetModified`只上叫用`DataRow`執行個體`RowState`是`Unchanged`。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetAdded" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="SetNull">
      <MemberSignature Language="C#" Value="protected void SetNull (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNull(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetNull(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNull (column As DataColumn)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNull(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.SetNull : System.Data.DataColumn -&gt; unit" Usage="dataRow.SetNull column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column"><see cref="T:System.Data.DataColumn" />。</param>
        <summary>將指定的 <see cref="T:System.Data.DataColumn" /> 的值設定為 Null 值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Data.DataRow.IsNull%2A>方法，以判斷資料行是否包含 null 值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetParentRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>設定 <see cref="T:System.Data.DataRow" /> 的父資料列。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParentRow(class System.Data.DataRow parentRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParentRow (parentRow As DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParentRow(System::Data::DataRow ^ parentRow);" />
      <MemberSignature Language="F#" Value="member this.SetParentRow : System.Data.DataRow -&gt; unit" Usage="dataRow.SetParentRow parentRow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="parentRow">新的父 <see cref="T:System.Data.DataRow" />。</param>
        <summary>使用指定的新父 <see cref="T:System.Data.DataRow" />，設定 <see cref="T:System.Data.DataRow" /> 的父資料列。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow, System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParentRow(class System.Data.DataRow parentRow, class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParentRow (parentRow As DataRow, relation As DataRelation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParentRow(System::Data::DataRow ^ parentRow, System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.SetParentRow : System.Data.DataRow * System.Data.DataRelation -&gt; unit" Usage="dataRow.SetParentRow (parentRow, relation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="parentRow">新的父 <see cref="T:System.Data.DataRow" />。</param>
        <param name="relation">要使用的關聯 <see cref="T:System.Data.DataRelation" />。</param>
        <summary>使用指定的新父 <see cref="T:System.Data.DataRow" /> 和 <see cref="T:System.Data.DataRow" />，設定 <see cref="T:System.Data.DataRelation" /> 的父資料列。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會設定特定的子資料列的父資料列。  
  
 [!code-vb[Classic WebData DataRow.SetParentRow1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetParentRow1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">其中一個資料列不屬於資料表。</exception>
        <exception cref="T:System.ArgumentNullException">其中一個資料列為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">關聯不屬於 <see cref="T:System.Data.DataRelationCollection" /> 物件 <see cref="T:System.Data.DataSet" />。</exception>
        <exception cref="T:System.Data.InvalidConstraintException">關聯的子 <see cref="T:System.Data.DataTable" /> 不是這個資料列所屬的資料表。</exception>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ Table { System::Data::DataTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Table : System.Data.DataTable" Usage="System.Data.DataRow.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得其中的這個資料列具有結構描述的 <see cref="T:System.Data.DataTable" />。</summary>
        <value>這個資料列所屬的 <see cref="T:System.Data.DataTable" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Data.DataRow>一定屬於任何資料表的資料列的集合。 發生這種情況時<xref:System.Data.DataRow>已建立但不是會加入至<xref:System.Data.DataRowCollection>。 如果<xref:System.Data.DataRow.RowState*>屬性會傳回`DataRowState.Detached`，資料列並未位於任何集合。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Data.DataRow.Table%2A>屬性傳回的資料行集合的參考<xref:System.Data.DataTable>。  
  
 [!code-csharp[Classic WebData DataRow.Table Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Table Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
  </Members>
</Type>
