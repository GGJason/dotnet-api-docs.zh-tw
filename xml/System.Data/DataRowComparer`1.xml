<Type Name="DataRowComparer&lt;TRow&gt;" FullName="System.Data.DataRowComparer&lt;TRow&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c07c08217680b1ad8562b1712d0635783b7eb92e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30396252" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataRowComparer&lt;TRow&gt; : System.Collections.Generic.IEqualityComparer&lt;TRow&gt; where TRow : DataRow" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataRowComparer`1&lt;(class System.Data.DataRow) TRow&gt; extends System.Object implements class System.Collections.Generic.IEqualityComparer`1&lt;!TRow&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRowComparer`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataRowComparer(Of TRow)&#xA;Implements IEqualityComparer(Of TRow)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TRow&gt;&#xA; where TRow : DataRowpublic ref class DataRowComparer sealed : System::Collections::Generic::IEqualityComparer&lt;TRow&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TRow">
      <Constraints>
        <BaseTypeName>System.Data.DataRow</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;TRow&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TRow">要比較之物件的型別，通常為 <see cref="T:System.Data.DataRow" />。</typeparam>
    <summary>使用數值比較，比較兩個 <see cref="T:System.Data.DataRow" /> 物件是否相等。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個類別會實作<xref:System.Collections.Generic.IEqualityComparer%601>介面，並使用值為基礎的語意來比較<xref:System.Data.DataRow>物件。 這個類別是必要的因為一些集合式作業的預設實作 (例如<xref:System.Linq.Enumerable.Distinct%2A>， <xref:System.Linq.Enumerable.Union%2A>， <xref:System.Linq.Enumerable.Intersect%2A>，和<xref:System.Linq.Enumerable.Except%2A>) 使用參考為基礎的語意來比較<xref:System.Data.DataRow>物件參考，而非比較<xref:System.Data.DataRow>物件值。 <xref:System.Data.DataRowComparer%601.Default%2A>類別用來比較的值<xref:System.Data.DataRow>物件，並不會比較的物件參考。  
  
 此類別無法直接具現化。 相反地，<xref:System.Data.DataRowComparer%601.Default%2A>屬性必須用來傳回的單一執行個體<xref:System.Data.DataRowComparer%601.Default%2A>類別。  
  
 這個類別是無狀態。  
  
 這個類別密封格式，而且不能衍生自。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Data.DataRowComparer&lt;TRow&gt; Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Data.DataRowComparer`1&lt;!TRow&gt; Default" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRowComparer`1.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As DataRowComparer(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Data::DataRowComparer&lt;TRow&gt; ^ Default { System::Data::DataRowComparer&lt;TRow&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowComparer&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Data.DataRowComparer`1" /> 的單一執行個體。 這個屬性是唯讀的。</summary>
        <value>
          <see cref="T:System.Data.DataRowComparer`1" /> 的執行個體。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性是唯讀的。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (TRow leftRow, TRow rightRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!TRow leftRow, !TRow rightRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowComparer`1.Equals(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (leftRow As TRow, rightRow As TRow) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(TRow leftRow, TRow rightRow);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftRow" Type="TRow" />
        <Parameter Name="rightRow" Type="TRow" />
      </Parameters>
      <Docs>
        <param name="leftRow">要比較的第一個 <see cref="T:System.Data.DataRow" /> 物件。</param>
        <param name="rightRow">要比較的第二個 <see cref="T:System.Data.DataRow" /> 物件。</param>
        <summary>使用數值比較，逐資料行比較兩個 <see cref="T:System.Data.DataRow" /> 物件。</summary>
        <returns>
          如果這兩個 <see cref="T:System.Data.DataRow" /> 物件具有已排序的相等資料行值集合，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 兩個結構描述<xref:System.Data.DataRow>就不會檢查物件。 如果兩個<xref:System.Data.DataRow>物件具有完全相同已排序的集合的資料行值，會被視為相等。  
  
 只有目前的值<xref:System.Data.DataRow>會檢查物件。 狀態<xref:System.Data.DataRow>就不會檢查物件。  
  
 <xref:System.Data.DataRowComparer`1.Equals*>方法是值為基礎的比較實作<xref:System.Collections.Generic.IEqualityComparer%601.Equals%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">來源 <see cref="T:System.Data.DataRow" /> 物件的其中之一或兩者都是 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (TRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(!TRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowComparer`1.GetHashCode(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (row As TRow) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHashCode(TRow row);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="TRow" />
      </Parameters>
      <Docs>
        <param name="row">
          <see cref="T:System.Data.DataRow" />，要從中計算雜湊程式碼。</param>
        <summary>傳回指定之 <see cref="T:System.Data.DataRow" /> 物件的雜湊程式碼。</summary>
        <returns>
          <see cref="T:System.Int32" /> 值，表示資料列的雜湊程式碼。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataRowComparer%601.GetHashCode%2A>方法是值為基礎的比較實作<xref:System.Collections.Generic.IEqualityComparer%601.GetHashCode%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">來源 <see cref="T:System.Data.DataRow" /> 物件不屬於 <see cref="T:System.Data.DataTable" />。</exception>
        <exception cref="T:System.ArgumentNullException">來源 <see cref="T:System.Data.DataRow" /> 物件為 <see langword="null" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>