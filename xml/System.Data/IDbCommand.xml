<Type Name="IDbCommand" FullName="System.Data.IDbCommand">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a8fda34795784f1b946fc4e44fc2862ffac7c97a" />
    <Meta Name="ms.sourcegitcommit" Value="af562076243cb1c2c1d8518e9f1b489f858cc658" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/15/2018" />
    <Meta Name="ms.locfileid" Value="35652340" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDbCommand : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbCommand implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbCommand" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbCommand&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbCommand : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="50e51-101">代表在連接至資料來源時執行的 SQL 陳述式，而且是由存取關聯式資料庫的 .NET Framework 資料提供者所實作。</span>
      <span class="sxs-lookup">
        <span data-stu-id="50e51-101">Represents an SQL statement that is executed while connected to a data source, and is implemented by .NET Framework data providers that access relational databases.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e51-102"><xref:System.Data.IDbCommand>介面可讓繼承的類別來實作命令類別，代表在資料來源執行的 SQL 陳述式。</span><span class="sxs-lookup"><span data-stu-id="50e51-102">The <xref:System.Data.IDbCommand> interface enables an inheriting class to implement a Command class, which represents an SQL statement that is executed at a data source.</span></span> <span data-ttu-id="50e51-103">如需命令類別的詳細資訊，請參閱[執行命令](~/docs/framework/data/adonet/executing-a-command.md)。</span><span class="sxs-lookup"><span data-stu-id="50e51-103">For more information about Command classes, see [Executing a Command](~/docs/framework/data/adonet/executing-a-command.md).</span></span>  
  
 <span data-ttu-id="50e51-104">應用程式不會建立的執行個體<xref:System.Data.IDbCommand>介面直接，但是會建立實作類別的執行個體<xref:System.Data.IDbCommand>介面。</span><span class="sxs-lookup"><span data-stu-id="50e51-104">An application does not create an instance of the <xref:System.Data.IDbCommand> interface directly, but creates an instance of a class that implements the <xref:System.Data.IDbCommand> interface.</span></span>  
  
 <span data-ttu-id="50e51-105">類別可實作<xref:System.Data.IDbCommand>必須實作其所有成員，和通常用來定義其他成員將提供者特有的功能。</span><span class="sxs-lookup"><span data-stu-id="50e51-105">Classes that implement <xref:System.Data.IDbCommand> must implement all its members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="50e51-106">例如，<xref:System.Data.IDbCommand>介面會定義<xref:System.Data.IDbCommand.ExecuteNonQuery%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="50e51-106">For example, the <xref:System.Data.IDbCommand> interface defines the <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> method.</span></span> <span data-ttu-id="50e51-107">接著，<xref:System.Data.SqlClient.SqlCommand>類別會繼承此方法，而且也會定義<xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="50e51-107">In turn, the <xref:System.Data.SqlClient.SqlCommand> class inherits this method, and also defines the <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50e51-108">下列範例會建立衍生的類別的執行個體<xref:System.Data.SqlClient.SqlConnection>， <xref:System.Data.SqlClient.SqlCommand>，和<xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="50e51-108">The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, and <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="50e51-109">此範例會讀取整個資料，寫入至主控台。</span><span class="sxs-lookup"><span data-stu-id="50e51-109">The example reads through the data, writing it to the console.</span></span> <span data-ttu-id="50e51-110">最後，範例會關閉<xref:System.Data.SqlClient.SqlDataReader>，然後在<xref:System.Data.SqlClient.SqlConnection>。</span><span class="sxs-lookup"><span data-stu-id="50e51-110">Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader>, then the <xref:System.Data.SqlClient.SqlConnection>.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="50e51-111">
        <para>若要升級.NET Framework 資料提供者之間的一致性，命名為繼承的類別，在表單中<paramref name="PrvClassname" />其中<paramref name="Prv" />是提供給特定的.NET Framework 資料提供者命名空間中的所有類別的統一前置詞。例如，<paramref name="Sql" />是前置詞<see cref="T:System.Data.SqlClient.SqlCommand" />類別<see langword="System.Data.SqlClient" />命名空間。當您繼承自<see cref="T:System.Data.IDbCommand" />介面，您應該實作下列建構函式： <list type="table"><listheader><term>項目</term><description>描述</description></listheader><item><term> PrvCommand() </term><description>初始化 PrvCommand 類別的新執行個體。</description></item><item><term> (字串 cmdText) PrvCommand </term><description>初始化以查詢的文字 PrvCommand 類別的新執行個體。</description></item><item><term> （字串 cmdText、 PrvConnection 連線） PrvCommand </term><description>含有文字的查詢和 PrvConnection PrvCommand 類別的新執行個體初始化。</description></item><item><term> PrvCommand 字串 cmdText、 PrvConnection 連線 (PrvTransaction 交易） </term><description>含有文字的查詢、 PrvConnection 和 PrvTransaction PrvCommand 類別的新執行個體初始化。  </description></item></list></para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="50e51-111">
          <para>To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="PrvClassname" /> where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace. For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class in the <see langword="System.Data.SqlClient" /> namespace.  When you inherit from the <see cref="T:System.Data.IDbCommand" /> interface, you should implement the following constructors:  <list type="table"><listheader><term> Item  </term><description> Description  </description></listheader><item><term> PrvCommand()  </term><description> Initializes a new instance of the PrvCommand class.  </description></item><item><term> PrvCommand(string cmdText)  </term><description> Initializes a new instance of the PrvCommand class with the text of the query.  </description></item><item><term> PrvCommand(string cmdText, PrvConnection connection)  </term><description> Initializes a new instance of the PrvCommand class with the text of the query and a PrvConnection.  </description></item><item><term> PrvCommand(string cmdText, PrvConnection connection, PrvTransaction transaction)  </term><description> Initializes a new instance of the PrvCommand class with the text of the query, a PrvConnection, and the PrvTransaction.  </description></item></list></para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Data.Common.DbDataAdapter" />
    <altmember cref="T:System.Data.IDbConnection" />
    <altmember cref="T:System.Data.OleDb.OleDbCommand" />
    <altmember cref="T:System.Data.SqlClient.SqlCommand" />
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="50e51-112">嘗試取消 <see cref="T:System.Data.IDbCommand" /> 的執行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-112">Attempts to cancels the execution of an <see cref="T:System.Data.IDbCommand" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e51-113">如果沒有要取消項目，會發生任何事。</span><span class="sxs-lookup"><span data-stu-id="50e51-113">If there is nothing to cancel, nothing happens.</span></span> <span data-ttu-id="50e51-114">不過，如果正在進行命令，而取消作業的嘗試失敗，則不會產生任何例外狀況 (Exception)。</span><span class="sxs-lookup"><span data-stu-id="50e51-114">However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50e51-115">取得或設定要對資料來源執行的文字命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-115">Gets or sets the text command to run against the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50e51-116">要執行的文字命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-116">The text command to execute.</span>
          </span>
          <span data-ttu-id="50e51-117">預設值為空字串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-117">The default value is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e51-118">當<xref:System.Data.IDbCommand.CommandType%2A>屬性設定為`StoredProcedure`，將<xref:System.Data.IDbCommand.CommandText%2A>預存程序名稱的屬性。</span><span class="sxs-lookup"><span data-stu-id="50e51-118">When the <xref:System.Data.IDbCommand.CommandType%2A> property is set to `StoredProcedure`, set the <xref:System.Data.IDbCommand.CommandText%2A> property to the name of the stored procedure.</span></span> <span data-ttu-id="50e51-119">使用者可能需要使用逸出字元語法，如果預存程序名稱包含任何特殊字元。</span><span class="sxs-lookup"><span data-stu-id="50e51-119">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="50e51-120">當您呼叫 Execute 方法的其中一個命令會呼叫此預存程序。</span><span class="sxs-lookup"><span data-stu-id="50e51-120">The command will call this stored procedure when you call one of the Execute methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50e51-121">下列範例會建立在衍生類別的執行個體<xref:System.Data.OleDb.OleDbCommand>並設定其屬性的某些。</span><span class="sxs-lookup"><span data-stu-id="50e51-121">The following example creates an instance of a derived class, <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.CommandText Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandText Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.IDbCommand.CommandType" />
        <altmember cref="P:System.Data.IDbCommand.UpdatedRowSource" />
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CommandTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50e51-122">取得或設定結束執行命令的嘗試並產生錯誤之前的等待時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-122">Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50e51-123">等待命令執行的時間 (以秒為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-123">The time (in seconds) to wait for the command to execute.</span>
          </span>
          <span data-ttu-id="50e51-124">預設值為 30 秒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-124">The default value is 30 seconds.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="50e51-125">下列範例會建立在衍生類別的執行個體<xref:System.Data.SqlClient.SqlCommand>並設定其屬性的某些。</span><span class="sxs-lookup"><span data-stu-id="50e51-125">The following example creates an instance of a derived class, <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="50e51-126">指派的屬性值小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-126">The property value assigned is less than 0.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.IDbCommand.CommandText" />
        <altmember cref="P:System.Data.IDbCommand.Connection" />
        <altmember cref="P:System.Data.IDbCommand.CommandType" />
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50e51-127">指示或指定 <see cref="P:System.Data.IDbCommand.CommandText" /> 屬性應如何解譯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-127">Indicates or specifies how the <see cref="P:System.Data.IDbCommand.CommandText" /> property is interpreted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50e51-128">其中一個 <see cref="T:System.Data.CommandType" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-128">One of the <see cref="T:System.Data.CommandType" /> values.</span>
          </span>
          <span data-ttu-id="50e51-129">預設值為 <see langword="Text" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-129">The default is <see langword="Text" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e51-130">當您將<xref:System.Data.IDbCommand.CommandType%2A>屬性`StoredProcedure`，您應該設定<xref:System.Data.IDbCommand.CommandText%2A>預存程序名稱的屬性。</span><span class="sxs-lookup"><span data-stu-id="50e51-130">When you set the <xref:System.Data.IDbCommand.CommandType%2A> property to `StoredProcedure`, you should set the <xref:System.Data.IDbCommand.CommandText%2A> property to the name of the stored procedure.</span></span> <span data-ttu-id="50e51-131">當您呼叫其中一個執行方法時，命令會執行這個預存程序。</span><span class="sxs-lookup"><span data-stu-id="50e51-131">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.IDbConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As IDbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbConnection ^ Connection { System::Data::IDbConnection ^ get(); void set(System::Data::IDbConnection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50e51-132">取得或設定 <see cref="T:System.Data.IDbCommand" /> 的這個執行個體所使用的 <see cref="T:System.Data.IDbConnection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-132">Gets or sets the <see cref="T:System.Data.IDbConnection" /> used by this instance of the <see cref="T:System.Data.IDbCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50e51-133">與資料來源的連接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-133">The connection to the data source.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.IDbDataParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDbDataParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As IDbDataParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDbDataParameter ^ CreateParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbDataParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="50e51-134">建立 <see cref="T:System.Data.IDbDataParameter" /> 物件的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-134">Creates a new instance of an <see cref="T:System.Data.IDbDataParameter" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50e51-135">
            <see langword="IDbDataParameter" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-135">An <see langword="IDbDataParameter" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e51-136">繼承自<xref:System.Data.IDbCommand>，.NET Framework 資料提供者實作的強型別版本<xref:System.Data.IDbCommand.CreateParameter%2A>。</span><span class="sxs-lookup"><span data-stu-id="50e51-136">When inheriting from <xref:System.Data.IDbCommand>, a .NET Framework data provider implements a strongly-typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteNonQuery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="50e51-137">針對 .NET Framework 資料提供者的 <see langword="Connection" /> 物件執行 SQL 陳述式，並傳回受影響的資料列數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-137">Executes an SQL statement against the <see langword="Connection" /> object of a .NET Framework data provider, and returns the number of rows affected.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50e51-138">受影響的資料列數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-138">The number of rows affected.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e51-139">您可以使用<xref:System.Data.IDbCommand.ExecuteNonQuery%2A>來執行資料庫目錄作業 （例如，查詢資料庫的結構或建立資料庫物件，例如資料表），或變更資料庫中的資料，而不使用<xref:System.Data.DataSet>藉由執行更新、 插入或刪除陳述式。</span><span class="sxs-lookup"><span data-stu-id="50e51-139">You can use the <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables), or to change the data in a database without using a <xref:System.Data.DataSet> by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="50e51-140">雖然<xref:System.Data.IDbCommand.ExecuteNonQuery%2A>不傳回任何資料列、 任何輸出參數或傳回對應至參數的值會以資料填入。</span><span class="sxs-lookup"><span data-stu-id="50e51-140">Although the <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> does not return any rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 <span data-ttu-id="50e51-141">對 UPDATE、INSERT 和 DELETE 陳述式而言，傳回值是受命令影響的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="50e51-141">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="50e51-142">對其他類型的陳述式而言，傳回值為 -1。</span><span class="sxs-lookup"><span data-stu-id="50e51-142">For all other types of statements, the return value is -1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50e51-143">下列範例會建立在衍生類別的執行個體<xref:System.Data.OleDb.OleDbCommand>，然後執行它。</span><span class="sxs-lookup"><span data-stu-id="50e51-143">The following example creates an instance of the derived class, <xref:System.Data.OleDb.OleDbCommand>, and then executes it.</span></span> <span data-ttu-id="50e51-144">若要完成這項作業，方法會傳遞 SQL SELECT 陳述式的字串，用來連接到資料來源的字串。</span><span class="sxs-lookup"><span data-stu-id="50e51-144">To accomplish this, the method is passed a string that is a SQL SELECT statement and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteNonQuery Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteNonQuery Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="50e51-145">連接不存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-145">The connection does not exist.</span>
          </span>
          <span data-ttu-id="50e51-146">-或-  連線未開啟。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-146">-or-  The connection is not open.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="50e51-147">針對 <see cref="P:System.Data.IDbCommand.Connection" /> 執行 <see cref="P:System.Data.IDbCommand.CommandText" />，並建置 <see cref="T:System.Data.IDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-147">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" /> and builds an <see cref="T:System.Data.IDataReader" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.IDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As IDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDataReader ^ ExecuteReader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="50e51-148">針對 <see cref="P:System.Data.IDbCommand.Connection" /> 執行 <see cref="P:System.Data.IDbCommand.CommandText" />，並建置 <see cref="T:System.Data.IDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-148">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" /> and builds an <see cref="T:System.Data.IDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50e51-149">
            <see cref="T:System.Data.IDataReader" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-149">An <see cref="T:System.Data.IDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.IDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As IDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">
          <span data-ttu-id="50e51-150">其中一個 <see cref="T:System.Data.CommandBehavior" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-150">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="50e51-151">針對 <see cref="P:System.Data.IDbCommand.Connection" /> 執行 <see cref="P:System.Data.IDbCommand.CommandText" />，並使用其中一個 <see cref="T:System.Data.CommandBehavior" /> 值來建置 <see cref="T:System.Data.IDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-151">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" />, and builds an <see cref="T:System.Data.IDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50e51-152">
            <see cref="T:System.Data.IDataReader" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-152">An <see cref="T:System.Data.IDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e51-153">呼叫端必須呼叫<xref:System.Data.IDbConnection.Open%2A>方法<xref:System.Data.IDbCommand.Connection%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="50e51-153">The caller must call the <xref:System.Data.IDbConnection.Open%2A> method of the <xref:System.Data.IDbCommand.Connection%2A> property.</span></span>  
  
 <span data-ttu-id="50e51-154">當<xref:System.Data.IDbCommand.CommandType%2A>屬性設定為`StoredProcedure`、<xref:System.Data.IDbCommand.CommandText%2A>屬性應該設定為預存程序的名稱。</span><span class="sxs-lookup"><span data-stu-id="50e51-154">When the <xref:System.Data.IDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.IDbCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="50e51-155">命令執行這個預存程序，當您呼叫<xref:System.Data.IDbCommand.ExecuteReader%2A>。</span><span class="sxs-lookup"><span data-stu-id="50e51-155">The command executes this stored procedure when you call <xref:System.Data.IDbCommand.ExecuteReader%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="50e51-156">使用<xref:System.Data.CommandBehavior.SequentialAccess>擷取二進位資料並將較大的值。</span><span class="sxs-lookup"><span data-stu-id="50e51-156">Use <xref:System.Data.CommandBehavior.SequentialAccess> to retrieve large values and binary data.</span></span> <span data-ttu-id="50e51-157">否則，<xref:System.OutOfMemoryException>可能會發生，連接將會關閉。</span><span class="sxs-lookup"><span data-stu-id="50e51-157">Otherwise, an <xref:System.OutOfMemoryException> might occur and the connection will be closed.</span></span>  
  
 <span data-ttu-id="50e51-158">雖然<xref:System.Data.IDataReader>正在使用中，相關聯<xref:System.Data.IDbConnection>忙於處理<xref:System.Data.IDataReader>。</span><span class="sxs-lookup"><span data-stu-id="50e51-158">While the <xref:System.Data.IDataReader> is in use, the associated <xref:System.Data.IDbConnection> is busy serving the <xref:System.Data.IDataReader>.</span></span> <span data-ttu-id="50e51-159">處於此狀態時，沒有其他作業可對<xref:System.Data.IDbConnection>以外關閉它。</span><span class="sxs-lookup"><span data-stu-id="50e51-159">While in this state, no other operations can be performed on the <xref:System.Data.IDbConnection> other than closing it.</span></span> <span data-ttu-id="50e51-160">這是之前，這個情況<xref:System.Data.IDataReader.Close%2A>呼叫 DataReader 的方法。</span><span class="sxs-lookup"><span data-stu-id="50e51-160">This is the case until the <xref:System.Data.IDataReader.Close%2A> method of the DataReader is called.</span></span> <span data-ttu-id="50e51-161">如果以建立 DataReader<xref:System.Data.CommandBehavior>設`CloseConnection`，自動關閉 DataReader 關閉連接。</span><span class="sxs-lookup"><span data-stu-id="50e51-161">If the DataReader is created with <xref:System.Data.CommandBehavior> set to `CloseConnection`, closing the DataReader closes the connection automatically.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteScalar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="50e51-162">執行查詢，並傳回查詢所傳回的結果集中第一個資料列的第一個資料行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-162">Executes the query, and returns the first column of the first row in the resultset returned by the query.</span>
          </span>
          <span data-ttu-id="50e51-163">額外的資料行或資料列都會遭到忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-163">Extra columns or rows are ignored.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="50e51-164">結果集中第一個資料列的第一個資料行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-164">The first column of the first row in the resultset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e51-165">使用<xref:System.Data.IDbCommand.ExecuteScalar%2A>方法來從資料庫擷取單一值 （例如，彙總的值）。</span><span class="sxs-lookup"><span data-stu-id="50e51-165">Use the <xref:System.Data.IDbCommand.ExecuteScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database.</span></span> <span data-ttu-id="50e51-166">這需要較少的程式碼比使用<xref:System.Data.IDbCommand.ExecuteReader%2A>方法，並再執行產生的單一值，使用所傳回的資料所需的作業<xref:System.Data.IDataReader>。</span><span class="sxs-lookup"><span data-stu-id="50e51-166">This requires less code than using the <xref:System.Data.IDbCommand.ExecuteReader%2A> method, and then performing the operations necessary to generate the single value using the data returned by an <xref:System.Data.IDataReader>.</span></span>  
  
 <span data-ttu-id="50e51-167">一般<xref:System.Data.IDbCommand.ExecuteScalar%2A>查詢可以進行格式化，如下列 C# 範例所示：</span><span class="sxs-lookup"><span data-stu-id="50e51-167">A typical <xref:System.Data.IDbCommand.ExecuteScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
CommandText = "select count(*) as NumberOfRegions from region";  
Int32 count = (int) ExecuteScalar();  
```  
  
 <span data-ttu-id="50e51-168">如果結果集中的第一個資料列的第一個資料行沒有找到，則為 null 參考 (`Nothing`在 Visual Basic 中) 會傳回。</span><span class="sxs-lookup"><span data-stu-id="50e51-168">If the first column of the first row in the result set is not found, a null reference (`Nothing` in Visual Basic) is returned.</span></span> <span data-ttu-id="50e51-169">如果資料庫中的值是`null`，此查詢會傳回`DBNull.Value`。</span><span class="sxs-lookup"><span data-stu-id="50e51-169">If the value in the database is `null`, the query returns `DBNull.Value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50e51-170">下列範例會建立在衍生類別的執行個體<xref:System.Data.SqlClient.SqlCommand>，然後執行它使用<xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>。</span><span class="sxs-lookup"><span data-stu-id="50e51-170">The following example creates an instance of the derived class, <xref:System.Data.SqlClient.SqlCommand>, and then executes it using <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>.</span></span> <span data-ttu-id="50e51-171">此範例會傳遞字串傳回彙總的結果是 TRANSACT-SQL 陳述式和字串，用來連接到資料來源。</span><span class="sxs-lookup"><span data-stu-id="50e51-171">The example is passed a string that is a Transact-SQL statement that returns an aggregate result, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteScalar/CS/mysample.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteScalar/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.IDataParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDataParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As IDataParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDataParameterCollection ^ Parameters { System::Data::IDataParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50e51-172">取得 <see cref="T:System.Data.IDataParameterCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-172">Gets the <see cref="T:System.Data.IDataParameterCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50e51-173">SQL 陳述式或預存程序的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-173">The parameters of the SQL statement or stored procedure.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="50e51-174">下列範例會建立在衍生類別的執行個體<xref:System.Data.SqlClient.SqlCommand>，並顯示它的參數。</span><span class="sxs-lookup"><span data-stu-id="50e51-174">The following example creates an instance of the derived class, <xref:System.Data.SqlClient.SqlCommand>, and displays its parameters.</span></span> <span data-ttu-id="50e51-175">在範例中，應用程式傳遞<xref:System.Data.SqlClient.SqlConnection>，為 TRANSACT-SQL SELECT 陳述式，以及陣列的查詢字串<xref:System.Data.SqlClient.SqlParameter>物件。</span><span class="sxs-lookup"><span data-stu-id="50e51-175">In the example, the application passes a <xref:System.Data.SqlClient.SqlConnection>, a query string that is a Transact-SQL SELECT statement, and an array of <xref:System.Data.SqlClient.SqlParameter> objects.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.Parameters Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.Parameters Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.Parameters Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.Parameters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.IDataParameter" />
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepare();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="50e51-176">在資料來源上建立命令已備妥 (或已編譯) 的版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-176">Creates a prepared (or compiled) version of the command on the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50e51-177">如果<xref:System.Data.IDbCommand.CommandType%2A>屬性設定為`TableDirect`，<xref:System.Data.IDbCommand.Prepare%2A>不做任何動作。</span><span class="sxs-lookup"><span data-stu-id="50e51-177">If the <xref:System.Data.IDbCommand.CommandType%2A> property is set to `TableDirect`, <xref:System.Data.IDbCommand.Prepare%2A> does nothing.</span></span> <span data-ttu-id="50e51-178">如果<xref:System.Data.IDbCommand.CommandType%2A>設`StoredProcedure`，呼叫<xref:System.Data.IDbCommand.Prepare%2A>應該會成功，但它可能會不導致任何作業。</span><span class="sxs-lookup"><span data-stu-id="50e51-178">If <xref:System.Data.IDbCommand.CommandType%2A> is set to `StoredProcedure`, the call to <xref:System.Data.IDbCommand.Prepare%2A> should succeed, although it may result in a no-op.</span></span> <span data-ttu-id="50e51-179">伺服器會自動快取計畫重複使用，視;因此，沒有需要直接在用戶端應用程式中呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="50e51-179">The server automatically caches plans for reuse as necessary; therefore, there is no need to call this method directly in your client application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50e51-180">下列範例會建立在衍生類別的執行個體<xref:System.Data.OleDb.OleDbCommand>，並開啟連接。</span><span class="sxs-lookup"><span data-stu-id="50e51-180">The following example creates an instance of the derived class, <xref:System.Data.OleDb.OleDbCommand>, and opens the connection.</span></span> <span data-ttu-id="50e51-181">然後範例會藉由傳遞字串是 SQL Select 陳述式和字串，用來連接到資料來源準備資料來源上的預存程序。</span><span class="sxs-lookup"><span data-stu-id="50e51-181">The example then prepares a stored procedure on the data source by passing a string that is a SQL Select statement and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.Prepare Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Prepare Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.Prepare Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Prepare Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="50e51-182">
            <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> 未設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-182">The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> is not set.</span>
          </span>
          <span data-ttu-id="50e51-183">-或-  <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> 不是 <see cref="M:System.Data.OleDb.OleDbConnection.Open" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-183">-or-  The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> is not <see cref="M:System.Data.OleDb.OleDbConnection.Open" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.IDbTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As IDbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbTransaction ^ Transaction { System::Data::IDbTransaction ^ get(); void set(System::Data::IDbTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50e51-184">取得或設定 .NET Framework 資料提供者的 <see langword="Command" /> 物件會在其中執行的交易。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-184">Gets or sets the transaction within which the <see langword="Command" /> object of a .NET Framework data provider executes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50e51-185">.NET Framework 資料提供者執行的 <see langword="Command" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-185">the <see langword="Command" /> object of a .NET Framework data provider executes.</span>
          </span>
          <span data-ttu-id="50e51-186">預設值是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-186">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="50e51-187">取得或設定由 <see cref="T:System.Data.Common.DbDataAdapter" /> 的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> 方法使用命令結果時，如何將其套用至 <see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-187">Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow" /> when used by the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> method of a <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="50e51-188">其中一個 <see cref="T:System.Data.UpdateRowSource" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-188">One of the <see cref="T:System.Data.UpdateRowSource" /> values.</span>
          </span>
          <span data-ttu-id="50e51-189">除非會自動產生命令，否則預設值為 <see langword="Both" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-189">The default is <see langword="Both" /> unless the command is automatically generated.</span>
          </span>
          <span data-ttu-id="50e51-190">預設值為 <see langword="None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-190">Then the default is <see langword="None" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="50e51-191">輸入的值不是其中一個 <see cref="T:System.Data.UpdateRowSource" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="50e51-191">The value entered was not one of the <see cref="T:System.Data.UpdateRowSource" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>