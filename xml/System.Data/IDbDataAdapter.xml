<Type Name="IDbDataAdapter" FullName="System.Data.IDbDataAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ad7ef39687c100899e7bccb842a442f2c82c114b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37668538" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDbDataAdapter : System.Data.IDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbDataAdapter implements class System.Data.IDataAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbDataAdapter&#xA;Implements IDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbDataAdapter : System::Data::IDataAdapter" />
  <TypeSignature Language="F#" Value="type IDbDataAdapter = interface&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="c6840-101">表示與命令相關的屬性集，這些屬性是用來填入 <see cref="T:System.Data.DataSet" /> 並更新資料來源，並且由存取關聯式資料庫的 .NET Framework 資料提供者所實作。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c6840-101">Represents a set of command-related properties that are used to fill the <see cref="T:System.Data.DataSet" /> and update a data source, and is implemented by .NET Framework data providers that access relational databases.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6840-102"><xref:System.Data.IDbDataAdapter>介面繼承自<xref:System.Data.IDataAdapter>介面，並讓物件建立資料配接器設計為搭配關聯式資料庫。</span><span class="sxs-lookup"><span data-stu-id="c6840-102">The <xref:System.Data.IDbDataAdapter> interface inherits from the <xref:System.Data.IDataAdapter> interface and allows an object to create a DataAdapter designed for use with a relational database.</span></span> <span data-ttu-id="c6840-103"><xref:System.Data.IDbDataAdapter>介面，並選擇性地公用程式類別中， <xref:System.Data.Common.DbDataAdapter>，允許繼承的類別來實作資料配接器類別，代表資料來源之間的橋樑， <xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="c6840-103">The <xref:System.Data.IDbDataAdapter> interface and, optionally, the utility class, <xref:System.Data.Common.DbDataAdapter>, allow an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="c6840-104">如需詳細資料配接器類別的詳細資訊，請參閱[從 DataAdapter 填入 DataSet](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md)。</span><span class="sxs-lookup"><span data-stu-id="c6840-104">For more information about DataAdapter classes, see [Populating a DataSet from a DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md).</span></span> <span data-ttu-id="c6840-105">如需有關如何實作.NET Framework 資料提供者的詳細資訊，請參閱[ &#91; \<topic://cpconimplementingnetdataprovider >&#93;](http://msdn.microsoft.com/library/a9fa1926-071b-4c6f-997d-a16bac633852)。</span><span class="sxs-lookup"><span data-stu-id="c6840-105">For more information about implementing .NET Framework data providers, see [&#91;\<topic://cpconimplementingnetdataprovider>&#93;](http://msdn.microsoft.com/library/a9fa1926-071b-4c6f-997d-a16bac633852).</span></span>  
  
 <span data-ttu-id="c6840-106">應用程式不會建立的執行個體<xref:System.Data.IDbDataAdapter>介面直接，但建立繼承的類別的執行個體<xref:System.Data.IDbDataAdapter>和<xref:System.Data.Common.DbDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="c6840-106">An application does not create an instance of the <xref:System.Data.IDbDataAdapter> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbDataAdapter> and <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="c6840-107">繼承的類別<xref:System.Data.IDbDataAdapter>必須實作繼承的成員，並通常會定義要新增提供者特有的功能的其他成員。</span><span class="sxs-lookup"><span data-stu-id="c6840-107">Classes that inherit <xref:System.Data.IDbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="c6840-108">比方說，<xref:System.Data.IDbDataAdapter>介面會定義<xref:System.Data.IDbDataAdapter.SelectCommand%2A>屬性，而<xref:System.Data.Common.DbDataAdapter>介面會定義<xref:System.Data.IDataAdapter.Fill%2A>採用方法<xref:System.Data.DataTable>做為參數。</span><span class="sxs-lookup"><span data-stu-id="c6840-108">For example, the <xref:System.Data.IDbDataAdapter> interface defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> interface defines a <xref:System.Data.IDataAdapter.Fill%2A> method that takes a <xref:System.Data.DataTable> as a parameter.</span></span> <span data-ttu-id="c6840-109">依次<xref:System.Data.OleDb.OleDbDataAdapter>類別會繼承<xref:System.Data.IDbDataAdapter.SelectCommand%2A>屬性和<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法，而且也會定義兩個額外的多載<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>需要 ADO 資料錄集物件，做為參數的方法。</span><span class="sxs-lookup"><span data-stu-id="c6840-109">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property and the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method that take an ADO Recordset object as a parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6840-110">下列範例會使用衍生的類別， <xref:System.Data.SqlClient.SqlCommand>，<xref:System.Data.SqlClient.SqlDataAdapter>和<xref:System.Data.SqlClient.SqlConnection>、 選取資料來源的資料錄。</span><span class="sxs-lookup"><span data-stu-id="c6840-110">The following example uses the derived classes, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter> and <xref:System.Data.SqlClient.SqlConnection>, to select records from a data source.</span></span> <span data-ttu-id="c6840-111">區域分布<xref:System.Data.DataSet>再傳回。</span><span class="sxs-lookup"><span data-stu-id="c6840-111">The filled <xref:System.Data.DataSet> is then returned.</span></span> <span data-ttu-id="c6840-112">若要這麼做，方法傳遞初始化<xref:System.Data.DataSet>，連接字串，而是 TRANSACT-SQL SELECT 陳述式的查詢字串。</span><span class="sxs-lookup"><span data-stu-id="c6840-112">To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is a Transact-SQL SELECT statement.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="c6840-113">
        <para>若要升級.NET Framework 資料提供者之間的一致性，命名為在表單中繼承的類別<paramref name="Prv" />DataAdapter 其中<paramref name="Prv" />是統一的前置詞提供給特定的.NET Framework 資料提供者命名空間中的所有類別。例如，<paramref name="Sql" />是的前置詞<see cref="T:System.Data.SqlClient.SqlDataAdapter" />類別中<see langword="System.Data.SqlClient" />命名空間。當您繼承自<see cref="T:System.Data.IDbDataAdapter" />介面，您應該實作下列建構函式： <list type="table"><listheader><term>項目</term><description>描述</description></listheader><item><term> PrvDataAdapter() </term><description>初始化 PrvDataAdapter 類別的新執行個體。</description></item><item><term> (PrvCommand selectCommand) PrvDataAdapter </term><description>初始化使用指定的 SQL SELECT 陳述式的 PrvDataAdapter 類別的新執行個體。</description></item><item><term> （字串 selectCommandText，字串 selectConnectionString） PrvDataAdapter </term><description>初始化 SQL SELECT 陳述式和連接字串 PrvDataAdapter 類別的新執行個體。</description></item><item><term> （字串 selectCommandText、 PrvConnection selectConnection） PrvDataAdapter </term><description>初始化 SQL SELECT 陳述式和 PrvConnection 物件 PrvDataAdapter 類別的新執行個體。  </description></item></list></para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="c6840-113">
          <para>To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="Prv" /> DataAdapter where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace. For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the <see langword="System.Data.SqlClient" /> namespace.  When you inherit from the <see cref="T:System.Data.IDbDataAdapter" /> interface, you should implement the following constructors:  <list type="table"><listheader><term> Item  </term><description> Description  </description></listheader><item><term> PrvDataAdapter()  </term><description> Initializes a new instance of the PrvDataAdapter class.  </description></item><item><term> PrvDataAdapter(PrvCommand selectCommand)  </term><description> Initializes a new instance of the PrvDataAdapter class with the specified SQL SELECT statement.  </description></item><item><term> PrvDataAdapter(string selectCommandText, string selectConnectionString)  </term><description> Initializes a new instance of the PrvDataAdapter class with an SQL SELECT statement and a connection string.  </description></item><item><term> PrvDataAdapter(string selectCommandText, PrvConnection selectConnection)  </term><description> Initializes a new instance of the PrvDataAdapter class with an SQL SELECT statement and a PrvConnection object.  </description></item></list></para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6840-114">取得或設定 SQL 陳述式從資料集刪除資料錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6840-114">Gets or sets an SQL statement for deleting records from the data set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6840-115">
            <see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中所刪除的資料列刪除在資料來源中的資料錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6840-115">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6840-116">期間<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果沒有設定這個屬性，而主索引鍵資訊是存在於<xref:System.Data.DataSet>，則<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>如果您將可以自動產生`SelectCommand`.NET Framework 資料提供者的屬性。</span><span class="sxs-lookup"><span data-stu-id="c6840-116">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="c6840-117">然後，您未設定任何其他命令會產生 CommandBuilder。</span><span class="sxs-lookup"><span data-stu-id="c6840-117">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="c6840-118">此層代 」 邏輯需要索引鍵資料行資訊會出現在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="c6840-118">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="c6840-119">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="c6840-119">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="c6840-120">當<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>指派至先前建立<xref:System.Data.IDbCommand>，則<xref:System.Data.IDbCommand>不複製。</span><span class="sxs-lookup"><span data-stu-id="c6840-120">When <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="c6840-121"><xref:System.Data.IDbDataAdapter.DeleteCommand%2A>維護先前建立的參考<xref:System.Data.IDbCommand>物件。</span><span class="sxs-lookup"><span data-stu-id="c6840-121">The <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6840-122">下列範例會建立繼承的執行個體<xref:System.Data.OleDb.OleDbDataAdapter>類別，並設定<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>和<xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="c6840-122">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> properties.</span></span> <span data-ttu-id="c6840-123">它會假設您已經建立<xref:System.Data.OleDb.OleDbConnection>物件。</span><span class="sxs-lookup"><span data-stu-id="c6840-123">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6840-124">取得或設定用來將新的資料錄插入至資料來源的 SQL 陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6840-124">Gets or sets an SQL statement used to insert new records into the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6840-125">
            <see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中新的資料列插入在資料來源中的資料錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6840-125">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6840-126">期間<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果沒有設定這個屬性，而主索引鍵資訊是存在於<xref:System.Data.DataSet>，則<xref:System.Data.IDbDataAdapter.InsertCommand%2A>如果您將可以自動產生`SelectCommand`.NET Framework 資料提供者的屬性。</span><span class="sxs-lookup"><span data-stu-id="c6840-126">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="c6840-127">然後，您未設定任何其他命令會產生 CommandBuilder。</span><span class="sxs-lookup"><span data-stu-id="c6840-127">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="c6840-128">此層代 」 邏輯需要索引鍵資料行資訊會出現在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="c6840-128">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="c6840-129">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="c6840-129">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="c6840-130">當<xref:System.Data.IDbDataAdapter.InsertCommand%2A>指派至先前建立<xref:System.Data.IDbCommand>，則<xref:System.Data.IDbCommand>不複製。</span><span class="sxs-lookup"><span data-stu-id="c6840-130">When <xref:System.Data.IDbDataAdapter.InsertCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="c6840-131"><xref:System.Data.IDbDataAdapter.InsertCommand%2A>維護先前建立的參考<xref:System.Data.IDbCommand>物件。</span><span class="sxs-lookup"><span data-stu-id="c6840-131">The <xref:System.Data.IDbDataAdapter.InsertCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c6840-132">如果執行此命令會傳回資料列，這些資料列可能會加入至<xref:System.Data.DataSet>視您的設定方式而定<xref:System.Data.IDbCommand.UpdatedRowSource%2A>屬性<xref:System.Data.IDbCommand>物件。</span><span class="sxs-lookup"><span data-stu-id="c6840-132">If execution of this command returns rows, these rows may be added to the <xref:System.Data.DataSet> depending on how you set the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property of the <xref:System.Data.IDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6840-133">下列範例會建立繼承的執行個體<xref:System.Data.OleDb.OleDbDataAdapter>類別，並設定<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>和<xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="c6840-133">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="c6840-134">它會假設您已經建立<xref:System.Data.OleDb.OleDbConnection>物件。</span><span class="sxs-lookup"><span data-stu-id="c6840-134">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6840-135">取得或設定用來在資料來源中選取資料錄的 SQL 陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6840-135">Gets or sets an SQL statement used to select records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6840-136">
            <see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中的位置從資料來源選取資料錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6840-136">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6840-137">當<xref:System.Data.IDbDataAdapter.SelectCommand%2A>指派至先前建立<xref:System.Data.IDbCommand>，則<xref:System.Data.IDbCommand>不複製。</span><span class="sxs-lookup"><span data-stu-id="c6840-137">When <xref:System.Data.IDbDataAdapter.SelectCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="c6840-138"><xref:System.Data.IDbDataAdapter.SelectCommand%2A>維護先前建立的參考<xref:System.Data.IDbCommand>物件。</span><span class="sxs-lookup"><span data-stu-id="c6840-138">The <xref:System.Data.IDbDataAdapter.SelectCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
 <span data-ttu-id="c6840-139">如果<xref:System.Data.IDbDataAdapter.SelectCommand%2A>不會傳回任何資料列，資料表會新增至<xref:System.Data.DataSet>，並會引發任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="c6840-139">If the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6840-140">下列範例會建立繼承的執行個體<xref:System.Data.OleDb.OleDbDataAdapter>類別，並設定<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>和<xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="c6840-140">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="c6840-141">它會假設您已經建立<xref:System.Data.OleDb.OleDbConnection>物件。</span><span class="sxs-lookup"><span data-stu-id="c6840-141">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6840-142">取得或設定用來在資料來源中更新資料錄的 SQL 陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6840-142">Gets or sets an SQL statement used to update records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6840-143">
            <see cref="T:System.Data.IDbCommand" />，在 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 期間用來為資料集中所修改的資料列更新在資料來源中的資料錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6840-143">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6840-144">期間<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果沒有設定這個屬性，而主索引鍵資訊是存在於<xref:System.Data.DataSet>，則<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>如果您將可以自動產生`SelectCommand`.NET Framework 資料提供者的屬性。</span><span class="sxs-lookup"><span data-stu-id="c6840-144">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="c6840-145">然後，您未設定任何其他命令會產生 CommandBuilder。</span><span class="sxs-lookup"><span data-stu-id="c6840-145">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="c6840-146">此層代 」 邏輯需要索引鍵資料行資訊會出現在<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="c6840-146">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="c6840-147">如需詳細資訊，請參閱[Commandbuilder 產生命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="c6840-147">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="c6840-148">當<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>指派至先前建立<xref:System.Data.IDbCommand>，則<xref:System.Data.IDbCommand>不複製。</span><span class="sxs-lookup"><span data-stu-id="c6840-148">When <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="c6840-149"><xref:System.Data.IDbDataAdapter.UpdateCommand%2A>維護先前建立的參考<xref:System.Data.IDbCommand>物件。</span><span class="sxs-lookup"><span data-stu-id="c6840-149">The <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c6840-150">如果執行此命令會傳回資料列，這些資料列會加入至<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="c6840-150">If execution of this command returns rows, these rows are added to the <xref:System.Data.DataSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6840-151">下列範例會建立繼承的執行個體<xref:System.Data.OleDb.OleDbDataAdapter>類別，並設定<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>和<xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="c6840-151">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> properties.</span></span> <span data-ttu-id="c6840-152">它會假設您已經建立<xref:System.Data.OleDb.OleDbConnection>物件。</span><span class="sxs-lookup"><span data-stu-id="c6840-152">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>