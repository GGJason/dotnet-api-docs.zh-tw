<Type Name="ServiceManager" FullName="System.Activities.Presentation.ServiceManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8273f2de007804edfa3b2257f1735fd2bd6653d0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ServiceManager : IServiceProvider, System.Collections.Generic.IEnumerable&lt;Type&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ServiceManager extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt;, class System.Collections.IEnumerable, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.ServiceManager" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ServiceManager&#xA;Implements IEnumerable(Of Type), IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceManager abstract : IServiceProvider, System::Collections::Generic::IEnumerable&lt;Type ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="ecaa2-101">實作 <see cref="T:System.IserviceProvider" /> 並提供服務 (由編輯內容所提供) 的存取。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ecaa2-101">Implements <see cref="T:System.IserviceProvider" /> and provides access to services offered by the editing context.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecaa2-102"><xref:System.Activities.Presentation.EditingContext.Services%2A> 代表由主機提供給設計工具使用的功能或由設計工具所使用的功能，以便將功能提供給編輯器中的所有設計工具。</span><span class="sxs-lookup"><span data-stu-id="ecaa2-102"><xref:System.Activities.Presentation.EditingContext.Services%2A> represent functionality that is either provided by the host for the designer to use or that is used by the designer to make functionality available to all designers within the editor.</span></span> <span data-ttu-id="ecaa2-103">它是 <xref:System.Activities.Presentation.EditingContext> 屬性從 <xref:System.Activities.Presentation.EditingContext.Services%2A> 中取得的。</span><span class="sxs-lookup"><span data-stu-id="ecaa2-103">It is obtained from the <xref:System.Activities.Presentation.EditingContext> by the <xref:System.Activities.Presentation.EditingContext.Services%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ServiceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ServiceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ecaa2-104">初始化 <see cref="T:System.Activities.Presentation.ServiceManager" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-104">Initializes a new instance of the <see cref="T:System.Activities.Presentation.ServiceManager" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public abstract bool Contains (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Contains(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Contains (serviceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Contains(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="ecaa2-105">要檢查之服務的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-105">The type of service to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecaa2-106">傳回布林值，指出服務管理員是否包含指定型別的服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-106">Returns a Boolean value that indicates whether the service manager contains a service of the given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ecaa2-107">如果已發行型別為 <paramref name="serviceType" /> 的服務，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-107">
              <see langword="true" /> if a service of type <paramref name="serviceType" /> has been published; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains&lt;TServiceType&gt;">
      <MemberSignature Language="C#" Value="public bool Contains&lt;TServiceType&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains&lt;TServiceType&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Contains``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains(Of TServiceType) () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TServiceType&gt;&#xA; bool Contains();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TServiceType" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TServiceType">
          <span data-ttu-id="ecaa2-108">要檢查之服務的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-108">The type of service to check.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="ecaa2-109">傳回布林值，指出服務管理員是否包含指定型別的服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-109">Returns a Boolean value that indicates whether the service manager contains a service of the given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ecaa2-110">如果已發行型別為 <paramref name="serviceType" /> 的服務，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-110">
              <see langword="true" /> if a service of type <paramref name="serviceType" /> has been published; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerator&lt;Type&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Type&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEnumerator () As IEnumerator(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerator&lt;Type ^&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ecaa2-111">擷取列舉程式，該列舉程式可用於列舉這個服務管理員所發行的所有服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-111">Retrieves an enumerator that can be used to enumerate all of the services that this service manager publishes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ecaa2-112">傳回 <see cref="T:System.Collections.Generic.IEnumerator`1" />，其中包含已發行之服務的列舉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-112">Returns <see cref="T:System.Collections.Generic.IEnumerator`1" />, which contains an enumeration of published services.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredService&lt;TServiceType&gt;">
      <MemberSignature Language="C#" Value="public TServiceType GetRequiredService&lt;TServiceType&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TServiceType GetRequiredService&lt;TServiceType&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.GetRequiredService``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRequiredService(Of TServiceType) () As TServiceType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TServiceType&gt;&#xA; TServiceType GetRequiredService();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TServiceType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TServiceType" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TServiceType">
          <span data-ttu-id="ecaa2-113">要擷取的服務類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-113">The type of service to retrieve.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="ecaa2-114">擷取所要求的服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-114">Retrieves the requested service.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ecaa2-115">傳回泛型型別，這個型別為服務的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-115">Returns a generic type, which is an instance of the service.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecaa2-116">不同於 <xref:System.Activities.Presentation.ServiceManager.GetService%2A>，如果沒有可用的服務，這個方法會擲回 <xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="ecaa2-116">Unlike <xref:System.Activities.Presentation.ServiceManager.GetService%2A>, this method throws a <xref:System.NotSupportedException> if the service is not available.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ecaa2-117">沒有指定型別的服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-117">There is no service of the given type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public abstract object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="ecaa2-118">要擷取的服務類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-118">The type of service to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecaa2-119">擷取所要求的服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-119">Retrieves the requested service.</span>
          </span>
          <span data-ttu-id="ecaa2-120">如果找不到服務，這個方法會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-120">This method returns <see langword="null" /> if the service could not be located.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ecaa2-121">傳回 <see cref="T:System.Object" />，為服務的執行個體，如果服務尚未發行則傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-121">Returns <see cref="T:System.Object" />, which is an instance of the service, or <see langword="null" /> if the service has not been published.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ecaa2-122">
            <paramref name="serviceType" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-122">
              <paramref name="serviceType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetService&lt;TServiceType&gt;">
      <MemberSignature Language="C#" Value="public TServiceType GetService&lt;TServiceType&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TServiceType GetService&lt;TServiceType&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.GetService``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService(Of TServiceType) () As TServiceType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TServiceType&gt;&#xA; TServiceType GetService();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TServiceType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TServiceType" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TServiceType">
          <span data-ttu-id="ecaa2-123">要擷取的服務類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-123">The type of service to retrieve.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="ecaa2-124">擷取所要求的服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-124">Retrieves the requested service.</span>
          </span>
          <span data-ttu-id="ecaa2-125">如果找不到服務，這個方法會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-125">This method returns <see langword="null" /> if the service could not be located.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ecaa2-126">傳回泛型型別，此為服務的執行個體，如果服務尚未發行則傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-126">Returns a generic type, which is an instance of the service, or <see langword="null" /> if the service has not been published.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTarget">
      <MemberSignature Language="C#" Value="protected static object GetTarget (Delegate callback);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig object GetTarget(class System.Delegate callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.GetTarget(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetTarget (callback As Delegate) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Object ^ GetTarget(Delegate ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="ecaa2-127">為其取得目標的委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-127">The delegate to get the target for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecaa2-128">傳回委派之目標物件的 Helper 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-128">A helper method that returns the target object for a delegate.</span>
          </span>
          <span data-ttu-id="ecaa2-129">如果建立委派的目的是要進行泛型委派設定 Proxy，則這個方法會正確地傳回原始物件，而非 Proxy。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-129">If the delegate was created to proxy a generic delegate, this will correctly return the original object, not the proxy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ecaa2-130">傳回回呼目標 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-130">Returns <see cref="T:System.Object" />, which is the callback target.</span>
          </span>
          <span data-ttu-id="ecaa2-131">如果回呼表示靜態物件，這個就可以傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-131">This can return <see langword="null" /> if the callback represents a static object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ecaa2-132">
            <paramref name="callback" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-132">
              <paramref name="callback" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Publish">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ecaa2-133">發行指定的服務型別，但不宣告執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-133">Publishes the given service type, but does not declare an instance.</span>
          </span>
          <span data-ttu-id="ecaa2-134">要求服務時，會叫用「發行」服務回呼來建立執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-134">When the service is requested, the Publish service callback will be invoked to create the instance.</span>
          </span>
          <span data-ttu-id="ecaa2-135">回呼只會叫用一次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-135">The callback is invoked only once.</span>
          </span>
          <span data-ttu-id="ecaa2-136">叫用回呼之後，會快取所傳回的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-136">After that, the instance it returned is cached.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Publish">
      <MemberSignature Language="C#" Value="public abstract void Publish (Type serviceType, System.Activities.Presentation.PublishServiceCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Publish(class System.Type serviceType, class System.Activities.Presentation.PublishServiceCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Activities.Presentation.PublishServiceCallback)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Publish (serviceType As Type, callback As PublishServiceCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Publish(Type ^ serviceType, System::Activities::Presentation::PublishServiceCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="callback" Type="System.Activities.Presentation.PublishServiceCallback" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="ecaa2-137">要發行之服務的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-137">The type of service to publish.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="ecaa2-138">需要服務的執行個體時會叫用的回呼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-138">A callback that will be invoked when an instance of the service is needed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecaa2-139">發行指定的服務型別，但不宣告執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-139">Publishes the specified service type, but does not declare an instance.</span>
          </span>
          <span data-ttu-id="ecaa2-140">要求服務時，會叫用「發行」服務回呼來建立執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-140">When the service is requested, the Publish service callback will be invoked to create the instance.</span>
          </span>
          <span data-ttu-id="ecaa2-141">回呼只會叫用一次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-141">The callback is invoked only once.</span>
          </span>
          <span data-ttu-id="ecaa2-142">叫用回呼之後，會快取所傳回的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-142">After that, the instance it returned is cached.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ecaa2-143">
            <paramref name="serviceType" /> 或 <paramref name="callback" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-143">
              <paramref name="serviceType" /> or <paramref name="callback" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ecaa2-144">已發行 <paramref name="serviceType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-144">
              <paramref name="serviceType" /> has already been published.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Publish">
      <MemberSignature Language="C#" Value="public abstract void Publish (Type serviceType, object serviceInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Publish(class System.Type serviceType, object serviceInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Publish(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Publish (serviceType As Type, serviceInstance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Publish(Type ^ serviceType, System::Object ^ serviceInstance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="serviceInstance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="ecaa2-145">要發行之服務的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-145">The type of service to publish.</span>
          </span>
        </param>
        <param name="serviceInstance">
          <span data-ttu-id="ecaa2-146">服務的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-146">An instance of the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecaa2-147">發行指定的服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-147">Publishes the given service.</span>
          </span>
          <span data-ttu-id="ecaa2-148">發行之後，服務執行個體仍會保留在服務管理員中，直到處置編輯內容為止。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-148">After it is published, the service instance remains in the service manager until the editing context is disposed of.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ecaa2-149">
            <paramref name="serviceType" /> 或 <paramref name="serviceInstance" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-149">
              <paramref name="serviceType" /> or <paramref name="serviceInstance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ecaa2-150">
            <paramref name="serviceInstance" /> 不是衍生自或實作 <paramref name="serviceType" />，或者已發行 <paramref name="serviceType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-150">
              <paramref name="serviceInstance" /> does not derive from or implement <paramref name="serviceType" />, or <paramref name="serviceType" /> has already been published.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Publish&lt;TServiceType&gt;">
      <MemberSignature Language="C#" Value="public void Publish&lt;TServiceType&gt; (System.Activities.Presentation.PublishServiceCallback&lt;TServiceType&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Publish&lt;TServiceType&gt;(class System.Activities.Presentation.PublishServiceCallback`1&lt;!!TServiceType&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Publish``1(System.Activities.Presentation.PublishServiceCallback{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Publish(Of TServiceType) (callback As PublishServiceCallback(Of TServiceType))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TServiceType&gt;&#xA; void Publish(System::Activities::Presentation::PublishServiceCallback&lt;TServiceType&gt; ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TServiceType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Activities.Presentation.PublishServiceCallback&lt;TServiceType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TServiceType">
          <span data-ttu-id="ecaa2-151">要發行之服務的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-151">The type of the service to publish.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="ecaa2-152">需要服務的執行個體時會叫用的回呼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-152">A callback that will be invoked when an instance of the service is needed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecaa2-153">發行指定的服務型別，但尚不宣告執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-153">Publishes the given service type, but does not declare an instance yet.</span>
          </span>
          <span data-ttu-id="ecaa2-154">當要求服務時，會叫用 <see langword="PublishServiceCallback" /> 以建立執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-154">When the service is requested, the <see langword="PublishServiceCallback" /> will be invoked to create the instance.</span>
          </span>
          <span data-ttu-id="ecaa2-155">回呼只會叫用一次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-155">The callback is invoked only once.</span>
          </span>
          <span data-ttu-id="ecaa2-156">叫用回呼之後，會快取所傳回的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-156">After that, the instance it returned is cached.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ecaa2-157">
            <paramref name="callback" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-157">
              <paramref name="callback" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Publish&lt;TServiceType&gt;">
      <MemberSignature Language="C#" Value="public void Publish&lt;TServiceType&gt; (TServiceType serviceInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Publish&lt;TServiceType&gt;(!!TServiceType serviceInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Publish``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Publish(Of TServiceType) (serviceInstance As TServiceType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TServiceType&gt;&#xA; void Publish(TServiceType serviceInstance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TServiceType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="serviceInstance" Type="TServiceType" />
      </Parameters>
      <Docs>
        <typeparam name="TServiceType">
          <span data-ttu-id="ecaa2-158">要發行之服務的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-158">The type of the service to publish.</span>
          </span>
        </typeparam>
        <param name="serviceInstance">
          <span data-ttu-id="ecaa2-159">服務的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-159">An instance of the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecaa2-160">發行指定的服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-160">Publishes the given service.</span>
          </span>
          <span data-ttu-id="ecaa2-161">發行之後，服務執行個體仍會保留在服務管理員中，直到處置編輯內容為止。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-161">After it is published, the service instance remains in the service manager until the editing context is disposed of.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ecaa2-162">
            <paramref name="serviceInstance" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-162">
              <paramref name="serviceInstance" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveCallback">
      <MemberSignature Language="C#" Value="protected static Delegate RemoveCallback (Delegate existing, Delegate toRemove);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Delegate RemoveCallback(class System.Delegate existing, class System.Delegate toRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.RemoveCallback(System.Delegate,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function RemoveCallback (existing As Delegate, toRemove As Delegate) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static Delegate ^ RemoveCallback(Delegate ^ existing, Delegate ^ toRemove);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="existing" Type="System.Delegate" />
        <Parameter Name="toRemove" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="existing">
          <span data-ttu-id="ecaa2-163">要移除回呼的現有委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-163">The existing delegate to remove the callback from.</span>
          </span>
        </param>
        <param name="toRemove">
          <span data-ttu-id="ecaa2-164">要移除的回呼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-164">The callback to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecaa2-165">Helper 方法，這個方法會執行 <see langword="Delegate.Remove" /> 作業，並且取消包裝泛型回呼 Proxy 的委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-165">A helper method that performs a <see langword="Delegate.Remove" /> operation, and unwraps delegates that are proxies to generic callbacks.</span>
          </span>
          <span data-ttu-id="ecaa2-166">請在您的 <see cref="Overload:System.Activities.Presentation.ServiceManager.UnSubscribe" /> 實作中使用這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-166">You should use this method in your <see cref="Overload:System.Activities.Presentation.ServiceManager.UnSubscribe" /> implementations.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ecaa2-167">傳回 <see cref="T:System.Delegate" />，這是要指派給現有委派的新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-167">Returns <see cref="T:System.Delegate" />, which is  a new value to assign to the existing delegate.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public abstract void Subscribe (Type serviceType, System.Activities.Presentation.SubscribeServiceCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subscribe(class System.Type serviceType, class System.Activities.Presentation.SubscribeServiceCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Subscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Subscribe (serviceType As Type, callback As SubscribeServiceCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Subscribe(Type ^ serviceType, System::Activities::Presentation::SubscribeServiceCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="callback" Type="System.Activities.Presentation.SubscribeServiceCallback" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="ecaa2-168">要訂閱的服務型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-168">The type of service to subscribe to.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="ecaa2-169">服務可用時將收到通知的回呼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-169">A callback that will be notified when the service is available.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecaa2-170">在發行所要求的服務時叫用提供的回呼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-170">Invokes the provided callback when someone has published the requested service.</span>
          </span>
          <span data-ttu-id="ecaa2-171">如果服務已可供使用，這個方法會立即叫用回呼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-171">If the service was already available, this method invokes the callback immediately.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ecaa2-172">
            <paramref name="serviceType" /> 或 <paramref name="callback" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-172">
              <paramref name="serviceType" /> or <paramref name="callback" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Subscribe&lt;TServiceType&gt;">
      <MemberSignature Language="C#" Value="public void Subscribe&lt;TServiceType&gt; (System.Activities.Presentation.SubscribeServiceCallback&lt;TServiceType&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Subscribe&lt;TServiceType&gt;(class System.Activities.Presentation.SubscribeServiceCallback`1&lt;!!TServiceType&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Subscribe``1(System.Activities.Presentation.SubscribeServiceCallback{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Subscribe(Of TServiceType) (callback As SubscribeServiceCallback(Of TServiceType))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TServiceType&gt;&#xA; void Subscribe(System::Activities::Presentation::SubscribeServiceCallback&lt;TServiceType&gt; ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TServiceType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Activities.Presentation.SubscribeServiceCallback&lt;TServiceType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TServiceType">
          <span data-ttu-id="ecaa2-173">要訂閱的服務型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-173">The type of the service to subscribe to.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="ecaa2-174">服務可用時將收到通知的回呼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-174">A callback that will be notified when the service is available.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecaa2-175">在發行所要求的服務時叫用提供的回呼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-175">Invokes the provided callback when someone has published the requested service.</span>
          </span>
          <span data-ttu-id="ecaa2-176">如果服務已可供使用，這個方法會立即叫用回呼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-176">If the service was already available, this method invokes the callback immediately.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ecaa2-177">
            <paramref name="callback" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-177">
              <paramref name="callback" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ecaa2-178">擷取列舉程式，該列舉程式可用於列舉這個服務管理員所發行的所有服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-178">Retrieves an enumerator that can be used to enumerate all of the services that this service manager publishes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ecaa2-179">傳回 <see cref="T:System.Collections.IEnumerator" />，其中包含已發行之服務的列舉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-179">Returns <see cref="T:System.Collections.IEnumerator" />, which contains an enumeration of published services.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unsubscribe">
      <MemberSignature Language="C#" Value="public abstract void Unsubscribe (Type serviceType, System.Activities.Presentation.SubscribeServiceCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unsubscribe(class System.Type serviceType, class System.Activities.Presentation.SubscribeServiceCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Unsubscribe(System.Type,System.Activities.Presentation.SubscribeServiceCallback)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Unsubscribe (serviceType As Type, callback As SubscribeServiceCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Unsubscribe(Type ^ serviceType, System::Activities::Presentation::SubscribeServiceCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="callback" Type="System.Activities.Presentation.SubscribeServiceCallback" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="ecaa2-180">要移除訂閱的服務型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-180">The type of service to remove the subscription from.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="ecaa2-181">要從訂閱移除的回呼物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-181">The callback object to remove from the subscription.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecaa2-182">移除服務型別的訂閱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-182">Removes a subscription for a service type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ecaa2-183">
            <paramref name="serviceType" /> 或 <paramref name="callback" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-183">
              <paramref name="serviceType" /> or <paramref name="callback" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Unsubscribe&lt;TServiceType&gt;">
      <MemberSignature Language="C#" Value="public void Unsubscribe&lt;TServiceType&gt; (System.Activities.Presentation.SubscribeServiceCallback&lt;TServiceType&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unsubscribe&lt;TServiceType&gt;(class System.Activities.Presentation.SubscribeServiceCallback`1&lt;!!TServiceType&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ServiceManager.Unsubscribe``1(System.Activities.Presentation.SubscribeServiceCallback{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unsubscribe(Of TServiceType) (callback As SubscribeServiceCallback(Of TServiceType))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TServiceType&gt;&#xA; void Unsubscribe(System::Activities::Presentation::SubscribeServiceCallback&lt;TServiceType&gt; ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TServiceType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Activities.Presentation.SubscribeServiceCallback&lt;TServiceType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TServiceType">
          <span data-ttu-id="ecaa2-184">要移除訂閱的服務型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-184">The type of the service to remove the subscription from.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="ecaa2-185">要從訂閱移除的回呼物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-185">The callback object to remove from the subscription.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecaa2-186">移除服務型別的訂閱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-186">Removes a subscription for a service type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ecaa2-187">
            <paramref name="callback" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecaa2-187">
              <paramref name="callback" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>