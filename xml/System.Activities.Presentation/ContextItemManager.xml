<Type Name="ContextItemManager" FullName="System.Activities.Presentation.ContextItemManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d4c008e573670c163370fd256d7a1d503eeac114" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ContextItemManager : System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.ContextItem&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ContextItemManager extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.ContextItem&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.ContextItemManager" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ContextItemManager&#xA;Implements IEnumerable(Of ContextItem)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextItemManager abstract : System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::ContextItem ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.ContextItem&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="d8b96-101">代表維持一組已發行到設計工具編輯內容中之內容項目的類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d8b96-101">Represents a class that maintains a set of context items published into the designer editing context.</span>
      </span>
      <span data-ttu-id="d8b96-102">這個類別是抽象的。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d8b96-102">This class is abstract.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b96-103"><xref:System.Activities.Presentation.ContextItem> 中包含的每個 <xref:System.Activities.Presentation.ContextItemManager> 均代表 <xref:System.Activities.Presentation.WorkflowDesigner> 中的一段暫時性狀態。</span><span class="sxs-lookup"><span data-stu-id="d8b96-103">Each <xref:System.Activities.Presentation.ContextItem> contained in the <xref:System.Activities.Presentation.ContextItemManager> represents a piece of transient state in a <xref:System.Activities.Presentation.WorkflowDesigner>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ContextItemManager ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ContextItemManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8b96-104">初始化 <see cref="T:System.Activities.Presentation.ContextItemManager" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-104">Initiates a new instance of the <see cref="T:System.Activities.Presentation.ContextItemManager" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public abstract bool Contains (Type itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Type itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.Contains(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Contains (itemType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Contains(Type ^ itemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <span data-ttu-id="d8b96-105">要檢查之項目的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-105">The type of item to check for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b96-106">在衍生類別中遭覆寫時，會傳回值以指出項目管理員是否包含指定型別的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-106">When overridden in a derived class, returns a value that indicates whether the item manager contains an item of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b96-107">如果內容包含指定的項目型別的執行個體，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-107">
              <see langword="true" /> if the context contains an instance of the specified item type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d8b96-108">
            <paramref name="itemType" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-108">
              <paramref name="itemType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Contains&lt;TItemType&gt;">
      <MemberSignature Language="C#" Value="public bool Contains&lt;TItemType&gt; () where TItemType : System.Activities.Presentation.ContextItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains&lt;(class System.Activities.Presentation.ContextItem) TItemType&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.Contains``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains(Of TItemType As ContextItem) () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TItemType&gt;&#xA; where TItemType : System::Activities::Presentation::ContextItem bool Contains();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TItemType">
          <Constraints>
            <BaseTypeName>System.Activities.Presentation.ContextItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TItemType">
          <span data-ttu-id="d8b96-109">要檢查之項目的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-109">The type of item to check for.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="d8b96-110">傳回值，這個值表示項目管理員是否包含指定型別的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-110">Returns a value that indicates whether the item manager contains an item of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b96-111">如果內容包含指定的項目型別的執行個體，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-111">
              <see langword="true" /> if the context contains an instance of the specified item type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b96-112">這個泛型方法會叫用抽象的 <xref:System.Activities.Presentation.ContextItemManager.Contains%2A> 方法，必須實作後者才能提供型別檢查功能。</span><span class="sxs-lookup"><span data-stu-id="d8b96-112">This generic method invokes the abstract <xref:System.Activities.Presentation.ContextItemManager.Contains%2A> method, which must be implemented for this method to provide the type checking functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.ContextItem&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Activities.Presentation.ContextItem&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEnumerator () As IEnumerator(Of ContextItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerator&lt;System::Activities::Presentation::ContextItem ^&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.ContextItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8b96-113">在衍生類別中遭覆寫時，會列舉編輯內容中的內容項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-113">When overridden in a derived class, enumerates the context items in the editing context.</span>
          </span>
          <span data-ttu-id="d8b96-114">除非列舉達到隔離層，否則這個列舉會包含之前的各層。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-114">This enumeration includes prior layers unless the enumerator hits an isolated layer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b96-115">傳回 <see cref="T:System.Collections.Generic.IEnumerator`1" />，其中包含內容項目的列舉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-115">Returns <see cref="T:System.Collections.Generic.IEnumerator`1" />, which contains an enumeration of context items.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTarget">
      <MemberSignature Language="C#" Value="protected static object GetTarget (Delegate callback);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig object GetTarget(class System.Delegate callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.GetTarget(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetTarget (callback As Delegate) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Object ^ GetTarget(Delegate ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="d8b96-116">所需目標的回呼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-116">The callback for the desired target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b96-117">代表傳回委派之目標物件的 Helper 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-117">Represents a helper method that returns the target object for a delegate.</span>
          </span>
          <span data-ttu-id="d8b96-118">如果建立委派的目的是要進行泛型委派設定 Proxy，則這個方法會傳回原始物件，而非 Proxy。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-118">If the delegate was created to proxy a generic delegate, this method returns the original object, not the proxy.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b96-119">傳回 <see cref="T:System.Object" />，其中包含回呼的目標物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-119">Returns <see cref="T:System.Object" />, which contains the target object of the callback.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d8b96-120">
            <paramref name="callback" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-120">
              <paramref name="callback" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.ContextItem GetValue (Type itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.ContextItem GetValue(class System.Type itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.GetValue(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValue (itemType As Type) As ContextItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::ContextItem ^ GetValue(Type ^ itemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.ContextItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <span data-ttu-id="d8b96-121">要傳回之項目的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-121">The type of item to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b96-122">在衍生類別中遭覆寫時，會傳回要求之項目型別的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-122">When overridden in a derived class, returns an instance of the requested item type.</span>
          </span>
          <span data-ttu-id="d8b96-123">如果沒有指定型別的內容項目，就會建立空的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-123">If there is no context item with the given type, an empty item will be created.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b96-124">傳回 <see cref="T:System.Activities.Presentation.ContextItem" />，其中包含所要求之型別的內容項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-124">Returns <see cref="T:System.Activities.Presentation.ContextItem" />, which contains a context item of the requested type.</span>
          </span>
          <span data-ttu-id="d8b96-125">如果這個型別的內容中沒有任何項目，則會建立一個預設項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-125">If there is no item in the context for this type, a default one is created.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d8b96-126">
            <paramref name="itemType" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-126">
              <paramref name="itemType" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue&lt;TItemType&gt;">
      <MemberSignature Language="C#" Value="public TItemType GetValue&lt;TItemType&gt; () where TItemType : System.Activities.Presentation.ContextItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!TItemType GetValue&lt;(class System.Activities.Presentation.ContextItem) TItemType&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.GetValue``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue(Of TItemType As ContextItem) () As TItemType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TItemType&gt;&#xA; where TItemType : System::Activities::Presentation::ContextItem TItemType GetValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TItemType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TItemType">
          <Constraints>
            <BaseTypeName>System.Activities.Presentation.ContextItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TItemType">
          <span data-ttu-id="d8b96-127">要傳回之項目的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-127">The type of item to return.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="d8b96-128">傳回要求之項目型別的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-128">Returns an instance of the requested item type.</span>
          </span>
          <span data-ttu-id="d8b96-129">如果沒有指定型別的內容項目，就會建立空的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-129">If there is no context item with the given type, an empty item will be created.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b96-130">傳回 <see cref="T:System.Activities.Presentation.ContextItem" />，其中包含所要求之型別的內容項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-130">Returns <see cref="T:System.Activities.Presentation.ContextItem" />, which contains a context item of the requested type.</span>
          </span>
          <span data-ttu-id="d8b96-131">如果這個型別的內容中沒有任何項目，則會建立一個預設項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-131">If there is no item in the context for this type, a default one is created.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b96-132">這個泛型方法會叫用抽象的 <xref:System.Activities.Presentation.ContextItemManager.GetValue%2A> 方法，必須實作後者才能提供取得型別功能。</span><span class="sxs-lookup"><span data-stu-id="d8b96-132">This generic method invokes the abstract <xref:System.Activities.Presentation.ContextItemManager.GetValue%2A> method, which must be implemented for this method to provide the get type functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyItemChanged">
      <MemberSignature Language="C#" Value="protected static void NotifyItemChanged (System.Activities.Presentation.EditingContext context, System.Activities.Presentation.ContextItem item, System.Activities.Presentation.ContextItem previousItem);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void NotifyItemChanged(class System.Activities.Presentation.EditingContext context, class System.Activities.Presentation.ContextItem item, class System.Activities.Presentation.ContextItem previousItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.NotifyItemChanged(System.Activities.Presentation.EditingContext,System.Activities.Presentation.ContextItem,System.Activities.Presentation.ContextItem)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub NotifyItemChanged (context As EditingContext, item As ContextItem, previousItem As ContextItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void NotifyItemChanged(System::Activities::Presentation::EditingContext ^ context, System::Activities::Presentation::ContextItem ^ item, System::Activities::Presentation::ContextItem ^ previousItem);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.Presentation.EditingContext" />
        <Parameter Name="item" Type="System.Activities.Presentation.ContextItem" />
        <Parameter Name="previousItem" Type="System.Activities.Presentation.ContextItem" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="d8b96-133">使用中的 <see cref="T:System.Activities.Presentation.EditingContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-133">The <see cref="T:System.Activities.Presentation.EditingContext" /> in use.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="d8b96-134">新的 <see cref="T:System.Activities.Presentation.ContextItem" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-134">The new <see cref="T:System.Activities.Presentation.ContextItem" />.</span>
          </span>
        </param>
        <param name="previousItem">
          <span data-ttu-id="d8b96-135">上一個 <see cref="T:System.Activities.Presentation.ContextItem" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-135">The previous <see cref="T:System.Activities.Presentation.ContextItem" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b96-136">代表 Helper 方法，這個方法會叫用受保護的 <see cref="M:System.Activities.Presentation.ContextItem.OnItemChanged(System.Activities.Presentation.EditingContext,System.Activities.Presentation.ContextItem)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-136">Represents a helper method that invokes the protected <see cref="M:System.Activities.Presentation.ContextItem.OnItemChanged(System.Activities.Presentation.EditingContext,System.Activities.Presentation.ContextItem)" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d8b96-137">
            <paramref name="context" />
            <paramref name="item" /> 或 <paramref name="previousItem" /> 是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-137">
              <paramref name="context" />, <paramref name="item" />, or <paramref name="previousItem" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveCallback">
      <MemberSignature Language="C#" Value="protected static Delegate RemoveCallback (Delegate existing, Delegate toRemove);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Delegate RemoveCallback(class System.Delegate existing, class System.Delegate toRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.RemoveCallback(System.Delegate,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function RemoveCallback (existing As Delegate, toRemove As Delegate) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static Delegate ^ RemoveCallback(Delegate ^ existing, Delegate ^ toRemove);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="existing" Type="System.Delegate" />
        <Parameter Name="toRemove" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="existing">
          <span data-ttu-id="d8b96-138">現有的委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-138">The existing delegate.</span>
          </span>
        </param>
        <param name="toRemove">
          <span data-ttu-id="d8b96-139">要從 <c>existing</c> 中移除的委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-139">The delegate to be removed from <c>existing</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b96-140">代表 Helper 方法，這個方法會執行委派移除，也會取消包裝泛型回呼 Proxy 的委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-140">Represents a helper method that performs delegate removals and that unwraps delegates that are proxies to generic callbacks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b96-141">傳回 <see cref="T:System.Delegate" />，其中包含應指派給 <paramref name="existing" /> 的新委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-141">Returns <see cref="T:System.Delegate" />, which contains the new delegate that should be assigned to <paramref name="existing" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b96-142">請在您的 <xref:System.Activities.Presentation.ContextItemManager.Unsubscribe%2A> 方法實作中使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="d8b96-142">Use this method in your implementations of the <xref:System.Activities.Presentation.ContextItemManager.Unsubscribe%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public abstract void SetValue (System.Activities.Presentation.ContextItem value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(class System.Activities.Presentation.ContextItem value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.SetValue(System.Activities.Presentation.ContextItem)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetValue (value As ContextItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetValue(System::Activities::Presentation::ContextItem ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Activities.Presentation.ContextItem" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d8b96-143">要設定為 <see cref="T:System.Activities.Presentation.ContextItem" /> 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-143">The value to set into the <see cref="T:System.Activities.Presentation.ContextItem" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b96-144">在衍生類別中遭覆寫時，會將內容項目設定為指定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-144">When overridden in a derived class, sets a context item to the specified value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b96-145">未通過`null`值。</span><span class="sxs-lookup"><span data-stu-id="d8b96-145">Do not pass a `null` value.</span></span> <span data-ttu-id="d8b96-146">若要將 <xref:System.Activities.Presentation.ContextItem> 設定為空值，請使用預設的建構函式建立項目的執行個體。</span><span class="sxs-lookup"><span data-stu-id="d8b96-146">To set a <xref:System.Activities.Presentation.ContextItem> to an empty value, create an instance of the item using a default constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public abstract void Subscribe (Type contextItemType, System.Activities.Presentation.SubscribeContextCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subscribe(class System.Type contextItemType, class System.Activities.Presentation.SubscribeContextCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.Subscribe(System.Type,System.Activities.Presentation.SubscribeContextCallback)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Subscribe (contextItemType As Type, callback As SubscribeContextCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Subscribe(Type ^ contextItemType, System::Activities::Presentation::SubscribeContextCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextItemType" Type="System.Type" />
        <Parameter Name="callback" Type="System.Activities.Presentation.SubscribeContextCallback" />
      </Parameters>
      <Docs>
        <param name="contextItemType">
          <span data-ttu-id="d8b96-147">您要訂閱的項目型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-147">The type of item you want to subscribe to.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b96-148">
            <c>contextItemType</c> 變更時叫用的 <see cref="T:System.Activities.Presentation.SubscribeContextCallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-148">The <see cref="T:System.Activities.Presentation.SubscribeContextCallback" /> that is invoked when <c>contextItemType</c> changes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b96-149">在衍生類別中遭覆寫時，會加入當指定之項目型別的內容項目變更時，所叫用的事件回呼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-149">When overridden in a derived class, adds an event callback that is invoked when a context item of the specified item type changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d8b96-150">
            <paramref name="contextItemType" /> 或 <paramref name="callback" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-150">
              <paramref name="contextItemType" /> or <paramref name="callback" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Subscribe&lt;TContextItemType&gt;">
      <MemberSignature Language="C#" Value="public void Subscribe&lt;TContextItemType&gt; (System.Activities.Presentation.SubscribeContextCallback&lt;TContextItemType&gt; callback) where TContextItemType : System.Activities.Presentation.ContextItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Subscribe&lt;(class System.Activities.Presentation.ContextItem) TContextItemType&gt;(class System.Activities.Presentation.SubscribeContextCallback`1&lt;!!TContextItemType&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.Subscribe``1(System.Activities.Presentation.SubscribeContextCallback{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Subscribe(Of TContextItemType As ContextItem) (callback As SubscribeContextCallback(Of TContextItemType))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TContextItemType&gt;&#xA; where TContextItemType : System::Activities::Presentation::ContextItem void Subscribe(System::Activities::Presentation::SubscribeContextCallback&lt;TContextItemType&gt; ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContextItemType">
          <Constraints>
            <BaseTypeName>System.Activities.Presentation.ContextItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Activities.Presentation.SubscribeContextCallback&lt;TContextItemType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TContextItemType">
          <span data-ttu-id="d8b96-151">您要訂閱的項目型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-151">The type of item you want to subscribe to.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="d8b96-152">
            <c>contextItemType</c> 變更時叫用的 <see cref="T:System.Activities.Presentation.SubscribeContextCallback`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-152">A <see cref="T:System.Activities.Presentation.SubscribeContextCallback`1" /> that is invoked when <c>contextItemType</c> changes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b96-153">加入當指定之項目型別的內容項目變更時，所叫用的事件回呼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-153">Adds an event callback that is invoked when a context item of the specified item type changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d8b96-154">
            <paramref name="contextItemType" /> 或 <paramref name="callback" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-154">
              <paramref name="contextItemType" /> or <paramref name="callback" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8b96-155">列舉編輯內容中的內容項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-155">Enumerates the context items in the editing context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b96-156">傳回 <see cref="T:System.Collections.IEnumerator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-156">Returns <see cref="T:System.Collections.IEnumerator" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unsubscribe">
      <MemberSignature Language="C#" Value="public abstract void Unsubscribe (Type contextItemType, System.Activities.Presentation.SubscribeContextCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unsubscribe(class System.Type contextItemType, class System.Activities.Presentation.SubscribeContextCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.Unsubscribe(System.Type,System.Activities.Presentation.SubscribeContextCallback)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Unsubscribe (contextItemType As Type, callback As SubscribeContextCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Unsubscribe(Type ^ contextItemType, System::Activities::Presentation::SubscribeContextCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextItemType" Type="System.Type" />
        <Parameter Name="callback" Type="System.Activities.Presentation.SubscribeContextCallback" />
      </Parameters>
      <Docs>
        <param name="contextItemType">
          <span data-ttu-id="d8b96-157">要從其中移除回呼之內容項目的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-157">The type of context item to remove the callback from.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b96-158">要移除的 <see cref="T:System.Activities.Presentation.SubscribeContextCallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-158">The <see cref="T:System.Activities.Presentation.SubscribeContextCallback" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b96-159">在衍生類別中遭覆寫時，會移除訂閱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-159">When overridden in a derived class, removes a subscription.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d8b96-160">
            <paramref name="callback" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-160">
              <paramref name="callback" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Unsubscribe&lt;TContextItemType&gt;">
      <MemberSignature Language="C#" Value="public void Unsubscribe&lt;TContextItemType&gt; (System.Activities.Presentation.SubscribeContextCallback&lt;TContextItemType&gt; callback) where TContextItemType : System.Activities.Presentation.ContextItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unsubscribe&lt;(class System.Activities.Presentation.ContextItem) TContextItemType&gt;(class System.Activities.Presentation.SubscribeContextCallback`1&lt;!!TContextItemType&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.ContextItemManager.Unsubscribe``1(System.Activities.Presentation.SubscribeContextCallback{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unsubscribe(Of TContextItemType As ContextItem) (callback As SubscribeContextCallback(Of TContextItemType))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TContextItemType&gt;&#xA; where TContextItemType : System::Activities::Presentation::ContextItem void Unsubscribe(System::Activities::Presentation::SubscribeContextCallback&lt;TContextItemType&gt; ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContextItemType">
          <Constraints>
            <BaseTypeName>System.Activities.Presentation.ContextItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="callback" Type="System.Activities.Presentation.SubscribeContextCallback&lt;TContextItemType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TContextItemType">
          <span data-ttu-id="d8b96-161">要從其中移除回呼之內容項目的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-161">The type of context item to remove the callback from.</span>
          </span>
        </typeparam>
        <param name="callback">
          <span data-ttu-id="d8b96-162">要移除的 <see cref="T:System.Activities.Presentation.SubscribeContextCallback`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-162">The <see cref="T:System.Activities.Presentation.SubscribeContextCallback`1" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b96-163">移除訂閱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-163">Removes a subscription.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d8b96-164">
            <paramref name="callback" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b96-164">
              <paramref name="callback" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>