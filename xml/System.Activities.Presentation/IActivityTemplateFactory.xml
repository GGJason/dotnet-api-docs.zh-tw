<Type Name="IActivityTemplateFactory" FullName="System.Activities.Presentation.IActivityTemplateFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="453768f9dc573fccf4d6777fd4535e743d75edf9" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39516456" /></Metadata><TypeSignature Language="C#" Value="public interface IActivityTemplateFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IActivityTemplateFactory" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.IActivityTemplateFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IActivityTemplateFactory" />
  <TypeSignature Language="C++ CLI" Value="public interface class IActivityTemplateFactory" />
  <TypeSignature Language="F#" Value="type IActivityTemplateFactory = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6ed90-101">定義類別所實作的 Factory 方法，以建立封裝「預留位置」<see cref="T:System.Activities.Activity" /> 物件的範本。</span><span class="sxs-lookup"><span data-stu-id="6ed90-101">Defines the factory method that a class implements to create a template that encapsulates "placeholder" <see cref="T:System.Activities.Activity" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ed90-102">自訂活動範本必須實作 <xref:System.Activities.Presentation.IActivityTemplateFactory>。</span><span class="sxs-lookup"><span data-stu-id="6ed90-102">Custom activity templates must implement the <xref:System.Activities.Presentation.IActivityTemplateFactory>.</span></span> <span data-ttu-id="6ed90-103">自訂活動範本會用來自訂活動的組態，包括自訂複合活動，因此使用者不需要個別建立每個活動以及手動設定其所有屬性和其他設定。</span><span class="sxs-lookup"><span data-stu-id="6ed90-103">Custom activity templates are used to customize the configuration of activities, including custom composite activities, so that users do not have to create each of the activities individually and configure all their properties and other settings manually.</span></span>  
  
   
  
## Examples  
  
```csharp  
  
public sealed class MyDelayActivity : IActivityTemplateFactory  
  
{  
     public Activity Create(DependencyObject target)  
     {  
         return new System.Activities.Statements.Delay  
         {  
             DisplayName = "DelayActivityTemplate",  
             Duration = new TimeSpan(0,0,10)  
  
         };  
     }  
 }  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public System.Activities.Activity Create (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Activity Create(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.IActivityTemplateFactory.Create(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (target As DependencyObject) As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Activity ^ Create(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Create : System.Windows.DependencyObject -&gt; System.Activities.Activity" Usage="iActivityTemplateFactory.Create target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="6ed90-104">此 <see cref="T:System.Activities.Presentation.IActivityTemplateFactory" /> 執行個體所使用的相依性物件。</span><span class="sxs-lookup"><span data-stu-id="6ed90-104">The dependency object used by this instance of an <see cref="T:System.Activities.Presentation.IActivityTemplateFactory" />.</span></span></param>
        <summary><span data-ttu-id="6ed90-105">建立 <see cref="T:System.Activities.Activity" /> 類別的執行個體，這個執行個體表示指定之目標物件的預先定義設計模式。</span><span class="sxs-lookup"><span data-stu-id="6ed90-105">Creates an instance of the <see cref="T:System.Activities.Activity" /> class that represents a predefined design pattern for the specified target object.</span></span></summary>
        <returns><span data-ttu-id="6ed90-106">工作流程 <see cref="T:System.Activities.Activity" />。</span><span class="sxs-lookup"><span data-stu-id="6ed90-106">A workflow   <see cref="T:System.Activities.Activity" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ed90-107">您可以使用這個項目來建立和設定在自訂活動範本中使用的活動執行個體。</span><span class="sxs-lookup"><span data-stu-id="6ed90-107">Use this to create and configure the activity instances used in a custom activity template.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ed90-108">建立一個使用十秒持續時間設定 Delay 活動的範本。</span><span class="sxs-lookup"><span data-stu-id="6ed90-108">Create a template that configures a Delay activity with a duration of ten seconds.</span></span>  
  
```csharp  
  
public sealed class MyDelayActivity : IActivityTemplateFactory  
  
{  
     public Activity Create(DependencyObject target)  
     {  
         return new System.Activities.Statements.Delay  
         {  
             DisplayName = "DelayActivityTemplate",  
             Duration = new TimeSpan(0,0,10)  
  
         };  
     }  
 }  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>