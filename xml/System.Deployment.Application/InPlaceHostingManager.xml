<Type Name="InPlaceHostingManager" FullName="System.Deployment.Application.InPlaceHostingManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="318b3adb922726e41d39a80b9e59598efbc9e92e" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
    <Meta Name="ms.locfileid" Value="32037166" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InPlaceHostingManager : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InPlaceHostingManager extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Deployment.Application.InPlaceHostingManager" />
  <TypeSignature Language="VB.NET" Value="Public Class InPlaceHostingManager&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class InPlaceHostingManager : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Deployment</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>在電腦上安裝或更新 ClickOnce 部署。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用<xref:System.Deployment.Application.InPlaceHostingManager>撰寫程式的安裝[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]應用程式以程式設計的方式。 比方說，您可以在受控制的系統管理軟體 (SMS) 環境中，或在需要複雜的安裝，執行數個在本機電腦上的安裝前或安裝後作業的情況下，使用這個類別。 一般而言，您會想要在以特定順序中使用這個類別的成員：  
  
1.  建立 <xref:System.Deployment.Application.InPlaceHostingManager> 的新執行個體。  
  
2.  下載部署資訊清單使用<xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>。  
  
3.  應用程式可以藉由執行的適當權限的核取<xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>。  
  
4.  下載並安裝應用程式使用<xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>。  
  
-   如果您呼叫這些參數的任何順序，它們將會擲回例外狀況。  
  
 <xref:System.Deployment.Application.InPlaceHostingManager> 可以安裝[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]應用程式，但無法執行。 某些方法，在這個類別，例如<xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A>，已保留供下載的 Windows Presentation Foundation 應用程式的網頁瀏覽器內執行時。  
  
 若要使用<xref:System.Deployment.Application.InPlaceHostingManager>下載及安裝應用程式，您必須確定憑證來簽署[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]您計劃安裝應用程式已安裝用戶端電腦上為受信任的發行者。 如需有關受信任的發行者的詳細資訊，請參閱[受信任的應用程式部署概觀](http://msdn.microsoft.com/library/b24a1702-8fbe-45b1-87a0-9618a0708f1d)。  
  
> [!NOTE]
>  目前沒有可防止產品限制<xref:System.Deployment.Application.InPlaceHostingManager>無法在偵錯使用 Visual Studio 程式碼正常運作。 如果您使用偵錯您的應用程式，Visual Studio 中 F5 鍵，此範例將會擲回神秘的例外狀況時呼叫<xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>。 若要偵錯使用 Visual Studio，但不偵錯，啟動應用程式，再附加偵錯工具。 或者，您可以使用另一個偵錯工具，例如 WinDbg。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Deployment.Application.InPlaceHostingManager>安裝[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]應用程式以程式設計方式在用戶端電腦上。  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#1)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>建立 <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> 的新執行個體，以下載及安裝指定的應用程式。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InPlaceHostingManager (Uri deploymentManifest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri deploymentManifest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (deploymentManifest As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InPlaceHostingManager(Uri ^ deploymentManifest);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="deploymentManifest" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="deploymentManifest">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 應用程式部署資訊清單的統一資源識別元 (<see cref="T:System.Uri" />)。</param>
        <summary>建立 <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> 的新執行個體，以下載及安裝指定的瀏覽器架構應用程式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您想要下載的 Windows Presentation Foundation 應用程式裝載 Web 瀏覽器中，會使用這個建構函式。 若要下載 Windows Form 為基礎的應用程式部署使用[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]，使用<xref:System.Deployment.Application.InPlaceHostingManager.%23ctor%2A>具有建構函式`launchInHostProcess`參數設定為`false`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> 只能在 Windows XP 或較新版本的 Windows 作業系統中使用。</exception>
        <exception cref="T:System.ArgumentNullException">無法對 <paramref name="deploymentManifest" /> 引數傳遞 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="deploymentManifest" /> 使用了 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 不支援的 URI 配置。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InPlaceHostingManager (Uri deploymentManifest, bool launchInHostProcess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri deploymentManifest, bool launchInHostProcess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (deploymentManifest As Uri, launchInHostProcess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InPlaceHostingManager(Uri ^ deploymentManifest, bool launchInHostProcess);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="deploymentManifest" Type="System.Uri" />
        <Parameter Name="launchInHostProcess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deploymentManifest">將要安裝應用程式部署資訊清單的統一資源識別元 (URI)。</param>
        <param name="launchInHostProcess">指出此應用程式是否將在主機上執行，例如 Web 瀏覽器。 若是獨立的應用程式，則將此值設定為 <see langword="false" />。</param>
        <summary>建立 <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> 的新執行個體，以下載及安裝指定的應用程式；這個應用程式可以是獨立的 Windows Form 架構應用程式或是裝載在 Web 瀏覽器中的應用程式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何建立執行個體<xref:System.Deployment.Application.InPlaceHostingManager>，可讓您下載 Windows Form 為基礎的應用程式部署使用[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]。  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#2)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> 只能在 Windows XP 或較新版本的 Windows 作業系統中使用。</exception>
        <exception cref="T:System.ArgumentNullException">無法對 <paramref name="deploymentManifest" /> 引數傳遞 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="deploymentManifest" /> 使用了 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 不支援的 URI 配置。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AssertApplicationRequirements">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>判斷 ClickOnce 應用程式是否有適當的使用權限和平台相依性，得以在本機電腦上執行。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AssertApplicationRequirements">
      <MemberSignature Language="C#" Value="public void AssertApplicationRequirements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssertApplicationRequirements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssertApplicationRequirements ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssertApplicationRequirements();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>判斷 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 應用程式是否有適當的使用權限和平台相依性，得以在本機電腦上執行。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您必須呼叫<xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>之後<xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>成功傳回。 您必須呼叫<xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>除非您呼叫<xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>，它會傳回不會發生錯誤。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>，它將成功的主體中呼叫此<xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted>事件處理常式。  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在 <see cref="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" /> 方法之前呼叫這個方法時引發。</exception>
      </Docs>
    </Member>
    <Member MemberName="AssertApplicationRequirements">
      <MemberSignature Language="C#" Value="public void AssertApplicationRequirements (bool grantApplicationTrust);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssertApplicationRequirements(bool grantApplicationTrust) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssertApplicationRequirements (grantApplicationTrust As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssertApplicationRequirements(bool grantApplicationTrust);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="grantApplicationTrust" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="grantApplicationTrust">如果為 <see langword="true" />，應用程式便會嘗試將其使用權限提高至必要的層級。</param>
        <summary>判斷 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 應用程式是否有適當的使用權限和平台相依性，得以在本機電腦上執行。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`grantApplicationTrust`是`true`，<xref:System.Deployment.Application.InPlaceHostingManager>就會授與應用程式提高的權限，則當需要它們。 這樣做才可行，如果<xref:System.Deployment.Application.InPlaceHostingManager>能夠授與這些權限。 例如，如果[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]為較大的封裝的一部分安裝應用程式和安裝程式授與完全信任，<xref:System.Deployment.Application.InPlaceHostingManager>能夠授與[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]完全信任的應用程式。 如果`grantApplicationTrust`是`false`，應用程式將不會授與任何權限。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取消非同步下載作業。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>釋放 <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> 所使用的所有資源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A> 使用完畢時，請呼叫 <xref:System.Deployment.Application.InPlaceHostingManager>。 <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A> 方法會將 <xref:System.Deployment.Application.InPlaceHostingManager> 保留在無法使用的狀態。 在呼叫<xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A>，您必須釋放所有參考<xref:System.Deployment.Application.InPlaceHostingManager>讓記憶體回收行程可以回收記憶體的<xref:System.Deployment.Application.InPlaceHostingManager>所佔用。 如需詳細資訊，請參閱[清除 Unmanaged 資源上](~/docs/standard/garbage-collection/unmanaged.md)和[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。  
  
> [!NOTE]
>  在您釋放最後一個 <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A> 參考之前，請務必呼叫 <xref:System.Deployment.Application.InPlaceHostingManager>。 否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <xref:System.Deployment.Application.InPlaceHostingManager> 物件的 `Finalize` 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadApplicationAsync">
      <MemberSignature Language="C#" Value="public void DownloadApplicationAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadApplicationAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadApplicationAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadApplicationAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在背景中下載應用程式更新。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您必須呼叫這個方法之後呼叫<xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>，它會呼叫成功結尾處的<xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted>事件處理常式。  
  
 下列程式碼範例假設您有已定義和建立的執行個體<xref:System.Deployment.Application.InPlaceHostingManager>名為`iphm`。  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在 <see cref="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" /> 和 <see cref="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements" /> 方法之前呼叫這個方法時引發。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadApplicationCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt; DownloadApplicationCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt; DownloadApplicationCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event DownloadApplicationCompleted As EventHandler(Of DownloadApplicationCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Deployment::Application::DownloadApplicationCompletedEventArgs ^&gt; ^ DownloadApplicationCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在應用程式已完成下載至本機電腦時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您要安裝的 Windows Form 應用程式，您必須指示使用者啟動應用程式本身。您無法使用，以程式設計方式啟動 Windows Form 應用程式<xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例示範的處理常式<xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted>事件。  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#7)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadProgressChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Deployment.Application.DownloadProgressChangedEventArgs&gt; DownloadProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Deployment.Application.DownloadProgressChangedEventArgs&gt; DownloadProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DownloadProgressChanged As EventHandler(Of DownloadProgressChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Deployment::Application::DownloadProgressChangedEventArgs ^&gt; ^ DownloadProgressChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Deployment.Application.DownloadProgressChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在應用程式或資訊清單下載狀態變更時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在主控台應用程式中，事件會指派給執行緒從執行緒集區。 因此，您可能會收到進度更新事件失序，後續的事件顯示降低相較於先前的事件。 因為 Windows Form 中的事件會依序處理，從使用者介面 (UI) 執行緒的訊息佇列，不會看到 Windows Form 應用程式中，這類行為。  
  
   
  
## Examples  
 下列程式碼範例示範如何更新<xref:System.Windows.Forms.ToolStripProgressBar>內包含之<xref:System.Windows.Forms.StatusStrip>。  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#6)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.ObjectHandle Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.Remoting.ObjectHandle Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute () As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::ObjectHandle ^ Execute();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>啟動 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 應用程式，但僅限此應用程式是正在 Web 瀏覽器中執行之 Windows Presentation Foundation 架構應用程式的情況。</summary>
        <returns>
          <see cref="T:System.Runtime.Remoting.ObjectHandle" />，對應至啟動的應用程式。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法是僅適用於 Windows Presentation Foundation 為基礎的應用程式可以裝載 Web 瀏覽器中 (也就是說，其部署資訊清單定義`hostInBrowser`XML 項目)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestAsync">
      <MemberSignature Language="C#" Value="public void GetManifestAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetManifestAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetManifestAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetManifestAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在幕後下載 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 應用程式的部署資訊清單，並在作業完成或發生錯誤時引發事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要接收通知此事件完成時，建立事件處理常式<xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted>事件。 如果呼叫這個事件，而且沒有錯誤會以<xref:System.Deployment.Application.GetManifestCompletedEventArgs>，接下來應該呼叫<xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>以確認應用程式必須在本機電腦上執行的權限。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫<xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>方法。 處理常式<xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted>事件回呼會檢查以查看顯示下載已順利完成，且如果是的話，會提示使用者與應用程式的其他資訊。 如果使用者同意繼續進行安裝時，處理常式會呼叫<xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>。  
  
 下列程式碼範例假設您有已定義和建立的執行個體<xref:System.Deployment.Application.InPlaceHostingManager>名為`iphm`。  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Deployment.Application.GetManifestCompletedEventArgs&gt; GetManifestCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Deployment.Application.GetManifestCompletedEventArgs&gt; GetManifestCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event GetManifestCompleted As EventHandler(Of GetManifestCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Deployment::Application::GetManifestCompletedEventArgs ^&gt; ^ GetManifestCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Deployment.Application.GetManifestCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在部署資訊清單已下載至本機電腦時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>屬性<xref:System.Deployment.Application.GetManifestCompletedEventArgs>來檢查是否<xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>順利完成，或傳回錯誤。 如果<xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>為 null，<xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>順利完成，而且您可以呼叫<xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫<xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>方法。 處理常式<xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted>事件回呼會檢查以查看顯示下載已順利完成，且如果是的話，會提示使用者與應用程式的其他資訊。 如果使用者同意繼續進行安裝時，處理常式會呼叫<xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>。  
  
 下列程式碼範例假設您有已定義和建立的執行個體<xref:System.Deployment.Application.InPlaceHostingManager>名為`iphm`。  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#2)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#2)]  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UninstallCustomAddIn">
      <MemberSignature Language="C#" Value="public static void UninstallCustomAddIn (string subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UninstallCustomAddIn(string subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UninstallCustomAddIn (subscriptionId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UninstallCustomAddIn(System::String ^ subscriptionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">包含訂閱識別項的字串，指出所要移除的增益集。</param>
        <summary>移除先前所安裝之應用程式的使用者定義元件。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="subscriptionId" /> 不是有效的訂閱識別，或沒有包含名稱、公開金鑰語彙基元、處理器架構和版本號碼。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionId" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="UninstallCustomUXApplication">
      <MemberSignature Language="C#" Value="public static void UninstallCustomUXApplication (string subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UninstallCustomUXApplication(string subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UninstallCustomUXApplication (subscriptionId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UninstallCustomUXApplication(System::String ^ subscriptionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">包含訂閱識別項的字串，指出所要移除的 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 應用程式。</param>
        <summary>移除包含 &lt;customUX&gt; 項目的 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 應用程式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會解除安裝先前安裝[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]應用程式，使用`<customUX>`中的項目[ &lt;entryPoint&gt;元素](http://msdn.microsoft.com/library/10ad3083-10c1-4189-a870-9bba2eab244f)。  
  
 自訂安裝程式不會建立的新增或移除程式項目[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]應用程式必須儲存訂用帳戶識別碼，在中找到<xref:System.Deployment.Application.GetManifestCompletedEventArgs.SubscriptionIdentity%2A>屬性在安裝期間。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>