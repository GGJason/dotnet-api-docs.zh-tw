<Type Name="XsltLibrary" FullName="System.Xml.Xsl.Runtime.XsltLibrary">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d6536df9dd4563676db436e705180e14fc46e87a" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51886624" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XsltLibrary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XsltLibrary extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.Runtime.XsltLibrary" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XsltLibrary" />
  <TypeSignature Language="C++ CLI" Value="public ref class XsltLibrary sealed" />
  <TypeSignature Language="F#" Value="type XsltLibrary = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlXml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>實作不同的 <see langword="XPath" /> 和 <see langword="XSLT" /> 函式。</summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="CheckScriptNamespace">
      <MemberSignature Language="C#" Value="public int CheckScriptNamespace (string nsUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CheckScriptNamespace(string nsUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XsltLibrary.CheckScriptNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckScriptNamespace (nsUri As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CheckScriptNamespace(System::String ^ nsUri);" />
      <MemberSignature Language="F#" Value="member this.CheckScriptNamespace : string -&gt; int" Usage="xsltLibrary.CheckScriptNamespace nsUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nsUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="nsUri">命名空間 URI。</param>
        <summary>確認擴充命名空間與指令碼命名空間互不衝突。</summary>
        <returns>僅供內部基礎結構使用的整數。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ElementAvailable">
      <MemberSignature Language="C#" Value="public bool ElementAvailable (System.Xml.XmlQualifiedName name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ElementAvailable(class System.Xml.XmlQualifiedName name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XsltLibrary.ElementAvailable(System.Xml.XmlQualifiedName)" />
      <MemberSignature Language="VB.NET" Value="Public Function ElementAvailable (name As XmlQualifiedName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ElementAvailable(System::Xml::XmlQualifiedName ^ name);" />
      <MemberSignature Language="F#" Value="member this.ElementAvailable : System.Xml.XmlQualifiedName -&gt; bool" Usage="xsltLibrary.ElementAvailable name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="name">XML 完整名稱。</param>
        <summary>將引數評估為 XML 完整名稱的字串。 這個方法會實作 [W3C XSL Transformations (XSLT)](https://go.microsoft.com/fwlink/?LinkID=49919) (英文) 指定的 <c>element-available</c>函式。</summary>
        <returns>如果<see href="https://www.w3.org/TR/xml-names11/">擴充名稱</see> (英文) 是指令的名稱，則傳回 <see langword="true" />。 如果 <see langword="expanded name" /> 具有等同於 XSLT 命名空間 URI 的命名空間 URI，則會參考 XSLT 定義的項目。 否則，擴充的名稱會參考擴充項目。 如果 <see langword="expanded name" /> 具有 null 命名空間 URI，則 element-available 函式會傳回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 限定的名稱已擴充為`expanded name`運算式範圍中使用的命名空間宣告。 <xref:System.Xml.Xsl.Runtime.XsltLibrary.ElementAvailable%2A>函式會傳回`true`只有`expanded name`是指令的名稱。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="EqualityOperator">
      <MemberSignature Language="C#" Value="public bool EqualityOperator (double opCode, System.Collections.Generic.IList&lt;System.Xml.XPath.XPathItem&gt; left, System.Collections.Generic.IList&lt;System.Xml.XPath.XPathItem&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EqualityOperator(float64 opCode, class System.Collections.Generic.IList`1&lt;class System.Xml.XPath.XPathItem&gt; left, class System.Collections.Generic.IList`1&lt;class System.Xml.XPath.XPathItem&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XsltLibrary.EqualityOperator(System.Double,System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
      <MemberSignature Language="VB.NET" Value="Public Function EqualityOperator (opCode As Double, left As IList(Of XPathItem), right As IList(Of XPathItem)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EqualityOperator(double opCode, System::Collections::Generic::IList&lt;System::Xml::XPath::XPathItem ^&gt; ^ left, System::Collections::Generic::IList&lt;System::Xml::XPath::XPathItem ^&gt; ^ right);" />
      <MemberSignature Language="F#" Value="member this.EqualityOperator : double * System.Collections.Generic.IList&lt;System.Xml.XPath.XPathItem&gt; * System.Collections.Generic.IList&lt;System.Xml.XPath.XPathItem&gt; -&gt; bool" Usage="xsltLibrary.EqualityOperator (opCode, left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opCode" Type="System.Double" />
        <Parameter Name="left" Type="System.Collections.Generic.IList&lt;System.Xml.XPath.XPathItem&gt;" />
        <Parameter Name="right" Type="System.Collections.Generic.IList&lt;System.Xml.XPath.XPathItem&gt;" />
      </Parameters>
      <Docs>
        <param name="opCode">指定待執行作業的 <see cref="T:System.Double" />。</param>
        <param name="left">型別 <see cref="T:System.Collections.Generic.IList`1" /> 的 <see cref="T:System.Xml.XPath.XPathItem" />。</param>
        <param name="right">型別 <see cref="T:System.Collections.Generic.IList`1" /> 的 <see cref="T:System.Xml.XPath.XPathItem" />。</param>
        <summary>判斷型別 <see cref="T:System.Xml.XPath.XPathItem" /> 集合之間是否相等。</summary>
        <returns>如果集合相等，則傳回 <see langword="true" />，否則傳回 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="FormatMessage">
      <MemberSignature Language="C#" Value="public string FormatMessage (string res, System.Collections.Generic.IList&lt;string&gt; args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string FormatMessage(string res, class System.Collections.Generic.IList`1&lt;string&gt; args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XsltLibrary.FormatMessage(System.String,System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatMessage (res As String, args As IList(Of String)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ FormatMessage(System::String ^ res, System::Collections::Generic::IList&lt;System::String ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.FormatMessage : string * System.Collections.Generic.IList&lt;string&gt; -&gt; string" Usage="xsltLibrary.FormatMessage (res, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="res" Type="System.String" />
        <Parameter Name="args" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="res">包含訊息資源的字串。</param>
        <param name="args">表示方法中引數的字串清單。</param>
        <summary>格式化由 <paramref name="res" /> 參數提供的格式化字串以及 <paramref name="args" /> 參數包含的引數所組成的例外狀況訊息。</summary>
        <returns>包含格式化例外狀況訊息的字串。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="FormatNumberDynamic">
      <MemberSignature Language="C#" Value="public string FormatNumberDynamic (double value, string formatPicture, System.Xml.XmlQualifiedName decimalFormatName, string errorMessageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string FormatNumberDynamic(float64 value, string formatPicture, class System.Xml.XmlQualifiedName decimalFormatName, string errorMessageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XsltLibrary.FormatNumberDynamic(System.Double,System.String,System.Xml.XmlQualifiedName,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatNumberDynamic (value As Double, formatPicture As String, decimalFormatName As XmlQualifiedName, errorMessageName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ FormatNumberDynamic(double value, System::String ^ formatPicture, System::Xml::XmlQualifiedName ^ decimalFormatName, System::String ^ errorMessageName);" />
      <MemberSignature Language="F#" Value="member this.FormatNumberDynamic : double * string * System.Xml.XmlQualifiedName * string -&gt; string" Usage="xsltLibrary.FormatNumberDynamic (value, formatPicture, decimalFormatName, errorMessageName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="formatPicture" Type="System.String" />
        <Parameter Name="decimalFormatName" Type="System.Xml.XmlQualifiedName" />
        <Parameter Name="errorMessageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">包含要格式化之值的 <see cref="T:System.Double" />。</param>
        <param name="formatPicture">包含設定圖片格式的字串。</param>
        <param name="decimalFormatName">包含格式名稱的 <see cref="T:System.Xml.XmlQualifiedName" />。</param>
        <param name="errorMessageName">包含錯誤訊息名稱的字串。</param>
        <summary>實作 format-number() XSLT 函式。 如需詳細資訊，請參閱 W3C 建議中的<see href="https://www.w3.org/TR/xslt/all/">設定數值的格式</see>一節 (英文)。</summary>
        <returns>傳回表示數字格式的字串。 如需詳細資訊，請參閱 W3C 建議中的<see href="https://www.w3.org/TR/xslt/all/">設定數值的格式</see>一節 (英文)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Xsl.Runtime.XsltLibrary.FormatNumberDynamic%2A>方法格式`value`利用`formatPicture`和 十進位格式[擴充的名稱](https://go.microsoft.com/fwlink/?LinkID=148269)。 `errorMessageName`僅用於錯誤報告，且必須包含的小數格式物件的限定的名稱。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="FormatNumberStatic">
      <MemberSignature Language="C#" Value="public string FormatNumberStatic (double value, double decimalFormatterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string FormatNumberStatic(float64 value, float64 decimalFormatterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XsltLibrary.FormatNumberStatic(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function FormatNumberStatic (value As Double, decimalFormatterIndex As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ FormatNumberStatic(double value, double decimalFormatterIndex);" />
      <MemberSignature Language="F#" Value="member this.FormatNumberStatic : double * double -&gt; string" Usage="xsltLibrary.FormatNumberStatic (value, decimalFormatterIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="decimalFormatterIndex" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">包含要格式化之值的 <see cref="T:System.Double" />。</param>
        <param name="decimalFormatterIndex">包含格式子索引的 <see cref="T:System.Double" />。</param>
        <summary>實作 format-number() XSLT 函式。 如需詳細資訊，請參閱 W3C 建議中的<see href="https://www.w3.org/TR/xslt/all/">設定數值的格式</see>一節 (英文)。</summary>
        <returns>表示格式的字串。 如需詳細資訊，請參閱 W3C 建議中的<see href="https://www.w3.org/TR/xslt/all/">設定數值的格式</see>一節 (英文)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.Xsl.Runtime.XsltLibrary.FormatNumberStatic%2A>方法使用指定的十進位格式子物件，由格式指定的值<xref:System.Xml.Xsl.Runtime.XsltLibrary.RegisterDecimalFormatter%2A>。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="FunctionAvailable">
      <MemberSignature Language="C#" Value="public bool FunctionAvailable (System.Xml.XmlQualifiedName name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool FunctionAvailable(class System.Xml.XmlQualifiedName name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XsltLibrary.FunctionAvailable(System.Xml.XmlQualifiedName)" />
      <MemberSignature Language="VB.NET" Value="Public Function FunctionAvailable (name As XmlQualifiedName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FunctionAvailable(System::Xml::XmlQualifiedName ^ name);" />
      <MemberSignature Language="F#" Value="member this.FunctionAvailable : System.Xml.XmlQualifiedName -&gt; bool" Usage="xsltLibrary.FunctionAvailable name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.Xml.XmlQualifiedName" /> 名稱物件。</param>
        <summary>實作 <see href="https://www.w3.org/TR/xslt/all/">function-available()</see> XSLT 函式。</summary>
        <returns>布林值，如果是可以使用 <paramref name="name" /> 識別的函式，則為 <see langword="true" />。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsSameNodeSort">
      <MemberSignature Language="C#" Value="public bool IsSameNodeSort (System.Xml.XPath.XPathNavigator nav1, System.Xml.XPath.XPathNavigator nav2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsSameNodeSort(class System.Xml.XPath.XPathNavigator nav1, class System.Xml.XPath.XPathNavigator nav2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XsltLibrary.IsSameNodeSort(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSameNodeSort (nav1 As XPathNavigator, nav2 As XPathNavigator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSameNodeSort(System::Xml::XPath::XPathNavigator ^ nav1, System::Xml::XPath::XPathNavigator ^ nav2);" />
      <MemberSignature Language="F#" Value="member this.IsSameNodeSort : System.Xml.XPath.XPathNavigator * System.Xml.XPath.XPathNavigator -&gt; bool" Usage="xsltLibrary.IsSameNodeSort (nav1, nav2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nav1" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="nav2" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="nav1">要比較的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件。</param>
        <param name="nav2">要比較的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件。</param>
        <summary>判斷兩個節點是否具有相同的節點類型，如果該節點類型的節點具有擴充名稱，則判斷是否具有相同的擴充名稱。</summary>
        <returns>布林值 <see langword="true" />，判斷兩個節點是否具有相同的節點型別，且如果該節點型別的節點具有擴充名稱，則判斷是否具有相同的擴充名稱。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LangToLcid">
      <MemberSignature Language="C#" Value="public int LangToLcid (string lang, bool forwardCompatibility);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LangToLcid(string lang, bool forwardCompatibility) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XsltLibrary.LangToLcid(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function LangToLcid (lang As String, forwardCompatibility As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LangToLcid(System::String ^ lang, bool forwardCompatibility);" />
      <MemberSignature Language="F#" Value="member this.LangToLcid : string * bool -&gt; int" Usage="xsltLibrary.LangToLcid (lang, forwardCompatibility)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lang" Type="System.String" />
        <Parameter Name="forwardCompatibility" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="lang">表示語言的字串。</param>
        <param name="forwardCompatibility">如果語言是向前相容，則布林值為 true。</param>
        <summary>將語言識別項 (以 <see langword="xml:lang" /> 屬性指定) 轉換為文化特性識別項 (LCID)。</summary>
        <returns>包含文化特性識別項的字串。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public string NumberFormat (System.Collections.Generic.IList&lt;System.Xml.XPath.XPathItem&gt; value, string formatString, double lang, string letterValue, string groupingSeparator, double groupingSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string NumberFormat(class System.Collections.Generic.IList`1&lt;class System.Xml.XPath.XPathItem&gt; value, string formatString, float64 lang, string letterValue, string groupingSeparator, float64 groupingSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XsltLibrary.NumberFormat(System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.String,System.Double,System.String,System.String,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function NumberFormat (value As IList(Of XPathItem), formatString As String, lang As Double, letterValue As String, groupingSeparator As String, groupingSize As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ NumberFormat(System::Collections::Generic::IList&lt;System::Xml::XPath::XPathItem ^&gt; ^ value, System::String ^ formatString, double lang, System::String ^ letterValue, System::String ^ groupingSeparator, double groupingSize);" />
      <MemberSignature Language="F#" Value="member this.NumberFormat : System.Collections.Generic.IList&lt;System.Xml.XPath.XPathItem&gt; * string * double * string * string * double -&gt; string" Usage="xsltLibrary.NumberFormat (value, formatString, lang, letterValue, groupingSeparator, groupingSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.Generic.IList&lt;System.Xml.XPath.XPathItem&gt;" />
        <Parameter Name="formatString" Type="System.String" />
        <Parameter Name="lang" Type="System.Double" />
        <Parameter Name="letterValue" Type="System.String" />
        <Parameter Name="groupingSeparator" Type="System.String" />
        <Parameter Name="groupingSize" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">表示方法中引數的字串 <see cref="T:System.Collections.Generic.IList`1" />。</param>
        <param name="formatString">表示格式字串的 <see cref="T:System.Double" />。</param>
        <param name="lang">表示語言的 <see cref="T:System.Double" />。</param>
        <param name="letterValue">包含字母值的字串。</param>
        <param name="groupingSeparator">包含群組分隔符號的字串。</param>
        <param name="groupingSize">包含群組大小的 <see cref="T:System.Double" />。</param>
        <summary>取得表示數字格式的字串。</summary>
        <returns>表示數字格式的字串。 僅供內部基礎結構之用。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RegisterDecimalFormat">
      <MemberSignature Language="C#" Value="public int RegisterDecimalFormat (System.Xml.XmlQualifiedName name, string infinitySymbol, string nanSymbol, string characters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 RegisterDecimalFormat(class System.Xml.XmlQualifiedName name, string infinitySymbol, string nanSymbol, string characters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XsltLibrary.RegisterDecimalFormat(System.Xml.XmlQualifiedName,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterDecimalFormat (name As XmlQualifiedName, infinitySymbol As String, nanSymbol As String, characters As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int RegisterDecimalFormat(System::Xml::XmlQualifiedName ^ name, System::String ^ infinitySymbol, System::String ^ nanSymbol, System::String ^ characters);" />
      <MemberSignature Language="F#" Value="member this.RegisterDecimalFormat : System.Xml.XmlQualifiedName * string * string * string -&gt; int" Usage="xsltLibrary.RegisterDecimalFormat (name, infinitySymbol, nanSymbol, characters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Xml.XmlQualifiedName" />
        <Parameter Name="infinitySymbol" Type="System.String" />
        <Parameter Name="nanSymbol" Type="System.String" />
        <Parameter Name="characters" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">包含名稱的 <see cref="T:System.Xml.XmlQualifiedName" /> 物件。</param>
        <param name="infinitySymbol">包含無限符號的字串。</param>
        <param name="nanSymbol">包含 NaN 符號的字串。</param>
        <param name="characters">包含要格式化字元的字串。</param>
        <summary>以指定的擴充名稱註冊十進位格式。 如需詳細資訊，請參閱 W3C 建議中的<see href="https://www.w3.org/TR/xslt/all/">設定數值的格式</see>一節 (英文)。</summary>
        <returns>在目前的實作中，傳回值一定是 0。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RegisterDecimalFormatter">
      <MemberSignature Language="C#" Value="public double RegisterDecimalFormatter (string formatPicture, string infinitySymbol, string nanSymbol, string characters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 RegisterDecimalFormatter(string formatPicture, string infinitySymbol, string nanSymbol, string characters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XsltLibrary.RegisterDecimalFormatter(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterDecimalFormatter (formatPicture As String, infinitySymbol As String, nanSymbol As String, characters As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double RegisterDecimalFormatter(System::String ^ formatPicture, System::String ^ infinitySymbol, System::String ^ nanSymbol, System::String ^ characters);" />
      <MemberSignature Language="F#" Value="member this.RegisterDecimalFormatter : string * string * string * string -&gt; double" Usage="xsltLibrary.RegisterDecimalFormatter (formatPicture, infinitySymbol, nanSymbol, characters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatPicture" Type="System.String" />
        <Parameter Name="infinitySymbol" Type="System.String" />
        <Parameter Name="nanSymbol" Type="System.String" />
        <Parameter Name="characters" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formatPicture">包含設定圖片格式的字串。</param>
        <param name="infinitySymbol">包含無限符號的字串。</param>
        <param name="nanSymbol">包含 NaN 符號的字串。</param>
        <param name="characters">包含要格式化字元的字串。</param>
        <summary>註冊十進位格式子物件並傳回指派給它的唯一索引。 十進位格式子物件會由 format-number() XSLT 函式使用。 如需詳細資訊，請參閱 W3C 建議中的<see href="https://www.w3.org/TR/xslt/all/">設定數值的格式</see>一節 (英文)。</summary>
        <returns>傳回指派給十進位格式子物件之型別 <see cref="T:System.Double" /> 的唯一索引。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RelationalOperator">
      <MemberSignature Language="C#" Value="public bool RelationalOperator (double opCode, System.Collections.Generic.IList&lt;System.Xml.XPath.XPathItem&gt; left, System.Collections.Generic.IList&lt;System.Xml.XPath.XPathItem&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RelationalOperator(float64 opCode, class System.Collections.Generic.IList`1&lt;class System.Xml.XPath.XPathItem&gt; left, class System.Collections.Generic.IList`1&lt;class System.Xml.XPath.XPathItem&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.Runtime.XsltLibrary.RelationalOperator(System.Double,System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
      <MemberSignature Language="VB.NET" Value="Public Function RelationalOperator (opCode As Double, left As IList(Of XPathItem), right As IList(Of XPathItem)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RelationalOperator(double opCode, System::Collections::Generic::IList&lt;System::Xml::XPath::XPathItem ^&gt; ^ left, System::Collections::Generic::IList&lt;System::Xml::XPath::XPathItem ^&gt; ^ right);" />
      <MemberSignature Language="F#" Value="member this.RelationalOperator : double * System.Collections.Generic.IList&lt;System.Xml.XPath.XPathItem&gt; * System.Collections.Generic.IList&lt;System.Xml.XPath.XPathItem&gt; -&gt; bool" Usage="xsltLibrary.RelationalOperator (opCode, left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlXml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opCode" Type="System.Double" />
        <Parameter Name="left" Type="System.Collections.Generic.IList&lt;System.Xml.XPath.XPathItem&gt;" />
        <Parameter Name="right" Type="System.Collections.Generic.IList&lt;System.Xml.XPath.XPathItem&gt;" />
      </Parameters>
      <Docs>
        <param name="opCode">指定執行兩個運算式評估的方式： 
如果作業碼等於 2，XPath 運算式會得出 "left &lt; right"。  
  
如果作業碼等於 3，XPath 運算式會得出 "left &lt;= right"。  
  
如果作業碼等於 4，XPath 運算式會得出 "left &gt; right"。  
  
如果作業碼等於 5，XPath 運算式會得出 "left &gt;= right"</param>
        <param name="left">要評估的運算式。</param>
        <param name="right">要評估的運算式。</param>
        <summary>根據傳遞的 <paramref name="left" />，評估 <paramref name="right" /> 運算式大於或等於、小於或等於 <paramref name="opCode" /> 運算式。</summary>
        <returns>如果左運算式大於或等於右運算式，布林值為 true。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>