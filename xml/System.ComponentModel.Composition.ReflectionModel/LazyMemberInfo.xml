<Type Name="LazyMemberInfo" FullName="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="645fab643e37b017df0dad4c5e36f7417f42bfb2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36643397" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct LazyMemberInfo" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit LazyMemberInfo extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
  <TypeSignature Language="VB.NET" Value="Public Structure LazyMemberInfo" />
  <TypeSignature Language="C++ CLI" Value="public value class LazyMemberInfo" />
  <TypeSignature Language="F#" Value="type LazyMemberInfo = struct" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="35c7d-101">代表 <see cref="T:System.Reflection.MemberInfo" /> 物件，它在要求之前不會載入組件或建立物件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="35c7d-101">Represents a <see cref="T:System.Reflection.MemberInfo" /> object that does not load assemblies or create objects until requested.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="35c7d-102">初始化 <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35c7d-102">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LazyMemberInfo (System.Reflection.MemberInfo member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MemberInfo member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (member As MemberInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LazyMemberInfo(System::Reflection::MemberInfo ^ member);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo : System.Reflection.MemberInfo -&gt; System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" Usage="new System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo member" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="35c7d-103">要表示的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35c7d-103">The member to represent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35c7d-104">初始化 <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> 類別的新執行個體，這個執行個體表示指定的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35c7d-104">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> class, representing the specified member.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LazyMemberInfo (System.Reflection.MemberTypes memberType, Func&lt;System.Reflection.MemberInfo[]&gt; accessorsCreator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Reflection.MemberTypes memberType, class System.Func`1&lt;class System.Reflection.MemberInfo[]&gt; accessorsCreator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberTypes,System.Func{System.Reflection.MemberInfo[]})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (memberType As MemberTypes, accessorsCreator As Func(Of MemberInfo()))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LazyMemberInfo(System::Reflection::MemberTypes memberType, Func&lt;cli::array &lt;System::Reflection::MemberInfo ^&gt; ^&gt; ^ accessorsCreator);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo : System.Reflection.MemberTypes * Func&lt;System.Reflection.MemberInfo[]&gt; -&gt; System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" Usage="new System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo (memberType, accessorsCreator)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberType" Type="System.Reflection.MemberTypes" />
        <Parameter Name="accessorsCreator" Type="System.Func&lt;System.Reflection.MemberInfo[]&gt;" />
      </Parameters>
      <Docs>
        <param name="memberType">
          <span data-ttu-id="35c7d-105">所表示之成員的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35c7d-105">The type of the represented member.</span>
          </span>
        </param>
        <param name="accessorsCreator">
          <span data-ttu-id="35c7d-106">函式，其傳回值是所表示之成員適用的存取子集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35c7d-106">A function whose return value is a collection of the accessors for the represented member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35c7d-107">針對所指定型別的成員，使用指定的存取子初始化 <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35c7d-107">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> class for a member of the specified type with the specified accessors.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LazyMemberInfo (System.Reflection.MemberTypes memberType, params System.Reflection.MemberInfo[] accessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Reflection.MemberTypes memberType, class System.Reflection.MemberInfo[] accessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.#ctor(System.Reflection.MemberTypes,System.Reflection.MemberInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (memberType As MemberTypes, ParamArray accessors As MemberInfo())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LazyMemberInfo(System::Reflection::MemberTypes memberType, ... cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ accessors);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo : System.Reflection.MemberTypes * System.Reflection.MemberInfo[] -&gt; System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" Usage="new System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo (memberType, accessors)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberType" Type="System.Reflection.MemberTypes" />
        <Parameter Name="accessors" Type="System.Reflection.MemberInfo[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="memberType">
          <span data-ttu-id="35c7d-108">所表示之成員的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35c7d-108">The type of the represented member.</span>
          </span>
        </param>
        <param name="accessors">
          <span data-ttu-id="35c7d-109">所表示之成員適用的存取子陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35c7d-109">An array of the accessors for the represented member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35c7d-110">針對所指定型別的成員，使用指定的存取子初始化 <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35c7d-110">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> class for a member of the specified type with the specified accessors.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35c7d-111">
            <paramref name="accessors" /> 中的一個或多個物件不是此成員的有效存取子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35c7d-111">One or more of the objects in <paramref name="accessors" /> are not valid accessors for this member.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="lazyMemberInfo.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="35c7d-112">要比較的另一個物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35c7d-112">Another object to compare to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35c7d-113">指示這個執行個體和指定的物件是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35c7d-113">Indicates whether this instance and a specified object are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35c7d-114">如果 <see langword="true" /> 和這個執行個體為同型別並表示相同的值，則為 <paramref name="obj" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35c7d-114">
              <see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetAccessors">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetAccessors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.MemberInfo[] GetAccessors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetAccessors" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessors () As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetAccessors();" />
      <MemberSignature Language="F#" Value="member this.GetAccessors : unit -&gt; System.Reflection.MemberInfo[]" Usage="lazyMemberInfo.GetAccessors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35c7d-115">取得所表示之成員適用的存取子陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35c7d-115">Gets an array of the accessors for the represented member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35c7d-116">所表示之成員適用的存取子陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35c7d-116">An array of the accessors for the represented member.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35c7d-117">這個物件中的一個或多個存取子無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35c7d-117">One or more of the accessors in this object are invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="lazyMemberInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35c7d-118">傳回這個執行個體的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35c7d-118">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35c7d-119">32 位元帶正負號的整數，其為這個執行個體的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35c7d-119">A 32-bit signed integer that is the hash code for this instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberType : System.Reflection.MemberTypes" Usage="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.MemberType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35c7d-120">取得所表示之成員的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35c7d-120">Gets the type of the represented member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35c7d-121">所表示之成員的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35c7d-121">The type of the represented member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo left, System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo left, valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Equality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As LazyMemberInfo, right As LazyMemberInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo left, System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo * System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
        <Parameter Name="right" Type="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="35c7d-122">要測試的第一個物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35c7d-122">The first object to test.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="35c7d-123">要測試的第二個物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35c7d-123">The second object to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35c7d-124">判斷兩個指定的 <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> 物件是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35c7d-124">Determines whether the two specified <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> objects are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35c7d-125">如果物件相等則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35c7d-125">
              <see langword="true" /> if the objects are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo left, System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo left, valuetype System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Inequality(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As LazyMemberInfo, right As LazyMemberInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo left, System::ComponentModel::Composition::ReflectionModel::LazyMemberInfo right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo * System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo -&gt; bool" Usage="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
        <Parameter Name="right" Type="System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="35c7d-126">要測試的第一個物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35c7d-126">The first object to test.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="35c7d-127">要測試的第二個物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35c7d-127">The second object to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35c7d-128">判斷兩個指定的 <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> 物件是否不相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35c7d-128">Determines whether the two specified <see cref="T:System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo" /> objects are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35c7d-129">如果物件相等則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35c7d-129">
              <see langword="true" /> if the objects are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>