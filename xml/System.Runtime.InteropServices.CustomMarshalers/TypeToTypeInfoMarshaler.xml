<Type Name="TypeToTypeInfoMarshaler" FullName="System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="561fbedcdb3bd7817e16a9c48f8abff0ddfb5a3f" /><Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/01/2018" /><Meta Name="ms.locfileid" Value="52736901" /></Metadata><TypeSignature Language="C#" Value="public class TypeToTypeInfoMarshaler : System.Runtime.InteropServices.ICustomMarshaler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeToTypeInfoMarshaler extends System.Object implements class System.Runtime.InteropServices.ICustomMarshaler" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeToTypeInfoMarshaler&#xA;Implements ICustomMarshaler" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeToTypeInfoMarshaler : System::Runtime::InteropServices::ICustomMarshaler" />
  <TypeSignature Language="F#" Value="type TypeToTypeInfoMarshaler = class&#xA;    interface ICustomMarshaler" />
  <AssemblyInfo>
    <AssemblyName>CustomMarshalers</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.ICustomMarshaler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="f517e-101">將 Unmanaged <see langword="ITypeInfo" /> 介面封送處理 (Marshal) 至 Managed <see cref="T:System.Type" /> 類別，以及將 Managed <see cref="T:System.Type" /> 類別封送處理至 Unmanaged <see langword="ITypeInfo" /> 介面。</span><span class="sxs-lookup"><span data-stu-id="f517e-101">Marshals the unmanaged <see langword="ITypeInfo" /> interface to the managed <see cref="T:System.Type" /> class, and marshals the managed <see cref="T:System.Type" /> class to the unmanaged <see langword="ITypeInfo" /> interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f517e-102">`ITypeInfo` .NET 型別為基礎的中繼資料，就會出現在匯出的型別程式庫公開的介面。</span><span class="sxs-lookup"><span data-stu-id="f517e-102">The `ITypeInfo` interface exposed for a .NET type is based on the metadata that would appear in an exported type library.</span></span> <span data-ttu-id="f517e-103">同樣地，<xref:System.Type>執行個體公開給`ITypeInfo`介面為基礎的中繼資料，就會出現在 匯入的組件。</span><span class="sxs-lookup"><span data-stu-id="f517e-103">Likewise, the <xref:System.Type> instance exposed for an `ITypeInfo` interface is based on the metadata that would appear in an imported assembly.</span></span>  
  
 <span data-ttu-id="f517e-104">類型程式庫匯入工具 (Tlbimp.exe) 標記`ITypeInfo`與適當的參數<xref:System.Runtime.InteropServices.MarshalAsAttribute>具有<xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler>列舉成員轉換使用的簽章時`ITypeInfo`參數使用的簽章<xref:System.Type>參數。</span><span class="sxs-lookup"><span data-stu-id="f517e-104">The Type Library Importer (Tlbimp.exe) marks `ITypeInfo` parameters with the appropriate <xref:System.Runtime.InteropServices.MarshalAsAttribute> with the <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler> enumeration member when converting signatures that use `ITypeInfo` parameters to signatures that use <xref:System.Type> parameters.</span></span>  
  
 <span data-ttu-id="f517e-105">相同的轉換功能，可透過自訂封送處理器，沒有呼叫<xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A>和<xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A>。</span><span class="sxs-lookup"><span data-stu-id="f517e-105">The same conversion functionality can be accomplished without the custom marshaler, by calling <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> and <xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".cctor">
      <MemberSignature Language="C#" Value="public TypeToTypeInfoMarshaler ();" />
      <MemberSignature Language="ILAsm" Value=".method public static specialname rtspecialname void .cctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.#cctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeToTypeInfoMarshaler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f517e-106">提供靜態類別建構函式。</span><span class="sxs-lookup"><span data-stu-id="f517e-106">Provides the static class constructor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> [!NOTE]
> <span data-ttu-id="f517e-107">這個成員會在.NET Framework 2.0 版及後續版本中移除。</span><span class="sxs-lookup"><span data-stu-id="f517e-107">This member is removed in the .NET Framework version 2.0 and subsequent versions.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanUpManagedData">
      <MemberSignature Language="C#" Value="public virtual void CleanUpManagedData (object pManagedObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpManagedData(object pManagedObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.CleanUpManagedData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CleanUpManagedData (pManagedObj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CleanUpManagedData(System::Object ^ pManagedObj);" />
      <MemberSignature Language="F#" Value="abstract member CleanUpManagedData : obj -&gt; unit&#xA;override this.CleanUpManagedData : obj -&gt; unit" Usage="typeToTypeInfoMarshaler.CleanUpManagedData pManagedObj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pManagedObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pManagedObj"><span data-ttu-id="f517e-108">要終結的 Managed 物件。</span><span class="sxs-lookup"><span data-stu-id="f517e-108">The managed object to be destroyed.</span></span></param>
        <summary><span data-ttu-id="f517e-109">針對不需要的 Managed 資料執行必要的清除。</span><span class="sxs-lookup"><span data-stu-id="f517e-109">Performs necessary cleanup of the managed data when it is no longer needed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f517e-110">CLR 會呼叫這個方法，以清除配置在 managed 資料<xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f517e-110">The CLR calls this method to clean up managed data allocated in the <xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanUpNativeData">
      <MemberSignature Language="C#" Value="public virtual void CleanUpNativeData (IntPtr pNativeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpNativeData(native int pNativeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.CleanUpNativeData(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CleanUpNativeData (pNativeData As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CleanUpNativeData(IntPtr pNativeData);" />
      <MemberSignature Language="F#" Value="abstract member CleanUpNativeData : nativeint -&gt; unit&#xA;override this.CleanUpNativeData : nativeint -&gt; unit" Usage="typeToTypeInfoMarshaler.CleanUpNativeData pNativeData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNativeData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pNativeData"><span data-ttu-id="f517e-111">要終結的 Unmanaged 資料指標。</span><span class="sxs-lookup"><span data-stu-id="f517e-111">A pointer to the unmanaged data to be destroyed.</span></span></param>
        <summary><span data-ttu-id="f517e-112">針對不需要的 Unmanaged 資料執行必要的清除。</span><span class="sxs-lookup"><span data-stu-id="f517e-112">Performs necessary cleanup of the unmanaged data when it is no longer needed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f517e-113">CLR 會呼叫這個方法，以清除 在中所配置的 unmanaged 資料<xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f517e-113">The CLR calls this method to clean up the unmanaged data allocated in the <xref:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.ICustomMarshaler GetInstance (string pstrCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.InteropServices.ICustomMarshaler GetInstance(string pstrCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (pstrCookie As String) As ICustomMarshaler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::ICustomMarshaler ^ GetInstance(System::String ^ pstrCookie);" />
      <MemberSignature Language="F#" Value="static member GetInstance : string -&gt; System.Runtime.InteropServices.ICustomMarshaler" Usage="System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetInstance pstrCookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ICustomMarshaler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pstrCookie" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pstrCookie"><span data-ttu-id="f517e-114">可由自訂封送處理器使用的字串 "cookie" 參數。</span><span class="sxs-lookup"><span data-stu-id="f517e-114">String "cookie" parameter that can be used by the custom marshaler.</span></span></param>
        <summary><span data-ttu-id="f517e-115">傳回自訂封送處理器 (Marshaler) 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f517e-115">Returns an instance of the custom marshaler.</span></span></summary>
        <returns><span data-ttu-id="f517e-116">自訂封送處理器的執行個體。</span><span class="sxs-lookup"><span data-stu-id="f517e-116">An instance of the custom marshaler.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f517e-117">雖然這並非所有的自訂封送處理器必須實作此方法中，屬於<xref:System.Runtime.InteropServices.ICustomMarshaler>介面定義。</span><span class="sxs-lookup"><span data-stu-id="f517e-117">All custom marshalers must implement this method, although it is not part of the <xref:System.Runtime.InteropServices.ICustomMarshaler> interface definition.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNativeDataSize">
      <MemberSignature Language="C#" Value="public virtual int GetNativeDataSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetNativeDataSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.GetNativeDataSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNativeDataSize () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetNativeDataSize();" />
      <MemberSignature Language="F#" Value="abstract member GetNativeDataSize : unit -&gt; int&#xA;override this.GetNativeDataSize : unit -&gt; int" Usage="typeToTypeInfoMarshaler.GetNativeDataSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f517e-118">傳回待封送處理之 Unmanaged 資料的大小，以位元組為單位。</span><span class="sxs-lookup"><span data-stu-id="f517e-118">Returns the size in bytes of the unmanaged data to be marshaled.</span></span></summary>
        <returns><span data-ttu-id="f517e-119">-1 表示這個封送處理器所處理的型別並非實值型別 (Value Type)。</span><span class="sxs-lookup"><span data-stu-id="f517e-119">-1 to indicate the type this marshaler handles is not a value type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f517e-120">因為不支援在.NET Framework 實值型別的自訂封送處理，則這個方法一律會傳回-1。</span><span class="sxs-lookup"><span data-stu-id="f517e-120">Because custom marshaling of value types is not supported in the .NET Framework, this method always returns -1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarshalManagedToNative">
      <MemberSignature Language="C#" Value="public virtual IntPtr MarshalManagedToNative (object pManagedObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int MarshalManagedToNative(object pManagedObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalManagedToNative(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MarshalManagedToNative (pManagedObj As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IntPtr MarshalManagedToNative(System::Object ^ pManagedObj);" />
      <MemberSignature Language="F#" Value="abstract member MarshalManagedToNative : obj -&gt; nativeint&#xA;override this.MarshalManagedToNative : obj -&gt; nativeint" Usage="typeToTypeInfoMarshaler.MarshalManagedToNative pManagedObj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pManagedObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pManagedObj"><span data-ttu-id="f517e-121">要轉換的 Managed 物件。</span><span class="sxs-lookup"><span data-stu-id="f517e-121">The managed object to be converted.</span></span></param>
        <summary><span data-ttu-id="f517e-122">封送處理物件，從 Managed 程式碼到 Unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="f517e-122">Marshals an object from managed code to unmanaged code.</span></span></summary>
        <returns><span data-ttu-id="f517e-123">Unmanaged 物件的指標。</span><span class="sxs-lookup"><span data-stu-id="f517e-123">A pointer to the unmanaged object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f517e-124">CLR 會呼叫這個方法時指定的執行個體的受管理的物件，用來將該物件從 managed 程式碼轉換成 unmanaged 程式碼，並讓指標回到適當的 unmanaged 物件，表示該物件的 [COM] 檢視。</span><span class="sxs-lookup"><span data-stu-id="f517e-124">The CLR calls this method with the specified instance of a managed object to convert that object from managed code to unmanaged code, and it returns a pointer to the appropriate unmanaged object, representing the COM view of that object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f517e-125"><paramref name="pManagedObj" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f517e-125"><paramref name="pManagedObj" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MarshalNativeToManaged">
      <MemberSignature Language="C#" Value="public virtual object MarshalNativeToManaged (IntPtr pNativeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object MarshalNativeToManaged(native int pNativeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.TypeToTypeInfoMarshaler.MarshalNativeToManaged(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MarshalNativeToManaged (pNativeData As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ MarshalNativeToManaged(IntPtr pNativeData);" />
      <MemberSignature Language="F#" Value="abstract member MarshalNativeToManaged : nativeint -&gt; obj&#xA;override this.MarshalNativeToManaged : nativeint -&gt; obj" Usage="typeToTypeInfoMarshaler.MarshalNativeToManaged pNativeData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNativeData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pNativeData"><span data-ttu-id="f517e-126">待轉換的 Unmanaged 物件的指標。</span><span class="sxs-lookup"><span data-stu-id="f517e-126">A pointer to the unmanaged object to be converted.</span></span></param>
        <summary><span data-ttu-id="f517e-127">封送處理物件，從 Unmanaged 程式碼到 Managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="f517e-127">Marshals an object from unmanaged code to managed code.</span></span></summary>
        <returns><span data-ttu-id="f517e-128">Managed 物件。</span><span class="sxs-lookup"><span data-stu-id="f517e-128">A managed object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f517e-129">CLR 會呼叫這個方法，以將該物件與 unmanaged 程式碼，managed 程式碼，unmanaged 物件的指定指標，並傳回代表 unmanaged 資料的 managed 的檢視的受管理的物件。</span><span class="sxs-lookup"><span data-stu-id="f517e-129">The CLR calls this method with the specified pointer to an unmanaged object to convert that object from unmanaged code to managed code, and returns a managed object representing the managed view of the unmanaged data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f517e-130"><paramref name="pNativeData" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f517e-130"><paramref name="pNativeData" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>