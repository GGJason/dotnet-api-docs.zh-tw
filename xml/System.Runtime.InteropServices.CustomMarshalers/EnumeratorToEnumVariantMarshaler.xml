<Type Name="EnumeratorToEnumVariantMarshaler" FullName="System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9f43bca4044b243b63ccd008d8c29e5ffaa057d6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30478952" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EnumeratorToEnumVariantMarshaler : System.Runtime.InteropServices.ICustomMarshaler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EnumeratorToEnumVariantMarshaler extends System.Object implements class System.Runtime.InteropServices.ICustomMarshaler" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler" />
  <TypeSignature Language="VB.NET" Value="Public Class EnumeratorToEnumVariantMarshaler&#xA;Implements ICustomMarshaler" />
  <TypeSignature Language="C++ CLI" Value="public ref class EnumeratorToEnumVariantMarshaler : System::Runtime::InteropServices::ICustomMarshaler" />
  <AssemblyInfo>
    <AssemblyName>CustomMarshalers</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.ICustomMarshaler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="4b83e-101">將 COM <see langword="IEnumVARIANT" /> 介面封送處理 (Marshal) 至 .NET Framework <see cref="T:System.Collections.IEnumerator" /> 介面，或是反向操作。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4b83e-101">Marshals the COM <see langword="IEnumVARIANT" /> interface to the .NET Framework <see cref="T:System.Collections.IEnumerator" /> interface, and vice versa.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b83e-102">此自訂封送處理器封送處理`IEnumVARIANT`至<xref:System.Collections.IEnumerator>和把<xref:System.Collections.IEnumerator>至`IEnumVARIANT`。</span><span class="sxs-lookup"><span data-stu-id="4b83e-102">This custom marshaler marshals `IEnumVARIANT` to <xref:System.Collections.IEnumerator> and marshals <xref:System.Collections.IEnumerator> to `IEnumVARIANT`.</span></span> <span data-ttu-id="4b83e-103">CLR 會自動使用這個類別，以橋接器 COM 列舉值和.NET 列舉值。</span><span class="sxs-lookup"><span data-stu-id="4b83e-103">The CLR automatically uses this class to bridge COM enumerators and .NET enumerators.</span></span> <span data-ttu-id="4b83e-104"><xref:System.Collections.IEnumerator>傳回型別<xref:System.Collections.IEnumerable.GetEnumerator%2A>中匯入的 COM 類別的方法會使用`EnumeratorToEnumVariantMarshaler`對應呼叫`IEnumVARIANT`-4 的 dispid 的 COM 物件的成員所傳回的介面指標。</span><span class="sxs-lookup"><span data-stu-id="4b83e-104">The <xref:System.Collections.IEnumerator> type returned by the <xref:System.Collections.IEnumerable.GetEnumerator%2A> method in the imported COM class uses `EnumeratorToEnumVariantMarshaler` to map the calls to the `IEnumVARIANT` interface pointer returned by the COM object's member with a DISPID of -4.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CleanUpManagedData">
      <MemberSignature Language="C#" Value="public virtual void CleanUpManagedData (object pManagedObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpManagedData(object pManagedObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.CleanUpManagedData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CleanUpManagedData (pManagedObj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CleanUpManagedData(System::Object ^ pManagedObj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pManagedObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pManagedObj">
          <span data-ttu-id="4b83e-105">要終結的 Managed 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b83e-105">The managed object to be destroyed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b83e-106">針對不需要的 Managed 資料執行必要的清除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b83e-106">Performs necessary cleanup of the managed data when it is no longer needed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b83e-107">CLR 會呼叫這個方法，以清除受管理的資料配置在<xref:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.MarshalNativeToManaged%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4b83e-107">The CLR calls this method to clean up managed data allocated in the <xref:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.MarshalNativeToManaged%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanUpNativeData">
      <MemberSignature Language="C#" Value="public virtual void CleanUpNativeData (IntPtr pNativeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpNativeData(native int pNativeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.CleanUpNativeData(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CleanUpNativeData (pNativeData As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CleanUpNativeData(IntPtr pNativeData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNativeData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pNativeData">
          <span data-ttu-id="4b83e-108">要終結的 Unmanaged 資料指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b83e-108">A pointer to the unmanaged data to be destroyed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b83e-109">針對不需要的 Unmanaged 資料執行必要的清除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b83e-109">Performs necessary cleanup of the unmanaged data when it is no longer needed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b83e-110">CLR 會呼叫這個方法，以清除 unmanaged 資料配置在<xref:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.MarshalManagedToNative%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4b83e-110">The CLR calls this method to clean up the unmanaged data allocated in the <xref:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.MarshalManagedToNative%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.ICustomMarshaler GetInstance (string pstrCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.InteropServices.ICustomMarshaler GetInstance(string pstrCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (pstrCookie As String) As ICustomMarshaler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::ICustomMarshaler ^ GetInstance(System::String ^ pstrCookie);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ICustomMarshaler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pstrCookie" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pstrCookie">
          <span data-ttu-id="4b83e-111">可由自訂封送處理器使用的字串 "cookie" 參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b83e-111">String "cookie" parameter that can be used by the custom marshaler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b83e-112">傳回自訂封送處理器 (Marshaler) 的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b83e-112">Returns an instance of the custom marshaler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b83e-113">自訂封送處理器的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b83e-113">An instance of the custom marshaler.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b83e-114">所有的自訂封送處理器必須實作這個方法，但不是屬於<xref:System.Runtime.InteropServices.ICustomMarshaler>介面定義。</span><span class="sxs-lookup"><span data-stu-id="4b83e-114">All custom marshalers must implement this method, although it is not part of the <xref:System.Runtime.InteropServices.ICustomMarshaler> interface definition.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNativeDataSize">
      <MemberSignature Language="C#" Value="public virtual int GetNativeDataSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetNativeDataSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.GetNativeDataSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNativeDataSize () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetNativeDataSize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b83e-115">傳回待封送處理之 Unmanaged 資料的大小，以位元組為單位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b83e-115">Returns the size in bytes of the unmanaged data to be marshaled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b83e-116">-1 表示這個封送處理器所處理的型別並非實值型別 (Value Type)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b83e-116">-1 to indicate the type this marshaler handles is not a value type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b83e-117">.NET Framework 中不支援自訂的實值類型封送處理，因為這個方法一律會傳回-1。</span><span class="sxs-lookup"><span data-stu-id="4b83e-117">Because custom marshaling of value types is not supported in the .NET Framework, this method always returns -1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarshalManagedToNative">
      <MemberSignature Language="C#" Value="public virtual IntPtr MarshalManagedToNative (object pManagedObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int MarshalManagedToNative(object pManagedObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.MarshalManagedToNative(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MarshalManagedToNative (pManagedObj As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IntPtr MarshalManagedToNative(System::Object ^ pManagedObj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pManagedObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pManagedObj">
          <span data-ttu-id="4b83e-118">要轉換的 Managed 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b83e-118">The managed object to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b83e-119">封送處理物件，從 Managed 程式碼到 Unmanaged 程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b83e-119">Marshals an object from managed code to unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b83e-120">Unmanaged 物件的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b83e-120">A pointer to the unmanaged object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b83e-121">CLR 會呼叫這個方法與指定的執行個體的受管理物件來將該物件從 managed 程式碼轉換成 unmanaged 程式碼，並讓指標回到適當的 unmanaged 物件，表示該物件的 [COM] 檢視。</span><span class="sxs-lookup"><span data-stu-id="4b83e-121">The CLR calls this method with the specified instance of a managed object to convert that object from managed code to unmanaged code, and it returns a pointer to the appropriate unmanaged object, representing the COM view of that object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b83e-122">
            <paramref name="pManagedObj" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b83e-122">
              <paramref name="pManagedObj" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MarshalNativeToManaged">
      <MemberSignature Language="C#" Value="public virtual object MarshalNativeToManaged (IntPtr pNativeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object MarshalNativeToManaged(native int pNativeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.MarshalNativeToManaged(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MarshalNativeToManaged (pNativeData As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ MarshalNativeToManaged(IntPtr pNativeData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNativeData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pNativeData">
          <span data-ttu-id="4b83e-123">待轉換的 Unmanaged 物件的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b83e-123">A pointer to the unmanaged object to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b83e-124">封送處理物件，從 Unmanaged 程式碼到 Managed 程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b83e-124">Marshals an object from unmanaged code to managed code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b83e-125">Managed 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b83e-125">A managed object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b83e-126">CLR 會呼叫這個方法與將該物件從 unmanaged 程式碼，managed 程式碼，unmanaged 物件的指定指標，並傳回代表 unmanaged 資料的 managed 的檢視受管理的物件。</span><span class="sxs-lookup"><span data-stu-id="4b83e-126">The CLR calls this method with the specified pointer to an unmanaged object to convert that object from unmanaged code to managed code, and returns a managed object representing the managed view of the unmanaged data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b83e-127">
            <paramref name="pNativeData" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b83e-127">
              <paramref name="pNativeData" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="4b83e-128">無法轉換 <paramref name="pNativeData" /> 指向的 Unmanaged 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b83e-128">The unmanaged object that <paramref name="pNativeData" /> points to could not be converted.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>