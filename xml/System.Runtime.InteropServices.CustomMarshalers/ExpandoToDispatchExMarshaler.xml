<Type Name="ExpandoToDispatchExMarshaler" FullName="System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2cfa2b1ec178fbfc396fc5e109ed6756e5ed620f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37638160" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ExpandoToDispatchExMarshaler : System.Runtime.InteropServices.ICustomMarshaler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExpandoToDispatchExMarshaler extends System.Object implements class System.Runtime.InteropServices.ICustomMarshaler" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler" />
  <TypeSignature Language="VB.NET" Value="Public Class ExpandoToDispatchExMarshaler&#xA;Implements ICustomMarshaler" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpandoToDispatchExMarshaler : System::Runtime::InteropServices::ICustomMarshaler" />
  <TypeSignature Language="F#" Value="type ExpandoToDispatchExMarshaler = class&#xA;    interface ICustomMarshaler" />
  <AssemblyInfo>
    <AssemblyName>CustomMarshalers</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.ICustomMarshaler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="eb93c-101">將 COM <see langword="IDispatchEx" /> 介面封送處理 (Marshal) 至 .NET Framework <see cref="T:System.Runtime.InteropServices.Expando.IExpando" /> 介面或 <see cref="T:System.Reflection.IReflect" /> 介面，或是反向操作。</span>
      <span class="sxs-lookup">
        <span data-stu-id="eb93c-101">Marshals the COM <see langword="IDispatchEx" /> interface to either the .NET Framework <see cref="T:System.Runtime.InteropServices.Expando.IExpando" /> interface, or to the <see cref="T:System.Reflection.IReflect" /> interface, and vice versa.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93c-102">因為 CLR 不會自動使用此自訂封送處理器，它必須宣告，如下所示：</span><span class="sxs-lookup"><span data-stu-id="eb93c-102">Because the CLR does not use this custom marshaler automatically, it must be declared as follows:</span></span>  
  
```  
void UseCustomMarshaler([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef=typeof(ExpandoToDispatchExMarhsaler))] IExpando expando);  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".cctor">
      <MemberSignature Language="C#" Value="public ExpandoToDispatchExMarshaler ();" />
      <MemberSignature Language="ILAsm" Value=".method public static specialname rtspecialname void .cctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler.#cctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpandoToDispatchExMarshaler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanUpManagedData">
      <MemberSignature Language="C#" Value="public virtual void CleanUpManagedData (object pManagedObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpManagedData(object pManagedObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler.CleanUpManagedData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CleanUpManagedData (pManagedObj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CleanUpManagedData(System::Object ^ pManagedObj);" />
      <MemberSignature Language="F#" Value="abstract member CleanUpManagedData : obj -&gt; unit&#xA;override this.CleanUpManagedData : obj -&gt; unit" Usage="expandoToDispatchExMarshaler.CleanUpManagedData pManagedObj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pManagedObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pManagedObj">
          <span data-ttu-id="eb93c-103">要終結的 Managed 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93c-103">The managed object to be destroyed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb93c-104">針對不需要的 Managed 資料執行必要的清除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93c-104">Performs necessary cleanup of the managed data when it is no longer needed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93c-105">CLR 會呼叫這個方法，以清除配置在 managed 資料<xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler.MarshalManagedToNative%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eb93c-105">The CLR calls this method to clean up managed data allocated in the <xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler.MarshalManagedToNative%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanUpNativeData">
      <MemberSignature Language="C#" Value="public virtual void CleanUpNativeData (IntPtr pNativeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpNativeData(native int pNativeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler.CleanUpNativeData(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CleanUpNativeData (pNativeData As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CleanUpNativeData(IntPtr pNativeData);" />
      <MemberSignature Language="F#" Value="abstract member CleanUpNativeData : nativeint -&gt; unit&#xA;override this.CleanUpNativeData : nativeint -&gt; unit" Usage="expandoToDispatchExMarshaler.CleanUpNativeData pNativeData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNativeData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pNativeData">
          <span data-ttu-id="eb93c-106">要終結的 Unmanaged 資料指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93c-106">A pointer to the unmanaged data to be destroyed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb93c-107">針對不需要的 Unmanaged 資料執行必要的清除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93c-107">Performs necessary cleanup of the unmanaged data when it is no longer needed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93c-108">CLR 會呼叫這個方法，以清除 在中所配置的 unmanaged 資料<xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler.MarshalManagedToNative%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eb93c-108">The CLR calls this method to clean up the unmanaged data allocated in the <xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler.MarshalManagedToNative%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.ICustomMarshaler GetInstance (string pstrCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.InteropServices.ICustomMarshaler GetInstance(string pstrCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler.GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (pstrCookie As String) As ICustomMarshaler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::ICustomMarshaler ^ GetInstance(System::String ^ pstrCookie);" />
      <MemberSignature Language="F#" Value="static member GetInstance : string -&gt; System.Runtime.InteropServices.ICustomMarshaler" Usage="System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler.GetInstance pstrCookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ICustomMarshaler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pstrCookie" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pstrCookie">
          <span data-ttu-id="eb93c-109">可由自訂封送處理器使用的字串 "cookie" 參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93c-109">String "cookie" parameter that can be used by the custom marshaler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb93c-110">傳回自訂封送處理器 (Marshaler) 的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93c-110">Returns an instance of the custom marshaler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb93c-111">自訂封送處理器的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93c-111">An instance of the custom marshaler.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93c-112">雖然這並非所有的自訂封送處理器必須實作此方法中，屬於<xref:System.Runtime.InteropServices.ICustomMarshaler>介面定義。</span><span class="sxs-lookup"><span data-stu-id="eb93c-112">All custom marshalers must implement this method, although it is not part of the <xref:System.Runtime.InteropServices.ICustomMarshaler> interface definition.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="eb93c-113">
            <paramref name="pstrCookie" /> 無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93c-113">
              <paramref name="pstrCookie" /> is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNativeDataSize">
      <MemberSignature Language="C#" Value="public virtual int GetNativeDataSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetNativeDataSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler.GetNativeDataSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNativeDataSize () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetNativeDataSize();" />
      <MemberSignature Language="F#" Value="abstract member GetNativeDataSize : unit -&gt; int&#xA;override this.GetNativeDataSize : unit -&gt; int" Usage="expandoToDispatchExMarshaler.GetNativeDataSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eb93c-114">傳回待封送處理之 Unmanaged 資料的大小，以位元組為單位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93c-114">Returns the size in bytes of the unmanaged data to be marshaled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb93c-115">-1 表示這個封送處理器所處理的型別並非實值型別 (Value Type)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93c-115">-1 to indicate the type this marshaler handles is not a value type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93c-116">因為不支援在.NET Framework 實值型別的自訂封送處理，則這個方法一律會傳回-1。</span><span class="sxs-lookup"><span data-stu-id="eb93c-116">Because custom marshaling of value types is not supported in the .NET Framework, this method always returns -1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarshalManagedToNative">
      <MemberSignature Language="C#" Value="public virtual IntPtr MarshalManagedToNative (object pManagedObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int MarshalManagedToNative(object pManagedObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler.MarshalManagedToNative(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MarshalManagedToNative (pManagedObj As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IntPtr MarshalManagedToNative(System::Object ^ pManagedObj);" />
      <MemberSignature Language="F#" Value="abstract member MarshalManagedToNative : obj -&gt; nativeint&#xA;override this.MarshalManagedToNative : obj -&gt; nativeint" Usage="expandoToDispatchExMarshaler.MarshalManagedToNative pManagedObj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pManagedObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pManagedObj">
          <span data-ttu-id="eb93c-117">要轉換的 Managed 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93c-117">The managed object to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb93c-118">封送處理物件，從 Managed 程式碼到 Unmanaged 程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93c-118">Marshals an object from managed code to unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb93c-119">Unmanaged 物件的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93c-119">A pointer to the unmanaged object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93c-120">CLR 會呼叫這個方法時指定的執行個體的受管理的物件，用來將該物件從 managed 程式碼轉換成 unmanaged 程式碼，並讓指標回到適當的 unmanaged 物件，表示該物件的 [COM] 檢視。</span><span class="sxs-lookup"><span data-stu-id="eb93c-120">The CLR calls this method with the specified instance of a managed object to convert that object from managed code to unmanaged code, and it returns a pointer to the appropriate unmanaged object, representing the COM view of that object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb93c-121">
            <paramref name="pManagedObj" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93c-121">
              <paramref name="pManagedObj" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MarshalNativeToManaged">
      <MemberSignature Language="C#" Value="public virtual object MarshalNativeToManaged (IntPtr pNativeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object MarshalNativeToManaged(native int pNativeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler.MarshalNativeToManaged(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MarshalNativeToManaged (pNativeData As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ MarshalNativeToManaged(IntPtr pNativeData);" />
      <MemberSignature Language="F#" Value="abstract member MarshalNativeToManaged : nativeint -&gt; obj&#xA;override this.MarshalNativeToManaged : nativeint -&gt; obj" Usage="expandoToDispatchExMarshaler.MarshalNativeToManaged pNativeData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNativeData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pNativeData">
          <span data-ttu-id="eb93c-122">待轉換的 Unmanaged 物件的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93c-122">A pointer to the unmanaged object to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eb93c-123">封送處理物件，從 Unmanaged 程式碼到 Managed 程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93c-123">Marshals an object from unmanaged code to managed code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eb93c-124">Managed 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93c-124">A managed object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb93c-125">CLR 會呼叫這個方法，以將該物件與 unmanaged 程式碼，managed 程式碼，unmanaged 物件的指定指標，並傳回代表 unmanaged 資料的 managed 的檢視的受管理的物件。</span><span class="sxs-lookup"><span data-stu-id="eb93c-125">The CLR calls this method with the specified pointer to an unmanaged object to convert that object from unmanaged code to managed code, and returns a managed object representing the managed view of the unmanaged data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eb93c-126">
            <paramref name="pNativeData" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eb93c-126">
              <paramref name="pNativeData" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>