<Type Name="ITrackingHandler" FullName="System.Runtime.Remoting.Services.ITrackingHandler">
  <TypeSignature Language="C#" Value="public interface ITrackingHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITrackingHandler" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Services.ITrackingHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITrackingHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITrackingHandler" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b2ec5-101">指示實作的物件必須由遠端基礎結構來告知關於物件和 Proxy 的封送處理、解封送處理 (Unmarshaling) 和中斷連接。</span><span class="sxs-lookup"><span data-stu-id="b2ec5-101">Indicates that the implementing object must be notified of marshaling, unmarshaling, and disconnection of objects and proxies by the remoting infrastructure.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2ec5-102">已註冊的每個物件<xref:System.Runtime.Remoting.Services.TrackingServices>物件或在目前的 proxy 時，會將遠端處理呼叫<xref:System.AppDomain>封送處理、 marshaling，或已中斷連線。</span><span class="sxs-lookup"><span data-stu-id="b2ec5-102">Every object that is registered with <xref:System.Runtime.Remoting.Services.TrackingServices> is called by remoting when an object or proxy in the current <xref:System.AppDomain> is marshaled, unmarshaled, or disconnected.</span></span>  
  
 <span data-ttu-id="b2ec5-103">請注意，只有物件可以中斷連線。</span><span class="sxs-lookup"><span data-stu-id="b2ec5-103">Note that only objects can be disconnected.</span></span> <span data-ttu-id="b2ec5-104">擲回例外狀況時中斷連線的 proxy 上呼叫。</span><span class="sxs-lookup"><span data-stu-id="b2ec5-104">An exception is thrown when disconnect is called on a proxy.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b2ec5-105">這個介面可讓連結要求。</span><span class="sxs-lookup"><span data-stu-id="b2ec5-105">This interface makes a link demand.</span></span> <span data-ttu-id="b2ec5-106">如果立即呼叫端會透過介面的參考呼叫，而且沒有基礎結構的權限，則會擲回安全性例外狀況。</span><span class="sxs-lookup"><span data-stu-id="b2ec5-106">A SecurityException is thrown if the immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</span></span> <span data-ttu-id="b2ec5-107">請參閱[連結要求](~/docs/framework/misc/link-demands.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="b2ec5-107">See [Link Demands](~/docs/framework/misc/link-demands.md) for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b2ec5-108">下列程式碼範例示範如何實作的方法<xref:System.Runtime.Remoting.Services.ITrackingHandler>介面來接收通知，從遠端執行功能基礎結構。</span><span class="sxs-lookup"><span data-stu-id="b2ec5-108">The following code example shows how to implement the methods of the <xref:System.Runtime.Remoting.Services.ITrackingHandler> interface to receive notifications from the remoting infrastructure.</span></span>  
  
 <span data-ttu-id="b2ec5-109">下列程式碼範例示範如何實作這個介面。</span><span class="sxs-lookup"><span data-stu-id="b2ec5-109">The following code example shows how to implement this interface.</span></span>  
  
 [!code-csharp[System.Runtime.Remoting.Services.TrackingServices#30](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Services.TrackingServices/CS/trackinghandler.cs#30)]  
  
 <span data-ttu-id="b2ec5-110">下列程式碼範例示範如何實作這個介面，在伺服器上。</span><span class="sxs-lookup"><span data-stu-id="b2ec5-110">The following code example shows how to implement this interface on a server.</span></span>  
  
 [!code-csharp[System.Runtime.Remoting.Services.TrackingServices#20](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Services.TrackingServices/CS/server.cs#20)]  
  
 <span data-ttu-id="b2ec5-111">下列程式碼範例示範如何實作這個介面，如上述程式碼範例中的伺服器在用戶端上。</span><span class="sxs-lookup"><span data-stu-id="b2ec5-111">The following code example shows how to implement this interface on a client for the server in the preceding code example.</span></span>  
  
 [!code-csharp[System.Runtime.Remoting.Services.TrackingServices#0](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Services.TrackingServices/CS/client.cs#0)]  
  
 <span data-ttu-id="b2ec5-112">下列程式碼範例示範使用伺服器和用戶端的遠端物件。</span><span class="sxs-lookup"><span data-stu-id="b2ec5-112">The following code example shows the remote object that is used by the server and the client.</span></span>  
  
 [!code-csharp[System.Runtime.Remoting.Services.TrackingServices#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Services.TrackingServices/CS/remoteservice.cs#10)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b2ec5-113">營運與基礎結構程式碼。</span><span class="sxs-lookup"><span data-stu-id="b2ec5-113">For operating with infrastructure code.</span></span> <span data-ttu-id="b2ec5-114">要求的值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span><span class="sxs-lookup"><span data-stu-id="b2ec5-114">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Permission Value: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></span></span></permission>
  </Docs>
  <Members>
    <Member MemberName="DisconnectedObject">
      <MemberSignature Language="C#" Value="public void DisconnectedObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisconnectedObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Services.ITrackingHandler.DisconnectedObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisconnectedObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisconnectedObject(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="b2ec5-115">中斷連接的物件。</span><span class="sxs-lookup"><span data-stu-id="b2ec5-115">The disconnected object.</span></span></param>
        <summary><span data-ttu-id="b2ec5-116">告知目前執行個體，物件已經自其 Proxy 中斷連接。</span><span class="sxs-lookup"><span data-stu-id="b2ec5-116">Notifies the current instance that an object has been disconnected from its proxy.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b2ec5-117">下列程式碼範例示範如何實作這個方法。</span><span class="sxs-lookup"><span data-stu-id="b2ec5-117">The following code example shows how to implement this method.</span></span> <span data-ttu-id="b2ec5-118">這個程式碼範例是所提供之較大範例的一部分<xref:System.Runtime.Remoting.Services.ITrackingHandler>介面。</span><span class="sxs-lookup"><span data-stu-id="b2ec5-118">This code example is part of a larger example that is provided for the <xref:System.Runtime.Remoting.Services.ITrackingHandler> interface.</span></span>  
  
 [!code-csharp[System.Runtime.Remoting.Services.TrackingServices#33](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Services.TrackingServices/CS/trackinghandler.cs#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarshaledObject">
      <MemberSignature Language="C#" Value="public void MarshaledObject (object obj, System.Runtime.Remoting.ObjRef or);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MarshaledObject(object obj, class System.Runtime.Remoting.ObjRef or) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Services.ITrackingHandler.MarshaledObject(System.Object,System.Runtime.Remoting.ObjRef)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MarshaledObject (obj As Object, or As ObjRef)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MarshaledObject(System::Object ^ obj, System::Runtime::Remoting::ObjRef ^ or);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="or" Type="System.Runtime.Remoting.ObjRef" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="b2ec5-119">已封送處理的物件。</span><span class="sxs-lookup"><span data-stu-id="b2ec5-119">The object that has been marshaled.</span></span></param>
        <param name="or"><span data-ttu-id="b2ec5-120">自封送處理產生而且代表指定物件的 <see cref="T:System.Runtime.Remoting.ObjRef" />。</span><span class="sxs-lookup"><span data-stu-id="b2ec5-120">The <see cref="T:System.Runtime.Remoting.ObjRef" /> that results from marshaling and represents the specified object.</span></span></param>
        <summary><span data-ttu-id="b2ec5-121">告知目前執行個體，物件已經被封送處理。</span><span class="sxs-lookup"><span data-stu-id="b2ec5-121">Notifies the current instance that an object has been marshaled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b2ec5-122">下列程式碼範例示範如何實作這個方法。</span><span class="sxs-lookup"><span data-stu-id="b2ec5-122">The following code example shows how to implement this method.</span></span> <span data-ttu-id="b2ec5-123">這個程式碼範例是所提供之較大範例的一部分<xref:System.Runtime.Remoting.Services.ITrackingHandler>介面。</span><span class="sxs-lookup"><span data-stu-id="b2ec5-123">This code example is part of a larger example that is provided for the <xref:System.Runtime.Remoting.Services.ITrackingHandler> interface.</span></span>  
  
 [!code-csharp[System.Runtime.Remoting.Services.TrackingServices#31](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Services.TrackingServices/CS/trackinghandler.cs#31)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnmarshaledObject">
      <MemberSignature Language="C#" Value="public void UnmarshaledObject (object obj, System.Runtime.Remoting.ObjRef or);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnmarshaledObject(object obj, class System.Runtime.Remoting.ObjRef or) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Services.ITrackingHandler.UnmarshaledObject(System.Object,System.Runtime.Remoting.ObjRef)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnmarshaledObject (obj As Object, or As ObjRef)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnmarshaledObject(System::Object ^ obj, System::Runtime::Remoting::ObjRef ^ or);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="or" Type="System.Runtime.Remoting.ObjRef" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="b2ec5-124">解除封送處理的物件。</span><span class="sxs-lookup"><span data-stu-id="b2ec5-124">The unmarshaled object.</span></span></param>
        <param name="or"><span data-ttu-id="b2ec5-125">表示指定物件的 <see cref="T:System.Runtime.Remoting.ObjRef" />。</span><span class="sxs-lookup"><span data-stu-id="b2ec5-125">The <see cref="T:System.Runtime.Remoting.ObjRef" /> that represents the specified object.</span></span></param>
        <summary><span data-ttu-id="b2ec5-126">告知目前執行個體，物件已經解除封送處理。</span><span class="sxs-lookup"><span data-stu-id="b2ec5-126">Notifies the current instance that an object has been unmarshaled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b2ec5-127">下列程式碼範例示範如何實作這個方法。</span><span class="sxs-lookup"><span data-stu-id="b2ec5-127">The following code example shows how to implement this method.</span></span> <span data-ttu-id="b2ec5-128">這個程式碼範例是所提供之較大範例的一部分<xref:System.Runtime.Remoting.Services.ITrackingHandler>介面。</span><span class="sxs-lookup"><span data-stu-id="b2ec5-128">This code example is part of a larger example that is provided for the <xref:System.Runtime.Remoting.Services.ITrackingHandler> interface.</span></span>  
  
 [!code-csharp[System.Runtime.Remoting.Services.TrackingServices#32](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Services.TrackingServices/CS/trackinghandler.cs#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>