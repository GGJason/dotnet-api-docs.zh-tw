<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlBackgroundReader.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac509ec6dbff25a306b771518bfdf151f3a7ace1796.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">09ec6dbff25a306b771518bfdf151f3a7ace1796</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlBackgroundReader">
          <source>Implements a double-buffered <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> that can split reading and writing to different threads.</source>
          <target state="translated">實作可將讀取和寫入分割至不同執行緒的雙重緩衝 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlBackgroundReader.#ctor(System.Xaml.XamlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> that this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlBackgroundReader" /&gt;</ph> is based on.</source>
          <target state="translated">這個 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> 所根據的 <ph id="ph2">&lt;see cref="T:System.Xaml.XamlBackgroundReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlBackgroundReader.#ctor(System.Xaml.XamlReader)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlBackgroundReader" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlBackgroundReader" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlBackgroundReader.#ctor(System.Xaml.XamlReader)">
          <source><ph id="ph1">&lt;paramref name="wrappedReader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="wrappedReader" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlBackgroundReader.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release managed resources; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示釋放 Managed 資源，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlBackgroundReader.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlBackgroundReader" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlBackgroundReader" /&gt;</ph> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlBackgroundReader.Dispose(System.Boolean)">
          <source>In addition to calling the base implementation, this <ph id="ph1">`Dispose`</ph> implementation disposes related writers and event handlers.</source>
          <target state="translated">除了呼叫基底實作，這<ph id="ph1">`Dispose`</ph>實作處置相關的寫入器和事件處理常式。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlBackgroundReader.HasLineInfo">
          <source>Gets a value that specifies whether line information is available.</source>
          <target state="translated">取得值，這個值指定行資訊是否可供使用。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlBackgroundReader.HasLineInfo">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if line information is available; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果有可用的行資訊則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlBackgroundReader.IsEof">
          <source>Gets a value that reports whether the reader position is at end-of-file.</source>
          <target state="translated">取得值，這個值會報告讀取器是否位於檔案結尾。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlBackgroundReader.IsEof">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the position is at end-of-file; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果位置在檔案的結尾則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlBackgroundReader.LineNumber">
          <source>Gets the line number to report.</source>
          <target state="translated">取得要報告的行號。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlBackgroundReader.LineNumber">
          <source>The line number to report.</source>
          <target state="translated">要報告的行號。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlBackgroundReader.LinePosition">
          <source>Gets the line position to report.</source>
          <target state="translated">取得要報告的行位置。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlBackgroundReader.LinePosition">
          <source>The line position to report.</source>
          <target state="translated">要報告的行位置。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlBackgroundReader.Member">
          <source>Gets the current member at the reader position, if the reader position is on a <ph id="ph1">&lt;see cref="F:System.Xaml.XamlNodeType.StartMember" /&gt;</ph>.</source>
          <target state="translated">如果讀取器位置在 <ph id="ph1">&lt;see cref="F:System.Xaml.XamlNodeType.StartMember" /&gt;</ph> 上，則取得讀取器位置上的目前成員。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlBackgroundReader.Member">
          <source>The current member; or <ph id="ph1">&lt;see langword="null" /&gt;</ph>, if the position is not on a member.</source>
          <target state="translated">目前的成員，如果這個位置不在成員上，則為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlBackgroundReader.Namespace">
          <source>Gets the XAML namespace from the current node.</source>
          <target state="translated">從目前的節點取得 XAML 命名空間。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlBackgroundReader.Namespace">
          <source>The XAML namespace, if it is available; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">XAML 命名空間 (如果有的話)，否則為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlBackgroundReader.NodeType">
          <source>Gets the type of the current node.</source>
          <target state="translated">取得目前節點的類型。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlBackgroundReader.NodeType">
          <source>A value of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlNodeType" /&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlNodeType" /&gt;</ph> 列舉的值。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlBackgroundReader.Read">
          <source>Provides the next XAML node from the source, if a node is available.</source>
          <target state="translated">從來源中提供下一個 XAML 節點 (如果有節點的話)。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlBackgroundReader.Read">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a node is available; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果有節點則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlBackgroundReader.SchemaContext">
          <source>Gets an object that provides schema context information for the information set.</source>
          <target state="translated">取得物件，這個物件會為資訊集提供結構描述內容資訊。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlBackgroundReader.SchemaContext">
          <source>An object that provides schema context information for the information set.</source>
          <target state="translated">物件，為資訊集提供結構描述內容資訊。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlBackgroundReader">
          <source>Creates and starts a new <ph id="ph1">&lt;see cref="T:System.Threading.Thread" /&gt;</ph> (constructed from <ph id="ph2">&lt;see cref="T:System.Threading.ParameterizedThreadStart" /&gt;</ph>) that handles a named thread for the <ph id="ph3">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph>.</source>
          <target state="translated">建立及啟動新的 <ph id="ph1">&lt;see cref="T:System.Threading.Thread" /&gt;</ph> (從 <ph id="ph2">&lt;see cref="T:System.Threading.ParameterizedThreadStart" /&gt;</ph> 建構而成)，它會為 <ph id="ph3">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> 處理具名執行緒。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlBackgroundReader.StartThread">
          <source>Creates and starts a new <ph id="ph1">&lt;see cref="T:System.Threading.Thread" /&gt;</ph> (constructed from <ph id="ph2">&lt;see cref="T:System.Threading.ParameterizedThreadStart" /&gt;</ph>) that handles a named thread for the <ph id="ph3">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph>.</source>
          <target state="translated">建立及啟動新的 <ph id="ph1">&lt;see cref="T:System.Threading.Thread" /&gt;</ph> (從 <ph id="ph2">&lt;see cref="T:System.Threading.ParameterizedThreadStart" /&gt;</ph> 建構而成)，它會為 <ph id="ph3">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> 處理具名執行緒。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlBackgroundReader.StartThread">
          <source>By default, the thread is named <ph id="ph1">`XAML reader thread`</ph>.</source>
          <target state="translated">根據預設，名為執行緒<ph id="ph1">`XAML reader thread`</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlBackgroundReader.StartThread">
          <source>The thread is already started.</source>
          <target state="translated">執行緒已經啟動。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlBackgroundReader.StartThread(System.String)">
          <source>The name for the thread.</source>
          <target state="translated">執行緒的名稱。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlBackgroundReader.StartThread(System.String)">
          <source>Creates and starts a new <ph id="ph1">&lt;see cref="T:System.Threading.Thread" /&gt;</ph> (constructed from <ph id="ph2">&lt;see cref="T:System.Threading.ParameterizedThreadStart" /&gt;</ph>) that handles a named thread for the <ph id="ph3">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph>.</source>
          <target state="translated">建立及啟動新的 <ph id="ph1">&lt;see cref="T:System.Threading.Thread" /&gt;</ph> (從 <ph id="ph2">&lt;see cref="T:System.Threading.ParameterizedThreadStart" /&gt;</ph> 建構而成)，它會為 <ph id="ph3">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> 處理具名執行緒。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlBackgroundReader.StartThread(System.String)">
          <source>You specify the thread name as a parameter.</source>
          <target state="translated">請指定執行緒名稱做為參數。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlBackgroundReader.StartThread(System.String)">
          <source>The thread is already started.</source>
          <target state="translated">執行緒已經啟動。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlBackgroundReader.Type">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> of the current node.</source>
          <target state="translated">取得目前節點的 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlBackgroundReader.Type">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> of the current node; or <ph id="ph2">&lt;see langword="null" /&gt;</ph>, if the current reader position is not on an object.</source>
          <target state="translated">目前節點的 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>，如果目前讀取器位置不在物件上，則為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlBackgroundReader.Value">
          <source>Gets the value of the current node.</source>
          <target state="translated">取得目前節點的值。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlBackgroundReader.Value">
          <source>The value of the current node; or <ph id="ph1">&lt;see langword="null" /&gt;</ph>, if the current reader position is not on a <ph id="ph2">&lt;see cref="F:System.Xaml.XamlNodeType.Value" /&gt;</ph> node type.</source>
          <target state="translated">目前節點的值，如果目前讀取器位置不在 <ph id="ph2">&lt;see cref="F:System.Xaml.XamlNodeType.Value" /&gt;</ph> 節點型別上，則為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>