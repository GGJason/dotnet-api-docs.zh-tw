<Type Name="XamlReaderSettings" FullName="System.Xaml.XamlReaderSettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d9e6ae92facd4536b2b4e3e3d7c28a320791bc7e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36443925" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlReaderSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlReaderSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlReaderSettings" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlReaderSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlReaderSettings" />
  <TypeSignature Language="F#" Value="type XamlReaderSettings = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="437f5-101">指定 <see cref="T:System.Xaml.XamlReader" /> 實作的處理規則或選項設定。</span>
      <span class="sxs-lookup">
        <span data-stu-id="437f5-101">Specifies processing rules or option settings for a <see cref="T:System.Xaml.XamlReader" /> implementation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="437f5-102">根據預設，初始化<xref:System.Xaml.XamlReaderSettings>物件使用的值，針對其屬性會對應至預期的預設值，例如`false`布林值屬性或參考型別屬性的 null 值。</span><span class="sxs-lookup"><span data-stu-id="437f5-102">By default, an initialized <xref:System.Xaml.XamlReaderSettings> object uses values for its properties that correspond to expected defaults, such as `false` for Boolean properties or null values for reference-type properties.</span></span> <span data-ttu-id="437f5-103">預設值初始化會導致下列值：</span><span class="sxs-lookup"><span data-stu-id="437f5-103">Default initialization results in the following values:</span></span>  
  
-   <span data-ttu-id="437f5-104"><xref:System.Xaml.XamlReaderSettings.BaseUri%2A>和<xref:System.Xaml.XamlReaderSettings.LocalAssembly%2A>屬性`null`。</span><span class="sxs-lookup"><span data-stu-id="437f5-104">The <xref:System.Xaml.XamlReaderSettings.BaseUri%2A> and <xref:System.Xaml.XamlReaderSettings.LocalAssembly%2A> properties are `null`.</span></span>  
  
-   <span data-ttu-id="437f5-105"><xref:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements%2A> 屬性為 `false`。</span><span class="sxs-lookup"><span data-stu-id="437f5-105">The <xref:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements%2A> property is `false`.</span></span>  
  
-   <span data-ttu-id="437f5-106"><xref:System.Xaml.XamlReaderSettings.ProvideLineInfo%2A>屬性是`false`在物件模型中; 不過，它可以設定為`true`在執行階段根據載入的可執行檔和其偵錯設定，或 XAML 結構描述內容。</span><span class="sxs-lookup"><span data-stu-id="437f5-106">The <xref:System.Xaml.XamlReaderSettings.ProvideLineInfo%2A> property is `false` in the object model; however, it can be set to `true` at run time based on the loaded executables and their debug settings, or by XAML schema context.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="437f5-107">初始化 <see cref="T:System.Xaml.XamlReaderSettings" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="437f5-107">Initializes a new instance of the <see cref="T:System.Xaml.XamlReaderSettings" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlReaderSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReaderSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlReaderSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="437f5-108">初始化 <see cref="T:System.Xaml.XamlReaderSettings" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="437f5-108">Initializes a new instance of the <see cref="T:System.Xaml.XamlReaderSettings" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="437f5-109">如需有關初始化<xref:System.Xaml.XamlReaderSettings>預設執行個體，請參閱<xref:System.Xaml.XamlReaderSettings>。</span><span class="sxs-lookup"><span data-stu-id="437f5-109">For more information about initialization of a <xref:System.Xaml.XamlReaderSettings> default instance, see <xref:System.Xaml.XamlReaderSettings>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlReaderSettings (System.Xaml.XamlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReaderSettings.#ctor(System.Xaml.XamlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (settings As XamlReaderSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlReaderSettings(System::Xaml::XamlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlReaderSettings : System.Xaml.XamlReaderSettings -&gt; System.Xaml.XamlReaderSettings" Usage="new System.Xaml.XamlReaderSettings settings" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Xaml.XamlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="settings">
          <span data-ttu-id="437f5-110">現有的 <see cref="T:System.Xaml.XamlReaderSettings" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="437f5-110">An existing <see cref="T:System.Xaml.XamlReaderSettings" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="437f5-111">根據另一個 <see cref="T:System.Xaml.XamlReaderSettings" /> 物件中的值，初始化 <see cref="T:System.Xaml.XamlReaderSettings" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="437f5-111">Initializes a new instance of the <see cref="T:System.Xaml.XamlReaderSettings" /> class based on values in another <see cref="T:System.Xaml.XamlReaderSettings" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="437f5-112">這個建構函式會支援的 XAML 讀取器所在的其他設定也可來自讀取器程序中的其他參與者設定合併。</span><span class="sxs-lookup"><span data-stu-id="437f5-112">This constructor supports the merging of settings for XAML readers where additional settings can also come from other participants in the reader process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowProtectedMembersOnRoot">
      <MemberSignature Language="C#" Value="public bool AllowProtectedMembersOnRoot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowProtectedMembersOnRoot" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReaderSettings.AllowProtectedMembersOnRoot" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowProtectedMembersOnRoot As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowProtectedMembersOnRoot { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowProtectedMembersOnRoot : bool with get, set" Usage="System.Xaml.XamlReaderSettings.AllowProtectedMembersOnRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="437f5-113">取得或設定值，這個值表示在報告 XAML 型別表示時，根物件是否可以包含具有受保護程式碼存取模型的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="437f5-113">Gets or sets a value that indicates whether the root object may include members that have a protected code access model when it reports the XAML type representation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="437f5-114">如果根物件可以包含具有受保護程式碼存取模型的成員，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="437f5-114">
              <see langword="true" /> if the root object may include members that have a protected code access model; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="437f5-115">這項設定會與某些 XAML 實作，例如，其中根物件通常是"factory"模式類型，從產生的執行個體，該模式類型永遠不是實際的物件執行個體時的 WPF 相關。</span><span class="sxs-lookup"><span data-stu-id="437f5-115">This setting is relevant to some XAML implementations such as WPF where the root object is often a "factory" for generating an instance from a pattern type, when that pattern type is not always a practical object instance.</span></span> <span data-ttu-id="437f5-116">例如，根的`UserControl`有特定意義 WPF 和 Silverlight 應用程式模型，和`UserControl`可能具有受保護內容 (`UserControl.Content`) 剖析器需要存取。</span><span class="sxs-lookup"><span data-stu-id="437f5-116">For example, a root of `UserControl` has a certain meaning for WPF and Silverlight application models, and `UserControl` might have protected properties (`UserControl.Content`) that the parser needs access to.</span></span> <span data-ttu-id="437f5-117">工具和設計介面也需要這類屬性的存取權。</span><span class="sxs-lookup"><span data-stu-id="437f5-117">Tools and design surfaces also need access to such properties.</span></span> <span data-ttu-id="437f5-118">這些情況下應該通常會報告 XAML 類型系統做為可寫入屬性即使他們所保護的存取，在支援類型系統中。</span><span class="sxs-lookup"><span data-stu-id="437f5-118">These cases should generally be reported to the XAML type system as writable properties even though they have protected access in the backing type system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReaderSettings.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri with get, set" Usage="System.Xaml.XamlReaderSettings.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="437f5-119">取得或設定用來解析相對路徑的基底 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="437f5-119">Gets or sets the base URI that is used to resolve relative paths.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="437f5-120">要使用的基底 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="437f5-120">The base URI to use.</span>
          </span>
          <span data-ttu-id="437f5-121">預設值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="437f5-121">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="437f5-122">某些.NET Framework XAML 服務 API 的 URI 相關的屬性視為 Uri XAML 命名空間的字串。不過，這個屬性會使用 true<xref:System.Uri>型別。</span><span class="sxs-lookup"><span data-stu-id="437f5-122">Some URI-related properties in the .NET Framework XAML Services API treat URIs for XAML namespaces as strings; however, this property uses the true <xref:System.Uri> type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreUidsOnPropertyElements">
      <MemberSignature Language="C#" Value="public bool IgnoreUidsOnPropertyElements { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreUidsOnPropertyElements" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreUidsOnPropertyElements As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreUidsOnPropertyElements { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreUidsOnPropertyElements : bool with get, set" Usage="System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="437f5-123">取得或設定值，這個值指定 XAML 讀取器是否應該忽略存在於屬性 (Property) 項目中的 <see langword="x:Uid" /> 屬性 (Attribute) 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="437f5-123">Gets or sets a value that specifies whether the XAML reader should ignore values for <see langword="x:Uid" /> attributes that exist on property elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="437f5-124">如果讀取器應該忽略屬性 (Property) 項目上之 <see langword="true" /> 屬性 (Attribute) 的值，則為 <see langword="x:Uid" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="437f5-124">
              <see langword="true" /> if the reader should ignore values for <see langword="x:Uid" /> attributes on property elements.</span>
          </span>
          <span data-ttu-id="437f5-125">如果讀取器應該處理屬性 (Property) 項目上的 <see langword="false" /> 屬性 (Attribute)，則為 <see langword="x:Uid" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="437f5-125">
              <see langword="false" /> if the reader should process <see langword="x:Uid" /> attributes on property elements.</span>
          </span>
          <span data-ttu-id="437f5-126">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="437f5-126">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="437f5-127">當地語系化，過程`x:Uid`屬性用來識別在標記中的項目，好讓當地語系化工具可以當做離散實體當地語系化處理 XAML 項目。</span><span class="sxs-lookup"><span data-stu-id="437f5-127">During localization, the `x:Uid` attribute is used to identify elements in markup so that localization tools can process XAML elements as discrete entities for localization.</span></span> <span data-ttu-id="437f5-128">屬性通常未出現在 XAML 中的屬性項目。</span><span class="sxs-lookup"><span data-stu-id="437f5-128">Attributes do not usually appear on property elements in XAML.</span></span> <span data-ttu-id="437f5-129">不過，`x:Uid`是例外狀況，因為某些使用方式放入當地語系化的文字屬性項目做為內容，而不是為個別的物件可以接收其本身`x:Uid`。</span><span class="sxs-lookup"><span data-stu-id="437f5-129">However, `x:Uid` is an exception because some usages put localized text in a property element as content, instead of as a separate object that can receive its own `x:Uid`.</span></span> <span data-ttu-id="437f5-130">設定<xref:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements%2A>值設定為`true`啟用更嚴格的模式。</span><span class="sxs-lookup"><span data-stu-id="437f5-130">Setting an <xref:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements%2A> value to `true` enables a stricter mode.</span></span> <span data-ttu-id="437f5-131">預設值`false`會繼續處理屬性項目`x:Uid`屬性。</span><span class="sxs-lookup"><span data-stu-id="437f5-131">The default value of `false` continues to process property element `x:Uid` attributes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly LocalAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly LocalAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReaderSettings.LocalAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property LocalAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ LocalAssembly { System::Reflection::Assembly ^ get(); void set(System::Reflection::Assembly ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LocalAssembly : System.Reflection.Assembly with get, set" Usage="System.Xaml.XamlReaderSettings.LocalAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="437f5-132">取得或設定物件，這個物件表示目前要處理的本機組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="437f5-132">Gets or sets the object that represents the current local assembly for processing.</span>
          </span>
          <span data-ttu-id="437f5-133">這項組件資訊會用於呼叫 Helper API，例如 <see cref="M:System.Xaml.XamlType.GetAllMembers" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="437f5-133">This assembly information is used for calls to helper APIs such as <see cref="M:System.Xaml.XamlType.GetAllMembers" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="437f5-134">CLR 反映 <see cref="T:System.Reflection.Assembly" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="437f5-134">A CLR reflection <see cref="T:System.Reflection.Assembly" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvideLineInfo">
      <MemberSignature Language="C#" Value="public bool ProvideLineInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProvideLineInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReaderSettings.ProvideLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property ProvideLineInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProvideLineInfo { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ProvideLineInfo : bool with get, set" Usage="System.Xaml.XamlReaderSettings.ProvideLineInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="437f5-135">取得或設定值，這個值指定讀取器是否可以提供行號和位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="437f5-135">Gets or sets a value that specifies whether the reader can provide line number and position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="437f5-136">如果讀取器可以提供行號和位置資訊，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="437f5-136">
              <see langword="true" /> if the reader can provide line number and position information; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="437f5-137"><xref:System.Xaml.XamlReaderSettings.ProvideLineInfo%2A> 是`false`在物件模型中; 不過，它可以設定為`true`在執行階段以載入可執行檔和其偵錯設定。</span><span class="sxs-lookup"><span data-stu-id="437f5-137"><xref:System.Xaml.XamlReaderSettings.ProvideLineInfo%2A> is `false` in the object model; however, it can be set to `true` at run time based on the loaded executables and their debug settings.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValuesMustBeString">
      <MemberSignature Language="C#" Value="public bool ValuesMustBeString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValuesMustBeString" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReaderSettings.ValuesMustBeString" />
      <MemberSignature Language="VB.NET" Value="Public Property ValuesMustBeString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValuesMustBeString { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValuesMustBeString : bool with get, set" Usage="System.Xaml.XamlReaderSettings.ValuesMustBeString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="437f5-138">取得或設定值，這個值指定讀取器是否強制將所有 <see langword="Value" /> 節點視為 <see langword="String" /> 型別來處理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="437f5-138">Gets or sets a value that specifies whether the reader enforces that all <see langword="Value" /> nodes are processed as a <see langword="String" /> type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="437f5-139">如果讀取器強制規定 <see langword="true" /> 節點中只包含 <see langword="String" />，則為 <see langword="Value" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="437f5-139">
              <see langword="true" /> if the reader enforces that only <see langword="String" /> is contained in <see langword="Value" /> nodes; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="437f5-140">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="437f5-140">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="437f5-141">除了<xref:System.String>，可能`Value`下某些 XAML 實作的內容是<xref:System.Windows.Markup.XData>。</span><span class="sxs-lookup"><span data-stu-id="437f5-141">In addition to <xref:System.String>, a possible `Value` content under some XAML implementations is <xref:System.Windows.Markup.XData>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>