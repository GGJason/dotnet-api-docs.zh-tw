<Type Name="AmbientPropertyValue" FullName="System.Xaml.AmbientPropertyValue">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3a44eb2004abcae643ccb9cf6df0b05aa26fb2db" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39985646" /></Metadata><TypeSignature Language="C#" Value="public class AmbientPropertyValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AmbientPropertyValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.AmbientPropertyValue" />
  <TypeSignature Language="VB.NET" Value="Public Class AmbientPropertyValue" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientPropertyValue" />
  <TypeSignature Language="F#" Value="type AmbientPropertyValue = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>報告環境屬性的相關資訊，做為 <see cref="T:System.Xaml.IAmbientProvider" /> 實作的一部分。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.AmbientPropertyValue> 表示藉由呼叫傳回的資訊項目<xref:System.Xaml.IAmbientProvider>服務方法。 `GetAll`列舉型別或陣列的方法會傳回<xref:System.Xaml.AmbientPropertyValue>項目;`GetFirst`方法會傳回單一<xref:System.Xaml.AmbientPropertyValue>。  
  
## <a name="about-ambient-properties"></a>關於環境的屬性  
 環境屬性是其屬性值應該是可用來在 XAML 節點結構的值轉換器使用方式以及其下的物件圖形的屬性。 環境概念是相關 XAML 處理器在載入路徑的物件撰寫階段或儲存的序列化階段期間的路徑。  
  
 型別也可歸因環境。 在此情況下，使用屬性化的類型的所有屬性會都報告環境。  
  
 在載入路徑案例中，環境屬性值可能會影響 XAML 節點結構中存在其下方的其他屬性的物件圖形產生值。 當處理成 XAML 節點資料流，環境的概念表示，環境屬性值必須是適用於類型轉換器和標記延伸模組，從`StartObject`至`EndObject`。 同樣地，類型轉換器或標記延伸，可針對儲存路徑可以查閱環境的屬性和它的值。 因此，產生的 XAML 是較佳的反覆存取表示。  
  
 根據其語言定義中，XAML 所指定的物件的成員必須處理的順序。 不過，任何環境屬性值必須先處理由 XAML 讀取器，讓類型轉換器和標記延伸使用方式包含在其他內容中可以存取透過<xref:System.Xaml.IAmbientProvider>服務。  
  
 <xref:System.Xaml.XamlMember.DependsOn%2A> 是一種類似的概念，也會影響 XAML 節點處理順序。 不過，<xref:System.Xaml.XamlMember.DependsOn%2A>僅適用於對等成員與節點關聯性，所以無法影響所有下階。 此外，<xref:System.Xaml.XamlMember.DependsOn%2A>直接影響物件圖表屬性設定，而環境的技術會依賴型別轉換器或標記延伸模組。 在環境的技術，必須也有特定的型別轉換器或標記延伸模組定義。 這是由每個型別轉換器或標記延伸，以判斷應該如何解譯和套用至型別轉換器或標記延伸的使用位置的圖形物件位置的環境屬性值。  
  
## <a name="wpf-usage-notes"></a>WPF 使用注意事項  
 所示的環境屬性案例[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]功能集是<xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>，這可以限定所需的屬性名稱查閱其他值。 在此情況下，<xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>值會限定<xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType>中下方的 XAML 節點的值。 <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> 使用的型別轉換子行為<xref:System.Windows.DependencyProperty>。 此行為存取環境<xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>值，藉由查詢<xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A>從適用於類型轉換器和標記延伸的服務內容。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.IAmbientProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientPropertyValue (System.Xaml.XamlMember property, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlMember property, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AmbientPropertyValue.#ctor(System.Xaml.XamlMember,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (property As XamlMember, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientPropertyValue(System::Xaml::XamlMember ^ property, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Xaml.AmbientPropertyValue : System.Xaml.XamlMember * obj -&gt; System.Xaml.AmbientPropertyValue" Usage="new System.Xaml.AmbientPropertyValue (property, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">表示環境屬性的識別項。</param>
        <param name="value">要報告的值。</param>
        <summary>初始化 <see cref="T:System.Xaml.AmbientPropertyValue" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrievedProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember RetrievedProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember RetrievedProperty" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.AmbientPropertyValue.RetrievedProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RetrievedProperty As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlMember ^ RetrievedProperty { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RetrievedProperty : System.Xaml.XamlMember" Usage="System.Xaml.AmbientPropertyValue.RetrievedProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得表示環境屬性的 XAML 型別系統識別項 (<see cref="T:System.Xaml.XamlMember" />)。</summary>
        <value>表示環境屬性的識別項。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.AmbientPropertyValue.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Xaml.AmbientPropertyValue.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得環境屬性的值。</summary>
        <value>環境屬性的值。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>