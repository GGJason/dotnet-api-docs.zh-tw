<Type Name="AmbientPropertyValue" FullName="System.Xaml.AmbientPropertyValue">
  <TypeSignature Language="C#" Value="public class AmbientPropertyValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AmbientPropertyValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.AmbientPropertyValue" />
  <TypeSignature Language="VB.NET" Value="Public Class AmbientPropertyValue" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientPropertyValue" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f56c8-101">報告環境屬性的相關資訊，做為 <see cref="T:System.Xaml.IAmbientProvider" /> 實作的一部分。</span><span class="sxs-lookup"><span data-stu-id="f56c8-101">Reports information about an ambient property, as part of an <see cref="T:System.Xaml.IAmbientProvider" /> implementation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f56c8-102"><xref:System.Xaml.AmbientPropertyValue> 代表呼叫所傳回的資訊項目<xref:System.Xaml.IAmbientProvider>服務方法。</span><span class="sxs-lookup"><span data-stu-id="f56c8-102"><xref:System.Xaml.AmbientPropertyValue> represents an information item that is returned by calling an <xref:System.Xaml.IAmbientProvider> service method.</span></span> <span data-ttu-id="f56c8-103">`GetAll`列舉型別或陣列的方法會傳回<xref:System.Xaml.AmbientPropertyValue>項目;`GetFirst`方法傳回單一<xref:System.Xaml.AmbientPropertyValue>。</span><span class="sxs-lookup"><span data-stu-id="f56c8-103">The `GetAll` methods return enumerations or arrays of <xref:System.Xaml.AmbientPropertyValue> items; the `GetFirst` methods return a single <xref:System.Xaml.AmbientPropertyValue>.</span></span>  
  
## <a name="about-ambient-properties"></a><span data-ttu-id="f56c8-104">關於環境的屬性</span><span class="sxs-lookup"><span data-stu-id="f56c8-104">About Ambient Properties</span></span>  
 <span data-ttu-id="f56c8-105">環境的屬性是的屬性，其屬性值應該是可用值轉換器的用法中的 XAML 節點結構以及其下的物件圖形。</span><span class="sxs-lookup"><span data-stu-id="f56c8-105">An ambient property is a property whose property value should be available to value converter usage in the XAML node structure and to the object graph underneath it.</span></span> <span data-ttu-id="f56c8-106">環境概念是 XAML 處理器相關在載入路徑的物件寫入階段或 「 序列化 」 階段的儲存路徑。</span><span class="sxs-lookup"><span data-stu-id="f56c8-106">The ambient concept  is relevant for a XAML processor during the object-writing phase of the load path or the serialization phase of a save path.</span></span>  
  
 <span data-ttu-id="f56c8-107">型別可以也將歸類為環境。</span><span class="sxs-lookup"><span data-stu-id="f56c8-107">A type can also be attributed as ambient.</span></span> <span data-ttu-id="f56c8-108">在此情況下，使用屬性化的類型的所有屬性都會都回報為環境。</span><span class="sxs-lookup"><span data-stu-id="f56c8-108">In this case, all properties that use the attributed type are reported as ambient.</span></span>  
  
 <span data-ttu-id="f56c8-109">在載入路徑案例中，環境屬性值可能會影響其下方存在於 XAML 節點結構的其他屬性的物件圖形產生值。</span><span class="sxs-lookup"><span data-stu-id="f56c8-109">In the load path case, the ambient property value might influence the object graph produced value of other properties that exist underneath it in a XAML node structure.</span></span> <span data-ttu-id="f56c8-110">處理 XAML 節點資料流的形式，環境的概念表示，環境屬性值必須是適用於類型轉換器和標記延伸從`StartObject`至`EndObject`。</span><span class="sxs-lookup"><span data-stu-id="f56c8-110">When processed as a XAML node stream, the ambient concept implies that the ambient property value must be available to type converters and markup extensions from `StartObject` to `EndObject`.</span></span> <span data-ttu-id="f56c8-111">同樣地，類型轉換器或標記延伸，可針對儲存路徑可查閱環境的屬性和它的值。</span><span class="sxs-lookup"><span data-stu-id="f56c8-111">Similarly, a type converter or markup extension that is used for the save path can look up the ambient property and its value.</span></span> <span data-ttu-id="f56c8-112">因此，所產生的 XAML 是更好的反覆存取表示。</span><span class="sxs-lookup"><span data-stu-id="f56c8-112">Therefore, the XAML that is produced is a better round-trip representation.</span></span>  
  
 <span data-ttu-id="f56c8-113">根據其語言定義中，XAML 所指定的物件的成員必須處理的順序。</span><span class="sxs-lookup"><span data-stu-id="f56c8-113">By its language definition, XAML does not specify the order in which members of an object must be processed.</span></span> <span data-ttu-id="f56c8-114">不過，任何環境屬性值必須先處理由 XAML 讀取器，讓類型轉換器和標記延伸使用方式的其他屬性中所包含的可以存取透過<xref:System.Xaml.IAmbientProvider>服務。</span><span class="sxs-lookup"><span data-stu-id="f56c8-114">However, any ambient property value must be processed first by the XAML reader so that the type converter and markup extension usage that are contained in other properties can access it through the <xref:System.Xaml.IAmbientProvider> service.</span></span>  
  
 <span data-ttu-id="f56c8-115"><xref:System.Xaml.XamlMember.DependsOn%2A> 是一種類似的概念，也會影響 XAML 節點處理順序。</span><span class="sxs-lookup"><span data-stu-id="f56c8-115"><xref:System.Xaml.XamlMember.DependsOn%2A> is a similar concept that also influences XAML node-processing order.</span></span> <span data-ttu-id="f56c8-116">不過，<xref:System.Xaml.XamlMember.DependsOn%2A>只用於對等成員與節點關聯性; 它不會影響所有下階。</span><span class="sxs-lookup"><span data-stu-id="f56c8-116">However, <xref:System.Xaml.XamlMember.DependsOn%2A> can only be used for peer member and node relationships; it cannot influence all descendants.</span></span> <span data-ttu-id="f56c8-117">此外，<xref:System.Xaml.XamlMember.DependsOn%2A>直接影響物件圖表屬性設定，而環境的技術會依賴型別轉換子或標記延伸。</span><span class="sxs-lookup"><span data-stu-id="f56c8-117">Also, <xref:System.Xaml.XamlMember.DependsOn%2A> directly influences object graph property setting, whereas the ambient technique relies on type converters or markup extensions.</span></span> <span data-ttu-id="f56c8-118">環境的技術，必須也有特定的型別轉換子或標記延伸的定義。</span><span class="sxs-lookup"><span data-stu-id="f56c8-118">In the ambient technique, there must also be a specific type converter or markup extension definition.</span></span> <span data-ttu-id="f56c8-119">這是由每個型別轉換子或標記延伸，以判斷應如何解譯並套用至使用類型轉換器或標記延伸的物件圖形位置的環境屬性值。</span><span class="sxs-lookup"><span data-stu-id="f56c8-119">It is up to each type converter or markup extension to determine how the ambient property value should be interpreted and applied to the object graph location where the type converter or markup extension is used.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="f56c8-120">WPF 使用注意事項</span><span class="sxs-lookup"><span data-stu-id="f56c8-120">WPF Usage Notes</span></span>  
 <span data-ttu-id="f56c8-121">如下所示的環境屬性案例[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]功能集<xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>，這可以限定必要的屬性名稱查閱，如需其他值。</span><span class="sxs-lookup"><span data-stu-id="f56c8-121">An ambient property scenario that is illustrated in the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] feature set is <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>, which can qualify the necessary property name lookups for other values.</span></span> <span data-ttu-id="f56c8-122">在此情況下，<xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>值會限定<xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType>其下方的 XAML 節點中的值。</span><span class="sxs-lookup"><span data-stu-id="f56c8-122">In this case, the <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> value qualifies the <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> values in the XAML nodes underneath it.</span></span> <span data-ttu-id="f56c8-123"><xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> 使用類型轉換器行為<xref:System.Windows.DependencyProperty>。</span><span class="sxs-lookup"><span data-stu-id="f56c8-123"><xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> uses the type converter behavior for a <xref:System.Windows.DependencyProperty>.</span></span> <span data-ttu-id="f56c8-124">此行為存取環境<xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>藉由查詢值<xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A>從適用於類型轉換器和標記延伸的服務內容。</span><span class="sxs-lookup"><span data-stu-id="f56c8-124">This behavior accesses the ambient <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> value by querying <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> from a service context that is available to type converters and markup extensions.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.IAmbientProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientPropertyValue (System.Xaml.XamlMember property, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlMember property, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AmbientPropertyValue.#ctor(System.Xaml.XamlMember,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (property As XamlMember, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientPropertyValue(System::Xaml::XamlMember ^ property, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="f56c8-125">表示環境屬性的識別項。</span><span class="sxs-lookup"><span data-stu-id="f56c8-125">The identifier that represents the ambient property.</span></span></param>
        <param name="value"><span data-ttu-id="f56c8-126">要報告的值。</span><span class="sxs-lookup"><span data-stu-id="f56c8-126">The value to report.</span></span></param>
        <summary><span data-ttu-id="f56c8-127">初始化 <see cref="T:System.Xaml.AmbientPropertyValue" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="f56c8-127">Initializes a new instance of the <see cref="T:System.Xaml.AmbientPropertyValue" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrievedProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember RetrievedProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember RetrievedProperty" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.AmbientPropertyValue.RetrievedProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RetrievedProperty As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlMember ^ RetrievedProperty { System::Xaml::XamlMember ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f56c8-128">取得表示環境屬性的 XAML 型別系統識別項 (<see cref="T:System.Xaml.XamlMember" />)。</span><span class="sxs-lookup"><span data-stu-id="f56c8-128">Gets the XAML type system identifier (<see cref="T:System.Xaml.XamlMember" />) that represents the ambient property.</span></span></summary>
        <value><span data-ttu-id="f56c8-129">表示環境屬性的識別項。</span><span class="sxs-lookup"><span data-stu-id="f56c8-129">The identifier that represents the ambient property.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.AmbientPropertyValue.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f56c8-130">取得環境屬性的值。</span><span class="sxs-lookup"><span data-stu-id="f56c8-130">Gets the value of the ambient property.</span></span></summary>
        <value><span data-ttu-id="f56c8-131">環境屬性的值。</span><span class="sxs-lookup"><span data-stu-id="f56c8-131">The value of the ambient property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>