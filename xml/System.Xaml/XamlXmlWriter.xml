<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlXmlWriter.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54386495bae40713632b22d0af871e9adf9f3d979.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4386495bae40713632b22d0af871e9adf9f3d979</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlXmlWriter">
          <source>Uses a <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> support class to write a XAML node stream to a text or markup serialized form.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 支援類別，將 XAML 節點資料流寫入成文字或標記序列化形式。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>This class is typically used in serialization scenarios.</source>
          <target state="translated">這個類別通常用於序列化案例。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>How to Use XamlXmlWriter</source>
          <target state="translated">如何使用 XamlXmlWriter</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlWriter&gt;</ph> API has several methods that write different types of XAML nodes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlWriter&gt;</ph>應用程式開發介面有數種方法，撰寫不同類型的 XAML 節點。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>Collectively, these are referred to in documentation as the <ph id="ph1">`Write`</ph> methods of a <ph id="ph2">&lt;xref:System.Xaml.XamlWriter&gt;</ph>.</source>
          <target state="translated">整體而言，這些會參照文件集當做<ph id="ph1">`Write`</ph>方法<ph id="ph2">&lt;xref:System.Xaml.XamlWriter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> uses several internal state classes to determine what to do when one of its <ph id="ph2">`Write`</ph> implementations is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> 若要判斷要執行的工作時使用內部狀態的數個類別的其中一個其<ph id="ph2">`Write`</ph>實作會呼叫。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>A <ph id="ph1">`Write`</ph> call uses the states to determine whether the requested element, attribute, or value can be written, or whether an exception is thrown.</source>
          <target state="translated">A<ph id="ph1">`Write`</ph>呼叫會使用以判斷是否可以寫入要求的項目、 屬性或值，或是否擲回例外狀況的狀態。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>For example, if you call <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt;</ph> and the state of the <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> current node position is on a value or within a member, an exception is thrown.</source>
          <target state="translated">例如，如果您呼叫<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt;</ph>和狀態<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>目前的節點位置的值或成員內時，會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>Typically, callers of the <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> API should be aware of the type of the current XAML node that is coming from the XAML reader and the XAML node stream.</source>
          <target state="translated">一般而言，呼叫端的<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>應該注意目前來自 XAML 讀取器和 XAML 節點資料流的 XAML 節點型別的 API。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>Based on this knowledge, callers should avoid calling <ph id="ph1">`Write`</ph> APIs that are not relevant to the current node type.</source>
          <target state="translated">根據這項知識，呼叫端應該避免呼叫<ph id="ph1">`Write`</ph>與目前的節點類型不相關的 Api。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>XAML Namespaces and XamlXmlWriter</source>
          <target state="translated">XAML 命名空間和 XamlXmlWriter</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>The XAML namespace writing behavior of <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> is complex and is not limited to explicit calls to <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A&gt;</ph>.</source>
          <target state="translated">XAML 命名空間撰寫行為<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>相當複雜，不限於明確呼叫<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>Instead, other <ph id="ph1">`Write`</ph> calls, such as <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A&gt;</ph>, might require that the namespace declaration be written at particular points in the node structure.</source>
          <target state="translated">相反地，其他<ph id="ph1">`Write`</ph>等呼叫<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A&gt;</ph>，可能會要求您將撰寫命名空間宣告中的節點結構的特定點。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>The XAML writer either generates a prefix by its own logic, or uses information from the <ph id="ph1">&lt;xref:System.Xaml.INamespacePrefixLookup&gt;</ph> service to determine a preferred prefix.</source>
          <target state="translated">XAML 寫入器自己的邏輯，以產生前置詞，或使用從資訊<ph id="ph1">&lt;xref:System.Xaml.INamespacePrefixLookup&gt;</ph>服務以判斷慣用的前置詞。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>Also, explicit <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A&gt;</ph> calls might defer or might return nothing if the XAML namespace declaration is already applicable and declared elsewhere.</source>
          <target state="translated">此外，明確<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A&gt;</ph>呼叫可能會延遲，或可能會傳回任何項目是否 XAML 命名空間宣告已適用和宣告其他位置。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>Write Method Exceptions</source>
          <target state="translated">撰寫方法例外狀況</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>Exceptions thrown by the <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph><ph id="ph2">`Write`</ph> methods are typically either <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> or <ph id="ph4">&lt;xref:System.Xaml.XamlXmlWriterException&gt;</ph>.</source>
          <target state="translated">擲回例外狀況<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph><ph id="ph2">`Write`</ph>方法通常都是<ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>或<ph id="ph4">&lt;xref:System.Xaml.XamlXmlWriterException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> often indicates that a XAML reader passed an invalid node structure into the XAML node stream.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>通常表示 XAML 讀取器傳遞至 XAML 節點資料流不正確的節點結構。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>In this case the node structure is invalid for reasons that are not related to validation of a XAML schema or a XAML schema context.</source>
          <target state="translated">在此情況下的節點結構與 XAML 結構描述或 XAML 結構描述內容的驗證不相關的原因不正確。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>Rather, the node stream is invalid in its basic form.</source>
          <target state="translated">相反地，在節點資料流不正確最基本的形式。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>For example, if a faulty XAML reader implementation generated a XAML node stream that contained two consecutive <ph id="ph1">`StartObject`</ph> nodes, the attempt to call the second <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A&gt;</ph> would throw an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">例如，如果故障的 XAML 讀取器實作產生 XAML 節點資料流包含兩個連續<ph id="ph1">`StartObject`</ph>節點，嘗試呼叫第二個<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A&gt;</ph>會擲回<ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>All XAML writers would consider such an operation to be invalid.</source>
          <target state="translated">所有的 XAML 寫入器會考慮這類作業可能無效。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>Another example of an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is when XAML namespace information is unavailable through the XAML schema context that applies to the current node stream position.</source>
          <target state="translated">另一個範例<ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>XAML 命名空間資訊無法透過適用於目前的節點資料流位置的 XAML 結構描述內容時。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>A <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterException&gt;</ph> indicates an exception where this particular XAML writer implementation chooses to throw an exception based on its intended functionality.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterException&gt;</ph>表示此特定的 XAML 寫入器實作會擲回例外狀況根據其特定的功能選擇例外狀況。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>A <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterException&gt;</ph> can indicate specific cases where a <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> violates its own state or settings.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterException&gt;</ph>可以表示特定的情況下其中<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>違反其自己的狀態或設定。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlXmlWriter">
          <source>For example, a <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterException&gt;</ph> might result from attempts to write XAML namespace information into a position that the <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> and its serialization format do not support, or writing duplicate members when the instance's <ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph> forbid it.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterException&gt;</ph>可能因嘗試寫入的位置中的 XAML 命名空間資訊的<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>，而其序列化格式不支援，或寫入重複的項目時的執行個體<ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph>受制於。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlXmlWriter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
          <source>The stream to write.</source>
          <target state="translated">要寫入的資料流。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
          <source>The XAML schema context for the XAML writer.</source>
          <target state="translated">XAML 寫入器的 XAML 結構描述內容。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> class from a stream.</source>
          <target state="translated">從資料流初始化 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
          <source><ph id="ph1">&lt;paramref name="schemaContext" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="schemaContext" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that writes the output.</source>
          <target state="translated">寫入輸出的 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)">
          <source>The XAML schema context for the XAML writer.</source>
          <target state="translated">XAML 寫入器的 XAML 結構描述內容。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> class from a <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> basis.</source>
          <target state="translated">從 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> 基準初始化 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)">
          <source><ph id="ph1">&lt;paramref name="textWriter" /&gt;</ph> or <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="textWriter" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> that writes the output.</source>
          <target state="translated">寫入輸出的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)">
          <source>The XAML schema context for the XAML writer.</source>
          <target state="translated">XAML 寫入器的 XAML 結構描述內容。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> class from a <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> basis.</source>
          <target state="translated">從 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> 基準初始化 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)">
          <source><ph id="ph1">&lt;paramref name="xmlWriter" /&gt;</ph> or <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xmlWriter" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>The stream to write.</source>
          <target state="translated">要寫入的資料流。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>The XAML schema context for the XAML writer.</source>
          <target state="translated">XAML 寫入器的 XAML 結構描述內容。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriterSettings" /&gt;</ph>, which typically has specific non-default settings.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriterSettings" /&gt;</ph> 的執行個體，通常具有特定非預設設定。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> class from a stream using a writer settings object.</source>
          <target state="translated">使用寫入器設定物件，從資料流初始化 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>Do not change any values of the <ph id="ph1">`settings`</ph> object after the <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> instance is constructed.</source>
          <target state="translated">不會變更的任何值<ph id="ph1">`settings`</ph>物件之後<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>建構執行個體。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> cannot update its internal settings based on settings values that are mutable at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> 無法更新其內部的設定，根據在執行階段是可變動的設定值。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>Settings should be provided for initialization only.</source>
          <target state="translated">應提供設定，只有初始設定。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>You can merge settings from an active XAML writer by using one of the <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph> constructor signatures; however, you must then apply these settings to a new XAML writer instance instead of attempting to adjust the existing one.</source>
          <target state="translated">您可以使用其中一種合併從作用中的 XAML 寫入器設定<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph>建構函式簽章; 不過，您必須再將這些設定套用到新的 XAML 寫入器執行個體，而不是嘗試調整現有。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> or <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> 是 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that writes the output.</source>
          <target state="translated">寫入輸出的 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>The XAML schema context for the XAML writer.</source>
          <target state="translated">XAML 寫入器的 XAML 結構描述內容。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriterSettings" /&gt;</ph>, which typically has specific non-default settings.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriterSettings" /&gt;</ph> 的執行個體，通常具有特定非預設設定。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> class from a <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> basis using a settings object.</source>
          <target state="translated">使用設定物件，從 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> 基準初始化 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>Do not change any values of the <ph id="ph1">`settings`</ph> object after the <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> instance is constructed.</source>
          <target state="translated">不會變更的任何值<ph id="ph1">`settings`</ph>物件之後<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>建構執行個體。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> cannot update its internal settings based on settings values that are mutable at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> 無法更新其內部的設定，根據在執行階段是可變動的設定值。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>Settings should be provided for initialization only.</source>
          <target state="translated">應提供設定，只有初始設定。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>You can merge settings from an active XAML writer by using one of the <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph> constructor signatures; however, you must then apply these settings to a new XAML writer instance instead of attempting to adjust the existing one.</source>
          <target state="translated">您可以使用其中一種合併從作用中的 XAML 寫入器設定<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph>建構函式簽章; 不過，您必須再將這些設定套用到新的 XAML 寫入器執行個體，而不是嘗試調整現有。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source><ph id="ph1">&lt;paramref name="textWriter" /&gt;</ph> or <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="textWriter" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> that writes the output.</source>
          <target state="translated">寫入輸出的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>The XAML schema context for the XAML writer.</source>
          <target state="translated">XAML 寫入器的 XAML 結構描述內容。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriterSettings" /&gt;</ph>, which typically has specific non-default settings.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriterSettings" /&gt;</ph> 的執行個體，通常具有特定非預設設定。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> class from a <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> basis using a settings object.</source>
          <target state="translated">使用設定物件，從 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> 基準初始化 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>Do not change any values of the <ph id="ph1">`settings`</ph> object after the <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> instance is constructed.</source>
          <target state="translated">不會變更的任何值<ph id="ph1">`settings`</ph>物件之後<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>建構執行個體。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> cannot update its internal settings based on settings values that are mutable at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> 無法更新其內部的設定，根據在執行階段是可變動的設定值。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>Settings should be provided for initialization only.</source>
          <target state="translated">應提供設定，只有初始設定。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source>You can merge settings from an active XAML writer by using one of the <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph> constructor signatures; however, you must then apply these settings to a new XAML writer instance instead of attempting to adjust the existing one.</source>
          <target state="translated">您可以使用其中一種合併從作用中的 XAML 寫入器設定<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph>建構函式簽章; 不過，您必須再將這些設定套用到新的 XAML 寫入器執行個體，而不是嘗試調整現有。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
          <source><ph id="ph1">&lt;paramref name="xmlWriter" /&gt;</ph> or <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xmlWriter" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="schemaContext" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release the unmanaged resources; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示釋放 Unmanaged 資源，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> 所使用的 Unmanaged 資源，並選擇性釋放 Managed 資源。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)">
          <source>This implementation calls <ph id="ph1">`Close`</ph> on the underlying <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.TextWriter&gt;</ph> for cases where <ph id="ph4">&lt;xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A&gt;</ph> is <ph id="ph5">`true`</ph> in any supplied <ph id="ph6">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph>.</source>
          <target state="translated">這個實作會呼叫<ph id="ph1">`Close`</ph>基礎<ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>或<ph id="ph3">&lt;xref:System.IO.TextWriter&gt;</ph>的情況下其中<ph id="ph4">&lt;xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A&gt;</ph>是<ph id="ph5">`true`</ph>提供任何<ph id="ph6">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)">
          <source>Otherwise, it calls <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter.Flush%2A&gt;</ph>.</source>
          <target state="translated">否則，它會呼叫<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter.Flush%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.Flush">
          <source>Calls the <ph id="ph1">&lt;see langword="Flush" /&gt;</ph> method of the underlying <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>, which writes anything that is currently in the buffer, and then closes the writer.</source>
          <target state="translated">呼叫基礎 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 或 <ph id="ph3">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 的 <ph id="ph1">&lt;see langword="Flush" /&gt;</ph> 方法 (這個方法會寫入目前在緩衝區的任何資料)，然後關閉寫入器。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.Flush">
          <source>The <ph id="ph1">`Dispose`</ph> behavior for a <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> can be influenced by its writer settings, especially by <ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph>行為<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>可能受到其寫入器設定，尤其是藉由<ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlXmlWriter.SchemaContext">
          <source>Gets the XAML schema context that this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> uses for processing.</source>
          <target state="translated">取得這個 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> 處理時使用的 XAML 結構描述內容。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlXmlWriter.SchemaContext">
          <source>The XAML schema context that this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> uses for XAML processing.</source>
          <target state="translated">這個 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> 處理 XAML 時使用的 XAML 結構描述內容。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlXmlWriter.SchemaContext">
          <source>A XAML writer typically gets its XAML schema context from the associated XAML reader that is supplying the XAML node stream.</source>
          <target state="translated">XAML 寫入器通常會從相關聯的 XAML 讀取器提供 XAML 節點資料流取得其 XAML 結構描述內容。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlXmlWriter.Settings">
          <source>Gets the writer settings that this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> uses for XAML processing.</source>
          <target state="translated">取得這個 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> 處理 XAML 時使用的寫入器設定。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlXmlWriter.Settings">
          <source>The writer settings that this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> uses for XAML processing.</source>
          <target state="translated">這個 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlXmlWriter" /&gt;</ph> 處理 XAML 時使用的寫入器設定。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlXmlWriter.Settings">
          <source>The value that you get from this property is a copy and not a reference.</source>
          <target state="translated">複本而不是參考您取得這個屬性的值。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlXmlWriter.Settings">
          <source>Changing property values on the settings does not affect the active <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>.</source>
          <target state="translated">變更屬性值的設定不會影響作用中<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteEndMember">
          <source>Writes a XAML end member node to the underlying <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">將 XAML 結束成員節點寫入至基礎 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteEndMember">
          <source>Throws an exception if the current position of the XAML node stream is not within a member, or if the internal writer state does not support writing to an end member.</source>
          <target state="translated">如果 XAML 節點資料流目前的位置不在成員內，或內部寫入器狀態不支援寫入至結束成員，則會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteEndMember">
          <source>The current position of the XAML node stream is not within a member.</source>
          <target state="translated">XAML 節點資料流的目前位置不在成員之內。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteEndMember">
          <source>The current writer state does not support writing an end member.</source>
          <target state="translated">目前的寫入器狀態並不支援寫入結尾成員。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteEndObject">
          <source>Writes a XAML end object node to the underlying <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">將 XAML 結束物件節點寫入至基礎 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteEndObject">
          <source>Throws an exception if the current position of the XAML node stream that is being processed is incompatible with writing an end object.</source>
          <target state="translated">如果處理中 XAML 節點資料流目前的位置不適合寫入結束物件，則會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.WriteEndObject">
          <source>In markup and text representations of XAML, an end object is a closing tag.</source>
          <target state="translated">XAML 的標記和文字表示法，在結束物件會是結尾標記。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.WriteEndObject">
          <source>The most common case where <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown by <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt;</ph> is when the current XAML node stream position is still within a member, and <ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt;</ph> is called.</source>
          <target state="translated">最常見情況<ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>，所擲回<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt;</ph>仍在成員中，目前的 XAML 節點資料流位置時，會和<ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt;</ph>呼叫。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteEndObject">
          <source>The current position of the XAML node stream is not in a scope where an end member can be written.</source>
          <target state="translated">XAML 節點資料流目前的位置不在可寫入結尾成員的範圍中。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteEndObject">
          <source>The current writer state does not support writing an end object.</source>
          <target state="translated">目前的寫入器狀態並不支援寫入結尾物件。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteGetObject">
          <source>Writes an object for cases where the specified object is a default or implicit value of the property that is being written, instead of being specified as an object value in the input XAML node set.</source>
          <target state="translated">當指定之物件為寫入中屬性的預設值或隱含值 (而非指定為在輸入 XAML 節點集中的物件值) 時，寫入物件。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>The XAML namespace declaration to write.</source>
          <target state="translated">要寫入的 XAML 命名空間宣告。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>Writes namespace information to the underlying <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">將命名空間資訊寫入至基礎 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>May throw an exception for certain states; however, may instead defer writing the namespace information until the writer and the XAML node stream that is being processed reaches a position where a XAML namespace declaration can be inserted.</source>
          <target state="translated">可能會針對特定狀態擲回例外狀況，但也可能會延後寫入命名空間資訊，直到寫入器及處理中 XAML 節點資料流到達可以插入 XAML 命名空間宣告的位置為止。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source><ph id="ph1">&lt;paramref name="namespaceDeclaration" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="namespaceDeclaration" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source><ph id="ph1">&lt;paramref name="namespaceDeclaration" /&gt;</ph> is not a valid XAML namespace declaration (has a null prefix or null identifier component).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="namespaceDeclaration" /&gt;</ph> 不是有效的 XAML 命名空間宣告 (具有 null 前置詞或 null 識別項元件)。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
          <source>The current writer state does not support writing a XAML namespace declaration.</source>
          <target state="translated">目前的寫入器狀態並不支援寫入 XAML 命名空間宣告。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>The XAML member identifier for the member to write.</source>
          <target state="translated">要寫入之成員的 XAML 成員識別項。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>Writes a XAML start member node to the underlying <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">將 XAML 開始成員節點寫入至基礎 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>Throws an exception if the current position of the XAML node stream is within another member, or if it is not in a scope or writer state where a start member can be written.</source>
          <target state="translated">如果 XAML 節點資料流目前的位置在另一個成員內，或是不在可寫入開始成員的範圍或寫入器狀態，則會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>Internal default logic in the <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> first attempts to write the member in attribute form.</source>
          <target state="translated">中的內部預設邏輯<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>第一次嘗試以屬性形式寫入成員。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>If no attribute form is supported because the property or its value does not support text syntax, a property element is written instead.</source>
          <target state="translated">如果因為在屬性或其值不支援文字語法不支援任何屬性的形式，則會改寫入屬性項目。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>If the property is a XAML content property, a <ph id="ph1">`GetObject`</ph> case, or an implicit property, other XAML forms might be written, such as inner text or an object child that has no intervening member.</source>
          <target state="translated">如果屬性是 XAML 內容屬性，<ph id="ph1">`GetObject`</ph>的情況下或隱含的屬性，其他 XAML 形式撰寫，例如內部文字或沒有中介的成員物件子系。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>The duplicate member exception is never thrown if <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings.AssumeValidInput%2A&gt;</ph> is <ph id="ph2">`true`</ph> in the <ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph> object that was used for settings for this <ph id="ph4">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>.</source>
          <target state="translated">重複的成員永遠不會擲回例外狀況<ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings.AssumeValidInput%2A&gt;</ph>是<ph id="ph2">`true`</ph>中<ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph>物件用於設定這個<ph id="ph4">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source><ph id="ph1">&lt;paramref name="property" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="property" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source><ph id="ph1">&lt;paramref name="property" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="property" /&gt;</ph> 不是有效的 <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>The current position of the XAML node stream is invalid for writing a start member.</source>
          <target state="translated">XAML 節點資料流目前的位置不適用於寫入開始成員。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>The writer state is not valid for writing a start member.</source>
          <target state="translated">寫入器狀態對於寫入開始成員無效。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>The XAML writer attempted to write a duplicate member.</source>
          <target state="translated">XAML 寫入器嘗試寫入重複的成員。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
          <source>This exception may have a more precise inner exception.</source>
          <target state="translated">這個例外狀況可能會有更精確的內部例外狀況。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> (XAML type identifier) for the object to write.</source>
          <target state="translated">要寫入之物件的 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> (XAML 型別識別項)。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
          <source>Writes a XAML start object node to the underlying <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">將 XAML 開始物件節點寫入至基礎 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
          <source>Throws an exception if the current position of the XAML node stream is not in a scope where a start object can be written, or if the writer is not in a state that can write a start object.</source>
          <target state="translated">如果 XAML 節點資料流目前的位置不在可寫入開始成員的範圍或狀態，或是寫入器不在可寫入開始物件的狀態，則會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 不是有效的 <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
          <source>The current position of the XAML node stream is not valid for writing a new start object.</source>
          <target state="translated">XAML 節點資料流的目前位置對於寫入新的開始物件無效。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
          <source>The state of the XAML writer is not valid for writing a new start object.</source>
          <target state="translated">XAML 寫入器的狀態對於撰寫新的開始物件無效 。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
          <source>The value information to write.</source>
          <target state="translated">要寫入的值資訊。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
          <source>Writes a XAML value node to the underlying <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">將 XAML 值節點寫入至基礎 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
          <source>Throws an exception if the current position of the XAML node stream is invalid for writing a value, or the writer is in a state where a value cannot be written.</source>
          <target state="translated">如果 XAML 節點資料流目前的位置不適合寫入值，或是寫入器處於無法寫入值的狀態，則會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
          <source>The input <ph id="ph1">`value`</ph> may be <ph id="ph2">`null`</ph>, which supports explicitly writing out null as a serialized value.</source>
          <target state="translated">輸入<ph id="ph1">`value`</ph>可能<ph id="ph2">`null`</ph>，可支援明確寫出序列化的值為 null。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
          <source>This behavior uses the <ph id="ph1">&lt;xref:System.Xaml.XamlLanguage.Null%2A?displayProperty=nameWithType&gt;</ph> definition as <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A&gt;</ph> input and then immediately calls <ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt;</ph>.</source>
          <target state="translated">這個行為會使用<ph id="ph1">&lt;xref:System.Xaml.XamlLanguage.Null%2A?displayProperty=nameWithType&gt;</ph>定義<ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A&gt;</ph>輸入，然後立即呼叫<ph id="ph3">&lt;xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
          <source>The current position of the XAML node stream is not valid for writing a value.</source>
          <target state="translated">XAML 節點資料流的目前位置對於寫入值無效。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
          <source>The XAML writer state does not support the writing of a value node.</source>
          <target state="translated">XAML 寫入器狀態並不支援寫入值節點。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> specifies a value that is not null or a string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> 指定非 null 或字串的値。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>