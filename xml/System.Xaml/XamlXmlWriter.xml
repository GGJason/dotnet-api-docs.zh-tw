<Type Name="XamlXmlWriter" FullName="System.Xaml.XamlXmlWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4386495bae40713632b22d0af871e9adf9f3d979" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720562" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlXmlWriter : System.Xaml.XamlWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlXmlWriter extends System.Xaml.XamlWriter" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlXmlWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlXmlWriter&#xA;Inherits XamlWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlXmlWriter : System::Xaml::XamlWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>使用 <see cref="T:System.IO.TextWriter" /> 或 <see cref="T:System.Xml.XmlWriter" /> 支援類別，將 XAML 節點資料流寫入成文字或標記序列化形式。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個類別通常用於序列化案例。  
  
## <a name="how-to-use-xamlxmlwriter"></a>如何使用 XamlXmlWriter  
 <xref:System.Xaml.XamlWriter>應用程式開發介面有數種方法，撰寫不同類型的 XAML 節點。 整體而言，這些會參照文件集當做`Write`方法<xref:System.Xaml.XamlWriter>。 <xref:System.Xaml.XamlXmlWriter> 若要判斷要執行的工作時使用內部狀態的數個類別的其中一個其`Write`實作會呼叫。 A`Write`呼叫會使用以判斷是否可以寫入要求的項目、 屬性或值，或是否擲回例外狀況的狀態。 例如，如果您呼叫<xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A>和狀態<xref:System.Xaml.XamlXmlWriter>目前的節點位置的值或成員內時，會擲回例外狀況。 一般而言，呼叫端的<xref:System.Xaml.XamlXmlWriter>應該注意目前來自 XAML 讀取器和 XAML 節點資料流的 XAML 節點型別的 API。 根據這項知識，呼叫端應該避免呼叫`Write`與目前的節點類型不相關的 Api。  
  
## <a name="xaml-namespaces-and-xamlxmlwriter"></a>XAML 命名空間和 XamlXmlWriter  
 XAML 命名空間撰寫行為<xref:System.Xaml.XamlXmlWriter>相當複雜，不限於明確呼叫<xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A>。 相反地，其他`Write`等呼叫<xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A>，可能會要求您將撰寫命名空間宣告中的節點結構的特定點。 XAML 寫入器自己的邏輯，以產生前置詞，或使用從資訊<xref:System.Xaml.INamespacePrefixLookup>服務以判斷慣用的前置詞。 此外，明確<xref:System.Xaml.XamlXmlWriter.WriteNamespace%2A>呼叫可能會延遲，或可能會傳回任何項目是否 XAML 命名空間宣告已適用和宣告其他位置。  
  
## <a name="write-method-exceptions"></a>撰寫方法例外狀況  
 擲回例外狀況<xref:System.Xaml.XamlXmlWriter>`Write`方法通常都是<xref:System.InvalidOperationException>或<xref:System.Xaml.XamlXmlWriterException>。  
  
 <xref:System.InvalidOperationException>通常表示 XAML 讀取器傳遞至 XAML 節點資料流不正確的節點結構。 在此情況下的節點結構與 XAML 結構描述或 XAML 結構描述內容的驗證不相關的原因不正確。 相反地，在節點資料流不正確最基本的形式。 例如，如果故障的 XAML 讀取器實作產生 XAML 節點資料流包含兩個連續`StartObject`節點，嘗試呼叫第二個<xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A>會擲回<xref:System.InvalidOperationException>。 所有的 XAML 寫入器會考慮這類作業可能無效。 另一個範例<xref:System.InvalidOperationException>XAML 命名空間資訊無法透過適用於目前的節點資料流位置的 XAML 結構描述內容時。  
  
 A<xref:System.Xaml.XamlXmlWriterException>表示此特定的 XAML 寫入器實作會擲回例外狀況根據其特定的功能選擇例外狀況。 A<xref:System.Xaml.XamlXmlWriterException>可以表示特定的情況下其中<xref:System.Xaml.XamlXmlWriter>違反其自己的狀態或設定。 例如，<xref:System.Xaml.XamlXmlWriterException>可能因嘗試寫入的位置中的 XAML 命名空間資訊的<xref:System.Xaml.XamlXmlWriter>，而其序列化格式不支援，或寫入重複的項目時的執行個體<xref:System.Xaml.XamlXmlWriterSettings>受制於。  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Xaml.XamlXmlWriter" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.IO.Stream stream, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::IO::Stream ^ stream, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="stream">要寫入的資料流。</param>
        <param name="schemaContext">XAML 寫入器的 XAML 結構描述內容。</param>
        <summary>從資料流初始化 <see cref="T:System.Xaml.XamlXmlWriter" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> 為 <see langword="null" />。  
  
 -或-  
  
 <paramref name="schemaContext" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.IO.TextWriter textWriter, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter textWriter, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::IO::TextWriter ^ textWriter, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textWriter" Type="System.IO.TextWriter" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="textWriter">寫入輸出的 <see cref="T:System.IO.TextWriter" />。</param>
        <param name="schemaContext">XAML 寫入器的 XAML 結構描述內容。</param>
        <summary>從 <see cref="T:System.Xaml.XamlXmlWriter" /> 基準初始化 <see cref="T:System.IO.TextWriter" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textWriter" /> 或 <paramref name="schemaContext" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.Xml.XmlWriter xmlWriter, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlWriter xmlWriter, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::Xml::XmlWriter ^ xmlWriter, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="xmlWriter">寫入輸出的 <see cref="T:System.Xml.XmlWriter" />。</param>
        <param name="schemaContext">XAML 寫入器的 XAML 結構描述內容。</param>
        <summary>從 <see cref="T:System.Xaml.XamlXmlWriter" /> 基準初始化 <see cref="T:System.Xml.XmlWriter" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xmlWriter" /> 或 <paramref name="schemaContext" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.IO.Stream stream, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlXmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlXmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::IO::Stream ^ stream, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlXmlWriterSettings ^ settings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="stream">要寫入的資料流。</param>
        <param name="schemaContext">XAML 寫入器的 XAML 結構描述內容。</param>
        <param name="settings">
          <see cref="T:System.Xaml.XamlXmlWriterSettings" /> 的執行個體，通常具有特定非預設設定。</param>
        <summary>使用寫入器設定物件，從資料流初始化 <see cref="T:System.Xaml.XamlXmlWriter" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不會變更的任何值`settings`物件之後<xref:System.Xaml.XamlXmlWriter>建構執行個體。 <xref:System.Xaml.XamlXmlWriter> 無法更新其內部的設定，根據在執行階段是可變動的設定值。 應提供設定，只有初始設定。 您可以使用其中一種合併從作用中的 XAML 寫入器設定<xref:System.Xaml.XamlXmlWriterSettings>建構函式簽章; 不過，您必須再將這些設定套用到新的 XAML 寫入器執行個體，而不是嘗試調整現有。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> 或 <paramref name="schemaContext" /> 是 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.IO.TextWriter textWriter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlXmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter textWriter, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlXmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::IO::TextWriter ^ textWriter, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlXmlWriterSettings ^ settings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textWriter" Type="System.IO.TextWriter" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="textWriter">寫入輸出的 <see cref="T:System.IO.TextWriter" />。</param>
        <param name="schemaContext">XAML 寫入器的 XAML 結構描述內容。</param>
        <param name="settings">
          <see cref="T:System.Xaml.XamlXmlWriterSettings" /> 的執行個體，通常具有特定非預設設定。</param>
        <summary>使用設定物件，從 <see cref="T:System.Xaml.XamlXmlWriter" /> 基準初始化 <see cref="T:System.IO.TextWriter" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不會變更的任何值`settings`物件之後<xref:System.Xaml.XamlXmlWriter>建構執行個體。 <xref:System.Xaml.XamlXmlWriter> 無法更新其內部的設定，根據在執行階段是可變動的設定值。 應提供設定，只有初始設定。 您可以使用其中一種合併從作用中的 XAML 寫入器設定<xref:System.Xaml.XamlXmlWriterSettings>建構函式簽章; 不過，您必須再將這些設定套用到新的 XAML 寫入器執行個體，而不是嘗試調整現有。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textWriter" /> 或 <paramref name="schemaContext" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlWriter (System.Xml.XmlWriter xmlWriter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlXmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlWriter xmlWriter, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlXmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlXmlWriter(System::Xml::XmlWriter ^ xmlWriter, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlXmlWriterSettings ^ settings);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlXmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="xmlWriter">寫入輸出的 <see cref="T:System.Xml.XmlWriter" />。</param>
        <param name="schemaContext">XAML 寫入器的 XAML 結構描述內容。</param>
        <param name="settings">
          <see cref="T:System.Xaml.XamlXmlWriterSettings" /> 的執行個體，通常具有特定非預設設定。</param>
        <summary>使用設定物件，從 <see cref="T:System.Xaml.XamlXmlWriter" /> 基準初始化 <see cref="T:System.Xml.XmlWriter" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不會變更的任何值`settings`物件之後<xref:System.Xaml.XamlXmlWriter>建構執行個體。 <xref:System.Xaml.XamlXmlWriter> 無法更新其內部的設定，根據在執行階段是可變動的設定值。 應提供設定，只有初始設定。 您可以使用其中一種合併從作用中的 XAML 寫入器設定<xref:System.Xaml.XamlXmlWriterSettings>建構函式簽章; 不過，您必須再將這些設定套用到新的 XAML 寫入器執行個體，而不是嘗試調整現有。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xmlWriter" /> 或 <paramref name="schemaContext" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> 表示釋放 Unmanaged 資源，否則為 <see langword="false" />。</param>
        <summary>釋放 <see cref="T:System.Xaml.XamlXmlWriter" /> 所使用的 Unmanaged 資源，並選擇性釋放 Managed 資源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個實作會呼叫`Close`基礎<xref:System.Xml.XmlWriter>或<xref:System.IO.TextWriter>的情況下其中<xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A>是`true`提供任何<xref:System.Xaml.XamlXmlWriterSettings>。 否則，它會呼叫<xref:System.Xaml.XamlXmlWriter.Flush%2A>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>呼叫基礎 <see cref="T:System.Xml.XmlWriter" /> 或 <see cref="T:System.IO.TextWriter" /> 的 <see langword="Flush" /> 方法 (這個方法會寫入目前在緩衝區的任何資料)，然後關閉寫入器。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Dispose`行為<xref:System.Xaml.XamlXmlWriter>可能受到其寫入器設定，尤其是藉由<xref:System.Xaml.XamlXmlWriterSettings.CloseOutput%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlWriter.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個 <see cref="T:System.Xaml.XamlXmlWriter" /> 處理時使用的 XAML 結構描述內容。</summary>
        <value>這個 <see cref="T:System.Xaml.XamlXmlWriter" /> 處理 XAML 時使用的 XAML 結構描述內容。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XAML 寫入器通常會從相關聯的 XAML 讀取器提供 XAML 節點資料流取得其 XAML 結構描述內容。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlXmlWriterSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlXmlWriterSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlWriter.Settings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Settings As XamlXmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlXmlWriterSettings ^ Settings { System::Xaml::XamlXmlWriterSettings ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlXmlWriterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個 <see cref="T:System.Xaml.XamlXmlWriter" /> 處理 XAML 時使用的寫入器設定。</summary>
        <value>這個 <see cref="T:System.Xaml.XamlXmlWriter" /> 處理 XAML 時使用的寫入器設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 複本而不是參考您取得這個屬性的值。 變更屬性值的設定不會影響作用中<xref:System.Xaml.XamlXmlWriter>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndMember">
      <MemberSignature Language="C#" Value="public override void WriteEndMember ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteEndMember" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndMember ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndMember();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將 XAML 結束成員節點寫入至基礎 <see cref="T:System.Xml.XmlWriter" /> 或 <see cref="T:System.IO.TextWriter" />。 如果 XAML 節點資料流目前的位置不在成員內，或內部寫入器狀態不支援寫入至結束成員，則會擲回例外狀況。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">XAML 節點資料流的目前位置不在成員之內。</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">目前的寫入器狀態並不支援寫入結尾成員。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteEndObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將 XAML 結束物件節點寫入至基礎 <see cref="T:System.Xml.XmlWriter" /> 或 <see cref="T:System.IO.TextWriter" />。 如果處理中 XAML 節點資料流目前的位置不適合寫入結束物件，則會擲回例外狀況。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XAML 的標記和文字表示法，在結束物件會是結尾標記。  
  
 最常見情況<xref:System.InvalidOperationException>，所擲回<xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A>仍在成員中，目前的 XAML 節點資料流位置時，會和<xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A>呼叫。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">XAML 節點資料流目前的位置不在可寫入結尾成員的範圍中。</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">目前的寫入器狀態並不支援寫入結尾物件。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteGetObject">
      <MemberSignature Language="C#" Value="public override void WriteGetObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteGetObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteGetObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteGetObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteGetObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>當指定之物件為寫入中屬性的預設值或隱含值 (而非指定為在輸入 XAML 節點集中的物件值) 時，寫入物件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNamespace">
      <MemberSignature Language="C#" Value="public override void WriteNamespace (System.Xaml.NamespaceDeclaration namespaceDeclaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNamespace(class System.Xaml.NamespaceDeclaration namespaceDeclaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNamespace(System::Xaml::NamespaceDeclaration ^ namespaceDeclaration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceDeclaration" Type="System.Xaml.NamespaceDeclaration" />
      </Parameters>
      <Docs>
        <param name="namespaceDeclaration">要寫入的 XAML 命名空間宣告。</param>
        <summary>將命名空間資訊寫入至基礎 <see cref="T:System.Xml.XmlWriter" /> 或 <see cref="T:System.IO.TextWriter" />。 可能會針對特定狀態擲回例外狀況，但也可能會延後寫入命名空間資訊，直到寫入器及處理中 XAML 節點資料流到達可以插入 XAML 命名空間宣告的位置為止。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="namespaceDeclaration" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="namespaceDeclaration" /> 不是有效的 XAML 命名空間宣告 (具有 null 前置詞或 null 識別項元件)。</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">目前的寫入器狀態並不支援寫入 XAML 命名空間宣告。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartMember">
      <MemberSignature Language="C#" Value="public override void WriteStartMember (System.Xaml.XamlMember property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartMember(class System.Xaml.XamlMember property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartMember (property As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartMember(System::Xaml::XamlMember ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="property">要寫入之成員的 XAML 成員識別項。</param>
        <summary>將 XAML 開始成員節點寫入至基礎 <see cref="T:System.Xml.XmlWriter" /> 或 <see cref="T:System.IO.TextWriter" />。 如果 XAML 節點資料流目前的位置在另一個成員內，或是不在可寫入開始成員的範圍或寫入器狀態，則會擲回例外狀況。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中的內部預設邏輯<xref:System.Xaml.XamlXmlWriter>第一次嘗試以屬性形式寫入成員。 如果因為在屬性或其值不支援文字語法不支援任何屬性的形式，則會改寫入屬性項目。 如果屬性是 XAML 內容屬性，`GetObject`的情況下或隱含的屬性，其他 XAML 形式撰寫，例如內部文字或沒有中介的成員物件子系。  
  
 重複的成員永遠不會擲回例外狀況<xref:System.Xaml.XamlXmlWriterSettings.AssumeValidInput%2A>是`true`中<xref:System.Xaml.XamlXmlWriterSettings>物件用於設定這個<xref:System.Xaml.XamlXmlWriter>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="property" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="property" /> 不是有效的 <see cref="T:System.Xaml.XamlMember" />。</exception>
        <exception cref="T:System.InvalidOperationException">XAML 節點資料流目前的位置不適用於寫入開始成員。</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">寫入器狀態對於寫入開始成員無效。  
  
 -或-  
  
 XAML 寫入器嘗試寫入重複的成員。 這個例外狀況可能會有更精確的內部例外狀況。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xaml.XamlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xaml.XamlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartObject (type As XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xaml::XamlType ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="type">要寫入之物件的 <see cref="T:System.Xaml.XamlType" /> (XAML 型別識別項)。</param>
        <summary>將 XAML 開始物件節點寫入至基礎 <see cref="T:System.Xml.XmlWriter" /> 或 <see cref="T:System.IO.TextWriter" />。 如果 XAML 節點資料流目前的位置不在可寫入開始成員的範圍或狀態，或是寫入器不在可寫入開始物件的狀態，則會擲回例外狀況。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="type" /> 不是有效的 <see cref="T:System.Xaml.XamlType" />。</exception>
        <exception cref="T:System.InvalidOperationException">XAML 節點資料流的目前位置對於寫入新的開始物件無效。</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">XAML 寫入器的狀態對於撰寫新的開始物件無效 。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public override void WriteValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteValue(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">要寫入的值資訊。</param>
        <summary>將 XAML 值節點寫入至基礎 <see cref="T:System.Xml.XmlWriter" /> 或 <see cref="T:System.IO.TextWriter" />。 如果 XAML 節點資料流目前的位置不適合寫入值，或是寫入器處於無法寫入值的狀態，則會擲回例外狀況。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 輸入`value`可能`null`，可支援明確寫出序列化的值為 null。 這個行為會使用<xref:System.Xaml.XamlLanguage.Null%2A?displayProperty=nameWithType>定義<xref:System.Xaml.XamlXmlWriter.WriteStartObject%2A>輸入，然後立即呼叫<xref:System.Xaml.XamlXmlWriter.WriteEndObject%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">XAML 節點資料流的目前位置對於寫入值無效。</exception>
        <exception cref="T:System.Xaml.XamlXmlWriterException">XAML 寫入器狀態並不支援寫入值節點。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> 指定非 null 或字串的値。</exception>
      </Docs>
    </Member>
  </Members>
</Type>