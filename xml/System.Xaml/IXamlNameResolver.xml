<Type Name="IXamlNameResolver" FullName="System.Xaml.IXamlNameResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9e2b0082aa6761aafa449dd2b26cdbd2f6d5f016" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39942584" /></Metadata><TypeSignature Language="C#" Value="public interface IXamlNameResolver" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXamlNameResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IXamlNameResolver" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXamlNameResolver" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXamlNameResolver" />
  <TypeSignature Language="F#" Value="type IXamlNameResolver = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="35e2a-101">描述服務，這個服務可以傳回依 XAML 名稱指定的物件，或傳回會延後名稱解析的語彙基元。</span><span class="sxs-lookup"><span data-stu-id="35e2a-101">Describes a service that can return objects that are specified by XAML name, or alternatively, returns a token that defers name resolution.</span></span> <span data-ttu-id="35e2a-102">該服務也可以傳回 XAML 名稱範圍中所有具名物件的可列舉集。</span><span class="sxs-lookup"><span data-stu-id="35e2a-102">The service can also return an enumerable set of all named objects that are in the XAML namescope.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e2a-103">此介面不適用於外部實作的典型案例的 XAML，因為它是一項服務。</span><span class="sxs-lookup"><span data-stu-id="35e2a-103">This interface is not intended for external implementation of typical XAML scenarios because it is a service.</span></span> <span data-ttu-id="35e2a-104">此服務可讓標記延伸和類型轉換器，將 XAML 名稱解析為其他物件從相同的 XAML 來源仍處於 XAML 節點表示法。</span><span class="sxs-lookup"><span data-stu-id="35e2a-104">This service enables markup extensions and type converters to resolve XAML names to other objects from the same XAML source while they are still in a XAML node representation.</span></span> <span data-ttu-id="35e2a-105">此服務可用來解決任何依賴非線性存取周圍 XAML 生產的 XAML 名稱的機制的向前參考。</span><span class="sxs-lookup"><span data-stu-id="35e2a-105">The service can be used to resolve forward references for any mechanism that relies on XAML names for nonlinear access to the surrounding XAML production.</span></span> <span data-ttu-id="35e2a-106">如需詳細資訊，請參閱 < [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)。</span><span class="sxs-lookup"><span data-stu-id="35e2a-106">For more information, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md).</span></span>  
  
 <span data-ttu-id="35e2a-107">類型轉換器和標記延伸可以查詢<xref:System.Xaml.IXamlNameResolver>為 XAML 物件寫入器叫用的值轉換行為時，會將 XAML 物件寫入器中，所提供的服務內容上的服務。</span><span class="sxs-lookup"><span data-stu-id="35e2a-107">Type converters and markup extensions can query for <xref:System.Xaml.IXamlNameResolver> as a service on the service context that is provided by a XAML object writer, when the XAML object writer invokes value conversion behavior.</span></span> <span data-ttu-id="35e2a-108">如需詳細資訊，請參閱 < [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)並[Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)。</span><span class="sxs-lookup"><span data-stu-id="35e2a-108">For more information, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) and [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span></span>  
  
 <span data-ttu-id="35e2a-109">此服務會公開的 API，可以延後名稱解析。</span><span class="sxs-lookup"><span data-stu-id="35e2a-109">This service exposes an API that can defer name resolution.</span></span> <span data-ttu-id="35e2a-110">針對部分的名稱-物件圖形的第一次傳遞中無法解析的名稱應該儲存和用來建立修復權杖服務所實作的比喻。</span><span class="sxs-lookup"><span data-stu-id="35e2a-110">The metaphor implemented by the service is that names that cannot be resolved in a first pass against a partial name-object graph should be stored and used to create the fixup token.</span></span> <span data-ttu-id="35e2a-111">預設行為，在所有這類名稱會針對上第二個階段的另一個解決方式嘗試送出。</span><span class="sxs-lookup"><span data-stu-id="35e2a-111">In the default behavior, all such names are submitted for another resolution attempt on a second pass.</span></span> <span data-ttu-id="35e2a-112">在第二個階段中，整體的名稱-物件圖形完成，且所有修復語彙基元都就能解決。</span><span class="sxs-lookup"><span data-stu-id="35e2a-112">On the second pass, the overall name-object graph is complete, and all the fixup tokens are able to resolve.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="35e2a-113">即使他們所允許的特定實作，在 XAML 中的向前參考無疑地具有效能的結果。</span><span class="sxs-lookup"><span data-stu-id="35e2a-113">Even if they are permitted by a particular implementation, forward references in XAML inevitably have performance consequences.</span></span> <span data-ttu-id="35e2a-114">避免在實際執行品質 XAML 的最佳作法，盡可能的向前參考。</span><span class="sxs-lookup"><span data-stu-id="35e2a-114">As a best practice for production-quality XAML, avoid forward references whenever possible.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.INameScopeDictionary" />
    <altmember cref="T:System.Windows.NameScope" />
  </Docs>
  <Members>
    <Member MemberName="GetAllNamesAndValuesInScope">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; GetAllNamesAndValuesInScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; GetAllNamesAndValuesInScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllNamesAndValuesInScope () As IEnumerable(Of KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ GetAllNamesAndValuesInScope();" />
      <MemberSignature Language="F#" Value="abstract member GetAllNamesAndValuesInScope : unit -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt;" Usage="iXamlNameResolver.GetAllNamesAndValuesInScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="35e2a-115">傳回 XAML 名稱範圍中所有具名物件的可列舉集。</span><span class="sxs-lookup"><span data-stu-id="35e2a-115">Returns an enumerable set of all named objects in the XAML namescope.</span></span></summary>
        <returns><span data-ttu-id="35e2a-116"><see cref="T:System.Collections.Generic.KeyValuePair`2" /> 物件的可列舉集。</span><span class="sxs-lookup"><span data-stu-id="35e2a-116">An enumerable set of <see cref="T:System.Collections.Generic.KeyValuePair`2" /> objects.</span></span> <span data-ttu-id="35e2a-117">在每個 <see cref="T:System.Collections.Generic.KeyValuePair`2" /> 中，<see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> 部分是字串，而 <see cref="P:System.Collections.Generic.KeyValuePair`2.Value" /> 部分是在 XAML 名稱範圍中使用 <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> 名稱的部分。</span><span class="sxs-lookup"><span data-stu-id="35e2a-117">For each <see cref="T:System.Collections.Generic.KeyValuePair`2" />, the <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> component is a string, and the <see cref="P:System.Collections.Generic.KeyValuePair`2.Value" /> component is the object that uses the <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> name in the XAML namescope.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFixupToken">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="35e2a-118">傳回可修正會產生向前參考之特定標記模式的物件。</span><span class="sxs-lookup"><span data-stu-id="35e2a-118">Returns an object that can correct for certain markup patterns that produce forward references.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFixupToken">
      <MemberSignature Language="C#" Value="public object GetFixupToken (System.Collections.Generic.IEnumerable&lt;string&gt; names);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFixupToken(class System.Collections.Generic.IEnumerable`1&lt;string&gt; names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFixupToken (names As IEnumerable(Of String)) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFixupToken(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ names);" />
      <MemberSignature Language="F#" Value="abstract member GetFixupToken : seq&lt;string&gt; -&gt; obj" Usage="iXamlNameResolver.GetFixupToken names" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="names"><span data-ttu-id="35e2a-119">可能之向前參考的名稱集合。</span><span class="sxs-lookup"><span data-stu-id="35e2a-119">A collection of names that are possible forward references.</span></span></param>
        <summary><span data-ttu-id="35e2a-120">傳回可修正會產生向前參考之特定標記模式的物件。</span><span class="sxs-lookup"><span data-stu-id="35e2a-120">Returns an object that can correct for certain markup patterns that produce forward references.</span></span></summary>
        <returns><span data-ttu-id="35e2a-121">物件，提供將進行評估之查詢行為的語彙基元。</span><span class="sxs-lookup"><span data-stu-id="35e2a-121">An object that provides a token for lookup behavior to be evaluated later.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e2a-122">現有的內部的服務提供者，可用於標記延伸的結構描述內容和類型轉換器可以實作這項服務;不過，它們會傳回一個只有現有 XAML 寫入器可在預設 XAML 結構描述內容可處理的內部型別。</span><span class="sxs-lookup"><span data-stu-id="35e2a-122">Existing internal service providers that are available in schema contexts for markup extensions and type converters can implement this service; however, they return an internal type that only the existing XAML writers that work under the default XAML schema context can process.</span></span>  
  
 <span data-ttu-id="35e2a-123">解析所有正向的參考的名稱時，使用者程式碼會呼叫以重新分析每個清單中的名稱。</span><span class="sxs-lookup"><span data-stu-id="35e2a-123">When all the forward referenced names are resolvable, the user code is called to reparse each name in the list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFixupToken">
      <MemberSignature Language="C#" Value="public object GetFixupToken (System.Collections.Generic.IEnumerable&lt;string&gt; names, bool canAssignDirectly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFixupToken(class System.Collections.Generic.IEnumerable`1&lt;string&gt; names, bool canAssignDirectly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFixupToken (names As IEnumerable(Of String), canAssignDirectly As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFixupToken(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ names, bool canAssignDirectly);" />
      <MemberSignature Language="F#" Value="abstract member GetFixupToken : seq&lt;string&gt; * bool -&gt; obj" Usage="iXamlNameResolver.GetFixupToken (names, canAssignDirectly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="canAssignDirectly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="names"><span data-ttu-id="35e2a-124">可能之向前參考的名稱集合。</span><span class="sxs-lookup"><span data-stu-id="35e2a-124">A collection of names that are possible forward references.</span></span></param>
        <param name="canAssignDirectly"><span data-ttu-id="35e2a-125"><see langword="true" /> 表示立即將已解析的名稱參考指派給目標屬性。</span><span class="sxs-lookup"><span data-stu-id="35e2a-125"><see langword="true" /> to immediately assign the resolved name reference to the target property.</span></span> <span data-ttu-id="35e2a-126"><see langword="false" /> 表示呼叫使用者程式碼以重新剖析。</span><span class="sxs-lookup"><span data-stu-id="35e2a-126"><see langword="false" /> to call the user code for a reparse.</span></span> <span data-ttu-id="35e2a-127">預設行為是 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="35e2a-127">The default behavior is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="35e2a-128">傳回可修正會產生向前參考之特定標記模式的物件。</span><span class="sxs-lookup"><span data-stu-id="35e2a-128">Returns an object that can correct for certain markup patterns that produce forward references.</span></span></summary>
        <returns><span data-ttu-id="35e2a-129">物件，提供將進行評估之查詢行為的語彙基元。</span><span class="sxs-lookup"><span data-stu-id="35e2a-129">An object that provides a token for lookup behavior to be evaluated later.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e2a-130">現有的內部的服務提供者，可用於標記延伸的結構描述內容和類型轉換器實作這項服務;不過，它們會傳回只可處理工作的預設 XAML 結構描述內容的現有 XAML 寫入器的內部型別。</span><span class="sxs-lookup"><span data-stu-id="35e2a-130">Existing internal service providers that are available in schema contexts for markup extensions and type converters implement this service; however, they return an internal type that can only be processed by the existing XAML writers that work under the default XAML schema context.</span></span>  
  
 <span data-ttu-id="35e2a-131">如果`canAssignDirectly`是`false`、 所有正向的參考的名稱解析，當使用者程式碼會呼叫將其重新剖析在清單中的每個名稱。</span><span class="sxs-lookup"><span data-stu-id="35e2a-131">If `canAssignDirectly` is `false`, when all the forward referenced names are resolvable, the user code is called to reparse each name in the list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixupTokenAvailable">
      <MemberSignature Language="C#" Value="public bool IsFixupTokenAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixupTokenAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFixupTokenAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixupTokenAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixupTokenAvailable : bool" Usage="System.Xaml.IXamlNameResolver.IsFixupTokenAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="35e2a-132">取得值，這個值判斷是否可以呼叫 <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" />，以便將名稱解析為正向解析的語彙基元。</span><span class="sxs-lookup"><span data-stu-id="35e2a-132">Gets a value that determines whether calling <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> is available in order to resolve a name into a token for forward resolution.</span></span></summary>
        <value><span data-ttu-id="35e2a-133">如果有 <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> 可實作來傳回正向解析的有用語彙基元，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="35e2a-133"><see langword="true" /> if <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> is available as an implementation that returns a useful token for forward resolution; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e2a-134">這個屬性會傳回`false`時<xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A>不會傳回權杖，因為<xref:System.Xaml.Schema.XamlValueConverter%601>涉及上現有的語彙基元的第二個傳遞。</span><span class="sxs-lookup"><span data-stu-id="35e2a-134">This property returns `false` when <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A> does not return a token because a <xref:System.Xaml.Schema.XamlValueConverter%601> is involved in the second pass on an existing token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNameScopeInitializationComplete">
      <MemberSignature Language="C#" Value="event EventHandler OnNameScopeInitializationComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler OnNameScopeInitializationComplete" />
      <MemberSignature Language="DocId" Value="E:System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete" />
      <MemberSignature Language="VB.NET" Value="Event OnNameScopeInitializationComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ OnNameScopeInitializationComplete;" />
      <MemberSignature Language="F#" Value="member this.OnNameScopeInitializationComplete : EventHandler " Usage="member this.OnNameScopeInitializationComplete : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="35e2a-135">發生於 XAML 處理器已將所有相關名稱註冊至支援 XAML 名稱範圍中時。</span><span class="sxs-lookup"><span data-stu-id="35e2a-135">Occurs when a XAML processor has registered all the relevant names to the backing XAML namescope.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="35e2a-136">從名稱參考解析物件。</span><span class="sxs-lookup"><span data-stu-id="35e2a-136">Resolves an object from a name reference.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public object Resolve (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Resolve(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.Resolve(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Resolve(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : string -&gt; obj" Usage="iXamlNameResolver.Resolve name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="35e2a-137">要解析的名稱參考。</span><span class="sxs-lookup"><span data-stu-id="35e2a-137">The name reference to resolve.</span></span></param>
        <summary><span data-ttu-id="35e2a-138">從名稱參考解析物件。</span><span class="sxs-lookup"><span data-stu-id="35e2a-138">Resolves an object from a name reference.</span></span></summary>
        <returns><span data-ttu-id="35e2a-139">已解析的物件，或是 null。</span><span class="sxs-lookup"><span data-stu-id="35e2a-139">The resolved object; or null.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e2a-140">如果傳回值是`null`，向前參考可能會存在。</span><span class="sxs-lookup"><span data-stu-id="35e2a-140">If a value is returned as `null`, a forward reference might exist.</span></span> <span data-ttu-id="35e2a-141">想要支援向前參考的實作可以使用`FixupToken`透過模式<xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A>和<xref:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable%2A>Api。</span><span class="sxs-lookup"><span data-stu-id="35e2a-141">Implementations that want to support forward references can use the `FixupToken` pattern through the <xref:System.Xaml.IXamlNameResolver.GetFixupToken%2A> and <xref:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable%2A> APIs.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.INameScope.FindName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public object Resolve (string name, out bool isFullyInitialized);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Resolve(string name, [out] bool&amp; isFullyInitialized) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IXamlNameResolver.Resolve(System.String,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (name As String, ByRef isFullyInitialized As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Resolve(System::String ^ name, [Runtime::InteropServices::Out] bool % isFullyInitialized);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : string *  -&gt; obj" Usage="iXamlNameResolver.Resolve (name, isFullyInitialized)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="isFullyInitialized" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="35e2a-142">要解析的名稱參考。</span><span class="sxs-lookup"><span data-stu-id="35e2a-142">The name reference to resolve.</span></span></param>
        <param name="isFullyInitialized"><span data-ttu-id="35e2a-143">如果當這個方法傳回時，傳回的物件對未解析的參考具有任何相依性，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="35e2a-143">When this method returns, <see langword="true" /> if the returned object has any dependencies on unresolved references; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="35e2a-144">從名稱參考來解析物件，並提供追蹤值，報告是否已針對物件圖形用途完整初始化物件。</span><span class="sxs-lookup"><span data-stu-id="35e2a-144">Resolves an object from a name reference, and provides a tracking value that reports whether the object is fully initialized for object graph purposes.</span></span></summary>
        <returns><span data-ttu-id="35e2a-145">物件，提供將進行評估之查詢行為的語彙基元。</span><span class="sxs-lookup"><span data-stu-id="35e2a-145">An object that provides a token for lookup behavior to be evaluated later.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>