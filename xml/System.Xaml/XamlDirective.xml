<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlDirective.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a2eac5472d3696b1d538c311c8dde96426e0fb73.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a2eac5472d3696b1d538c311c8dde96426e0fb73</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlDirective">
          <source>Provides the XAML type system identifier for a member if the member is also a XAML directive.</source>
          <target state="translated">提供 XAML 型別系統識別項給某個成員 (如果此成員也是 XAML 指示詞的話)。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlDirective">
          <source>XAML readers and XAML writers use the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> identifier during processing of member nodes.</source>
          <target state="translated">XAML 讀取器和 XAML 寫入器會在處理成員節點期間使用 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> 識別項。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlDirective">
          <source>The identifier is used when the XAML reader is positioned on a <ph id="ph1">&lt;see cref="F:System.Xaml.XamlNodeType.StartMember" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Xaml.XamlMember.IsDirective" /&gt;</ph> is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">當 XAML 讀取器位在 <ph id="ph1">&lt;see cref="F:System.Xaml.XamlNodeType.StartMember" /&gt;</ph> 上，而且 <ph id="ph2">&lt;see cref="P:System.Xaml.XamlMember.IsDirective" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="true" /&gt;</ph> 時，會使用這個識別項。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> provides expected values for the XAML type system when the member is a XAML directive.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> 當成員是 XAML 指示詞 XAML 類型系統提供預期的值。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source>By definition, a XAML directive has characteristics that always return the same results for a subset of the <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> properties, and the same XAML type system information is reported for all possible XAML directives.</source>
          <target state="translated">根據定義，XAML 指示詞具有特性，會一律傳回相同的結果子集<ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph>屬性和相同的 XAML 類型系統資訊針對報告的所有可能的 XAML 指示詞。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source>The reporting of XAML type system characteristics that are specific to directives is accomplished by internal behavior or through overrides of <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> <ph id="ph2">`Lookup*`</ph> virtual members in the <ph id="ph3">&lt;xref:System.Xaml.XamlDirective&gt;</ph> class.</source>
          <target state="translated">報告的 XAML 類型系統特性所特有指示詞來完成，或透過覆寫的內部行為來<ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph><ph id="ph2">`Lookup*`</ph>中的虛擬成員<ph id="ph3">&lt;xref:System.Xaml.XamlDirective&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source>The following list shows the returned results of a XAML directive for <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> when the member is actually a <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph>:</source>
          <target state="translated">下列清單顯示傳回的結果的 XAML 指示詞的<ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph>成員時實際<ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A&gt;</ph> is always <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A&gt;</ph> 一定是<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.DeferringLoader%2A&gt;</ph> is always <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.DeferringLoader%2A&gt;</ph> 一定是<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;</ph> is always <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;</ph> 一定是<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsAmbient%2A&gt;</ph> is always <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsAmbient%2A&gt;</ph> 一定是<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsAttachable%2A&gt;</ph> is always <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsAttachable%2A&gt;</ph> 一定是<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsDirective%2A&gt;</ph> is always <ph id="ph2">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsDirective%2A&gt;</ph> 一定是<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsEvent%2A&gt;</ph> is always <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsEvent%2A&gt;</ph> 一定是<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;</ph> is always <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;</ph> 一定是<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;</ph> is always <ph id="ph2">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;</ph> 一定是<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</ph> is always <ph id="ph2">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</ph> 一定是<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source>Also, the internal backing for <ph id="ph1">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph> remains unset and returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated">此外，針對內部備份<ph id="ph1">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph>仍未設定，並傳回<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> is a <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph> subclass.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> 是<ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph>子類別。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source>As with <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph>, <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> has security considerations regarding how the XAML type system reports access.</source>
          <target state="translated">如同<ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph>，<ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph>具有 XAML 類型系統報告的方式，存取有關的安全性考量。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source>See <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph>.</source>
          <target state="translated">請參閱 <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlDirective">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
          <source>The primary XAML namespace where this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> can exist.</source>
          <target state="translated">這個 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> 可能存在的主要 XAML 命名空間。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
          <source>The identifying name of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> 的識別名稱。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> class, specifying values for a name and a single XAML namespace.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> 類別的新執行個體，並在其中指定名稱和單一 XAML 命名空間的值。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
          <source>Use this signature only when you want or expect <ph id="ph1">&lt;see cref="P:System.Xaml.XamlMember.IsUnknown" /&gt;</ph> to report <ph id="ph2">&lt;see langword="true" /&gt;</ph> for the directive.</source>
          <target state="translated">請只有當您想要或預期 <ph id="ph1">&lt;see cref="P:System.Xaml.XamlMember.IsUnknown" /&gt;</ph> 會針對指示詞報告 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 時，才使用這個簽章。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
          <source>This signature of the constructor always generates an identifier for the directive where <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> reports <ph id="ph2">`true`</ph> for the XAML type system.</source>
          <target state="translated">此簽章的建構函式一律會產生指示詞的識別碼其中<ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph>報表<ph id="ph2">`true`</ph>之 xaml 類型系統。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
          <source>If the necessary information is available (the backing type and a text syntax information item for conversion) and you want an identifier that can apply the directive, use the <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor signature instead.</source>
          <target state="translated">如果所需的資訊可用 （支援類型和轉換的文字語法的資訊項目），而且您想可以套用指示詞，可使用的識別項<ph id="ph1">&lt;xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=nameWithType&gt;</ph>建構函式簽章改為。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
          <source>If you use this signature, the <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.AllowedLocation%2A&gt;</ph> value for the instance is <ph id="ph2">&lt;xref:System.Xaml.Schema.AllowedMemberLocations.Any&gt;</ph>; and the <ph id="ph3">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph> value and <ph id="ph4">&lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;</ph> value are both <ph id="ph5">`null`</ph>.</source>
          <target state="translated">如果您使用此簽章，<ph id="ph1">&lt;xref:System.Xaml.XamlDirective.AllowedLocation%2A&gt;</ph>值執行個體是<ph id="ph2">&lt;xref:System.Xaml.Schema.AllowedMemberLocations.Any&gt;</ph>; 而<ph id="ph3">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph>值和<ph id="ph4">&lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;</ph>值都<ph id="ph5">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
          <source>A set of XAML namespaces where this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> can exist, passed as an enumerable set of the identifier strings.</source>
          <target state="translated">這個 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> 可能存在於其中的一組 XAML 命名空間，可當做識別項字串的可列舉集合傳遞。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
          <source>The identifying name of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> 的識別名稱。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
          <source>The XAML type that backs the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">支援 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> 的 XAML 型別。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
          <source>The type converter that this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> uses for text syntax conversion.</source>
          <target state="translated">這個 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> 用來轉換文字語法的型別轉換器。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
          <source>A value of the <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.AllowedMemberLocations" /&gt;</ph> enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.Schema.AllowedMemberLocations" /&gt;</ph> 列舉的值。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> class, specifying values for each per-case value of a <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> 類別的新執行個體，針對 <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> 的每個個別案例值指定值。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
          <source>You must use this constructor to generate a <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> that does not report <ph id="ph2">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> as <ph id="ph3">`true`</ph>.</source>
          <target state="translated">您必須使用這個建構函式來產生<ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph>，不會報告<ph id="ph2">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph>為<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
          <source>The <ph id="ph1">&lt;paramref name="xamlType" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xamlType" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlDirective.AllowedLocation">
          <source>Gets a value that specifies the XAML node types where the directive can be specified.</source>
          <target state="translated">取得值，這個值指定可以指定指示詞的 XAML 節點型別。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlDirective.AllowedLocation">
          <source>A value of the enumeration.</source>
          <target state="translated">列舉值。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlDirective.AllowedLocation">
          <source>The default is the enumeration default, which is <ph id="ph1">&lt;see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" /&gt;</ph>.</source>
          <target state="translated">預設為列舉預設值，即 <ph id="ph1">&lt;see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlDirective.AllowedLocation">
          <source>You can set this value in the <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29&gt;</ph> constructor signature.</source>
          <target state="translated">您可以將此值<ph id="ph1">&lt;xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29&gt;</ph>建構函式簽章。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlDirective.AllowedLocation">
          <source>If you construct by using the <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29&gt;</ph> constructor signature, the <ph id="ph2">&lt;xref:System.Xaml.XamlDirective.AllowedLocation%2A&gt;</ph> value for the instance is <ph id="ph3">&lt;xref:System.Xaml.Schema.AllowedMemberLocations.Any&gt;</ph>.</source>
          <target state="translated">如果您使用建構<ph id="ph1">&lt;xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29&gt;</ph>建構函式簽章，<ph id="ph2">&lt;xref:System.Xaml.XamlDirective.AllowedLocation%2A&gt;</ph>值執行個體是<ph id="ph3">&lt;xref:System.Xaml.Schema.AllowedMemberLocations.Any&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlDirective.AllowedLocation">
          <source>However, the instance always reports <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> as <ph id="ph2">`true`</ph>.</source>
          <target state="translated">不過，執行個體會永遠回報<ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph>為<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlDirective.AllowedLocation">
          <source>This behavior typically affects attempts to write object graphs and also affects other practical uses of a <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> value.</source>
          <target state="translated">這種行為通常會影響嘗試寫入物件圖形，並也會影響其他實際用途的<ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlDirective.AllowedLocation">
          <source>You typically would not construct a XAML directive case where <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.AllowedLocation%2A&gt;</ph> is <ph id="ph2">&lt;xref:System.Xaml.Schema.AllowedMemberLocations.None?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">您通常會不會建構 XAML 指示詞的情況下其中<ph id="ph1">&lt;xref:System.Xaml.XamlDirective.AllowedLocation%2A&gt;</ph>是<ph id="ph2">&lt;xref:System.Xaml.Schema.AllowedMemberLocations.None?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.GetHashCode">
          <source>Returns the hash code for this object.</source>
          <target state="translated">傳回這個物件的雜湊程式碼。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.GetHashCode">
          <source>An integer hash code.</source>
          <target state="translated">整數雜湊程式碼。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.GetXamlNamespaces">
          <source>Returns a list of XAML namespaces where this XAML member can exist.</source>
          <target state="translated">傳回這個 XAML 成員可能存在之 XAML 命名空間的清單。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.GetXamlNamespaces">
          <source>A list of XAML namespace identifiers, as strings.</source>
          <target state="translated">XAML 命名空間識別項的清單 (字串形式)。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.GetXamlNamespaces">
          <source>The XAML namespace identifiers are strings that typically appear in the Uniform Resource Identifier (URI) string form according to the usual conventions for XAML and XML namespaces.</source>
          <target state="translated">XAML 命名空間識別碼是通常會出現在根據一般慣例的 XAML 和 XML 命名空間的統一資源識別元 (URI) 字串形式的字串。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.GetXamlNamespaces">
          <source>If the list contains more than one item, the first item in the set is usually the relevant primary XAML namespace for processing purposes, and the other items are alternates.</source>
          <target state="translated">如果清單包含一個以上的項目，在集合中的第一個項目通常是相關主要 XAML 命名空間進行處理，和其他項目會替代項目。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.GetXamlNamespaces">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=nameWithType&gt;</ph> relies on this ordering.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=nameWithType&gt;</ph> 依賴此順序。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Reflection.ICustomAttributeProvider" /&gt;</ph> implementation.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Reflection.ICustomAttributeProvider" /&gt;</ph> 實作。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider">
          <source>This implementation always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個實作永遠會傳回 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider">
          <source>Always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">一律傳回 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider">
          <source>Because a XAML directive cannot have custom attributes, this implementation always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">因為 XAML 指示詞不能有自訂屬性，這個實作一律會傳回<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> 根據此虛擬的成員;因此，所有<ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph>類型和所有預先定義的 XAML 指示詞必須使用這種行為。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupDeferringLoader">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> object, which is used during deferred loading of XAML-declared objects.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> 物件，用於延後載入 XAML 宣告的物件。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupDeferringLoader">
          <source>This implementation always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個實作永遠會傳回 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupDeferringLoader">
          <source>Always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">一律傳回 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupDeferringLoader">
          <source>Because a directive cannot have deferred loading, this implementation always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">指示詞不能延後載入，因為這個實作一律會傳回<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupDeferringLoader">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> 根據此虛擬的成員;因此，所有<ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph>類型和所有預先定義的 XAML 指示詞必須使用這種行為。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupDependsOn">
          <source>Returns a list of <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> objects.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> 物件的清單。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupDependsOn">
          <source>The list reports the members where dependency relationships for initialization order exist relative to this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">這個清單會報告具有和此 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> 相關的初始設定順序之相依關聯性的成員。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupDependsOn">
          <source>This implementation always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個實作永遠會傳回 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupDependsOn">
          <source>Always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">一律傳回 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupDependsOn">
          <source>Because a XAML directive cannot have initialization order, this implementation always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">因為 XAML 指示詞不能有初始設定順序，這個實作一律會傳回<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupDependsOn">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> 根據此虛擬的成員;因此，所有<ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph>類型和所有預先定義的 XAML 指示詞必須使用這種行為。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupInvoker">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> that is associated with a <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">傳回與 <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> 相關聯的 <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupInvoker">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> information for this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">這個 <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> 資訊。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupInvoker">
          <source>This method may be invoked by calls to <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Invoker%2A&gt;</ph>.</source>
          <target state="translated">可能會叫用此方法的呼叫才能<ph id="ph1">&lt;xref:System.Xaml.XamlMember.Invoker%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupInvoker">
          <source>This implementation returns an internal static <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> value that is specific to directives in the XAML type system.</source>
          <target state="translated">這個實作會傳回內部的靜態<ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph>XAML 類型系統中的特定指示詞的值。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupInvoker">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> 根據此虛擬的成員;因此，所有<ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph>類型和所有預先定義的 XAML 指示詞必須使用這種行為。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsAmbient">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> is reported as an ambient property.</source>
          <target state="translated">傳回這個 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> 是否報告為環境屬性。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsAmbient">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">一律傳回 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsAmbient">
          <source>Because a XAML directive cannot be an ambient type, this implementation always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">因為 XAML 指示詞不能是環境型別，這個實作一律會傳回<ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsAmbient">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> 根據此虛擬的成員;因此，所有<ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph>類型和所有預先定義的 XAML 指示詞必須使用這種行為。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsEvent">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> represents an event.</source>
          <target state="translated">傳回這個 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> 是否表示事件。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsEvent">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">一律傳回 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsEvent">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> 根據此虛擬的成員;因此，所有<ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph>類型和所有預先定義的 XAML 指示詞必須使用這種行為。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsReadOnly">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> represents an intended read-only property.</source>
          <target state="translated">傳回這個 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> 是否表示所需的唯讀屬性。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsReadOnly">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">一律傳回 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsReadOnly">
          <source>By definition, directives are settable.</source>
          <target state="translated">根據定義，指示詞是可設定的。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsReadOnly">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> 根據此虛擬的成員;因此，所有<ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph>類型和所有預先定義的 XAML 指示詞必須使用這種行為。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsReadPublic">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> represents a property that has a public <ph id="ph2">&lt;see langword="get" /&gt;</ph> accessor.</source>
          <target state="translated">傳回這個 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> 是否表示具有公用 <ph id="ph2">&lt;see langword="get" /&gt;</ph> 存取子的屬性。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsReadPublic">
          <source>Always returns <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">一律傳回 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsReadPublic">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> 根據此虛擬的成員;因此，所有<ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph>類型和所有預先定義的 XAML 指示詞必須使用這種行為。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsUnknown">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> represents a member that is not resolvable by the backing system that is used for type and member resolution.</source>
          <target state="translated">傳回這個 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> 是否表示用於型別和成員解析的支援系統所無法解析的成員。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsUnknown">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> represents a non-resolvable member; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果這個 <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> 表示無法解析的成員則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsUnknown">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> implementation only calls base and does nothing more.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph>實作僅呼叫基底和更不做任何動作。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsUnknown">
          <source>The base implementation returns the results in this order: the results are based on internal reflection; or the results are based on checking for a null value of the <ph id="ph1">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph>.</source>
          <target state="translated">基底實作會傳回結果依此順序： 結果根據內部反映;結果會根據檢查 null 值或<ph id="ph1">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsUnknown">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> implementation seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph>實作會根據此虛擬的成員; 因此，所有<ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph>類型和所有預先定義的 XAML 指示詞必須使用這種行為。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsWriteOnly">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> represents an intended write-only property.</source>
          <target state="translated">傳回這個 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> 是否表示所需的唯寫屬性。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsWriteOnly">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">一律傳回 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsWriteOnly">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> 根據此虛擬的成員;因此，所有<ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph>類型和所有預先定義的 XAML 指示詞必須使用這種行為。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsWritePublic">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> represents a property that has a public <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessor.</source>
          <target state="translated">傳回這個 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> 是否表示具有公用 <ph id="ph2">&lt;see langword="set" /&gt;</ph> 存取子的屬性。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsWritePublic">
          <source>Always returns <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">一律傳回 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsWritePublic">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> 根據此虛擬的成員;因此，所有<ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph>類型和所有預先定義的 XAML 指示詞必須使用這種行為。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupTargetType">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> of the type where the <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> can exist.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> 可能存在之型別的 <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupTargetType">
          <source>This implementation always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個實作永遠會傳回 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupTargetType">
          <source>Always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">一律傳回 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupTargetType">
          <source>Target types are not relevant for directives; therefore, this implementation always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">目標類型不相關的指示詞;因此，這個實作一律會傳回<ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupTargetType">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> 根據此虛擬的成員;因此，所有<ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph>類型和所有預先定義的 XAML 指示詞必須使用這種行為。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupType">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> of the type that is used by the member.</source>
          <target state="translated">傳回成員所使用型別的 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> of the type that is used by the member.</source>
          <target state="translated">成員所使用型別的 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupType">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> implementation only calls base and does nothing more.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph>實作僅呼叫基底和更不做任何動作。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupType">
          <source>The base implementation returns results based either on internal reflection, or checking for a null value of <ph id="ph1">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph>, processing in that order.</source>
          <target state="translated">基底實作會傳回內部反映，或檢查 null 值的結果<ph id="ph1">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph>、 依序處理。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupType">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> 根據此虛擬的成員;因此，所有<ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph>類型和所有預先定義的 XAML 指示詞必須使用這種行為。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupType">
          <source>See Remarks in <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=nameWithType&gt;</ph> for more information about what information <ph id="ph2">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph> carries.</source>
          <target state="translated">請參閱 &lt; 備註 &gt; 中的<ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=nameWithType&gt;</ph>如需有關哪些資訊<ph id="ph2">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph>執行。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupTypeConverter">
          <source>Returns a type converter implementation that is associated with this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">傳回與這個 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> 相關聯的型別轉換器實作。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupTypeConverter">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> instance that has <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> constraint; or <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">具有 <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> 條件約束的 <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> 執行個體，或 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupTypeConverter">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> implementation only calls base and does nothing more.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph>實作僅呼叫基底和更不做任何動作。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupTypeConverter">
          <source>See <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">請參閱 <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupTypeConverter">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> 根據此虛擬的成員;因此，所有<ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph>類型和所有預先定義的 XAML 指示詞必須使用這種行為。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupUnderlyingGetter">
          <source>Returns a <ph id="ph1">&lt;see langword="get" /&gt;</ph> accessor that is associated with this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">傳回與這個 <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> 相關聯的 <ph id="ph1">&lt;see langword="get" /&gt;</ph> 存取子。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupUnderlyingGetter">
          <source>This implementation always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個實作永遠會傳回 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupUnderlyingGetter">
          <source>Always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">一律傳回 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupUnderlyingGetter">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> 根據此虛擬的成員;因此，所有<ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph>類型和所有預先定義的 XAML 指示詞必須使用這種行為。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupUnderlyingMember">
          <source>Returns a CLR reflection <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> that is associated with this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">傳回與這個 <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> 相關聯的 CLR 反映 <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupUnderlyingMember">
          <source>This implementation always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個實作永遠會傳回 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupUnderlyingMember">
          <source>Always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">一律傳回 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupUnderlyingMember">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> 根據此虛擬的成員;因此，所有<ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph>類型和所有預先定義的 XAML 指示詞必須使用這種行為。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupUnderlyingSetter">
          <source>Returns a <ph id="ph1">&lt;see langword="set" /&gt;</ph> accessor that is associated with this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">傳回與這個 <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> 相關聯的 <ph id="ph1">&lt;see langword="set" /&gt;</ph> 存取子。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupUnderlyingSetter">
          <source>This implementation always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個實作永遠會傳回 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupUnderlyingSetter">
          <source>Always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">一律傳回 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupUnderlyingSetter">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> 根據此虛擬的成員;因此，所有<ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph>類型和所有預先定義的 XAML 指示詞必須使用這種行為。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.ToString">
          <source>Returns a string representation of this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">傳回這個 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> 的字串表示。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.ToString">
          <source>A string representation of this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">這個 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> 的字串表示。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.ToString">
          <source>If XAML namespace information is available, this implementation returns a string combination of <ph id="ph1">&lt;xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xaml.XamlMember.Name%2A&gt;</ph>.</source>
          <target state="translated">XAML 命名空間資訊是否可用，此實作會傳回字串的組合<ph id="ph1">&lt;xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Xaml.XamlMember.Name%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.ToString">
          <source>If XAML namespace information is unavailable, this implementation returns <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Name%2A&gt;</ph>.</source>
          <target state="translated">如果 XAML 命名空間資訊就無法使用，這個實作會傳回<ph id="ph1">&lt;xref:System.Xaml.XamlMember.Name%2A&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>