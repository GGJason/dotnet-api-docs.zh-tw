<Type Name="IDestinationTypeProvider" FullName="System.Xaml.IDestinationTypeProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b7c50aa2125017dfd7de732494ba1d51c5e1616" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDestinationTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDestinationTypeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IDestinationTypeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDestinationTypeProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDestinationTypeProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="dab5e-101">表示服務，這個服務可以傳回目的型別的 CLR 型別系統識別項。</span>
      <span class="sxs-lookup">
        <span data-stu-id="dab5e-101">Represents a service that can return a CLR type system identifier for the destination type.</span>
      </span>
      <span data-ttu-id="dab5e-102">當屬性設定作業的目的型別是透過反映或其他機制間接報告時，目的型別就顯得很重要。</span>
      <span class="sxs-lookup">
        <span data-stu-id="dab5e-102">The destination type is relevant when the destination type for a property-setting operation is indirectly reported by reflection or other mechanisms.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dab5e-103">所傳回的型別<xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A>使用目前的 XAML 結構描述內容解決從 XAML 節點資料流目前位置。</span><span class="sxs-lookup"><span data-stu-id="dab5e-103">The type that is returned by <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> is resolved from the current position of the XAML node stream by using current XAML schema context.</span></span>  
  
 <span data-ttu-id="dab5e-104">如果您使用 XAML 類型系統，由.NET Framework XAML 服務及存取服務內容，在這些情況中下, 實作<xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A>傳回<xref:System.Xaml.XamlType.UnderlyingType%2A>根據可用的 XAML 類型系統資訊和 CLR 為基礎的 XAML 結構描述內容。</span><span class="sxs-lookup"><span data-stu-id="dab5e-104">If you use the XAML type system as implemented by .NET Framework XAML Services and access the service context under these conditions, <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> returns the <xref:System.Xaml.XamlType.UnderlyingType%2A> based on available XAML type system information and CLR-based XAML schema context.</span></span>  
  
 <span data-ttu-id="dab5e-105">此服務是相關的情況下，其中純 CLR 反映或其他機制可能會提供足夠的資訊關於目的地類型。</span><span class="sxs-lookup"><span data-stu-id="dab5e-105">This service is relevant for situations where pure CLR reflection or other mechanisms might not provide enough information about a destination type.</span></span> <span data-ttu-id="dab5e-106">以下是一些案例相關的清單<xref:System.Xaml.IDestinationTypeProvider>:</span><span class="sxs-lookup"><span data-stu-id="dab5e-106">The following is a list of some relevant scenarios for <xref:System.Xaml.IDestinationTypeProvider>:</span></span>  
  
-   <span data-ttu-id="dab5e-107">CLR 型別系統 CLR 如何定義和使用類型，因為報告間接的型別，而且您想為 true 的目的地類型。</span><span class="sxs-lookup"><span data-stu-id="dab5e-107">The CLR type system reports an indirect type because of how the CLR defines and uses types, and you want a true destination type.</span></span> <span data-ttu-id="dab5e-108">比方說，.NET Framework XAML 服務中的 Api 使用此服務在內部時，它們會處理事件成員。</span><span class="sxs-lookup"><span data-stu-id="dab5e-108">For example, the APIs in .NET Framework XAML Services use this service internally when they process event members.</span></span> <span data-ttu-id="dab5e-109">事件會報告為純 CLR 反映<xref:System.Delegate>。</span><span class="sxs-lookup"><span data-stu-id="dab5e-109">Events are reported by pure CLR reflection as a <xref:System.Delegate>.</span></span>  
  
-   <span data-ttu-id="dab5e-110">您想要確保類型轉換器的用法的目的型別符合預期的類型可能會產生型別轉換子。</span><span class="sxs-lookup"><span data-stu-id="dab5e-110">You want to ensure that the destination type of a type converter usage matches the expected type that the type converter can produce.</span></span> <span data-ttu-id="dab5e-111">這個案例是有用的目的型別參數化或一般。</span><span class="sxs-lookup"><span data-stu-id="dab5e-111">This scenario is useful when the destination type is parameterized or generic.</span></span>  
  
-   <span data-ttu-id="dab5e-112">值轉換器是從巢狀方式置於另一個值轉換器的使用方式呼叫。</span><span class="sxs-lookup"><span data-stu-id="dab5e-112">Your value converter is being called from a usage that nested in another value converter.</span></span> <span data-ttu-id="dab5e-113">在此情況下，<xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A>回溯巢狀，並傳回要設定，而不是傳回任何中介的值轉換器的輸出類型的實際屬性的目的型別。</span><span class="sxs-lookup"><span data-stu-id="dab5e-113">In this case, <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> unwinds the nesting and returns the destination type of the actual property being set, instead of returning the output type of any intervening value converter.</span></span>  
  
 <span data-ttu-id="dab5e-114">類型轉換器和標記延伸可以查詢<xref:System.Xaml.IDestinationTypeProvider>XAML 物件寫入器叫用的值轉換行為時，會將 XAML 物件寫入器所提供的服務內容上以服務。</span><span class="sxs-lookup"><span data-stu-id="dab5e-114">Type converters and markup extensions can query for <xref:System.Xaml.IDestinationTypeProvider> as a service on the service context that is provided by a XAML object writer, when the XAML object writer invokes value conversion behavior.</span></span> <span data-ttu-id="dab5e-115">如需詳細資訊，請參閱[類型轉換器和 XAML 的標記延伸](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)和[適用於類型轉換器和標記延伸](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)。</span><span class="sxs-lookup"><span data-stu-id="dab5e-115">For more information, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) and [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
  </Docs>
  <Members>
    <Member MemberName="GetDestinationType">
      <MemberSignature Language="C#" Value="public Type GetDestinationType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetDestinationType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IDestinationTypeProvider.GetDestinationType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDestinationType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetDestinationType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dab5e-116">傳回 CLR <see cref="T:System.Type" />，這個項目識別相關型別轉換器或標記延伸的目的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dab5e-116">Returns the CLR <see cref="T:System.Type" /> that identifies the destination type for the relevant type converter or markup extension.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dab5e-117">目的型別的 CLR <see cref="T:System.Type" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dab5e-117">A CLR <see cref="T:System.Type" /> value for the destination type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dab5e-118">這個方法沒有任何輸入的參數。</span><span class="sxs-lookup"><span data-stu-id="dab5e-118">This method has no input parameter.</span></span> <span data-ttu-id="dab5e-119">要傳回的項目 (以及是否要傳回的任何項目以外`null`) 由 XAML 節點資料流中目前的節點位置。</span><span class="sxs-lookup"><span data-stu-id="dab5e-119">What to return (and whether to return anything other than `null`) is determined by the current node position in the XAML node stream.</span></span>  
  
## <a name="service-implementers"></a><span data-ttu-id="dab5e-120">服務實作器</span><span class="sxs-lookup"><span data-stu-id="dab5e-120">Service Implementers</span></span>  
 <span data-ttu-id="dab5e-121">如果您實作此服務，<xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A>方法應傳回預期要檢查其最明確的轉換或輸出類型的標記延伸或類型轉換器的類型。</span><span class="sxs-lookup"><span data-stu-id="dab5e-121">If you reimplement this service, the <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> method should return the type that a markup extension or type converter expects to check against its most specific conversion or output type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>