<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDestinationTypeProvider.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55b7c50aa2125017dfd7de732494ba1d51c5e1616.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b7c50aa2125017dfd7de732494ba1d51c5e1616</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>Represents a service that can return a CLR type system identifier for the destination type.</source>
          <target state="translated">表示服務，這個服務可以傳回目的型別的 CLR 型別系統識別項。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>The destination type is relevant when the destination type for a property-setting operation is indirectly reported by reflection or other mechanisms.</source>
          <target state="translated">當屬性設定作業的目的型別是透過反映或其他機制間接報告時，目的型別就顯得很重要。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>The type that is returned by <ph id="ph1">&lt;xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A&gt;</ph> is resolved from the current position of the XAML node stream by using current XAML schema context.</source>
          <target state="translated">所傳回的型別<ph id="ph1">&lt;xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A&gt;</ph>使用目前的 XAML 結構描述內容解決從 XAML 節點資料流目前位置。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>If you use the XAML type system as implemented by .NET Framework XAML Services and access the service context under these conditions, <ph id="ph1">&lt;xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A&gt;</ph> returns the <ph id="ph2">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph> based on available XAML type system information and CLR-based XAML schema context.</source>
          <target state="translated">如果您使用 XAML 類型系統，由.NET Framework XAML 服務及存取服務內容，在這些情況中下, 實作<ph id="ph1">&lt;xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A&gt;</ph>傳回<ph id="ph2">&lt;xref:System.Xaml.XamlType.UnderlyingType%2A&gt;</ph>根據可用的 XAML 類型系統資訊和 CLR 為基礎的 XAML 結構描述內容。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>This service is relevant for situations where pure CLR reflection or other mechanisms might not provide enough information about a destination type.</source>
          <target state="translated">此服務是相關的情況下，其中純 CLR 反映或其他機制可能會提供足夠的資訊關於目的地類型。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>The following is a list of some relevant scenarios for <ph id="ph1">&lt;xref:System.Xaml.IDestinationTypeProvider&gt;</ph>:</source>
          <target state="translated">以下是一些案例相關的清單<ph id="ph1">&lt;xref:System.Xaml.IDestinationTypeProvider&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>The CLR type system reports an indirect type because of how the CLR defines and uses types, and you want a true destination type.</source>
          <target state="translated">CLR 型別系統 CLR 如何定義和使用類型，因為報告間接的型別，而且您想為 true 的目的地類型。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>For example, the APIs in .NET Framework XAML Services use this service internally when they process event members.</source>
          <target state="translated">比方說，.NET Framework XAML 服務中的 Api 使用此服務在內部時，它們會處理事件成員。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>Events are reported by pure CLR reflection as a <ph id="ph1">&lt;xref:System.Delegate&gt;</ph>.</source>
          <target state="translated">事件會報告為純 CLR 反映<ph id="ph1">&lt;xref:System.Delegate&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>You want to ensure that the destination type of a type converter usage matches the expected type that the type converter can produce.</source>
          <target state="translated">您想要確保類型轉換器的用法的目的型別符合預期的類型可能會產生型別轉換子。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>This scenario is useful when the destination type is parameterized or generic.</source>
          <target state="translated">這個案例是有用的目的型別參數化或一般。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>Your value converter is being called from a usage that nested in another value converter.</source>
          <target state="translated">值轉換器是從巢狀方式置於另一個值轉換器的使用方式呼叫。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>In this case, <ph id="ph1">&lt;xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A&gt;</ph> unwinds the nesting and returns the destination type of the actual property being set, instead of returning the output type of any intervening value converter.</source>
          <target state="translated">在此情況下，<ph id="ph1">&lt;xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A&gt;</ph>回溯巢狀，並傳回要設定，而不是傳回任何中介的值轉換器的輸出類型的實際屬性的目的型別。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>Type converters and markup extensions can query for <ph id="ph1">&lt;xref:System.Xaml.IDestinationTypeProvider&gt;</ph> as a service on the service context that is provided by a XAML object writer, when the XAML object writer invokes value conversion behavior.</source>
          <target state="translated">類型轉換器和標記延伸可以查詢<ph id="ph1">&lt;xref:System.Xaml.IDestinationTypeProvider&gt;</ph>XAML 物件寫入器叫用的值轉換行為時，會將 XAML 物件寫入器所提供的服務內容上以服務。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.IDestinationTypeProvider">
          <source>For more information, see <bpt id="p1">[</bpt>Type Converters and Markup Extensions for XAML<ept id="p1">](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)</ept> and <bpt id="p2">[</bpt>Service Contexts Available to Type Converters and Markup Extensions<ept id="p2">](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>類型轉換器和 XAML 的標記延伸<ept id="p1">](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)</ept>和<bpt id="p2">[</bpt>適用於類型轉換器和標記延伸<ept id="p2">](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)</ept>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xaml.IDestinationTypeProvider.GetDestinationType">
          <source>Returns the CLR <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that identifies the destination type for the relevant type converter or markup extension.</source>
          <target state="translated">傳回 CLR <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>，這個項目識別相關型別轉換器或標記延伸的目的型別。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xaml.IDestinationTypeProvider.GetDestinationType">
          <source>A CLR <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> value for the destination type.</source>
          <target state="translated">目的型別的 CLR <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.IDestinationTypeProvider.GetDestinationType">
          <source>This method has no input parameter.</source>
          <target state="translated">這個方法沒有任何輸入的參數。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.IDestinationTypeProvider.GetDestinationType">
          <source>What to return (and whether to return anything other than <ph id="ph1">`null`</ph>) is determined by the current node position in the XAML node stream.</source>
          <target state="translated">要傳回的項目 (以及是否要傳回的任何項目以外<ph id="ph1">`null`</ph>) 由 XAML 節點資料流中目前的節點位置。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.IDestinationTypeProvider.GetDestinationType">
          <source>Service Implementers</source>
          <target state="translated">服務實作器</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.IDestinationTypeProvider.GetDestinationType">
          <source>If you reimplement this service, the <ph id="ph1">&lt;xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A&gt;</ph> method should return the type that a markup extension or type converter expects to check against its most specific conversion or output type.</source>
          <target state="translated">如果您實作此服務，<ph id="ph1">&lt;xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A&gt;</ph>方法應傳回預期要檢查其最明確的轉換或輸出類型的標記延伸或類型轉換器的類型。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>