<Type Name="XamlServices" FullName="System.Xaml.XamlServices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9e1f1d48af20e3873a75e26dc3e1e7ba760293b7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class XamlServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit XamlServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlServices" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlServices abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="48b5d-101">提供更高層級的服務 (靜態方法) 來用於一般 XAML 工作，包括讀取 XAML 和寫入物件圖形，或是讀取物件圖形和寫入 XAML 檔案輸出以進行序列化。</span>
      <span class="sxs-lookup">
        <span data-stu-id="48b5d-101">Provides higher-level services (static methods) for the common XAML tasks of reading XAML and writing an object graph; or reading an object graph and writing XAML file output for serialization purposes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48b5d-102">模式<xref:System.Xaml.XamlServices>中最常見的 XAML 讀取和寫入案例依賴建立執行個體的 XAML 讀取器和 XAML 寫入器所使用的類別。</span><span class="sxs-lookup"><span data-stu-id="48b5d-102">The modes of the <xref:System.Xaml.XamlServices> class that are used in the most common XAML reading and writing scenarios rely on creating instances of XAML readers and XAML writers.</span></span> <span data-ttu-id="48b5d-103">這些讀取器和寫入器，特製化，但內部實作的公用類別，例如<xref:System.Xml.XmlReader>， <xref:System.Xaml.XamlXmlReader>，和<xref:System.Xaml.XamlObjectWriter>。</span><span class="sxs-lookup"><span data-stu-id="48b5d-103">These readers and writers are specialized but internal implementations of public classes, such as <xref:System.Xml.XmlReader>, <xref:System.Xaml.XamlXmlReader>, and <xref:System.Xaml.XamlObjectWriter>.</span></span> <span data-ttu-id="48b5d-104">若要使用<xref:System.Xaml.XamlServices>大部分情況下，您可以依賴預設內部實作，以取得您想要的結果。</span><span class="sxs-lookup"><span data-stu-id="48b5d-104">To use <xref:System.Xaml.XamlServices> for most scenarios, you can rely on the default internal implementations to obtain the results that you want.</span></span> <span data-ttu-id="48b5d-105">更具特製化的情況下，您可能會定義讀取器及寫入您自己，並再將其傳遞做為引數的多載的<xref:System.Xaml.XamlServices>方法。</span><span class="sxs-lookup"><span data-stu-id="48b5d-105">For more specialized scenarios, you might define readers and writers yourself, and then pass them as arguments for overloads of the <xref:System.Xaml.XamlServices> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="48b5d-106"><xref:System.Xaml.XamlServices> 不建議的 XAML 讀取或 XAML 撰寫的 API 集，如果您正在處理 WPF 定義型別或 WPF 為基礎的類型。</span><span class="sxs-lookup"><span data-stu-id="48b5d-106"><xref:System.Xaml.XamlServices> is not the recommended XAML reading or XAML writing API set if you are processing WPF-defined types, or types based on WPF.</span></span> <span data-ttu-id="48b5d-107">如[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]使用方式，使用<xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType>進行讀取或載入 XAML （BAML）; 和<xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType>的回寫 XAML。</span><span class="sxs-lookup"><span data-stu-id="48b5d-107">For [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] usage, use <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> for reading or loading XAML (or BAML); and <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> for writing back XAML.</span></span> <span data-ttu-id="48b5d-108">這些類別用於.NET Framework XAML 服務應用程式開發介面的 XAML 讀取器和 XAML 寫入器在內部實作;不過，它們也提供支援和特定的 XAML 結構描述內容為 WPF 專屬的概念，例如相依性屬性與已知型別的 WPF 的最佳化。</span><span class="sxs-lookup"><span data-stu-id="48b5d-108">These classes use .NET Framework XAML Services APIs and the XAML readers and XAML writers internally in their implementation; however, they also provide support and specialized XAML schema context for WPF-specific concepts, such as optimizations for dependency properties and WPF known types.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="48b5d-109">載入 XAML 讀取器的來源，並寫入其輸出做為物件圖形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-109">Loads source for a XAML reader and writes its output as an object graph.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="48b5d-110">要載入做為輸入的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-110">The stream to load as input.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48b5d-111">載入 XAML 讀取器的 <see cref="T:System.IO.Stream" /> 來源，並寫入其輸出做為物件圖形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-111">Loads a <see cref="T:System.IO.Stream" /> source for a XAML reader and writes its output as an object graph.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48b5d-112">已做為輸出寫入的物件圖形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-112">The object graph that is written as output.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48b5d-113">針對不同的簽章<xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29>方法指定不同的輸入來源 XAML 的類型。</span><span class="sxs-lookup"><span data-stu-id="48b5d-113">Different signatures for the <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29> method specify different types of input for the source XAML.</span></span> <span data-ttu-id="48b5d-114"><xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29>內部實作會先建立<xref:System.Xml.XmlReader>藉由呼叫<xref:System.Xml.XmlReader.Create%28System.IO.Stream%29>，然後建立特殊的新執行個體<xref:System.Xaml.XamlReader>，可處理輸入。</span><span class="sxs-lookup"><span data-stu-id="48b5d-114">The <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29> internal implementation first creates an <xref:System.Xml.XmlReader> by calling <xref:System.Xml.XmlReader.Create%28System.IO.Stream%29> and then creates a new instance of a specialized <xref:System.Xaml.XamlReader> that processes the input.</span></span>  
  
 <span data-ttu-id="48b5d-115">為了讓<xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29>呼叫成功建立物件圖形中，下列必須為真：</span><span class="sxs-lookup"><span data-stu-id="48b5d-115">In order for the <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29> call to successfully create an object graph, the following must be true:</span></span>  
  
-   <span data-ttu-id="48b5d-116">來源是格式正確且有效的 XML。</span><span class="sxs-lookup"><span data-stu-id="48b5d-116">The source is well-formed and valid XML.</span></span>  
  
-   <span data-ttu-id="48b5d-117">來源是有效的 XAML 語言層級。</span><span class="sxs-lookup"><span data-stu-id="48b5d-117">The source is valid XAML at the language level.</span></span>  
  
-   <span data-ttu-id="48b5d-118">指定在來源中的 XAML 型別 XAML 必須解析成相關的 XAML 命名空間中的備份類型。</span><span class="sxs-lookup"><span data-stu-id="48b5d-118">The XAML types that are specified in the source XAML must resolve to backing types in the relevant XAML namespaces.</span></span> <span data-ttu-id="48b5d-119">例如，WPF 命名空間的 XAML 型別可解析成指定 XAML; 中的 WPF XAML 命名空間wpf 組件必須包含在專案或可執行的時間;等等。</span><span class="sxs-lookup"><span data-stu-id="48b5d-119">For example, XAML types for WPF namespaces can resolve to a WPF XAML namespace as specified in the XAML; the assemblies for WPF must be included in the project or available in the run time; and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="48b5d-120"><xref:System.Xaml.XamlServices> 不是建議的 XAML 讀取或寫入應用程式開發介面的 XAML 設定，如果您正在處理[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]型別或根據[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="48b5d-120"><xref:System.Xaml.XamlServices> is not the recommended XAML reading or XAML writing API set if you are processing [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] types, or types based on [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span></span> <span data-ttu-id="48b5d-121">如[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]使用方式，使用<xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType>進行讀取或載入 XAML; 和<xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType>的回寫 XAML。</span><span class="sxs-lookup"><span data-stu-id="48b5d-121">For [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] usage, use <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> for reading or loading XAML; and <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> for writing back XAML.</span></span> <span data-ttu-id="48b5d-122">這些類別會使用<xref:System.Xaml>Api 在其實作; 內部不過，它們也支援的 WPF 專屬影響的 XAML 讀取和寫入，例如相依性屬性的最佳化性質的概念。</span><span class="sxs-lookup"><span data-stu-id="48b5d-122">These classes use <xref:System.Xaml> APIs internally in their implementation; however, they also provide support for WPF-specific concepts that influence the nature of XAML reading and writing, such as optimizations for dependency properties.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48b5d-123">
            <paramref name="stream" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-123">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.IO.TextReader textReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.IO.TextReader textReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.IO.TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::IO::TextReader ^ textReader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textReader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="textReader">
          <span data-ttu-id="48b5d-124">要做為所建立 <see cref="T:System.IO.TextReader" /> 之基準的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-124">The <see cref="T:System.IO.TextReader" /> to use as the basis for the created <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48b5d-125">從 <see cref="T:System.IO.TextReader" /> 建立 XAML 讀取器，並傳回物件圖形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-125">Creates a XAML reader from a <see cref="T:System.IO.TextReader" />, and returns an object graph.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48b5d-126">所傳回的物件圖形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-126">The object graph that is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48b5d-127">若要傳回的物件圖形，`textReader`輸入應該使用其相關的輸入來建構。</span><span class="sxs-lookup"><span data-stu-id="48b5d-127">In order to return the object graph, the `textReader` input should be constructed by using its relevant input.</span></span> <span data-ttu-id="48b5d-128">例如，它應該傳遞<xref:System.IO.StringReader>所使用的有效的 XAML 字串做為輸入來建構<xref:System.IO.StringReader.%23ctor%28System.String%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="48b5d-128">For example, it should pass a <xref:System.IO.StringReader> that is constructed by using a valid XAML-as-string input for the <xref:System.IO.StringReader.%23ctor%28System.String%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48b5d-129">
            <paramref name="textReader" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-129">
              <paramref name="textReader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (fileName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="48b5d-130">要載入並做為來源的檔案名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-130">The file name to load and use as source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48b5d-131">載入 XAML 讀取器的 <see cref="T:System.IO.Stream" /> 來源並傳回物件圖形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-131">Loads a <see cref="T:System.IO.Stream" /> source for a XAML reader and returns an object graph.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48b5d-132">所傳回的物件圖形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-132">The object graph that is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48b5d-133">針對不同的簽章<xref:System.Xaml.XamlServices.Load%2A>方法指定不同的輸入來源 XAML 的類型。</span><span class="sxs-lookup"><span data-stu-id="48b5d-133">Different signatures for the <xref:System.Xaml.XamlServices.Load%2A> method specify different types of input for the source XAML.</span></span> <span data-ttu-id="48b5d-134"><xref:System.Xaml.XamlServices.Load%2A>內部實作會先建立<xref:System.Xml.XmlReader>藉由呼叫<xref:System.Xml.XmlReader.Create%28System.String%29>，然後建立特殊的新執行個體<xref:System.Xaml.XamlReader>，可處理輸入。</span><span class="sxs-lookup"><span data-stu-id="48b5d-134">The <xref:System.Xaml.XamlServices.Load%2A> internal implementation first creates an <xref:System.Xml.XmlReader> by calling <xref:System.Xml.XmlReader.Create%28System.String%29> and then creates a new instance of a specialized <xref:System.Xaml.XamlReader> that processes the input.</span></span>  
  
 <span data-ttu-id="48b5d-135">為了讓<xref:System.Xaml.XamlServices.Load%28System.String%29>呼叫成功建立物件圖形中，下列必須為真：</span><span class="sxs-lookup"><span data-stu-id="48b5d-135">In order for the <xref:System.Xaml.XamlServices.Load%28System.String%29> call to successfully create an object graph, the following must be true:</span></span>  
  
-   <span data-ttu-id="48b5d-136">來源是格式正確且有效的 XML。</span><span class="sxs-lookup"><span data-stu-id="48b5d-136">The source is well-formed and valid XML.</span></span>  
  
-   <span data-ttu-id="48b5d-137">來源是有效的 XAML 語言層級。</span><span class="sxs-lookup"><span data-stu-id="48b5d-137">The source is valid XAML at the language level.</span></span>  
  
-   <span data-ttu-id="48b5d-138">指定在來源中的 XAML 型別 XAML 必須解析成相關的 XAML 命名空間中的備份類型。</span><span class="sxs-lookup"><span data-stu-id="48b5d-138">The XAML types that are specified in the source XAML must resolve to backing types in the relevant XAML namespaces.</span></span> <span data-ttu-id="48b5d-139">例如，WPF 命名空間的 XAML 型別可解析成指定 XAML; 中的 WPF XAML 命名空間wpf 組件必須包含在專案中，或可在執行階段中。等等。</span><span class="sxs-lookup"><span data-stu-id="48b5d-139">For example, XAML types for WPF namespaces can resolve to a WPF XAML namespace as specified in the XAML; the assemblies for WPF must be included in the project or be available in the run time; and so on.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48b5d-140">
            <paramref name="fileName" /> 輸入是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-140">
              <paramref name="fileName" /> input is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.Xaml.XamlReader xamlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.Xaml.XamlReader xamlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::Xaml::XamlReader ^ xamlReader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlReader" Type="System.Xaml.XamlReader" />
      </Parameters>
      <Docs>
        <param name="xamlReader">
          <span data-ttu-id="48b5d-141">要做為這個 <see langword="Load" /> 作業之讀取器的 XAML 讀取器實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-141">The XAML reader implementation to use as the reader for this <see langword="Load" /> operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48b5d-142">載入特定的 XAML 讀取器實作並傳回物件圖形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-142">Loads a specific XAML reader implementation and returns an object graph.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48b5d-143">所傳回的物件圖形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-143">The object graph that is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48b5d-144">您通常應該只有在下列情況下使用此簽章：</span><span class="sxs-lookup"><span data-stu-id="48b5d-144">You should typically use this signature only in the following cases:</span></span>  
  
-   <span data-ttu-id="48b5d-145">定義您自己實作<xref:System.Xaml.XamlReader>。</span><span class="sxs-lookup"><span data-stu-id="48b5d-145">You defined your own implementation of a <xref:System.Xaml.XamlReader>.</span></span>  
  
-   <span data-ttu-id="48b5d-146">指定的設定<xref:System.Xaml.XamlReader>不同於預設設定。</span><span class="sxs-lookup"><span data-stu-id="48b5d-146">You specified settings for a <xref:System.Xaml.XamlReader> that differ from the default settings.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48b5d-147">
            <paramref name="xamlReader" /> 輸入是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-147">
              <paramref name="xamlReader" /> input is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::Xml::XmlReader ^ xmlReader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader">
          <span data-ttu-id="48b5d-148">要做為這個 <see langword="Load" /> 作業之讀取器的 <see cref="T:System.Xml.XmlReader" /> 實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-148">The <see cref="T:System.Xml.XmlReader" /> implementation to use as the reader for this <see langword="Load" /> operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48b5d-149">載入特定的 XML 讀取器實作並傳回物件圖形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-149">Loads a specific XML reader implementation and returns an object graph.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48b5d-150">輸出物件圖形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-150">The output object graph.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48b5d-151">您通常應該使用此簽章，如果您定義自己的實作<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="48b5d-151">You should typically use this signature only if you defined your own implementation of a <xref:System.Xml.XmlReader>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48b5d-152">
            <paramref name="xamlReader" /> 輸入是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-152">
              <paramref name="xamlReader" /> input is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (string xaml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(string xaml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (xaml As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(System::String ^ xaml);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xaml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xaml">
          <span data-ttu-id="48b5d-153">要剖析的 XAML 字串輸入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-153">The XAML string input to parse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48b5d-154">讀取 XAML 做為字串輸出並傳回物件圖形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-154">Reads XAML as string output and returns an object graph.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48b5d-155">所傳回的物件圖形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-155">The object graph that is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48b5d-156">為了讓<xref:System.Xaml.XamlServices.Parse%2A>呼叫成功建立之物件樹狀目錄中，下列必須為 true:</span><span class="sxs-lookup"><span data-stu-id="48b5d-156">In order for the <xref:System.Xaml.XamlServices.Parse%2A> call to successfully create an object tree, the following must be true:</span></span>  
  
-   <span data-ttu-id="48b5d-157">`xaml`輸入的格式正確且有效的 XML。</span><span class="sxs-lookup"><span data-stu-id="48b5d-157">The `xaml` input is well-formed and valid XML.</span></span>  
  
-   <span data-ttu-id="48b5d-158">`xaml`輸入都是有效的 XAML 語言層級。</span><span class="sxs-lookup"><span data-stu-id="48b5d-158">The `xaml` input is valid XAML at the language level.</span></span>  
  
-   <span data-ttu-id="48b5d-159">中所指定的 XAML 型別`xaml`輸入必須解析成支援類型相關的 XAML 命名空間中。</span><span class="sxs-lookup"><span data-stu-id="48b5d-159">The XAML types that are specified in the `xaml` input must resolve to backing types in the relevant XAML namespaces.</span></span> <span data-ttu-id="48b5d-160">例如，WPF 命名空間的 XAML 型別可解析成指定 XAML; 中的 WPF XAML 命名空間wpf 組件必須包含在專案中，或可在執行階段中。等等。</span><span class="sxs-lookup"><span data-stu-id="48b5d-160">For example, XAML types for a WPF namespace can resolve to a WPF XAML namespace as specified in the XAML; the assemblies for WPF must be included in the project or be available in the run time; and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="48b5d-161"><xref:System.Xaml.XamlServices> 不是建議的 XAML 讀取或寫入應用程式開發介面的 XAML 設定，如果您正在處理[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]型別或根據[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="48b5d-161"><xref:System.Xaml.XamlServices> is not the recommended XAML reading or XAML writing API set if you are processing [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] types, or types based on [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span></span> <span data-ttu-id="48b5d-162">如[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]使用方式，使用<xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType>進行讀取或載入 XAML，和<xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType>的回寫 XAML。</span><span class="sxs-lookup"><span data-stu-id="48b5d-162">For [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] usage, use <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> for reading or loading XAML, and <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> for writing back XAML.</span></span> <span data-ttu-id="48b5d-163">這些類別會使用<xref:System.Xaml>Api 在其實作; 內部不過，它們也支援的 WPF 專屬影響的 XAML 讀取和寫入，例如相依性屬性的最佳化性質的概念。</span><span class="sxs-lookup"><span data-stu-id="48b5d-163">These classes use <xref:System.Xaml> APIs internally in their implementation; however, they also provide support for WPF-specific concepts that influence the nature of XAML reading and writing, such as optimizations for dependency properties.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48b5d-164">
            <paramref name="xaml" /> 輸入是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-164">
              <paramref name="xaml" /> input is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="48b5d-165">將提供的物件圖形處理成 XAML 節點表示，再處理成序列化的輸出格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-165">Processes a provided object graph into a XAML node representation and then into an output format for serialization.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static string Save (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Save(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Save (instance As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Save(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="48b5d-166">要處理之物件圖形的根目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-166">The root of the object graph to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48b5d-167">將提供的物件樹狀結構處理成 XAML 節點表示，然後傳回輸出 XAML 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-167">Processes a provided object tree into a XAML node representation, and returns a string representation of the output XAML.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="48b5d-168">字串形式的 XAML 標記輸出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-168">The XAML markup output as a string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48b5d-169">這個方法的輸出是`ToString`結果<xref:System.Xml.XmlWriter>，它由方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="48b5d-169">The output from this method is the `ToString` result of an <xref:System.Xml.XmlWriter> that is created by the method call.</span></span> <span data-ttu-id="48b5d-170">確認<xref:System.Xml.XmlWriter>由使用下列設定：<xref:System.Xml.XmlWriterSettings.Indent%2A?displayProperty=nameWithType>是`true`; 和<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A?displayProperty=nameWithType>是`true`。</span><span class="sxs-lookup"><span data-stu-id="48b5d-170">That <xref:System.Xml.XmlWriter> is created by using the following settings: <xref:System.Xml.XmlWriterSettings.Indent%2A?displayProperty=nameWithType> is `true`; and <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A?displayProperty=nameWithType> is `true`.</span></span>  
  
 <span data-ttu-id="48b5d-171">傳回的字串可以載入為有效的 XML，透過<xref:System.Xml.XmlReader.Create%2A>方法，如果您處理字串更明確地說專用讀取器放入資料流，或是為 XAML。</span><span class="sxs-lookup"><span data-stu-id="48b5d-171">The returned string can be loaded as valid XML through the <xref:System.Xml.XmlReader.Create%2A> method if you processed the string into a stream, or into a reader more specifically dedicated for XAML.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.IO.Stream stream, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.IO.Stream stream, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::IO::Stream ^ stream, System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="48b5d-172">目的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-172">The destination stream.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="48b5d-173">要處理之物件圖形的根目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-173">The root of the object graph to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48b5d-174">將提供的物件圖形處理成 XAML 節點表示，再處理成序列化的輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-174">Processes a provided object graph into a XAML node representation and then into an output stream for serialization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="48b5d-175"><xref:System.Xaml.XamlServices> 不是建議的 XAML 讀取或寫入應用程式開發介面的 XAML 設定，如果您正在處理[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]型別或根據[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="48b5d-175"><xref:System.Xaml.XamlServices> is not the recommended XAML reading or XAML writing API set if you are processing [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] types, or types based on [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span></span> <span data-ttu-id="48b5d-176">如[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]使用方式，使用<xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType>進行讀取或載入 XAML; 和<xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType>的回寫 XAML。</span><span class="sxs-lookup"><span data-stu-id="48b5d-176">For [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] usage, use <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> for reading or loading XAML; and <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> for writing back XAML.</span></span> <span data-ttu-id="48b5d-177">這些類別會使用<xref:System.Xaml>Api 在其實作; 內部不過，它們也支援的 WPF 專屬影響的 XAML 讀取和寫入，例如相依性屬性的最佳化性質的概念。</span><span class="sxs-lookup"><span data-stu-id="48b5d-177">These classes use <xref:System.Xaml> APIs internally in their implementation; however, they also provide support for WPF-specific concepts that influence the nature of XAML reading and writing, such as optimizations for dependency properties.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48b5d-178">
            <paramref name="stream" /> 輸入是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-178">
              <paramref name="stream" /> input is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.IO.TextWriter writer, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.IO.TextWriter writer, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.IO.TextWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (writer As TextWriter, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::IO::TextWriter ^ writer, System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="48b5d-179">寫入輸出的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-179">The <see cref="T:System.IO.TextWriter" /> that writes the output.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="48b5d-180">要處理之物件圖形的根目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-180">The root of the object graph to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48b5d-181">將提供的物件圖形處理成 XAML 節點表示，再處理成流向所提供 <see cref="T:System.IO.TextWriter" /> 的輸出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-181">Processes a provided object graph into a XAML node representation and then into an output that goes to the provided <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48b5d-182">
            <paramref name="writer" /> 輸入是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-182">
              <paramref name="writer" /> input is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (string fileName, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(string fileName, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (fileName As String, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::String ^ fileName, System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="48b5d-183">要將輸出寫入之目標檔案的名稱和位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-183">The name and location of the file to write the output to.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="48b5d-184">要處理之物件圖形的根目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-184">The root of the object graph to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48b5d-185">將提供的物件圖形處理成 XAML 節點表示，然後寫入至所提供位置上的輸出檔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-185">Processes a provided object graph into a XAML node representation and then writes it to an output file at a provided location.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48b5d-186">`fileName`參數值作為`outputFileName`呼叫的輸入<xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>，它會建立<xref:System.Xml.XmlWriter>做為方法呼叫的一部分。</span><span class="sxs-lookup"><span data-stu-id="48b5d-186">The `fileName` parameter value is used as the `outputFileName` input for a call to <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>, which creates a <xref:System.Xml.XmlWriter> as part of the method call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="48b5d-187">
            <paramref name="fileName" /> 為空字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-187">
              <paramref name="fileName" /> is an empty string.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48b5d-188">
            <paramref name="fileName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-188">
              <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.Xaml.XamlWriter writer, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.Xaml.XamlWriter writer, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (writer As XamlWriter, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::Xaml::XamlWriter ^ writer, System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xaml.XamlWriter" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="48b5d-189">要使用的 <see cref="T:System.Xaml.XamlWriter" /> 實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-189">The <see cref="T:System.Xaml.XamlWriter" /> implementation to use.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="48b5d-190">要處理之物件圖形的根目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-190">The root of the object graph to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48b5d-191">將提供的物件圖形處理成 XAML 節點表示，然後寫入至提供的 XAML 寫入器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-191">Processes a provided object graph into a XAML node representation and then writes it to the provided XAML writer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48b5d-192">您通常應該只有在下列情況下使用此簽章：</span><span class="sxs-lookup"><span data-stu-id="48b5d-192">You should typically use this signature only in the following cases:</span></span>  
  
-   <span data-ttu-id="48b5d-193">定義您自己實作<xref:System.Xaml.XamlWriter>。</span><span class="sxs-lookup"><span data-stu-id="48b5d-193">You defined your own implementation of a <xref:System.Xaml.XamlWriter>.</span></span>  
  
-   <span data-ttu-id="48b5d-194">指定的設定<xref:System.Xaml.XamlWriter>不同於預設設定。</span><span class="sxs-lookup"><span data-stu-id="48b5d-194">You specified settings for the <xref:System.Xaml.XamlWriter> that differ from the default settings.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48b5d-195">
            <paramref name="writer" /> 輸入是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-195">
              <paramref name="writer" /> input is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.Xml.XmlWriter writer, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.Xml.XmlWriter writer, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (writer As XmlWriter, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::Xml::XmlWriter ^ writer, System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="48b5d-196">要使用的 <see cref="T:System.Xml.XmlWriter" /> 實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-196">The <see cref="T:System.Xml.XmlWriter" /> implementation to use.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="48b5d-197">要處理之物件圖形的根目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-197">The root of the object graph to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48b5d-198">將提供的物件圖形處理成 XAML 節點表示，然後寫入至提供的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-198">Processes a provided object graph into a XAML node representation and then writes it to the provided <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48b5d-199">
            <paramref name="writer" /> 輸入是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-199">
              <paramref name="writer" /> input is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="48b5d-200">連接 <see cref="T:System.Xaml.XamlReader" /> 和 <see cref="T:System.Xaml.XamlWriter" /> 以使用常見的 XAML 節點集中繼項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-200">Connects a <see cref="T:System.Xaml.XamlReader" /> and a <see cref="T:System.Xaml.XamlWriter" /> in order to use a common XAML node set intermediary.</span>
          </span>
          <span data-ttu-id="48b5d-201">可能會轉換內容，視提供的讀取器和寫入器類型而定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-201">Potentially transforms the content, depending on the types of readers and writers that are provided.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static void Transform (System.Xaml.XamlReader xamlReader, System.Xaml.XamlWriter xamlWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Transform(class System.Xaml.XamlReader xamlReader, class System.Xaml.XamlWriter xamlWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Transform(System::Xaml::XamlReader ^ xamlReader, System::Xaml::XamlWriter ^ xamlWriter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlReader" Type="System.Xaml.XamlReader" />
        <Parameter Name="xamlWriter" Type="System.Xaml.XamlWriter" />
      </Parameters>
      <Docs>
        <param name="xamlReader">
          <span data-ttu-id="48b5d-202">要使用的 <see cref="T:System.Xaml.XamlReader" /> 實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-202">The <see cref="T:System.Xaml.XamlReader" /> implementation to use.</span>
          </span>
        </param>
        <param name="xamlWriter">
          <span data-ttu-id="48b5d-203">要使用的 <see cref="T:System.Xaml.XamlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-203">The <see cref="T:System.Xaml.XamlWriter" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48b5d-204">連接 <see cref="T:System.Xaml.XamlReader" /> 和 <see cref="T:System.Xaml.XamlWriter" /> 以使用常見的 XAML 節點集中繼項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-204">Connects a <see cref="T:System.Xaml.XamlReader" /> and a <see cref="T:System.Xaml.XamlWriter" /> to use a common XAML node set intermediary.</span>
          </span>
          <span data-ttu-id="48b5d-205">可能會轉換內容，視提供的讀取器和寫入器類型而定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-205">Potentially transforms the content, depending on the types of readers and writers that are provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48b5d-206">這個方法是周圍的包裝函式<xref:System.Xaml.XamlServices.Transform%28System.Xaml.XamlReader%2CSystem.Xaml.XamlWriter%2CSystem.Boolean%29>，其中`closeWriter`指定為`true`。</span><span class="sxs-lookup"><span data-stu-id="48b5d-206">This method is a wrapper around <xref:System.Xaml.XamlServices.Transform%28System.Xaml.XamlReader%2CSystem.Xaml.XamlWriter%2CSystem.Boolean%29>, where `closeWriter` is specified as `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48b5d-207">
            <paramref name="xamlReader" /> 或 <paramref name="xamlWriter" /> 輸入為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-207">
              <paramref name="xamlReader" /> or <paramref name="xamlWriter" /> input is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xaml.XamlException">
          <span data-ttu-id="48b5d-208">XAML 結構描述內容在提供的 <paramref name="xamlReader" /> 和 <paramref name="xamlWriter" /> 之間不相符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-208">The XAML schema context does not match between the provided <paramref name="xamlReader" /> and <paramref name="xamlWriter" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static void Transform (System.Xaml.XamlReader xamlReader, System.Xaml.XamlWriter xamlWriter, bool closeWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Transform(class System.Xaml.XamlReader xamlReader, class System.Xaml.XamlWriter xamlWriter, bool closeWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Transform(System::Xaml::XamlReader ^ xamlReader, System::Xaml::XamlWriter ^ xamlWriter, bool closeWriter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlReader" Type="System.Xaml.XamlReader" />
        <Parameter Name="xamlWriter" Type="System.Xaml.XamlWriter" />
        <Parameter Name="closeWriter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="xamlReader">
          <span data-ttu-id="48b5d-209">要使用的 <see cref="T:System.Xaml.XamlReader" /> 實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-209">The <see cref="T:System.Xaml.XamlReader" /> implementation to use.</span>
          </span>
        </param>
        <param name="xamlWriter">
          <span data-ttu-id="48b5d-210">要使用的 <see cref="T:System.Xaml.XamlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-210">The <see cref="T:System.Xaml.XamlWriter" /> to use.</span>
          </span>
        </param>
        <param name="closeWriter">
          <span data-ttu-id="48b5d-211">
            <see langword="true" /> 表示在呼叫完成之後關閉寫入器，<see langword="false" /> 表示讓寫入器在最後寫入的位置上繼續保持開啟。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-211">
              <see langword="true" /> to close the writer after the call is complete; <see langword="false" /> to leave the writer active at the last written position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="48b5d-212">連接 <see cref="T:System.Xaml.XamlReader" /> 和 <see cref="T:System.Xaml.XamlWriter" /> 以使用常見的 XAML 節點集中繼項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-212">Connects a <see cref="T:System.Xaml.XamlReader" /> and a <see cref="T:System.Xaml.XamlWriter" /> to use a common XAML node set intermediary.</span>
          </span>
          <span data-ttu-id="48b5d-213">可能會轉換內容，視提供的讀取器和寫入器類型而定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-213">Potentially transforms the content, depending on the types of readers and writers that are provided.</span>
          </span>
          <span data-ttu-id="48b5d-214">提供參數來指定是否在完成呼叫後關閉寫入器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-214">Provides a parameter for specifying whether to close the writer after the call is completed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="48b5d-215">
            <paramref name="xamlReader" /> 或 <paramref name="xamlWriter" /> 輸入為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-215">
              <paramref name="xamlReader" /> or <paramref name="xamlWriter" /> input is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xaml.XamlException">
          <span data-ttu-id="48b5d-216">XAML 結構描述內容在提供的 <paramref name="xamlReader" /> 和 <paramref name="xamlWriter" /> 之間不相符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="48b5d-216">The XAML schema context does not match between the provided <paramref name="xamlReader" /> and <paramref name="xamlWriter" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>