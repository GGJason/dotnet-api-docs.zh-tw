<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlServices.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59e1f1d48af20e3873a75e26dc3e1e7ba760293b7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9e1f1d48af20e3873a75e26dc3e1e7ba760293b7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlServices">
          <source>Provides higher-level services (static methods) for the common XAML tasks of reading XAML and writing an object graph; or reading an object graph and writing XAML file output for serialization purposes.</source>
          <target state="translated">提供更高層級的服務 (靜態方法) 來用於一般 XAML 工作，包括讀取 XAML 和寫入物件圖形，或是讀取物件圖形和寫入 XAML 檔案輸出以進行序列化。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlServices">
          <source>The modes of the <ph id="ph1">&lt;xref:System.Xaml.XamlServices&gt;</ph> class that are used in the most common XAML reading and writing scenarios rely on creating instances of XAML readers and XAML writers.</source>
          <target state="translated">模式<ph id="ph1">&lt;xref:System.Xaml.XamlServices&gt;</ph>中最常見的 XAML 讀取和寫入案例依賴建立執行個體的 XAML 讀取器和 XAML 寫入器所使用的類別。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlServices">
          <source>These readers and writers are specialized but internal implementations of public classes, such as <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>, <ph id="ph2">&lt;xref:System.Xaml.XamlXmlReader&gt;</ph>, and <ph id="ph3">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>.</source>
          <target state="translated">這些讀取器和寫入器，特製化，但內部實作的公用類別，例如<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>， <ph id="ph2">&lt;xref:System.Xaml.XamlXmlReader&gt;</ph>，和<ph id="ph3">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlServices">
          <source>To use <ph id="ph1">&lt;xref:System.Xaml.XamlServices&gt;</ph> for most scenarios, you can rely on the default internal implementations to obtain the results that you want.</source>
          <target state="translated">若要使用<ph id="ph1">&lt;xref:System.Xaml.XamlServices&gt;</ph>大部分情況下，您可以依賴預設內部實作，以取得您想要的結果。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlServices">
          <source>For more specialized scenarios, you might define readers and writers yourself, and then pass them as arguments for overloads of the <ph id="ph1">&lt;xref:System.Xaml.XamlServices&gt;</ph> methods.</source>
          <target state="translated">更具特製化的情況下，您可能會定義讀取器及寫入您自己，並再將其傳遞做為引數的多載的<ph id="ph1">&lt;xref:System.Xaml.XamlServices&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlServices">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlServices&gt;</ph> is not the recommended XAML reading or XAML writing API set if you are processing WPF-defined types, or types based on WPF.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlServices&gt;</ph> 不建議的 XAML 讀取或 XAML 撰寫的 API 集，如果您正在處理 WPF 定義型別或 WPF 為基礎的類型。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlServices">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> usage, use <ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType&gt;</ph> for reading or loading XAML (or BAML); and <ph id="ph3">&lt;xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType&gt;</ph> for writing back XAML.</source>
          <target state="translated">如<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>使用方式，使用<ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType&gt;</ph>進行讀取或載入 XAML （BAML）; 和<ph id="ph3">&lt;xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType&gt;</ph>的回寫 XAML。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlServices">
          <source>These classes use .NET Framework XAML Services APIs and the XAML readers and XAML writers internally in their implementation; however, they also provide support and specialized XAML schema context for WPF-specific concepts, such as optimizations for dependency properties and WPF known types.</source>
          <target state="translated">這些類別用於.NET Framework XAML 服務應用程式開發介面的 XAML 讀取器和 XAML 寫入器在內部實作;不過，它們也提供支援和特定的 XAML 結構描述內容為 WPF 專屬的概念，例如相依性屬性與已知型別的 WPF 的最佳化。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlServices">
          <source>Loads source for a XAML reader and writes its output as an object graph.</source>
          <target state="translated">載入 XAML 讀取器的來源，並寫入其輸出做為物件圖形。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
          <source>The stream to load as input.</source>
          <target state="translated">要載入做為輸入的資料流。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
          <source>Loads a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> source for a XAML reader and writes its output as an object graph.</source>
          <target state="translated">載入 XAML 讀取器的 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 來源，並寫入其輸出做為物件圖形。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
          <source>The object graph that is written as output.</source>
          <target state="translated">已做為輸出寫入的物件圖形。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
          <source>Different signatures for the <ph id="ph1">&lt;xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29&gt;</ph> method specify different types of input for the source XAML.</source>
          <target state="translated">針對不同的簽章<ph id="ph1">&lt;xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29&gt;</ph>方法指定不同的輸入來源 XAML 的類型。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29&gt;</ph> internal implementation first creates an <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> by calling <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%28System.IO.Stream%29&gt;</ph> and then creates a new instance of a specialized <ph id="ph4">&lt;xref:System.Xaml.XamlReader&gt;</ph> that processes the input.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29&gt;</ph>內部實作會先建立<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>藉由呼叫<ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%28System.IO.Stream%29&gt;</ph>，然後建立特殊的新執行個體<ph id="ph4">&lt;xref:System.Xaml.XamlReader&gt;</ph>，可處理輸入。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
          <source>In order for the <ph id="ph1">&lt;xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29&gt;</ph> call to successfully create an object graph, the following must be true:</source>
          <target state="translated">為了讓<ph id="ph1">&lt;xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29&gt;</ph>呼叫成功建立物件圖形中，下列必須為真：</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
          <source>The source is well-formed and valid XML.</source>
          <target state="translated">來源是格式正確且有效的 XML。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
          <source>The source is valid XAML at the language level.</source>
          <target state="translated">來源是有效的 XAML 語言層級。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
          <source>The XAML types that are specified in the source XAML must resolve to backing types in the relevant XAML namespaces.</source>
          <target state="translated">指定在來源中的 XAML 型別 XAML 必須解析成相關的 XAML 命名空間中的備份類型。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
          <source>For example, XAML types for WPF namespaces can resolve to a WPF XAML namespace as specified in the XAML; the assemblies for WPF must be included in the project or available in the run time; and so on.</source>
          <target state="translated">例如，WPF 命名空間的 XAML 型別可解析成指定 XAML; 中的 WPF XAML 命名空間wpf 組件必須包含在專案或可執行的時間;等等。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlServices&gt;</ph> is not the recommended XAML reading or XAML writing API set if you are processing <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> types, or types based on <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlServices&gt;</ph> 不是建議的 XAML 讀取或寫入應用程式開發介面的 XAML 設定，如果您正在處理<ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>型別或根據<ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> usage, use <ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType&gt;</ph> for reading or loading XAML; and <ph id="ph3">&lt;xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType&gt;</ph> for writing back XAML.</source>
          <target state="translated">如<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>使用方式，使用<ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType&gt;</ph>進行讀取或載入 XAML; 和<ph id="ph3">&lt;xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType&gt;</ph>的回寫 XAML。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
          <source>These classes use <ph id="ph1">&lt;xref:System.Xaml&gt;</ph> APIs internally in their implementation; however, they also provide support for WPF-specific concepts that influence the nature of XAML reading and writing, such as optimizations for dependency properties.</source>
          <target state="translated">這些類別會使用<ph id="ph1">&lt;xref:System.Xaml&gt;</ph>Api 在其實作; 內部不過，它們也支援的 WPF 專屬影響的 XAML 讀取和寫入，例如相依性屬性的最佳化性質的概念。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> to use as the basis for the created <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">要做為所建立 <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 之基準的 <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.IO.TextReader)">
          <source>Creates a XAML reader from a <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>, and returns an object graph.</source>
          <target state="translated">從 <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 建立 XAML 讀取器，並傳回物件圖形。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.IO.TextReader)">
          <source>The object graph that is returned.</source>
          <target state="translated">所傳回的物件圖形。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.IO.TextReader)">
          <source>In order to return the object graph, the <ph id="ph1">`textReader`</ph> input should be constructed by using its relevant input.</source>
          <target state="translated">若要傳回的物件圖形，<ph id="ph1">`textReader`</ph>輸入應該使用其相關的輸入來建構。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.IO.TextReader)">
          <source>For example, it should pass a <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph> that is constructed by using a valid XAML-as-string input for the <ph id="ph2">&lt;xref:System.IO.StringReader.%23ctor%28System.String%29&gt;</ph> constructor.</source>
          <target state="translated">例如，它應該傳遞<ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph>所使用的有效的 XAML 字串做為輸入來建構<ph id="ph2">&lt;xref:System.IO.StringReader.%23ctor%28System.String%29&gt;</ph>建構函式。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.IO.TextReader)">
          <source><ph id="ph1">&lt;paramref name="textReader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="textReader" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.String)">
          <source>The file name to load and use as source.</source>
          <target state="translated">要載入並做為來源的檔案名稱。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.String)">
          <source>Loads a <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> source for a XAML reader and returns an object graph.</source>
          <target state="translated">載入 XAML 讀取器的 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 來源並傳回物件圖形。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.String)">
          <source>The object graph that is returned.</source>
          <target state="translated">所傳回的物件圖形。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.String)">
          <source>Different signatures for the <ph id="ph1">&lt;xref:System.Xaml.XamlServices.Load%2A&gt;</ph> method specify different types of input for the source XAML.</source>
          <target state="translated">針對不同的簽章<ph id="ph1">&lt;xref:System.Xaml.XamlServices.Load%2A&gt;</ph>方法指定不同的輸入來源 XAML 的類型。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlServices.Load%2A&gt;</ph> internal implementation first creates an <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> by calling <ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%28System.String%29&gt;</ph> and then creates a new instance of a specialized <ph id="ph4">&lt;xref:System.Xaml.XamlReader&gt;</ph> that processes the input.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlServices.Load%2A&gt;</ph>內部實作會先建立<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>藉由呼叫<ph id="ph3">&lt;xref:System.Xml.XmlReader.Create%28System.String%29&gt;</ph>，然後建立特殊的新執行個體<ph id="ph4">&lt;xref:System.Xaml.XamlReader&gt;</ph>，可處理輸入。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.String)">
          <source>In order for the <ph id="ph1">&lt;xref:System.Xaml.XamlServices.Load%28System.String%29&gt;</ph> call to successfully create an object graph, the following must be true:</source>
          <target state="translated">為了讓<ph id="ph1">&lt;xref:System.Xaml.XamlServices.Load%28System.String%29&gt;</ph>呼叫成功建立物件圖形中，下列必須為真：</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.String)">
          <source>The source is well-formed and valid XML.</source>
          <target state="translated">來源是格式正確且有效的 XML。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.String)">
          <source>The source is valid XAML at the language level.</source>
          <target state="translated">來源是有效的 XAML 語言層級。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.String)">
          <source>The XAML types that are specified in the source XAML must resolve to backing types in the relevant XAML namespaces.</source>
          <target state="translated">指定在來源中的 XAML 型別 XAML 必須解析成相關的 XAML 命名空間中的備份類型。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.String)">
          <source>For example, XAML types for WPF namespaces can resolve to a WPF XAML namespace as specified in the XAML; the assemblies for WPF must be included in the project or be available in the run time; and so on.</source>
          <target state="translated">例如，WPF 命名空間的 XAML 型別可解析成指定 XAML; 中的 WPF XAML 命名空間wpf 組件必須包含在專案中，或可在執行階段中。等等。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.String)">
          <source><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> input is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> 輸入是 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)">
          <source>The XAML reader implementation to use as the reader for this <ph id="ph1">&lt;see langword="Load" /&gt;</ph> operation.</source>
          <target state="translated">要做為這個 <ph id="ph1">&lt;see langword="Load" /&gt;</ph> 作業之讀取器的 XAML 讀取器實作。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)">
          <source>Loads a specific XAML reader implementation and returns an object graph.</source>
          <target state="translated">載入特定的 XAML 讀取器實作並傳回物件圖形。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)">
          <source>The object graph that is returned.</source>
          <target state="translated">所傳回的物件圖形。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)">
          <source>You should typically use this signature only in the following cases:</source>
          <target state="translated">您通常應該只有在下列情況下使用此簽章：</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)">
          <source>You defined your own implementation of a <ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>.</source>
          <target state="translated">定義您自己實作<ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)">
          <source>You specified settings for a <ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph> that differ from the default settings.</source>
          <target state="translated">指定的設定<ph id="ph1">&lt;xref:System.Xaml.XamlReader&gt;</ph>不同於預設設定。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)">
          <source><ph id="ph1">&lt;paramref name="xamlReader" /&gt;</ph> input is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xamlReader" /&gt;</ph> 輸入是 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> implementation to use as the reader for this <ph id="ph2">&lt;see langword="Load" /&gt;</ph> operation.</source>
          <target state="translated">要做為這個 <ph id="ph2">&lt;see langword="Load" /&gt;</ph> 作業之讀取器的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 實作。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)">
          <source>Loads a specific XML reader implementation and returns an object graph.</source>
          <target state="translated">載入特定的 XML 讀取器實作並傳回物件圖形。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)">
          <source>The output object graph.</source>
          <target state="translated">輸出物件圖形。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)">
          <source>You should typically use this signature only if you defined your own implementation of a <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">您通常應該使用此簽章，如果您定義自己的實作<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="xamlReader" /&gt;</ph> input is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xamlReader" /&gt;</ph> 輸入是 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Parse(System.String)">
          <source>The XAML string input to parse.</source>
          <target state="translated">要剖析的 XAML 字串輸入。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Parse(System.String)">
          <source>Reads XAML as string output and returns an object graph.</source>
          <target state="translated">讀取 XAML 做為字串輸出並傳回物件圖形。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Parse(System.String)">
          <source>The object graph that is returned.</source>
          <target state="translated">所傳回的物件圖形。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Parse(System.String)">
          <source>In order for the <ph id="ph1">&lt;xref:System.Xaml.XamlServices.Parse%2A&gt;</ph> call to successfully create an object tree, the following must be true:</source>
          <target state="translated">為了讓<ph id="ph1">&lt;xref:System.Xaml.XamlServices.Parse%2A&gt;</ph>呼叫成功建立之物件樹狀目錄中，下列必須為 true:</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Parse(System.String)">
          <source>The <ph id="ph1">`xaml`</ph> input is well-formed and valid XML.</source>
          <target state="translated"><ph id="ph1">`xaml`</ph>輸入的格式正確且有效的 XML。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Parse(System.String)">
          <source>The <ph id="ph1">`xaml`</ph> input is valid XAML at the language level.</source>
          <target state="translated"><ph id="ph1">`xaml`</ph>輸入都是有效的 XAML 語言層級。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Parse(System.String)">
          <source>The XAML types that are specified in the <ph id="ph1">`xaml`</ph> input must resolve to backing types in the relevant XAML namespaces.</source>
          <target state="translated">中所指定的 XAML 型別<ph id="ph1">`xaml`</ph>輸入必須解析成支援類型相關的 XAML 命名空間中。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Parse(System.String)">
          <source>For example, XAML types for a WPF namespace can resolve to a WPF XAML namespace as specified in the XAML; the assemblies for WPF must be included in the project or be available in the run time; and so on.</source>
          <target state="translated">例如，WPF 命名空間的 XAML 型別可解析成指定 XAML; 中的 WPF XAML 命名空間wpf 組件必須包含在專案中，或可在執行階段中。等等。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Parse(System.String)">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlServices&gt;</ph> is not the recommended XAML reading or XAML writing API set if you are processing <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> types, or types based on <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlServices&gt;</ph> 不是建議的 XAML 讀取或寫入應用程式開發介面的 XAML 設定，如果您正在處理<ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>型別或根據<ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Parse(System.String)">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> usage, use <ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType&gt;</ph> for reading or loading XAML, and <ph id="ph3">&lt;xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType&gt;</ph> for writing back XAML.</source>
          <target state="translated">如<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>使用方式，使用<ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType&gt;</ph>進行讀取或載入 XAML，和<ph id="ph3">&lt;xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType&gt;</ph>的回寫 XAML。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Parse(System.String)">
          <source>These classes use <ph id="ph1">&lt;xref:System.Xaml&gt;</ph> APIs internally in their implementation; however, they also provide support for WPF-specific concepts that influence the nature of XAML reading and writing, such as optimizations for dependency properties.</source>
          <target state="translated">這些類別會使用<ph id="ph1">&lt;xref:System.Xaml&gt;</ph>Api 在其實作; 內部不過，它們也支援的 WPF 專屬影響的 XAML 讀取和寫入，例如相依性屬性的最佳化性質的概念。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="xaml" /&gt;</ph> input is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xaml" /&gt;</ph> 輸入是 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlServices">
          <source>Processes a provided object graph into a XAML node representation and then into an output format for serialization.</source>
          <target state="translated">將提供的物件圖形處理成 XAML 節點表示，再處理成序列化的輸出格式。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.Object)">
          <source>The root of the object graph to process.</source>
          <target state="translated">要處理之物件圖形的根目錄。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.Object)">
          <source>Processes a provided object tree into a XAML node representation, and returns a string representation of the output XAML.</source>
          <target state="translated">將提供的物件樹狀結構處理成 XAML 節點表示，然後傳回輸出 XAML 的字串表示。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.Object)">
          <source>The XAML markup output as a string.</source>
          <target state="translated">字串形式的 XAML 標記輸出。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Save(System.Object)">
          <source>The output from this method is the <ph id="ph1">`ToString`</ph> result of an <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> that is created by the method call.</source>
          <target state="translated">這個方法的輸出是<ph id="ph1">`ToString`</ph>結果<ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>，它由方法呼叫。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Save(System.Object)">
          <source>That <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> is created by using the following settings: <ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings.Indent%2A?displayProperty=nameWithType&gt;</ph> is <ph id="ph3">`true`</ph>; and <ph id="ph4">&lt;xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A?displayProperty=nameWithType&gt;</ph> is <ph id="ph5">`true`</ph>.</source>
          <target state="translated">確認<ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph>由使用下列設定：<ph id="ph2">&lt;xref:System.Xml.XmlWriterSettings.Indent%2A?displayProperty=nameWithType&gt;</ph>是<ph id="ph3">`true`</ph>; 和<ph id="ph4">&lt;xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A?displayProperty=nameWithType&gt;</ph>是<ph id="ph5">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Save(System.Object)">
          <source>The returned string can be loaded as valid XML through the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method if you processed the string into a stream, or into a reader more specifically dedicated for XAML.</source>
          <target state="translated">傳回的字串可以載入為有效的 XML，透過<ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph>方法，如果您處理字串更明確地說專用讀取器放入資料流，或是為 XAML。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)">
          <source>The destination stream.</source>
          <target state="translated">目的資料流。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)">
          <source>The root of the object graph to process.</source>
          <target state="translated">要處理之物件圖形的根目錄。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)">
          <source>Processes a provided object graph into a XAML node representation and then into an output stream for serialization.</source>
          <target state="translated">將提供的物件圖形處理成 XAML 節點表示，再處理成序列化的輸出資料流。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlServices&gt;</ph> is not the recommended XAML reading or XAML writing API set if you are processing <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> types, or types based on <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlServices&gt;</ph> 不是建議的 XAML 讀取或寫入應用程式開發介面的 XAML 設定，如果您正在處理<ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>型別或根據<ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> usage, use <ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType&gt;</ph> for reading or loading XAML; and <ph id="ph3">&lt;xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType&gt;</ph> for writing back XAML.</source>
          <target state="translated">如<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>使用方式，使用<ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType&gt;</ph>進行讀取或載入 XAML; 和<ph id="ph3">&lt;xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType&gt;</ph>的回寫 XAML。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)">
          <source>These classes use <ph id="ph1">&lt;xref:System.Xaml&gt;</ph> APIs internally in their implementation; however, they also provide support for WPF-specific concepts that influence the nature of XAML reading and writing, such as optimizations for dependency properties.</source>
          <target state="translated">這些類別會使用<ph id="ph1">&lt;xref:System.Xaml&gt;</ph>Api 在其實作; 內部不過，它們也支援的 WPF 專屬影響的 XAML 讀取和寫入，例如相依性屬性的最佳化性質的概念。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> input is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> 輸入是 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.IO.TextWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that writes the output.</source>
          <target state="translated">寫入輸出的 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.IO.TextWriter,System.Object)">
          <source>The root of the object graph to process.</source>
          <target state="translated">要處理之物件圖形的根目錄。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.IO.TextWriter,System.Object)">
          <source>Processes a provided object graph into a XAML node representation and then into an output that goes to the provided <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">將提供的物件圖形處理成 XAML 節點表示，再處理成流向所提供 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 的輸出。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.IO.TextWriter,System.Object)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> input is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> 輸入是 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.String,System.Object)">
          <source>The name and location of the file to write the output to.</source>
          <target state="translated">要將輸出寫入之目標檔案的名稱和位置。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.String,System.Object)">
          <source>The root of the object graph to process.</source>
          <target state="translated">要處理之物件圖形的根目錄。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.String,System.Object)">
          <source>Processes a provided object graph into a XAML node representation and then writes it to an output file at a provided location.</source>
          <target state="translated">將提供的物件圖形處理成 XAML 節點表示，然後寫入至所提供位置上的輸出檔。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Save(System.String,System.Object)">
          <source>The <ph id="ph1">`fileName`</ph> parameter value is used as the <ph id="ph2">`outputFileName`</ph> input for a call to <ph id="ph3">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph>, which creates a <ph id="ph4">&lt;xref:System.Xml.XmlWriter&gt;</ph> as part of the method call.</source>
          <target state="translated"><ph id="ph1">`fileName`</ph>參數值作為<ph id="ph2">`outputFileName`</ph>呼叫的輸入<ph id="ph3">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType&gt;</ph>，它會建立<ph id="ph4">&lt;xref:System.Xml.XmlWriter&gt;</ph>做為方法呼叫的一部分。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> 為空字串。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> implementation to use.</source>
          <target state="translated">要使用的 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> 實作。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)">
          <source>The root of the object graph to process.</source>
          <target state="translated">要處理之物件圖形的根目錄。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)">
          <source>Processes a provided object graph into a XAML node representation and then writes it to the provided XAML writer.</source>
          <target state="translated">將提供的物件圖形處理成 XAML 節點表示，然後寫入至提供的 XAML 寫入器。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)">
          <source>You should typically use this signature only in the following cases:</source>
          <target state="translated">您通常應該只有在下列情況下使用此簽章：</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)">
          <source>You defined your own implementation of a <ph id="ph1">&lt;xref:System.Xaml.XamlWriter&gt;</ph>.</source>
          <target state="translated">定義您自己實作<ph id="ph1">&lt;xref:System.Xaml.XamlWriter&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)">
          <source>You specified settings for the <ph id="ph1">&lt;xref:System.Xaml.XamlWriter&gt;</ph> that differ from the default settings.</source>
          <target state="translated">指定的設定<ph id="ph1">&lt;xref:System.Xaml.XamlWriter&gt;</ph>不同於預設設定。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> input is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> 輸入是 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.Xml.XmlWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> implementation to use.</source>
          <target state="translated">要使用的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 實作。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.Xml.XmlWriter,System.Object)">
          <source>The root of the object graph to process.</source>
          <target state="translated">要處理之物件圖形的根目錄。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.Xml.XmlWriter,System.Object)">
          <source>Processes a provided object graph into a XAML node representation and then writes it to the provided <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">將提供的物件圖形處理成 XAML 節點表示，然後寫入至提供的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Save(System.Xml.XmlWriter,System.Object)">
          <source><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> input is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="writer" /&gt;</ph> 輸入是 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlServices">
          <source>Connects a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> and a <ph id="ph2">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> in order to use a common XAML node set intermediary.</source>
          <target state="translated">連接 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> 以使用常見的 XAML 節點集中繼項目。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlServices">
          <source>Potentially transforms the content, depending on the types of readers and writers that are provided.</source>
          <target state="translated">可能會轉換內容，視提供的讀取器和寫入器類型而定。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> implementation to use.</source>
          <target state="translated">要使用的 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> 實作。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> to use.</source>
          <target state="translated">要使用的 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)">
          <source>Connects a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> and a <ph id="ph2">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> to use a common XAML node set intermediary.</source>
          <target state="translated">連接 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> 以使用常見的 XAML 節點集中繼項目。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)">
          <source>Potentially transforms the content, depending on the types of readers and writers that are provided.</source>
          <target state="translated">可能會轉換內容，視提供的讀取器和寫入器類型而定。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)">
          <source>This method is a wrapper around <ph id="ph1">&lt;xref:System.Xaml.XamlServices.Transform%28System.Xaml.XamlReader%2CSystem.Xaml.XamlWriter%2CSystem.Boolean%29&gt;</ph>, where <ph id="ph2">`closeWriter`</ph> is specified as <ph id="ph3">`true`</ph>.</source>
          <target state="translated">這個方法是周圍的包裝函式<ph id="ph1">&lt;xref:System.Xaml.XamlServices.Transform%28System.Xaml.XamlReader%2CSystem.Xaml.XamlWriter%2CSystem.Boolean%29&gt;</ph>，其中<ph id="ph2">`closeWriter`</ph>指定為<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)">
          <source><ph id="ph1">&lt;paramref name="xamlReader" /&gt;</ph> or <ph id="ph2">&lt;paramref name="xamlWriter" /&gt;</ph> input is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xamlReader" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="xamlWriter" /&gt;</ph> 輸入為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)">
          <source>The XAML schema context does not match between the provided <ph id="ph1">&lt;paramref name="xamlReader" /&gt;</ph> and <ph id="ph2">&lt;paramref name="xamlWriter" /&gt;</ph>.</source>
          <target state="translated">XAML 結構描述內容在提供的 <ph id="ph1">&lt;paramref name="xamlReader" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="xamlWriter" /&gt;</ph> 之間不相符。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> implementation to use.</source>
          <target state="translated">要使用的 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> 實作。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> to use.</source>
          <target state="translated">要使用的 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to close the writer after the call is complete; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to leave the writer active at the last written position.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示在呼叫完成之後關閉寫入器，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 表示讓寫入器在最後寫入的位置上繼續保持開啟。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)">
          <source>Connects a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> and a <ph id="ph2">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> to use a common XAML node set intermediary.</source>
          <target state="translated">連接 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlReader" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="T:System.Xaml.XamlWriter" /&gt;</ph> 以使用常見的 XAML 節點集中繼項目。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)">
          <source>Potentially transforms the content, depending on the types of readers and writers that are provided.</source>
          <target state="translated">可能會轉換內容，視提供的讀取器和寫入器類型而定。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)">
          <source>Provides a parameter for specifying whether to close the writer after the call is completed.</source>
          <target state="translated">提供參數來指定是否在完成呼叫後關閉寫入器。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="xamlReader" /&gt;</ph> or <ph id="ph2">&lt;paramref name="xamlWriter" /&gt;</ph> input is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xamlReader" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="xamlWriter" /&gt;</ph> 輸入為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)">
          <source>The XAML schema context does not match between the provided <ph id="ph1">&lt;paramref name="xamlReader" /&gt;</ph> and <ph id="ph2">&lt;paramref name="xamlWriter" /&gt;</ph>.</source>
          <target state="translated">XAML 結構描述內容在提供的 <ph id="ph1">&lt;paramref name="xamlReader" /&gt;</ph> 和 <ph id="ph2">&lt;paramref name="xamlWriter" /&gt;</ph> 之間不相符。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>