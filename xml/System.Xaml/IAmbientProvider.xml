<Type Name="IAmbientProvider" FullName="System.Xaml.IAmbientProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b1efea7e8c431289711e4bdfb3feaf27fa12d53e" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52590839" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IAmbientProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAmbientProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IAmbientProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAmbientProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAmbientProvider" />
  <TypeSignature Language="F#" Value="type IAmbientProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>表示服務，這個服務可以將環境屬性或環境型別的資訊項目傳回給型別轉換器和標記延伸。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此介面代表服務，可協助類型轉換器和標記延伸，為取得 XAML 類型系統的環境屬性識別項 (<xref:System.Xaml.XamlMember>物件)。 服務也可以從類別中取得環境屬性值。 類型也可以是環境;做為其值會使用該類型的任何成員應該要視為環境。  
  
 這項服務通常會傳回透過呼叫<xref:System.IServiceProvider.GetService%2A>，這對特定內容的服務提供者。 需要它，例如值轉換器的執行程式碼的內容已可使用的服務提供者。 如需詳細資訊，請參閱 < [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)並[Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)。  
  
## <a name="about-ambient-properties"></a>關於環境的屬性  
 環境屬性是其屬性值應該是適用於類型轉換器和標記延伸使用方式存在於在 XAML 節點結構，並從它建立的物件圖形中的屬性。 這是在載入路徑的物件撰寫階段或儲存的序列化階段與相關 XAML 處理器的路徑。  
  
 在載入路徑案例中，環境屬性值可能會影響 XAML 節點結構中存在其下方的其他屬性的物件圖形中的值。 當處理成 XAML 節點資料流，環境的概念，表示環境屬性值必須是適用於類型轉換器和標記延伸模組，從`StartObject`至`EndObject`。 同樣地，類型轉換器，可針對儲存路徑可用環境的屬性和其值的知識。 因此，產生的 XAML 是較佳的反覆存取表示。  
  
 一般情況下，成員的 XAML 不會不會指定必須處理的物件成員的順序。 不過，任何環境屬性值必須先處理由 XAML 讀取器，讓類型轉換器和標記延伸使用方式包含在其他內容中可以存取透過<xref:System.Xaml.IAmbientProvider>服務。  
  
 <xref:System.Xaml.XamlMember.DependsOn%2A> 是一種類似的概念，也會影響 XAML 節點處理順序。 不過，<xref:System.Xaml.XamlMember.DependsOn%2A>僅適用於對等成員與節點關聯性，所以無法影響所有下階。 此外，<xref:System.Xaml.XamlMember.DependsOn%2A>直接影響物件圖表屬性設定; 而環境的技術會依賴型別轉換器或標記延伸模組。 在環境的技術，必須也有特定的型別轉換器或標記延伸模組定義，指定應該如何解譯和套用至物件的環境屬性值。  
  
## <a name="wpf-usage-notes"></a>WPF 使用注意事項  
 所示的環境屬性案例[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]功能集是<xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>，這可以限定所需的屬性名稱查閱其他值。 在此情況下，<xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>值會限定<xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType>位於下方的 XAML 節點的值。 <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> 使用的型別轉換子行為<xref:System.Windows.DependencyProperty>。 此行為存取環境<xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>值，藉由查詢<xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A>從適用於類型轉換器和標記延伸的服務內容。  
  
 環境型別案例所示的 WPF 功能集是<xref:System.Windows.ResourceDictionary>。 <xref:System.Windows.ResourceDictionary> 已<xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>屬性，可以包含其他<xref:System.Windows.ResourceDictionary>物件才能合併，且預期的資源解析順序合併的案例衝突型別載入的順序。 <xref:System.Windows.ResourceDictionary> 適用於<xref:System.Windows.Markup.AmbientAttribute>，讓 XAML 處理器能夠正確處理的合併字典中的參考`StaticResource`使用方式。 具體而言，`StaticResource`是標記延伸，它會呼叫<xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A>。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.AmbientPropertyValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetAllAmbientValues">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>針對要求的範圍，傳回環境型別或屬性資訊項目的可列舉集。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;object&gt; GetAllAmbientValues (params System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetAllAmbientValues(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ParamArray types As XamlType()) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetAllAmbientValues(... cli::array &lt;System::Xaml::XamlType ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : System.Xaml.XamlType[] -&gt; seq&lt;obj&gt;" Usage="iAmbientProvider.GetAllAmbientValues types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types">要從中擷取環境型別資訊的型別集。</param>
        <summary>針對要求的型別，傳回可能環境型別之物件執行個體的可列舉集。</summary>
        <returns>物件的可列舉集，表示所要求 <see cref="T:System.Xaml.XamlType" /> 識別項集的值。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ceilingTypes As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As IEnumerable(Of AmbientPropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Xaml::AmbientPropertyValue ^&gt; ^ GetAllAmbientValues(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; seq&lt;System.Xaml.AmbientPropertyValue&gt;" Usage="iAmbientProvider.GetAllAmbientValues (ceilingTypes, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">指定一個或多個型別，當在物件圖形中往上周遊時遇到這些型別，即應該停止評估。 這個型別含有所需的環境屬性。 可以是 <see langword="null" />。</param>
        <param name="properties">指定一個或多個屬性識別項物件，這些物件識別要視為環境屬性的屬性。</param>
        <summary>針對要求的屬性集，傳回環境屬性資訊項目的可列舉集。</summary>
        <returns>所要求屬性集之環境屬性資訊項目的可列舉集。 每個傳回之 <see cref="T:System.Xaml.AmbientPropertyValue" /> 的屬性資訊都會符合其中一個輸入 <paramref name="properties" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 每個<xref:System.Xaml.AmbientPropertyValue>，就會傳回包含<xref:System.Xaml.XamlMember>識別項和屬性值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; types, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; types, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ceilingTypes As IEnumerable(Of XamlType), searchLiveStackOnly As Boolean, types As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As IEnumerable(Of AmbientPropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Xaml::AmbientPropertyValue ^&gt; ^ GetAllAmbientValues(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, bool searchLiveStackOnly, System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ types, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : seq&lt;System.Xaml.XamlType&gt; * bool * seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; seq&lt;System.Xaml.AmbientPropertyValue&gt;" Usage="iAmbientProvider.GetAllAmbientValues (ceilingTypes, searchLiveStackOnly, types, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="searchLiveStackOnly" Type="System.Boolean" />
        <Parameter Name="types" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">指定一個或多個型別，當在物件圖形中往上周遊時遇到這些型別，即應該停止評估。 這個型別含有所需的環境屬性。 可以是 <see langword="null" />。</param>
        <param name="searchLiveStackOnly">
          <see langword="true" /> 表示不使用已儲存的內容，<see langword="false" /> 表示使用已儲存的內容。 預設值為 <see langword="false" />。</param>
        <param name="types">指定一個或多個型別識別項物件，識別要視為環境的型別。</param>
        <param name="properties">指定一個或多個屬性識別項物件，這些物件識別要視為環境屬性的屬性。</param>
        <summary>針對要求的型別和屬性集，傳回環境屬性資訊項目的可列舉集。</summary>
        <returns>要求的型別和屬性集之環境屬性資訊項目的可列舉集。 每個傳回之 <see cref="T:System.Xaml.AmbientPropertyValue" /> 的屬性資訊都會符合其中一個輸入 <paramref name="types" /> 或 <paramref name="properties" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 每個<xref:System.Xaml.AmbientPropertyValue>，就會傳回包含<xref:System.Xaml.XamlMember>識別項和屬性值。  
  
 這個特定<xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A>多載可以搜尋環境型別，而且在相同的環境屬性通過樹狀結構。 使用這個多載會導致不同的傳回值中的項目排序<xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29>或<xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29>。  
  
 這個多載也會允許不使用任何已儲存的內容中搜尋。 <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29>或是<xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29>多載會隱含地使用已儲存的內容，如果有的話 (他們一定會表現得隱含`searchLiveStackOnly`參數是`false`)。 已儲存的內容的概念可能處理方式不同，在特定的 XAML 結構描述內容，或將 XAML 的架構。 在 WPF XAML 實作中，已儲存的內容會用於範本擴充，以及其他功能區域。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFirstAmbientValue">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>從要求的集合傳回單一環境型別或屬性資訊項目，以第一個遇到的屬性為準。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public object GetFirstAmbientValue (params System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFirstAmbientValue(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstAmbientValue (ParamArray types As XamlType()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFirstAmbientValue(... cli::array &lt;System::Xaml::XamlType ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetFirstAmbientValue : System.Xaml.XamlType[] -&gt; obj" Usage="iAmbientProvider.GetFirstAmbientValue types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types">要從中擷取環境型別資訊的型別集。</param>
        <summary>傳回第一個相符物件，這個物件可能是符合所要求型別的環境型別。</summary>
        <returns>所要求之集合的第一個結果物件。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public System.Xaml.AmbientPropertyValue GetFirstAmbientValue (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.AmbientPropertyValue GetFirstAmbientValue(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstAmbientValue (ceilingTypes As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As AmbientPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::AmbientPropertyValue ^ GetFirstAmbientValue(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetFirstAmbientValue : seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; System.Xaml.AmbientPropertyValue" Usage="iAmbientProvider.GetFirstAmbientValue (ceilingTypes, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.AmbientPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">指定一個或多個型別，當在物件圖形中往上周遊時遇到這些型別，即應該停止評估。 這個型別含有所需的環境屬性。</param>
        <param name="properties">指定一個或多個物件，這些物件識別要視為環境屬性的屬性。</param>
        <summary>從要求的屬性集傳回單一環境屬性資訊項目，以第一個遇到的屬性為準。</summary>
        <returns>在 <paramref name="properties" /> 清單中發現的第一個環境屬性值的單一環境屬性資訊項目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 每個<xref:System.Xaml.AmbientPropertyValue>，就會傳回包含<xref:System.Xaml.XamlMember>識別項和屬性值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>