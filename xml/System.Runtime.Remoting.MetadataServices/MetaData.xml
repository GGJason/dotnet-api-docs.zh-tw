<Type Name="MetaData" FullName="System.Runtime.Remoting.MetadataServices.MetaData">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cd177fe34cf67d6c2f7c863f55e202a07eddacd8" /><Meta Name="ms.sourcegitcommit" Value="cbcba80f998e27b87425ad54726bdb684fb3a932" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="09/04/2018" /><Meta Name="ms.locfileid" Value="43654430" /></Metadata><TypeSignature Language="C#" Value="public class MetaData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.MetadataServices.MetaData" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaData" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaData" />
  <TypeSignature Language="F#" Value="type MetaData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="cd872-101">提供可以讓您使用 XML 結構描述的方法。</span><span class="sxs-lookup"><span data-stu-id="cd872-101">Provides methods that allow you to work with XML schema.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd872-102"><xref:System.Runtime.Remoting.MetadataServices.MetaData>類別提供方法，可讓您從型別資訊，產生 Web 服務描述語言 (WSDL) 將 XML 結構描述轉換成程式碼資料流，並編譯為組件中的程式碼資料流。</span><span class="sxs-lookup"><span data-stu-id="cd872-102">The <xref:System.Runtime.Remoting.MetadataServices.MetaData> class provides methods that allow you to generate Web Services Description Language (WSDL) from type information, convert an XML Schema into a code stream, and compile the code stream into an assembly.</span></span> <span data-ttu-id="cd872-103">這項功能也會出現在[Soapsuds 工具 (Soapsuds.exe)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/xd176a6c(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="cd872-103">This functionality is also present in the [Soapsuds Tool (Soapsuds.exe)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/xd176a6c(v=vs.100)).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaData();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cd872-104">建立 <see cref="T:System.Runtime.Remoting.MetadataServices.MetaData" /> 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="cd872-104">Creates an instance of <see cref="T:System.Runtime.Remoting.MetadataServices.MetaData" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertCodeSourceFileToAssemblyFile">
      <MemberSignature Language="C#" Value="public static void ConvertCodeSourceFileToAssemblyFile (string codePath, string assemblyPath, string strongNameFilename);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertCodeSourceFileToAssemblyFile(string codePath, string assemblyPath, string strongNameFilename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertCodeSourceFileToAssemblyFile (codePath As String, assemblyPath As String, strongNameFilename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertCodeSourceFileToAssemblyFile(System::String ^ codePath, System::String ^ assemblyPath, System::String ^ strongNameFilename);" />
      <MemberSignature Language="F#" Value="static member ConvertCodeSourceFileToAssemblyFile : string * string * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile (codePath, assemblyPath, strongNameFilename)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePath" Type="System.String" />
        <Parameter Name="assemblyPath" Type="System.String" />
        <Parameter Name="strongNameFilename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="codePath"><span data-ttu-id="cd872-105">包含原始程式碼之檔案的路徑。</span><span class="sxs-lookup"><span data-stu-id="cd872-105">The path to the file that contains the source code.</span></span></param>
        <param name="assemblyPath"><span data-ttu-id="cd872-106">產生新 Run-Time 組件的位置。</span><span class="sxs-lookup"><span data-stu-id="cd872-106">The location where the new run-time assembly is generated.</span></span></param>
        <param name="strongNameFilename"><span data-ttu-id="cd872-107">要編譯成新組件的強式名稱 (Strong Name)。</span><span class="sxs-lookup"><span data-stu-id="cd872-107">The strong name to compile into the new assembly.</span></span> <span data-ttu-id="cd872-108">可以是 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="cd872-108">Can be <see cref="F:System.String.Empty" />.</span></span></param>
        <summary><span data-ttu-id="cd872-109">將指定的程式碼來源檔案編譯成執行階段組件檔。</span><span class="sxs-lookup"><span data-stu-id="cd872-109">Compiles a specified code source file into a runtime assembly file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd872-110">如需有關強式名稱的詳細資訊，請參閱[強式名稱組件](~/docs/framework/app-domains/strong-named-assemblies.md)。</span><span class="sxs-lookup"><span data-stu-id="cd872-110">For additional information on strong names, see [Strong-Named Assemblies](~/docs/framework/app-domains/strong-named-assemblies.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cd872-111">如果具有指定名稱的檔案已經存在，它會覆寫。</span><span class="sxs-lookup"><span data-stu-id="cd872-111">If a file with the specified name already exists, it is overwritten.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd872-112">下列程式碼範例示範使用<xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile%2A>方法，將寫入具有指定名稱的執行階段組件中的指定類型的結構描述定義。</span><span class="sxs-lookup"><span data-stu-id="cd872-112">The following code example demonstrates the use of the <xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile%2A> method to write the schema definition of the specified types to a runtime assembly with the specified name.</span></span> <span data-ttu-id="cd872-113">`CsSource.cs`這裡轉換的檔案包含 C# 原始程式碼。</span><span class="sxs-lookup"><span data-stu-id="cd872-113">The `CsSource.cs` file converted here contains C# source code.</span></span>  
  
 [!code-cpp[MetaData.ConvertCodeSourceFileToAssemblyFile#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MetaData.ConvertCodeSourceFileToAssemblyFile/CPP/source.cpp#1)]
 [!code-csharp[MetaData.ConvertCodeSourceFileToAssemblyFile#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MetaData.ConvertCodeSourceFileToAssemblyFile/CS/source.cs#1)]
 [!code-vb[MetaData.ConvertCodeSourceFileToAssemblyFile#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MetaData.ConvertCodeSourceFileToAssemblyFile/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertCodeSourceStreamToAssemblyFile">
      <MemberSignature Language="C#" Value="public static void ConvertCodeSourceStreamToAssemblyFile (System.Collections.ArrayList outCodeStreamList, string assemblyPath, string strongNameFilename);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertCodeSourceStreamToAssemblyFile(class System.Collections.ArrayList outCodeStreamList, string assemblyPath, string strongNameFilename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceStreamToAssemblyFile(System.Collections.ArrayList,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertCodeSourceStreamToAssemblyFile (outCodeStreamList As ArrayList, assemblyPath As String, strongNameFilename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertCodeSourceStreamToAssemblyFile(System::Collections::ArrayList ^ outCodeStreamList, System::String ^ assemblyPath, System::String ^ strongNameFilename);" />
      <MemberSignature Language="F#" Value="static member ConvertCodeSourceStreamToAssemblyFile : System.Collections.ArrayList * string * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceStreamToAssemblyFile (outCodeStreamList, assemblyPath, strongNameFilename)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outCodeStreamList" Type="System.Collections.ArrayList" />
        <Parameter Name="assemblyPath" Type="System.String" />
        <Parameter Name="strongNameFilename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outCodeStreamList"><span data-ttu-id="cd872-114">資料流的 <see cref="T:System.Collections.ArrayList" />，具有原始程式碼。</span><span class="sxs-lookup"><span data-stu-id="cd872-114">A <see cref="T:System.Collections.ArrayList" /> of streams with the source code.</span></span></param>
        <param name="assemblyPath"><span data-ttu-id="cd872-115">產生新 Run-Time 組件的位置。</span><span class="sxs-lookup"><span data-stu-id="cd872-115">The location where the new run-time assembly is generated.</span></span></param>
        <param name="strongNameFilename"><span data-ttu-id="cd872-116">要編譯成執行階段組件的強式名稱。</span><span class="sxs-lookup"><span data-stu-id="cd872-116">The strong name to compile into the new run-time assembly.</span></span> <span data-ttu-id="cd872-117">可以是 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="cd872-117">Can be <see cref="F:System.String.Empty" />.</span></span></param>
        <summary><span data-ttu-id="cd872-118">將指定的程式碼來源資料流編譯成執行階段組件檔。</span><span class="sxs-lookup"><span data-stu-id="cd872-118">Compiles specified code source streams into a run-time assembly file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd872-119">如需有關強式名稱的詳細資訊，請參閱[強式名稱組件](~/docs/framework/app-domains/strong-named-assemblies.md)。</span><span class="sxs-lookup"><span data-stu-id="cd872-119">For additional information on strong names, see [Strong-Named Assemblies](~/docs/framework/app-domains/strong-named-assemblies.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cd872-120">如果具有指定名稱的檔案已經存在，它會覆寫。</span><span class="sxs-lookup"><span data-stu-id="cd872-120">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertSchemaStreamToCodeSourceStream">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cd872-121">將指定的結構描述定義轉換為 C# 原始程式碼 Proxy，這可以接著被編譯成 Runtime Proxy 組件。</span><span class="sxs-lookup"><span data-stu-id="cd872-121">Converts a specified schema definition to C# source code proxy, which can then be compiled into a runtime proxy assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertSchemaStreamToCodeSourceStream">
      <MemberSignature Language="C#" Value="public static void ConvertSchemaStreamToCodeSourceStream (bool clientProxy, string outputDirectory, System.IO.Stream inputStream, System.Collections.ArrayList outCodeStreamList);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, string outputDirectory, class System.IO.Stream inputStream, class System.Collections.ArrayList outCodeStreamList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertSchemaStreamToCodeSourceStream (clientProxy As Boolean, outputDirectory As String, inputStream As Stream, outCodeStreamList As ArrayList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, System::String ^ outputDirectory, System::IO::Stream ^ inputStream, System::Collections::ArrayList ^ outCodeStreamList);" />
      <MemberSignature Language="F#" Value="static member ConvertSchemaStreamToCodeSourceStream : bool * string * System.IO.Stream * System.Collections.ArrayList -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream (clientProxy, outputDirectory, inputStream, outCodeStreamList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientProxy" Type="System.Boolean" />
        <Parameter Name="outputDirectory" Type="System.String" />
        <Parameter Name="inputStream" Type="System.IO.Stream" />
        <Parameter Name="outCodeStreamList" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="clientProxy"><span data-ttu-id="cd872-122">指示要產生的 Proxy 的型別。</span><span class="sxs-lookup"><span data-stu-id="cd872-122">Indicates the type of proxy to generate.</span></span> <span data-ttu-id="cd872-123">如果為 <see langword="true" />，則產生會自動載入通道的簡單 Proxy (也稱為包裝的 Proxy)、公開遠端物件的所有方法，和提供對通道屬性的存取。</span><span class="sxs-lookup"><span data-stu-id="cd872-123">If <see langword="true" />, generates a simple proxy (also known as wrapped proxy) that automatically loads the channels, exposes all the methods of the remote object, and provides access to the channel properties.</span></span> <span data-ttu-id="cd872-124">如果為 <see langword="false" />，則產生會公開遠端物件所有方法的透明 Proxy。</span><span class="sxs-lookup"><span data-stu-id="cd872-124">If <see langword="false" />, generates a transparent proxy that exposes all the methods of the remote object.</span></span></param>
        <param name="outputDirectory"><span data-ttu-id="cd872-125">具有 Proxy 的新 C# 原始程式碼檔案被建立時所在的目錄。</span><span class="sxs-lookup"><span data-stu-id="cd872-125">The directory where the new C# source code files with the proxy are created.</span></span></param>
        <param name="inputStream"><span data-ttu-id="cd872-126">輸入資料流，其包含 Web 服務描述語言 (WSDL) 格式的結構描述定義。</span><span class="sxs-lookup"><span data-stu-id="cd872-126">The input stream that contains the schema definition in Web Services Description Language (WSDL) format.</span></span></param>
        <param name="outCodeStreamList"><span data-ttu-id="cd872-127">所產生程式碼資料流的檔案名稱清單。</span><span class="sxs-lookup"><span data-stu-id="cd872-127">The list of file names for the code streams that are generated.</span></span> <span data-ttu-id="cd872-128">注意，<see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> 方法可以建立多個原始程式碼資料流。</span><span class="sxs-lookup"><span data-stu-id="cd872-128">Note that the <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> method can create multiple source code streams.</span></span></param>
        <summary><span data-ttu-id="cd872-129">將指定的結構描述定義編譯成 C# Proxy 原始程式碼。</span><span class="sxs-lookup"><span data-stu-id="cd872-129">Converts the specified schema definition into C# proxy source code.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cd872-130">如果已經存在具有指定名稱的檔案，才會被覆寫。</span><span class="sxs-lookup"><span data-stu-id="cd872-130">If files with the specified names already exist, they are overwritten.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertSchemaStreamToCodeSourceStream">
      <MemberSignature Language="C#" Value="public static void ConvertSchemaStreamToCodeSourceStream (bool clientProxy, string outputDirectory, System.IO.Stream inputStream, System.Collections.ArrayList outCodeStreamList, string proxyUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, string outputDirectory, class System.IO.Stream inputStream, class System.Collections.ArrayList outCodeStreamList, string proxyUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertSchemaStreamToCodeSourceStream (clientProxy As Boolean, outputDirectory As String, inputStream As Stream, outCodeStreamList As ArrayList, proxyUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, System::String ^ outputDirectory, System::IO::Stream ^ inputStream, System::Collections::ArrayList ^ outCodeStreamList, System::String ^ proxyUrl);" />
      <MemberSignature Language="F#" Value="static member ConvertSchemaStreamToCodeSourceStream : bool * string * System.IO.Stream * System.Collections.ArrayList * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream (clientProxy, outputDirectory, inputStream, outCodeStreamList, proxyUrl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientProxy" Type="System.Boolean" />
        <Parameter Name="outputDirectory" Type="System.String" />
        <Parameter Name="inputStream" Type="System.IO.Stream" />
        <Parameter Name="outCodeStreamList" Type="System.Collections.ArrayList" />
        <Parameter Name="proxyUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientProxy"><span data-ttu-id="cd872-131">指示要產生的 Proxy 的型別。</span><span class="sxs-lookup"><span data-stu-id="cd872-131">Indicates the type of proxy to generate.</span></span> <span data-ttu-id="cd872-132">如果為 <see langword="true" />，則產生會自動載入通道的簡單 Proxy (也稱為包裝的 Proxy)、公開遠端物件的所有方法，和提供對通道屬性的存取。</span><span class="sxs-lookup"><span data-stu-id="cd872-132">If <see langword="true" />, generates a simple proxy (also known as wrapped proxy) that automatically loads the channels, exposes all the methods of the remote object, and provides access to the channel properties.</span></span> <span data-ttu-id="cd872-133">如果為 <see langword="false" />，則產生會公開遠端物件所有方法的透明 Proxy。</span><span class="sxs-lookup"><span data-stu-id="cd872-133">If <see langword="false" />, generates a transparent proxy that exposes all the methods of the remote object.</span></span></param>
        <param name="outputDirectory"><span data-ttu-id="cd872-134">具有 Proxy 的新 C# 原始程式碼檔案被建立時所在的目錄。</span><span class="sxs-lookup"><span data-stu-id="cd872-134">The directory where the new C# source code files with the proxy are created.</span></span></param>
        <param name="inputStream"><span data-ttu-id="cd872-135">輸入資料流，其包含 Web 服務描述語言 (WSDL) 格式的結構描述定義。</span><span class="sxs-lookup"><span data-stu-id="cd872-135">The input stream that contains the schema definition in Web Services Description Language (WSDL) format.</span></span></param>
        <param name="outCodeStreamList"><span data-ttu-id="cd872-136">所產生程式碼資料流的檔案名稱清單。</span><span class="sxs-lookup"><span data-stu-id="cd872-136">The list of file names for the code streams that are generated.</span></span> <span data-ttu-id="cd872-137">注意，<see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> 方法可以建立多個原始程式碼資料流。</span><span class="sxs-lookup"><span data-stu-id="cd872-137">Note that the <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> method can create multiple source code streams.</span></span></param>
        <param name="proxyUrl"><span data-ttu-id="cd872-138">URL，新 Proxy 所表示的遠端目標物件將位於此處。</span><span class="sxs-lookup"><span data-stu-id="cd872-138">The URL where the target remote object that is represented by the new proxy will be located.</span></span></param>
        <summary><span data-ttu-id="cd872-139">將指定的結構描述定義轉換成位於指定 URL 上之遠端物件的 C# Proxy 原始程式碼。</span><span class="sxs-lookup"><span data-stu-id="cd872-139">Converts the specified schema definition into C# proxy source code for a remote object that is located at the specified URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cd872-140">如果已經存在具有指定名稱的檔案，才會被覆寫。</span><span class="sxs-lookup"><span data-stu-id="cd872-140">If files with the specified names already exist, they are overwritten.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertSchemaStreamToCodeSourceStream">
      <MemberSignature Language="C#" Value="public static void ConvertSchemaStreamToCodeSourceStream (bool clientProxy, string outputDirectory, System.IO.Stream inputStream, System.Collections.ArrayList outCodeStreamList, string proxyUrl, string proxyNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, string outputDirectory, class System.IO.Stream inputStream, class System.Collections.ArrayList outCodeStreamList, string proxyUrl, string proxyNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConvertSchemaStreamToCodeSourceStream (clientProxy As Boolean, outputDirectory As String, inputStream As Stream, outCodeStreamList As ArrayList, proxyUrl As String, proxyNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertSchemaStreamToCodeSourceStream(bool clientProxy, System::String ^ outputDirectory, System::IO::Stream ^ inputStream, System::Collections::ArrayList ^ outCodeStreamList, System::String ^ proxyUrl, System::String ^ proxyNamespace);" />
      <MemberSignature Language="F#" Value="static member ConvertSchemaStreamToCodeSourceStream : bool * string * System.IO.Stream * System.Collections.ArrayList * string * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream (clientProxy, outputDirectory, inputStream, outCodeStreamList, proxyUrl, proxyNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientProxy" Type="System.Boolean" />
        <Parameter Name="outputDirectory" Type="System.String" />
        <Parameter Name="inputStream" Type="System.IO.Stream" />
        <Parameter Name="outCodeStreamList" Type="System.Collections.ArrayList" />
        <Parameter Name="proxyUrl" Type="System.String" />
        <Parameter Name="proxyNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientProxy"><span data-ttu-id="cd872-141">指示要產生的 Proxy 的型別。</span><span class="sxs-lookup"><span data-stu-id="cd872-141">Indicates the type of proxy to generate.</span></span> <span data-ttu-id="cd872-142">如果為 <see langword="true" />，則產生會自動載入通道的簡單 Proxy (也稱為包裝的 Proxy)、公開遠端物件的所有方法，和提供對通道屬性的存取。</span><span class="sxs-lookup"><span data-stu-id="cd872-142">If <see langword="true" />, generates a simple proxy (also known as wrapped proxy) that automatically loads the channels, exposes all the methods of the remote object, and provides access to the channel properties.</span></span> <span data-ttu-id="cd872-143">如果為 <see langword="false" />，則產生會公開遠端物件所有方法的透明 Proxy。</span><span class="sxs-lookup"><span data-stu-id="cd872-143">If <see langword="false" />, generates a transparent proxy that exposes all the methods of the remote object.</span></span></param>
        <param name="outputDirectory"><span data-ttu-id="cd872-144">具有 Proxy 的新 C# 原始程式碼檔案被建立時所在的目錄。</span><span class="sxs-lookup"><span data-stu-id="cd872-144">The directory where the new C# source code files with the proxy are created.</span></span></param>
        <param name="inputStream"><span data-ttu-id="cd872-145">輸入資料流，含有 Web 服務描述語言 (WSDL) 格式的結構描述定義。</span><span class="sxs-lookup"><span data-stu-id="cd872-145">The input stream containing the schema definition in Web Services Description Language (WSDL) format.</span></span></param>
        <param name="outCodeStreamList"><span data-ttu-id="cd872-146">所產生程式碼資料流的檔案名稱清單。</span><span class="sxs-lookup"><span data-stu-id="cd872-146">The list of file names for the code streams that are generated.</span></span> <span data-ttu-id="cd872-147">注意，<see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> 方法可以建立多個原始程式碼資料流。</span><span class="sxs-lookup"><span data-stu-id="cd872-147">Note that the <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> method can create multiple source code streams.</span></span></param>
        <param name="proxyUrl"><span data-ttu-id="cd872-148">URL，新 Proxy 所表示的遠端目標物件將位於此處。</span><span class="sxs-lookup"><span data-stu-id="cd872-148">The URL where the target remote object that is represented by the new proxy will be located.</span></span></param>
        <param name="proxyNamespace"><span data-ttu-id="cd872-149">新建立的 Proxy 的命名空間。</span><span class="sxs-lookup"><span data-stu-id="cd872-149">The namespace of the newly created proxy.</span></span></param>
        <summary><span data-ttu-id="cd872-150">將指定的結構描述定義轉換成遠端物件 (位於指定 URL 和提供的類別命名空間) 的 C# Proxy 原始程式碼。</span><span class="sxs-lookup"><span data-stu-id="cd872-150">Converts the specified schema definition into C# proxy source code for a remote object that is located at the specified URL and in the provided class namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cd872-151">如果已經存在具有指定名稱的檔案，才會被覆寫。</span><span class="sxs-lookup"><span data-stu-id="cd872-151">If files with the specified names already exist, they are overwritten.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTypesToSchemaToFile">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cd872-152">將指定的型別轉換為 XML 結構描述，並將它寫入檔案。</span><span class="sxs-lookup"><span data-stu-id="cd872-152">Converts the specified types to XML schema, and writes it to a file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTypesToSchemaToFile">
      <MemberSignature Language="C#" Value="public static void ConvertTypesToSchemaToFile (System.Runtime.Remoting.MetadataServices.ServiceType[] types, System.Runtime.Remoting.MetadataServices.SdlType sdlType, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertTypesToSchemaToFile(class System.Runtime.Remoting.MetadataServices.ServiceType[] types, valuetype System.Runtime.Remoting.MetadataServices.SdlType sdlType, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile(System.Runtime.Remoting.MetadataServices.ServiceType[],System.Runtime.Remoting.MetadataServices.SdlType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertTypesToSchemaToFile(cli::array &lt;System::Runtime::Remoting::MetadataServices::ServiceType ^&gt; ^ types, System::Runtime::Remoting::MetadataServices::SdlType sdlType, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member ConvertTypesToSchemaToFile : System.Runtime.Remoting.MetadataServices.ServiceType[] * System.Runtime.Remoting.MetadataServices.SdlType * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile (types, sdlType, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Runtime.Remoting.MetadataServices.ServiceType[]" />
        <Parameter Name="sdlType" Type="System.Runtime.Remoting.MetadataServices.SdlType" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="cd872-153">要轉換成 XML 結構描述的 <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="cd872-153">The <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> instances to convert to XML schema.</span></span></param>
        <param name="sdlType"><span data-ttu-id="cd872-154">XML 結構描述所使用的服務描述語言的類型。</span><span class="sxs-lookup"><span data-stu-id="cd872-154">The type of service description language to use for the XML schema.</span></span></param>
        <param name="path"><span data-ttu-id="cd872-155">XML 檔的路徑。</span><span class="sxs-lookup"><span data-stu-id="cd872-155">The path of the XML file.</span></span></param>
        <summary><span data-ttu-id="cd872-156">將指定的服務型別轉換為 XML 結構描述，並將它寫入名稱所指定的檔案。</span><span class="sxs-lookup"><span data-stu-id="cd872-156">Converts the specified service types to XML schema, and writes it to a file that is specified by name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd872-157">A<xref:System.Runtime.Remoting.MetadataServices.ServiceType>執行個體可讓您將 URL 與物件相關聯<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="cd872-157">A <xref:System.Runtime.Remoting.MetadataServices.ServiceType> instance allows you to associate a URL with an object <xref:System.Type>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cd872-158">如果具有指定名稱的檔案已經存在，它會覆寫。</span><span class="sxs-lookup"><span data-stu-id="cd872-158">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTypesToSchemaToFile">
      <MemberSignature Language="C#" Value="public static void ConvertTypesToSchemaToFile (Type[] types, System.Runtime.Remoting.MetadataServices.SdlType sdlType, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertTypesToSchemaToFile(class System.Type[] types, valuetype System.Runtime.Remoting.MetadataServices.SdlType sdlType, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile(System.Type[],System.Runtime.Remoting.MetadataServices.SdlType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertTypesToSchemaToFile(cli::array &lt;Type ^&gt; ^ types, System::Runtime::Remoting::MetadataServices::SdlType sdlType, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member ConvertTypesToSchemaToFile : Type[] * System.Runtime.Remoting.MetadataServices.SdlType * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile (types, sdlType, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="sdlType" Type="System.Runtime.Remoting.MetadataServices.SdlType" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="cd872-159">要轉換成 XML 結構描述的物件型別。</span><span class="sxs-lookup"><span data-stu-id="cd872-159">The object types to convert to XML schema.</span></span></param>
        <param name="sdlType"><span data-ttu-id="cd872-160">XML 結構描述所使用的服務描述語言的類型。</span><span class="sxs-lookup"><span data-stu-id="cd872-160">The type of service description language to use for the XML schema.</span></span></param>
        <param name="path"><span data-ttu-id="cd872-161">XML 檔的路徑。</span><span class="sxs-lookup"><span data-stu-id="cd872-161">The path of the XML file.</span></span></param>
        <summary><span data-ttu-id="cd872-162">將指定的物件型別轉換為 XML 結構描述，並將它寫入名稱所指定的檔案。</span><span class="sxs-lookup"><span data-stu-id="cd872-162">Converts the specified object types to XML schema, and writes it to a file that is specified by name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cd872-163">如果具有指定名稱的檔案已經存在，它會覆寫。</span><span class="sxs-lookup"><span data-stu-id="cd872-163">If a file with the specified name already exists, it is overwritten.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd872-164">下列程式碼範例示範使用<xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile%2A>方法來寫入檔案中的指定類型的結構描述定義。</span><span class="sxs-lookup"><span data-stu-id="cd872-164">The following code example demonstrates the use of the <xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile%2A> method to write the schema definition of the specified types to a file.</span></span>  
  
 [!code-cpp[MetaData.ConvertTypesToSchemaToFile#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToFile/CPP/source.cpp#1)]
 [!code-csharp[MetaData.ConvertTypesToSchemaToFile#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToFile/CS/source.cs#1)]
 [!code-vb[MetaData.ConvertTypesToSchemaToFile#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToFile/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTypesToSchemaToStream">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cd872-165">將指定的型別轉換為 XML 結構描述，並將它寫入資料流。</span><span class="sxs-lookup"><span data-stu-id="cd872-165">Converts the specified types to XML schema, and writes it to a stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTypesToSchemaToStream">
      <MemberSignature Language="C#" Value="public static void ConvertTypesToSchemaToStream (System.Runtime.Remoting.MetadataServices.ServiceType[] serviceTypes, System.Runtime.Remoting.MetadataServices.SdlType sdlType, System.IO.Stream outputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertTypesToSchemaToStream(class System.Runtime.Remoting.MetadataServices.ServiceType[] serviceTypes, valuetype System.Runtime.Remoting.MetadataServices.SdlType sdlType, class System.IO.Stream outputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream(System.Runtime.Remoting.MetadataServices.ServiceType[],System.Runtime.Remoting.MetadataServices.SdlType,System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertTypesToSchemaToStream(cli::array &lt;System::Runtime::Remoting::MetadataServices::ServiceType ^&gt; ^ serviceTypes, System::Runtime::Remoting::MetadataServices::SdlType sdlType, System::IO::Stream ^ outputStream);" />
      <MemberSignature Language="F#" Value="static member ConvertTypesToSchemaToStream : System.Runtime.Remoting.MetadataServices.ServiceType[] * System.Runtime.Remoting.MetadataServices.SdlType * System.IO.Stream -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream (serviceTypes, sdlType, outputStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceTypes" Type="System.Runtime.Remoting.MetadataServices.ServiceType[]" />
        <Parameter Name="sdlType" Type="System.Runtime.Remoting.MetadataServices.SdlType" />
        <Parameter Name="outputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="serviceTypes"><span data-ttu-id="cd872-166">要轉換成 XML 結構描述的 <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="cd872-166">The <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> instances to convert to XML schema.</span></span></param>
        <param name="sdlType"><span data-ttu-id="cd872-167">XML 結構描述所使用的服務描述語言的類型。</span><span class="sxs-lookup"><span data-stu-id="cd872-167">The type of service description language to use for the XML schema.</span></span></param>
        <param name="outputStream"><span data-ttu-id="cd872-168"><see cref="T:System.IO.Stream" />，將結構描述寫入其中。</span><span class="sxs-lookup"><span data-stu-id="cd872-168">The <see cref="T:System.IO.Stream" /> that the schema is written to.</span></span></param>
        <summary><span data-ttu-id="cd872-169">將指定的服務型別轉換為 XML 結構描述，並將它寫入指定的資料流。</span><span class="sxs-lookup"><span data-stu-id="cd872-169">Converts the specified service types to XML schema, and writes it to a specified stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd872-170">A<xref:System.Runtime.Remoting.MetadataServices.ServiceType>執行個體可讓您將 URL 與物件相關聯<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="cd872-170">A <xref:System.Runtime.Remoting.MetadataServices.ServiceType> instance allows you to associate a URL with an object <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTypesToSchemaToStream">
      <MemberSignature Language="C#" Value="public static void ConvertTypesToSchemaToStream (Type[] types, System.Runtime.Remoting.MetadataServices.SdlType sdlType, System.IO.Stream outputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConvertTypesToSchemaToStream(class System.Type[] types, valuetype System.Runtime.Remoting.MetadataServices.SdlType sdlType, class System.IO.Stream outputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream(System.Type[],System.Runtime.Remoting.MetadataServices.SdlType,System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConvertTypesToSchemaToStream(cli::array &lt;Type ^&gt; ^ types, System::Runtime::Remoting::MetadataServices::SdlType sdlType, System::IO::Stream ^ outputStream);" />
      <MemberSignature Language="F#" Value="static member ConvertTypesToSchemaToStream : Type[] * System.Runtime.Remoting.MetadataServices.SdlType * System.IO.Stream -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream (types, sdlType, outputStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="sdlType" Type="System.Runtime.Remoting.MetadataServices.SdlType" />
        <Parameter Name="outputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="cd872-171">要轉換成 XML 結構描述的物件型別。</span><span class="sxs-lookup"><span data-stu-id="cd872-171">The object types to convert to XML schema.</span></span></param>
        <param name="sdlType"><span data-ttu-id="cd872-172">XML 結構描述所使用的服務描述語言的類型。</span><span class="sxs-lookup"><span data-stu-id="cd872-172">The type of service description language to use for the XML schema.</span></span></param>
        <param name="outputStream"><span data-ttu-id="cd872-173"><see cref="T:System.IO.Stream" />，將結構描述寫入其中。</span><span class="sxs-lookup"><span data-stu-id="cd872-173">The <see cref="T:System.IO.Stream" /> that the schema is written to.</span></span></param>
        <summary><span data-ttu-id="cd872-174">將指定的物件型別轉換為 XML 結構描述，並將它寫入指定資料流。</span><span class="sxs-lookup"><span data-stu-id="cd872-174">Converts the specified object types to XML schema, and writes it to a specified stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cd872-175">下列程式碼範例示範使用<xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream%2A>方法來寫入資料流中的指定類型的結構描述定義。</span><span class="sxs-lookup"><span data-stu-id="cd872-175">The following code example demonstrates the use of the <xref:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream%2A> method to write the schema definition of the specified types to a stream.</span></span>  
  
 [!code-cpp[MetaData.ConvertTypesToSchemaToStream#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToStream/CPP/source.cpp#1)]
 [!code-csharp[MetaData.ConvertTypesToSchemaToStream#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToStream/CS/source.cs#1)]
 [!code-vb[MetaData.ConvertTypesToSchemaToStream#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MetaData.ConvertTypesToSchemaToStream/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveSchemaFromUrlToFile">
      <MemberSignature Language="C#" Value="public static void RetrieveSchemaFromUrlToFile (string url, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RetrieveSchemaFromUrlToFile(string url, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RetrieveSchemaFromUrlToFile (url As String, path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RetrieveSchemaFromUrlToFile(System::String ^ url, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member RetrieveSchemaFromUrlToFile : string * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToFile (url, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="cd872-176">XML 結構描述所位在的 URL。</span><span class="sxs-lookup"><span data-stu-id="cd872-176">The URL where the XML schema is located.</span></span></param>
        <param name="path"><span data-ttu-id="cd872-177">將結構描述寫入其中之檔案的路徑。</span><span class="sxs-lookup"><span data-stu-id="cd872-177">The path of the file that the schema is written to.</span></span></param>
        <summary><span data-ttu-id="cd872-178">從 URL 下載 XML 結構描述，並將它寫入指定檔案。</span><span class="sxs-lookup"><span data-stu-id="cd872-178">Downloads the XML schema from a URL, and writes it to the specified file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cd872-179">如果具有指定名稱的檔案已經存在，它會覆寫。</span><span class="sxs-lookup"><span data-stu-id="cd872-179">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveSchemaFromUrlToStream">
      <MemberSignature Language="C#" Value="public static void RetrieveSchemaFromUrlToStream (string url, System.IO.Stream outputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RetrieveSchemaFromUrlToStream(string url, class System.IO.Stream outputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToStream(System.String,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RetrieveSchemaFromUrlToStream (url As String, outputStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RetrieveSchemaFromUrlToStream(System::String ^ url, System::IO::Stream ^ outputStream);" />
      <MemberSignature Language="F#" Value="static member RetrieveSchemaFromUrlToStream : string * System.IO.Stream -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToStream (url, outputStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="outputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="cd872-180">XML 結構描述所位在的 URL。</span><span class="sxs-lookup"><span data-stu-id="cd872-180">The URL where the XML schema is located.</span></span></param>
        <param name="outputStream"><span data-ttu-id="cd872-181"><see cref="T:System.IO.Stream" />，將結構描述寫入其中。</span><span class="sxs-lookup"><span data-stu-id="cd872-181">The <see cref="T:System.IO.Stream" /> that the schema is written to.</span></span></param>
        <summary><span data-ttu-id="cd872-182">從 URL 下載 XML 結構描述，並將它寫入指定資料流。</span><span class="sxs-lookup"><span data-stu-id="cd872-182">Downloads the XML schema from a URL, and writes it to the specified stream.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveStreamToFile">
      <MemberSignature Language="C#" Value="public static void SaveStreamToFile (System.IO.Stream inputStream, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SaveStreamToFile(class System.IO.Stream inputStream, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.MetaData.SaveStreamToFile(System.IO.Stream,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SaveStreamToFile (inputStream As Stream, path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SaveStreamToFile(System::IO::Stream ^ inputStream, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member SaveStreamToFile : System.IO.Stream * string -&gt; unit" Usage="System.Runtime.Remoting.MetadataServices.MetaData.SaveStreamToFile (inputStream, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputStream" Type="System.IO.Stream" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputStream"><span data-ttu-id="cd872-183">要寫入指定檔案的資料流。</span><span class="sxs-lookup"><span data-stu-id="cd872-183">The stream to write to the specified file.</span></span></param>
        <param name="path"><span data-ttu-id="cd872-184">檔案，將輸入資料流寫入其中。</span><span class="sxs-lookup"><span data-stu-id="cd872-184">The file that the input stream is written to.</span></span></param>
        <summary><span data-ttu-id="cd872-185">將輸入資料流儲存到指定名稱的檔案。</span><span class="sxs-lookup"><span data-stu-id="cd872-185">Saves the input stream to a file with the specified name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cd872-186">如果具有指定名稱的檔案已經存在，它會覆寫。</span><span class="sxs-lookup"><span data-stu-id="cd872-186">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>