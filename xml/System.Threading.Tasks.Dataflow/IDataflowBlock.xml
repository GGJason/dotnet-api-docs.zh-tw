<Type Name="IDataflowBlock" FullName="System.Threading.Tasks.Dataflow.IDataflowBlock">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="10139b3856666a43a80d7875494bb6c3884f741e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30527402" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDataflowBlock" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataflowBlock" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataflowBlock" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataflowBlock" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.2.0</AssemblyVersion>
    <AssemblyVersion>4.6.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>表示資料流程區塊。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [tpl-install-instructions](~/includes/tpl-install-instructions.md)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>向 <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> 發出訊號，表示不應接受也不應產生任何其他訊息，也不應使用任何其他延後的訊息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 之後<xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete%2A>已經在資料流程區塊上呼叫，該區塊將會完成，且其<xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A>工作會進入最終狀態它已經處理所有先前可用的資料。 <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete%2A> 將區塊等待完成發生，而是會起始要求但要等待完成發生，<xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A>可能使用的工作。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completion">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Completion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task Completion" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Completion As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task ^ Completion { System::Threading::Tasks::Task ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Threading.Tasks.Task" />，其表示非同步作業和資料流程區塊的完成。</summary>
        <value>工作。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 資料流程區塊會時視為完成它目前未處理的訊息，以及當它有保證，不會處理任何其他訊息。 傳回<xref:System.Threading.Tasks.Task>完成相關聯的區塊時，會轉換為已完成狀態。 會轉換到<xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.RanToCompletion>區塊完成其處理成功根據資料流程區塊時的狀態定義語意。 會轉換到<xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.Faulted>狀態時即為資料流程區塊已完成處理提前因未處理的例外狀況，且會轉換到<xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.Canceled>資料流程區塊完成狀態過早處理，因為收到取消要求。 當工作在<xref:System.Threading.Tasks.TaskStatus.Faulted>狀態，其`Exception`屬性會傳回<xref:System.AggregateException>包含造成失敗之區塊的一或多個例外狀況。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fault">
      <MemberSignature Language="C#" Value="public void Fault (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Fault(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Fault(Exception ^ exception);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">導致錯誤的 <see cref="T:System.Exception" />。</param>
        <summary>造成 <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> 在 <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> 的狀態中完成。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 之後<xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A>已經在資料流程區塊上呼叫，該區塊將會完成，且其<xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion%2A>工作將會進入最終狀態。 判定為失敗的區塊，做為與取消區塊，會造成遺失緩衝的訊息 （未處理的輸入的訊息，以及 unoffered 的輸出訊息）。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="exception" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>