<Type Name="TransformBlock&lt;TInput,TOutput&gt;" FullName="System.Threading.Tasks.Dataflow.TransformBlock&lt;TInput,TOutput&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f0edc26b6fa215e839ec0f6b582cb3d9ee2caf27" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30530242" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TransformBlock&lt;TInput,TOutput&gt; : System.Threading.Tasks.Dataflow.IPropagatorBlock&lt;TInput,TOutput&gt;, System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;TOutput&gt;, System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;, System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TransformBlock`2&lt;TInput, TOutput&gt; extends System.Object implements class System.Threading.Tasks.Dataflow.IDataflowBlock, class System.Threading.Tasks.Dataflow.IPropagatorBlock`2&lt;!TInput, !TOutput&gt;, class System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&lt;!TOutput&gt;, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!TOutput&gt;, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TInput&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Dataflow.TransformBlock`2" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TransformBlock(Of TInput, TOutput)&#xA;Implements IPropagatorBlock(Of TInput, TOutput), IReceivableSourceBlock(Of TOutput), ISourceBlock(Of TOutput), ITargetBlock(Of TInput)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TInput, typename TOutput&gt;&#xA;public ref class TransformBlock sealed : System::Threading::Tasks::Dataflow::IPropagatorBlock&lt;TInput, TOutput&gt;, System::Threading::Tasks::Dataflow::IReceivableSourceBlock&lt;TOutput&gt;, System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt;, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.2.0</AssemblyVersion>
    <AssemblyVersion>4.6.3.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TInput" />
    <TypeParameter Name="TOutput" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.IPropagatorBlock&lt;TInput,TOutput&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;TOutput&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TInput">
      <span data-ttu-id="544be-101">指定由這個 <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> 接收和作業的資料型別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="544be-101">Specifies the type of data received and operated on by this <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" />.</span>
      </span>
    </typeparam>
    <typeparam name="TOutput">
      <span data-ttu-id="544be-102">指定的資料輸出類型由此<see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="544be-102">Specifies the type of data output by this  <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" />.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="544be-103">提供資料流程區塊，為每個收到的資料項目叫用提供的 <see cref="T:System.Func`2" /> 委派。</span>
      <span class="sxs-lookup">
        <span data-stu-id="544be-103">Provides a dataflow block that invokes a provided <see cref="T:System.Func`2" /> delegate for every data element received.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [tpl-install-instructions](~/includes/tpl-install-instructions.md)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransformBlock (Func&lt;TInput,System.Threading.Tasks.Task&lt;TOutput&gt;&gt; transform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!TInput, class System.Threading.Tasks.Task`1&lt;!TOutput&gt;&gt; transform) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{`1}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transform As Func(Of TInput, Task(Of TOutput)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransformBlock(Func&lt;TInput, System::Threading::Tasks::Task&lt;TOutput&gt; ^&gt; ^ transform);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transform" Type="System.Func&lt;TInput,System.Threading.Tasks.Task&lt;TOutput&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="transform">
          <span data-ttu-id="544be-104">要以各個接收的資料項目叫用的函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-104">The function to invoke with each data element received.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="544be-105">使用指定的 <see cref="T:System.Func`2" />，將新的 <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> 初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-105">Initializes a new <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> with the specified <see cref="T:System.Func`2" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="544be-106">
            <paramref name="transform" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-106">The <paramref name="transform" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransformBlock (Func&lt;TInput,TOutput&gt; transform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!TInput, !TOutput&gt; transform) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformBlock`2.#ctor(System.Func{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transform As Func(Of TInput, TOutput))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransformBlock(Func&lt;TInput, TOutput&gt; ^ transform);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transform" Type="System.Func&lt;TInput,TOutput&gt;" />
      </Parameters>
      <Docs>
        <param name="transform">
          <span data-ttu-id="544be-107">要以各個接收的資料項目叫用的函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-107">The function to invoke with each data element received.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="544be-108">使用指定的 <see cref="T:System.Func`2" />，將新的 <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> 初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-108">Initializes a new <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> with the specified  <see cref="T:System.Func`2" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="544be-109">
            <paramref name="transform" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-109">The <paramref name="transform" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransformBlock (Func&lt;TInput,System.Threading.Tasks.Task&lt;TOutput&gt;&gt; transform, System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!TInput, class System.Threading.Tasks.Task`1&lt;!TOutput&gt;&gt; transform, class System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{`1}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transform As Func(Of TInput, Task(Of TOutput)), dataflowBlockOptions As ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransformBlock(Func&lt;TInput, System::Threading::Tasks::Task&lt;TOutput&gt; ^&gt; ^ transform, System::Threading::Tasks::Dataflow::ExecutionDataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transform" Type="System.Func&lt;TInput,System.Threading.Tasks.Task&lt;TOutput&gt;&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />
      </Parameters>
      <Docs>
        <param name="transform">
          <span data-ttu-id="544be-110">要以各個接收的資料項目叫用的函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-110">The function to invoke with each data element received.</span>
          </span>
        </param>
        <param name="dataflowBlockOptions">
          <span data-ttu-id="544be-111">用來設定這個 <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> 的選項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-111">The options with which to configure this  <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="544be-112">使用指定的 <see cref="T:System.Func`2" /> 與 <see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />，將新的 <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> 初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-112">Initializes a new <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> with the specified  <see cref="T:System.Func`2" /> and <see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="544be-113">
            <paramref name="transform" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-113">The <paramref name="transform" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="544be-114">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-114">-or-</span>
          </span>
          <span data-ttu-id="544be-115">
            <paramref name="dataflowBlockOptions" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-115">The <paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransformBlock (Func&lt;TInput,TOutput&gt; transform, System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!TInput, !TOutput&gt; transform, class System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformBlock`2.#ctor(System.Func{`0,`1},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transform As Func(Of TInput, TOutput), dataflowBlockOptions As ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransformBlock(Func&lt;TInput, TOutput&gt; ^ transform, System::Threading::Tasks::Dataflow::ExecutionDataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transform" Type="System.Func&lt;TInput,TOutput&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />
      </Parameters>
      <Docs>
        <param name="transform">
          <span data-ttu-id="544be-116">要以各個接收的資料項目叫用的函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-116">The function to invoke with each data element received.</span>
          </span>
        </param>
        <param name="dataflowBlockOptions">
          <span data-ttu-id="544be-117">用來設定這個 <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> 的選項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-117">The options with which to configure this  <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="544be-118">使用指定的 <see cref="T:System.Func`2" /> 與 <see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />，將新的 <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> 初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-118">Initializes a new <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> with the specified  <see cref="T:System.Func`2" /> and <see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="544be-119">
            <paramref name="transform" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-119">The <paramref name="transform" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="544be-120">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-120">-or-</span>
          </span>
          <span data-ttu-id="544be-121">
            <paramref name="dataflowBlockOptions" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-121">The <paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformBlock`2.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Complete();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="544be-122">向 <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> 發出訊號，表示不應接受也不應產生任何其他訊息，也不應使用任何其他延後的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-122">Signals to the <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> that it should not accept nor produce any more messages nor consume any more postponed messages.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="544be-123">之後<xref:System.Threading.Tasks.Dataflow.TransformBlock%602.Complete%2A>已經在資料流程區塊上呼叫，該區塊將會完成，且其<xref:System.Threading.Tasks.Dataflow.TransformBlock%602.Completion%2A>工作會進入最終狀態它已經處理所有先前可用的資料。</span><span class="sxs-lookup"><span data-stu-id="544be-123">After <xref:System.Threading.Tasks.Dataflow.TransformBlock%602.Complete%2A> has been called on a dataflow block, that block will complete, and its <xref:System.Threading.Tasks.Dataflow.TransformBlock%602.Completion%2A> task will enter a final state after it has processed all previously available data.</span></span> <span data-ttu-id="544be-124"><xref:System.Threading.Tasks.Dataflow.TransformBlock%602.Complete%2A> 將區塊等待完成發生，而是會起始要求但要等待完成發生，<xref:System.Threading.Tasks.Dataflow.TransformBlock%602.Completion%2A>可能使用的工作。</span><span class="sxs-lookup"><span data-stu-id="544be-124"><xref:System.Threading.Tasks.Dataflow.TransformBlock%602.Complete%2A> will not block waiting for completion to occur, but rather will initiate the request; to wait for completion to occur, the <xref:System.Threading.Tasks.Dataflow.TransformBlock%602.Completion%2A> task may be used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completion">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Completion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task Completion" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.TransformBlock`2.Completion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Completion As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task ^ Completion { System::Threading::Tasks::Task ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="544be-125">取得 <see cref="T:System.Threading.Tasks.Task" />，其表示非同步作業和資料流程區塊的完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-125">Gets a <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation and completion of the dataflow block.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="544be-126">工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-126">The task.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="544be-127">資料流程區塊會時視為完成它目前未處理的訊息，以及當它有保證，不會處理任何其他訊息。</span><span class="sxs-lookup"><span data-stu-id="544be-127">A dataflow block is considered completed when it is not currently processing a message and when it has guaranteed that it will not process any more messages.</span></span> <span data-ttu-id="544be-128">傳回<xref:System.Threading.Tasks.Task>完成相關聯的區塊時，會轉換為已完成狀態。</span><span class="sxs-lookup"><span data-stu-id="544be-128">The returned <xref:System.Threading.Tasks.Task> will transition to a completed state when the associated block has completed.</span></span> <span data-ttu-id="544be-129">會轉換到<xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.RanToCompletion>區塊完成其處理成功根據資料流程區塊時的狀態定義語意。</span><span class="sxs-lookup"><span data-stu-id="544be-129">It will transition to the <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.RanToCompletion> state when the block completes its processing successfully according to the dataflow block’s defined semantics.</span></span> <span data-ttu-id="544be-130">會轉換到<xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.Faulted>狀態時即為資料流程區塊已完成處理提前因未處理的例外狀況，且會轉換到<xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.Canceled>資料流程區塊完成狀態過早處理，因為收到取消要求。</span><span class="sxs-lookup"><span data-stu-id="544be-130">It will transition to the <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.Faulted> state when the dataflow block has completed processing prematurely due to an unhandled exception, and it will transition to the <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.Canceled> state when the dataflow block has completed processing prematurely due to receiving a cancellation request.</span></span> <span data-ttu-id="544be-131">當工作在<xref:System.Threading.Tasks.TaskStatus.Faulted>狀態，其`Exception`屬性會傳回<xref:System.AggregateException>包含造成失敗之區塊的一或多個例外狀況。</span><span class="sxs-lookup"><span data-stu-id="544be-131">If the task completes in the <xref:System.Threading.Tasks.TaskStatus.Faulted> state, its `Exception` property will return an <xref:System.AggregateException> containing the one or more exceptions that caused the block to fail.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputCount">
      <MemberSignature Language="C#" Value="public int InputCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.TransformBlock`2.InputCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InputCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="544be-132">取得等候由這個區塊處理的輸入項目的數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-132">Gets the number of input items waiting to be processed by this block.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="544be-133">輸入項目的數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-133">The number of input items.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="544be-134"><xref:System.Threading.Tasks.Dataflow.TransformBlock%602.InputCount%2A>不包含任何項目目前正在處理的區塊或區塊已處理的任何項目。</span><span class="sxs-lookup"><span data-stu-id="544be-134">The <xref:System.Threading.Tasks.Dataflow.TransformBlock%602.InputCount%2A> does not include any items currently being processed by the block or any items that have already been processed by the block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkTo">
      <MemberSignature Language="C#" Value="public IDisposable LinkTo (System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt; target, System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable LinkTo(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TOutput&gt; target, class System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Threading.Tasks.Dataflow.DataflowLinkOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function LinkTo (target As ITargetBlock(Of TOutput), linkOptions As DataflowLinkOptions) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IDisposable ^ LinkTo(System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target, System::Threading::Tasks::Dataflow::DataflowLinkOptions ^ linkOptions);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ISourceBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
        <Parameter Name="linkOptions" Type="System.Threading.Tasks.Dataflow.DataflowLinkOptions" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="544be-135">要連線到此資源的 <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-135">The  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to which to connect this source.</span>
          </span>
        </param>
        <param name="linkOptions">
          <span data-ttu-id="544be-136">設定連結的 <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-136">A <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" /> instance that configures the link.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="544be-137">將 <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> 連結至指定的 <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-137">Links the  <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> to the specified  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> .</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="544be-138">IDisposable，在呼叫 Dispose 時，將會取消來源和目標間的連結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-138">An IDisposable that, upon calling Dispose, will unlink the source from the target.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="544be-139">
            <paramref name="target" /> 為 null (在 Visual Basic 中為 Nothing) 或 <paramref name="linkOptions" /> 為 null (在 Visual Basic 中為 Nothing)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-139">
              <paramref name="target" /> is null (Nothing in Visual Basic) or  <paramref name="linkOptions" /> is null (Nothing in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OutputCount">
      <MemberSignature Language="C#" Value="public int OutputCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutputCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.TransformBlock`2.OutputCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OutputCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="544be-140">取得可從此區塊接收的輸出項目數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-140">Gets the number of output items available to be received from this block.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="544be-141">輸出項目的數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-141">The number of output items.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.IDataflowBlock.Fault">
      <MemberSignature Language="C#" Value="void IDataflowBlock.Fault (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(Exception ^ exception) = System::Threading::Tasks::Dataflow::IDataflowBlock::Fault;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(System.Exception)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="544be-142">導致錯誤的 <see cref="T:System.Exception" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-142">The <see cref="T:System.Exception" /> that caused the faulting.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="544be-143">造成 <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> 在 <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> 的狀態中完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-143">Causes the <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> to complete in a  <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="544be-144">之後<xref:System.Threading.Tasks.Dataflow.TransformBlock%602.System%23Threading%23Tasks%23Dataflow%23IDataflowBlock%23Fault%2A>已經在資料流程區塊上呼叫，該區塊將會完成，且其<xref:System.Threading.Tasks.Dataflow.TransformBlock%602.Completion%2A>工作將會進入最終狀態。</span><span class="sxs-lookup"><span data-stu-id="544be-144">After <xref:System.Threading.Tasks.Dataflow.TransformBlock%602.System%23Threading%23Tasks%23Dataflow%23IDataflowBlock%23Fault%2A> has been called on a dataflow block, that block will complete, and its <xref:System.Threading.Tasks.Dataflow.TransformBlock%602.Completion%2A> task will enter a final state.</span></span> <span data-ttu-id="544be-145">判定為失敗的區塊，做為與取消區塊，會造成遺失緩衝的訊息 （未處理的輸入的訊息，以及 unoffered 的輸出訊息）。</span><span class="sxs-lookup"><span data-stu-id="544be-145">Faulting a block, as with canceling a block, causes buffered messages (unprocessed input messages as well as unoffered output messages) to be lost.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="544be-146">
            <paramref name="exception" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-146">The <paramref name="exception" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;.ConsumeMessage">
      <MemberSignature Language="C#" Value="TOutput ISourceBlock&lt;TOutput&gt;.ConsumeMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt; target, out bool messageConsumed);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance !TOutput System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;.ConsumeMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TOutput&gt; target, [out] bool&amp; messageConsumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&lt;TOutput&gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Function ConsumeMessage (messageHeader As DataflowMessageHeader, target As ITargetBlock(Of TOutput), ByRef messageConsumed As Boolean) As TOutput Implements ISourceBlock(Of TOutput).ConsumeMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual TOutput System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;.ConsumeMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target, [Runtime::InteropServices::Out] bool % messageConsumed) = System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt;::ConsumeMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
        <Parameter Name="messageConsumed" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="messageHeader">
          <span data-ttu-id="544be-147">使用的訊息的 <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-147">The <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> of the message being consumed.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="544be-148">使用訊息的 <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-148">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> consuming the message.</span>
          </span>
        </param>
        <param name="messageConsumed">
          <span data-ttu-id="544be-149">如果成功使用訊息，則為 <see langword="true" />，否則為<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-149">
              <see langword="true" /> if the message was successfully consumed; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="544be-150">由連結的<see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />呼叫以接受及使用先前由此 <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> 提供的 <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-150">Called by a linked <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to accept and consume a <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> previously offered by this <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="544be-151">使用的訊息的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-151">The value of the consumed message.</span>
          </span>
          <span data-ttu-id="544be-152">這可能會對應到不同的 <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> 執行個體，這個執行個體先前已保留並做為 <paramref name="messageHeader" /> 傳遞到<see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-152">This may correspond to a different <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> instance than was previously reserved and passed as the <paramref name="messageHeader" /> to <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />.</span>
          </span>
          <span data-ttu-id="544be-153">使用的 <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />必須使用傳回的值，而不是使用做為 <paramref name="messageValue" /> 經 <see cref="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /> 傳送的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-153">The consuming <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> must use the returned value instead of the value passed as <paramref name="messageValue" /> through <see cref="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />.</span>
          </span>
          <span data-ttu-id="544be-154">如果無法使用要求的訊息，則傳回的值就是<see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-154">If the message requested is not available, the return value will be <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="544be-155">只有<xref:System.Threading.Tasks.Dataflow.ITargetBlock%601>執行個體連結到這<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601>執行個體使用<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A>，並且它必須只能取用<xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader>先前提供此來源到目標執行個體。</span><span class="sxs-lookup"><span data-stu-id="544be-155">Only <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances linked to this <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance may use <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A>, and it must only be used to consume <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances previously offered by this source to the target.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="544be-156">
            <paramref name="messageHeader" /> 無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-156">The <paramref name="messageHeader" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="544be-157">
            <paramref name="target" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-157">The <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;.ReleaseReservation">
      <MemberSignature Language="C#" Value="void ISourceBlock&lt;TOutput&gt;.ReleaseReservation (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;.ReleaseReservation(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TOutput&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&lt;TOutput&gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})" />
      <MemberSignature Language="VB.NET" Value="Sub ReleaseReservation (messageHeader As DataflowMessageHeader, target As ITargetBlock(Of TOutput)) Implements ISourceBlock(Of TOutput).ReleaseReservation" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;.ReleaseReservation(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target) = System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt;::ReleaseReservation;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <param name="messageHeader">
          <span data-ttu-id="544be-158">釋放的保留訊息的 <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-158">The <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> of the reserved message being released.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="544be-159">
            <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />，會釋放它先前保留的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-159">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> releasing the message it previously reserved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="544be-160">由連結的 <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> 呼叫以釋出先前由此 <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> 保留的 <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-160">Called by a linked <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to release a previously reserved <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> by this  <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="544be-161">只<xref:System.Threading.Tasks.Dataflow.ITargetBlock%601>執行個體連結到這<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601>執行個體使用<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A>，並且它必須只能釋放<xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader>目標所保留的先前且已順利執行個體。</span><span class="sxs-lookup"><span data-stu-id="544be-161">Only <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances linked to this <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance may use <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A>, and it must only be used to release <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances previously and successfully reserved by the target.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="544be-162">
            <paramref name="messageHeader" /> 無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-162">The <paramref name="messageHeader" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="544be-163">
            <paramref name="target" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-163">The <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="544be-164">
            <paramref name="target" /> 沒有保留訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-164">The <paramref name="target" /> did not have the message reserved.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;.ReserveMessage">
      <MemberSignature Language="C#" Value="bool ISourceBlock&lt;TOutput&gt;.ReserveMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;.ReserveMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TOutput&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock&lt;TOutput&gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})" />
      <MemberSignature Language="VB.NET" Value="Function ReserveMessage (messageHeader As DataflowMessageHeader, target As ITargetBlock(Of TOutput)) As Boolean Implements ISourceBlock(Of TOutput).ReserveMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Threading.Tasks.Dataflow.ISourceBlock&lt;TOutput&gt;.ReserveMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, System::Threading::Tasks::Dataflow::ITargetBlock&lt;TOutput&gt; ^ target) = System::Threading::Tasks::Dataflow::ISourceBlock&lt;TOutput&gt;::ReserveMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TOutput&gt;" />
      </Parameters>
      <Docs>
        <param name="messageHeader">
          <span data-ttu-id="544be-165">保留的訊息的 <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-165">The <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> of the message being reserved.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="544be-166">保留訊息的 <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-166">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> reserving the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="544be-167">由連結的 <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> 呼叫以保留先前由此 <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> 提供的 <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-167">Called by a linked <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to reserve a previously offered <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> by this  <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="544be-168">如果成功保留訊息，則為 <see langword="true" />，否則為<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-168">
              <see langword="true" /> if the message was successfully reserved; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="544be-169">只有<xref:System.Threading.Tasks.Dataflow.ITargetBlock%601>執行個體連結到這<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601>執行個體使用<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A>，並且它必須只能保留<xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader>先前提供此來源到目標執行個體。</span><span class="sxs-lookup"><span data-stu-id="544be-169">Only <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances linked to this <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance may use <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A>, and it must only be used to reserve <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances previously offered by this source to the target.</span></span>  
  
 <span data-ttu-id="544be-170">如果`true`傳回，則<xref:System.Threading.Tasks.Dataflow.ITargetBlock%601>必須接著呼叫<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A>或<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A>這個訊息。</span><span class="sxs-lookup"><span data-stu-id="544be-170">If `true` is returned, the <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> must subsequently call either <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A> or <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A> for this message.</span></span> <span data-ttu-id="544be-171">若要這樣做可能會導致無法傳播到這個或其他目標的任何其他訊息的來源。</span><span class="sxs-lookup"><span data-stu-id="544be-171">Failure to do so may result in the source being unable to propagate any further messages to this or other targets.</span></span>  
  
 <span data-ttu-id="544be-172"><xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A> 必須不會呼叫目標所保留的任何內部鎖定時。</span><span class="sxs-lookup"><span data-stu-id="544be-172"><xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A> must not be called while the target is holding any internal locks.</span></span> <span data-ttu-id="544be-173">這樣會違反鎖定階層以避免資料流程網路中的死結。</span><span class="sxs-lookup"><span data-stu-id="544be-173">Doing so will violate the lock hierarchy necessary to avoid deadlocks in a dataflow network.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="544be-174">
            <paramref name="messageHeader" /> 無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-174">The <paramref name="messageHeader" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="544be-175">
            <paramref name="target" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-175">The <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Dataflow.DataflowMessageStatus ITargetBlock&lt;TInput&gt;.OfferMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, TInput messageValue, System.Threading.Tasks.Dataflow.ISourceBlock&lt;TInput&gt; source, bool consumeToAccept);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Threading.Tasks.Dataflow.DataflowMessageStatus System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, !TInput messageValue, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!TInput&gt; source, bool consumeToAccept) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock&lt;TInput&gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function OfferMessage (messageHeader As DataflowMessageHeader, messageValue As TInput, source As ISourceBlock(Of TInput), consumeToAccept As Boolean) As DataflowMessageStatus Implements ITargetBlock(Of TInput).OfferMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Threading::Tasks::Dataflow::DataflowMessageStatus System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, TInput messageValue, System::Threading::Tasks::Dataflow::ISourceBlock&lt;TInput&gt; ^ source, bool consumeToAccept) = System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt;::OfferMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Dataflow.DataflowMessageStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="messageValue" Type="TInput" />
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TInput&gt;" />
        <Parameter Name="consumeToAccept" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="messageHeader">
          <span data-ttu-id="544be-176">
            <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />執行個體，表示所提供的訊息的標頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-176">A <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> instance that represents the header of the message being offered.</span>
          </span>
        </param>
        <param name="messageValue">
          <span data-ttu-id="544be-177">正在提供的訊息的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-177">The value of the message being offered.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="544be-178">提供訊息的 <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-178">The <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> offering the message.</span>
          </span>
          <span data-ttu-id="544be-179">這可能是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-179">This may be <see langword="null" />.</span>
          </span>
        </param>
        <param name="consumeToAccept">
          <span data-ttu-id="544be-180">如果目標必須在傳回 <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> 之前，在呼叫 <see cref="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /> 期間，以同步方式呼叫 <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> 以使用訊息，則為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-180">
              <see langword="true" /> if the target must call <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> synchronously during the call to <see cref="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />, prior to returning <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, in order to consume the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="544be-181">提供了訊息給<see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />，讓目標有機會使用或延後訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-181">Offers a message to the <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, giving the target the opportunity to consume or postpone the message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="544be-182">提供之訊息的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-182">The status of the offered message.</span>
          </span>
          <span data-ttu-id="544be-183">如果目標已接受訊息，則會傳回 <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />，而且來源不應該再使用所提供的訊息，因為現在它是由目標擁有。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-183">If the message was accepted by the target, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> is returned, and the source should no longer use the offered message, because it is now owned by the target.</span>
          </span>
          <span data-ttu-id="544be-184">如果訊息已由目標延後，會以通知形式傳回 <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" />，目標稍後可能會嘗試使用或保留訊息，同時來源仍擁有訊息，而且可能會將訊息提供給其他區塊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-184">If the message was postponed by the target, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> is returned as a notification that the target may later attempt to consume or reserve the message; in the meantime, the source still owns the message and may offer it to other blocks.</span>
          </span>
          <span data-ttu-id="544be-185">如果目標會延後，但來源是 <see langword="null" />，則改為傳回 <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-185">If the target would have otherwise postponed but source was <see langword="null" />, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> is instead returned.</span>
          </span>
          <span data-ttu-id="544be-186">如果目標嘗試接受訊息，但因為來源將訊息傳遞給另一個目標或直接捨棄訊息，使得目標遺漏訊息，則會傳回 <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-186">If the target tried to accept the message but missed it due to the source delivering the message to another target or simply discarding it, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /> is returned.</span>
          </span>
          <span data-ttu-id="544be-187">如果目標選擇不接受訊息，則會傳回 <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-187">If the target chose not to accept the message, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> is returned.</span>
          </span>
          <span data-ttu-id="544be-188">如果目標選擇不接受此訊息，且將不會接受來自此來源的其他訊息，則會傳回 <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-188">If the target chose not to accept the message and will never accept another message from this source, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /> is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="544be-189">
            <paramref name="messageHeader" /> 無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-189">The <paramref name="messageHeader" /> is not valid.</span>
          </span>
          <span data-ttu-id="544be-190">或，如果提供非 null <paramref name="consumeToAccept" />，則 <paramref name="source" /> 只能為 true。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-190">-or- <paramref name="consumeToAccept" /> may only be true if provided with a non-null <paramref name="source" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformBlock`2.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="544be-191">傳回表示這個 <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> 執行個體之格式化名稱的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-191">Returns a string that represents the formatted name of this  <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="544be-192">表示這個 <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> 執行個體之格式化名稱的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-192">A string that represents the formatted name of this  <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="544be-193">繼承自<xref:System.Object>。</span><span class="sxs-lookup"><span data-stu-id="544be-193">Inherited from  <xref:System.Object> .</span></span> <span data-ttu-id="544be-194">使用<xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A>選項。</span><span class="sxs-lookup"><span data-stu-id="544be-194">Uses the  <xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A> option.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReceive">
      <MemberSignature Language="C#" Value="public bool TryReceive (Predicate&lt;TOutput&gt; filter, out TOutput item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryReceive(class System.Predicate`1&lt;!TOutput&gt; filter, [out] !TOutput&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformBlock`2.TryReceive(System.Predicate{`1},`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReceive (filter As Predicate(Of TOutput), ByRef item As TOutput) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryReceive(Predicate&lt;TOutput&gt; ^ filter, [Runtime::InteropServices::Out] TOutput % item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1.TryReceive(System.Predicate{`0},`0@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Predicate&lt;TOutput&gt;" />
        <Parameter Name="item" Type="TOutput&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="544be-195">述詞的值必須成功傳遞才能讓它接收。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-195">The predicate value must successfully pass in order for it to be received.</span>
          </span>
          <span data-ttu-id="544be-196">
            <c>filter</c> 可能是 <see langword="null" />，這種情況下將傳遞所有項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-196">
              <c>filter</c> may be <see langword="null" />, in which case all items will pass.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="544be-197">從來源接收的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-197">The item received from the source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="544be-198">嘗試以同步方式從 <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" /> 接收可用的輸出項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-198">Attempts to synchronously receive an available output item from the <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="544be-199">如果可以接收項目，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-199">
              <see langword="true" /> if an item could be received; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="544be-200">這個方法不會封鎖等候提供項目來源。</span><span class="sxs-lookup"><span data-stu-id="544be-200">This method does not block waiting for the source to provide an item.</span></span>  
  
 <span data-ttu-id="544be-201">它會傳回之後檢查的項目，或有可用的項目。</span><span class="sxs-lookup"><span data-stu-id="544be-201">It will return after checking for an element, whether or not an element was available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReceiveAll">
      <MemberSignature Language="C#" Value="public bool TryReceiveAll (out System.Collections.Generic.IList&lt;TOutput&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryReceiveAll([out] class System.Collections.Generic.IList`1&lt;!TOutput&gt;&amp; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.TransformBlock`2.TryReceiveAll(System.Collections.Generic.IList{`1}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReceiveAll (ByRef items As IList(Of TOutput)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryReceiveAll([Runtime::InteropServices::Out] System::Collections::Generic::IList&lt;TOutput&gt; ^ % items);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0}@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IList&lt;TOutput&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="544be-202">從來源接收的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-202">The items received from the source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="544be-203">嘗試以同步方式從 <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" /> 接收所有可用項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-203">Attempts to synchronously receive all available items from the <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="544be-204">如果無法收到一或多個項目，則為 <see langword="true" />，否則為<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="544be-204">
              <see langword="true" /> if one or more items could be received; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="544be-205">這個方法不會封鎖等候提供項目來源。</span><span class="sxs-lookup"><span data-stu-id="544be-205">This method does not block waiting for the source to provide an item.</span></span>  
  
 <span data-ttu-id="544be-206">它會傳回之後檢查項目，或有可用的項目。</span><span class="sxs-lookup"><span data-stu-id="544be-206">It will return after checking for elements, whether or not an element was available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>