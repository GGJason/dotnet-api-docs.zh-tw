<Type Name="ManagementObjectCollection" FullName="System.Management.ManagementObjectCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="971e0df134456adc632ecb41b99edf6e4044f78d" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51323442" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ManagementObjectCollection : IDisposable, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManagementObjectCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Management.ManagementObjectCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagementObjectCollection&#xA;Implements ICollection, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementObjectCollection : IDisposable, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type ManagementObjectCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="75e68-101">表示經由 WMI 所擷取的各種管理物件集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="75e68-101">Represents different collections of management objects retrieved through WMI.</span>
      </span>
      <span data-ttu-id="75e68-102">這個集合中的物件屬於 <see cref="T:System.Management.ManagementBaseObject" /> 所衍生的型別，其中包括 <see cref="T:System.Management.ManagementObject" /> 和 <see cref="T:System.Management.ManagementClass" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="75e68-102">The objects in this collection are of <see cref="T:System.Management.ManagementBaseObject" />-derived types, including <see cref="T:System.Management.ManagementObject" /> and <see cref="T:System.Management.ManagementClass" />.</span>
      </span>
      <span data-ttu-id="75e68-103">集合可以是執行 WMI 查詢 (經由 <see cref="T:System.Management.ManagementObjectSearcher" />) 的結果，或指定型別 (經由表示該型別的 <see cref="T:System.Management.ManagementClass" /> 所擷取) 之管理物件的列舉型別 (Enumeration)。</span>
      <span class="sxs-lookup">
        <span data-stu-id="75e68-103">The collection can be the result of a WMI query executed through a <see cref="T:System.Management.ManagementObjectSearcher" />, or an enumeration of management objects of a specified type retrieved through a <see cref="T:System.Management.ManagementClass" /> representing that type.</span>
      </span>
      <span data-ttu-id="75e68-104">此外，還可以是在指定方面與特定管理物件相關聯的管理物件集合；在這種情況下，集合將會經由例如 <see cref="M:System.Management.ManagementObject.GetRelated" /> 這樣的方法來擷取。</span>
      <span class="sxs-lookup">
        <span data-stu-id="75e68-104">In addition, this can be a collection of management objects related in a specified way to a specific management object - in this case the collection would be retrieved through a method such as <see cref="M:System.Management.ManagementObject.GetRelated" />.</span>
      </span>
      <span data-ttu-id="75e68-105">集合可以使用 <see cref="T:System.Management.ManagementObjectCollection.ManagementObjectEnumerator" /> 來輕鬆運用，而其中物件也可以因應各種管理工作加以檢查或操作。</span>
      <span class="sxs-lookup">
        <span data-stu-id="75e68-105">The collection can be walked using the <see cref="T:System.Management.ManagementObjectCollection.ManagementObjectEnumerator" /> and objects in it can be inspected or manipulated for various management tasks.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="75e68-106">將集合複製至陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="75e68-106">Copies the collection to an array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementObjectCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="managementObjectCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="75e68-107">要複製的目的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="75e68-107">An array to copy to.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="75e68-108">做為開頭的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="75e68-108">The index to start from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="75e68-109">將集合複製至陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="75e68-109">Copies the collection to an array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="75e68-110">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="75e68-110">.NET Framework Security</span></span>  
 <span data-ttu-id="75e68-111">完全信任立即呼叫者。</span><span class="sxs-lookup"><span data-stu-id="75e68-111">Full trust for the immediate caller.</span></span> <span data-ttu-id="75e68-112">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="75e68-112">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="75e68-113">如需詳細資訊，請參閱 <<c0> [ 從部分信任程式碼使用程式庫](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。</span><span class="sxs-lookup"><span data-stu-id="75e68-113">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Management.ManagementBaseObject[] objectCollection, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Management.ManagementBaseObject[] objectCollection, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementObjectCollection.CopyTo(System.Management.ManagementBaseObject[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (objectCollection As ManagementBaseObject(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Management::ManagementBaseObject ^&gt; ^ objectCollection, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Management.ManagementBaseObject[] * int -&gt; unit" Usage="managementObjectCollection.CopyTo (objectCollection, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectCollection" Type="System.Management.ManagementBaseObject[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="objectCollection">
          <span data-ttu-id="75e68-114">目標陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="75e68-114">The target array.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="75e68-115">做為開頭的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="75e68-115">The index to start from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="75e68-116">將集合中的項目複製至 <see cref="T:System.Management.ManagementBaseObject" /> 陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="75e68-116">Copies the items in the collection to a <see cref="T:System.Management.ManagementBaseObject" /> array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="75e68-117">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="75e68-117">.NET Framework Security</span></span>  
 <span data-ttu-id="75e68-118">完全信任立即呼叫者。</span><span class="sxs-lookup"><span data-stu-id="75e68-118">Full trust for the immediate caller.</span></span> <span data-ttu-id="75e68-119">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="75e68-119">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="75e68-120">如需詳細資訊，請參閱 <<c0> [ 從部分信任程式碼使用程式庫](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。</span><span class="sxs-lookup"><span data-stu-id="75e68-120">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementObjectCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Management.ManagementObjectCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75e68-121">取得值，表示集合中物件的數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="75e68-121">Gets a value indicating the number of objects in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75e68-122">傳回 <see cref="T:System.Int32" /> 值，指出集合中物件的數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="75e68-122">Returns an <see cref="T:System.Int32" /> value indicating the number of objects in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75e68-123">這個屬性是非常耗費資源-需要列舉集合中的所有成員。</span><span class="sxs-lookup"><span data-stu-id="75e68-123">This property is very expensive - it requires that all members of the collection be enumerated.</span></span>  
  
## <a name="property-value"></a><span data-ttu-id="75e68-124">屬性值</span><span class="sxs-lookup"><span data-stu-id="75e68-124">Property Value</span></span>  
 <span data-ttu-id="75e68-125">集合中的物件數目。</span><span class="sxs-lookup"><span data-stu-id="75e68-125">The number of objects in the collection.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="75e68-126">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="75e68-126">.NET Framework Security</span></span>  
 <span data-ttu-id="75e68-127">完全信任立即呼叫者。</span><span class="sxs-lookup"><span data-stu-id="75e68-127">Full trust for the immediate caller.</span></span> <span data-ttu-id="75e68-128">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="75e68-128">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="75e68-129">如需詳細資訊，請參閱 <<c0> [ 從部分信任程式碼使用程式庫](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。</span><span class="sxs-lookup"><span data-stu-id="75e68-129">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementObjectCollection.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="managementObjectCollection.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="75e68-130">釋出與這個物件相關聯的資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="75e68-130">Releases resources associated with this object.</span>
          </span>
          <span data-ttu-id="75e68-131">在呼叫這個方法之後，嘗試使用這個物件時，會導致 <see cref="T:System.ObjectDisposedException" /> 被擲回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="75e68-131">After this method has been called, an attempt to use this object will result in an <see cref="T:System.ObjectDisposedException" /> being thrown.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="75e68-132">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="75e68-132">.NET Framework Security</span></span>  
 <span data-ttu-id="75e68-133">完全信任立即呼叫者。</span><span class="sxs-lookup"><span data-stu-id="75e68-133">Full trust for the immediate caller.</span></span> <span data-ttu-id="75e68-134">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="75e68-134">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="75e68-135">如需詳細資訊，請參閱 <<c0> [ 從部分信任程式碼使用程式庫](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。</span><span class="sxs-lookup"><span data-stu-id="75e68-135">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IDisposable.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ManagementObjectCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementObjectCollection.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ManagementObjectCollection ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="managementObjectCollection.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="75e68-136">處置物件所保有的資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="75e68-136">Disposes of resources the object is holding.</span>
          </span>
          <span data-ttu-id="75e68-137">這是物件的解構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="75e68-137">This is the destructor for the object.</span>
          </span>
          <span data-ttu-id="75e68-138">完成項會使用解構函式語法來表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="75e68-138">Finalizers are expressed using destructor syntax.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a><span data-ttu-id="75e68-139">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="75e68-139">.NET Framework Security</span></span>  
 <span data-ttu-id="75e68-140">完全信任立即呼叫者。</span><span class="sxs-lookup"><span data-stu-id="75e68-140">Full trust for the immediate caller.</span></span> <span data-ttu-id="75e68-141">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="75e68-141">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="75e68-142">如需詳細資訊，請參閱 <<c0> [ 從部分信任程式碼使用程式庫](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。</span><span class="sxs-lookup"><span data-stu-id="75e68-142">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Management.ManagementObjectCollection.ManagementObjectEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementObjectCollection/ManagementObjectEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementObjectCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As ManagementObjectCollection.ManagementObjectEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementObjectCollection::ManagementObjectEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Management.ManagementObjectCollection.ManagementObjectEnumerator" Usage="managementObjectCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementObjectCollection+ManagementObjectEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="75e68-143">傳回集合的列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="75e68-143">Returns the enumerator for the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="75e68-144">
            <see cref="T:System.Collections.IEnumerator" />，可用於逐一查看集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="75e68-144">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75e68-145">您可以只逐一查看 (如所示 Visual BASIC.NET`For Each`陳述式或 C#`For`陳述式) 透過順向的列舉值一次。</span><span class="sxs-lookup"><span data-stu-id="75e68-145">You can only iterate (as in a Visual Basic .NET `For Each` statement or a C# `For` statement) through a forward-only enumerator one time.</span></span> <span data-ttu-id="75e68-146">包含執行個體的記憶體被發行 wmi，以便列舉值無法回復。</span><span class="sxs-lookup"><span data-stu-id="75e68-146">The memory containing the instances is released by WMI so that the enumerator cannot be rewound.</span></span> <span data-ttu-id="75e68-147">因此，<xref:System.Management.ManagementObjectCollection.Count%2A>方法無法使用，因為它需要倒帶列舉值。</span><span class="sxs-lookup"><span data-stu-id="75e68-147">Therefore, the <xref:System.Management.ManagementObjectCollection.Count%2A> method cannot be used since it requires rewinding the enumerator.</span></span>  
  
 <span data-ttu-id="75e68-148">順向的列舉值通常會更快，並使用較少的記憶體，比傳統的列舉值，但不是允許呼叫<xref:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Reset%2A>。</span><span class="sxs-lookup"><span data-stu-id="75e68-148">Forward-only enumerators are generally much faster and use less memory than conventional enumerators, but they do not allow calls to  <xref:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Reset%2A>.</span></span>  
  
 <span data-ttu-id="75e68-149">如果列舉值為可回溯，集合中的物件會保留供多個列舉型別。</span><span class="sxs-lookup"><span data-stu-id="75e68-149">If an enumerator is rewindable, the objects in the collection will be kept available for multiple enumerations.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="75e68-150">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="75e68-150">.NET Framework Security</span></span>  
 <span data-ttu-id="75e68-151">完全信任立即呼叫者。</span><span class="sxs-lookup"><span data-stu-id="75e68-151">Full trust for the immediate caller.</span></span> <span data-ttu-id="75e68-152">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="75e68-152">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="75e68-153">如需詳細資訊，請參閱 <<c0> [ 從部分信任程式碼使用程式庫](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。</span><span class="sxs-lookup"><span data-stu-id="75e68-153">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementObjectCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Management.ManagementObjectCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75e68-154">取得值，指出物件是否已同步化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="75e68-154">Gets a value indicating whether the object is synchronized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75e68-155">傳回 <see cref="T:System.Boolean" /> 值，指出物件是否已同步化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="75e68-155">Returns a <see cref="T:System.Boolean" /> value indicating whether the object is synchronized.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="75e68-156">屬性值</span><span class="sxs-lookup"><span data-stu-id="75e68-156">Property Value</span></span>  
 <span data-ttu-id="75e68-157">`true`如果同步的物件，否則`false`。</span><span class="sxs-lookup"><span data-stu-id="75e68-157">`true`, if the object is synchronized, otherwise `false`.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="75e68-158">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="75e68-158">.NET Framework Security</span></span>  
 <span data-ttu-id="75e68-159">完全信任立即呼叫者。</span><span class="sxs-lookup"><span data-stu-id="75e68-159">Full trust for the immediate caller.</span></span> <span data-ttu-id="75e68-160">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="75e68-160">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="75e68-161">如需詳細資訊，請參閱 <<c0> [ 從部分信任程式碼使用程式庫](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。</span><span class="sxs-lookup"><span data-stu-id="75e68-161">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementObjectCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Management.ManagementObjectCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75e68-162">取得要用於同步處理的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="75e68-162">Gets the object to be used for synchronization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75e68-163">傳回 <see cref="T:System.Object" /> 值，表示要用於同步處理的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="75e68-163">Returns an <see cref="T:System.Object" /> value that represents the object to be used for synchronization.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="property-value"></a><span data-ttu-id="75e68-164">屬性值</span><span class="sxs-lookup"><span data-stu-id="75e68-164">Property Value</span></span>  
 <span data-ttu-id="75e68-165">要用於同步處理的物件。</span><span class="sxs-lookup"><span data-stu-id="75e68-165">The object to be used for synchronization.</span></span>  
  
## <a name="net-framework-security"></a><span data-ttu-id="75e68-166">.NET Framework 安全性</span><span class="sxs-lookup"><span data-stu-id="75e68-166">.NET Framework Security</span></span>  
 <span data-ttu-id="75e68-167">完全信任立即呼叫者。</span><span class="sxs-lookup"><span data-stu-id="75e68-167">Full trust for the immediate caller.</span></span> <span data-ttu-id="75e68-168">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="75e68-168">This member cannot be used by partially trusted code.</span></span> <span data-ttu-id="75e68-169">如需詳細資訊，請參閱 <<c0> [ 從部分信任程式碼使用程式庫](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md)。</span><span class="sxs-lookup"><span data-stu-id="75e68-169">For more information, see [Using Libraries from Partially Trusted Code](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementObjectCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="75e68-170">傳回透過 <see cref="T:System.Collections.IEnumerator" /> 重複的 <see cref="T:System.Management.ManagementObjectCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="75e68-170">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Management.ManagementObjectCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="75e68-171">
            <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Management.ManagementObjectCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="75e68-171">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Management.ManagementObjectCollection" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75e68-172">[Visual Basic 中， C#]</span><span class="sxs-lookup"><span data-stu-id="75e68-172">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="75e68-173">C# 語言的 `foreach` 陳述式 (在 Visual Basic 中為 `for each`) 會隱藏列舉值的複雜度。</span><span class="sxs-lookup"><span data-stu-id="75e68-173">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="75e68-174">因此，建議您使用 `foreach`，而不要直接使用列舉值。</span><span class="sxs-lookup"><span data-stu-id="75e68-174">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="75e68-175">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="75e68-175">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="75e68-176">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="75e68-176">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="75e68-177"><xref:System.Collections.IEnumerator.Reset%2A> 也會將列舉值帶回至這個位置。</span><span class="sxs-lookup"><span data-stu-id="75e68-177"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="75e68-178">在這個位置上，呼叫<xref:System.Collections.IEnumerator.Current%2A>會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="75e68-178">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="75e68-179">因此，在讀取 <xref:System.Collections.IEnumerator.MoveNext%2A> 的值之前，必須呼叫 <xref:System.Collections.IEnumerator.Current%2A> 以將列舉值前移至集合的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="75e68-179">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="75e68-180"><xref:System.Collections.IEnumerator.Current%2A> 會傳回相同的物件直到呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A> 或 <xref:System.Collections.IEnumerator.Reset%2A>。</span><span class="sxs-lookup"><span data-stu-id="75e68-180"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="75e68-181"><xref:System.Collections.IEnumerator.MoveNext%2A> 會將 <xref:System.Collections.IEnumerator.Current%2A> 設定為下一個項目。</span><span class="sxs-lookup"><span data-stu-id="75e68-181"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="75e68-182">如果<xref:System.Collections.IEnumerator.MoveNext%2A>集合，也就是列舉值的結尾是否位於集合中的最後一個元素之後的階段和<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="75e68-182">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="75e68-183">列舉值位於此位置，後續呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="75e68-183">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="75e68-184">如果上次呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>傳回`false`，則呼叫<xref:System.Collections.IEnumerator.Current%2A>會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="75e68-184">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="75e68-185">若要再次將 <xref:System.Collections.IEnumerator.Current%2A> 設定為集合的第一個元素，您可以在呼叫 <xref:System.Collections.IEnumerator.Reset%2A> 之後，接著呼叫 <xref:System.Collections.IEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="75e68-185">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="75e68-186">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="75e68-186">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="75e68-187">如果變更集合，例如加入、 修改或刪除元素，列舉值會將永久失效，而且下次呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>或是<xref:System.Collections.IEnumerator.Reset%2A>就會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="75e68-187">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="75e68-188">如果集合已修改之間<xref:System.Collections.IEnumerator.MoveNext%2A>並<xref:System.Collections.IEnumerator.Current%2A>，<xref:System.Collections.IEnumerator.Current%2A>傳回設定為，項目，即使已經無效列舉值。</span><span class="sxs-lookup"><span data-stu-id="75e68-188">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="75e68-189">列舉值對集合並沒有獨佔存取，因此列舉集合在本質上並非安全執行緒的程序。</span><span class="sxs-lookup"><span data-stu-id="75e68-189">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="75e68-190">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="75e68-190">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="75e68-191">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="75e68-191">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="75e68-192">這個方法是 o （1） 作業。</span><span class="sxs-lookup"><span data-stu-id="75e68-192">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>