<Type Name="EventLogQuery" FullName="System.Diagnostics.Eventing.Reader.EventLogQuery">
  <TypeSignature Language="C#" Value="public class EventLogQuery" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLogQuery extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.Reader.EventLogQuery" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLogQuery" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogQuery" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="07c7b-101">表示事件記錄檔中事件的查詢，以及定義如何執行查詢和執行查詢所在電腦的設定。</span><span class="sxs-lookup"><span data-stu-id="07c7b-101">Represents a query for events in an event log and the settings that define how the query is executed and on what computer the query is executed on.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07c7b-102">如需範例程式碼使用這個類別，請參閱[How To： 查詢事件](http://msdn.microsoft.com/library/5231a436-4cf2-4539-90d2-a04813aba069)或[How To： 存取和讀取事件資訊](http://msdn.microsoft.com/library/14db3375-d305-49ae-aa24-aedbe906e76c)。</span><span class="sxs-lookup"><span data-stu-id="07c7b-102">For example code using this class, see [How To: Query for Events](http://msdn.microsoft.com/library/5231a436-4cf2-4539-90d2-a04813aba069) or [How To: Access and Read Event Information](http://msdn.microsoft.com/library/14db3375-d305-49ae-aa24-aedbe906e76c).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07c7b-103">初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="07c7b-103">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogQuery (string path, System.Diagnostics.Eventing.Reader.PathType pathType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.Diagnostics.Eventing.Reader.PathType pathType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogQuery(System::String ^ path, System::Diagnostics::Eventing::Reader::PathType pathType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathType" Type="System.Diagnostics.Eventing.Reader.PathType" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="07c7b-104">要查詢之事件記錄的名稱，或是要查詢之事件記錄檔的路徑。</span><span class="sxs-lookup"><span data-stu-id="07c7b-104">The name of the event log to query, or the path to the event log file to query.</span></span></param>
        <param name="pathType"><span data-ttu-id="07c7b-105">指定用於路徑參數的字串是否會指定事件記錄名稱或事件記錄檔路徑。</span><span class="sxs-lookup"><span data-stu-id="07c7b-105">Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.</span></span></param>
        <summary><span data-ttu-id="07c7b-106">藉由指定查詢目標，初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="07c7b-106">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> class by specifying the target of the query.</span></span> <span data-ttu-id="07c7b-107">目標可以是使用中的事件記錄或記錄檔。</span><span class="sxs-lookup"><span data-stu-id="07c7b-107">The target can be an active event log or a log file.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogQuery (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.Diagnostics.Eventing.Reader.PathType pathType, string query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogQuery(System::String ^ path, System::Diagnostics::Eventing::Reader::PathType pathType, System::String ^ query);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathType" Type="System.Diagnostics.Eventing.Reader.PathType" />
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="07c7b-108">要查詢之事件記錄的名稱，或是要查詢之事件記錄檔的路徑。</span><span class="sxs-lookup"><span data-stu-id="07c7b-108">The name of the event log to query, or the path to the event log file to query.</span></span></param>
        <param name="pathType"><span data-ttu-id="07c7b-109">指定用於路徑參數的字串是否會指定事件記錄名稱或事件記錄檔路徑。</span><span class="sxs-lookup"><span data-stu-id="07c7b-109">Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file.</span></span></param>
        <param name="query"><span data-ttu-id="07c7b-110">事件查詢，用來擷取符合查詢條件的事件。</span><span class="sxs-lookup"><span data-stu-id="07c7b-110">The event query used to retrieve events that match the query conditions.</span></span></param>
        <summary><span data-ttu-id="07c7b-111">藉由指定查詢目標和事件查詢，初始化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="07c7b-111">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> class by specifying the target of the query and the event query.</span></span> <span data-ttu-id="07c7b-112">目標可以是使用中的事件記錄或記錄檔。</span><span class="sxs-lookup"><span data-stu-id="07c7b-112">The target can be an active event log or a log file.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReverseDirection">
      <MemberSignature Language="C#" Value="public bool ReverseDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReverseDirection" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property ReverseDirection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReverseDirection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07c7b-113">取得或設定布林值，這個值可判斷讀取事件時，順序是否從事件記錄檔中的最新事件到最舊事件。</span><span class="sxs-lookup"><span data-stu-id="07c7b-113">Gets or sets the Boolean value that determines whether to read events from the newest event in an event log to the oldest event in the log.</span></span></summary>
        <value><span data-ttu-id="07c7b-114">如果從記錄檔中的最新事件到最舊事件來讀取事件，則傳回 <see langword="true" />，如果從記錄檔中的最舊事件到最新事件來讀取事件，則傳回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="07c7b-114">Returns <see langword="true" /> if events are read from the newest event in the log to the oldest event, and returns <see langword="false" /> if events are read from the oldest event in the log to the newest event.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07c7b-115">預設值是 `false`。</span><span class="sxs-lookup"><span data-stu-id="07c7b-115">The default value is `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Eventing.Reader.EventLogSession Session { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.Eventing.Reader.EventLogSession Session" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogQuery.Session" />
      <MemberSignature Language="VB.NET" Value="Public Property Session As EventLogSession" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Eventing::Reader::EventLogSession ^ Session { System::Diagnostics::Eventing::Reader::EventLogSession ^ get(); void set(System::Diagnostics::Eventing::Reader::EventLogSession ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventLogSession</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07c7b-116">取得或設定存取本機電腦或遠端電腦之事件記錄服務的工作階段。</span><span class="sxs-lookup"><span data-stu-id="07c7b-116">Gets or sets the session that access the Event Log service on the local computer or a remote computer.</span></span> <span data-ttu-id="07c7b-117">藉由搭配這個 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> 物件建立 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> 物件或 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> 物件，可設定這個物件來存取遠端事件記錄檔。</span><span class="sxs-lookup"><span data-stu-id="07c7b-117">This object can be set to access a remote event log by creating a <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> object or an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> object with this <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> object.</span></span></summary>
        <value><span data-ttu-id="07c7b-118">傳回 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="07c7b-118">Returns an <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TolerateQueryErrors">
      <MemberSignature Language="C#" Value="public bool TolerateQueryErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TolerateQueryErrors" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property TolerateQueryErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TolerateQueryErrors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07c7b-119">取得或設定布林值，這個值可判斷當查詢有錯誤時，是否會繼續擷取事件。</span><span class="sxs-lookup"><span data-stu-id="07c7b-119">Gets or sets a Boolean value that determines whether this query will continue to retrieve events when the query has an error.</span></span></summary>
        <value>
          <span data-ttu-id="07c7b-120"><see langword="true" /> 表示即使某些記錄檔查詢失敗，查詢仍會繼續擷取事件，<see langword="false" /> 表示查詢失敗時，這個查詢不會繼續擷取事件。</span><span class="sxs-lookup"><span data-stu-id="07c7b-120"><see langword="true" /> indicates that the query will continue to retrieve events even if the query fails for some logs, and <see langword="false" /> indicates that this query will not continue to retrieve events when the query fails.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>