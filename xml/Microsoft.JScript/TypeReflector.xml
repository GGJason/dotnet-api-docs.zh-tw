<Type Name="TypeReflector" FullName="Microsoft.JScript.TypeReflector">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a20d6163f2f5796a65e98834904a27f1f2199ad8" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37716328" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TypeReflector : Microsoft.JScript.ScriptObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeReflector extends Microsoft.JScript.ScriptObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.TypeReflector" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeReflector&#xA;Inherits ScriptObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeReflector sealed : Microsoft::JScript::ScriptObject" />
  <TypeSignature Language="F#" Value="type TypeReflector = class&#xA;    inherit ScriptObject" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.JScript.ScriptObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供比 <see cref="M:Microsoft.JScript.TypeReflector.GetMember(System.String,System.Reflection.BindingFlags)" /> 更快速的 <see cref="M:System.Type.GetMember(System.String,System.Reflection.BindingFlags)" /> 實作。</summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.ScriptObject" />
    <altmember cref="T:System.Type" />
  </Docs>
  <Members>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypeReflector.GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetMember : string * System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="typeReflector.GetMember (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">要搜尋的成員名稱。</param>
        <param name="bindingAttr">列舉值的位元組合，指定透過反映作業搜尋成員和型別的方式。</param>
        <summary>使用指定的繫結條件約束搜尋指定的成員。</summary>
        <returns>
          <see cref="T:System.Reflection.MemberInfo" /> 物件的陣列，表示具有指定之名稱的公用成員 (如果找到的話)，否則為空陣列。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.TypeReflector.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetMembers : System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="typeReflector.GetMembers bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">列舉值的位元組合，指定透過反映作業搜尋成員和型別的方式。</param>
        <summary>在所有情況下都會擲回 <see cref="T:Microsoft.JScript.JScriptException" /> 例外狀況。</summary>
        <returns>在所有情況下都會擲回 <see cref="T:Microsoft.JScript.JScriptException" /> 例外狀況。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:System.Type" />
        <altmember cref="F:Microsoft.JScript.JSError.InternalError" />
      </Docs>
    </Member>
  </Members>
</Type>