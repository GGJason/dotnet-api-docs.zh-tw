<Type Name="IActivationObject" FullName="Microsoft.JScript.IActivationObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2e2803557c602c95dba10f7ffc77cdfa3e64c283" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="37719228" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IActivationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IActivationObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.IActivationObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface IActivationObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IActivationObject" />
  <TypeSignature Language="F#" Value="type IActivationObject = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="55505-101">定義用來解析範圍的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="55505-101">Defines methods for resolving scope.</span>
      </span>
      <span data-ttu-id="55505-102">所有參與範圍階層架構的物件都會實作這個介面。</span>
      <span class="sxs-lookup">
        <span data-stu-id="55505-102">This interface is implemented by all objects that take part in a scope hierarchy.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.ActivationObject" />
    <altmember cref="T:Microsoft.JScript.ScriptObject" />
    <altmember cref="T:Microsoft.JScript.GlobalScope" />
    <altmember cref="T:System.Reflection.FieldInfo" />
  </Docs>
  <Members>
    <Member MemberName="GetDefaultThisObject">
      <MemberSignature Language="C#" Value="public object GetDefaultThisObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetDefaultThisObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetDefaultThisObject" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDefaultThisObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetDefaultThisObject();" />
      <MemberSignature Language="F#" Value="abstract member GetDefaultThisObject : unit -&gt; obj" Usage="iActivationObject.GetDefaultThisObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="55505-103">在類別中實作時，取得目前的預設範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55505-103">When implemented in a class, gets the current default scope.</span>
          </span>
          <span data-ttu-id="55505-104">可能是 <see langword="with" /> 陳述式範圍的內含物件，或是全域範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55505-104">Either the contained object of a <see langword="with" /> statement scope, or the global scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55505-105">目前的預設範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55505-105">The current default scope.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetField (string name, int lexLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name, int32 lexLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetField(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetField (name As String, lexLevel As Integer) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetField(System::String ^ name, int lexLevel);" />
      <MemberSignature Language="F#" Value="abstract member GetField : string * int -&gt; System.Reflection.FieldInfo" Usage="iActivationObject.GetField (name, lexLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="lexLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="55505-106">要搜尋的欄位名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55505-106">The name of the field to search for.</span>
          </span>
        </param>
        <param name="lexLevel">
          <span data-ttu-id="55505-107">要搜尋的語彙層級。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55505-107">The lexical level to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55505-108">在類別中實作時，藉由搜尋範圍階層架構，傳回有指定之名稱的欄位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55505-108">When implemented in a class, returns a field that has the specified name by searching the scope hierarchy.</span>
          </span>
          <span data-ttu-id="55505-109">這個方法只會搜尋語彙層級指定的範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55505-109">This method searches only the scope that is specified by the lexical level.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55505-110">
            <see cref="T:System.Reflection.FieldInfo" /> 物件，具有指定的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55505-110">A <see cref="T:System.Reflection.FieldInfo" /> object that has the specified name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55505-111">這個方法適用於在編譯時期無法解析的欄位。</span><span class="sxs-lookup"><span data-stu-id="55505-111">This method applies to fields that cannot be resolved at compile time.</span></span> <span data-ttu-id="55505-112">發生這種情況時`eval`運算式會參考外部範圍中的欄位。</span><span class="sxs-lookup"><span data-stu-id="55505-112">This happens when an `eval` expression refers to a field in the outer scope.</span></span> <span data-ttu-id="55505-113">因為`eval`運算式可以宣告具有相同名稱的區域欄位，欄位不可為早期繫結至外部範圍的欄位。</span><span class="sxs-lookup"><span data-stu-id="55505-113">Because the `eval` expression can declare a local field with the same name, the field cannot be early bound to the outer scope field.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
      </Docs>
    </Member>
    <Member MemberName="GetGlobalScope">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.GlobalScope GetGlobalScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.JScript.GlobalScope GetGlobalScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetGlobalScope" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGlobalScope () As GlobalScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::GlobalScope ^ GetGlobalScope();" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalScope : unit -&gt; Microsoft.JScript.GlobalScope" Usage="iActivationObject.GetGlobalScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.GlobalScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="55505-114">在類別中實作時，藉由搜尋範圍階層架構，直到找到包含靜態變數的範圍 (例如模組範圍)，來取得全域範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55505-114">When implemented in a class, gets the global scope by searching the scope hierarchy until it finds a scope that includes static variables, for example, a module scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55505-115">全域範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55505-115">The global scope.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetLocalField (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetLocalField(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetLocalField(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLocalField (name As String) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetLocalField(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetLocalField : string -&gt; System.Reflection.FieldInfo" Usage="iActivationObject.GetLocalField name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="55505-116">欄位的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55505-116">The name of the field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55505-117">在類別中實作時，取得有指定的名稱之欄位的區域宣告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55505-117">When implemented in a class, gets the local declaration of a field that has the specified name.</span>
          </span>
          <span data-ttu-id="55505-118">這會在編譯時期用來進行錯誤檢查。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55505-118">This is used at compile time for error checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55505-119">欄位的區域宣告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55505-119">The local declaration of the field.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
      </Docs>
    </Member>
    <Member MemberName="GetMemberValue">
      <MemberSignature Language="C#" Value="public object GetMemberValue (string name, int lexlevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetMemberValue(string name, int32 lexlevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetMemberValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMemberValue (name As String, lexlevel As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetMemberValue(System::String ^ name, int lexlevel);" />
      <MemberSignature Language="F#" Value="abstract member GetMemberValue : string * int -&gt; obj" Usage="iActivationObject.GetMemberValue (name, lexlevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="lexlevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="55505-120">要搜尋的成員名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55505-120">The name of the member to search for.</span>
          </span>
        </param>
        <param name="lexlevel">
          <span data-ttu-id="55505-121">要搜尋的語彙層級。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55505-121">The lexical level to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="55505-122">在類別中實作時，藉由搜尋範圍階層架構取得指定之成員的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55505-122">When implemented in a class, gets the value of the specified member by searching the scope hierarchy.</span>
          </span>
          <span data-ttu-id="55505-123">這個方法只會搜尋語彙層級指定的範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55505-123">This method searches only the scope that is specified by the lexical level.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="55505-124">成員 <paramref name="name" /> 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="55505-124">The value of the member <paramref name="name" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55505-125">這個方法適用於在編譯時期無法解析的成員。</span><span class="sxs-lookup"><span data-stu-id="55505-125">This method applies to members that cannot be resolved at compile time.</span></span> <span data-ttu-id="55505-126">發生這種情況時`eval`運算式會參考外部範圍中的成員。</span><span class="sxs-lookup"><span data-stu-id="55505-126">This occurs when an `eval` expression refers to a member in the outer scope.</span></span> <span data-ttu-id="55505-127">因為`eval`運算式可以宣告具有相同名稱的本機成員、 成員不能是早期繫結至外部範圍的成員。</span><span class="sxs-lookup"><span data-stu-id="55505-127">Because the `eval` expression can declare a local member with the same name, the member cannot be early bound to the outer scope member.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
  </Members>
</Type>