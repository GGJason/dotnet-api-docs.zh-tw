<Type Name="ScriptObject" FullName="Microsoft.JScript.ScriptObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="09f8b3e203959c69097ed9b6c736602c4daf0cc6" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48596780" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ScriptObject : System.Reflection.IReflect" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ScriptObject extends System.Object implements class System.Reflection.IReflect" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.ScriptObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ScriptObject&#xA;Implements IReflect" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScriptObject abstract : System::Reflection::IReflect" />
  <TypeSignature Language="F#" Value="type ScriptObject = class&#xA;    interface IReflect" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Reflection.IReflect</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4aac9-101">支援所有 JScript 類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4aac9-101">Supports all JScript classes.</span>
      </span>
      <span data-ttu-id="4aac9-102">這是所有 JScript 類別的最終基底類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4aac9-102">This is the ultimate base class of all JScript classes.</span>
      </span>
      <span data-ttu-id="4aac9-103">這個類別屬於物件和函式分類。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4aac9-103">This class belongs to the objects and functions category.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.ActivationObject" />
    <altmember cref="T:Microsoft.JScript.JSObject" />
  </Docs>
  <Members>
    <Member MemberName="engine">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.Vsa.VsaEngine engine;" />
      <MemberSignature Language="ILAsm" Value=".field public class Microsoft.JScript.Vsa.VsaEngine engine" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.ScriptObject.engine" />
      <MemberSignature Language="VB.NET" Value="Public engine As VsaEngine " />
      <MemberSignature Language="C++ CLI" Value="public: Microsoft::JScript::Vsa::VsaEngine ^ engine;" />
      <MemberSignature Language="F#" Value="val mutable engine : Microsoft.JScript.Vsa.VsaEngine" Usage="Microsoft.JScript.ScriptObject.engine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.VsaEngine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4aac9-104">儲存指令碼引擎的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-104">Stores a reference to the scripting engine.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::FieldInfo ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetField : string * System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo&#xA;override this.GetField : string * System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo" Usage="scriptObject.GetField (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="4aac9-105">要取得的欄位名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-105">The name of the field to get.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="4aac9-106">列舉值的位元組合，指定透過反映處理搜尋成員的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-106">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4aac9-107">取得具有指定之名稱的欄位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-107">Gets a field that has the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4aac9-108">具有指定之 <paramref name="name" /> 的欄位，如果指令碼物件不包含欄位則為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-108">A field that has the specified <paramref name="name" />, or null if the script object does not contain the field.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFields (bindingAttr As BindingFlags) As FieldInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetFields : System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo[]&#xA;override this.GetFields : System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo[]" Usage="scriptObject.GetFields bindingAttr" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="4aac9-109">列舉值的位元組合，指定透過反映處理搜尋成員的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-109">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4aac9-110">取得 <see cref="T:System.Reflection.FieldInfo" /> 物件陣列，這些物件對應於目前指令碼物件的所有欄位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-110">Gets an array of <see cref="T:System.Reflection.FieldInfo" /> objects that correspond to all fields of the current script object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4aac9-111">物件的陣列，包含目前指令碼物件的所有欄位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-111">An array of objects that contains all fields of the current script object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMember : string * System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="scriptObject.GetMember (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="4aac9-112">要搜尋的成員名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-112">The name of the member to search for.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="4aac9-113">列舉值的位元組合，指定透過反映處理搜尋成員的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-113">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4aac9-114">在衍生類別中覆寫時，取得 <see cref="T:System.Reflection.MemberInfo" /> 物件的陣列，這些物件對應於所有符合指定之名稱的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-114">When overridden in a derived class, gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond to all members that match a specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4aac9-115">與 <paramref name="name" /> 引數相符的物件陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-115">An array of objects that match the <paramref name="name" /> argument.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMembers : System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="scriptObject.GetMembers bindingAttr" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="4aac9-116">列舉值的位元組合，指定透過反映處理搜尋成員的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-116">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4aac9-117">在衍生類別中覆寫時，取得 <see cref="T:System.Reflection.MemberInfo" /> 物件的陣列，這些物件對應於目前指令碼物件的所有成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-117">When overridden in a derived class, gets an array of <see cref="T:System.Reflection.MemberInfo" /> objects that correspond to all members of the current script object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4aac9-118">物件的陣列，包含目前指令碼物件的所有成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-118">An array of objects that contains all members of the current script object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethod">
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4aac9-119">取得具有指定之名稱的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-119">Gets a method that has a specified name.</span>
          </span>
        </summary>
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethod (name As String, bindingAttr As BindingFlags) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo&#xA;override this.GetMethod : string * System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo" Usage="scriptObject.GetMethod (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="4aac9-120">要取得的方法名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-120">The name of the method to get.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="4aac9-121">列舉值的位元組合，指定透過反映處理搜尋成員的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-121">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4aac9-122">取得具有指定之名稱的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-122">Gets a method that has the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4aac9-123">具有指定之 <paramref name="name" /> 的方法，如果指令碼物件不包含方法則為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-123">A method that has the specified <paramref name="name" />, or null if the script object does not contain the method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodInfo&#xA;override this.GetMethod : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodInfo" Usage="scriptObject.GetMethod (name, bindingAttr, binder, types, modifiers)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="4aac9-124">要搜尋的方法名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-124">The name of the method to search for.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="4aac9-125">列舉值的位元組合，指定透過反映處理搜尋成員的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-125">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="4aac9-126">將型別從實質引數型別轉換成型式引數型別的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-126">An object that performs type conversion from actual argument type to formal argument type.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="4aac9-127">用來找出相符方法的參數型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-127">The parameter types that are used to locate a matching method.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="4aac9-128">參數修飾詞的陣列，啟用繫結以使用型別已被修改的參數簽章。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-128">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4aac9-129">藉由使用指定的選取準則，取得具有指定之名稱的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-129">Gets a method that has the specified name by using the specified selection criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4aac9-130">具有指定之 <paramref name="name" /> 的方法，如果指令碼物件不包含方法則為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-130">A method that has the specified <paramref name="name" />, or null if the script object does not contain the method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMethods (bindingAttr As BindingFlags) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMethods : System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo[]&#xA;override this.GetMethods : System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo[]" Usage="scriptObject.GetMethods bindingAttr" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="4aac9-131">列舉值的位元組合，指定透過反映處理搜尋成員的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-131">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4aac9-132">取得 <see cref="T:System.Reflection.MethodInfo" /> 物件陣列，這些物件對應於目前指令碼物件的所有方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-132">Gets an array of <see cref="T:System.Reflection.MethodInfo" /> objects that correspond to all methods of the current script object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4aac9-133">物件的陣列，包含目前指令碼物件的所有方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-133">An array of objects that contains all methods of the current script object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetParent">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.ScriptObject GetParent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.JScript.ScriptObject GetParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.GetParent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParent () As ScriptObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::ScriptObject ^ GetParent();" />
      <MemberSignature Language="F#" Value="member this.GetParent : unit -&gt; Microsoft.JScript.ScriptObject" Usage="scriptObject.GetParent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.ScriptObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4aac9-134">取得父物件的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-134">Gets a reference to the parent object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4aac9-135">父物件的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-135">A reference to the parent object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aac9-136">父代是指令碼物件將委派要求的屬性或方法，它不會實作本身的物件。</span><span class="sxs-lookup"><span data-stu-id="4aac9-136">The parent is the object to which the script object delegates requests for properties or methods that it does not implement itself.</span></span> <span data-ttu-id="4aac9-137">例如，當您建立<xref:Microsoft.JScript.NumberObject>利用<xref:Microsoft.JScript.NumberConstructor>，父代是<xref:Microsoft.JScript.NumberPrototype>。</span><span class="sxs-lookup"><span data-stu-id="4aac9-137">For example, when you create a <xref:Microsoft.JScript.NumberObject> by using a <xref:Microsoft.JScript.NumberConstructor>, the parent is a <xref:Microsoft.JScript.NumberPrototype>.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo[]&#xA;override this.GetProperties : System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo[]" Usage="scriptObject.GetProperties bindingAttr" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">
          <span data-ttu-id="4aac9-138">列舉值的位元組合，指定透過反映處理搜尋成員的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-138">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4aac9-139">取得 <see cref="T:System.Reflection.PropertyInfo" /> 物件陣列，這些物件對應於目前指令碼物件的所有屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-139">Gets an array of <see cref="T:System.Reflection.PropertyInfo" /> objects that correspond to all properties of the current script object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4aac9-140">物件的陣列，包含目前指令碼物件的所有屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-140">An array of objects that contains all properties of the current script object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperty">
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4aac9-141">取得具有指定之名稱的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-141">Gets a property that has a specified name.</span>
          </span>
        </summary>
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, bindingAttr As BindingFlags) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo&#xA;override this.GetProperty : string * System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo" Usage="scriptObject.GetProperty (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="4aac9-142">要取得的屬性名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-142">The name of the property to get.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="4aac9-143">列舉值的位元組合，指定透過反映處理搜尋成員的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-143">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4aac9-144">取得具有指定之名稱的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-144">Gets a property that has the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4aac9-145">具有指定之 <paramref name="name" /> 的屬性，如果指令碼物件不包含屬性則為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-145">A property that has the specified <paramref name="name" />, or null if the script object does not contain the property.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.PropertyInfo&#xA;override this.GetProperty : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.PropertyInfo" Usage="scriptObject.GetProperty (name, bindingAttr, binder, returnType, types, modifiers)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="4aac9-146">要搜尋的屬性名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-146">The name of the property to search for.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="4aac9-147">列舉值的位元組合，指定透過反映處理搜尋成員的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-147">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="4aac9-148">將型別從實質引數型別轉換成型式引數型別的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-148">An object that performs type conversion from actual argument type to formal argument type.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="4aac9-149">屬性必須具有之傳回值的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-149">The type of the return value that the property must have.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="4aac9-150">要被搜尋的索引屬性型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-150">The index types of the property being searched for.</span>
          </span>
          <span data-ttu-id="4aac9-151">用於索引屬性，例如類別的索引子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-151">Used for index properties, such as the indexer for a class.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="4aac9-152">參數修飾詞的陣列，啟用繫結以使用型別已被修改的參數簽章。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-152">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4aac9-153">藉由使用指定的選取準則，取得具有指定之名稱的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-153">Gets a property that has the specified name by using the specified selection criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4aac9-154">具有指定之 <paramref name="name" /> 的屬性，如果指令碼物件不包含屬性則為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-154">A property that has the specified <paramref name="name" />, or null if the script object does not contain the property.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public virtual object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo locale, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo locale, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ locale, cli::array &lt;System::String ^&gt; ^ namedParameters);" />
      <MemberSignature Language="F#" Value="abstract member InvokeMember : string * System.Reflection.BindingFlags * System.Reflection.Binder * obj * obj[] * System.Reflection.ParameterModifier[] * System.Globalization.CultureInfo * string[] -&gt; obj&#xA;override this.InvokeMember : string * System.Reflection.BindingFlags * System.Reflection.Binder * obj * obj[] * System.Reflection.ParameterModifier[] * System.Globalization.CultureInfo * string[] -&gt; obj" Usage="scriptObject.InvokeMember (name, invokeAttr, binder, target, args, modifiers, locale, namedParameters)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="locale" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="4aac9-155">要叫用的成員名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-155">The name of the member to invoke.</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="4aac9-156">列舉值的位元組合，指定透過反映處理搜尋成員的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-156">A bitwise combination of the enumeration values that specifies how the search for members is conducted by reflection.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="4aac9-157">將型別從實質引數型別轉換成型式引數型別的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-157">An object that performs type conversion from actual argument type to formal argument type.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="4aac9-158">要在其上叫用成員的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-158">The object on which to invoke the member.</span>
          </span>
          <span data-ttu-id="4aac9-159">這必須是目前的指令碼物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-159">This must be the current script object.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="4aac9-160">物件陣列，包含要叫用的成員參數的數目、順序和型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-160">An array of objects that contains the number, order, and type of the parameters of the member to be invoked.</span>
          </span>
          <span data-ttu-id="4aac9-161">如果沒有參數，則這是空陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-161">This is an empty array if there are no parameters.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="4aac9-162">陣列，其長度與 args 參數相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-162">An array that has the same length as the args parameter.</span>
          </span>
          <span data-ttu-id="4aac9-163">它表示中繼資料內叫用的成員之引數屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-163">It represents the invoked member's argument attributes in the metadata.</span>
          </span>
        </param>
        <param name="locale">
          <span data-ttu-id="4aac9-164">提供特定文化特性或地區設定的相關資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-164">Provides information about a specific culture or locale.</span>
          </span>
          <span data-ttu-id="4aac9-165">用來正確格式化數字、日期和字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-165">Used to format numbers, dates, and strings correctly.</span>
          </span>
        </param>
        <param name="namedParameters">
          <span data-ttu-id="4aac9-166">參數的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-166">An array of parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4aac9-167">叫用 (Invoke) 指定的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-167">Invokes the specified member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4aac9-168">成員呼叫的傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-168">The return value of the call to the member.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4aac9-169">取得或設定指令碼物件的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-169">Gets or sets a member of the script object.</span>
          </span>
        </summary>
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[double index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(float64)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.ScriptObject.Item(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Double) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[double] { System::Object ^ get(double index); void set(double index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(double) : obj with get, set" Usage="Microsoft.JScript.ScriptObject.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="4aac9-170">成員的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-170">The index of the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4aac9-171">取得或設定指定的 <see cref="T:System.Double" /> 索引值所指派指令碼物件的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-171">Gets or sets a member of the script object that is designated by the specified <see cref="T:System.Double" /> index value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4aac9-172">位於 <paramref name="index" /> 之成員的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-172">The value of the member that is at <paramref name="index" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.ScriptObject.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="Microsoft.JScript.ScriptObject.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="4aac9-173">成員的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-173">The index of the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4aac9-174">取得或設定指定的 <see cref="T:System.Int32" /> 索引值所指派指令碼物件的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-174">Gets or sets a member of the script object that is designated by the specified <see cref="T:System.Int32" /> index value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4aac9-175">位於 <paramref name="index" /> 之成員的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-175">The value of the member that is at <paramref name="index" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[params object[] pars] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object[])" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.ScriptObject.Item(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(ParamArray pars As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[cli::array &lt;System::Object ^&gt; ^] { System::Object ^ get(... cli::array &lt;System::Object ^&gt; ^ pars); void set(... cli::array &lt;System::Object ^&gt; ^ pars, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj[]) : obj with get, set" Usage="Microsoft.JScript.ScriptObject.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pars" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="pars">
          <span data-ttu-id="4aac9-176">成員的名稱或索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-176">The name or index of the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4aac9-177">取得或設定指定的名稱、<see cref="T:System.Double" /> 索引值或 <see cref="T:System.Int32" /> 索引值所指派指令碼物件的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-177">Gets or sets a member of the script object that is designated by the specified name, <see cref="T:System.Double" /> index value, or <see cref="T:System.Int32" /> index value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4aac9-178">
            <paramref name="pars" /> 中指定之成員的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-178">The value of the member that is specified in <paramref name="pars" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aac9-179">如果`pars`陣列具有多個項目，最後一個項目是這個屬性的引數。</span><span class="sxs-lookup"><span data-stu-id="4aac9-179">If the `pars` array has more than one element, the last element is the argument for this property.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string name] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.ScriptObject.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); void set(System::String ^ name, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="Microsoft.JScript.ScriptObject.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="4aac9-180">成員的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-180">The name of the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4aac9-181">取得或設定指定的名稱所指派指令碼物件的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-181">Gets or sets a member of the script object that is designated by the specified name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4aac9-182">名為 <paramref name="name" /> 之成員的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-182">The value of the member that is named <paramref name="name" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="parent">
      <MemberSignature Language="C#" Value="protected Microsoft.JScript.ScriptObject parent;" />
      <MemberSignature Language="ILAsm" Value=".field family class Microsoft.JScript.ScriptObject parent" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.ScriptObject.parent" />
      <MemberSignature Language="VB.NET" Value="Protected parent As ScriptObject " />
      <MemberSignature Language="C++ CLI" Value="protected: Microsoft::JScript::ScriptObject ^ parent;" />
      <MemberSignature Language="F#" Value="val mutable parent : Microsoft.JScript.ScriptObject" Usage="Microsoft.JScript.ScriptObject.parent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.ScriptObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4aac9-183">儲存父物件的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-183">Stores a reference to the parent object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aac9-184">父代是指令碼物件將委派要求的屬性或方法，它不會實作本身的物件。</span><span class="sxs-lookup"><span data-stu-id="4aac9-184">The parent is the object to which the script object delegates requests for properties or methods that it does not implement itself.</span></span> <span data-ttu-id="4aac9-185">例如，當您建立<xref:Microsoft.JScript.NumberObject>利用<xref:Microsoft.JScript.NumberConstructor>，父代是<xref:Microsoft.JScript.NumberPrototype>。</span><span class="sxs-lookup"><span data-stu-id="4aac9-185">For example, when you create a <xref:Microsoft.JScript.NumberObject> by using a <xref:Microsoft.JScript.NumberConstructor>, the parent is a <xref:Microsoft.JScript.NumberPrototype>.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSystemType">
      <MemberSignature Language="C#" Value="public virtual Type UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JScript.ScriptObject.UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UnderlyingSystemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ UnderlyingSystemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingSystemType : Type" Usage="Microsoft.JScript.ScriptObject.UnderlyingSystemType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Reflection.IReflect.UnderlyingSystemType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4aac9-186">取得指令碼物件的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-186">Gets the type of the script object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4aac9-187">指令碼物件的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-187">The type of the script object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WrapMembers">
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4aac9-188">建立「包裝的」物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-188">Creates *wrapped* objects.</span>
          </span>
          <span data-ttu-id="4aac9-189">每個包裝物件都會包含一個成員 (欄位、屬性或方法) 的資訊，連同成員定義所在之具現化物件的複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-189">Each wrapped object contains the information for one member (field, property, or method), together with a copy of the instantiated object that the member is defined on.</span>
          </span>
          <span data-ttu-id="4aac9-190">這樣可讓其他未包含成員的物件進行儲存，然後就像傳回自己的值一般傳回其值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-190">This enables other objects that do not contain the member to store it and then return its value as if it were their own.</span>
          </span>
        </summary>
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </MemberGroup>
    <Member MemberName="WrapMembers">
      <MemberSignature Language="C#" Value="protected static System.Reflection.MemberInfo[] WrapMembers (System.Reflection.MemberInfo member, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Reflection.MemberInfo[] WrapMembers(class System.Reflection.MemberInfo member, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function WrapMembers (member As MemberInfo, obj As Object) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ WrapMembers(System::Reflection::MemberInfo ^ member, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member WrapMembers : System.Reflection.MemberInfo * obj -&gt; System.Reflection.MemberInfo[]" Usage="Microsoft.JScript.ScriptObject.WrapMembers (member, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="4aac9-191">要包裝的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-191">The member to wrap.</span>
          </span>
        </param>
        <param name="obj">
          <span data-ttu-id="4aac9-192">「成員」<c></c>定義所在的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-192">The object that <c>member</c> is defined on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4aac9-193">建立包裝物件，其中包含指定的成員與指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-193">Creates a wrapped object that contains the specified member together with the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4aac9-194">具有包裝物件的單一元素陣列，這個物件包含成員資訊和 <paramref name="obj" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-194">A one-element array that has a wrapped object that contains the member information and <paramref name="obj" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aac9-195">這個方法可讓其他物件不包含要儲存它，然後傳回其值，就好像他們自己的成員。</span><span class="sxs-lookup"><span data-stu-id="4aac9-195">This method enables other objects that do not contain the member to store it and then return its value as if it were their own.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="WrapMembers">
      <MemberSignature Language="C#" Value="protected static System.Reflection.MemberInfo[] WrapMembers (System.Reflection.MemberInfo[] members, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Reflection.MemberInfo[] WrapMembers(class System.Reflection.MemberInfo[] members, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function WrapMembers (members As MemberInfo(), obj As Object) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ WrapMembers(cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ members, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member WrapMembers : System.Reflection.MemberInfo[] * obj -&gt; System.Reflection.MemberInfo[]" Usage="Microsoft.JScript.ScriptObject.WrapMembers (members, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="members" Type="System.Reflection.MemberInfo[]" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="members">
          <span data-ttu-id="4aac9-196">要包裝的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-196">The members to wrap.</span>
          </span>
        </param>
        <param name="obj">
          <span data-ttu-id="4aac9-197">「成員」<c></c>定義所在的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-197">The object that <c>members</c> are defined on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4aac9-198">建立包裝物件的陣列，這些物件包含指定的成員與指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-198">Creates an array of wrapped objects that contain the specified members together with the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4aac9-199">包裝物件的陣列，其中每個物件包含成員資訊和 <paramref name="obj" /> 的複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-199">An array of wrapped objects, each of which contains member information and a copy of <paramref name="obj" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aac9-200">這個方法可讓其他不包含這些成員進行儲存，然後傳回其值，如同它們是他們自己的物件。</span><span class="sxs-lookup"><span data-stu-id="4aac9-200">This method enables other objects that do not contain these members to store them and then return their values as if they were their own.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="WrapMembers">
      <MemberSignature Language="C#" Value="protected static System.Reflection.MemberInfo[] WrapMembers (System.Reflection.MemberInfo[] members, object obj, Microsoft.JScript.SimpleHashtable cache);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Reflection.MemberInfo[] WrapMembers(class System.Reflection.MemberInfo[] members, object obj, class Microsoft.JScript.SimpleHashtable cache) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object,Microsoft.JScript.SimpleHashtable)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function WrapMembers (members As MemberInfo(), obj As Object, cache As SimpleHashtable) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ WrapMembers(cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ members, System::Object ^ obj, Microsoft::JScript::SimpleHashtable ^ cache);" />
      <MemberSignature Language="F#" Value="static member WrapMembers : System.Reflection.MemberInfo[] * obj * Microsoft.JScript.SimpleHashtable -&gt; System.Reflection.MemberInfo[]" Usage="Microsoft.JScript.ScriptObject.WrapMembers (members, obj, cache)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="members" Type="System.Reflection.MemberInfo[]" />
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="cache" Type="Microsoft.JScript.SimpleHashtable" />
      </Parameters>
      <Docs>
        <param name="members">
          <span data-ttu-id="4aac9-201">要包裝的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-201">The members to wrap.</span>
          </span>
        </param>
        <param name="obj">
          <span data-ttu-id="4aac9-202">「成員」<c></c>定義所在的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-202">The object that <c>members</c> are defined on.</span>
          </span>
        </param>
        <param name="cache">
          <span data-ttu-id="4aac9-203">包裝物件的暫時資料儲存區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-203">Temporary data storage for the wrapped objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4aac9-204">建立包裝物件的陣列，這些物件包含指定的成員與指定的物件，並將結果快取至指定的資料儲存區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-204">Creates an array of wrapped objects that contain the specified members together with the specified object, caching the results in the specified data storage.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4aac9-205">包裝物件的陣列，其中每個物件包含成員資訊和 <paramref name="obj" /> 的複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4aac9-205">An array of wrapped objects, each of which contains member information and a copy of <paramref name="obj" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aac9-206">這個方法可讓其他不包含這些成員進行儲存，然後傳回其值，如同它們是他們自己的物件。</span><span class="sxs-lookup"><span data-stu-id="4aac9-206">This method enables other objects that do not contain these members to store them and then return their values as if they were their own.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.JSObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
  </Members>
</Type>