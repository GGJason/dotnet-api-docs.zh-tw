<Type Name="IEnumeratorContract&lt;T&gt;" FullName="System.AddIn.Contract.IEnumeratorContract&lt;T&gt;">
  <TypeSignature Language="C#" Value="public interface IEnumeratorContract&lt;T&gt; : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumeratorContract`1&lt;T&gt; implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.IEnumeratorContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumeratorContract(Of T)&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEnumeratorContract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="7f92e-101">列舉中物件的型別。</span><span class="sxs-lookup"><span data-stu-id="7f92e-101">The type of objects being enumerated.</span></span></typeparam>
    <summary><span data-ttu-id="7f92e-102">列舉 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合中的項目。</span><span class="sxs-lookup"><span data-stu-id="7f92e-102">Enumerates the elements in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f92e-103">列舉程式可以用來讀取集合中的資料，但無法用於修改集合。</span><span class="sxs-lookup"><span data-stu-id="7f92e-103">Enumerators can be used to read the data in the collection, but they cannot be used to modify the collection.</span></span>  
  
 <span data-ttu-id="7f92e-104">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="7f92e-104">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="7f92e-105">在這個位置，傳回值<xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="7f92e-105">At this position, the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> is undefined.</span></span> <span data-ttu-id="7f92e-106">因此，您必須呼叫<xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A>將列舉值前進的第一個元素的集合，然後再呼叫<xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>。</span><span class="sxs-lookup"><span data-stu-id="7f92e-106">Therefore, you must call <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>.</span></span>  
  
 <span data-ttu-id="7f92e-107"><xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> 會傳回相同的物件直到呼叫 <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="7f92e-107"><xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> is called.</span></span> <span data-ttu-id="7f92e-108"><xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> 設定的傳回值<xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>下一個項目。</span><span class="sxs-lookup"><span data-stu-id="7f92e-108"><xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> to the next element.</span></span>  
  
 <span data-ttu-id="7f92e-109">如果<xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="7f92e-109">If <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="7f92e-110">列舉值位於這個位置上，後續呼叫<xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="7f92e-110">When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="7f92e-111">如果最後一個呼叫<xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A>傳回`false`，傳回值<xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="7f92e-111">If the last call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> returned `false`, the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> is undefined.</span></span>  
  
 <span data-ttu-id="7f92e-112">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="7f92e-112">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="7f92e-113">如果對集合進行變更，例如加入、修改或刪除項目，列舉程式會永久失效，且其行為未定義。</span><span class="sxs-lookup"><span data-stu-id="7f92e-113">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public T GetCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T GetCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IEnumeratorContract`1.GetCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrent () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetCurrent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7f92e-114">傳回集合中位於列舉值目前位置的物件。</span><span class="sxs-lookup"><span data-stu-id="7f92e-114">Returns the object in the collection at the current position of the enumerator.</span></span></summary>
        <returns><span data-ttu-id="7f92e-115">集合中位於列舉值目前位置的 <see cref="T:System.AddIn.Contract.IContract" />。</span><span class="sxs-lookup"><span data-stu-id="7f92e-115">The <see cref="T:System.AddIn.Contract.IContract" /> in the collection at the current position of the enumerator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f92e-116">傳回值<xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>未定義任何下列情況：</span><span class="sxs-lookup"><span data-stu-id="7f92e-116">The return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="7f92e-117">列舉程式位在集合中的第一個項目之前立即建立列舉值之後或在之後<xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="7f92e-117">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or after <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> is called.</span></span> <span data-ttu-id="7f92e-118"><xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> 必須呼叫以將列舉值前進的第一個元素的集合，然後再呼叫<xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>。</span><span class="sxs-lookup"><span data-stu-id="7f92e-118"><xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before calling <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>.</span></span>  
  
-   <span data-ttu-id="7f92e-119">在上次呼叫<xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A>傳回`false`，表示集合的結尾。</span><span class="sxs-lookup"><span data-stu-id="7f92e-119">The last call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
-   <span data-ttu-id="7f92e-120">列舉值會因為在集合中，例如加入、 修改或刪除的項目所做的變更而失效。</span><span class="sxs-lookup"><span data-stu-id="7f92e-120">The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</span></span>  
  
 <span data-ttu-id="7f92e-121"><xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> 會傳回相同的物件直到呼叫 <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="7f92e-121"><xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> returns the same object until <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> is called.</span></span> <span data-ttu-id="7f92e-122"><xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> 設定的傳回值<xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>下一個項目。</span><span class="sxs-lookup"><span data-stu-id="7f92e-122"><xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> sets the return value of <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> to the next element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IEnumeratorContract`1.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7f92e-123">將列舉值往前推至下集合中的下一個項目。</span><span class="sxs-lookup"><span data-stu-id="7f92e-123">Advances the enumerator to the next element of the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="7f92e-124">如果列舉值成功前移至下一個項目，則為 <see langword="true" />；如果列舉值超過集合的結尾，則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7f92e-124"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f92e-125">建立列舉值之後或在之後<xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A>方法呼叫，列舉程式位在集合中第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="7f92e-125">After an enumerator is created or after the <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> method is called, an enumerator is positioned before the first element of the collection.</span></span> <span data-ttu-id="7f92e-126">第一次呼叫<xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A>方法會進入第一個項目集合的列舉值。</span><span class="sxs-lookup"><span data-stu-id="7f92e-126">The first call to the <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> method moves the enumerator to the first element of the collection.</span></span>  
  
 <span data-ttu-id="7f92e-127">如果<xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="7f92e-127">If <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="7f92e-128">列舉值位於這個位置上，後續呼叫<xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A>也會傳回`false`直到<xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="7f92e-128">When the enumerator is at this position, subsequent calls to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> also return `false` until <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="7f92e-129">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="7f92e-129">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="7f92e-130">如果變更集合，例如加入、 修改或刪除項目，列舉程式會永久失效，而且下次呼叫<xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A>或<xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A>會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="7f92e-130">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7f92e-131">建立列舉值之後，集合已修改。</span><span class="sxs-lookup"><span data-stu-id="7f92e-131">The collection was modified after the enumerator was created.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IEnumeratorContract`1.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7f92e-132">設定列舉值至它的初始位置，這是在集合中第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="7f92e-132">Sets the enumerator to its initial position, which is before the first element in the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f92e-133">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="7f92e-133">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="7f92e-134">如果變更集合，例如加入、 修改或刪除項目，列舉程式會永久失效，而且下次呼叫<xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A>或<xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A>會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="7f92e-134">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> or <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7f92e-135">建立列舉值之後，集合已修改。</span><span class="sxs-lookup"><span data-stu-id="7f92e-135">The collection was modified after the enumerator was created.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>