<Type Name="IListContract&lt;T&gt;" FullName="System.AddIn.Contract.IListContract&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="42074f6c821bba4afe477b1ae63362f1d0855934" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37705555" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IListContract&lt;T&gt; : System.AddIn.Contract.IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IListContract`1&lt;T&gt; implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.IListContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IListContract(Of T)&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IListContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IListContract&lt;'T&gt; = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="fe9fa-101">清單中物件的合約型別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="fe9fa-101">The contract type of the objects in the list.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="fe9fa-102">表示合約所定義的型別泛型清單，您可以使用此型別在主應用程式和增益集之間傳遞該合約型別的集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="fe9fa-102">Represents a generic list of types that are defined by a contract and are used to pass collections of that contract type between a host and an add-in.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe9fa-103"><xref:System.AddIn.Pipeline.CollectionAdapters>類別會使用<xref:System.AddIn.Contract.IListContract%601>雙向，主機和增益集之間傳遞集合的介面。</span><span class="sxs-lookup"><span data-stu-id="fe9fa-103">The <xref:System.AddIn.Pipeline.CollectionAdapters> class uses an <xref:System.AddIn.Contract.IListContract%601> interface to pass collections, in both directions, between the host and the add-in.</span></span> <span data-ttu-id="fe9fa-104">建議您改用<xref:System.AddIn.Pipeline.CollectionAdapters>而不是直接在您的程式碼中使用這個類別的類別。</span><span class="sxs-lookup"><span data-stu-id="fe9fa-104">It is recommended that you use the <xref:System.AddIn.Pipeline.CollectionAdapters> class instead of using this class directly in your code.</span></span> <span data-ttu-id="fe9fa-105">如需範例，請參閱[逐步解說： 將集合之間的主機和增益集](http://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5)。</span><span class="sxs-lookup"><span data-stu-id="fe9fa-105">For an example, see [Walkthrough: Passing Collections Between Hosts and Add-Ins](http://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5).</span></span>  
  
 <span data-ttu-id="fe9fa-106">這個類別可用來傳遞物件參考，應用程式定義域之間因為物件不會序列化。</span><span class="sxs-lookup"><span data-stu-id="fe9fa-106">This class can be used to pass objects by reference between application domains because the objects are not serialized.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(T item);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'T -&gt; unit" Usage="iListContract.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="fe9fa-107">要加入的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-107">The object to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe9fa-108">將物件加入至 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-108">Adds an object to an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe9fa-109">`item`參數必須由合約所定義的類型。</span><span class="sxs-lookup"><span data-stu-id="fe9fa-109">The `item` parameter must be of a type that is defined by the contract.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit" Usage="iListContract.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe9fa-110">從 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合移除所有物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-110">Removes all objects from an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(T item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool" Usage="iListContract.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="fe9fa-111">要在集合中搜尋的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-111">The object to look for in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe9fa-112">判斷特定項目是否存在 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-112">Determines whether a specific item is in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe9fa-113">如果 <see langword="true" /> 在集合中，則為 <paramref name="item" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-113">
              <see langword="true" /> if <paramref name="item" /> is in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCount">
      <MemberSignature Language="C#" Value="public int GetCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetCount" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCount () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCount();" />
      <MemberSignature Language="F#" Value="abstract member GetCount : unit -&gt; int" Usage="iListContract.GetCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe9fa-114">取得 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合中的項目數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-114">Gets the number of items in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe9fa-115">集合中的項目數目</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-115">The number of items in the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorContract">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.IEnumeratorContract&lt;T&gt; GetEnumeratorContract ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.IEnumeratorContract`1&lt;!T&gt; GetEnumeratorContract() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetEnumeratorContract" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumeratorContract () As IEnumeratorContract(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::IEnumeratorContract&lt;T&gt; ^ GetEnumeratorContract();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumeratorContract : unit -&gt; System.AddIn.Contract.IEnumeratorContract&lt;'T&gt;" Usage="iListContract.GetEnumeratorContract " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IEnumeratorContract&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe9fa-116">傳回會逐一查看 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合的列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-116">Returns an enumerator that iterates through an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe9fa-117">在集合中逐一查看的 <see cref="T:System.AddIn.Contract.IEnumeratorContract`1" /> 列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-117">An <see cref="T:System.AddIn.Contract.IEnumeratorContract`1" /> enumerator to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsReadOnly">
      <MemberSignature Language="C#" Value="public bool GetIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsReadOnly();" />
      <MemberSignature Language="F#" Value="abstract member GetIsReadOnly : unit -&gt; bool" Usage="iListContract.GetIsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe9fa-118">判斷 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合是否唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-118">Determines whether an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe9fa-119">如果集合是唯讀，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-119">
              <see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public T GetItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T GetItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem (index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetItem(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetItem : int -&gt; 'T" Usage="iListContract.GetItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="fe9fa-120">要取得的項目之索引 (此索引以零為起始)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-120">The zero-based index of the item to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe9fa-121">傳回 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合之指定索引處的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-121">Returns the item at the specified index of an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe9fa-122">在指定之索引處的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-122">The item at the specified index.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe9fa-123"><xref:System.AddIn.Contract.IListContract%601.GetItem%2A>方法不會移除指定索引處的項目。</span><span class="sxs-lookup"><span data-stu-id="fe9fa-123">The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index.</span></span> <span data-ttu-id="fe9fa-124">若要移除的項目<xref:System.AddIn.Contract.IListContract%601>收集、 使用<xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fe9fa-124">To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="fe9fa-125">
            <paramref name="index" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-125">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="fe9fa-126">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-126">-or-</span>
          </span>
          <span data-ttu-id="fe9fa-127">
            <paramref name="index" /> 等於或大於 <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> 的傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-127">
              <paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'T -&gt; int" Usage="iListContract.IndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="fe9fa-128">集合中的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-128">An item in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe9fa-129">傳回 <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> 集合中特定項目的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-129">Returns the index of a specific item in an <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe9fa-130">指定之項目的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-130">The index of the specified item.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe9fa-131">如果有數個相同型別的集合中的物件，這個方法會識別所指定的型別集合中第一個出現項目的索引。</span><span class="sxs-lookup"><span data-stu-id="fe9fa-131">If there are several objects of the same type in the collection, this method identifies the index of the item that is the first occurrence of the specified type in the collection.</span></span>  
  
 <span data-ttu-id="fe9fa-132"><xref:System.AddIn.Contract.IListContract%601.GetItem%2A>方法不會移除指定索引處的項目。</span><span class="sxs-lookup"><span data-stu-id="fe9fa-132">The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index.</span></span> <span data-ttu-id="fe9fa-133">若要移除的項目<xref:System.AddIn.Contract.IListContract%601>收集、 使用<xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fe9fa-133">To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="fe9fa-134">
            <paramref name="index" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-134">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="fe9fa-135">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-135">-or-</span>
          </span>
          <span data-ttu-id="fe9fa-136">
            <paramref name="index" /> 等於或大於 <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> 方法的傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-136">
              <paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * 'T -&gt; unit" Usage="iListContract.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="fe9fa-137">要插入<c>項目</c>的索引位置 (以零為基礎)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-137">The zero-based index at which to insert <c>item</c>.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="fe9fa-138">要插入 <see cref="T:System.AddIn.Contract.IContract" /> 集合中的 <see cref="T:System.AddIn.Contract.IListContract`1" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-138">The <see cref="T:System.AddIn.Contract.IContract" /> object to insert in the <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe9fa-139">將項目插入至 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合中的指定索引處。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-139">Inserts an item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe9fa-140">在您呼叫後<xref:System.AddIn.Contract.IListContract%601.Insert%2A>方法，以容納新的項目移動插入點後面的項目。</span><span class="sxs-lookup"><span data-stu-id="fe9fa-140">After you call the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method, the items that follow the insertion point move to accommodate the new item.</span></span> <span data-ttu-id="fe9fa-141">此外，也會更新所移動之項目的索引。</span><span class="sxs-lookup"><span data-stu-id="fe9fa-141">The indexes of the items that are moved are also updated.</span></span> <span data-ttu-id="fe9fa-142">若要取代的指定索引處的項目，使用<xref:System.AddIn.Contract.IListContract%601.SetItem%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fe9fa-142">To replace an item at a specified index, use the <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method.</span></span>  
  
 <span data-ttu-id="fe9fa-143">若要判斷是否<xref:System.AddIn.Contract.IListContract%601>集合是唯讀的請呼叫<xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fe9fa-143">To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="fe9fa-144">
            <paramref name="index" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-144">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="fe9fa-145">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-145">-or-</span>
          </span>
          <span data-ttu-id="fe9fa-146">
            <paramref name="index" /> 等於或大於 <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> 的傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-146">
              <paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe9fa-147">
            <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-147">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(T item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'T -&gt; bool" Usage="iListContract.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="fe9fa-148">要從集合中移除的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-148">The item to remove from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe9fa-149">從指定之型別的 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合移除項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-149">Removes an item from an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection of a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe9fa-150">如果已移除項目，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-150">
              <see langword="true" /> if an item is removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe9fa-151">您必須針對集合中特定類型的每個物件重複這個方法。</span><span class="sxs-lookup"><span data-stu-id="fe9fa-151">You must repeat this method for each object of a particular type in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="iListContract.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="fe9fa-152">要移除之項目的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-152">The index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe9fa-153">從 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合中移除在指定之索引處的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-153">Removes the item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe9fa-154">在您呼叫後<xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A>，請遵循移除項目的項目移動以佔用空出的位置。</span><span class="sxs-lookup"><span data-stu-id="fe9fa-154">After you call <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A>, the items that follow the removed item move to occupy the vacated spot.</span></span> <span data-ttu-id="fe9fa-155">此外，也會更新所移動之項目的索引。</span><span class="sxs-lookup"><span data-stu-id="fe9fa-155">The indexes of the items that are moved are also updated.</span></span>  
  
 <span data-ttu-id="fe9fa-156">若要判斷是否<xref:System.AddIn.Contract.IListContract%601>集合是唯讀的請呼叫<xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fe9fa-156">To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="fe9fa-157">
            <paramref name="index" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-157">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="fe9fa-158">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-158">-or-</span>
          </span>
          <span data-ttu-id="fe9fa-159">
            <paramref name="index" /> 等於或大於 <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> 方法的傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-159">
              <paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe9fa-160">
            <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-160">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="public void SetItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetItem(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member SetItem : int * 'T -&gt; unit" Usage="iListContract.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="fe9fa-161">要設定項目之以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-161">The zero-based index at which to set the item.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="fe9fa-162">要在指定之索引處設定的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-162">The item to set at the specified index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe9fa-163">在 <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合中的指定之索引處設定項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-163">Sets the item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe9fa-164"><xref:System.AddIn.Contract.IListContract%601.SetItem%2A>方法指定索引處設定項目。</span><span class="sxs-lookup"><span data-stu-id="fe9fa-164">The <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method sets the item at the specified index.</span></span> <span data-ttu-id="fe9fa-165">若要將項目加入<xref:System.AddIn.Contract.IListContract%601>收集、 使用<xref:System.AddIn.Contract.IListContract%601.Insert%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fe9fa-165">To add an item to the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method.</span></span>  
  
 <span data-ttu-id="fe9fa-166">若要判斷是否<xref:System.AddIn.Contract.IListContract%601>集合是唯讀的請呼叫<xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fe9fa-166">To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="fe9fa-167">
            <paramref name="index" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-167">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="fe9fa-168">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-168">-or-</span>
          </span>
          <span data-ttu-id="fe9fa-169">
            <paramref name="index" /> 等於或大於 <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> 方法的傳回值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-169">
              <paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fe9fa-170">
            <see cref="T:System.AddIn.Contract.IListContract`1" /> 集合是唯讀的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe9fa-170">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>