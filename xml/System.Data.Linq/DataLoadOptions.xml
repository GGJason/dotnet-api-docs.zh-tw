<Type Name="DataLoadOptions" FullName="System.Data.Linq.DataLoadOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="68d7a106a236150ca9a1a8a2a5972fb7ae8eee39" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39833072" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataLoadOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataLoadOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.DataLoadOptions" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataLoadOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataLoadOptions sealed" />
  <TypeSignature Language="F#" Value="type DataLoadOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="925a8-101">提供以進行相關資料的立即載入和篩選。</span><span class="sxs-lookup"><span data-stu-id="925a8-101">Provides for immediate loading and filtering of related data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="general"></a><span data-ttu-id="925a8-102">一般</span><span class="sxs-lookup"><span data-stu-id="925a8-102">General</span></span>  
 <span data-ttu-id="925a8-103">當您查詢物件時，實際上只擷取了所要求的物件。</span><span class="sxs-lookup"><span data-stu-id="925a8-103">When you query for an object, you actually retrieve only the object you requested.</span></span> <span data-ttu-id="925a8-104">*相關*物件不會自動擷取一次。</span><span class="sxs-lookup"><span data-stu-id="925a8-104">The *related* objects are not automatically fetched at the same time.</span></span> <span data-ttu-id="925a8-105">(如需詳細資訊，請參閱 <<c0> [ 跨關聯性查詢](~/docs/framework/data/adonet/sql/linq/querying-across-relationships.md)。)</span><span class="sxs-lookup"><span data-stu-id="925a8-105">(For more information, see [Querying Across Relationships](~/docs/framework/data/adonet/sql/linq/querying-across-relationships.md).)</span></span>  
  
 <span data-ttu-id="925a8-106"><xref:System.Data.Linq.DataLoadOptions>類別提供兩種方法可以達到指定的相關資料的立即載入。</span><span class="sxs-lookup"><span data-stu-id="925a8-106">The <xref:System.Data.Linq.DataLoadOptions> class provides two methods to achieve immediate loading of specified related data.</span></span> <span data-ttu-id="925a8-107"><xref:System.Data.Linq.DataLoadOptions.LoadWith%2A>方法可讓以立即載入與主要目標相關的資料。</span><span class="sxs-lookup"><span data-stu-id="925a8-107">The <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> method allows for immediate loading of data related to the main target.</span></span> <span data-ttu-id="925a8-108"><xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A>方法是用來篩選相關的物件。</span><span class="sxs-lookup"><span data-stu-id="925a8-108">The <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> method allows for filtering related objects.</span></span>  
  
## <a name="rules"></a><span data-ttu-id="925a8-109">規則</span><span class="sxs-lookup"><span data-stu-id="925a8-109">Rules</span></span>  
 <span data-ttu-id="925a8-110">請注意下列規則有關<xref:System.Data.Linq.DataLoadOptions>使用量：</span><span class="sxs-lookup"><span data-stu-id="925a8-110">Note the following rules regarding <xref:System.Data.Linq.DataLoadOptions> usage:</span></span>  
  
-   <span data-ttu-id="925a8-111">指派<xref:System.Data.Linq.DataLoadOptions>至<xref:System.Data.Linq.DataContext>第一個查詢執行之後會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="925a8-111">Assigning a <xref:System.Data.Linq.DataLoadOptions> to a <xref:System.Data.Linq.DataContext> after the first query has been executed generates an exception.</span></span>  
  
-   <span data-ttu-id="925a8-112">修改<xref:System.Data.Linq.DataLoadOptions>指派給之後<xref:System.Data.Linq.DataContext>產生例外狀況</span><span class="sxs-lookup"><span data-stu-id="925a8-112">Modifying a <xref:System.Data.Linq.DataLoadOptions> after it has been assigned to a <xref:System.Data.Linq.DataContext> generates an exception</span></span>  
  
## <a name="cycle-handling"></a><span data-ttu-id="925a8-113">循環處理</span><span class="sxs-lookup"><span data-stu-id="925a8-113">Cycle Handling</span></span>  
 <span data-ttu-id="925a8-114"><xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> 和<xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A>指示詞不得建立循環。</span><span class="sxs-lookup"><span data-stu-id="925a8-114"><xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> and <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> directives must not create cycles.</span></span> <span data-ttu-id="925a8-115">下列代表此類圖形的範例：</span><span class="sxs-lookup"><span data-stu-id="925a8-115">The following represent examples of such graphs:</span></span>  
  
-   <span data-ttu-id="925a8-116">範例 1︰ 自我遞迴</span><span class="sxs-lookup"><span data-stu-id="925a8-116">Example 1: Self recursive</span></span>  
  
    -   `dlo.LoadWith<Employee>(e => e.Reports);`  
  
-   <span data-ttu-id="925a8-117">範例 2： 上一步 指標</span><span class="sxs-lookup"><span data-stu-id="925a8-117">Example 2: Back-pointers</span></span>  
  
    -   `dlo.LoadWith <Customer>(c => C.Orders);`  
  
    -   `dlo.LoadWith <Order>(o => o.Customer);`  
  
-   <span data-ttu-id="925a8-118">範例 3︰ 較長的循環</span><span class="sxs-lookup"><span data-stu-id="925a8-118">Example 3: Longer cycles</span></span>  
  
     <span data-ttu-id="925a8-119">雖然這不應該發生在已妥善正規化的模型，就可以了。</span><span class="sxs-lookup"><span data-stu-id="925a8-119">Although this should not occur in a well-normalized model, it is possible.</span></span>  
  
    -   `dlo.LoadWith <A>(a => a.Bs);`  
  
    -   `dlo.LoadWith <B>(b => b.Cs);`  
  
    -   `dlo.LoadWith <C>(c => c.As);`  
  
-   <span data-ttu-id="925a8-120">範例 4︰ 自我遞迴的子查詢</span><span class="sxs-lookup"><span data-stu-id="925a8-120">Example 4: Self recursive subQueries</span></span>  
  
    -   `dlo.AssociateWith<A>(a=>a.As.Where(a=>a.Id=33));`  
  
-   <span data-ttu-id="925a8-121">範例 5︰ 長遞迴子查詢</span><span class="sxs-lookup"><span data-stu-id="925a8-121">Example 5: Longer recursive subqueries</span></span>  
  
    -   `dlo.AssociateWith<A>(a=>a.Bs.Where(b=>b.Id==3));`  
  
    -   `dlo.AssociateWith<B>(b=>b.As.Where(a=>a.Id==3));`  
  
 <span data-ttu-id="925a8-122">以下是一些一般的規則可幫助您了解在這些情況下可能發生的狀況。</span><span class="sxs-lookup"><span data-stu-id="925a8-122">The following are some general rules that help you understand what occurs in these scenarios.</span></span>  
  
 <span data-ttu-id="925a8-123">**LoadWith**每次呼叫<xref:System.Data.Linq.DataLoadOptions.LoadWith%2A>會檢查是否已引進循環至圖形。</span><span class="sxs-lookup"><span data-stu-id="925a8-123">**LoadWith** Each call to <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> checks whether cycles have been introduced into the graph.</span></span> <span data-ttu-id="925a8-124">如果有，如範例 1、 2 和 3，例外狀況會擲回。</span><span class="sxs-lookup"><span data-stu-id="925a8-124">If there are, as in Examples 1, 2, and 3, an exception is thrown.</span></span>  
  
 <span data-ttu-id="925a8-125">**AssociateWith**在執行階段引擎不會套用現有的子查詢子句運算式內的關聯性。</span><span class="sxs-lookup"><span data-stu-id="925a8-125">**AssociateWith** The engine at run time does not apply the existing SubQuery clauses to the relationship inside the expression.</span></span>  
  
-   <span data-ttu-id="925a8-126">範例 4`Where`子句會針對所有執行`A`，而不只是子篩選由本身的子查詢運算式 （因為這樣才是遞迴）</span><span class="sxs-lookup"><span data-stu-id="925a8-126">In Example 4, the `Where` clause is executed against all `A`, not just the ones sub-filtered by the SubQuery expression itself (because that would be recursive)</span></span>  
  
-   <span data-ttu-id="925a8-127">範例 5 中，第一個`Where`子句會套用到所有`B`s，即使是在子查詢沒有`B`。</span><span class="sxs-lookup"><span data-stu-id="925a8-127">In Example 5, the first `Where` clause is applied to all the `B`s, even though there are subqueries on `B`.</span></span> <span data-ttu-id="925a8-128">第二個`Where`子句會套用到所有`A`即使是沒有 s 的子查詢上`A`。</span><span class="sxs-lookup"><span data-stu-id="925a8-128">The second `Where` clause is applied to all the `A`s even though there are subqueries on `A`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925a8-129">當您擷取`Customers`從 Northwind 範例資料庫中，您可以使用<xref:System.Data.Linq.DataLoadOptions>以指定`Orders`也是要擷取。</span><span class="sxs-lookup"><span data-stu-id="925a8-129">When you retrieve `Customers` from the Northwind sample database, you can use <xref:System.Data.Linq.DataLoadOptions> to specify that `Orders` is also to be retrieved.</span></span> <span data-ttu-id="925a8-130">您甚至可以指定的哪些子集`Orders`擷取。</span><span class="sxs-lookup"><span data-stu-id="925a8-130">You can even specify which subset of `Orders` to retrieve.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLoadOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataLoadOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="925a8-131">初始化 <see cref="T:System.Data.Linq.DataLoadOptions" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="925a8-131">Initializes a new instance of the <see cref="T:System.Data.Linq.DataLoadOptions" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssociateWith">
      <MemberSignature Language="C#" Value="public void AssociateWith (System.Linq.Expressions.LambdaExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssociateWith(class System.Linq.Expressions.LambdaExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.AssociateWith(System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssociateWith (expression As LambdaExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssociateWith(System::Linq::Expressions::LambdaExpression ^ expression);" />
      <MemberSignature Language="F#" Value="member this.AssociateWith : System.Linq.Expressions.LambdaExpression -&gt; unit" Usage="dataLoadOptions.AssociateWith expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="925a8-132">將查詢識別為用於特定的一對多欄位或屬性。</span><span class="sxs-lookup"><span data-stu-id="925a8-132">Identifies the query to be used on a particular one-to-many field or property.</span></span> <span data-ttu-id="925a8-133">請注意下列事項：</span><span class="sxs-lookup"><span data-stu-id="925a8-133">Note the following:</span></span> 
<span data-ttu-id="925a8-134">如果運算式的開頭不是表示一對多關聯性的欄位或屬性，則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="925a8-134">If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.</span></span>  
  
<span data-ttu-id="925a8-135">如果運算式中出現無效的運算子，則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="925a8-135">If an operator other than a valid operator appears in the expression, an exception is thrown.</span></span> <span data-ttu-id="925a8-136">下列是有效的運算子：</span><span class="sxs-lookup"><span data-stu-id="925a8-136">Valid operators are as follows:</span></span> 
<span data-ttu-id="925a8-137">位置</span><span class="sxs-lookup"><span data-stu-id="925a8-137">Where</span></span> 
<span data-ttu-id="925a8-138">OrderBy</span><span class="sxs-lookup"><span data-stu-id="925a8-138">OrderBy</span></span> 
<span data-ttu-id="925a8-139">ThenBy</span><span class="sxs-lookup"><span data-stu-id="925a8-139">ThenBy</span></span> 
<span data-ttu-id="925a8-140">OrderByDescending</span><span class="sxs-lookup"><span data-stu-id="925a8-140">OrderByDescending</span></span> 
<span data-ttu-id="925a8-141">ThenByDescending</span><span class="sxs-lookup"><span data-stu-id="925a8-141">ThenByDescending</span></span> 
<span data-ttu-id="925a8-142">Take</span><span class="sxs-lookup"><span data-stu-id="925a8-142">Take</span></span></param>
        <summary><span data-ttu-id="925a8-143">篩選針對特定關聯性所擷取的物件。</span><span class="sxs-lookup"><span data-stu-id="925a8-143">Filters the objects retrieved for a particular relationship.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925a8-144">在下列範例中，內部迴圈會逐一查看只有那些`Orders`，尚未運送今天。</span><span class="sxs-lookup"><span data-stu-id="925a8-144">In the following example, the inner loop iterates only over those `Orders` that have not been shipped today.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.DataLoadOptions#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.dataloadoptions/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.DataLoadOptions#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.dataloadoptions/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssociateWith&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void AssociateWith&lt;T&gt; (System.Linq.Expressions.Expression&lt;Func&lt;T,object&gt;&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssociateWith&lt;T&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!T, object&gt;&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.AssociateWith``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssociateWith(Of T) (expression As Expression(Of Func(Of T, Object)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void AssociateWith(System::Linq::Expressions::Expression&lt;Func&lt;T, System::Object ^&gt; ^&gt; ^ expression);" />
      <MemberSignature Language="F#" Value="member this.AssociateWith : System.Linq.Expressions.Expression&lt;Func&lt;'T, obj&gt;&gt; -&gt; unit" Usage="dataLoadOptions.AssociateWith expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925a8-145">要據以查詢的型別。</span><span class="sxs-lookup"><span data-stu-id="925a8-145">The type that is queried against.</span></span>  
  
<span data-ttu-id="925a8-146">如果型別不相符，就會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="925a8-146">If the type is unmapped, an exception is thrown.</span></span></typeparam>
        <param name="expression"><span data-ttu-id="925a8-147">將查詢識別為用於特定的一對多欄位或屬性。</span><span class="sxs-lookup"><span data-stu-id="925a8-147">Identifies the query to be used on a particular one-to-many field or property.</span></span> <span data-ttu-id="925a8-148">請注意下列事項：</span><span class="sxs-lookup"><span data-stu-id="925a8-148">Note the following:</span></span> 
<span data-ttu-id="925a8-149">如果運算式的開頭不是表示一對多關聯性的欄位或屬性，則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="925a8-149">If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.</span></span>  
  
<span data-ttu-id="925a8-150">如果運算式中出現無效的運算子，則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="925a8-150">If an operator other than a valid operator appears in the expression, an exception is thrown.</span></span> <span data-ttu-id="925a8-151">下列是有效的運算子：</span><span class="sxs-lookup"><span data-stu-id="925a8-151">Valid operators are as follows:</span></span> 
<span data-ttu-id="925a8-152">位置</span><span class="sxs-lookup"><span data-stu-id="925a8-152">Where</span></span> 
<span data-ttu-id="925a8-153">OrderBy</span><span class="sxs-lookup"><span data-stu-id="925a8-153">OrderBy</span></span> 
<span data-ttu-id="925a8-154">ThenBy</span><span class="sxs-lookup"><span data-stu-id="925a8-154">ThenBy</span></span> 
<span data-ttu-id="925a8-155">OrderByDescending</span><span class="sxs-lookup"><span data-stu-id="925a8-155">OrderByDescending</span></span> 
<span data-ttu-id="925a8-156">ThenByDescending</span><span class="sxs-lookup"><span data-stu-id="925a8-156">ThenByDescending</span></span> 
<span data-ttu-id="925a8-157">Take</span><span class="sxs-lookup"><span data-stu-id="925a8-157">Take</span></span></param>
        <summary><span data-ttu-id="925a8-158">篩選針對特定關聯性所擷取的物件。</span><span class="sxs-lookup"><span data-stu-id="925a8-158">Filters objects retrieved for a particular relationship.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925a8-159">如需如何避免循環資訊，請參閱<xref:System.Data.Linq.DataLoadOptions>。</span><span class="sxs-lookup"><span data-stu-id="925a8-159">For information about how to avoid cycles, see <xref:System.Data.Linq.DataLoadOptions>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925a8-160">在下列範例中，內部迴圈會逐一查看只有那些`Orders`，尚未運送今天。</span><span class="sxs-lookup"><span data-stu-id="925a8-160">In the following example, the inner loop iterates only over those `Orders` that have not been shipped today.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataLoadOptions#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.dataloadoptions/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.DataLoadOptions#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.dataloadoptions/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssociationCriteria">
      <MemberSignature Language="C#" Value="public bool GetAssociationCriteria (System.Reflection.MemberInfo memberInfo, out System.Linq.Expressions.LambdaExpression associationCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetAssociationCriteria(class System.Reflection.MemberInfo memberInfo, [out] class System.Linq.Expressions.LambdaExpression&amp; associationCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.GetAssociationCriteria(System.Reflection.MemberInfo,System.Linq.Expressions.LambdaExpression@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetAssociationCriteria(System::Reflection::MemberInfo ^ memberInfo, [Runtime::InteropServices::Out] System::Linq::Expressions::LambdaExpression ^ % associationCriteria);" />
      <MemberSignature Language="F#" Value="member this.GetAssociationCriteria : System.Reflection.MemberInfo *  -&gt; bool" Usage="dataLoadOptions.GetAssociationCriteria (memberInfo, associationCriteria)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="associationCriteria" Type="System.Linq.Expressions.LambdaExpression" RefType="out" />
      </Parameters>
      <Docs>
        <param name="memberInfo">To be added.</param>
        <param name="associationCriteria">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImmediate">
      <MemberSignature Language="C#" Value="public bool IsImmediate (System.Reflection.MemberInfo memberInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsImmediate(class System.Reflection.MemberInfo memberInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.IsImmediate(System.Reflection.MemberInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsImmediate(System::Reflection::MemberInfo ^ memberInfo);" />
      <MemberSignature Language="F#" Value="member this.IsImmediate : System.Reflection.MemberInfo -&gt; bool" Usage="dataLoadOptions.IsImmediate memberInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="memberInfo">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadWith">
      <MemberSignature Language="C#" Value="public void LoadWith (System.Linq.Expressions.LambdaExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadWith(class System.Linq.Expressions.LambdaExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.LoadWith(System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadWith (expression As LambdaExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadWith(System::Linq::Expressions::LambdaExpression ^ expression);" />
      <MemberSignature Language="F#" Value="member this.LoadWith : System.Linq.Expressions.LambdaExpression -&gt; unit" Usage="dataLoadOptions.LoadWith expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="925a8-161">可識別相關內容的 lambda 運算式。</span><span class="sxs-lookup"><span data-stu-id="925a8-161">A lambda expression that identifies the related material.</span></span></param>
        <summary><span data-ttu-id="925a8-162">使用 lambda 運算式，擷取與主要目標相關之指定的資料。</span><span class="sxs-lookup"><span data-stu-id="925a8-162">Retrieves specified data related to the main target by using a lambda expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925a8-163">在下列範例中，執行查詢時，會擷取位在倫敦 (London) 之所有 `Orders` 的所有 `Customers`。</span><span class="sxs-lookup"><span data-stu-id="925a8-163">In the following example, all the `Orders` for all the `Customers` who are located in London are retrieved when the query is executed.</span></span> <span data-ttu-id="925a8-164">如此一來，後續存取 `Orders` 物件上的 `Customer` 屬性時，便不會觸發新的資料庫查詢。</span><span class="sxs-lookup"><span data-stu-id="925a8-164">As a result, successive access to the `Orders` property on a `Customer` object does not trigger a new database query.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.DataLoadOptions#2](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.dataloadoptions/cs/program.cs#2)]
 [!code-vb[System.Data.Linq.DataLoadOptions#2](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.dataloadoptions/vb/module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadWith&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void LoadWith&lt;T&gt; (System.Linq.Expressions.Expression&lt;Func&lt;T,object&gt;&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadWith&lt;T&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!T, object&gt;&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.LoadWith``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadWith(Of T) (expression As Expression(Of Func(Of T, Object)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void LoadWith(System::Linq::Expressions::Expression&lt;Func&lt;T, System::Object ^&gt; ^&gt; ^ expression);" />
      <MemberSignature Language="F#" Value="member this.LoadWith : System.Linq.Expressions.Expression&lt;Func&lt;'T, obj&gt;&gt; -&gt; unit" Usage="dataLoadOptions.LoadWith expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="925a8-165">要據以查詢的型別。</span><span class="sxs-lookup"><span data-stu-id="925a8-165">Type that is queried against.</span></span>  
  
<span data-ttu-id="925a8-166">如果此型別不相符，就會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="925a8-166">If this type is unmapped, an exception is thrown.</span></span></typeparam>
        <param name="expression"><span data-ttu-id="925a8-167">識別要擷取的欄位或屬性。</span><span class="sxs-lookup"><span data-stu-id="925a8-167">Identifies the field or property to be retrieved.</span></span>  
  
<span data-ttu-id="925a8-168">如果運算式不是識別為表示一對一或一對多關聯性的欄位或屬性，則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="925a8-168">If the expression does not identify a field or property that represents a one-to-one or one-to-many relationship, an exception is thrown.</span></span></param>
        <summary><span data-ttu-id="925a8-169">指定當送出型別 T 物件的查詢時，要擷取的子物件。</span><span class="sxs-lookup"><span data-stu-id="925a8-169">Specifies which sub-objects to retrieve when a query is submitted for an object of type T.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925a8-170">您不能指定兩個層級關聯性的載入 (例如`Orders.OrderDetails`)。</span><span class="sxs-lookup"><span data-stu-id="925a8-170">You cannot specify the loading of two levels of relationships (for example, `Orders.OrderDetails`).</span></span> <span data-ttu-id="925a8-171">在這些案例中，您必須指定兩個不同<xref:System.Data.Linq.DataLoadOptions.LoadWith%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="925a8-171">In these scenarios you must specify two separate <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> methods.</span></span>  
  
 <span data-ttu-id="925a8-172">若要避免循環，請參閱 < 備註 > 一節中<xref:System.Data.Linq.DataLoadOptions>。</span><span class="sxs-lookup"><span data-stu-id="925a8-172">To avoid cycling, see Remarks section in <xref:System.Data.Linq.DataLoadOptions>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925a8-173">在下列範例中，執行查詢時，會擷取位在倫敦 (London) 之所有 `Orders` 的所有 `Customers`。</span><span class="sxs-lookup"><span data-stu-id="925a8-173">In the following example, all the `Orders` for all the `Customers` who are located in London are retrieved when the query is executed.</span></span> <span data-ttu-id="925a8-174">如此一來，後續存取 `Orders` 物件上的 `Customer` 屬性時，便不會觸發新的資料庫查詢。</span><span class="sxs-lookup"><span data-stu-id="925a8-174">As a result, successive access to the `Orders` property on a `Customer` object does not trigger a new database query.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataLoadOptions#2](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.dataloadoptions/cs/program.cs#2)]
 [!code-vb[System.Data.Linq.DataLoadOptions#2](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.dataloadoptions/vb/module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>