<Type Name="ChangeConflictCollection" FullName="System.Data.Linq.ChangeConflictCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9e8bdaabdb0e53e39a80b9e6d0e3827bcca8fef3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ChangeConflictCollection : System.Collections.Generic.ICollection&lt;System.Data.Linq.ObjectChangeConflict&gt;, System.Collections.Generic.IEnumerable&lt;System.Data.Linq.ObjectChangeConflict&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ChangeConflictCollection extends System.Object implements class System.Collections.Generic.ICollection`1&lt;class System.Data.Linq.ObjectChangeConflict&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Linq.ObjectChangeConflict&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.ChangeConflictCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ChangeConflictCollection&#xA;Implements ICollection, ICollection(Of ObjectChangeConflict), IEnumerable(Of ObjectChangeConflict)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChangeConflictCollection sealed : System::Collections::Generic::ICollection&lt;System::Data::Linq::ObjectChangeConflict ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Data::Linq::ObjectChangeConflict ^&gt;, System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Data.Linq.ObjectChangeConflict&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Data.Linq.ObjectChangeConflict&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="46578-101">傳回涉及並行衝突的物件集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="46578-101">Returns a collection of objects involved in concurrency conflicts.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="46578-102">在下列範例中，擷取發生衝突，物件的相關資訊`db.ChangeConflicts`表示這些物件的集合。</span><span class="sxs-lookup"><span data-stu-id="46578-102">In the following example that retrieves information about objects in conflict, `db.ChangeConflicts` represents the collection of those objects.</span></span>  
  
 [!code-csharp[System.Data.Linq.ObjectChangeConflict#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.objectchangeconflict/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.ObjectChangeConflict#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.objectchangeconflict/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ChangeConflictCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="46578-103">從集合中移除所有的衝突。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-103">Removes all conflicts from the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Data.Linq.ObjectChangeConflict item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Data.Linq.ObjectChangeConflict item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ChangeConflictCollection.Contains(System.Data.Linq.ObjectChangeConflict)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As ObjectChangeConflict) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Data::Linq::ObjectChangeConflict ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Data.Linq.ObjectChangeConflict" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="46578-104">指定的衝突。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-104">The specified conflict.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46578-105">指定特定的衝突是否為集合的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-105">Specifies whether a given conflict is a member of the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46578-106">如果指定的衝突是集合的成員，則傳回 true。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-106">Returns true if the specified conflict is a member of the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Data.Linq.ObjectChangeConflict[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Data.Linq.ObjectChangeConflict[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ChangeConflictCollection.CopyTo(System.Data.Linq.ObjectChangeConflict[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As ObjectChangeConflict(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Data::Linq::ObjectChangeConflict ^&gt; ^ array, int arrayIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Data.Linq.ObjectChangeConflict[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="46578-107">要複製到其中的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-107">The array to copy to.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="46578-108">陣列索引，從這裡開始複製。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-108">The array index where the copy is to start.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46578-109">如需這個成員的說明，請參閱 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-109">For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46578-110">複製集合的項目至陣列。</span><span class="sxs-lookup"><span data-stu-id="46578-110">Copies the elements of the collection to an array.</span></span>  
  
 <span data-ttu-id="46578-111">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="46578-111">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="46578-112">只有在 <xref:System.Data.Linq.ChangeConflictCollection> 執行個體轉換成 <xref:System.Collections.ICollection> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="46578-112">It can be used only when the <xref:System.Data.Linq.ChangeConflictCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.ChangeConflictCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46578-113">傳回集合中衝突的數目</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-113">Returns the number of conflicts in the collection</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="46578-114">整數</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-114">integer</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Data.Linq.ObjectChangeConflict&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Data.Linq.ObjectChangeConflict&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ChangeConflictCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of ObjectChangeConflict)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Data::Linq::ObjectChangeConflict ^&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Data.Linq.ObjectChangeConflict&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="46578-115">傳回集合的列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-115">Returns the enumerator for the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46578-116">集合的列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-116">An enumerator for the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Data.Linq.ObjectChangeConflict this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.ObjectChangeConflict Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.ChangeConflictCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As ObjectChangeConflict" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::ObjectChangeConflict ^ default[int] { System::Data::Linq::ObjectChangeConflict ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.ObjectChangeConflict</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="46578-117">衝突中項目集合內的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-117">Index in the collection of the item in conflict.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46578-118">傳回衝突中的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-118">Returns an item in conflict.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="46578-119">
            <see cref="T:System.Data.Linq.ObjectChangeConflict" />，表示衝突中的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-119">An <see cref="T:System.Data.Linq.ObjectChangeConflict" /> representing the item in conflict.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Data.Linq.ObjectChangeConflict item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Data.Linq.ObjectChangeConflict item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ChangeConflictCollection.Remove(System.Data.Linq.ObjectChangeConflict)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As ObjectChangeConflict) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Data::Linq::ObjectChangeConflict ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Data.Linq.ObjectChangeConflict" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="46578-120">要移除的衝突。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-120">The conflict to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46578-121">指定是否從集合中移除指定的衝突。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-121">Specifies whether the specified conflict is removed from the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46578-122">如果 <see cref="T:System.Data.Linq.ObjectChangeConflict" /> 從集合中移除，則傳回 true。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-122">Returns true if the <see cref="T:System.Data.Linq.ObjectChangeConflict" /> is removed from the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolveAll">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="46578-123">解決集合中所有的衝突。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-123">Resolves all conflicts in the collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResolveAll">
      <MemberSignature Language="C#" Value="public void ResolveAll (System.Data.Linq.RefreshMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAll(valuetype System.Data.Linq.RefreshMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ChangeConflictCollection.ResolveAll(System.Data.Linq.RefreshMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAll (mode As RefreshMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAll(System::Data::Linq::RefreshMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.Linq.RefreshMode" />
      </Parameters>
      <Docs>
        <param name="mode">
          <span data-ttu-id="46578-124">
            <see cref="T:System.Data.Linq.RefreshMode" /> 中其中一個可用的選項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-124">One of the options available in <see cref="T:System.Data.Linq.RefreshMode" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46578-125">使用指定的策略，解決集合中所有的衝突。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-125">Resolves all conflicts in the collection by using the specified strategy.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveAll">
      <MemberSignature Language="C#" Value="public void ResolveAll (System.Data.Linq.RefreshMode mode, bool autoResolveDeletes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAll(valuetype System.Data.Linq.RefreshMode mode, bool autoResolveDeletes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ChangeConflictCollection.ResolveAll(System.Data.Linq.RefreshMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAll (mode As RefreshMode, autoResolveDeletes As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAll(System::Data::Linq::RefreshMode mode, bool autoResolveDeletes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.Linq.RefreshMode" />
        <Parameter Name="autoResolveDeletes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mode">
          <span data-ttu-id="46578-126">用於解決衝突的策略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-126">The strategy to use to resolve the conflict.</span>
          </span>
        </param>
        <param name="autoResolveDeletes">
          <span data-ttu-id="46578-127">如果為 true，則自動解決因已修改物件不再位於資料庫中所造成的衝突。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-127">If true, automatically resolves conflicts that result from a modified object that is no longer in the database.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46578-128">使用指定的策略，解決集合中所有的衝突。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-128">Resolves all conflicts in the collection by using the specified strategy.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Data.Linq.ObjectChangeConflict&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;ObjectChangeConflict&gt;.Add (System.Data.Linq.ObjectChangeConflict item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Data.Linq.ObjectChangeConflict&gt;.Add(class System.Data.Linq.ObjectChangeConflict item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ChangeConflictCollection.System#Collections#Generic#ICollection&lt;System#Data#Linq#ObjectChangeConflict&gt;#Add(System.Data.Linq.ObjectChangeConflict)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (item As ObjectChangeConflict) Implements ICollection(Of ObjectChangeConflict).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Data.Linq.ObjectChangeConflict&gt;.Add(System::Data::Linq::ObjectChangeConflict ^ item) = System::Collections::Generic::ICollection&lt;System::Data::Linq::ObjectChangeConflict ^&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Data.Linq.ObjectChangeConflict" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="46578-129">要新增的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-129">The item to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46578-130">如需這個成員的說明，請參閱 <see cref="M:System.Collections.Generic.ICollection`1.Add(`0)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-130">For a description of this member, see <see cref="M:System.Collections.Generic.ICollection`1.Add(`0)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46578-131">將項目加入至集合。</span><span class="sxs-lookup"><span data-stu-id="46578-131">Adds an item to the collection.</span></span>  
  
 <span data-ttu-id="46578-132">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="46578-132">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="46578-133">只有在 <xref:System.Data.Linq.ChangeConflictCollection> 執行個體轉換成 <xref:System.Collections.Generic.ICollection%601> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="46578-133">It can be used only when the <xref:System.Data.Linq.ChangeConflictCollection> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Data.Linq.ObjectChangeConflict&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Data.Linq.ObjectChangeConflict&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Data.Linq.ObjectChangeConflict&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.ChangeConflictCollection.System#Collections#Generic#ICollection&lt;System#Data#Linq#ObjectChangeConflict&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of ObjectChangeConflict).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;System.Data.Linq.ObjectChangeConflict&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46578-134">如需這個成員的說明，請參閱 <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-134">For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="46578-135">如果該集合為唯讀，則傳回 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-135">Returns <see langword="true" /> if the collection is read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46578-136">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="46578-136">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="46578-137">只有在 <xref:System.Data.Linq.ChangeConflictCollection> 執行個體轉換成 <xref:System.Collections.Generic.ICollection%601> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="46578-137">It can be used only when the <xref:System.Data.Linq.ChangeConflictCollection> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ChangeConflictCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="46578-138">陣列的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-138">Name of the array.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="46578-139">陣列的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-139">Index of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="46578-140">將集合複製至陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-140">Copies the collection to an array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.ChangeConflictCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46578-141">如需這個成員的說明，請參閱 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-141">For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="46578-142">如果已同步處理對集合的存取 (執行緒安全)，則傳回 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-142">Returns <see langword="true" /> if access to the collection is synchronized (thread safe).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46578-143">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="46578-143">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="46578-144">只有在 <xref:System.Data.Linq.ChangeConflictCollection> 執行個體轉換成 <xref:System.Collections.ICollection> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="46578-144">It can be used only when the <xref:System.Data.Linq.ChangeConflictCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.ChangeConflictCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46578-145">如需這個成員的說明，請參閱 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-145">For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="46578-146">傳回物件，這個物件可用來同步處理對集合的存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-146">Returns an object that can be used to synchronize access to the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46578-147">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="46578-147">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="46578-148">只有在 <xref:System.Data.Linq.ChangeConflictCollection> 執行個體轉換成 <xref:System.Collections.ICollection> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="46578-148">It can be used only when the <xref:System.Data.Linq.ChangeConflictCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.ChangeConflictCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="46578-149">如需這個成員的說明，請參閱 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-149">For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="46578-150">逐一查看集合的列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="46578-150">An enumerator that iterates through a collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46578-151">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="46578-151">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="46578-152">只有在 <xref:System.Data.Linq.ChangeConflictCollection> 執行個體轉換成 <xref:System.Collections.IEnumerable> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="46578-152">It can be used only when the <xref:System.Data.Linq.ChangeConflictCollection> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>