<Type Name="ConflictMode" FullName="System.Data.Linq.ConflictMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9f7e6cd613a3e2698ca89532c05fd2d4d9bf12da" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30384672" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ConflictMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ConflictMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.ConflictMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum ConflictMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class ConflictMode" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>指定應該報告並行衝突的時機。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
  
```vb  
db.SubmitChanges(ConflictMode.FailOnFirstConflict)  
```  
  
```csharp  
db.SubmitChanges(ConflictMode.FailOnFirstConflict);  
```  
  
 [!code-csharp[System.Data.Linq.ConflictModeEnumeration#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.conflictmodeenumeration/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.ConflictModeEnumeration#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.conflictmodeenumeration/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ContinueOnConflict">
      <MemberSignature Language="C#" Value="ContinueOnConflict" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Linq.ConflictMode ContinueOnConflict = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Linq.ConflictMode.ContinueOnConflict" />
      <MemberSignature Language="VB.NET" Value="ContinueOnConflict" />
      <MemberSignature Language="C++ CLI" Value="ContinueOnConflict" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.ConflictMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>指定應該嘗試對資料庫進行所有更新，且應累積並行衝突並於處理結束時傳回。</summary>
      </Docs>
    </Member>
    <Member MemberName="FailOnFirstConflict">
      <MemberSignature Language="C#" Value="FailOnFirstConflict" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Linq.ConflictMode FailOnFirstConflict = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Linq.ConflictMode.FailOnFirstConflict" />
      <MemberSignature Language="VB.NET" Value="FailOnFirstConflict" />
      <MemberSignature Language="C++ CLI" Value="FailOnFirstConflict" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.ConflictMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>指定當偵測到第一個並行衝突錯誤時，應該立即停止嘗試對資料庫進行更新。</summary>
      </Docs>
    </Member>
  </Members>
</Type>