<Type Name="MemberChangeConflict" FullName="System.Data.Linq.MemberChangeConflict">
  <TypeSignature Language="C#" Value="public sealed class MemberChangeConflict" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MemberChangeConflict extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.MemberChangeConflict" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MemberChangeConflict" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemberChangeConflict sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="cbace-101">表示由於成員值在用戶端上次讀取後已更新，因此嘗試更新失敗的狀況。</span><span class="sxs-lookup"><span data-stu-id="cbace-101">Represents a situation in which an attempted update fails because member values have been updated since the client last read them.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbace-102">下列範例會示範如何擷取成員衝突的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="cbace-102">The following example shows how to retrieve information about members in conflict.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.MemberChangeConflict#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.memberchangeconflict/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.MemberChangeConflict#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.memberchangeconflict/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CurrentValue">
      <MemberSignature Language="C#" Value="public object CurrentValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.CurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbace-103">取得衝突中成員的目前值。</span><span class="sxs-lookup"><span data-stu-id="cbace-103">Gets the current value of the member in conflict.</span></span></summary>
        <value><span data-ttu-id="cbace-104">衝突中的物件。</span><span class="sxs-lookup"><span data-stu-id="cbace-104">The object in conflict.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DatabaseValue">
      <MemberSignature Language="C#" Value="public object DatabaseValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DatabaseValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.DatabaseValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DatabaseValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DatabaseValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbace-105">取得衝突中成員的資料庫值。</span><span class="sxs-lookup"><span data-stu-id="cbace-105">Gets the database value of the member in conflict.</span></span></summary>
        <value><span data-ttu-id="cbace-106">衝突中物件的值。</span><span class="sxs-lookup"><span data-stu-id="cbace-106">The value of the object in conflict.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsModified">
      <MemberSignature Language="C#" Value="public bool IsModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsModified" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.IsModified" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsModified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsModified { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbace-107">取得值，這個值表示成員資料自從上次資料庫讀取或重新整理後是否變更。</span><span class="sxs-lookup"><span data-stu-id="cbace-107">Gets a value that indicates whether the member data has been changed since the last database read or refresh.</span></span></summary>
        <value>
          <span data-ttu-id="cbace-108">如果成員資料已經變更，則為 <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="cbace-108"><see langword="True" /> if the member data has been changed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbace-109">使用屬性來合併不覆寫擱置中更新的新值。</span><span class="sxs-lookup"><span data-stu-id="cbace-109">Use the property to merge new values without overwriting pending updates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsResolved">
      <MemberSignature Language="C#" Value="public bool IsResolved { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsResolved" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.IsResolved" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsResolved As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsResolved { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbace-110">取得值，這個值表示是否已經解決衝突。</span><span class="sxs-lookup"><span data-stu-id="cbace-110">Gets a value that indicates whether the conflict has been resolved.</span></span></summary>
        <value>
          <span data-ttu-id="cbace-111">如果已經解決衝突，則為 <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="cbace-111"><see langword="True" /> if the conflict has been resolved.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbace-112">這個屬性是唯讀的就會自動更新衝突解決。</span><span class="sxs-lookup"><span data-stu-id="cbace-112">This property is read-only and is automatically updated as conflicts are resolved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo Member { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo Member" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.Member" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Member As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberInfo ^ Member { System::Reflection::MemberInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbace-113">取得衝突中成員的相關中繼資料資訊。</span><span class="sxs-lookup"><span data-stu-id="cbace-113">Gets metadata information about the member in conflict.</span></span></summary>
        <value><span data-ttu-id="cbace-114">衝突中成員的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="cbace-114">Information about the member in conflict.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalValue">
      <MemberSignature Language="C#" Value="public object OriginalValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OriginalValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.MemberChangeConflict.OriginalValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OriginalValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbace-115">取得衝突中成員的原始值。</span><span class="sxs-lookup"><span data-stu-id="cbace-115">Gets the original value of the member in conflict.</span></span></summary>
        <value><span data-ttu-id="cbace-116">衝突中成員的原始值。</span><span class="sxs-lookup"><span data-stu-id="cbace-116">The original value of the member in conflict.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cbace-117">藉由保留目前值以及重設基準原始值以符合較新的資料庫值，解決成員衝突。</span><span class="sxs-lookup"><span data-stu-id="cbace-117">Resolves member conflicts by keeping current values and resetting the baseline original values to match the more recent database values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public void Resolve (System.Data.Linq.RefreshMode refreshMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resolve(valuetype System.Data.Linq.RefreshMode refreshMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.MemberChangeConflict.Resolve(System.Data.Linq.RefreshMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resolve(System::Data::Linq::RefreshMode refreshMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="refreshMode" Type="System.Data.Linq.RefreshMode" />
      </Parameters>
      <Docs>
        <param name="refreshMode"><span data-ttu-id="cbace-118">請參閱 <see cref="T:System.Data.Linq.RefreshMode" />。</span><span class="sxs-lookup"><span data-stu-id="cbace-118">See <see cref="T:System.Data.Linq.RefreshMode" />.</span></span></param>
        <summary><span data-ttu-id="cbace-119">使用 <see cref="T:System.Data.Linq.RefreshMode" /> 參數自動指定要設定為衝突中成員目前值的值。</span><span class="sxs-lookup"><span data-stu-id="cbace-119">Uses a <see cref="T:System.Data.Linq.RefreshMode" /> parameter to automatically specify the value to set as the current value for the member in conflict.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbace-120">下列範例會顯示所使用的各種值產生什麼結果<xref:System.Data.Linq.RefreshMode>。</span><span class="sxs-lookup"><span data-stu-id="cbace-120">The following examples show what results are produced by using the various values for <xref:System.Data.Linq.RefreshMode>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbace-121">下列範例會覆寫目前的值與資料庫中的值。</span><span class="sxs-lookup"><span data-stu-id="cbace-121">The following example overwrites current values with values from the database.</span></span>  
  
 [!code-csharp[System.Data.Linq.RefreshMode#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.RefreshMode#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#1)]  
  
 <span data-ttu-id="cbace-122">下列範例會示範如何從資料庫擷取的值與原始的值交換。</span><span class="sxs-lookup"><span data-stu-id="cbace-122">The following example shows how to swap the original value with the values retrieved from the database.</span></span> <span data-ttu-id="cbace-123">未修改目前的值。</span><span class="sxs-lookup"><span data-stu-id="cbace-123">No current value is modified.</span></span>  
  
 [!code-csharp[System.Data.Linq.RefreshMode#2](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#2)]
 [!code-vb[System.Data.Linq.RefreshMode#2](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#2)]  
  
 <span data-ttu-id="cbace-124">下列範例會保留目前的值已變更，但資料庫值來更新其他值。</span><span class="sxs-lookup"><span data-stu-id="cbace-124">The following example keeps the current values that have been changed, but updates the other values with database values.</span></span>  
  
 [!code-csharp[System.Data.Linq.RefreshMode#3](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.refreshmode/cs/program.cs#3)]
 [!code-vb[System.Data.Linq.RefreshMode#3](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.refreshmode/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public void Resolve (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resolve(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.MemberChangeConflict.Resolve(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resolve (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resolve(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cbace-125">要設定為目前值的值。</span><span class="sxs-lookup"><span data-stu-id="cbace-125">The value to set as the current value.</span></span></param>
        <summary><span data-ttu-id="cbace-126">指定要設定為衝突中成員目前值的值。</span><span class="sxs-lookup"><span data-stu-id="cbace-126">Specifies the value to set as the current value for the member in conflict.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbace-127">這裡設定的值是要用於後續的值<xref:System.Data.Linq.DataContext.SubmitChanges%2A>作業。</span><span class="sxs-lookup"><span data-stu-id="cbace-127">The value set here is the value to be used in a subsequent <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>