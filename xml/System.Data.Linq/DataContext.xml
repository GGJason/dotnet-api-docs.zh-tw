<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataContext.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56cbfb225f9d8295e7bf1faa0cef5897f808b990c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6cbfb225f9d8295e7bf1faa0cef5897f808b990c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.DataContext">
          <source>Represents the main entry point for the LINQ to SQL framework.</source>
          <target state="translated">表示 LINQ to SQL 架構的主要進入點。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source>The <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> is the source of all entities mapped over a database connection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>是透過資料庫連接對應的所有實體的來源。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source>It tracks changes that you made to all retrieved entities and maintains an "identity cache" that guarantees that entities retrieved more than one time are represented by using the same object instance.</source>
          <target state="translated">它會追蹤您對擷取的所有實體的變更，並維護 」 識別快取 」 的實體會擷取超過一次的保證都由使用相同的物件執行個體。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source>In general, a <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> instance is designed to last for one "unit of work" however your application defines that term.</source>
          <target state="translated">一般情況下，<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>執行個體為了最後一個 「 工作單元 」 不過您的應用程式定義的詞彙。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source>A <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> is lightweight and is not expensive to create.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>精簡，不是建立高成本。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source>A typical <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> application creates <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph> instances at method scope or as a member of short-lived classes that represent a logical set of related database operations.</source>
          <target state="translated">一般<ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph>應用程式會建立<ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>在方法範圍內或存留較短的類別，代表一組邏輯的成員身分的執行個體相關的資料庫作業。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.DataContext">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.DataContext">
          <source>The connection string you use can be an ADO.NET connection string.</source>
          <target state="translated">您使用的連接字串可以是 ADO.NET 連接字串。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.DataContext">
          <source>You can also specify a filename to a SQL Server Express or SQL Server Compact file.</source>
          <target state="translated">您也可以指定 SQL Server Express 或 SQL Server Compact 檔案的檔名。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection)">
          <source>The connection used by the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 所使用的連接。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> class by referencing the connection used by the <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">參考 <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 所使用的連接，以初始化 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> opens and closes a database connection as needed if you provide a closed connection or a connection string.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>開啟和關閉資料庫連接，視您關閉的連接或連接字串提供。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection)">
          <source>In general, you should never have to call <ph id="ph1">`Dispose`</ph> on a <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">一般情況下，您應該永遠不需要呼叫<ph id="ph1">`Dispose`</ph>上<ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection)">
          <source>If you provide an open connection, the <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> will not close it.</source>
          <target state="translated">如果您提供的開啟連接，<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>就不會關閉它。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection)">
          <source>Therefore, do not instantiate a <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> with an open connection unless you have a good reason to do this.</source>
          <target state="translated">因此，請勿執行個體化<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>與開啟的連接除非您有很好的理由，若要這樣做。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection)">
          <source>In a <ph id="ph1">&lt;xref:System.Transactions&gt;</ph> transaction, a <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph> will not open or close a connection to avoid promotion.</source>
          <target state="translated">在<ph id="ph1">&lt;xref:System.Transactions&gt;</ph>交易，<ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>無法開啟或關閉的連線，以避免升級。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection,System.Data.Linq.Mapping.MappingSource)">
          <source>The connection used by the .NET Framework.</source>
          <target state="translated">.NET Framework 所使用的連接。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection,System.Data.Linq.Mapping.MappingSource)">
          <source>A source for mapping.</source>
          <target state="translated">對應來源。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection,System.Data.Linq.Mapping.MappingSource)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> class by referencing a connection and a mapping source.</source>
          <target state="translated">參考連接和對應來源，以初始化 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)">
          <source>This argument can be any one of the following:</source>
          <target state="translated">這個引數可以是下列任一項：</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)">
          <source>The name of a file where a SQL Server Express database resides.</source>
          <target state="translated">SQL Server Express 資料庫所在之檔案的名稱。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)">
          <source>The name of a server where a database is present.</source>
          <target state="translated">呈現資料庫之伺服器的名稱。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)">
          <source>In this case the provider uses the default database for a user.</source>
          <target state="translated">在此情況下，提供者會使用使用者的預設資料庫。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)">
          <source>A complete connection string.</source>
          <target state="translated">完整連接字串。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> just passes the string to the provider without modification.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> 只傳遞字串給提供者，但不做修改。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)">
          <source>A source for mapping.</source>
          <target state="translated">對應來源。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> class by referencing a file source and a mapping source.</source>
          <target state="translated">參考檔案來源和對應來源，以初始化 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> class by referencing a file source.</source>
          <target state="translated">參考檔案來源，以初始化 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.DataContext.ChangeConflicts">
          <source>Gets a collection of objects that caused concurrency conflicts when <ph id="ph1">&lt;see cref="M:System.Data.Linq.DataContext.SubmitChanges" /&gt;</ph> was called.</source>
          <target state="translated">取得當呼叫 <ph id="ph1">&lt;see cref="M:System.Data.Linq.DataContext.SubmitChanges" /&gt;</ph> 時，會導致並行存取衝突的物件集合。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.ChangeConflicts">
          <source>A collection of objects that caused concurrency conflicts.</source>
          <target state="translated">導致並行存取衝突之物件的集合。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.ChangeConflicts">
          <source>The following example shows how the collection can be iterated over to retrieve conflict information.</source>
          <target state="translated">下列範例會示範如何集合可逐一擷取衝突資訊。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.DataContext.CommandTimeout">
          <source>Gets or sets a value that increases the time-out period for queries that would otherwise time out during the default time-out period.</source>
          <target state="translated">取得或設定值，該值會增加查詢的逾時期間，否則查詢會在預設逾時期間內逾時。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.CommandTimeout">
          <source>An integer value that increases the time-out period for queries that would otherwise time out during the default time-out period.</source>
          <target state="translated">整數值，該值會增加查詢的逾時期間，否則查詢會在預設逾時期間內逾時。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.CommandTimeout">
          <source>This property gets or sets the command time-out used to execute generated commands (<ph id="ph1">`IDbCommands`</ph>).</source>
          <target state="translated">這個屬性會取得或設定用來執行產生的命令的命令逾時 (<ph id="ph1">`IDbCommands`</ph>)。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.CommandTimeout">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Data.IDbCommand.CommandTimeout%2A&gt;</ph>.</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;xref:System.Data.IDbCommand.CommandTimeout%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.CommandTimeout">
          <source>When this property is not set, the default value of <ph id="ph1">&lt;xref:System.Data.IDbCommand.CommandTimeout%2A&gt;</ph> is used for query command execution.</source>
          <target state="translated">當這個屬性未設定，預設值的<ph id="ph1">&lt;xref:System.Data.IDbCommand.CommandTimeout%2A&gt;</ph>用於執行查詢命令。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.CommandTimeout">
          <source>This default value is set by the storage provider.</source>
          <target state="translated">此預設值是由設定存放裝置提供者。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.CommandTimeout">
          <source>Note that some providers may throw exceptions if this value is set to a non-zero value.</source>
          <target state="translated">請注意，某些提供者可能會擲回例外狀況是否此值設定為非零值。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.DataContext.Connection">
          <source>Gets the connection used by the framework.</source>
          <target state="translated">取得架構所使用的連接。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.Connection">
          <source>The connection used by the framework.</source>
          <target state="translated">Framework 所使用的連接。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.Connection">
          <source>You can use this property to interoperate with relational ADO.NET code.</source>
          <target state="translated">您可以使用這個屬性與關聯式 ADO.NET 程式碼交互操作。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.Connection">
          <source>The returned connection will be closed unless it has been explicitly opened by the user.</source>
          <target state="translated">傳回的連接將會關閉，除非它已由使用者明確地開啟。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.CreateDatabase">
          <source>Creates a database on the server.</source>
          <target state="translated">在伺服器上建立資料庫。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.CreateDatabase">
          <source>The name of the database is derived by using the following algorithm:</source>
          <target state="translated">使用下列演算法來衍生此名稱的資料庫：</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.CreateDatabase">
          <source>If a database is identified in the connection string, its name is used.</source>
          <target state="translated">如果資料庫的連接字串中，使用該名稱。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.CreateDatabase">
          <source>If a <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.DatabaseAttribute&gt;</ph> attribute is present, its <ph id="ph2">&lt;xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A&gt;</ph> property is used as the name of the database.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.Linq.Mapping.DatabaseAttribute&gt;</ph>屬性已存在，其<ph id="ph2">&lt;xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A&gt;</ph>屬性用做為資料庫的名稱。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.CreateDatabase">
          <source>If there is no database tag in the connection string and a strongly typed <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> is used, a database that has the same name as the <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph> inheriting class is checked.</source>
          <target state="translated">如果沒有在連接字串和強型別沒有資料庫標記<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>使用時，具有相同名稱的資料庫<ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>已繼承的類別。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.CreateDatabase">
          <source>If a weakly typed <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> is used, an exception is thrown.</source>
          <target state="translated">如果弱型別<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>是使用，擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.CreateDatabase">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> has been created by using a file name, the database corresponding to that file name is created.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>已建立藉由使用檔案名稱，建立對應到該檔案名稱的資料庫。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.CreateDatabase">
          <source>The following code shows how to set up a temporary database and then remove it.</source>
          <target state="translated">下列程式碼會示範如何設定暫存資料庫並加以移除。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.CreateMethodCallQuery``1(System.Object,System.Reflection.MethodInfo,System.Object[])">
          <source>The type of the elements in the returned collection.</source>
          <target state="translated">所傳回集合中項目的型別。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.CreateMethodCallQuery``1(System.Object,System.Reflection.MethodInfo,System.Object[])">
          <source>The instance of the method invocation (the current object).</source>
          <target state="translated">方法引動過程的執行個體 (目前物件)。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.CreateMethodCallQuery``1(System.Object,System.Reflection.MethodInfo,System.Object[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> that identifies the CLR method that corresponds to a database method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph>，會識別對應至資料庫方法的 CLR 方法。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.CreateMethodCallQuery``1(System.Object,System.Reflection.MethodInfo,System.Object[])">
          <source>The array of parameters to be passed to the command.</source>
          <target state="translated">要傳遞至命令的參數陣列。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.CreateMethodCallQuery``1(System.Object,System.Reflection.MethodInfo,System.Object[])">
          <source>Executes the table-valued database function associated with the specified CLR method.</source>
          <target state="translated">執行與指定之 CLR 方法關聯的資料表值資料庫函式。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.CreateMethodCallQuery``1(System.Object,System.Reflection.MethodInfo,System.Object[])">
          <source>A collection of resultant values returned by the database query.</source>
          <target state="translated">資料庫查詢所傳回結果值的集合。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.CreateMethodCallQuery``1(System.Object,System.Reflection.MethodInfo,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.CreateMethodCallQuery%2A&gt;</ph> method is used in automatically generated code and acts as a proxy to database functions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.CreateMethodCallQuery%2A&gt;</ph>方法用於自動產生的程式碼，並且會做為資料庫函式的 proxy。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.DatabaseExists">
          <source>Determines whether the associated database can be opened.</source>
          <target state="translated">判斷是否可以開啟關聯的資料庫。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.DatabaseExists">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified database can be opened; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果可以開啟指定的資料庫，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.DatabaseExists">
          <source>This method uses the connection in the <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.Connection%2A&gt;</ph> property to attempt to open the associated database.</source>
          <target state="translated">這個方法會使用中的連接<ph id="ph1">&lt;xref:System.Data.Linq.DataContext.Connection%2A&gt;</ph>屬性，以嘗試開啟相關聯的資料庫。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.DatabaseExists">
          <source>The following example uses this method to determine whether a database already exists.</source>
          <target state="translated">下列範例會使用這個方法，判斷資料庫是否已存在。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>Gets or sets a value that indicates whether to delay-load one-to-many or one-to-one relationships.</source>
          <target state="translated">取得或設定值，指出是否要延遲載入一對多或一對一關聯性。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if deferred loading is enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果啟用延後載入則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>When the code accesses one of these relationships, null is returned if the relationship is one-to-one, and an empty collection is returned if it is one-to-many.</source>
          <target state="translated">當程式碼會存取其中一個這些關聯性，null 而且會傳回的關聯性是一對一時，如果它是一對多，會傳回空集合。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>The relationships can still be filled by setting the <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.LoadOptions%2A&gt;</ph> property.</source>
          <target state="translated">關聯性仍然可以藉由設定填入<ph id="ph1">&lt;xref:System.Data.Linq.DataContext.LoadOptions%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>The main scenario for this property is to enable you to extract a piece of the object model and send it out (for example, to a Web service).</source>
          <target state="translated">這個屬性的主要案例是要讓您擷取的物件模型，並將它送出 （例如，至 Web 服務）。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>If this property is set to <ph id="ph1">`false`</ph> after a query has been executed, an exception is thrown.</source>
          <target state="translated">如果這個屬性設定為<ph id="ph1">`false`</ph>執行查詢之後，會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>See the <bpt id="p1">**</bpt>Valid Modes<ept id="p1">**</ept> section below for more information.</source>
          <target state="translated">請參閱<bpt id="p1">**</bpt>有效模式<ept id="p1">**</ept>下面章節，如需詳細資訊。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>Valid modes</source>
          <target state="translated">有效的模式</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>Deferred loading requires object tracking.</source>
          <target state="translated">延後的載入需要物件追蹤。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>Only the following three modes are valid:</source>
          <target state="translated">只有下列三種模式是有效的：</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A&gt;</ph><ph id="ph2"> = </ph><ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A&gt;</ph><ph id="ph2"> = </ph><ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A&gt;</ph> is ignored and inferred to be <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A&gt;</ph> 已忽略，並且會推斷<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>This behavior corresponds to a read-only <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">這個行為會對應至唯讀<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A&gt;</ph><ph id="ph2"> = </ph><ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A&gt;</ph><ph id="ph2"> = </ph><ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A&gt;</ph><ph id="ph2"> = </ph><ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A&gt;</ph><ph id="ph2"> = </ph><ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>This situation corresponds to a <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> that allows users to load an object graph by using <ph id="ph2">&lt;xref:System.Data.Linq.DataLoadOptions.LoadWith%2A&gt;</ph> directives, but it does not enable deferred loading.</source>
          <target state="translated">這種情況下會對應至<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>可讓使用者在使用載入物件圖形<ph id="ph2">&lt;xref:System.Data.Linq.DataLoadOptions.LoadWith%2A&gt;</ph>指示詞，但它不會啟用延後的載入。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>Both are set to <ph id="ph1">`true`</ph>.</source>
          <target state="translated">都設為<ph id="ph1">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>This is the default.</source>
          <target state="translated">這是預設值。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>The flags may not be changed after a query has been executed.</source>
          <target state="translated">在執行查詢之後，可能不會變更旗標。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.DeferredLoadingEnabled">
          <source>Any change after the execution of the first query that uses that <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> throws an exception.</source>
          <target state="translated">會使用該第一個查詢執行之後的任何變更<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.DeleteDatabase">
          <source>Deletes the associated database.</source>
          <target state="translated">刪除關聯的資料庫。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.DeleteDatabase">
          <source>This method uses the connection in the <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.Connection%2A&gt;</ph> property to identify the database to be deleted.</source>
          <target state="translated">這個方法會使用中的連接<ph id="ph1">&lt;xref:System.Data.Linq.DataContext.Connection%2A&gt;</ph>屬性來識別要刪除的資料庫。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.DeleteDatabase">
          <source>The following example shows how to delete a database that has been temporarily created.</source>
          <target state="translated">下列範例會示範如何刪除暫時已建立的資料庫。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.DataContext">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> class.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> 類別所使用的資源。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> class.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> 類別目前的執行個體所使用的資源全部釋出。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示釋放 Managed 和 Unmanaged 資源，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 則表示只釋放 Unmanaged 資源。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> class and optionally releases the managed resource.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> 類別所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>The SQL command to be executed.</source>
          <target state="translated">要執行的 SQL 命令。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>The array of parameters to be passed to the command.</source>
          <target state="translated">要傳遞至命令的參數陣列。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>Note the following behavior:</source>
          <target state="translated">請注意下列情況：</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</source>
          <target state="translated">如果陣列中的物件數目少於命令字串中所識別的最高數目，便會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>If the array contains objects that are not referenced in the command string, no exception is thrown.</source>
          <target state="translated">如果陣列包含命令字串中未參考的物件，則不會擲回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>If any one of the parameters is null, it is converted to <ph id="ph1">&lt;see langword="DBNull.Value" /&gt;</ph>.</source>
          <target state="translated">如果有任一參數為 null，則會轉換成 <ph id="ph1">&lt;see langword="DBNull.Value" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>Executes SQL commands directly on the database.</source>
          <target state="translated">直接在資料庫上執行 SQL 命令。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>The number of rows modified by the executed command.</source>
          <target state="translated">已執行的命令所修改的資料列數。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>This method is a pass-through mechanism for cases where <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> does not adequately provide for a particular scenario.</source>
          <target state="translated">這個方法是案例的傳遞機制其中<ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph>可以充分地提供特定的案例。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>The syntax for the command is almost the same as the syntax used to create an ADO.NET <ph id="ph1">`DataCommand`</ph>.</source>
          <target state="translated">此命令的語法是幾乎完全相同的語法，用於建立 ADO.NET <ph id="ph1">`DataCommand`</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>The only difference is in how the parameters are specified.</source>
          <target state="translated">唯一的差別是中所指定參數。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>Specifically, you specify parameters by enclosing them in braces ({…}) and enumerate them starting from 0.</source>
          <target state="translated">具體來說，只要它們在大括號 （{...}） 指定的參數，並加以列舉從 0 開始。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>The parameter is associated with the equally numbered object in the parameters array.</source>
          <target state="translated">參數陣列中編號相等的物件相關聯的參數。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source><ph id="ph1">`ExecuteQuery`</ph> and <ph id="ph2">`ExecuteCommand`</ph> allow you to specify a variable number of arguments for parameter substitution.</source>
          <target state="translated"><ph id="ph1">`ExecuteQuery`</ph> 和<ph id="ph2">`ExecuteCommand`</ph>讓您指定的變數的參數替代的引數數目。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>For example, you can specify the parameters when invoking ExecuteQuery<ph id="ph1">\&lt;</ph>TResult&gt;:</source>
          <target state="translated">例如，您可以指定參數叫用 ExecuteQuery 時<ph id="ph1">\&lt;</ph>TResult &gt;:</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>And, another example:</source>
          <target state="translated">此外，另一個範例：</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])">
          <source>The following example opens a connection and passes a SQL <ph id="ph1">`UPDATE`</ph> command to the SQL engine.</source>
          <target state="translated">下列範例會開啟連接並通過 SQL<ph id="ph1">`UPDATE`</ph>命令至 SQL 引擎。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteDynamicDelete(System.Object)">
          <source>The entity to be deleted.</source>
          <target state="translated">要刪除的實體。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteDynamicDelete(System.Object)">
          <source>Executes, inside delete override methods, to redelegate to <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> the task of generating and executing dynamic SQL for delete operations.</source>
          <target state="translated">在刪除覆寫方法內執行，以將刪除作業所需的動態 SQL 產生與執行工作重新委派給 <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteDynamicDelete(System.Object)">
          <source>See <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A&gt;</ph>.</source>
          <target state="translated">請參閱 <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)">
          <source>The entity to be inserted.</source>
          <target state="translated">要插入的實體。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)">
          <source>Executes, inside insert override methods, to redelegate to <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> the task of generating and executing dynamic SQL for insert operations.</source>
          <target state="translated">在插入覆寫方法內執行，以將插入作業所需的動態 SQL 產生與執行工作重新委派給 <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)">
          <source>Note the following considerations:</source>
          <target state="translated">請注意下列考量：</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)">
          <source>Because the method has a protected modifier, its use requires subclassing <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">方法具有受保護的修飾詞，因為它使用需要子類別化<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)">
          <source>An exception is thrown if this operation is not called inside a <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> operation.</source>
          <target state="translated">如果這項作業不會在內部呼叫，會擲回例外狀況<ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>作業。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)">
          <source>It is not intended to be called as a stand-alone operation outside the scope of a <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> operation.</source>
          <target state="translated">它不是當做獨立作業的範圍外呼叫<ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>作業。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> itself calls override methods if they are implemented and the previous methods are intended to be called inside the override methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> 本身呼叫覆寫的方法如果它們實作，而且先前的方法要覆寫方法內呼叫。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)">
          <source>It is the responsibility of the developer to pass in the correct entity.</source>
          <target state="translated">它會傳遞正確的實體中，開發人員的責任。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)">
          <source>The implementation verifies that the passed-in entity is tracked.</source>
          <target state="translated">實作會驗證傳入的實體會追蹤。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)">
          <source>However, it is the responsibility of the developer to maintain the order or pass in the same entity two times.</source>
          <target state="translated">不過，負責維護訊息順序，或將兩次傳遞相同的實體，開發人員。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)">
          <source>It is the responsibility of the developer to invoke the correct dynamic API.</source>
          <target state="translated">它是叫用正確的動態 API，開發人員的責任。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)">
          <source>For example, in the <ph id="ph1">`Update`</ph> override method, only the <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.ExecuteDynamicUpdate%2A&gt;</ph> method can be called.</source>
          <target state="translated">例如，在<ph id="ph1">`Update`</ph>覆寫方法，只有<ph id="ph2">&lt;xref:System.Data.Linq.DataContext.ExecuteDynamicUpdate%2A&gt;</ph>可以呼叫方法。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)">
          <source><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> does not detect or verify whether the invoked dynamic method matches the applicable operation.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> 並不會偵測或驗證所叫用的動態方法是否符合適用的作業。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)">
          <source>The results are undefined if an inapplicable method is called (for example, calling <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ExecuteDynamicDelete%2A&gt;</ph> for an object to be updated).</source>
          <target state="translated">如果不適用的方法呼叫結果便未定義 (例如，呼叫<ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ExecuteDynamicDelete%2A&gt;</ph>更新物件)。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteDynamicUpdate(System.Object)">
          <source>The entity to be updated.</source>
          <target state="translated">要更新的實體。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteDynamicUpdate(System.Object)">
          <source>Executes, inside update override methods, to redelegate to <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> the task of generating and executing dynamic SQL for update operations.</source>
          <target state="translated">在更新覆寫方法內執行，以將更新作業所需的動態 SQL 產生與執行工作重新委派給 <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteDynamicUpdate(System.Object)">
          <source>See <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A&gt;</ph>.</source>
          <target state="translated">請參閱 <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteMethodCall(System.Object,System.Reflection.MethodInfo,System.Object[])">
          <source>The instance of the method invocation (the current object).</source>
          <target state="translated">方法引動過程的執行個體 (目前物件)。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteMethodCall(System.Object,System.Reflection.MethodInfo,System.Object[])">
          <source>Identifies the CLR method that corresponds to a database method.</source>
          <target state="translated">識別對應資料庫方法的 CLR 方法。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteMethodCall(System.Object,System.Reflection.MethodInfo,System.Object[])">
          <source>The array of parameters to be passed to the command.</source>
          <target state="translated">要傳遞至命令的參數陣列。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteMethodCall(System.Object,System.Reflection.MethodInfo,System.Object[])">
          <source>Executes the stored database procedure or scalar function associated with the specified CLR method.</source>
          <target state="translated">執行與指定之 CLR 方法關聯的預存資料庫程序或純量函式。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteMethodCall(System.Object,System.Reflection.MethodInfo,System.Object[])">
          <source>The result (the return value and output parameters) of executing the specified method.</source>
          <target state="translated">執行指定之方法的結果 (傳回值和輸出參數)。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteMethodCall(System.Object,System.Reflection.MethodInfo,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ExecuteMethodCall%2A&gt;</ph> method is used in automatically generated code and acts as a proxy to database functions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ExecuteMethodCall%2A&gt;</ph>方法用於自動產生的程式碼，並且會做為資料庫函式的 proxy。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>The type of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to be returned.</source>
          <target state="translated">要傳回的 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 型別。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>The algorithm for matching columns in the result of the query to fields or properties in the object works as follows:</source>
          <target state="translated">查詢結果中的資料行與物件中的欄位或屬性相符合的演算法用法如下：</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>If a field or property is mapped to a particular column name, that column name is expected in the resultset.</source>
          <target state="translated">如果欄位或屬性已對應至特定資料行名稱，結果集 (Resultset) 必須包含該資料行名稱。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</source>
          <target state="translated">如果欄位或屬性未對應，結果集必須包含與該欄位或屬性同名的資料行。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>The comparison is performed by looking for a case-sensitive match first.</source>
          <target state="translated">尋找區分大小寫的相符項時會先進行比較。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>If this match is not found, a subsequent search occurs for a case-insensitive match.</source>
          <target state="translated">如果找不到這種相符項，就會繼續搜尋不區分大小寫的相符項。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:</source>
          <target state="translated">當下列所有條件皆為 true 時，查詢必須傳回該物件所有追蹤的欄位和屬性 (會延後載入的欄位和屬性除外)：</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> is an entity explicitly tracked by the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> 是 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> 明確追蹤的實體。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source><ph id="ph1">&lt;see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>The entity has a primary key.</source>
          <target state="translated">這個實體具有主索引鍵。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>Otherwise an exception is thrown.</source>
          <target state="translated">否則，會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>The SQL query to be executed.</source>
          <target state="translated">要執行的 SQL 查詢。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>The array of parameters to be passed to the command.</source>
          <target state="translated">要傳遞至命令的參數陣列。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>Note the following behavior:</source>
          <target state="translated">請注意下列情況：</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</source>
          <target state="translated">如果陣列中的物件數目少於命令字串中所識別的最高數目，便會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>If the array contains objects that are not referenced in the command string, no exception is thrown.</source>
          <target state="translated">如果陣列包含命令字串中未參考的物件，則不會擲回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>If a parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, it is converted to <ph id="ph2">&lt;see langword="DBNull.Value" /&gt;</ph>.</source>
          <target state="translated">如果參數為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，則會轉換成 <ph id="ph2">&lt;see langword="DBNull.Value" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>Executes SQL queries directly on the database.</source>
          <target state="translated">直接在資料庫上執行 SQL 查詢。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> collection of objects returned by the query.</source>
          <target state="translated">物件的 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 集合，由查詢傳回。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>The type of the elements in the returned collection.</source>
          <target state="translated">所傳回集合中項目的型別。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>The SQL query to be executed.</source>
          <target state="translated">要執行的 SQL 查詢。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>The array of parameters to be passed to the command.</source>
          <target state="translated">要傳遞至命令的參數陣列。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>Note the following behavior:</source>
          <target state="translated">請注意下列情況：</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</source>
          <target state="translated">如果陣列中的物件數目少於命令字串中所識別的最高數目，便會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>If the array contains objects that are not referenced in the command string, no exception is thrown.</source>
          <target state="translated">如果陣列包含命令字串中未參考的物件，則不會擲回任何例外狀況。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>If a parameter is null, it is converted to <ph id="ph1">&lt;see langword="DBNull.Value" /&gt;</ph>.</source>
          <target state="translated">如果參數為 null，則會轉換成 <ph id="ph1">&lt;see langword="DBNull.Value" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>Executes SQL queries directly on the database and returns objects.</source>
          <target state="translated">直接在資料庫上執行 SQL 查詢，並傳回物件。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>A collection of objects returned by the query.</source>
          <target state="translated">查詢所傳回物件的集合。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>This method is a pass-through mechanism for cases where <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> does not provide for a particular scenario.</source>
          <target state="translated">這個方法是案例的傳遞機制其中<ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph>不會提供在特定案例。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>The algorithm for matching columns in the result of the query to fields and properties in the object works as follows:</source>
          <target state="translated">欄位的查詢結果中的相符資料行和內容物件中的演算法的運作方式，如下所示：</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>If a field or property is mapped to a particular column name, that column name is expected in the resultset.</source>
          <target state="translated">如果欄位或屬性已對應至特定資料行名稱，結果集 (Resultset) 必須包含該資料行名稱。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</source>
          <target state="translated">如果欄位或屬性未對應，結果集必須包含與該欄位或屬性同名的資料行。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>The comparison is performed by first looking for a case-sensitive match.</source>
          <target state="translated">執行比較區分大小寫比對的第一次尋找。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>If such a match is not found, a subsequent search occurs for a case-insensitive match.</source>
          <target state="translated">如果找不到這類相符項目，不區分大小寫的相符項目就會繼續搜尋。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>The query must return all the tracked fields and properties of the object (apart from those subject to deferred loading) when all the following are true:</source>
          <target state="translated">此查詢必須傳回所有追蹤的欄位和屬性 （除了那些可能有所延後載入） 的物件在下列所有條件都為真：</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>If <ph id="ph1">`&lt;T&gt;`</ph> is an entity explicitly tracked by the <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">`&lt;T&gt;`</ph>實體明確地追蹤<ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>ObjectTrackingEnabled is true.</source>
          <target state="translated">ObjectTrackingEnabled 為 true。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>The entity has a primary key.</source>
          <target state="translated">這個實體具有主索引鍵。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>Otherwise an exception is thrown.</source>
          <target state="translated">否則，會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>In all other cases, the query can retrieve just a subset of the tracked fields and properties for the object.</source>
          <target state="translated">在其他情況下，查詢可以擷取只追蹤的欄位和物件的屬性的子集。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>The following C# snippet shows one use for this method:</source>
          <target state="translated">下列 C# 程式碼片段示範這個方法的用法之一：</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])">
          <source>In Visual Basic</source>
          <target state="translated">在 Visual Basic 中</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.GetChangeSet">
          <source>Gets the modified objects tracked by <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph>.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> 所追蹤的已修改物件。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.GetChangeSet">
          <source>The set of objects is returned as three read-only collections.</source>
          <target state="translated">這組物件是以三個唯讀集合傳回。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetChangeSet">
          <source>Note the following considerations:</source>
          <target state="translated">請注意下列考量：</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetChangeSet">
          <source><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.GetChangeSet%2A&gt;</ph> might have side effects, such as inference of insert and delete operations that are usually performed at the time of <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.GetChangeSet%2A&gt;</ph> 可能有副作用，例如推斷的插入和刪除作業，通常就會執行時的<ph id="ph2">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetChangeSet">
          <source>For example, objects that are used in the following operations can create corresponding inferred operations in the following list:</source>
          <target state="translated">比方說，下列作業中所使用的物件可以建立下列清單中的對應推斷的作業：</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetChangeSet">
          <source><ph id="ph1">&lt;xref:System.Data.Linq.EntitySet%601.Add%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Data.Linq.Table%601.InsertOnSubmit%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Linq.EntitySet%601.Add%2A&gt;</ph> 若要<ph id="ph2">&lt;xref:System.Data.Linq.Table%601.InsertOnSubmit%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetChangeSet">
          <source><ph id="ph1">&lt;xref:System.Data.Linq.EntityRef%601&gt;</ph> assignment to null (possibly because of <ph id="ph2">&lt;xref:System.Data.Linq.EntitySet%601.Remove%2A&gt;</ph> to <ph id="ph3">&lt;xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Linq.EntityRef%601&gt;</ph> 將 null 指派 (可能是因為的<ph id="ph2">&lt;xref:System.Data.Linq.EntitySet%601.Remove%2A&gt;</ph>至<ph id="ph3">&lt;xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetChangeSet">
          <source>The set may not be ordered according to foreign key constraints.</source>
          <target state="translated">根據外部索引鍵條件約束時，可能無法排序集合。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetChangeSet">
          <source>Database-generated values (for example, primary and foreign key values, timestamps, and so forth) are not available.</source>
          <target state="translated">無法使用資料庫產生的值 （例如，主要和外部索引鍵值、 時間戳記，等等）。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetChangeSet">
          <source>Such information requires database command execution and perhaps the propagation of retrieved information (for example, foreign key from primary key).</source>
          <target state="translated">這類資訊需要執行資料庫命令，以及也許擷取的資訊 （例如，外部索引鍵從主索引鍵） 的傳播。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetChangeSet">
          <source>The set of changed objects is computed at the time of the call.</source>
          <target state="translated">在呼叫時計算一組已變更的物件。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetChangeSet">
          <source>Subsequent calls to <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> can produce a different set if additional changes are made.</source>
          <target state="translated">後續呼叫<ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>可以產生一組不同，如果進行其他變更。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetChangeSet">
          <source>Output when no changes have been made appears as follows:</source>
          <target state="translated">在不進行任何變更時的輸出會出現，如下所示：</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)">
          <source>The query whose SQL command information is to be retrieved.</source>
          <target state="translated">會擷取內含 SQL 命令資訊的查詢。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)">
          <source>Gets the information about SQL commands generated by <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph>.</source>
          <target state="translated">取得由 <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> 產生之有關 SQL 命令的資訊。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)">
          <source>The requested command information object.</source>
          <target state="translated">要求的命令資訊物件。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)">
          <source>This method is only a getter and does not affect <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> state.</source>
          <target state="translated">這個方法只 getter 並不會影響<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>狀態。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)">
          <source>Note the following considerations:</source>
          <target state="translated">請注意下列考量：</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)">
          <source>The argument must be non-null.</source>
          <target state="translated">引數必須為非 null。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)">
          <source>Otherwise, a null argument exception is thrown.</source>
          <target state="translated">否則，會擲回 null 引數例外狀況。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)">
          <source>Normal query translation exceptions thrown during <ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> query execution apply for a query that cannot be translated.</source>
          <target state="translated">一般查詢轉譯例外狀況時擲回<ph id="ph1">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph>套用無法轉譯為查詢的查詢執行。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)">
          <source>Only the first query command is returned.</source>
          <target state="translated">會傳回第一個查詢命令。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)">
          <source>Specifically, additional commands that are used for eager loading (<ph id="ph1">&lt;xref:System.Data.Linq.DataLoadOptions.LoadWith%2A&gt;</ph>) are not included.</source>
          <target state="translated">具體來說，其他命令，用於積極式載入 (<ph id="ph1">&lt;xref:System.Data.Linq.DataLoadOptions.LoadWith%2A&gt;</ph>) 則不包含在內。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)">
          <source><ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> does not track what the user does with the command.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> 不會追蹤使用者沒有與命令。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)">
          <source>For example, results from the execution of the returned command are not tracked and do not affect <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> state.</source>
          <target state="translated">比方說，傳回命令的執行結果不會受到追蹤並不會影響<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>狀態。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.GetTable(System.Type)">
          <source>The type of the objects to be returned.</source>
          <target state="translated">要傳回的物件型别。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.GetTable(System.Type)">
          <source>Returns a collection of objects of a particular type, where the type is defined by the <ph id="ph1">&lt;paramref name="type" /&gt;</ph> parameter.</source>
          <target state="translated">傳回特定型別的物件集合，其中型別是由 <ph id="ph1">&lt;paramref name="type" /&gt;</ph> 參數所定義。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.GetTable(System.Type)">
          <source>A collection of objects defined by the <ph id="ph1">&lt;paramref name="type" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> 參數所定義物件的集合。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetTable(System.Type)">
          <source>This is a weakly typed version of <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.GetTable%2A&gt;</ph>.</source>
          <target state="translated">這是弱型別的的版本<ph id="ph1">&lt;xref:System.Data.Linq.DataContext.GetTable%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetTable(System.Type)">
          <source>It is important to have a weakly typed version because it is a relatively common practice to construct queries dynamically.</source>
          <target state="translated">請務必有弱型別的的版本，因為它是相對常見的作法是以動態方式建構查詢。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetTable(System.Type)">
          <source>It would be inconvenient to force the application to use reflection to call the correct generic method.</source>
          <target state="translated">是將強制應用程式使用反映來呼叫正確的泛型方法。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetTable(System.Type)">
          <source>If there is no collection for a particular type, an exception is thrown.</source>
          <target state="translated">如果沒有特定型別的集合，會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetTable``1">
          <source>The type of the objects to be returned.</source>
          <target state="translated">要傳回的物件型别。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.GetTable``1">
          <source>Returns a collection of objects of a particular type, where the type is defined by the <ph id="ph1">&lt;paramref name="TEntity" /&gt;</ph> parameter.</source>
          <target state="translated">傳回特定型別的物件集合，其中型別是由 <ph id="ph1">&lt;paramref name="TEntity" /&gt;</ph> 參數所定義。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.GetTable``1">
          <source>A collection of objects defined by the <ph id="ph1">&lt;paramref name="TEntity" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="TEntity" /&gt;</ph> 參數所定義物件的集合。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetTable``1">
          <source>This method is the main entry point for querying.</source>
          <target state="translated">這個方法是用於查詢的主要進入點。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetTable``1">
          <source>When a strongly typed <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> is created, new generated properties encapsulate calls to this method.</source>
          <target state="translated">當強型別<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>建立的新產生的屬性將封裝呼叫此方法。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetTable``1">
          <source>For example, a <ph id="ph1">`Customers`</ph> property is generated that returns <ph id="ph2">`GetTable&lt;Customer&gt;`</ph>.</source>
          <target state="translated">例如，<ph id="ph1">`Customers`</ph>產生傳回屬性<ph id="ph2">`GetTable&lt;Customer&gt;`</ph>。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.GetTable``1">
          <source>If there is no collection for a particular type, an exception is thrown.</source>
          <target state="translated">如果沒有特定型別的集合，會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.DataContext.LoadOptions">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataLoadOptions" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph>.</source>
          <target state="translated">取得或設定與這個 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataLoadOptions" /&gt;</ph> 關聯的 <ph id="ph2">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.LoadOptions">
          <source>The prefetch load options for related data.</source>
          <target state="translated">相關資料的預先提取載入選項。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.LoadOptions">
          <source>This property gets or sets the options that are used to define prefetch behavior for deferred-loaded members and membership of related collections.</source>
          <target state="translated">這個屬性會取得或設定用來定義延後載入成員和關聯集合的成員資格的預先擷取行為的選項。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.DataContext.Log">
          <source>Gets or sets the destination to write the SQL query or command.</source>
          <target state="translated">取得或設定寫入 SQL 查詢或命令的目的。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.Log">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> to use for writing the command.</source>
          <target state="translated">要用於寫入命令的 <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.Log">
          <source>Set this property to <ph id="ph1">`null`</ph> to disable command logging.</source>
          <target state="translated">將此屬性設定為<ph id="ph1">`null`</ph>停用命令的記錄。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.Log">
          <source>The following example displays generated SQL in the console window before it displays the results of the query.</source>
          <target state="translated">下列範例顯示在主控台視窗中產生的 SQL 之前它會顯示查詢的結果。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.DataContext.Mapping">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.MetaModel" /&gt;</ph> on which the mapping is based.</source>
          <target state="translated">取得做為對應之基礎的 <ph id="ph1">&lt;see cref="T:System.Data.Linq.Mapping.MetaModel" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.Mapping">
          <source>The mapping between a database and domain objects.</source>
          <target state="translated">資料庫和網域物件之間的對應。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.DataContext.ObjectTrackingEnabled">
          <source>Gets or sets a value that indicates whether object tracking is enabled.</source>
          <target state="translated">取得或設定值，指出物件追蹤是否已啟用。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.ObjectTrackingEnabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object tracking is enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果啟用物件追蹤，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.ObjectTrackingEnabled">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.ObjectTrackingEnabled">
          <source>Setting this property to <ph id="ph1">`false`</ph> improves performance at retrieval time, because there are fewer items to track.</source>
          <target state="translated">此屬性設定為<ph id="ph1">`false`</ph>改善擷取時間的效能，因為有較少的項目來追蹤。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.ObjectTrackingEnabled">
          <source>An exception is thrown:</source>
          <target state="translated">擲回的例外狀況：</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.ObjectTrackingEnabled">
          <source>If the property is set to <ph id="ph1">`false`</ph> after a query has been executed.</source>
          <target state="translated">如果屬性設定為<ph id="ph1">`false`</ph>執行查詢之後。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.ObjectTrackingEnabled">
          <source>For more information, see the Valid Modes section in <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">如需詳細資訊，請參閱中的有效模式 &gt; 一節<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.ObjectTrackingEnabled">
          <source>If the property is set to <ph id="ph1">`false`</ph> and <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called.</source>
          <target state="translated">如果屬性設定為<ph id="ph1">`false`</ph>和<ph id="ph2">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>呼叫。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.ObjectTrackingEnabled">
          <source>If <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A&gt;</ph> is <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A&gt;</ph> is ignored and treated as <ph id="ph4">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A&gt;</ph>是<ph id="ph2">`false`</ph>，<ph id="ph3">&lt;xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A&gt;</ph>已忽略，並且視為<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.ObjectTrackingEnabled">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> is read-only.</source>
          <target state="translated">在此情況下，<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>處於唯讀狀態。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.ObjectTrackingEnabled">
          <source>If <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A&gt;</ph> is <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A&gt;</ph> is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A&gt;</ph>是<ph id="ph2">`true`</ph>，<ph id="ph3">&lt;xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A&gt;</ph>是<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.ObjectTrackingEnabled">
          <source>In this case, <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> allows you to load an object graph by using <ph id="ph2">&lt;xref:System.Data.Linq.DataLoadOptions.LoadWith%2A&gt;</ph> directives, but does not enable deferred loading.</source>
          <target state="translated">在此情況下，<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>可讓您使用載入物件圖形<ph id="ph2">&lt;xref:System.Data.Linq.DataLoadOptions.LoadWith%2A&gt;</ph>指示詞，但不會啟用延後的載入。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.DataContext">
          <source>Refreshes object state by using data in the database.</source>
          <target state="translated">使用資料庫中的資料來重新整理物件狀態。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source>This method is useful after an optimistic concurrency error to bring items into a state for another attempt.</source>
          <target state="translated">開放式並行存取錯誤，將項目帶入另一次嘗試的狀態後，此方法相當實用。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source>It updates the state of the primitive fields and properties on the objects.</source>
          <target state="translated">它會更新的基本的欄位和屬性的物件上的狀態。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source>If an object is on the <bpt id="p1">*</bpt>many<ept id="p1">*</ept> side of a one-to-many relationship, the foreign key on the object will be set and the object pointer for the other side of the relationship will be set to the new value.</source>
          <target state="translated">如果物件位於<bpt id="p1">*</bpt>許多<ept id="p1">*</ept>一對多關聯性，物件上的外部索引鍵端將會設定和關聯性的另一端的物件指標會設定為新值。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Collections.IEnumerable)">
          <source>A value that specifies how optimistic concurrency conflicts are handled.</source>
          <target state="translated">值，指定如何處理開放式並行存取 (Optimistic Concurrency) 衝突。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Collections.IEnumerable)">
          <source>The collection of entities to be refreshed.</source>
          <target state="translated">要重新整理的實體集合。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Collections.IEnumerable)">
          <source>Refreshes a collection of entity objects according to the specified mode.</source>
          <target state="translated">根據指定的模式重新整理實體物件集合。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object)">
          <source>A value that specifies how optimistic concurrency conflicts are handled.</source>
          <target state="translated">值，指定如何處理開放式並行存取 (Optimistic Concurrency) 衝突。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object)">
          <source>The object to be refreshed.</source>
          <target state="translated">要重新整理的物件。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object)">
          <source>Refreshes an entity object according to the specified mode.</source>
          <target state="translated">根據指定的模式重新整理實體物件。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object[])">
          <source>A value that specifies how optimistic concurrency conflicts are handled.</source>
          <target state="translated">值，指定如何處理開放式並行存取 (Optimistic Concurrency) 衝突。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object[])">
          <source>The array of entity objects to be refreshed.</source>
          <target state="translated">要重新整理的實體物件陣列。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object[])">
          <source>Refreshes an array of entity objects according to the specified mode.</source>
          <target state="translated">根據指定的模式重新整理實體物件的陣列。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.DataContext">
          <source>Computes the set of modified objects to be inserted, updated, or deleted, and executes the appropriate commands to implement the changes to the database.</source>
          <target state="translated">計算要插入、更新或刪除的一組已修改的物件，並執行適當的命令來實作資料庫的變更。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source>If override methods are present for insert, update, or delete, <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> executes these methods instead of the default <ph id="ph2">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> commands.</source>
          <target state="translated">如果覆寫方法會有 insert、 update 或 delete<ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>執行這些方法，而不使用預設<ph id="ph2">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph>命令。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> starts a transaction and will roll back if an exception occurs while <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is executing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> 開始交易，而且如果發生例外狀況將會回復時<ph id="ph2">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>正在執行。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source>However, this does not roll back the changes in memory or tracked by the <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>; those changes will need to be rolled back manually.</source>
          <target state="translated">不過，這不會回復所做的變更在記憶體中或由追蹤<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>; 這些變更將需要回復以手動方式。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source>You can start with a new instance of the <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> if the changes in memory are to be discarded.</source>
          <target state="translated">您可以使用的新執行個體開始<ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>如果在記憶體中的變更會遭到捨棄。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.SubmitChanges">
          <source>Computes the set of modified objects to be inserted, updated, or deleted, and executes the appropriate commands to implement the changes to the database.</source>
          <target state="translated">計算要插入、更新或刪除的一組已修改的物件，並執行適當的命令來實作資料庫的變更。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.SubmitChanges">
          <source>If override methods are present for insert, update, or delete, <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> executes these methods instead of the default <ph id="ph2">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> commands.</source>
          <target state="translated">如果覆寫方法會有 insert、 update 或 delete<ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph>執行這些方法，而不使用預設<ph id="ph2">[!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph>命令。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.SubmitChanges(System.Data.Linq.ConflictMode)">
          <source>The action to be taken if the submission fails.</source>
          <target state="translated">送出失敗時所要採取的動作。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.SubmitChanges(System.Data.Linq.ConflictMode)">
          <source>Valid arguments are as follows:</source>
          <target state="translated">有效引數如下：</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.SubmitChanges(System.Data.Linq.ConflictMode)">
          <source>Sends changes that were made to retrieved objects to the underlying database, and specifies the action to be taken if the submission fails.</source>
          <target state="translated">傳送用來擷取物件至基礎資料庫中的變更，並指定送出失敗時所要採取的動作。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.SubmitChanges(System.Data.Linq.ConflictMode)">
          <source>Default failure mode is <ph id="ph1">&lt;xref:System.Data.Linq.ConflictMode.FailOnFirstConflict&gt;</ph>.</source>
          <target state="translated">預設失敗模式是<ph id="ph1">&lt;xref:System.Data.Linq.ConflictMode.FailOnFirstConflict&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.DataContext.Transaction">
          <source>Gets or sets a local transaction for the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> to use to access the database.</source>
          <target state="translated">取得或設定 <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 用來存取資料庫的本機交易。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.Transaction">
          <source>The transaction object used by the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> when executing queries and commands.</source>
          <target state="translated">執行查詢和命令時，<ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> 所使用的交易物件。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.Transaction">
          <source>The primary scenario for this property is interoperability with relational <ph id="ph1">[!INCLUDE[vstecado](~/includes/vstecado-md.md)]</ph> code.</source>
          <target state="translated">這個屬性的主要案例是互通性與關聯式<ph id="ph1">[!INCLUDE[vstecado](~/includes/vstecado-md.md)]</ph>程式碼。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.Transaction">
          <source>For example, use this property when you write your own <ph id="ph1">`Create`</ph><ph id="ph2">/</ph><ph id="ph3">`Update`</ph><ph id="ph4">/</ph><ph id="ph5">`Delete`</ph> methods to set the <ph id="ph6">`Transaction`</ph> property on the ADO <ph id="ph7">`Command`</ph> object.</source>
          <target state="translated">例如，使用這個屬性，當您撰寫您自己<ph id="ph1">`Create`</ph> <ph id="ph2">/</ph> <ph id="ph3">`Update`</ph> <ph id="ph4">/</ph> <ph id="ph5">`Delete`</ph>方法來設定<ph id="ph6">`Transaction`</ph>屬性之 ADO<ph id="ph7">`Command`</ph>物件。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.Transaction">
          <source>Note the following:</source>
          <target state="translated">請注意下列事項：</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.Transaction">
          <source>If this property has not been explicitly set, the getter returns null.</source>
          <target state="translated">如果未明確設定此屬性，則 getter 會傳回 null。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.Transaction">
          <source>If the code is executing in a <ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph> context, setting this property throws an exception.</source>
          <target state="translated">如果在執行程式碼<ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph>內容中，設定這個屬性會擲回的例外狀況。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.DataContext.Transaction">
          <source>If this property is set and a new <ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph> is opened, an exception is thrown when a query or update is executed.</source>
          <target state="translated">如果這個屬性是設定和新<ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph>已開啟，擲回例外狀況時執行的查詢或更新。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.DataContext">
          <source>Converts an existing <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> to objects.</source>
          <target state="translated">將現有的 <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> 轉換成物件。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source>Each row in the <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> is converted to an object in the <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</source>
          <target state="translated">每個資料列<ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>轉換中的物件<ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source>Description: This method is used to convert an existing <ph id="ph1">&lt;xref:System.Data.Common.DbDataReader&gt;</ph> to objects.</source>
          <target state="translated">描述： 這個方法用來將轉換的現有<ph id="ph1">&lt;xref:System.Data.Common.DbDataReader&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source>Each row in the <ph id="ph1">&lt;xref:System.Data.Common.DbDataReader&gt;</ph> is converted to an object in the <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>.</source>
          <target state="translated">每個資料列<ph id="ph1">&lt;xref:System.Data.Common.DbDataReader&gt;</ph>轉換中的物件<ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source><bpt id="p1">**</bpt>Generic parameters:<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>泛型參數：<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source><ph id="ph1">`T`</ph>: See <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.ExecuteQuery%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`T`</ph>： 請參閱<ph id="ph2">&lt;xref:System.Data.Linq.DataContext.ExecuteQuery%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source><bpt id="p1">**</bpt>Parameters:<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>參數：<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source><ph id="ph1">`Query`</ph>: See the description for command under <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.ExecuteCommand%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Query`</ph>： 請參閱底下的命令的描述<ph id="ph2">&lt;xref:System.Data.Linq.DataContext.ExecuteCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source><ph id="ph1">`Parameters`</ph>: See the description for parameters under <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.ExecuteCommand%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Parameters`</ph>： 請參閱底下的參數的描述<ph id="ph2">&lt;xref:System.Data.Linq.DataContext.ExecuteCommand%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source><bpt id="p1">**</bpt>Return type:<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>傳回類型：<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Linq.DataContext">
          <source><ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>: collection of objects returned by the conversion.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>： 轉換所傳回的物件的集合。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Data.Common.DbDataReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> to be converted.</source>
          <target state="translated">要轉換的 <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Data.Common.DbDataReader)">
          <source>Converts an existing <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> to objects.</source>
          <target state="translated">將現有的 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> 轉換成物件。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Data.Common.DbDataReader)">
          <source>A list of objects returned by the conversion.</source>
          <target state="translated">轉換所傳回的物件清單。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
          <source>The type of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to be returned.</source>
          <target state="translated">要傳回的 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 型別。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
          <source>The algorithm for matching columns in the result to fields and properties in the object works as follows:</source>
          <target state="translated">結果中的資料行與物件運作中的欄位和屬性相符合的演算法用法如下：</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
          <source>If a field or property is mapped to a particular column name, that column name is expected in the resultset.</source>
          <target state="translated">如果欄位或屬性已對應至特定資料行名稱，結果集 (Resultset) 必須包含該資料行名稱。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
          <source>If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</source>
          <target state="translated">如果欄位或屬性未對應，結果集必須包含與該欄位或屬性同名的資料行。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
          <source>The comparison is performed by looking for a case-sensitive match first.</source>
          <target state="translated">尋找區分大小寫的相符項時會先進行比較。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
          <source>If this match is not found, a subsequent search is occurs for a case-insensitive match.</source>
          <target state="translated">如果找不到這種相符項，就會繼續搜尋不區分大小寫的相符項。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
          <source>The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:</source>
          <target state="translated">當下列所有條件皆為 true 時，查詢必須傳回該物件所有追蹤的欄位和屬性 (會延後載入的欄位和屬性除外)：</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> is an entity explicitly tracked by the <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> 是 <ph id="ph1">&lt;see cref="T:System.Data.Linq.DataContext" /&gt;</ph> 明確追蹤的實體。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
          <source><ph id="ph1">&lt;see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
          <source>The entity has a primary key.</source>
          <target state="translated">這個實體具有主索引鍵。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
          <source>Otherwise an exception is thrown.</source>
          <target state="translated">否則，會擲回例外狀況。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> to be converted.</source>
          <target state="translated">要轉換的 <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
          <source>Converts an existing <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> to objects.</source>
          <target state="translated">將現有的 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> 轉換成物件。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)">
          <source>A list of objects returned by the conversion.</source>
          <target state="translated">轉換所傳回的物件清單。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.DataContext.Translate``1(System.Data.Common.DbDataReader)">
          <source>The type of the <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> to be returned.</source>
          <target state="translated">要傳回的 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> 型別。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate``1(System.Data.Common.DbDataReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> to be converted.</source>
          <target state="translated">要轉換的 <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate``1(System.Data.Common.DbDataReader)">
          <source>Converts an existing <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> to objects.</source>
          <target state="translated">將現有的 <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataReader" /&gt;</ph> 轉換成物件。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.DataContext.Translate``1(System.Data.Common.DbDataReader)">
          <source>A collection of objects returned by the conversion.</source>
          <target state="translated">轉換所傳回的物件集合。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>