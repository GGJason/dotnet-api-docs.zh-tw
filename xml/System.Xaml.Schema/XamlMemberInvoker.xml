<Type Name="XamlMemberInvoker" FullName="System.Xaml.Schema.XamlMemberInvoker">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="243bd847b5407c0b553d0c054eac1c272bf164ea" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39994766" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlMemberInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMemberInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlMemberInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMemberInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMemberInvoker" />
  <TypeSignature Language="F#" Value="type XamlMemberInvoker = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c5e84-101">提供延伸點，這個延伸點可透過反映以外的技術來存取 XAML 成員的成員特性。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c5e84-101">Provides an extension point that can access member characteristics of a XAML member through techniques other than reflection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5e84-102">目的<xref:System.Xaml.Schema.XamlMemberInvoker>是要讓 「 可延伸的 XAML 類型系統、 架構以及運作中的執行階段，不會依賴完全 CLR 功能，例如 CLR 屬性，透過反映資訊<xref:System.Type>和<xref:System.Reflection.MemberInfo>，依此類推。</span><span class="sxs-lookup"><span data-stu-id="c5e84-102">The purpose of <xref:System.Xaml.Schema.XamlMemberInvoker> is to enable an extensible XAML type system, schema, and a working run time that does not rely as fully on CLR features such as CLR attributes, reflection information through <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span> <span data-ttu-id="c5e84-103">子<xref:System.Xaml.Schema.XamlMemberInvoker>做為輸入參數的替代的 XAML 結構描述類別的建構函式這類<xref:System.Xaml.XamlMember>。</span><span class="sxs-lookup"><span data-stu-id="c5e84-103">Subclasses of <xref:System.Xaml.Schema.XamlMemberInvoker> are used as input parameters for the alternate constructors of XAML schema classes such as <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="c5e84-104">您的子類別<xref:System.Xaml.XamlMember>，並傳遞<xref:System.Xaml.Schema.XamlMemberInvoker>透過基底建構函式。</span><span class="sxs-lookup"><span data-stu-id="c5e84-104">You subclass <xref:System.Xaml.XamlMember> and pass the <xref:System.Xaml.Schema.XamlMemberInvoker> through to the base constructor.</span></span> <span data-ttu-id="c5e84-105">以及定義<xref:System.Xaml.Schema.XamlMemberInvoker>建構函式，您也必須提供覆寫至少一部分`Lookup`方法<xref:System.Xaml.XamlMember>。</span><span class="sxs-lookup"><span data-stu-id="c5e84-105">Along with defining a <xref:System.Xaml.Schema.XamlMemberInvoker> for the constructor, you must also provide overrides for at least some of the `Lookup` methods of <xref:System.Xaml.XamlMember>.</span></span>  
  
 <span data-ttu-id="c5e84-106"><xref:System.Xaml.Schema.XamlMemberInvoker> 其預設實作。</span><span class="sxs-lookup"><span data-stu-id="c5e84-106"><xref:System.Xaml.Schema.XamlMemberInvoker> has a default implementation.</span></span> <span data-ttu-id="c5e84-107">預設實作的 XAML 結構描述型別之預設實作會遵循類似的模型<xref:System.Xaml.XamlType>並<xref:System.Xaml.XamlMember>: CLR 型別系統用於具現化、 值和查詢，包括使用 CLR 屬性<xref:System.Type>並<xref:System.Reflection.MemberInfo>，依此類推。</span><span class="sxs-lookup"><span data-stu-id="c5e84-107">The default implementation follows a similar model to the default implementation of XAML schema types <xref:System.Xaml.XamlType> and <xref:System.Xaml.XamlMember>: the CLR type system is used for instantiation, values and lookups, including using CLR attributes, <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span>  
  
 <span data-ttu-id="c5e84-108"><xref:System.Xaml.Schema.XamlMemberInvoker> 提供基本的取得和設定作業的方法 (<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>;<xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>).</span><span class="sxs-lookup"><span data-stu-id="c5e84-108"><xref:System.Xaml.Schema.XamlMemberInvoker> provides methods for basic get and set operations (<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>; <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>).</span></span> <span data-ttu-id="c5e84-109">它也會提供屬性<xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A>和<xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>，但是這些不是虛擬。</span><span class="sxs-lookup"><span data-stu-id="c5e84-109">It also provides the properties <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> and <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>, but these are not virtual.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c5e84-110">它可能可以取得<xref:System.Xaml.Schema.XamlMemberInvoker>代表 XAML 指示詞，它會實作為私用類別 System.Xaml 實作中的值。</span><span class="sxs-lookup"><span data-stu-id="c5e84-110">It may be possible to obtain a <xref:System.Xaml.Schema.XamlMemberInvoker> value that represents a XAML directive, which is implemented as a private class in the System.Xaml implementation.</span></span> <span data-ttu-id="c5e84-111">如果您嘗試呼叫<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>或<xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>上此啟動程式，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="c5e84-111">If you attempt to call <xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A> or <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A> on this invoker, an exception is thrown.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c5e84-112">初始化 <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-112">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlMemberInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlMemberInvoker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c5e84-113">初始化 <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-113">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5e84-114">預設實作是空的。</span><span class="sxs-lookup"><span data-stu-id="c5e84-114">The default implementation is empty.</span></span>  
  
 <span data-ttu-id="c5e84-115">這個建構函式會叫用內部來提供值給<xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A>。</span><span class="sxs-lookup"><span data-stu-id="c5e84-115">This constructor is invoked internally to provide a value for <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A>.</span></span> <span data-ttu-id="c5e84-116">針對<xref:System.Xaml.Schema.XamlMemberInvoker>子類別，可以預期的是，您可以使用<xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29>建構簽章或提供覆寫呼叫<xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29>為基底。</span><span class="sxs-lookup"><span data-stu-id="c5e84-116">For a <xref:System.Xaml.Schema.XamlMemberInvoker> subclass, it is expected that you either use the <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> signature for construction or provide an override that calls <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> as base.</span></span> <span data-ttu-id="c5e84-117">提供<xref:System.Xaml.XamlMember>預設的實作模式 where<xref:System.Xaml.Schema.XamlMemberInvoker>是不變。</span><span class="sxs-lookup"><span data-stu-id="c5e84-117">Providing the <xref:System.Xaml.XamlMember> implements a default pattern where <xref:System.Xaml.Schema.XamlMemberInvoker> is immutable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMemberInvoker (System.Xaml.XamlMember member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlMember member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (member As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMemberInvoker(System::Xaml::XamlMember ^ member);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Schema.XamlMemberInvoker : System.Xaml.XamlMember -&gt; System.Xaml.Schema.XamlMemberInvoker" Usage="new System.Xaml.Schema.XamlMemberInvoker member" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="member" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="member">
          <span data-ttu-id="c5e84-118">特定 XAML 成員與這個 <see cref="T:System.Xaml.XamlMember" /> 相關的 <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-118">The <see cref="T:System.Xaml.XamlMember" /> value for the specific XAML member relevant to this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5e84-119">根據提供的 <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />，初始化 <see cref="T:System.Xaml.XamlMember" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-119">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> class, based on a provided <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5e84-120">這個建構函式會呼叫在內部根據<xref:System.Xaml.XamlMember>其中<xref:System.Xaml.Schema.XamlMemberInvoker>用於建構。</span><span class="sxs-lookup"><span data-stu-id="c5e84-120">This constructor is called internally based on the <xref:System.Xaml.XamlMember> where the <xref:System.Xaml.Schema.XamlMemberInvoker> is used for construction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c5e84-121">
            <paramref name="member" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-121">
              <paramref name="member" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual object GetValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValue (instance As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetValue(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj -&gt; obj&#xA;override this.GetValue : obj -&gt; obj" Usage="xamlMemberInvoker.GetValue instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="c5e84-122">成員的擁有者型別執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-122">An instance of the owner type for the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5e84-123">從執行個體取得相關屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-123">Gets a value of the relevant property from an instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c5e84-124">要求的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-124">The requested property value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c5e84-125">
            <paramref name="instance" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-125">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c5e84-126">在以未知 <see cref="T:System.Xaml.XamlMember" /> 為根據的 <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> 上，叫用這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-126">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
          <span data-ttu-id="c5e84-127">**-或-**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-127">**-or-**</span>
          </span>
          <span data-ttu-id="c5e84-128">在唯寫成員上叫用這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-128">Invoked this method on a write-only member.</span>
          </span>
          <span data-ttu-id="c5e84-129">**-或-**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-129">**-or-**</span>
          </span>
          <span data-ttu-id="c5e84-130">
            <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-130">
              <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="c5e84-131">
            <para>基底實作包括呼叫內部 helper <c>ThrowIfUnknown</c>。此協助程式一律會擲回的情況下其中<see cref="T:System.Xaml.Schema.XamlMemberInvoker" />為基礎的未知<see cref="T:System.Xaml.XamlMember" />，其中包括情況<see cref="P:System.Xaml.XamlMember.UnderlyingMember" />的<see cref="T:System.Xaml.XamlMember" />是<see langword="null" />。如果基底實作會擲回<see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />是<see langword="null" />。靜態屬性 (<see cref="P:System.Reflection.MethodBase.IsStatic" />已<see langword="true" />每個<see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />) 預設實作會呼叫<see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" />上<see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />傳遞<see langword="null" />的第一個參數和封裝<paramref name="instance" />中第二個。若為非靜態屬性，它會呼叫<see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" />，並將轉送<paramref name="instance" />第一個參數，而第二個參數作為一個空白封裝。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-131">
              <para>The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>. This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlMember" />, which includes cases where the <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> of the <see cref="T:System.Xaml.XamlMember" /> is <see langword="null" />.  The base implementation throws if <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> is <see langword="null" />.  For static properties (<see cref="P:System.Reflection.MethodBase.IsStatic" /> is <see langword="true" /> per <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />) the default implementation calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> on <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> passing <see langword="null" /> as the first parameter and packaged <paramref name="instance" /> in the second. For non-static properties, it calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> and forwards the <paramref name="instance" /> as the first parameter and an empty package as the second parameter.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (object instance, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object instance, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetValue (instance As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetValue(System::Object ^ instance, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj -&gt; unit&#xA;override this.SetValue : obj * obj -&gt; unit" Usage="xamlMemberInvoker.SetValue (instance, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="c5e84-132">成員的擁有者型別執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-132">An instance of the owner type for the member.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c5e84-133">要設定的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-133">The property value to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5e84-134">設定執行個體上相關屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-134">Sets a value of the relevant property on an instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c5e84-135">
            <paramref name="instance" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-135">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c5e84-136">在以未知 <see cref="T:System.Xaml.XamlMember" /> 為根據的 <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> 上，叫用這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-136">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlMember" />.</span>
          </span>
          <span data-ttu-id="c5e84-137">**-或-**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-137">**-or-**</span>
          </span>
          <span data-ttu-id="c5e84-138">在唯讀成員上叫用這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-138">Invoked this method on a read-only member.</span>
          </span>
          <span data-ttu-id="c5e84-139">**-或-**</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-139">**-or-**</span>
          </span>
          <span data-ttu-id="c5e84-140">
            <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-140">
              <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="c5e84-141">
            <para>基底實作包括呼叫內部 helper <c>ThrowIfUnknown</c>。此協助程式一律會擲回的情況下其中<see cref="T:System.Xaml.Schema.XamlMemberInvoker" />為基礎的未知<see cref="T:System.Xaml.XamlMember" />，其中包括情況<see cref="P:System.Xaml.XamlMember.UnderlyingMember" />的<see cref="T:System.Xaml.XamlMember" />是<see langword="null" />。如果基底實作會擲回<see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />是<see langword="null" />。靜態屬性 (<see cref="P:System.Reflection.MethodBase.IsStatic" />已<see langword="true" />每個<see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />) 預設實作會呼叫<see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" />上<see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />傳遞<see langword="null" />做為第一個參數封裝<paramref name="instance" />和<paramref name="value" />為第二個參數。若為非靜態屬性，它會呼叫<see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" />，並將轉送<paramref name="instance" />做為第一個參數和<paramref name="value" />做為第二個參數。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-141">
              <para>The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>. This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlMember" />, which includes cases where the <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> of the <see cref="T:System.Xaml.XamlMember" /> is <see langword="null" />.  The base implementation throws if <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> is <see langword="null" />.  For static properties (<see cref="P:System.Reflection.MethodBase.IsStatic" /> is <see langword="true" /> per <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />) the default implementation calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> on <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> passing <see langword="null" /> as the first parameter and packaging <paramref name="instance" /> and <paramref name="value" /> as the second parameter. For non-static properties, it calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> and forwards <paramref name="instance" /> as first parameter and <paramref name="value" /> as second parameter.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSerializeValue (instance As Object) As ShouldSerializeResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::Schema::ShouldSerializeResult ShouldSerializeValue(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeValue : obj -&gt; System.Xaml.Schema.ShouldSerializeResult&#xA;override this.ShouldSerializeValue : obj -&gt; System.Xaml.Schema.ShouldSerializeResult" Usage="xamlMemberInvoker.ShouldSerializeValue instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.ShouldSerializeResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="c5e84-142">執行個體，具有需要檢查持續性的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-142">The instance with the property to be examined for persistence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5e84-143">表示值是否需要由序列化處理序保存。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-143">Indicates whether the value needs to be persisted by serialization processes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c5e84-144">列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-144">A value of the enumeration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5e84-145">預設實作會傳回<xref:System.Xaml.Schema.ShouldSerializeResult.Default>XAML 成員本身是否<xref:System.Xaml.XamlMember.IsUnknown%2A>，或如果沒有 CLR 反映相關`ShouldSerialize`透過預設反映基礎成員上找不到方法。</span><span class="sxs-lookup"><span data-stu-id="c5e84-145">The default implementation returns <xref:System.Xaml.Schema.ShouldSerializeResult.Default> if the XAML member itself is <xref:System.Xaml.XamlMember.IsUnknown%2A>, or if no CLR-reflection relevant `ShouldSerialize` method is found on the underlying member through default reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingGetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingGetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingGetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingGetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingGetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingGetter : System.Reflection.MethodInfo" Usage="System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c5e84-146">取得 CLR 方法的 <see cref="T:System.Reflection.MethodInfo" />，這個方法會取得與此 <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> 相關之屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-146">Gets the <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that gets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c5e84-147">CLR 方法的 <see cref="T:System.Reflection.MethodInfo" />，這個方法會取得與此 <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> 相關之屬性的值，或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-147">The <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that gets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, or <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5e84-148">此屬性相依於呼叫<xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>上建構<xref:System.Xaml.XamlMember>。</span><span class="sxs-lookup"><span data-stu-id="c5e84-148">This property relies on calling <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> on the constructing <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="c5e84-149">代表未知<xref:System.Xaml.XamlMember>，或者是其中<xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>會傳回`null`，這個屬性會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="c5e84-149">For an unknown <xref:System.Xaml.XamlMember>, or for cases where <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> returns `null`, this property returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingSetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingSetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingSetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingSetter : System.Reflection.MethodInfo" Usage="System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c5e84-150">取得 CLR 方法的 <see cref="T:System.Reflection.MethodInfo" />，這個方法會設定與此 <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> 相關之屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-150">Gets the <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that sets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c5e84-151">CLR 方法的 <see cref="T:System.Reflection.MethodInfo" />，這個方法會設定與此 <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> 相關之屬性的值，或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-151">The <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that sets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, or <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5e84-152">此屬性相依於呼叫<xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>上建構<xref:System.Xaml.XamlMember>。</span><span class="sxs-lookup"><span data-stu-id="c5e84-152">This property relies on calling <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> on the constructing <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="c5e84-153">代表未知<xref:System.Xaml.XamlMember>，或者是其中<xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>會傳回`null`，這個屬性會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="c5e84-153">For an unknown <xref:System.Xaml.XamlMember>, or for cases where <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> returns `null`, this property returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownInvoker">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlMemberInvoker UnknownInvoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xaml.Schema.XamlMemberInvoker UnknownInvoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UnknownInvoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xaml::Schema::XamlMemberInvoker ^ UnknownInvoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnknownInvoker : System.Xaml.Schema.XamlMemberInvoker" Usage="System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c5e84-154">提供靜態值，這個值表示未完整實作的未知 <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-154">Provides a static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c5e84-155">靜態值，表示未完整實作的未知 <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5e84-155">A static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5e84-156">提供此值<xref:System.Xaml.Schema.XamlMemberInvoker>System.Xaml 參數定義 API 通常會導致擲回例外狀況呼叫的程式碼。</span><span class="sxs-lookup"><span data-stu-id="c5e84-156">Supplying this value for a <xref:System.Xaml.Schema.XamlMemberInvoker> parameter of System.Xaml defined API will typically cause the called code to throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>