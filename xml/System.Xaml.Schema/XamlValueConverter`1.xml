<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlValueConverter`1.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac582f14de8f717b193872473b74a49ccbceec4793c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">82f14de8f717b193872473b74a49ccbceec4793c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlValueConverter`1">
          <source>The CLR base class for the particular converter that this <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> represents.</source>
          <target state="translated">這個 <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> 所表示之特定轉換子的 CLR 基底類別。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlValueConverter`1">
          <source>Typically this is one of the following: <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph>; <ph id="ph2">&lt;see cref="T:System.Windows.Markup.MarkupExtension" /&gt;</ph>; <ph id="ph3">&lt;see cref="T:System.Windows.Markup.ValueSerializer" /&gt;</ph>;</source>
          <target state="translated">這通常是下列其中一項：<ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.Windows.Markup.MarkupExtension" /&gt;</ph>、<ph id="ph3">&lt;see cref="T:System.Windows.Markup.ValueSerializer" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Xaml.Schema.XamlValueConverter`1">
          <source>Provides a common API surface for techniques that generate initialization or serialization values for XAML based on input other than the eventual destination type.</source>
          <target state="translated">針對根據最終目的型別以外之輸入產生 XAML 初始化及序列化值的技術，提供一般 API 介面。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Xaml.Schema.XamlValueConverter`1">
          <source>This includes markup extensions and type converters.</source>
          <target state="translated">這包括標記延伸和型別轉換子。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlValueConverter`1">
          <source>Instances of this type are returned by methods of the XAML schema API such as <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupTypeConverter%2A&gt;</ph>.</source>
          <target state="translated">此類型的執行個體方法所傳回的 XAML 結構描述應用程式開發介面的這類<ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupTypeConverter%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlValueConverter`1">
          <source>The generic implementation of <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> provides indirection for the System.Xaml assembly so that the basic XAML schema and type system does not have to take dependencies on different value conversion techniques that are typically implementations in other assemblies.</source>
          <target state="translated">泛型實作<ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph>提供間接取值 System.Xaml 組件，因此不需要採取的相依性不同的值轉換技術，它們通常是在其他實作基本 XAML 結構描述和類型系統組件。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlValueConverter`1">
          <source>A <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> can be constructed with a null implementation type, but such a <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> will return <ph id="ph3">`null`</ph> for <ph id="ph4">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A&gt;</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph>可為 null 的實作型別，但這類建構<ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph>會傳回<ph id="ph3">`null`</ph>如<ph id="ph4">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlValueConverter`1">
          <source>Constructor signatures for <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> use a <ph id="ph2">`converterType`</ph> parameter that references the specific type that implements the conversion behavior.</source>
          <target state="translated">建構函式簽章<ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph>使用<ph id="ph2">`converterType`</ph>參考實作的轉換行為的特定型別參數。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlValueConverter`1">
          <source>For a properly functioning <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> (one that has a nonnull <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;</ph>), the <ph id="ph3">`converterType`</ph> type is expected to be castable to the <ph id="ph4">`TConverterBase`</ph> constraint.</source>
          <target state="translated">正確運作<ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph>(具有非 null <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;</ph>)、<ph id="ph3">`converterType`</ph>型別必須可以轉型<ph id="ph4">`TConverterBase`</ph>條件約束。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlValueConverter`1">
          <source>A mismatch condition is not enforced by constructors, but might produce an <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> at run time.</source>
          <target state="translated">不符合條件的建構函式不會強制執行，但可能會產生<ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>在執行階段。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="T:System.Xaml.Schema.XamlValueConverter`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that implements the converter behavior.</source>
          <target state="translated">實作轉換子行為的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType)">
          <source>The target/destination <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> 的目標/目的地 <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> class, based on a converter implementing <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> and the target/destination type of the <ph id="ph3">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>.</source>
          <target state="translated">根據實作 <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> 的轉換子和 <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> 的目標/目的型別，初始化 <ph id="ph3">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that implements the converter behavior.</source>
          <target state="translated">實作轉換子行為的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)">
          <source>The target/destination <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> 的目標/目的地 <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)">
          <source>The string name.</source>
          <target state="translated">字串名稱。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> class, based on a converter implementing <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> the target/destination type of the <ph id="ph3">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>, and a string name.</source>
          <target state="translated">根據實作 <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> 的轉換子、<ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> 的目標/目的型別以及字串名稱，初始化 <ph id="ph3">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)">
          <source>If <ph id="ph1">`name`</ph> is provided as <ph id="ph2">`null`</ph>, a default name is generated based on either <ph id="ph3">`converterType`</ph> or <ph id="ph4">`targetType`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`name`</ph>依現狀<ph id="ph2">`null`</ph>，預設名稱根據之一產生<ph id="ph3">`converterType`</ph>或<ph id="ph4">`targetType`</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)">
          <source>All three parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph> (at least one is required to be non-null).</source>
          <target state="translated">這三個參數都是 <ph id="ph1">&lt;see langword="null" /&gt;</ph> (至少有一個必須是非 Null 值)。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Xaml.Schema.XamlValueConverter`1.ConverterInstance">
          <source>Gets a created instance of the converter implementation.</source>
          <target state="translated">取得建立的轉換子實作執行個體。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlValueConverter`1.ConverterInstance">
          <source>A created instance of the converter implementation, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">建立的轉換子實作執行個體，或 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlValueConverter`1.ConverterInstance">
          <source><ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;</ph> calls the protected default implementation of <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A&gt;</ph> to get its value (and might be accessing a stored value if <ph id="ph3">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;</ph> was already called once on this <ph id="ph4">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;</ph> 受保護的預設實作會呼叫<ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A&gt;</ph>來取得其值 (並可能會存取儲存的值，如果<ph id="ph3">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;</ph>已經上被呼叫一次<ph id="ph4">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlValueConverter`1.ConverterInstance">
          <source>A <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> can be constructed with a null implementation type, but such a <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> will return <ph id="ph3">`null`</ph> for <ph id="ph4">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph>可為 null 的實作型別，但這類建構<ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph>會傳回<ph id="ph3">`null`</ph>如<ph id="ph4">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Xaml.Schema.XamlValueConverter`1.ConverterType">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> for the class that implements the converter behavior.</source>
          <target state="translated">取得實作轉換子行為的類別的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlValueConverter`1.ConverterType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> for the class that implements the converter behavior.</source>
          <target state="translated">實作轉換子行為的類別的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance">
          <source>Returns an instance of the converter implementation.</source>
          <target state="translated">傳回轉換子實作執行個體。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance">
          <source>An instance of the converter implementation, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">轉換子實作執行個體，或 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance">
          <source><ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A&gt;</ph> is protected.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A&gt;</ph> 受保護。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance">
          <source>To get a converter instance with a public API, get the value of <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;</ph>.</source>
          <target state="translated">若要取得的公用 API 的轉換器執行個體，取得的值<ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance">
          <source>A <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> can be constructed with a null implementation type, but such a <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> will return <ph id="ph3">`null`</ph> for <ph id="ph4">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A&gt;</ph>.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph>可為 null 的實作型別，但這類建構<ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph>會傳回<ph id="ph3">`null`</ph>如<ph id="ph4">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance">
          <source>Converter did not implement the correct base type.</source>
          <target state="translated">轉換子未實作正確的基底型別。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="T:System.Xaml.Schema.XamlValueConverter`1">
          <source>Determines whether this instance of <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> and an object have the same value.</source>
          <target state="translated">判斷這個 <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> 執行個體和某個物件是否具有相同的值。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Object)">
          <source>The object to compare.</source>
          <target state="translated">要比較的物件。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Object)">
          <source>Determines whether this instance of <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> and a specified object, which must also be a <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> object, have the same value.</source>
          <target state="translated">判斷這個 <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> 執行個體和指定之物件 (必須是 <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> 物件) 是否具有相同的值。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is a <ph id="ph3">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> and its value is the same as this instance; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> 是 <ph id="ph3">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>，且其值與這個執行個體相同，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Xaml.Schema.XamlValueConverter{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> to compare.</source>
          <target state="translated">要比較的 <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Xaml.Schema.XamlValueConverter{`0})">
          <source>Determines whether this instance of <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> and another <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> object have the same value.</source>
          <target state="translated">判斷這個 <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> 執行個體和另一個 <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> 物件是否具有相同的值。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Xaml.Schema.XamlValueConverter{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="other" /&gt;</ph> is a <ph id="ph3">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> and its value is the same as this instance; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="other" /&gt;</ph> 是 <ph id="ph3">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>，且其值與這個執行個體相同，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.GetHashCode">
          <source>Returns the hash code for this <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>.</source>
          <target state="translated">傳回這個 <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> 的雜湊程式碼。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.GetHashCode">
          <source>An integer hash code.</source>
          <target state="translated">整數雜湊程式碼。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.Xaml.Schema.XamlValueConverter`1.Name">
          <source>Gets a string name for this <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>.</source>
          <target state="translated">取得這個 <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> 的字串名稱。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlValueConverter`1.Name">
          <source>A string name for this <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>.</source>
          <target state="translated">這個 <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> 的字串名稱。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlValueConverter`1.Name">
          <source>The value of this property is established by one of the following:</source>
          <target state="translated">這個屬性的值會建立由下列其中一項：</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlValueConverter`1.Name">
          <source>A constructor parameter (see <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.%23ctor%2A?displayProperty=nameWithType&gt;</ph>).</source>
          <target state="translated">建構函式參數 (請參閱<ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.%23ctor%2A?displayProperty=nameWithType&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlValueConverter`1.Name">
          <source>Internal logic that processes other constructor inputs and forms a string.</source>
          <target state="translated">內部邏輯來處理其他建構函式的輸入，並形成的字串。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> 或 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> 或 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
          <source>Determines whether two specified <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> objects have the same value.</source>
          <target state="translated">判斷兩個指定的 <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> 物件是否具有相同的值。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of <ph id="ph2">&lt;paramref name="converter1" /&gt;</ph> is the same as the value of <ph id="ph3">&lt;paramref name="converter2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="true" /&gt;</ph> 的值與 <ph id="ph2">&lt;paramref name="converter1" /&gt;</ph> 的值相同，則為 <ph id="ph3">&lt;paramref name="converter2" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> 或 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> 或 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
          <source>Determines whether two specified <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> objects have different values.</source>
          <target state="translated">判斷兩個指定的 <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> 物件是否具有不同的值。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of <ph id="ph2">&lt;paramref name="converter1" /&gt;</ph> is different than the value of <ph id="ph3">&lt;paramref name="converter2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="converter1" /&gt;</ph> 的值與 <ph id="ph3">&lt;paramref name="converter2" /&gt;</ph> 的值不同，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.Xaml.Schema.XamlValueConverter`1.TargetType">
          <source>Gets the target/destination <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> 的目標/目的 <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlValueConverter`1.TargetType">
          <source>The target/destination <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> 的目標/目的地 <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.ToString">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that represents this <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>.</source>
          <target state="translated">傳回表示這個 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.ToString">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that represents this <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>.</source>
          <target state="translated">代表這個 <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlValueConverter`1.ToString">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ToString%2A&gt;</ph> value is based on <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ToString%2A&gt;</ph>值根據<ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>