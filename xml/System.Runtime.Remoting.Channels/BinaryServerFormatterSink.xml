<Type Name="BinaryServerFormatterSink" FullName="System.Runtime.Remoting.Channels.BinaryServerFormatterSink">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c3a6ca3d0edfeb864f51041f2c2b21f73be1057b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30489472" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BinaryServerFormatterSink : System.Runtime.Remoting.Channels.IChannelSinkBase, System.Runtime.Remoting.Channels.IServerChannelSink" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BinaryServerFormatterSink extends System.Object implements class System.Runtime.Remoting.Channels.IChannelSinkBase, class System.Runtime.Remoting.Channels.IServerChannelSink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" />
  <TypeSignature Language="VB.NET" Value="Public Class BinaryServerFormatterSink&#xA;Implements IChannelSinkBase, IServerChannelSink" />
  <TypeSignature Language="C++ CLI" Value="public ref class BinaryServerFormatterSink : System::Runtime::Remoting::Channels::IChannelSinkBase, System::Runtime::Remoting::Channels::IServerChannelSink" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelSinkBase</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IServerChannelSink</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>提供使用 <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> 的伺服器格式子 (Formatter) 接收的實作。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 直到達到適當的格式器接收從伺服器傳輸接收到伺服器通道接收會傳播的要求資料流。 格式器接收訊息還原序列化，並透過管線傳遞。 透過通道接收鏈結的結尾插入特殊分派接收<xref:System.Runtime.Remoting.Channels.ChannelServices.CreateServerChannelSinkChain%2A?displayProperty=nameWithType>伺服器通道來建立伺服器通道接收鏈結所呼叫的方法。 當訊息到達分派接收時，分派接收會將訊息傳遞至遠端執行功能基礎結構。  
  
 下表顯示這個接收器可以針對目前的接收提供者指定的組態屬性。  
  
|屬性|描述|  
|--------------|-----------------|  
|`includeVersions`|指定格式器是否將包含版本資訊。 值`true`或`false`。|  
|`strictBinding`|指示接收格式器將會先嘗試使用完整的版本資訊 (如果有的話) 來辨識型別，然後才會使用不含版本資訊的型別名稱和組件名稱。 值`true`或`false`。 系統提供的兩個格式子預設都是 `false`。|  
|`typeFilterLevel`|字串值，指定伺服器通道嘗試執行自動還原序列化 (Deserialization) 的層級。 支援的值為`Low`（預設值） 和`Full`。 如需有關還原序列化層級的詳細資訊，請參閱[ &#91; \<topic://cpconAutomaticDeserializationInNETRemoting >&#93;](http://msdn.microsoft.com/library/313a0e88-5b2b-4a17-8391-0ddf9f7a787b)。<br /><br /> 只能由.NET Framework 1.1 版下列平台支援這個屬性： Windows 98、 Windows NT 4.0、 Windows Millennium Edition、 Windows 2000、 Windows XP Home Edition、 Windows XP Professional 和 Windows Server 2003 系列。|  
  
> [!IMPORTANT]
>  使用此物件的執行個體，不受信任的資料或透過不安全的通道是安全性風險。 僅使用信任的資料，並透過安全的通道，請使用此物件。 如需詳細資訊，請參閱[資料驗證](https://www.owasp.org/index.php/Data_Validation)。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryServerFormatterSink (System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol protocol, System.Runtime.Remoting.Channels.IServerChannelSink nextSink, System.Runtime.Remoting.Channels.IChannelReceiver receiver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Remoting.Channels.BinaryServerFormatterSink/Protocol protocol, class System.Runtime.Remoting.Channels.IServerChannelSink nextSink, class System.Runtime.Remoting.Channels.IChannelReceiver receiver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.#ctor(System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol,System.Runtime.Remoting.Channels.IServerChannelSink,System.Runtime.Remoting.Channels.IChannelReceiver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryServerFormatterSink(System::Runtime::Remoting::Channels::BinaryServerFormatterSink::Protocol protocol, System::Runtime::Remoting::Channels::IServerChannelSink ^ nextSink, System::Runtime::Remoting::Channels::IChannelReceiver ^ receiver);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="protocol" Type="System.Runtime.Remoting.Channels.BinaryServerFormatterSink+Protocol" />
        <Parameter Name="nextSink" Type="System.Runtime.Remoting.Channels.IServerChannelSink" />
        <Parameter Name="receiver" Type="System.Runtime.Remoting.Channels.IChannelReceiver" />
      </Parameters>
      <Docs>
        <param name="protocol">
          <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol" />，將與 <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" /> 的目前執行個體搭配使用。</param>
        <param name="nextSink">通道接收鏈結中的下一個接收。</param>
        <param name="receiver">表示將接收 <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" /> 的新執行個體所序列化之訊息的通道。</param>
        <summary>初始化 <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncProcessResponse">
      <MemberSignature Language="C#" Value="public void AsyncProcessResponse (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AsyncProcessResponse(class System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Channels.ITransportHeaders headers, class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AsyncProcessResponse(System::Runtime::Remoting::Channels::IServerResponseChannelSinkStack ^ sinkStack, System::Object ^ state, System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Channels::ITransportHeaders ^ headers, System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="sinkStack">將引導回伺服器傳輸接收的接收堆疊。</param>
        <param name="state">與目前接收相關聯、產生於要求端而且是回應端所需的資訊。</param>
        <param name="msg">回應訊息。</param>
        <param name="headers">要加入至前往用戶端之傳回訊息的標頭。</param>
        <param name="stream">返回至傳輸接收的資料流。</param>
        <summary>從非同步傳送的方法呼叫來要求處理回應。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Remoting.Channels.ServerChannelSinkStack" />
        <altmember cref="M:System.Runtime.Remoting.Channels.ServerChannelSinkStack.Push(System.Runtime.Remoting.Channels.IServerChannelSink,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetResponseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetResponseStream (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetResponseStream(class System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Channels.ITransportHeaders headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResponseStream (sinkStack As IServerResponseChannelSinkStack, state As Object, msg As IMessage, headers As ITransportHeaders) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetResponseStream(System::Runtime::Remoting::Channels::IServerResponseChannelSinkStack ^ sinkStack, System::Object ^ state, System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Channels::ITransportHeaders ^ headers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
      </Parameters>
      <Docs>
        <param name="sinkStack">將引導回伺服器傳輸接收的接收堆疊。</param>
        <param name="state">與目前接收相關聯、產生於要求端而且是回應端所需的資訊。</param>
        <param name="msg">要序列化的回應訊息。</param>
        <param name="headers">要置於用戶端的回應資料流中的標頭。</param>
        <summary>傳回所提供的回應訊息將在其上序列化的 <see cref="T:System.IO.Stream" />。</summary>
        <returns>
          <see cref="T:System.IO.Stream" />，所提供的回應訊息將在其上序列化。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 必須先建立回應資料流時，會呼叫這個方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextChannelSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Channels.IServerChannelSink NextChannelSink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.Channels.IServerChannelSink NextChannelSink" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.NextChannelSink" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextChannelSink As IServerChannelSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Channels::IServerChannelSink ^ NextChannelSink { System::Runtime::Remoting::Channels::IServerChannelSink ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Channels.IServerChannelSink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得接收鏈結中的下一個 <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" />。</summary>
        <value>接收鏈結中的下一個 <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessMessage">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Channels.ServerProcessing ProcessMessage (System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, System.Runtime.Remoting.Messaging.IMessage requestMsg, System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, System.IO.Stream requestStream, out System.Runtime.Remoting.Messaging.IMessage responseMsg, out System.Runtime.Remoting.Channels.ITransportHeaders responseHeaders, out System.IO.Stream responseStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Runtime.Remoting.Channels.ServerProcessing ProcessMessage(class System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, class System.Runtime.Remoting.Messaging.IMessage requestMsg, class System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, class System.IO.Stream requestStream, [out] class System.Runtime.Remoting.Messaging.IMessage&amp; responseMsg, [out] class System.Runtime.Remoting.Channels.ITransportHeaders&amp; responseHeaders, [out] class System.IO.Stream&amp; responseStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ProcessMessage (sinkStack As IServerChannelSinkStack, requestMsg As IMessage, requestHeaders As ITransportHeaders, requestStream As Stream, ByRef responseMsg As IMessage, ByRef responseHeaders As ITransportHeaders, ByRef responseStream As Stream) As ServerProcessing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Channels::ServerProcessing ProcessMessage(System::Runtime::Remoting::Channels::IServerChannelSinkStack ^ sinkStack, System::Runtime::Remoting::Messaging::IMessage ^ requestMsg, System::Runtime::Remoting::Channels::ITransportHeaders ^ requestHeaders, System::IO::Stream ^ requestStream, [Runtime::InteropServices::Out] System::Runtime::Remoting::Messaging::IMessage ^ % responseMsg, [Runtime::InteropServices::Out] System::Runtime::Remoting::Channels::ITransportHeaders ^ % responseHeaders, [Runtime::InteropServices::Out] System::IO::Stream ^ % responseStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Channels.ServerProcessing</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerChannelSinkStack" />
        <Parameter Name="requestMsg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="requestHeaders" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
        <Parameter Name="requestStream" Type="System.IO.Stream" />
        <Parameter Name="responseMsg" Type="System.Runtime.Remoting.Messaging.IMessage&amp;" RefType="out" />
        <Parameter Name="responseHeaders" Type="System.Runtime.Remoting.Channels.ITransportHeaders&amp;" RefType="out" />
        <Parameter Name="responseStream" Type="System.IO.Stream&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="sinkStack">呼叫目前接收的通道接收堆疊。</param>
        <param name="requestMsg">包含要求的訊息。</param>
        <param name="requestHeaders">從來自用戶端的內送訊息中擷取的標頭。</param>
        <param name="requestStream">必須處理和傳遞至還原序列化 (Deserialization) 接收的資料流。</param>
        <param name="responseMsg">當這個方法傳回時，會包含存有回應訊息的 <see cref="T:System.Runtime.Remoting.Messaging.IMessage" />。 這個參數會以未初始化的狀態傳遞。</param>
        <param name="responseHeaders">當這個方法傳回時，會包含保存標頭的 <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" />，而這些標頭將加入前往用戶端的傳回訊息。 這個參數會以未初始化的狀態傳遞。</param>
        <param name="responseStream">當這個方法傳回時，包含正要流向傳輸接收的 <see cref="T:System.IO.Stream" />。 這個參數會以未初始化的狀態傳遞。</param>
        <summary>要求來自目前接收的訊息處理。</summary>
        <returns>
          <see cref="T:System.Runtime.Remoting.Channels.ServerProcessing" /> 狀態值，提供訊息如何處理的相關資訊。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 會在其叫用的訊息的方法呼叫轉換為 proxy 的作業。 訊息，該實作<xref:System.Runtime.Remoting.Messaging.IMessage>介面，請傳遞從用戶端到伺服器端叫用<xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A>訊息接收物件。 訊息接收鏈結在一起，這表示每個訊息接收會負責呼叫<xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A>上目前的訊息接收完成其工作之後的下一個訊息接收。 比方說，同步處理相關訊息接收可能會造成鎖定，以取得或釋放及委派給下游訊息接收。  
  
 格式器通道接收時取得一個訊息，需要透過管道傳送，它會呼叫<xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A>，將訊息傳遞做為參數。 呼叫與傳輸標頭陣列，接著會建立格式器接收<xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A>格式器接收上。 此呼叫接收鏈結中向下轉送，而且任何接收可以建立將會傳回給格式器接收的要求資料流。 在此之後呼叫傳回時，序列化訊息，<xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A>接收鏈結中的第一個鏈結上呼叫，並將訊息傳遞給通道接收。  
  
 通道接收之後收到訊息，寫入資料流資料、 將標頭加入至標頭陣列，便能將本身新增至接收堆疊中，然後再將轉送至下一個接收呼叫。 當呼叫到達傳輸接收鏈結的結尾時，傳輸接收會傳送標頭，並序列化訊息到伺服器，其中相反的程序在通道上。  
  
 當訊息到達伺服器端時，傳輸接收會擷取標頭和序列化資料流中的訊息並透過轉送這些接收鏈結格式器接收為止。 格式器接收然後還原序列化訊息，並將它轉送到遠端基礎結構。 遠端執行功能基礎結構會將訊息轉換成方法呼叫，然後呼叫 server 物件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Properties" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Properties { System::Collections::IDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得目前通道接收之屬性的 <see cref="T:System.Collections.IDictionary" />。</summary>
        <value>目前通道接收之屬性的 <see cref="T:System.Collections.IDictionary" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需詳細資訊，請參閱[ &#91; \<topic://cpconchannelformatterconfigurationproperties >&#93;](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeFilterLevel">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.TypeFilterLevel TypeFilterLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.TypeFilterLevel TypeFilterLevel" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.TypeFilterLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeFilterLevel As TypeFilterLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::TypeFilterLevel TypeFilterLevel { System::Runtime::Serialization::Formatters::TypeFilterLevel get(); void set(System::Runtime::Serialization::Formatters::TypeFilterLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.TypeFilterLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see langword="TypeFilterLevel" /> 所執行之自動還原序列化的 <see langword="BinaryServerFormatterSink" /> 值。</summary>
        <value>
          <see langword="TypeFilterLevel" />，表示目前的自動還原序列化層級。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 支援的值為`Low`（預設值） 和`Full`。 如需有關還原序列化層級的詳細資訊，請參閱[自動還原序列化.NET 遠端處理中](http://msdn.microsoft.com/library/313a0e88-5b2b-4a17-8391-0ddf9f7a787b)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>