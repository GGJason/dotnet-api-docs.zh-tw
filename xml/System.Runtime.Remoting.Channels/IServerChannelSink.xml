<Type Name="IServerChannelSink" FullName="System.Runtime.Remoting.Channels.IServerChannelSink">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ad4fdea2bf88d94d0458f8dcc0105ee114611c2a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36536081" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IServerChannelSink : System.Runtime.Remoting.Channels.IChannelSinkBase" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IServerChannelSink implements class System.Runtime.Remoting.Channels.IChannelSinkBase" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.IServerChannelSink" />
  <TypeSignature Language="VB.NET" Value="Public Interface IServerChannelSink&#xA;Implements IChannelSinkBase" />
  <TypeSignature Language="C++ CLI" Value="public interface class IServerChannelSink : System::Runtime::Remoting::Channels::IChannelSinkBase" />
  <TypeSignature Language="F#" Value="type IServerChannelSink = interface&#xA;    interface IChannelSinkBase" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelSinkBase</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供用於安全性和傳輸接收的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通道接收提供外掛程式的點，以允許存取的基礎訊息通過通道，以及使用傳輸機制將訊息傳送至遠端物件的資料流。 通道接收鏈結中的通道接收提供者，連結在一起並且所有的通道訊息流經此鏈結之前序列化並傳輸訊息。  
  
   
  
## Examples  
 下列程式碼範例說明實作<xref:System.Runtime.Remoting.Channels.IServerChannelSink>介面。  
  
 [!code-cpp[Remoting_Sinks#60](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Sinks/CPP/serversink.cpp#60)]
 [!code-csharp[Remoting_Sinks#60](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Sinks/CS/serversink.cs#60)]  
  
 請參閱<xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider>介面對應的伺服器接收提供者實作的範例文件。  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">營運與基礎結構程式碼。 要求的值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
  </Docs>
  <Members>
    <Member MemberName="AsyncProcessResponse">
      <MemberSignature Language="C#" Value="public void AsyncProcessResponse (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AsyncProcessResponse(class System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Channels.ITransportHeaders headers, class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.IServerChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AsyncProcessResponse(System::Runtime::Remoting::Channels::IServerResponseChannelSinkStack ^ sinkStack, System::Object ^ state, System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Channels::ITransportHeaders ^ headers, System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member AsyncProcessResponse : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream -&gt; unit" Usage="iServerChannelSink.AsyncProcessResponse (sinkStack, state, msg, headers, stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="sinkStack">會引導回伺服器傳輸接收的接收堆疊。</param>
        <param name="state">與這個接收相關聯的要求端上所產生的資訊。</param>
        <param name="msg">回應訊息。</param>
        <param name="headers">要加入至用戶端傳回訊息標題的標頭。</param>
        <param name="stream">返回至傳輸接收的資料流標題。</param>
        <summary>從非同步 (Asynchronous) 傳送的方法呼叫，要求回應的目前接收中的處理。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `state`參數會包含已推入至通道接收堆疊，而且與目前接收相關聯的資訊。  
  
   
  
## Examples  
 [!code-cpp[CommonTransportKeys#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CommonTransportKeys/CPP/commontransportkeys.cpp#1)]
 [!code-csharp[CommonTransportKeys#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CommonTransportKeys/CS/commontransportkeys.cs#1)]
 [!code-vb[CommonTransportKeys#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CommonTransportKeys/VB/commontransportkeys.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">立即呼叫端沒有基礎結構使用權限。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">營運與基礎結構程式碼。 要求的值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetResponseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetResponseStream (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetResponseStream(class System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Channels.ITransportHeaders headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.IServerChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResponseStream (sinkStack As IServerResponseChannelSinkStack, state As Object, msg As IMessage, headers As ITransportHeaders) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetResponseStream(System::Runtime::Remoting::Channels::IServerResponseChannelSinkStack ^ sinkStack, System::Object ^ state, System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Channels::ITransportHeaders ^ headers);" />
      <MemberSignature Language="F#" Value="abstract member GetResponseStream : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders -&gt; System.IO.Stream" Usage="iServerChannelSink.GetResponseStream (sinkStack, state, msg, headers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
      </Parameters>
      <Docs>
        <param name="sinkStack">會引導回伺服器傳輸接收的接收堆疊。</param>
        <param name="state">已經由這個接收推入至堆疊的狀態。</param>
        <param name="msg">要序列化的回應訊息。</param>
        <param name="headers">要置於用戶端的回應資料流中的標頭。</param>
        <summary>傳回所提供的回應訊息將在其上序列化的 <see cref="T:System.IO.Stream" />。</summary>
        <returns>
          <see cref="T:System.IO.Stream" />，所提供的回應訊息將在其上序列化。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 必須先建立回應資料流時，會呼叫這個方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">立即呼叫端沒有基礎結構使用權限。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">營運與基礎結構程式碼。 要求的值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="NextChannelSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Channels.IServerChannelSink NextChannelSink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.Channels.IServerChannelSink NextChannelSink" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.IServerChannelSink.NextChannelSink" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextChannelSink As IServerChannelSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Channels::IServerChannelSink ^ NextChannelSink { System::Runtime::Remoting::Channels::IServerChannelSink ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextChannelSink : System.Runtime.Remoting.Channels.IServerChannelSink" Usage="System.Runtime.Remoting.Channels.IServerChannelSink.NextChannelSink" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Channels.IServerChannelSink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得伺服器接收鏈結中的下一個伺服器通道接收。</summary>
        <value>伺服器接收鏈結中的下一個伺服器通道接收。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通道接收鏈結中的接收提供者，連結在一起並序列化訊息和傳輸之前，這個鏈結流經所有通道訊息。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">立即呼叫端沒有必要的 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /> 使用權限。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">營運與基礎結構程式碼。 要求的值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ProcessMessage">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Channels.ServerProcessing ProcessMessage (System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, System.Runtime.Remoting.Messaging.IMessage requestMsg, System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, System.IO.Stream requestStream, out System.Runtime.Remoting.Messaging.IMessage responseMsg, out System.Runtime.Remoting.Channels.ITransportHeaders responseHeaders, out System.IO.Stream responseStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Runtime.Remoting.Channels.ServerProcessing ProcessMessage(class System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, class System.Runtime.Remoting.Messaging.IMessage requestMsg, class System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, class System.IO.Stream requestStream, [out] class System.Runtime.Remoting.Messaging.IMessage&amp; responseMsg, [out] class System.Runtime.Remoting.Channels.ITransportHeaders&amp; responseHeaders, [out] class System.IO.Stream&amp; responseStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ProcessMessage (sinkStack As IServerChannelSinkStack, requestMsg As IMessage, requestHeaders As ITransportHeaders, requestStream As Stream, ByRef responseMsg As IMessage, ByRef responseHeaders As ITransportHeaders, ByRef responseStream As Stream) As ServerProcessing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::Channels::ServerProcessing ProcessMessage(System::Runtime::Remoting::Channels::IServerChannelSinkStack ^ sinkStack, System::Runtime::Remoting::Messaging::IMessage ^ requestMsg, System::Runtime::Remoting::Channels::ITransportHeaders ^ requestHeaders, System::IO::Stream ^ requestStream, [Runtime::InteropServices::Out] System::Runtime::Remoting::Messaging::IMessage ^ % responseMsg, [Runtime::InteropServices::Out] System::Runtime::Remoting::Channels::ITransportHeaders ^ % responseHeaders, [Runtime::InteropServices::Out] System::IO::Stream ^ % responseStream);" />
      <MemberSignature Language="F#" Value="abstract member ProcessMessage : System.Runtime.Remoting.Channels.IServerChannelSinkStack * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream *  *  *  -&gt; System.Runtime.Remoting.Channels.ServerProcessing" Usage="iServerChannelSink.ProcessMessage (sinkStack, requestMsg, requestHeaders, requestStream, responseMsg, responseHeaders, responseStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Channels.ServerProcessing</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerChannelSinkStack" />
        <Parameter Name="requestMsg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="requestHeaders" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
        <Parameter Name="requestStream" Type="System.IO.Stream" />
        <Parameter Name="responseMsg" Type="System.Runtime.Remoting.Messaging.IMessage&amp;" RefType="out" />
        <Parameter Name="responseHeaders" Type="System.Runtime.Remoting.Channels.ITransportHeaders&amp;" RefType="out" />
        <Parameter Name="responseStream" Type="System.IO.Stream&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="sinkStack">呼叫目前接收的通道接收堆疊。</param>
        <param name="requestMsg">包含要求的訊息。</param>
        <param name="requestHeaders">從來自用戶端的連入訊息中擷取的標頭。</param>
        <param name="requestStream">必須處理和傳遞至還原序列化 (Deserialization) 接收的資料流。</param>
        <param name="responseMsg">當這個方法傳回時，會包含存有回應訊息的 <see cref="T:System.Runtime.Remoting.Messaging.IMessage" />。 這個參數會以未初始化的狀態傳遞。</param>
        <param name="responseHeaders">當這個方法傳回時，會包含保存標頭的 <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" />，而這些標頭將加入前往用戶端的傳回訊息。 這個參數會以未初始化的狀態傳遞。</param>
        <param name="responseStream">當這個方法傳回時，包含返回至傳輸接收的 <see cref="T:System.IO.Stream" />。 這個參數會以未初始化的狀態傳遞。</param>
        <summary>要求來自目前接收的訊息處理。</summary>
        <returns>
          <see cref="T:System.Runtime.Remoting.Channels.ServerProcessing" /> 狀態值，提供訊息如何處理的相關資訊。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 為訊息物件上叫用的方法呼叫轉換為 proxy 的工作。 此訊息物件，它會實作<xref:System.Runtime.Remoting.Messaging.IMessage>介面，請傳遞從用戶端到伺服器端叫用<xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A>訊息接收物件。 訊息接收鏈結在一起，因為每個訊息接收會負責呼叫<xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A>上它已執行其工作之後的下一個訊息接收。 例如，同步處理相關訊息接收可能會造成鎖定被取得或釋放，，然後委派進一步的下游訊息接收。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">立即呼叫端沒有基礎結構使用權限。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">營運與基礎結構程式碼。 要求的值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;權限的值： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>