<Type Name="SpeechSynthesizer" FullName="System.Speech.Synthesis.SpeechSynthesizer">
  <TypeSignature Language="C#" Value="public sealed class SpeechSynthesizer : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SpeechSynthesizer extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.SpeechSynthesizer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SpeechSynthesizer&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpeechSynthesizer sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="1f17c-101">提供安裝的語音合成引擎功能的存取權。</span><span class="sxs-lookup"><span data-stu-id="1f17c-101">Provides access to the functionality of an installed speech synthesis engine.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-102">當您建立新<xref:System.Speech.Synthesis.SpeechSynthesizer>物件，它會使用預設系統語音。</span><span class="sxs-lookup"><span data-stu-id="1f17c-102">When you create a new <xref:System.Speech.Synthesis.SpeechSynthesizer> object, it uses the default system voice.</span></span> <span data-ttu-id="1f17c-103">若要設定<xref:System.Speech.Synthesis.SpeechSynthesizer>若要使用的已安裝的語音合成文字轉換語音 （」） 之其中一個，<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>或<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-103">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> to use one of the installed speech synthesis (text-to-speech) voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="1f17c-104">若要取得的語音已安裝的資訊，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>類別。</span><span class="sxs-lookup"><span data-stu-id="1f17c-104">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
 <span data-ttu-id="1f17c-105">這個類別也會提供控制語音合成的下列層面：</span><span class="sxs-lookup"><span data-stu-id="1f17c-105">This class also provides control over the following aspects of speech synthesis:</span></span>  
  
-   <span data-ttu-id="1f17c-106">若要設定的輸出<xref:System.Speech.Synthesis.SpeechSynthesizer>物件，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>，和<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-106">To configure the output for the <xref:System.Speech.Synthesis.SpeechSynthesizer> object, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> methods.</span></span>  
  
-   <span data-ttu-id="1f17c-107">若要產生語音，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>，或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-107">To generate speech, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="1f17c-108"><xref:System.Speech.Synthesis.SpeechSynthesizer>可能會產生文字的語音<xref:System.Speech.Synthesis.Prompt>或<xref:System.Speech.Synthesis.PromptBuilder>物件，或從[語音合成標記語言 (SSML) 1.0 版](http://go.microsoft.com/fwlink/?LinkId=201763)。</span><span class="sxs-lookup"><span data-stu-id="1f17c-108">The <xref:System.Speech.Synthesis.SpeechSynthesizer> can produce speech from text, a <xref:System.Speech.Synthesis.Prompt> or <xref:System.Speech.Synthesis.PromptBuilder> object, or from [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span></span>  
  
-   <span data-ttu-id="1f17c-109">若要暫停及繼續語音合成器，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A>和<xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-109">To pause and resume speech synthesis, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> methods.</span></span>  
  
-   <span data-ttu-id="1f17c-110">若要新增或移除 lexicon 除外，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>和<xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-110">To add or remove lexicons, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> methods.</span></span> <span data-ttu-id="1f17c-111"><xref:System.Speech.Synthesis.SpeechSynthesizer>可以使用一或多個 lexicon 除外，來引導其發音的文字。</span><span class="sxs-lookup"><span data-stu-id="1f17c-111">The <xref:System.Speech.Synthesis.SpeechSynthesizer> can use one or more lexicons to guide its pronunciation of words.</span></span>  
  
-   <span data-ttu-id="1f17c-112">若要修改的語音輸出傳遞，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A>和<xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1f17c-112">To modify the delivery of speech output, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Rate%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Volume%2A> properties.</span></span>  
  
 <span data-ttu-id="1f17c-113"><xref:System.Speech.Synthesis.SpeechSynthesizer>引發事件會在遇到提示中的特定功能: (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>， <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>， <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>，和<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>)。</span><span class="sxs-lookup"><span data-stu-id="1f17c-113">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises events when it encounters certain features in prompts: (<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>, <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>).</span></span> <span data-ttu-id="1f17c-114">它也會引發報告的開始事件 (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) 和 end (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) 的說話作業和讀出聲音的變更 (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>)。</span><span class="sxs-lookup"><span data-stu-id="1f17c-114">It also raises events that report on the start (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>) and end (<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>) of speak operations and on the change of the speaking voice (<xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1f17c-115">在您釋放最後一個 <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> 參考之前，請務必呼叫 <xref:System.Speech.Synthesis.SpeechSynthesizer>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-115">Always call <xref:System.Speech.Synthesis.SpeechSynthesizer.Dispose%2A> before you release your last reference to the <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span></span> <span data-ttu-id="1f17c-116">否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <xref:System.Speech.Synthesis.SpeechSynthesizer> 物件的 <xref:System.Object.Finalize%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-116">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Speech.Synthesis.SpeechSynthesizer> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f17c-117">下列範例是主控台應用程式，以初始化一部分<xref:System.Speech.Synthesis.SpeechSynthesizer>物件，並說出的字串。</span><span class="sxs-lookup"><span data-stu-id="1f17c-117">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and speaks a string.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string.  
      synth.Speak("This example demonstrates a basic use of Speech Synthesizer");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
    <altmember cref="T:System.Speech.Synthesis.Prompt" />
    <altmember cref="T:System.Speech.Synthesis.PromptBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SpeechSynthesizer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f17c-118">初始化 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="1f17c-118">Initializes a new instance of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-119">當您初始化新<xref:System.Speech.Synthesis.SpeechSynthesizer>執行個體，它會使用預設系統語音。</span><span class="sxs-lookup"><span data-stu-id="1f17c-119">When you initialize a new <xref:System.Speech.Synthesis.SpeechSynthesizer> instance, it uses the default system voice.</span></span> <span data-ttu-id="1f17c-120">若要設定<xref:System.Speech.Synthesis.SpeechSynthesizer>若要使用的已安裝的語音合成文字轉換語音 （」） 之其中一個，<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>或<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-120">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> to use one of the installed speech synthesis (text-to-speech) voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="1f17c-121">若要取得的語音已安裝的資訊，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>類別。</span><span class="sxs-lookup"><span data-stu-id="1f17c-121">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      </Docs>
    </Member>
    <Member MemberName="AddLexicon">
      <MemberSignature Language="C#" Value="public void AddLexicon (Uri uri, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLexicon(class System.Uri uri, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLexicon(Uri ^ uri, System::String ^ mediaType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="1f17c-122">語彙資訊的位置。</span><span class="sxs-lookup"><span data-stu-id="1f17c-122">The location of the lexicon information.</span></span></param>
        <param name="mediaType"><span data-ttu-id="1f17c-123">字典的媒體類型。</span><span class="sxs-lookup"><span data-stu-id="1f17c-123">The media type of the lexicon.</span></span> <span data-ttu-id="1f17c-124">媒體類型不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="1f17c-124">Media type values are not case sensitive.</span></span></param>
        <summary><span data-ttu-id="1f17c-125">將字典加入至 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="1f17c-125">Adds a lexicon to the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-126">發音 lexicon 是的單字或片語，以及其發音，由字母與支援的語音字母的字元組成的集合。</span><span class="sxs-lookup"><span data-stu-id="1f17c-126">A pronunciation lexicon is a collection of words or phrases together with their pronunciations, which consist of letters and characters from a supported phonetic alphabet.</span></span> <span data-ttu-id="1f17c-127">在您的應用程式中指定自訂發音為特製化的詞彙，您可以使用詞典 」。</span><span class="sxs-lookup"><span data-stu-id="1f17c-127">You can use a lexicon to specify custom pronunciations for specialized vocabulary in your application.</span></span>  
  
 <span data-ttu-id="1f17c-128">外部字典檔中指定的發音的優先順序高於語音合成器的內部詞素或字典的發音。</span><span class="sxs-lookup"><span data-stu-id="1f17c-128">Pronunciations specified in an external lexicon file take precedence over the pronunciations of the speech synthesizer's internal lexicon or dictionary.</span></span> <span data-ttu-id="1f17c-129">不過，發音中建立的任何提示中指定內嵌<xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>， <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>，或<xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A>方法的優先順序高於任何詞典 」 中指定的發音。</span><span class="sxs-lookup"><span data-stu-id="1f17c-129">However, pronunciations specified inline in prompts created with any of the <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> methods take precedence over pronunciations specified in any lexicon.</span></span> <span data-ttu-id="1f17c-130">內嵌發音僅適用於單一次出現的文字。</span><span class="sxs-lookup"><span data-stu-id="1f17c-130">Inline pronunciations apply only to a single occurrence of a word.</span></span> <span data-ttu-id="1f17c-131">請參閱[lexicon 除外和注音字母](http://msdn.microsoft.com/library/435e3c6f-6834-4e5a-b0f6-c17b2275dc51)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="1f17c-131">See [Lexicons and Phonetic Alphabets](http://msdn.microsoft.com/library/435e3c6f-6834-4e5a-b0f6-c17b2275dc51) for more information.</span></span>  
  
 <span data-ttu-id="1f17c-132">您可以加入至多個 lexicon 除外<xref:System.Speech.Synthesis.SpeechSynthesizer>物件。目前支援兩個值`mediaType`參數：</span><span class="sxs-lookup"><span data-stu-id="1f17c-132">You can add multiple lexicons to a <xref:System.Speech.Synthesis.SpeechSynthesizer> object.Two values are currently supported for the `mediaType` parameter:</span></span>  
  
-   <span data-ttu-id="1f17c-133">值`application/pls+xml`指出 lexicon 符合[發音 Lexicon 規格 (PLS) 1.0 版](http://go.microsoft.com/fwlink/?LinkId=201766)。</span><span class="sxs-lookup"><span data-stu-id="1f17c-133">The value `application/pls+xml` indicates that the lexicon conforms to the [Pronunciation Lexicon Specification (PLS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201766).</span></span> <span data-ttu-id="1f17c-134">這是要使用的慣用的格式。</span><span class="sxs-lookup"><span data-stu-id="1f17c-134">This is the preferred format to use.</span></span>  
  
-   <span data-ttu-id="1f17c-135">值`application/vdn.ms-sapi-lex`指出 lexicon 格式為未壓縮的字詞，這是 Microsoft 專屬格式。</span><span class="sxs-lookup"><span data-stu-id="1f17c-135">The value `application/vdn.ms-sapi-lex` indicates that the lexicon format is Uncompressed Lexicon, which is a Microsoft-proprietary format.</span></span> <span data-ttu-id="1f17c-136">這是舊版的格式，而且我們建議您使用上面所述的 PLS 格式。</span><span class="sxs-lookup"><span data-stu-id="1f17c-136">This is a legacy format and we recommend that you use the PLS format described above.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f17c-137">下列範例示範加入和移除詞典 」 包含單字"blue"的自訂發音的效果。</span><span class="sxs-lookup"><span data-stu-id="1f17c-137">The following example demonstrates the effect of adding and removing a lexicon that contains a custom pronunciation for the word "blue".</span></span> <span data-ttu-id="1f17c-138">Lexicon 定義為"blue"發音如同 「 bleep"。</span><span class="sxs-lookup"><span data-stu-id="1f17c-138">The lexicon defines the pronunciation of "blue" to sound like "bleep".</span></span> <span data-ttu-id="1f17c-139">載入詞典 」 時，語音合成器會使用 「 詞典 」 中定義的發音。</span><span class="sxs-lookup"><span data-stu-id="1f17c-139">While the lexicon is loaded, the speech synthesizer uses the pronunciation defined in the lexicon.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Add a lexicon that changes the pronunciation of "blue".  
        synth.AddLexicon(new Uri("C:\\test\\Blue.pls"), "application/pls+xml");  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
  
        // Remove the lexicon.  
        synth.RemoveLexicon(new Uri("C:\\test\\Blue.pls"));  
  
        // Speak the prompt.  
        synth.Speak("My favorite color is blue.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 <span data-ttu-id="1f17c-140">以下是 Blue.pls lexicon 檔案的內容：</span><span class="sxs-lookup"><span data-stu-id="1f17c-140">Following are the contents of the lexicon file Blue.pls:</span></span>  
  
```xml  
<?xml version="1.0" encoding="UTF-8"?>  
  
<lexicon version="1.0"   
      xmlns="http://www.w3.org/2005/01/pronunciation-lexicon"  
      alphabet="x-microsoft-ups" xml:lang="en-US">  
  
  <lexeme>  
    <grapheme> blue </grapheme>  
    <phoneme> B L I P </phoneme>  
  </lexeme>  
  
</lexicon>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="BookmarkReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BookmarkReached As EventHandler(Of BookmarkReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::BookmarkReachedEventArgs ^&gt; ^ BookmarkReached;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f17c-141"><see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 在提示中遇到書籤時引發。</span><span class="sxs-lookup"><span data-stu-id="1f17c-141">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> encounters a bookmark in a prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-142"><xref:System.Speech.Synthesis.SpeechSynthesizer>處理任一時引發這個事件<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>，或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-142">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event while processing any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span> <span data-ttu-id="1f17c-143">與事件相關聯的資料的相關資訊，請參閱<xref:System.Speech.Synthesis.BookmarkReachedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-143">For information about data associated with the event, see <xref:System.Speech.Synthesis.BookmarkReachedEventArgs>.</span></span>  
  
 <span data-ttu-id="1f17c-144">您可以加入書籤使用<xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-144">You can add bookmarks using the <xref:System.Speech.Synthesis.PromptBuilder.AppendBookmark%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f17c-145">下列範例會建立包含兩個書籤，並將輸出傳送到播放 WAV 檔案的提示。</span><span class="sxs-lookup"><span data-stu-id="1f17c-145">The following example creates a prompt that includes two bookmarks and sends the output to a WAV file for playback.</span></span> <span data-ttu-id="1f17c-146">處理常式<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>主控台引發事件時，事件會寫入及音訊資料流中的其位置的書籤的名稱。</span><span class="sxs-lookup"><span data-stu-id="1f17c-146">The handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> event writes the name of the bookmark and its position in the audio stream when the event was raised to the console.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt and append bookmarks.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
        builder.AppendBookmark("Daytime forecast");  
        builder.AppendText(  
          "Tonight's weather will be cloudy with a 30% chance of showers.");  
        builder.AppendBookmark("Nightime forecast");  
  
        // Add a handler for the BookmarkReached event.  
        synth.BookmarkReached +=  
          new EventHandler<BookmarkReachedEventArgs>(synth_BookmarkReached);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write the name and position of the bookmark to the console.  
    static void synth_BookmarkReached(object sender, BookmarkReachedEventArgs e)  
    {  
      Console.WriteLine("Bookmark ({0}) reached at: {1} ",  
        e.Bookmark, e.AudioPosition);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f17c-147">處置 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 物件，並釋放工作階段期間所使用的資源。</span><span class="sxs-lookup"><span data-stu-id="1f17c-147">Disposes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object and releases resources used during the session.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SpeechSynthesizer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SpeechSynthesizer ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f17c-148">在未呼叫 <see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" /> 方法時，做為清除資源的防護措施。</span><span class="sxs-lookup"><span data-stu-id="1f17c-148">Acts as a safeguard to clean up resources in the event that the <see cref="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" /> method is not called.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentlySpokenPrompt">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentlySpokenPrompt () As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ GetCurrentlySpokenPrompt();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f17c-149">取得 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 正在讀出的提示。</span><span class="sxs-lookup"><span data-stu-id="1f17c-149">Gets the prompt that the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> is speaking.</span></span></summary>
        <returns><span data-ttu-id="1f17c-150">傳回目前說出的提示物件。</span><span class="sxs-lookup"><span data-stu-id="1f17c-150">Returns the prompt object that is currently being spoken.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
  
```csharp  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInstalledVoices">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1f17c-151">傳回目前已安裝在系統上的語音合成 (文字轉換語音) 語音集合。</span><span class="sxs-lookup"><span data-stu-id="1f17c-151">Returns the collection of speech synthesis (text-to-speech) voices that are currently installed on the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-152">當應用程式呼叫<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>，此方法會驗證語音 （文字轉換語音引擎） 的每個找到的中登錄符合某些最小的準則。</span><span class="sxs-lookup"><span data-stu-id="1f17c-152">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices (engines for text-to-speech) it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="1f17c-153">無法驗證任何語音<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>設定其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性`False`。</span><span class="sxs-lookup"><span data-stu-id="1f17c-153">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="1f17c-154">應用程式無法選取語音其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性是`False`。</span><span class="sxs-lookup"><span data-stu-id="1f17c-154">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="1f17c-155">一般而言，應用程式將不會設定語音<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1f17c-155">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices () As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f17c-156">傳回所有已安裝的語音合成 (文字轉換語音) 語音。</span><span class="sxs-lookup"><span data-stu-id="1f17c-156">Returns all of the installed speech synthesis (text-to-speech) voices.</span></span></summary>
        <returns><span data-ttu-id="1f17c-157">傳回目前安裝在系統上的語音的唯讀集合。</span><span class="sxs-lookup"><span data-stu-id="1f17c-157">Returns a read-only collection of the voices currently installed on the system.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-158">語音是安裝在系統的語音合成 （語音或 TTS） 引擎。</span><span class="sxs-lookup"><span data-stu-id="1f17c-158">A voice is an engine for speech synthesis (text-to-speech or TTS) that is installed on the system.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f17c-159">下列範例是主控台應用程式，以初始化一部分<xref:System.Speech.Synthesis.SpeechSynthesizer>物件輸出至主控台已安裝的語音 （語音合成引擎） 的清單，並示範可供每個語音的資訊。</span><span class="sxs-lookup"><span data-stu-id="1f17c-159">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices (engines for speech synthesis) and demonstrates the information that is available for each voice.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices.   
        Console.WriteLine("Installed voices -");  
        foreach (InstalledVoice voice in synth.GetInstalledVoices())  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          string AudioFormats = "";  
          foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)  
          {  
            AudioFormats += String.Format("{0}\n",  
            fmt.EncodingFormat.ToString());  
          }  
  
          Console.WriteLine(" Name:          " + info.Name);  
          Console.WriteLine(" Culture:       " + info.Culture);  
          Console.WriteLine(" Age:           " + info.Age);  
          Console.WriteLine(" Gender:        " + info.Gender);  
          Console.WriteLine(" Description:   " + info.Description);  
          Console.WriteLine(" ID:            " + info.Id);  
          Console.WriteLine(" Enabled:       " + voice.Enabled);  
          if (info.SupportedAudioFormats.Count != 0)  
          {  
            Console.WriteLine( " Audio formats: " + AudioFormats);  
          }  
          else  
          {  
            Console.WriteLine(" No supported audio formats found");  
          }  
  
          string AdditionalInfo = "";  
          foreach (string key in info.AdditionalInfo.Keys)  
          {  
            AdditionalInfo += String.Format("  {0}: {1}\n", key, info.AdditionalInfo[key]);  
          }  
  
          Console.WriteLine(" Additional Info - " + AdditionalInfo);  
          Console.WriteLine();  
        }  
      }  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints" />
        <altmember cref="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      </Docs>
    </Member>
    <Member MemberName="GetInstalledVoices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstalledVoices (culture As CultureInfo) As ReadOnlyCollection(Of InstalledVoice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Speech::Synthesis::InstalledVoice ^&gt; ^ GetInstalledVoices(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="1f17c-160">語音必須支援的地區設定。</span><span class="sxs-lookup"><span data-stu-id="1f17c-160">The locale that the voice must support.</span></span></param>
        <summary><span data-ttu-id="1f17c-161">傳回支援特定地區設定的所有已安裝語音合成 (文字轉換語音) 語音。</span><span class="sxs-lookup"><span data-stu-id="1f17c-161">Returns all of the installed speech synthesis  (text-to-speech) voices that support a specific locale.</span></span></summary>
        <returns><span data-ttu-id="1f17c-162">傳回目前安裝在系統上且支援指定的地區設定的語音的唯讀集合。</span><span class="sxs-lookup"><span data-stu-id="1f17c-162">Returns a read-only collection of the voices currently installed on the system that support the specified locale.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-163">如果沒有任何已安裝的語音支援指定的地區設定，這個方法會傳回空集合。</span><span class="sxs-lookup"><span data-stu-id="1f17c-163">If none of the installed voices support the specified locale, this method returns an empty collection.</span></span>  
  
 <span data-ttu-id="1f17c-164">Microsoft Windows 和 System.Speech API 接受所有有效國家 （地區） 語言代碼。</span><span class="sxs-lookup"><span data-stu-id="1f17c-164">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="1f17c-165">若要執行文字轉換語音使用文化特性屬性中指定的語言，必須安裝支援該語言的國家/地區的程式碼的語音合成引擎。</span><span class="sxs-lookup"><span data-stu-id="1f17c-165">To perform text-to-speech using the language specified in the Culture property, a speech synthesis engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="1f17c-166">隨附於 Microsoft Windows 7 的語音合成引擎使用下列語言的國家/地區代碼：</span><span class="sxs-lookup"><span data-stu-id="1f17c-166">The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:</span></span>  
  
-   <span data-ttu-id="1f17c-167">EN-US。</span><span class="sxs-lookup"><span data-stu-id="1f17c-167">en-US.</span></span> <span data-ttu-id="1f17c-168">英文 （美國）</span><span class="sxs-lookup"><span data-stu-id="1f17c-168">English (United States)</span></span>  
  
-   <span data-ttu-id="1f17c-169">zh-chs 和 CN。</span><span class="sxs-lookup"><span data-stu-id="1f17c-169">zh-CN.</span></span> <span data-ttu-id="1f17c-170">中文 （中國）</span><span class="sxs-lookup"><span data-stu-id="1f17c-170">Chinese (China)</span></span>  
  
-   <span data-ttu-id="1f17c-171">zh-chs 和 TW。</span><span class="sxs-lookup"><span data-stu-id="1f17c-171">zh-TW.</span></span> <span data-ttu-id="1f17c-172">中文 （台灣）</span><span class="sxs-lookup"><span data-stu-id="1f17c-172">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="1f17c-173">也允許兩個字母的語言代碼，例如"en-us"。</span><span class="sxs-lookup"><span data-stu-id="1f17c-173">Two-letter language codes such as "en" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f17c-174">下列範例是主控台應用程式，以初始化一部分<xref:System.Speech.Synthesis.SpeechSynthesizer>物件，並輸出至主控台已安裝的語音支援 EN-US 地區設定的清單。</span><span class="sxs-lookup"><span data-stu-id="1f17c-174">The following example is part of a console application that initializes a <xref:System.Speech.Synthesis.SpeechSynthesizer> object and outputs to the console a list of the installed voices that support the en-US locale.</span></span>  
  
```csharp  
using System;  
using System.Globalization;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synthesizer = new SpeechSynthesizer())  
      {  
  
        // Output information about all of the installed voices that  
        // support the en-US locacale.   
        Console.WriteLine("Installed voices for the en-US locale:");  
        foreach (InstalledVoice voice in  
          synthesizer.GetInstalledVoices(new CultureInfo("en-US")))  
        {  
          VoiceInfo info = voice.VoiceInfo;  
          OutputVoiceInfo(info);  
        }  
  
        // Output information about the current voice.  
        Console.WriteLine();  
        Console.WriteLine("Current voice:");  
        OutputVoiceInfo(synthesizer.Voice);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Display information about a synthesizer voice.  
    private static void OutputVoiceInfo(VoiceInfo info)  
    {  
      Console.WriteLine("  Name: {0}, culture: {1}, gender: {2}, age: {3}.",  
        info.Name, info.Culture, info.Gender, info.Age);  
      Console.WriteLine("    Description: {0}", info.Description);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.InstalledVoice" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f17c-175">暫停 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="1f17c-175">Pauses the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="PhonemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PhonemeReached As EventHandler(Of PhonemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::PhonemeReachedEventArgs ^&gt; ^ PhonemeReached;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f17c-176">到達音素時引發。</span><span class="sxs-lookup"><span data-stu-id="1f17c-176">Raised when a phoneme is reached.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-177">音素是基本的撰寫語言元件，通常代表一或多個相異的音效英文字母 （或兩個字母的組合） 的字母。</span><span class="sxs-lookup"><span data-stu-id="1f17c-177">A phoneme is a basic component of written language, typically a letter of an alphabet (or the combination of two letters) that represents one or more distinct sounds.</span></span> <span data-ttu-id="1f17c-178">例如，字母"c"是似乎像是中 「 cinder"、"s"或"k"在"catch"像音素。</span><span class="sxs-lookup"><span data-stu-id="1f17c-178">For example, the letter "c" is a phoneme that may sound like "s" in "cinder", or like "k" in "catch".</span></span> <span data-ttu-id="1f17c-179">書寫的文字是音素的組合。</span><span class="sxs-lookup"><span data-stu-id="1f17c-179">A written word is an assemblage of phonemes.</span></span> <span data-ttu-id="1f17c-180">在 word 變更音素會改變其拼字檢查。</span><span class="sxs-lookup"><span data-stu-id="1f17c-180">Changing a phoneme in a word will alter its spelling.</span></span>  
  
 <span data-ttu-id="1f17c-181">A<xref:System.Speech.Synthesis.SpeechSynthesizer>執行個體會產生<xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>單字構成音素的每個部分的事件。</span><span class="sxs-lookup"><span data-stu-id="1f17c-181">A <xref:System.Speech.Synthesis.SpeechSynthesizer> instance generates a <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> event for each portion of a word that constitutes a phoneme.</span></span> <span data-ttu-id="1f17c-182">例如，word 「 主題 」 會產生三個<xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>"th"音效、 另一個用於"e"聲音，和另一個用於"m"聲音 (me); 事件。</span><span class="sxs-lookup"><span data-stu-id="1f17c-182">For example, for the word "theme" would generate three <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> events; one for the "th" sound, one for the "e" sound, and one for the "m" sound (me).</span></span>  
  
 <span data-ttu-id="1f17c-183">如需範例和資料與事件相關聯的相關資訊，請參閱<xref:System.Speech.Synthesis.PhonemeReachedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-183">For an example and information about data associated with the event, see <xref:System.Speech.Synthesis.PhonemeReachedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Rate">
      <MemberSignature Language="C#" Value="public int Rate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rate" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Rate" />
      <MemberSignature Language="VB.NET" Value="Public Property Rate As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Rate { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f17c-184">取得或設定 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 物件的讀出速率。</span><span class="sxs-lookup"><span data-stu-id="1f17c-184">Gets or sets the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <value><span data-ttu-id="1f17c-185">傳回 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 物件的說話速率，從 -10 到 10。</span><span class="sxs-lookup"><span data-stu-id="1f17c-185">Returns the speaking rate of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object, from -10 through 10.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1f17c-186">下列範例會設定為-2 的讀出速率與來說字串。</span><span class="sxs-lookup"><span data-stu-id="1f17c-186">The following example speaks a string with the speaking rate set to -2.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Set a value for the speaking rate.  
      synth.Rate = -2;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a text string synchronously.  
      synth.Speak("This example speaks a string with the speaking rate set to -2.");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }     
  }    
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.PromptStyle" />
        <altmember cref="T:System.Speech.Synthesis.PromptRate" />
      </Docs>
    </Member>
    <Member MemberName="RemoveLexicon">
      <MemberSignature Language="C#" Value="public void RemoveLexicon (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveLexicon(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveLexicon(Uri ^ uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="1f17c-187">字典文件的位置。</span><span class="sxs-lookup"><span data-stu-id="1f17c-187">The location of the lexicon document.</span></span></param>
        <summary><span data-ttu-id="1f17c-188">從 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 物件中移除字典。</span><span class="sxs-lookup"><span data-stu-id="1f17c-188">Removes a lexicon from the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-189">如需範例，請參閱 <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-189">See <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f17c-190">在暫停 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 物件之後使其繼續。</span><span class="sxs-lookup"><span data-stu-id="1f17c-190">Resumes the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object after it has been paused.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
        <altmember cref="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoice">
      <MemberSignature Language="C#" Value="public void SelectVoice (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoice(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoice (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoice(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1f17c-191">要選取之語音的名稱。</span><span class="sxs-lookup"><span data-stu-id="1f17c-191">The name of the voice to select.</span></span></param>
        <summary><span data-ttu-id="1f17c-192">依名稱選取特定的語音。</span><span class="sxs-lookup"><span data-stu-id="1f17c-192">Selects a specific voice by name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-193">使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>類別，以取得安裝可選取的文字轉換語音 (TTS) 語音。</span><span class="sxs-lookup"><span data-stu-id="1f17c-193">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="1f17c-194">若要選取語音，請傳送的整個內容<xref:System.Speech.Synthesis.VoiceInfo.Name%2A>屬性做為引數<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-194">To select a voice, pass the entire contents of the <xref:System.Speech.Synthesis.VoiceInfo.Name%2A> property as the argument for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span> <span data-ttu-id="1f17c-195"><xref:System.Speech.Synthesis.SpeechSynthesizer>物件會選取第一個已安裝的語音，其中包含`name`的語音<xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="1f17c-195">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice that contains `name` in the voice's <xref:System.Speech.Synthesis.VoiceInfo.Name%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="1f17c-196"><xref:System.Speech.Synthesis.SpeechSynthesizer>執行區分大小寫，子字串比較來決定是否要符合的語音`name`。</span><span class="sxs-lookup"><span data-stu-id="1f17c-196">The <xref:System.Speech.Synthesis.SpeechSynthesizer> performs a case-sensitive, substring comparison to determine if the voice matches the `name`.</span></span>  
  
 <span data-ttu-id="1f17c-197">當應用程式呼叫<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>，此方法會驗證每個在登錄中找到的語音符合某些最小的準則。</span><span class="sxs-lookup"><span data-stu-id="1f17c-197">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="1f17c-198">無法驗證任何語音<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>設定其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性`False`。</span><span class="sxs-lookup"><span data-stu-id="1f17c-198">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="1f17c-199">應用程式無法選取語音其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性是`False`。</span><span class="sxs-lookup"><span data-stu-id="1f17c-199">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="1f17c-200">一般而言，應用程式將不會設定語音<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1f17c-200">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="1f17c-201">若要選取語音的性別、 年齡或地區設定，請使用其中一種<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-201">To select a voice by gender, age, or locale, use one of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectVoiceByHints">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1f17c-202">選取特定特性的語音。</span><span class="sxs-lookup"><span data-stu-id="1f17c-202">Selects a voice with specific characteristics.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-203">使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>類別，以取得安裝可選取的文字轉換語音 (TTS) 語音。</span><span class="sxs-lookup"><span data-stu-id="1f17c-203">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="1f17c-204"><xref:System.Speech.Synthesis.SpeechSynthesizer>物件會選取第一個已安裝的語音符合指定的特性。</span><span class="sxs-lookup"><span data-stu-id="1f17c-204">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice that matches the specified characteristics.</span></span>  
  
 <span data-ttu-id="1f17c-205">當應用程式呼叫<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>，此方法會驗證每個在登錄中找到的語音符合某些最小的準則。</span><span class="sxs-lookup"><span data-stu-id="1f17c-205">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="1f17c-206">無法驗證任何語音<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>設定其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性`False`。</span><span class="sxs-lookup"><span data-stu-id="1f17c-206">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="1f17c-207">應用程式無法選取語音其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性是`False`。</span><span class="sxs-lookup"><span data-stu-id="1f17c-207">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="1f17c-208">一般而言，應用程式將不會設定語音<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1f17c-208">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="1f17c-209">若要依名稱選取語音，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>方法</span><span class="sxs-lookup"><span data-stu-id="1f17c-209">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="1f17c-210">要選取的語音的性別。</span><span class="sxs-lookup"><span data-stu-id="1f17c-210">The gender of the voice to select.</span></span></param>
        <summary><span data-ttu-id="1f17c-211">選取特定性別的語音。</span><span class="sxs-lookup"><span data-stu-id="1f17c-211">Selects a voice with a specific gender.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-212">使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>類別，以取得安裝可選取的文字轉換語音 (TTS) 語音。</span><span class="sxs-lookup"><span data-stu-id="1f17c-212">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="1f17c-213"><xref:System.Speech.Synthesis.SpeechSynthesizer>物件會選取第一個已安裝的語音其<xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>屬性相符項目`gender`參數。</span><span class="sxs-lookup"><span data-stu-id="1f17c-213">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> property matches the `gender` parameter.</span></span>  
  
 <span data-ttu-id="1f17c-214">當應用程式呼叫<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>，此方法會驗證每個在登錄中找到的語音符合某些最小的準則。</span><span class="sxs-lookup"><span data-stu-id="1f17c-214">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="1f17c-215">無法驗證任何語音<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>設定其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性`False`。</span><span class="sxs-lookup"><span data-stu-id="1f17c-215">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="1f17c-216">應用程式無法選取語音其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性是`False`。</span><span class="sxs-lookup"><span data-stu-id="1f17c-216">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="1f17c-217">一般而言，應用程式將不會設定語音<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1f17c-217">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="1f17c-218">若要選取其他特性為基礎的語音，請參閱其他<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-218">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 <span data-ttu-id="1f17c-219">若要依名稱選取語音，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-219">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="1f17c-220">要選取的語音的性別。</span><span class="sxs-lookup"><span data-stu-id="1f17c-220">The gender of the voice to select.</span></span></param>
        <param name="age"><span data-ttu-id="1f17c-221">要選取之語音的年齡。</span><span class="sxs-lookup"><span data-stu-id="1f17c-221">The age of the voice to select.</span></span></param>
        <summary><span data-ttu-id="1f17c-222">選取特定性別和年齡的語音。</span><span class="sxs-lookup"><span data-stu-id="1f17c-222">Selects a voice with a specific gender and age.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-223">使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>類別，以取得安裝可選取的文字轉換語音 (TTS) 語音。</span><span class="sxs-lookup"><span data-stu-id="1f17c-223">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="1f17c-224"><xref:System.Speech.Synthesis.SpeechSynthesizer>物件會選取第一個已安裝的語音其<xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>和<xref:System.Speech.Synthesis.VoiceInfo.Age%2A>屬性比對`gender`和`age`參數。</span><span class="sxs-lookup"><span data-stu-id="1f17c-224">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object selects the first installed voice whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> and <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> properties match the `gender` and `age` parameters.</span></span>  
  
 <span data-ttu-id="1f17c-225">當應用程式呼叫<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>，此方法會驗證每個在登錄中找到的語音符合某些最小的準則。</span><span class="sxs-lookup"><span data-stu-id="1f17c-225">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="1f17c-226">無法驗證任何語音<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>設定其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性`False`。</span><span class="sxs-lookup"><span data-stu-id="1f17c-226">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="1f17c-227">應用程式無法選取語音其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性是`False`。</span><span class="sxs-lookup"><span data-stu-id="1f17c-227">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="1f17c-228">一般而言，應用程式將不會設定語音<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1f17c-228">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="1f17c-229">若要選取其他特性為基礎的語音，請參閱其他<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-229">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 <span data-ttu-id="1f17c-230">若要依名稱選取語音，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-230">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="1f17c-231">要選取的語音的性別。</span><span class="sxs-lookup"><span data-stu-id="1f17c-231">The gender of the voice to select.</span></span></param>
        <param name="age"><span data-ttu-id="1f17c-232">要選取之語音的年齡。</span><span class="sxs-lookup"><span data-stu-id="1f17c-232">The age of the voice to select.</span></span></param>
        <param name="voiceAlternate"><span data-ttu-id="1f17c-233">要選取之語音的位置。</span><span class="sxs-lookup"><span data-stu-id="1f17c-233">The position of the voice to select.</span></span></param>
        <summary><span data-ttu-id="1f17c-234">根據已排序的語音位置，選取特定性別和年齡的語音。</span><span class="sxs-lookup"><span data-stu-id="1f17c-234">Selects a voice with a specific gender and age, based on the position in which the voices are ordered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-235">使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>類別，以取得安裝可選取的文字轉換語音 (TTS) 語音。</span><span class="sxs-lookup"><span data-stu-id="1f17c-235">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names of installed text-to-speech (TTS) voices that you can select.</span></span> <span data-ttu-id="1f17c-236"><xref:System.Speech.Synthesis.SpeechSynthesizer>物件，會發現安裝 voices 其<xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>和<xref:System.Speech.Synthesis.VoiceInfo.Age%2A>屬性比對`gender`和`age`參數。</span><span class="sxs-lookup"><span data-stu-id="1f17c-236">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object finds installed voices whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A> and <xref:System.Speech.Synthesis.VoiceInfo.Age%2A> properties match the `gender` and `age` parameters.</span></span> <span data-ttu-id="1f17c-237"><xref:System.Speech.Synthesis.SpeechSynthesizer>計算的符合項目它發現，並傳回語音，當計數等於`voiceAlternate`參數。</span><span class="sxs-lookup"><span data-stu-id="1f17c-237">The <xref:System.Speech.Synthesis.SpeechSynthesizer> counts the matches it finds, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="1f17c-238">當應用程式呼叫<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>，此方法會驗證每個在登錄中找到的語音符合某些最小的準則。</span><span class="sxs-lookup"><span data-stu-id="1f17c-238">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="1f17c-239">無法驗證任何語音<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>設定其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性`False`。</span><span class="sxs-lookup"><span data-stu-id="1f17c-239">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="1f17c-240">應用程式無法選取語音其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性是`False`。</span><span class="sxs-lookup"><span data-stu-id="1f17c-240">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="1f17c-241">一般而言，應用程式將不會設定語音<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1f17c-241">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="1f17c-242">若要選取其他特性為基礎的語音，請參閱其他<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>多載。</span><span class="sxs-lookup"><span data-stu-id="1f17c-242">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overloads.</span></span>  
  
 <span data-ttu-id="1f17c-243">若要依名稱選取語音，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-243">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SelectVoiceByHints">
      <MemberSignature Language="C#" Value="public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectVoiceByHints(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectVoiceByHints (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer, culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectVoiceByHints(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="1f17c-244">要選取的語音的性別。</span><span class="sxs-lookup"><span data-stu-id="1f17c-244">The gender of the voice to select.</span></span></param>
        <param name="age"><span data-ttu-id="1f17c-245">要選取之語音的年齡。</span><span class="sxs-lookup"><span data-stu-id="1f17c-245">The age of the voice to select.</span></span></param>
        <param name="voiceAlternate"><span data-ttu-id="1f17c-246">要選取之語音的位置。</span><span class="sxs-lookup"><span data-stu-id="1f17c-246">The position of the voice to select.</span></span></param>
        <param name="culture"><span data-ttu-id="1f17c-247">要選取之語音的地區設定。</span><span class="sxs-lookup"><span data-stu-id="1f17c-247">The locale of the voice to select.</span></span></param>
        <summary><span data-ttu-id="1f17c-248">根據已排序的語音位置，選取特定性別、年齡和地區設定的語音。</span><span class="sxs-lookup"><span data-stu-id="1f17c-248">Selects a voice with a specific gender, age, and locale, based on the position in which the voices are ordered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-249"><xref:System.Speech.Synthesis.SpeechSynthesizer>物件尋找 voices 其<xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>， <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>，和<xref:System.Speech.Synthesis.VoiceInfo.Culture%2A>屬性比對`gender`， `age`，和`culture`參數。</span><span class="sxs-lookup"><span data-stu-id="1f17c-249">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object finds voices whose <xref:System.Speech.Synthesis.VoiceInfo.Gender%2A>, <xref:System.Speech.Synthesis.VoiceInfo.Age%2A>, and <xref:System.Speech.Synthesis.VoiceInfo.Culture%2A> properties match the `gender`, `age`, and `culture` parameters.</span></span> <span data-ttu-id="1f17c-250"><xref:System.Speech.Synthesis.SpeechSynthesizer>計算的符合項目它發現，並傳回語音，當計數等於`voiceAlternate`參數。</span><span class="sxs-lookup"><span data-stu-id="1f17c-250">The <xref:System.Speech.Synthesis.SpeechSynthesizer> counts the matches it finds, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="1f17c-251">Microsoft Windows 和 System.Speech API 接受所有有效國家 （地區） 語言代碼。</span><span class="sxs-lookup"><span data-stu-id="1f17c-251">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="1f17c-252">若要執行使用中所指定語言的文字轉換語音`culture`參數、 語音合成引擎支援，必須安裝語言國家/地區的程式碼。</span><span class="sxs-lookup"><span data-stu-id="1f17c-252">To perform text-to-speech using the language specified in the `culture` parameter, a speech synthesis engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="1f17c-253">隨附於 Microsoft Windows 7 的語音合成引擎使用下列語言的國家/地區代碼：</span><span class="sxs-lookup"><span data-stu-id="1f17c-253">The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:</span></span>  
  
-   <span data-ttu-id="1f17c-254">EN-US。</span><span class="sxs-lookup"><span data-stu-id="1f17c-254">en-US.</span></span> <span data-ttu-id="1f17c-255">英文 （美國）</span><span class="sxs-lookup"><span data-stu-id="1f17c-255">English (United States)</span></span>  
  
-   <span data-ttu-id="1f17c-256">zh-chs 和 CN。</span><span class="sxs-lookup"><span data-stu-id="1f17c-256">zh-CN.</span></span> <span data-ttu-id="1f17c-257">中文 （中國）</span><span class="sxs-lookup"><span data-stu-id="1f17c-257">Chinese (China)</span></span>  
  
-   <span data-ttu-id="1f17c-258">zh-chs 和 TW。</span><span class="sxs-lookup"><span data-stu-id="1f17c-258">zh-TW.</span></span> <span data-ttu-id="1f17c-259">中文 （台灣）</span><span class="sxs-lookup"><span data-stu-id="1f17c-259">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="1f17c-260">也允許兩個字母的語言代碼，例如"en-us"。</span><span class="sxs-lookup"><span data-stu-id="1f17c-260">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 <span data-ttu-id="1f17c-261">當應用程式呼叫<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>，此方法會驗證每個在登錄中找到的語音符合某些最小的準則。</span><span class="sxs-lookup"><span data-stu-id="1f17c-261">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="1f17c-262">無法驗證任何語音<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>設定其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性`False`。</span><span class="sxs-lookup"><span data-stu-id="1f17c-262">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="1f17c-263">應用程式無法選取語音其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性是`False`。</span><span class="sxs-lookup"><span data-stu-id="1f17c-263">An application cannot select a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="1f17c-264">一般而言，應用程式將不會設定語音<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1f17c-264">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 <span data-ttu-id="1f17c-265">若要選取其他特性為基礎的語音，請參閱其他<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>多載。</span><span class="sxs-lookup"><span data-stu-id="1f17c-265">To select a voice based on other characteristics, see the other <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> overloads.</span></span>  
  
 <span data-ttu-id="1f17c-266">若要依名稱選取語音，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-266">To select a voice by name, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Speech.Synthesis.VoiceAge" />
        <altmember cref="T:System.Speech.Synthesis.VoiceGender" />
        <altmember cref="T:System.Speech.Synthesis.VoiceInfo" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToAudioStream">
      <MemberSignature Language="C#" Value="public void SetOutputToAudioStream (System.IO.Stream audioDestination, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToAudioStream(class System.IO.Stream audioDestination, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToAudioStream (audioDestination As Stream, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToAudioStream(System::IO::Stream ^ audioDestination, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="audioDestination"><span data-ttu-id="1f17c-267">要附加合成輸出的資料流。</span><span class="sxs-lookup"><span data-stu-id="1f17c-267">The stream to which to append synthesis output.</span></span></param>
        <param name="formatInfo"><span data-ttu-id="1f17c-268">用於合成輸出的格式。</span><span class="sxs-lookup"><span data-stu-id="1f17c-268">The format to use for the synthesis output.</span></span></param>
        <summary><span data-ttu-id="1f17c-269">設定<see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />物件，以便將輸出附加至音訊資料流。</span><span class="sxs-lookup"><span data-stu-id="1f17c-269">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to an audio stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-270">呼叫<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>釋放<xref:System.Speech.Synthesis.SpeechSynthesizer>的資料流的參考。</span><span class="sxs-lookup"><span data-stu-id="1f17c-270">Call <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A> to release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s  reference to the stream.</span></span>  
  
 <span data-ttu-id="1f17c-271">如需其他輸出組態選項，請參閱<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>，和<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-271">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToDefaultAudioDevice">
      <MemberSignature Language="C#" Value="public void SetOutputToDefaultAudioDevice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToDefaultAudioDevice() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToDefaultAudioDevice ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToDefaultAudioDevice();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f17c-272">設定<see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />物件，以便將輸出傳送至預設音訊裝置。</span><span class="sxs-lookup"><span data-stu-id="1f17c-272">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to send output to the default audio device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-273">您可以使用**聲音**windows 視窗**控制台**設定電腦的預設音訊裝置。</span><span class="sxs-lookup"><span data-stu-id="1f17c-273">You can use the  **Sound** window in the Windows **Control Panel** to configure the default audio device for the computer.</span></span>  
  
 <span data-ttu-id="1f17c-274">如需其他輸出組態選項，請參閱<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>，和<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-274">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f17c-275">下列範例會使用合成器能夠暢所欲言預設音訊輸出的片語。</span><span class="sxs-lookup"><span data-stu-id="1f17c-275">The following example uses the synthesizer to speak a phrase to the default audio output.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the synthesizer to send output to the default audio device.  
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputToNull">
      <MemberSignature Language="C#" Value="public void SetOutputToNull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToNull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToNull();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f17c-276">設定<see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />物件，不將來自合成作業的輸出傳送至裝置、檔案或資料流。</span><span class="sxs-lookup"><span data-stu-id="1f17c-276">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to not send output from synthesis operations to a device, file, or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-277">使用這個方法來釋放<xref:System.Speech.Synthesis.SpeechSynthesizer>的檔案或資料流的參考。</span><span class="sxs-lookup"><span data-stu-id="1f17c-277">Use this method to release the <xref:System.Speech.Synthesis.SpeechSynthesizer> ‘s reference to a file or stream.</span></span> <span data-ttu-id="1f17c-278">如需範例，請參閱 <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-278">See <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> for an example.</span></span>  
  
 <span data-ttu-id="1f17c-279">如需其他輸出組態選項，請參閱<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>，和<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-279">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputToWaveFile">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1f17c-280">設定<see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />物件，以便將輸出附加至波形音訊格式的檔案。</span><span class="sxs-lookup"><span data-stu-id="1f17c-280">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-281">釋放<xref:System.Speech.Synthesis.SpeechSynthesizer>的參考至檔案，重新設定<xref:System.Speech.Synthesis.SpeechSynthesizer>的輸出，例如，藉由呼叫<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-281">To release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s  reference to the file, reconfigure the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s output, for example, by calling <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span></span>  
  
 <span data-ttu-id="1f17c-282">如需其他輸出組態選項，請參閱<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>，和<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-282">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="1f17c-283">檔案的路徑。</span><span class="sxs-lookup"><span data-stu-id="1f17c-283">The path to the file.</span></span></param>
        <summary><span data-ttu-id="1f17c-284">設定<see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />物件，以便將輸出附加至包含波形格式音訊的檔案。</span><span class="sxs-lookup"><span data-stu-id="1f17c-284">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a file that contains Waveform format audio.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-285">設定輸出和指定的音訊格式，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-285">To configure the output and specify the audio format, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f17c-286">下列範例會使用的執行個體<xref:System.Media.SoundPlayer>播放已輸出.wav 檔案的提示。</span><span class="sxs-lookup"><span data-stu-id="1f17c-286">The following example uses an instance of <xref:System.Media.SoundPlayer> to play a prompt that has been output to a .wav file.</span></span> <span data-ttu-id="1f17c-287">因為<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>呼叫是非同步的<xref:System.Media.SoundPlayer>建立執行個體 (和<xref:System.Media.SoundPlayer.Play%2A>叫用方法) 中的處理常式<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="1f17c-287">Because the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> call is asynchronous, the <xref:System.Media.SoundPlayer> instance is created (and the <xref:System.Media.SoundPlayer.Play%2A> method invoked) in the handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToWaveFile(@"C:\Test\Sample.wav");  
  
      // Register for the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Build a prompt.  
      PromptBuilder builder = new PromptBuilder();  
      builder.AppendText("This sample asynchronously speaks a prompt to a WAVE file.");  
  
      // Speak the string asynchronously.  
      synth.SpeakAsync(builder);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Handle the SpeakCompleted event.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
  
      // Create a SoundPlayer instance to play the output audio file.  
      System.Media.SoundPlayer m_SoundPlayer =  
        new System.Media.SoundPlayer(@"C:\Test\Sample.wav");  
  
      //  Play the output file.  
      m_SoundPlayer.Play();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveFile">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveFile (string path, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveFile(string path, class System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveFile (path As String, formatInfo As SpeechAudioFormatInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveFile(System::String ^ path, System::Speech::AudioFormat::SpeechAudioFormatInfo ^ formatInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="formatInfo" Type="System.Speech.AudioFormat.SpeechAudioFormatInfo" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="1f17c-288">檔案的路徑。</span><span class="sxs-lookup"><span data-stu-id="1f17c-288">The path to the file.</span></span></param>
        <param name="formatInfo"><span data-ttu-id="1f17c-289">音訊格式資訊。</span><span class="sxs-lookup"><span data-stu-id="1f17c-289">The audio format information.</span></span></param>
        <summary><span data-ttu-id="1f17c-290">設定<see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />物件，以便將輸出附加至指定格式的波形音訊格式檔案。</span><span class="sxs-lookup"><span data-stu-id="1f17c-290">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a Waveform audio format file in a specified format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1f17c-291">下列範例指定語音合成輸出的格式，並將它傳送至 WAV 檔案。</span><span class="sxs-lookup"><span data-stu-id="1f17c-291">The following example specifies the format of the output of speech synthesis and sends it to a WAV file.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\temp\test.wav",   
          new SpeechAudioFormatInfo(32000, AudioBitsPerSample.Sixteen, AudioChannel.Mono));  
  
        // Create a SoundPlayer instance to play output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =   
          new System.Media.SoundPlayer(@"C:\temp\test.wav");  
  
        // Build a prompt.  
        PromptBuilder builder = new PromptBuilder();  
        builder.AppendText("This is sample output to a WAVE file.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="SetOutputToWaveStream">
      <MemberSignature Language="C#" Value="public void SetOutputToWaveStream (System.IO.Stream audioDestination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputToWaveStream(class System.IO.Stream audioDestination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputToWaveStream (audioDestination As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputToWaveStream(System::IO::Stream ^ audioDestination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioDestination" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioDestination"><span data-ttu-id="1f17c-292">要附加合成輸出的資料流。</span><span class="sxs-lookup"><span data-stu-id="1f17c-292">The stream to which to append synthesis output.</span></span></param>
        <summary><span data-ttu-id="1f17c-293">設定<see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />物件，以便將輸出附加至包含波形格式音訊的資料流。</span><span class="sxs-lookup"><span data-stu-id="1f17c-293">Configures the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object to append output to a stream that contains Waveform format audio.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-294">釋放<xref:System.Speech.Synthesis.SpeechSynthesizer>的參考資料流，reconfigure 合成器的輸出，例如，藉由呼叫<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-294">To release the <xref:System.Speech.Synthesis.SpeechSynthesizer>’s reference to the stream, reconfigure the synthesizer's output, for example, by calling <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>.</span></span>  
  
 <span data-ttu-id="1f17c-295">如需其他輸出組態選項，請參閱<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>，和<xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-295">For other output configuration options, see the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull%2A>, and <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f17c-296">下列範例會輸出至 WAV 資料流的片語。</span><span class="sxs-lookup"><span data-stu-id="1f17c-296">The following example outputs a phrase to a WAV stream.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the speech synthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      using (MemoryStream stream = new MemoryStream())  
      {  
  
        // Create a SoundPlayer instance to play the output audio file.  
        MemoryStream streamAudio = new MemoryStream();  
        System.Media.SoundPlayer m_SoundPlayer = new System.Media.SoundPlayer();  
  
        // Configure the synthesizer to output to an audio stream.  
        synth.SetOutputToWaveStream(streamAudio);  
  
        // Speak a phrase.  
        synth.Speak("This is sample text-to-speech output.");  
        streamAudio.Position = 0;  
        m_SoundPlayer.Stream = streamAudio;  
        m_SoundPlayer.Play();  
  
        // Set the synthesizer output to null to release the stream.   
        synth.SetOutputToNull();  
  
        // Insert code to persist or process the stream contents here.  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Speak">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1f17c-297">以同步方式從字串、<see cref="T:System.Speech.Synthesis.Prompt" /> 物件或 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件產生語音輸出。</span><span class="sxs-lookup"><span data-stu-id="1f17c-297">Generates speech output synchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-298"><xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>方法以同步方式產生語音。</span><span class="sxs-lookup"><span data-stu-id="1f17c-298">The <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods generate speech synchronously.</span></span> <span data-ttu-id="1f17c-299">方法不會傳回之前的內容<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>完全說出執行個體。</span><span class="sxs-lookup"><span data-stu-id="1f17c-299">The methods do not return until the content of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> instance has been completely spoken.</span></span> <span data-ttu-id="1f17c-300">這是最簡單的方式來產生語音。</span><span class="sxs-lookup"><span data-stu-id="1f17c-300">This is the simplest way to generate speech.</span></span> <span data-ttu-id="1f17c-301">不過，如果您的應用程式需要時執行工作，例如反白顯示文字、 繪製動畫，監視控制項或其他工作，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>方法或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法來以非同步方式產生語音。</span><span class="sxs-lookup"><span data-stu-id="1f17c-301">However, if your application needs to perform tasks while speaking, for example highlight text, paint animation, monitor controls, or other tasks, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method to generate speech asynchronously.</span></span>  
  
 <span data-ttu-id="1f17c-302">在這種方法，呼叫<xref:System.Speech.Synthesis.SpeechSynthesizer>可能會引發下列事件：</span><span class="sxs-lookup"><span data-stu-id="1f17c-302">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="1f17c-303"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-303"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="1f17c-304">讀出合成器的狀態變更時引發。</span><span class="sxs-lookup"><span data-stu-id="1f17c-304">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="1f17c-305"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-305"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="1f17c-306">合成器開始產生語音時引發。</span><span class="sxs-lookup"><span data-stu-id="1f17c-306">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="1f17c-307"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-307"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="1f17c-308">合成器到達字母或構成的個別音效的語音語言的字母組合，每次引發。</span><span class="sxs-lookup"><span data-stu-id="1f17c-308">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="1f17c-309"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-309"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="1f17c-310">每次引發合成器完成讀出的文字。</span><span class="sxs-lookup"><span data-stu-id="1f17c-310">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="1f17c-311"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-311"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="1f17c-312">每次引發語音的輸出，則需要在說話或用來產生語音臉部 muscles 的位置變更。</span><span class="sxs-lookup"><span data-stu-id="1f17c-312">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="1f17c-313"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-313"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="1f17c-314">合成器遇到提示字元中的書籤時所引發。</span><span class="sxs-lookup"><span data-stu-id="1f17c-314">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="1f17c-315"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-315"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="1f17c-316">讀出的語音合成器的變更時引發。</span><span class="sxs-lookup"><span data-stu-id="1f17c-316">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
 <span data-ttu-id="1f17c-317"><xref:System.Speech.Synthesis.SpeechSynthesizer>不會引發<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>時處理的任何事件<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-317">The <xref:System.Speech.Synthesis.SpeechSynthesizer> does not raise the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event while processing any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt"><span data-ttu-id="1f17c-318">要讀出的內容。</span><span class="sxs-lookup"><span data-stu-id="1f17c-318">The content to speak.</span></span></param>
        <summary><span data-ttu-id="1f17c-319">以同步方式讀出 <see cref="T:System.Speech.Synthesis.Prompt" /> 物件的內容。</span><span class="sxs-lookup"><span data-stu-id="1f17c-319">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-320">以非同步方式說出的內容<xref:System.Speech.Synthesis.Prompt>物件，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-320">To asynchronously speak the contents of a <xref:System.Speech.Synthesis.Prompt> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f17c-321">下列範例會建立<xref:System.Speech.Synthesis.Prompt>從字串的物件，並將物件傳遞的引數為<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-321">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a prompt from a string.  
        Prompt color = new Prompt("What is your favorite color?");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(color);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder"><span data-ttu-id="1f17c-322">要讀出的內容。</span><span class="sxs-lookup"><span data-stu-id="1f17c-322">The content to speak.</span></span></param>
        <summary><span data-ttu-id="1f17c-323">以同步方式讀出 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件的內容。</span><span class="sxs-lookup"><span data-stu-id="1f17c-323">Synchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-324">以非同步方式說出的內容<xref:System.Speech.Synthesis.PromptBuilder>物件，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-324">To asynchronously speak the contents of a <xref:System.Speech.Synthesis.PromptBuilder> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f17c-325">下列範例會建立<xref:System.Speech.Synthesis.PromptBuilder>從字串的物件，並將物件傳遞的引數為<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-325">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a text string.  
        PromptBuilder song = new PromptBuilder();  
        song.AppendText("Say the name of the song you want to hear");  
  
        // Speak the contents of the prompt synchronously.  
        synth.Speak(song);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Speak(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Speak(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="1f17c-326">要讀出的文字。</span><span class="sxs-lookup"><span data-stu-id="1f17c-326">The text to speak.</span></span></param>
        <summary><span data-ttu-id="1f17c-327">以同步方式讀出字串的內容。</span><span class="sxs-lookup"><span data-stu-id="1f17c-327">Synchronously speaks the contents of a string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-328">若要以同步方式使用字串，包含 SSML 標記，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-328">To synchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span> <span data-ttu-id="1f17c-329">若要以非同步方式使用字串的內容，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-329">To asynchronously speak the contents of a string, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f17c-330">下列範例所示<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>方法提供的最簡單的方式，來產生語音同步輸出。</span><span class="sxs-lookup"><span data-stu-id="1f17c-330">As shown in the following example, the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method provides the simplest means to generate speech output synchronously.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Speak a string synchronously.  
        synth.Speak("What is your favorite color?");  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SpeakAsync">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1f17c-331">以非同步方式從字串、<see cref="T:System.Speech.Synthesis.Prompt" /> 物件或 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件產生語音輸出。</span><span class="sxs-lookup"><span data-stu-id="1f17c-331">Generates speech output asynchronously from a string, a <see cref="T:System.Speech.Synthesis.Prompt" /> object, or a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-332"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>方法以非同步方式產生語音。</span><span class="sxs-lookup"><span data-stu-id="1f17c-332">The <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> methods generate speech asynchronously.</span></span> <span data-ttu-id="1f17c-333">方法會立即傳回而不需等待的內容<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>来說完物件。</span><span class="sxs-lookup"><span data-stu-id="1f17c-333">The methods return immediately without waiting for the content of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> object to finish speaking.</span></span> <span data-ttu-id="1f17c-334">使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>如果您的應用程式需要時執行工作，例如反白顯示文字，繪製動畫、 監視控制項或其他工作。</span><span class="sxs-lookup"><span data-stu-id="1f17c-334">Use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> if your application needs to perform tasks while speaking, for example highlight text, paint animation, monitor controls, or other tasks.</span></span>  
  
 <span data-ttu-id="1f17c-335">在這種方法，呼叫<xref:System.Speech.Synthesis.SpeechSynthesizer>可能會引發下列事件：</span><span class="sxs-lookup"><span data-stu-id="1f17c-335">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="1f17c-336"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-336"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="1f17c-337">讀出合成器的狀態變更時引發。</span><span class="sxs-lookup"><span data-stu-id="1f17c-337">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="1f17c-338"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-338"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="1f17c-339">合成器開始產生語音時引發。</span><span class="sxs-lookup"><span data-stu-id="1f17c-339">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="1f17c-340"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-340"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="1f17c-341">合成器到達字母或構成的個別音效的語音語言的字母組合，每次引發。</span><span class="sxs-lookup"><span data-stu-id="1f17c-341">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="1f17c-342"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-342"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="1f17c-343">每次引發合成器完成讀出的文字。</span><span class="sxs-lookup"><span data-stu-id="1f17c-343">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="1f17c-344"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-344"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="1f17c-345">每次引發語音的輸出，則需要在說話或用來產生語音臉部 muscles 的位置變更。</span><span class="sxs-lookup"><span data-stu-id="1f17c-345">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="1f17c-346"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-346"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="1f17c-347">合成器遇到提示字元中的書籤時所引發。</span><span class="sxs-lookup"><span data-stu-id="1f17c-347">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="1f17c-348"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-348"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="1f17c-349">讀出的語音合成器的變更時引發。</span><span class="sxs-lookup"><span data-stu-id="1f17c-349">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="1f17c-350"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-350"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span></span> <span data-ttu-id="1f17c-351">合成器完成時引發<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>作業。</span><span class="sxs-lookup"><span data-stu-id="1f17c-351">Raised when the synthesizer finishes a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation.</span></span>  
  
 <span data-ttu-id="1f17c-352">如果您的應用程式不需要執行工作時，您可以使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>方法或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>方法來以同步方式產生語音。</span><span class="sxs-lookup"><span data-stu-id="1f17c-352">If your application does not need to perform tasks while speaking, you can use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method to generate speech synchronously.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public void SpeakAsync (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsync(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsync(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt"><span data-ttu-id="1f17c-353">要讀出的內容。</span><span class="sxs-lookup"><span data-stu-id="1f17c-353">The content to speak.</span></span></param>
        <summary><span data-ttu-id="1f17c-354">以非同步方式讀出 <see cref="T:System.Speech.Synthesis.Prompt" /> 物件的內容。</span><span class="sxs-lookup"><span data-stu-id="1f17c-354">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.Prompt" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-355">您可以取消非同步說話的提示字元，搭配<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A>或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-355">You can cancel the asynchronous speaking of a prompt with the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> method.</span></span>  
  
 <span data-ttu-id="1f17c-356">若要以同步方式說出的內容<xref:System.Speech.Synthesis.Prompt>物件，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-356">To synchronously speak the contents of a <xref:System.Speech.Synthesis.Prompt> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f17c-357">下列範例會建立<xref:System.Speech.Synthesis.Prompt>從字串的物件，並將物件傳遞的引數為<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-357">The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a prompt from a string.  
      Prompt color = new Prompt("What is your favorite color?");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(color);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder"><span data-ttu-id="1f17c-358">要讀出的內容。</span><span class="sxs-lookup"><span data-stu-id="1f17c-358">The content to speak.</span></span></param>
        <summary><span data-ttu-id="1f17c-359">以非同步方式讀出 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件的內容。</span><span class="sxs-lookup"><span data-stu-id="1f17c-359">Asynchronously speaks the contents of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="1f17c-360">傳回包含要讀出之內容的物件。</span><span class="sxs-lookup"><span data-stu-id="1f17c-360">Returns the object that contains the content to speak.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-361">若要以同步方式說出的內容<xref:System.Speech.Synthesis.PromptBuilder>物件，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-361">To synchronously speak the contents of a <xref:System.Speech.Synthesis.PromptBuilder> object, use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f17c-362">下列範例會建立<xref:System.Speech.Synthesis.PromptBuilder>從字串的物件，並將物件傳遞的引數為<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-362">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Create a PromptBuilder object and append a text string.  
      PromptBuilder song = new PromptBuilder();  
      song.AppendText("Say the name of the song you want to hear");  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakAsync(song);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakAsync(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="1f17c-363">要讀出的文字。</span><span class="sxs-lookup"><span data-stu-id="1f17c-363">The text to speak.</span></span></param>
        <summary><span data-ttu-id="1f17c-364">以非同步方式讀出字串的內容。</span><span class="sxs-lookup"><span data-stu-id="1f17c-364">Asynchronously speaks the contents of a string.</span></span></summary>
        <returns><span data-ttu-id="1f17c-365">傳回包含要讀出之內容的物件。</span><span class="sxs-lookup"><span data-stu-id="1f17c-365">Returns the object that contains the content to speak.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-366">若要以非同步方式使用字串，包含 SSML 標記，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-366">To asynchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="1f17c-367">若要以同步方式使用字串的內容，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-367">To synchronously speak the contents of a string, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span> <span data-ttu-id="1f17c-368">您可以取消非同步說話的提示字元，搭配<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A>或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-368">You can cancel the asynchronous speaking of a prompt with the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f17c-369">下列範例所示<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>方法提供的最簡單的方式，來產生語音輸出以非同步的方式。</span><span class="sxs-lookup"><span data-stu-id="1f17c-369">As shown in the following example, the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> method provides the simplest means to generate speech output asynchronously.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Speech.Synthesis.SpeechSynthesizer.Speak" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancel">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancel (System.Speech.Synthesis.Prompt prompt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancel(class System.Speech.Synthesis.Prompt prompt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancel(System::Speech::Synthesis::Prompt ^ prompt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.Speech.Synthesis.Prompt" />
      </Parameters>
      <Docs>
        <param name="prompt"><span data-ttu-id="1f17c-370">要取消其語音讀出作業的內容。</span><span class="sxs-lookup"><span data-stu-id="1f17c-370">The content for which to cancel a speak operation.</span></span></param>
        <summary><span data-ttu-id="1f17c-371">取消已佇列提示的非同步合成作業。</span><span class="sxs-lookup"><span data-stu-id="1f17c-371">Cancels the asynchronous synthesis operation for a queued prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-372">您也可以使用這個方法來取消非同步說話下列作業：</span><span class="sxs-lookup"><span data-stu-id="1f17c-372">You can also use this method to cancel an asynchronous speak operation for the following:</span></span>  
  
-   <span data-ttu-id="1f17c-373">內容<xref:System.String>所指定<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-373">The contents of a <xref:System.String> specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="1f17c-374">內容<xref:System.Speech.Synthesis.PromptBuilder>所指定<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-374">The contents of a <xref:System.Speech.Synthesis.PromptBuilder> specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
-   <span data-ttu-id="1f17c-375">內容<xref:System.String>包含所指定的 SSML<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-375">The contents of a <xref:System.String> containing SSML specified by a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span>  
  
 <span data-ttu-id="1f17c-376">當您呼叫<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>，或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>，System.Speech 建立<xref:System.Speech.Synthesis.Prompt>物件，並填入內容的方法的參數，然後傳回<xref:System.Speech.Synthesis.Prompt>物件。</span><span class="sxs-lookup"><span data-stu-id="1f17c-376">When you call <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A?displayProperty=nameWithType>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>, System.Speech creates a <xref:System.Speech.Synthesis.Prompt> object and populates it with the contents of the method's parameter, and returns the <xref:System.Speech.Synthesis.Prompt> object.</span></span> <span data-ttu-id="1f17c-377">如果您保留一份傳回<xref:System.Speech.Synthesis.Prompt>，您可以傳遞到<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A>取消讀出的內容中指定<xref:System.String>或<xref:System.Speech.Synthesis.PromptBuilder>物件。</span><span class="sxs-lookup"><span data-stu-id="1f17c-377">If you retain a copy of the returned <xref:System.Speech.Synthesis.Prompt>, you can pass it into <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel%2A> to cancel speaking content specified in a <xref:System.String> or a <xref:System.Speech.Synthesis.PromptBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakAsyncCancelAll">
      <MemberSignature Language="C#" Value="public void SpeakAsyncCancelAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakAsyncCancelAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakAsyncCancelAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakAsyncCancelAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f17c-378">取消所有已佇列、非同步的語音合成作業。</span><span class="sxs-lookup"><span data-stu-id="1f17c-378">Cancels all queued, asynchronous, speech synthesis operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1f17c-379">下列範例示範使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A>取消非同步說話的提示，以便可以說出新的提示字元。</span><span class="sxs-lookup"><span data-stu-id="1f17c-379">The following example show a use of <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll%2A> to cancel the asynchronous speaking of a prompt, so that a new prompt can be spoken.</span></span> <span data-ttu-id="1f17c-380">請注意，<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>事件時引發<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>取消作業。</span><span class="sxs-lookup"><span data-stu-id="1f17c-380">Note that the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event fires when a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> operation is cancelled.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
using System.Threading;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the StateChanged event.  
      synth.StateChanged += new EventHandler<StateChangedEventArgs>(synth_StateChanged);  
  
      // Subscribe to the SpeakProgress event.  
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Subscribe to the SpeakCompleted event.  
      synth.SpeakCompleted += new EventHandler<SpeakCompletedEventArgs>(synth_SpeakCompleted);  
  
      // Begin speaking a text string asynchronously.  
      synth.SpeakAsync("Speech is an effective and natural way for people to interact with applications, " +  
        "complementing or even replacing the use of mice, keyboards, controllers, and gestures.");  
  
      // Speak for four seconds.  
      Thread.Sleep(4000);  
  
      // Cancel the SpeakAsync operation and wait one second.  
      synth.SpeakAsyncCancelAll();  
      Thread.Sleep(1000);  
  
      // Speak a new text string.  
      synth.Speak("An urgent email message has arrived. Do you want to hear it?");  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write to the console when the SpeakAsync operation has been cancelled.  
    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  
    {  
      Console.WriteLine("\nThe SpeakAsync operation was cancelled!!");  
    }  
  
    // When it changes, write the state of the SpeechSynthesizer to the console.  
    static void synth_StateChanged(object sender, StateChangedEventArgs e)  
    {  
      Console.WriteLine("\nSynthesizer State: {0}    Previous State: {1}\n", e.State, e.PreviousState);  
    }  
  
    // Write the text being spoken by the SpeechSynthesizer to the console.  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }      
  }    
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakCompleted As EventHandler(Of SpeakCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakCompletedEventArgs ^&gt; ^ SpeakCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f17c-381"><see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 完成讀出提示時引發。</span><span class="sxs-lookup"><span data-stu-id="1f17c-381">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> completes the speaking of a prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-382"><xref:System.Speech.Synthesis.SpeechSynthesizer>引發<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>事件完成後的任何<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-382">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event at the completion of any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> or  <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="1f17c-383"><xref:System.Speech.Synthesis.SpeakCompletedEventArgs>類別沒有屬性，而且不傳回資料來源<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="1f17c-383">The <xref:System.Speech.Synthesis.SpeakCompletedEventArgs> class has no properties, and does not return data from the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span> <span data-ttu-id="1f17c-384">它可讓應用程式作者撰寫事件處理常式，如<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="1f17c-384">It is provided to enable application authors to write event handlers for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Synthesis.SpeakCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SpeakProgress">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakProgress As EventHandler(Of SpeakProgressEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakProgressEventArgs ^&gt; ^ SpeakProgress;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f17c-385">在 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 說出提示的每個字之後引發。</span><span class="sxs-lookup"><span data-stu-id="1f17c-385">Raised after the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> speaks each individual word of a prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-386"><xref:System.Speech.Synthesis.SpeechSynthesizer>引發這個事件，它使用任何的提示字元中，說出每個新字<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>，或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-386">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event for each new word that it speaks in a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span> <span data-ttu-id="1f17c-387">如需範例和相關聯的事件資料的詳細資訊，請參閱<xref:System.Speech.Synthesis.SpeakProgressEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-387">For an example and more information about data associated with the event, see <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakSsml">
      <MemberSignature Language="C#" Value="public void SpeakSsml (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SpeakSsml(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SpeakSsml (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SpeakSsml(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="1f17c-388">要讀出的 SSML 字串。</span><span class="sxs-lookup"><span data-stu-id="1f17c-388">The SSML string to speak.</span></span></param>
        <summary><span data-ttu-id="1f17c-389">以同步方式讀出包含 SSML 標記的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="1f17c-389">Synchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-390">內容`textToSpeak`參數必須包含`speak`項目且必須符合[語音合成標記語言 (SSML) 1.0 版](http://go.microsoft.com/fwlink/?LinkId=201763)。</span><span class="sxs-lookup"><span data-stu-id="1f17c-390">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="1f17c-391">如需詳細資訊，請參閱[語音合成標記語言參考](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94)。</span><span class="sxs-lookup"><span data-stu-id="1f17c-391">For more information, see [Speech Synthesis Markup Language Reference](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
 <span data-ttu-id="1f17c-392">若要以非同步方式使用字串，包含 SSML 標記，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-392">To asynchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> method.</span></span> <span data-ttu-id="1f17c-393">您可以使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>起始同步說話不包含 SSML 標記的字串。</span><span class="sxs-lookup"><span data-stu-id="1f17c-393">You can use <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> to initiate the synchronous speaking of a string that does not contain SSML markup.</span></span>  
  
 <span data-ttu-id="1f17c-394">在這種方法，呼叫<xref:System.Speech.Synthesis.SpeechSynthesizer>可能會引發下列事件：</span><span class="sxs-lookup"><span data-stu-id="1f17c-394">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="1f17c-395"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-395"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="1f17c-396">讀出合成器的狀態變更時引發。</span><span class="sxs-lookup"><span data-stu-id="1f17c-396">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="1f17c-397"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-397"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="1f17c-398">合成器開始產生語音時引發。</span><span class="sxs-lookup"><span data-stu-id="1f17c-398">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="1f17c-399"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-399"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="1f17c-400">合成器到達字母或構成的個別音效的語音語言的字母組合，每次引發。</span><span class="sxs-lookup"><span data-stu-id="1f17c-400">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="1f17c-401"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-401"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="1f17c-402">每次引發合成器完成讀出的文字。</span><span class="sxs-lookup"><span data-stu-id="1f17c-402">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="1f17c-403"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-403"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="1f17c-404">每次引發語音的輸出，則需要在說話或用來產生語音臉部 muscles 的位置變更。</span><span class="sxs-lookup"><span data-stu-id="1f17c-404">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="1f17c-405"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-405"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="1f17c-406">合成器遇到提示字元中的書籤時所引發。</span><span class="sxs-lookup"><span data-stu-id="1f17c-406">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="1f17c-407"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-407"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="1f17c-408">讀出的語音合成器的變更時引發。</span><span class="sxs-lookup"><span data-stu-id="1f17c-408">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
 <span data-ttu-id="1f17c-409"><xref:System.Speech.Synthesis.SpeechSynthesizer>不會引發<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>事件處理<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-409">The <xref:System.Speech.Synthesis.SpeechSynthesizer> does not raise the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted> event while processing the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f17c-410">下列範例會呈現日期的日期，月、 日、 年的順序為 1/29/2009年。</span><span class="sxs-lookup"><span data-stu-id="1f17c-410">The following example renders the date 1/29/2009 as a date, in month, day, year order.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakSsml(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakSsmlAsync">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.Prompt SpeakSsmlAsync (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Synthesis.Prompt SpeakSsmlAsync(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SpeakSsmlAsync (textToSpeak As String) As Prompt" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Synthesis::Prompt ^ SpeakSsmlAsync(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.Prompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="1f17c-411">要讀出的 SMML 標記。</span><span class="sxs-lookup"><span data-stu-id="1f17c-411">The SMML markup to speak.</span></span></param>
        <summary><span data-ttu-id="1f17c-412">以非同步方式讀出包含 SSML 標記的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="1f17c-412">Asynchronously speaks a <see cref="T:System.String" /> that contains SSML markup.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-413">內容`textToSpeak`參數必須包含`speak`項目且必須符合[語音合成標記語言 (SSML) 1.0 版](http://go.microsoft.com/fwlink/?LinkId=201763)。</span><span class="sxs-lookup"><span data-stu-id="1f17c-413">The contents of the `textToSpeak` parameter must include a `speak` element and must conform to the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763).</span></span> <span data-ttu-id="1f17c-414">如需詳細資訊，請參閱[語音合成標記語言參考](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94)。</span><span class="sxs-lookup"><span data-stu-id="1f17c-414">For more information, see [Speech Synthesis Markup Language Reference](http://msdn.microsoft.com/library/0c51279e-84d2-4f73-a924-8832039abf94).</span></span>  
  
 <span data-ttu-id="1f17c-415">若要以同步方式使用字串，包含 SSML 標記，使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-415">To synchronously speak a string that contains SSML markup, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method.</span></span> <span data-ttu-id="1f17c-416">您可以使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>起始非同步說話不包含 SSML 標記的字串。</span><span class="sxs-lookup"><span data-stu-id="1f17c-416">You can use <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A> to initiate the asynchronous speaking of a string that does not contain SSML markup.</span></span>  
  
 <span data-ttu-id="1f17c-417">在這種方法，呼叫<xref:System.Speech.Synthesis.SpeechSynthesizer>可能會引發下列事件：</span><span class="sxs-lookup"><span data-stu-id="1f17c-417">During a call to this method, the <xref:System.Speech.Synthesis.SpeechSynthesizer> can raise the following events:</span></span>  
  
-   <span data-ttu-id="1f17c-418"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-418"><xref:System.Speech.Synthesis.SpeechSynthesizer.StateChanged>.</span></span> <span data-ttu-id="1f17c-419">讀出合成器的狀態變更時引發。</span><span class="sxs-lookup"><span data-stu-id="1f17c-419">Raised when the speaking state of the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="1f17c-420"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-420"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>.</span></span> <span data-ttu-id="1f17c-421">合成器開始產生語音時引發。</span><span class="sxs-lookup"><span data-stu-id="1f17c-421">Raised when the synthesizer begins generating speech.</span></span>  
  
-   <span data-ttu-id="1f17c-422"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-422"><xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached>.</span></span> <span data-ttu-id="1f17c-423">合成器到達字母或構成的個別音效的語音語言的字母組合，每次引發。</span><span class="sxs-lookup"><span data-stu-id="1f17c-423">Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.</span></span>  
  
-   <span data-ttu-id="1f17c-424"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-424"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>.</span></span> <span data-ttu-id="1f17c-425">每次引發合成器完成讀出的文字。</span><span class="sxs-lookup"><span data-stu-id="1f17c-425">Raised each time the synthesizer completes speaking a word.</span></span>  
  
-   <span data-ttu-id="1f17c-426"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-426"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>.</span></span> <span data-ttu-id="1f17c-427">每次引發語音的輸出，則需要在說話或用來產生語音臉部 muscles 的位置變更。</span><span class="sxs-lookup"><span data-stu-id="1f17c-427">Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.</span></span>  
  
-   <span data-ttu-id="1f17c-428"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-428"><xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>.</span></span> <span data-ttu-id="1f17c-429">合成器遇到提示字元中的書籤時所引發。</span><span class="sxs-lookup"><span data-stu-id="1f17c-429">Raised when the synthesizer encounters a bookmark in a prompt.</span></span>  
  
-   <span data-ttu-id="1f17c-430"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-430"><xref:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange>.</span></span> <span data-ttu-id="1f17c-431">讀出的語音合成器的變更時引發。</span><span class="sxs-lookup"><span data-stu-id="1f17c-431">Raised when the speaking voice for the synthesizer changes.</span></span>  
  
-   <span data-ttu-id="1f17c-432"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-432"><xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted>.</span></span> <span data-ttu-id="1f17c-433">合成器完成處理時，引發<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>作業。</span><span class="sxs-lookup"><span data-stu-id="1f17c-433">Raised when the synthesizer finishes processing a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> operation.</span></span>  
  
 <span data-ttu-id="1f17c-434">如果您的應用程式 dos 不需要執行工作時，您可以使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>方法來以同步方式產生語音。</span><span class="sxs-lookup"><span data-stu-id="1f17c-434">If your application dos not need to perform tasks while speaking, you can use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> or the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A> method to generate speech synchronously.</span></span>  
  
   
  
## Examples  
  
```  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer();  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Build an SSML prompt in a string.  
      string str = "<speak version=\"1.0\"";  
      str += " xmlns=\"http://www.w3.org/2001/10/synthesis\"";  
      str += " xml:lang=\"en-US\">";  
      str += "<say-as type=\"date:mdy\"> 1/29/2009 </say-as>";  
      str += "</speak>";  
  
      // Speak the contents of the prompt asynchronously.  
      synth.SpeakSsmlAsync(str);  
  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="SpeakStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeakStarted As EventHandler(Of SpeakStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::SpeakStartedEventArgs ^&gt; ^ SpeakStarted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f17c-435"><see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 開始讀出提示時引發。</span><span class="sxs-lookup"><span data-stu-id="1f17c-435">Raised when the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> begins the speaking of a prompt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-436"><xref:System.Speech.Synthesis.SpeechSynthesizer>引發這個事件時就會開始處理使用的任何提示<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>，或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-436">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event when it begins processing a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="1f17c-437"><xref:System.Speech.Synthesis.SpeakStartedEventArgs>類別沒有屬性，而且不傳回資料來源<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>事件。</span><span class="sxs-lookup"><span data-stu-id="1f17c-437">The <xref:System.Speech.Synthesis.SpeakStartedEventArgs> class has no properties, and does not return data from the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> event.</span></span> <span data-ttu-id="1f17c-438">它可讓應用程式作者撰寫事件處理常式，如<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted>事件。</span><span class="sxs-lookup"><span data-stu-id="1f17c-438">It is provided to enable application authors to write event handlers for the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.SynthesizerState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.SynthesizerState State" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As SynthesizerState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::SynthesizerState State { System::Speech::Synthesis::SynthesizerState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.SynthesizerState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f17c-439">取得 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 物件目前的讀出狀態。</span><span class="sxs-lookup"><span data-stu-id="1f17c-439">Gets the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <value><span data-ttu-id="1f17c-440">傳回 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 物件目前的讀出狀態。</span><span class="sxs-lookup"><span data-stu-id="1f17c-440">Returns the current speaking state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-441">若要取得的新狀態<xref:System.Speech.Synthesis.SpeechSynthesizer>變更之後，請使用<xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A>屬性<xref:System.Speech.Synthesis.StateChangedEventArgs>類別。</span><span class="sxs-lookup"><span data-stu-id="1f17c-441">To get the new state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> after it changes, use the <xref:System.Speech.Synthesis.StateChangedEventArgs.State%2A> property of the <xref:System.Speech.Synthesis.StateChangedEventArgs> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f17c-442">下列範例說明的狀態<xref:System.Speech.Synthesis.SpeechSynthesizer>之前、 期間和之後就在提示字元。</span><span class="sxs-lookup"><span data-stu-id="1f17c-442">The following example illustrates the state of the <xref:System.Speech.Synthesis.SpeechSynthesizer> before, during, and after speaking a prompt.</span></span>  
  
```csharp  
using System;  
using System.Threading;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      SpeechSynthesizer synth = new SpeechSynthesizer() ;  
  
      // Configure the audio output.   
      synth.SetOutputToDefaultAudioDevice();  
  
      // Subscribe to the SpeakProgress event.         
      synth.SpeakProgress += new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
      // Write the state of the SpeechSynthesizer to the console.  
      Console.WriteLine("Current Synthesizer state: " + synth.State + "\n");  
  
      // Speak a string asynchronously.  
      synth.SpeakAsync("What is your favorite color?");  
  
      // Write the state of the SpeechSynthesizer to the console while it is speaking.  
      Thread.Sleep(1000);  
      Console.WriteLine("\n - Current Synthesizer state: " + synth.State + " - \n");  
  
      // Write the state of the SpeechSynthesizer to the console after it is done speaking.  
      Thread.Sleep(2000);  
      Console.WriteLine("\nCurrent Synthesizer state: " + synth.State);  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine(e.Text);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChanged As EventHandler(Of StateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::StateChangedEventArgs ^&gt; ^ StateChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f17c-443">變更 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 的狀態時引發。</span><span class="sxs-lookup"><span data-stu-id="1f17c-443">Raised when the state of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-444"><xref:System.Speech.Synthesis.SpeechSynthesizer>引發這個事件時它說話<xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A>變更。</span><span class="sxs-lookup"><span data-stu-id="1f17c-444">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event when its speaking <xref:System.Speech.Synthesis.SpeechSynthesizer.State%2A> changes.</span></span> <span data-ttu-id="1f17c-445">如需範例和相關聯的事件資料的詳細資訊，請參閱<xref:System.Speech.Synthesis.StateChangedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-445">For an example and more information about data associated with the event, see <xref:System.Speech.Synthesis.StateChangedEventArgs>.</span></span>  
  
 <span data-ttu-id="1f17c-446">若要暫停及繼續語音合成器，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A>和<xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-446">To pause and resume speech synthesis, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.Pause%2A> and <xref:System.Speech.Synthesis.SpeechSynthesizer.Resume%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="VisemeReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VisemeReached As EventHandler(Of VisemeReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VisemeReachedEventArgs ^&gt; ^ VisemeReached;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f17c-447">到達視素 (Viseme) 時引發。</span><span class="sxs-lookup"><span data-stu-id="1f17c-447">Raised when a viseme is reached.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-448">Viseme 時說音素基本說話和圖示的位置。</span><span class="sxs-lookup"><span data-stu-id="1f17c-448">A viseme is the basic position of the mouth and face when pronouncing a phoneme.</span></span> <span data-ttu-id="1f17c-449">Visemes 是音素的視覺化呈現。</span><span class="sxs-lookup"><span data-stu-id="1f17c-449">Visemes are visual representations of phonemes.</span></span>  
  
 <span data-ttu-id="1f17c-450">System.Speech 支援 21 visemes 美式英文，其中每一個都對應至一或多個的音素。</span><span class="sxs-lookup"><span data-stu-id="1f17c-450">System.Speech supports 21 visemes for US English, each of which corresponds to one or more phonemes.</span></span>  <span data-ttu-id="1f17c-451"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> 當達到新音素具有不同的對應 viseme 比前一個音素達到時，會引發事件。</span><span class="sxs-lookup"><span data-stu-id="1f17c-451"><xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> events are raised when a new phoneme reached has a different corresponding viseme than the previous phoneme reached.</span></span> <span data-ttu-id="1f17c-452">因為某些 visemes 代表一個以上的音素<xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>如果下一個音素到達對應至為前一個音素相同 viseme 不產生事件。</span><span class="sxs-lookup"><span data-stu-id="1f17c-452">Since some visemes represent more than one phoneme, a <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> event is not generated if the next phoneme reached corresponds to the same viseme as the previous phoneme.</span></span> <span data-ttu-id="1f17c-453">例如，對於口語 「 此區域 」， <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> "this"中的"s"和"z"「 區域 」 中的就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="1f17c-453">For example, for the spoken words "this zone", a <xref:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached> event is raised for the "s" in "this" and the "z" in "zone".</span></span> <span data-ttu-id="1f17c-454">不過，<xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached>因為它會對應至相同的 viseme 為"this"中的"s"，"z"中 「 區域 」 不引發事件。</span><span class="sxs-lookup"><span data-stu-id="1f17c-454">However, a <xref:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached> event is not raised for the "z" in "zone" because it corresponds to the same viseme as the "s" in "this".</span></span>  
  
 <span data-ttu-id="1f17c-455">以下是 21 SAPI 音素轉換和對應於 U.S.english viseme 音素群組的清單。</span><span class="sxs-lookup"><span data-stu-id="1f17c-455">The following is a list of the 21 SAPI phonemes and phoneme groups that correspond to a viseme in US English.</span></span>  
  
|<span data-ttu-id="1f17c-456">Viseme</span><span class="sxs-lookup"><span data-stu-id="1f17c-456">Viseme</span></span>|<span data-ttu-id="1f17c-457">Phoneme(s)</span><span class="sxs-lookup"><span data-stu-id="1f17c-457">Phoneme(s)</span></span>|  
|------------|------------------|  
|<span data-ttu-id="1f17c-458">0</span><span class="sxs-lookup"><span data-stu-id="1f17c-458">0</span></span>|<span data-ttu-id="1f17c-459">無回應</span><span class="sxs-lookup"><span data-stu-id="1f17c-459">silence</span></span>|  
|<span data-ttu-id="1f17c-460">1</span><span class="sxs-lookup"><span data-stu-id="1f17c-460">1</span></span>|<span data-ttu-id="1f17c-461">ae，ax，ah</span><span class="sxs-lookup"><span data-stu-id="1f17c-461">ae, ax, ah</span></span>|  
|<span data-ttu-id="1f17c-462">2</span><span class="sxs-lookup"><span data-stu-id="1f17c-462">2</span></span>|<span data-ttu-id="1f17c-463">aa</span><span class="sxs-lookup"><span data-stu-id="1f17c-463">aa</span></span>|  
|<span data-ttu-id="1f17c-464">3</span><span class="sxs-lookup"><span data-stu-id="1f17c-464">3</span></span>|<span data-ttu-id="1f17c-465">ao</span><span class="sxs-lookup"><span data-stu-id="1f17c-465">ao</span></span>|  
|<span data-ttu-id="1f17c-466">4</span><span class="sxs-lookup"><span data-stu-id="1f17c-466">4</span></span>|<span data-ttu-id="1f17c-467">金鑰，eh，喔</span><span class="sxs-lookup"><span data-stu-id="1f17c-467">ey, eh, uh</span></span>|  
|<span data-ttu-id="1f17c-468">5</span><span class="sxs-lookup"><span data-stu-id="1f17c-468">5</span></span>|<span data-ttu-id="1f17c-469">er</span><span class="sxs-lookup"><span data-stu-id="1f17c-469">er</span></span>|  
|<span data-ttu-id="1f17c-470">6</span><span class="sxs-lookup"><span data-stu-id="1f17c-470">6</span></span>|<span data-ttu-id="1f17c-471">y、 iy、 kartris、 ix</span><span class="sxs-lookup"><span data-stu-id="1f17c-471">y, iy, ih, ix</span></span>|  
|<span data-ttu-id="1f17c-472">7</span><span class="sxs-lookup"><span data-stu-id="1f17c-472">7</span></span>|<span data-ttu-id="1f17c-473">w、 uw</span><span class="sxs-lookup"><span data-stu-id="1f17c-473">w, uw</span></span>|  
|<span data-ttu-id="1f17c-474">8</span><span class="sxs-lookup"><span data-stu-id="1f17c-474">8</span></span>|<span data-ttu-id="1f17c-475">ow</span><span class="sxs-lookup"><span data-stu-id="1f17c-475">ow</span></span>|  
|<span data-ttu-id="1f17c-476">9</span><span class="sxs-lookup"><span data-stu-id="1f17c-476">9</span></span>|<span data-ttu-id="1f17c-477">aw</span><span class="sxs-lookup"><span data-stu-id="1f17c-477">aw</span></span>|  
|<span data-ttu-id="1f17c-478">10</span><span class="sxs-lookup"><span data-stu-id="1f17c-478">10</span></span>|<span data-ttu-id="1f17c-479">oy</span><span class="sxs-lookup"><span data-stu-id="1f17c-479">oy</span></span>|  
|<span data-ttu-id="1f17c-480">11</span><span class="sxs-lookup"><span data-stu-id="1f17c-480">11</span></span>|<span data-ttu-id="1f17c-481">結果</span><span class="sxs-lookup"><span data-stu-id="1f17c-481">ay</span></span>|  
|<span data-ttu-id="1f17c-482">12</span><span class="sxs-lookup"><span data-stu-id="1f17c-482">12</span></span>|<span data-ttu-id="1f17c-483">h</span><span class="sxs-lookup"><span data-stu-id="1f17c-483">h</span></span>|  
|<span data-ttu-id="1f17c-484">13</span><span class="sxs-lookup"><span data-stu-id="1f17c-484">13</span></span>|<span data-ttu-id="1f17c-485">r</span><span class="sxs-lookup"><span data-stu-id="1f17c-485">r</span></span>|  
|<span data-ttu-id="1f17c-486">14</span><span class="sxs-lookup"><span data-stu-id="1f17c-486">14</span></span>|<span data-ttu-id="1f17c-487">l</span><span class="sxs-lookup"><span data-stu-id="1f17c-487">l</span></span>|  
|<span data-ttu-id="1f17c-488">15</span><span class="sxs-lookup"><span data-stu-id="1f17c-488">15</span></span>|<span data-ttu-id="1f17c-489">s, z</span><span class="sxs-lookup"><span data-stu-id="1f17c-489">s, z</span></span>|  
|<span data-ttu-id="1f17c-490">16</span><span class="sxs-lookup"><span data-stu-id="1f17c-490">16</span></span>|<span data-ttu-id="1f17c-491">sh，ch、 jh、 zh-chs 和</span><span class="sxs-lookup"><span data-stu-id="1f17c-491">sh, ch, jh, zh</span></span>|  
|<span data-ttu-id="1f17c-492">17</span><span class="sxs-lookup"><span data-stu-id="1f17c-492">17</span></span>|<span data-ttu-id="1f17c-493">th、 dh</span><span class="sxs-lookup"><span data-stu-id="1f17c-493">th, dh</span></span>|  
|<span data-ttu-id="1f17c-494">18</span><span class="sxs-lookup"><span data-stu-id="1f17c-494">18</span></span>|<span data-ttu-id="1f17c-495">f, v</span><span class="sxs-lookup"><span data-stu-id="1f17c-495">f, v</span></span>|  
|<span data-ttu-id="1f17c-496">19</span><span class="sxs-lookup"><span data-stu-id="1f17c-496">19</span></span>|<span data-ttu-id="1f17c-497">d、 t、 n</span><span class="sxs-lookup"><span data-stu-id="1f17c-497">d, t, n</span></span>|  
|<span data-ttu-id="1f17c-498">20</span><span class="sxs-lookup"><span data-stu-id="1f17c-498">20</span></span>|<span data-ttu-id="1f17c-499">k、 g、 ng</span><span class="sxs-lookup"><span data-stu-id="1f17c-499">k, g, ng</span></span>|  
|<span data-ttu-id="1f17c-500">21</span><span class="sxs-lookup"><span data-stu-id="1f17c-500">21</span></span>|<span data-ttu-id="1f17c-501">p、 b、 m</span><span class="sxs-lookup"><span data-stu-id="1f17c-501">p, b, m</span></span>|  
  
 <span data-ttu-id="1f17c-502">如需與相關聯的資料`VisemeReached`事件，請參閱<xref:System.Speech.Synthesis.VisemeReachedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-502">For information about data associated with the `VisemeReached` event, see <xref:System.Speech.Synthesis.VisemeReachedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Voice">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.VoiceInfo Voice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Synthesis.VoiceInfo Voice" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Voice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Voice As VoiceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::VoiceInfo ^ Voice { System::Speech::Synthesis::VoiceInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.VoiceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f17c-503">取得目前 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 物件之語音的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="1f17c-503">Gets information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <value><span data-ttu-id="1f17c-504">傳回目前 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 物件之語音的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="1f17c-504">Returns information about the current voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-505">當您初始化新<xref:System.Speech.Synthesis.SpeechSynthesizer>，它會使用預設系統語音。</span><span class="sxs-lookup"><span data-stu-id="1f17c-505">When you initialize a new <xref:System.Speech.Synthesis.SpeechSynthesizer>, it uses the default system voice.</span></span> <span data-ttu-id="1f17c-506">若要設定<xref:System.Speech.Synthesis.SpeechSynthesizer>物件使用其中一個已安裝的語音合成聲音，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>或<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-506">To configure the <xref:System.Speech.Synthesis.SpeechSynthesizer> object to use one of the installed speech synthesis voices, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> method.</span></span> <span data-ttu-id="1f17c-507">若要取得的語音已安裝的資訊，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>類別。</span><span class="sxs-lookup"><span data-stu-id="1f17c-507">To get information about which voices are installed, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method and the <xref:System.Speech.Synthesis.VoiceInfo> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f17c-508">下列範例會初始化的執行個體<xref:System.Speech.Synthesis.SpeechSynthesizer>和取得目前的語音相關資訊。</span><span class="sxs-lookup"><span data-stu-id="1f17c-508">The following example initializes an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer> and gets information about the current voice.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Speech.Synthesis;  
using System.Speech.AudioFormat;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Get information about supported audio formats.  
        string AudioFormats = "";  
        foreach (SpeechAudioFormatInfo fmt in synth.Voice.SupportedAudioFormats)  
        {  
          AudioFormats += String.Format("{0}\n",  
          fmt.EncodingFormat.ToString());  
        }  
  
        // Write information about the voice to the console.  
        Console.WriteLine(" Name:          " + synth.Voice.Name);  
        Console.WriteLine(" Culture:       " + synth.Voice.Culture);  
        Console.WriteLine(" Age:           " + synth.Voice.Age);  
        Console.WriteLine(" Gender:        " + synth.Voice.Gender);  
        Console.WriteLine(" Description:   " + synth.Voice.Description);  
        Console.WriteLine(" ID:            " + synth.Voice.Id);  
        if (synth.Voice.SupportedAudioFormats.Count != 0)  
        {  
          Console.WriteLine(" Audio formats: " + AudioFormats);  
        }  
        else  
        {  
          Console.WriteLine(" No supported audio formats found");  
        }  
  
        // Get additional information about the voice.  
        string AdditionalInfo = "";  
        foreach (string key in synth.Voice.AdditionalInfo.Keys)  
        {  
          AdditionalInfo += String.Format("  {0}: {1}\n",  
            key, synth.Voice.AdditionalInfo[key]);  
        }  
  
        Console.WriteLine(" Additional Info - " + AdditionalInfo);  
        Console.WriteLine();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <altmember cref="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <altmember cref="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </Docs>
    </Member>
    <Member MemberName="VoiceChange">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VoiceChange As EventHandler(Of VoiceChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Synthesis::VoiceChangeEventArgs ^&gt; ^ VoiceChange;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f17c-509">變更 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 的語音時引發。</span><span class="sxs-lookup"><span data-stu-id="1f17c-509">Raised when the voice of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f17c-510">如需範例和資料與事件相關聯的相關資訊，請參閱<xref:System.Speech.Synthesis.VoiceChangeEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="1f17c-510">For an example and information about data associated with the event, see <xref:System.Speech.Synthesis.VoiceChangeEventArgs>.</span></span>  
  
 <span data-ttu-id="1f17c-511">您可以變更語音的<xref:System.Speech.Synthesis.SpeechSynthesizer>會使用與任何一<xref:System.Speech.Synthesis.PromptBuilder>的<xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>方法或<xref:System.Speech.Synthesis.SpeechSynthesizer>的<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A>或<xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1f17c-511">You can change the voice that the <xref:System.Speech.Synthesis.SpeechSynthesizer> uses with any of the <xref:System.Speech.Synthesis.PromptBuilder>'s <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> methods or the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice%2A> or <xref:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="" />
      </Docs>
    </Member>
    <Member MemberName="Volume">
      <MemberSignature Language="C#" Value="public int Volume { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Volume" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeechSynthesizer.Volume" />
      <MemberSignature Language="VB.NET" Value="Public Property Volume As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Volume { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f17c-512">取得或設定 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 物件的輸出音量。</span><span class="sxs-lookup"><span data-stu-id="1f17c-512">Get or sets the output volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> object.</span></span></summary>
        <value><span data-ttu-id="1f17c-513">傳回 <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" /> 的音量，從 0 到 100。</span><span class="sxs-lookup"><span data-stu-id="1f17c-513">Returns the volume of the <see cref="T:System.Speech.Synthesis.SpeechSynthesizer" />, from 0 through 100.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1f17c-514">下列範例會設定的磁碟區<xref:System.Speech.Synthesis.SpeechSynthesizer>的音訊輸出合成的語音和 WAV 檔。</span><span class="sxs-lookup"><span data-stu-id="1f17c-514">The following example sets the volume of the <xref:System.Speech.Synthesis.SpeechSynthesizer>'s audio output for the synthesized voice and the WAV file.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Set the volume of the SpeechSynthesizer's ouput.  
        synth.Volume = 60;  
  
        // Build a prompt containing recorded audio and synthesized speech.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendAudio("C:\\Test\\WelcomeToContosoRadio.wav");  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>